#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_75)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_75) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 75 0000
        gbc.setState(0x644a, 0xe64c, 0xa2c0, 0x2a0a, 0x977a, 0x4311, 0x0, 0x1);
        gbc.writeMem(0x644a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe64c);
        EXPECT(gbc.pc(), 0x644c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0001
        gbc.setState(0x65e6, 0x7b08, 0xc3b0, 0x9bad, 0xecd8, 0x1a63, 0x1, 0x0);
        gbc.writeMem(0x65e6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7b08);
        EXPECT(gbc.pc(), 0x65e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0002
        gbc.setState(0xad9, 0x947, 0xebb0, 0x7712, 0xc98d, 0xc838, 0x0, 0x0);
        gbc.writeMem(0xad9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x947);
        EXPECT(gbc.pc(), 0xadb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0003
        gbc.setState(0xed59, 0x64c9, 0xe7c0, 0x49c2, 0xf6d4, 0xdd9e, 0x1, 0x1);
        gbc.writeMem(0xed59, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x64c9);
        EXPECT(gbc.pc(), 0xed5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed59), 0xcb);
        EXPECT(gbc.readMem(0xed5a), 0x75);
        // CB 75 0004
        gbc.setState(0xc329, 0x4e3b, 0xe5b0, 0x3d2b, 0x47a2, 0x22ae, 0x0, 0x1);
        gbc.writeMem(0xc329, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4e3b);
        EXPECT(gbc.pc(), 0xc32b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc329), 0xcb);
        EXPECT(gbc.readMem(0xc32a), 0x75);
        // CB 75 0005
        gbc.setState(0x9b06, 0x76f3, 0x7650, 0x1d5f, 0xb3a1, 0x42ef, 0x0, 0x1);
        gbc.writeMem(0x9b06, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x76f3);
        EXPECT(gbc.pc(), 0x9b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b06), 0xcb);
        EXPECT(gbc.readMem(0x9b07), 0x75);
        // CB 75 0006
        gbc.setState(0xe68e, 0xc782, 0x3250, 0x322d, 0xe537, 0x7e45, 0x1, 0x1);
        gbc.writeMem(0xe68e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc782);
        EXPECT(gbc.pc(), 0xe690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68e), 0xcb);
        EXPECT(gbc.readMem(0xe68f), 0x75);
        // CB 75 0007
        gbc.setState(0xd5dc, 0x7ef7, 0xdbb0, 0xd2d5, 0x1da4, 0xa596, 0x0, 0x1);
        gbc.writeMem(0xd5dc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7ef7);
        EXPECT(gbc.pc(), 0xd5de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5dc), 0xcb);
        EXPECT(gbc.readMem(0xd5dd), 0x75);
        // CB 75 0008
        gbc.setState(0x4b67, 0x4e87, 0x7bf0, 0xdae0, 0x7678, 0x16d4, 0x0, 0x0);
        gbc.writeMem(0x4b67, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4e87);
        EXPECT(gbc.pc(), 0x4b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0009
        gbc.setState(0xeff, 0x9da1, 0x97c0, 0x89b3, 0xbd66, 0xa2a3, 0x1, 0x0);
        gbc.writeMem(0xeff, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9da1);
        EXPECT(gbc.pc(), 0xf01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 000A
        gbc.setState(0x6276, 0x43d2, 0xbf80, 0xf9a6, 0x5d79, 0xd64e, 0x0, 0x1);
        gbc.writeMem(0x6276, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x43d2);
        EXPECT(gbc.pc(), 0x6278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 000B
        gbc.setState(0x225, 0xa48f, 0xd9c0, 0x4cdc, 0xd9d6, 0x531e, 0x0, 0x0);
        gbc.writeMem(0x225, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa48f);
        EXPECT(gbc.pc(), 0x227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 000C
        gbc.setState(0xca89, 0x64d9, 0x3ef0, 0x5ed9, 0x6a32, 0x9d82, 0x1, 0x1);
        gbc.writeMem(0xca89, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x64d9);
        EXPECT(gbc.pc(), 0xca8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca89), 0xcb);
        EXPECT(gbc.readMem(0xca8a), 0x75);
        // CB 75 000D
        gbc.setState(0xc7e5, 0x9f0f, 0x2d20, 0x8ebb, 0x766a, 0xd59f, 0x1, 0x1);
        gbc.writeMem(0xc7e5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9f0f);
        EXPECT(gbc.pc(), 0xc7e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e5), 0xcb);
        EXPECT(gbc.readMem(0xc7e6), 0x75);
        // CB 75 000E
        gbc.setState(0xa2fa, 0xa450, 0x51f0, 0xfcf3, 0xf1e1, 0x8094, 0x1, 0x0);
        gbc.writeMem(0xa2fa, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa450);
        EXPECT(gbc.pc(), 0xa2fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2fa), 0xcb);
        EXPECT(gbc.readMem(0xa2fb), 0x75);
        // CB 75 000F
        gbc.setState(0x7693, 0xbc77, 0xf800, 0xa881, 0x5684, 0x14b8, 0x0, 0x1);
        gbc.writeMem(0x7693, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbc77);
        EXPECT(gbc.pc(), 0x7695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0010
        gbc.setState(0x7dbd, 0x4658, 0xf730, 0xe583, 0x91ba, 0x9ec9, 0x1, 0x1);
        gbc.writeMem(0x7dbd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4658);
        EXPECT(gbc.pc(), 0x7dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0011
        gbc.setState(0x38fc, 0x684a, 0xe330, 0x7d8f, 0x3ba9, 0xb047, 0x0, 0x1);
        gbc.writeMem(0x38fc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x684a);
        EXPECT(gbc.pc(), 0x38fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0012
        gbc.setState(0x78a0, 0x1e2a, 0xb390, 0xdf88, 0xb1a1, 0xa4e9, 0x0, 0x0);
        gbc.writeMem(0x78a0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1e2a);
        EXPECT(gbc.pc(), 0x78a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0013
        gbc.setState(0x8843, 0x8965, 0x8380, 0x763c, 0xb353, 0x3f70, 0x1, 0x1);
        gbc.writeMem(0x8843, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8965);
        EXPECT(gbc.pc(), 0x8845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8843), 0xcb);
        EXPECT(gbc.readMem(0x8844), 0x75);
        // CB 75 0014
        gbc.setState(0x5d6c, 0x2a89, 0x95b0, 0xd39c, 0x96de, 0xb713, 0x1, 0x1);
        gbc.writeMem(0x5d6c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2a89);
        EXPECT(gbc.pc(), 0x5d6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0015
        gbc.setState(0xe78d, 0xefc8, 0x3950, 0xf935, 0xbd96, 0x1e47, 0x1, 0x0);
        gbc.writeMem(0xe78d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xefc8);
        EXPECT(gbc.pc(), 0xe78f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe78d), 0xcb);
        EXPECT(gbc.readMem(0xe78e), 0x75);
        // CB 75 0017
        gbc.setState(0xa0e9, 0x570f, 0x1460, 0x3ef5, 0x3d25, 0x3867, 0x0, 0x0);
        gbc.writeMem(0xa0e9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x570f);
        EXPECT(gbc.pc(), 0xa0eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e9), 0xcb);
        EXPECT(gbc.readMem(0xa0ea), 0x75);
        // CB 75 0018
        gbc.setState(0x9c9e, 0x6260, 0xd400, 0x8832, 0x8a77, 0x29ad, 0x0, 0x0);
        gbc.writeMem(0x9c9e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6260);
        EXPECT(gbc.pc(), 0x9ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c9e), 0xcb);
        EXPECT(gbc.readMem(0x9c9f), 0x75);
        // CB 75 0019
        gbc.setState(0x24ad, 0x276f, 0xec00, 0x3d92, 0xab5f, 0x9275, 0x1, 0x0);
        gbc.writeMem(0x24ad, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x276f);
        EXPECT(gbc.pc(), 0x24af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 001A
        gbc.setState(0xef1e, 0xc7f7, 0x85a0, 0x6838, 0xef, 0xf2c8, 0x0, 0x0);
        gbc.writeMem(0xef1e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc7f7);
        EXPECT(gbc.pc(), 0xef20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef1e), 0xcb);
        EXPECT(gbc.readMem(0xef1f), 0x75);
        // CB 75 001B
        gbc.setState(0x7934, 0xaa65, 0x4990, 0x77f, 0xeec4, 0x4418, 0x0, 0x0);
        gbc.writeMem(0x7934, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xaa65);
        EXPECT(gbc.pc(), 0x7936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 001C
        gbc.setState(0x1cbd, 0xb7b1, 0xdb80, 0x6bb5, 0xf54b, 0x16fc, 0x0, 0x0);
        gbc.writeMem(0x1cbd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb7b1);
        EXPECT(gbc.pc(), 0x1cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 001D
        gbc.setState(0x1d6f, 0x9e0f, 0x1c20, 0x1274, 0xf00, 0x3d89, 0x1, 0x0);
        gbc.writeMem(0x1d6f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9e0f);
        EXPECT(gbc.pc(), 0x1d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 001E
        gbc.setState(0x842d, 0x39b5, 0x5860, 0xd2d6, 0x59a6, 0x3f46, 0x0, 0x1);
        gbc.writeMem(0x842d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x39b5);
        EXPECT(gbc.pc(), 0x842f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x842d), 0xcb);
        EXPECT(gbc.readMem(0x842e), 0x75);
        // CB 75 001F
        gbc.setState(0x674e, 0xd741, 0x22e0, 0x658b, 0xd086, 0x792e, 0x1, 0x0);
        gbc.writeMem(0x674e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd741);
        EXPECT(gbc.pc(), 0x6750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0020
        gbc.setState(0x7182, 0x8478, 0x58d0, 0xf6eb, 0x78b1, 0x6a97, 0x1, 0x0);
        gbc.writeMem(0x7182, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8478);
        EXPECT(gbc.pc(), 0x7184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0021
        gbc.setState(0x2097, 0x18fa, 0x34e0, 0x4031, 0xa095, 0x3849, 0x0, 0x1);
        gbc.writeMem(0x2097, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x18fa);
        EXPECT(gbc.pc(), 0x2099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0022
        gbc.setState(0x7a61, 0x71a, 0x6310, 0x91e3, 0xb790, 0x787c, 0x1, 0x1);
        gbc.writeMem(0x7a61, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x71a);
        EXPECT(gbc.pc(), 0x7a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0023
        gbc.setState(0x257c, 0x2a96, 0xcfb0, 0x4445, 0x7700, 0x9e3f, 0x1, 0x1);
        gbc.writeMem(0x257c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2a96);
        EXPECT(gbc.pc(), 0x257e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0024
        gbc.setState(0x761a, 0x1b43, 0x440, 0xff3e, 0xb090, 0xbe4c, 0x1, 0x0);
        gbc.writeMem(0x761a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1b43);
        EXPECT(gbc.pc(), 0x761c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0025
        gbc.setState(0x1c5f, 0x5c80, 0xdda0, 0x61ae, 0xb57b, 0x5562, 0x0, 0x0);
        gbc.writeMem(0x1c5f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5c80);
        EXPECT(gbc.pc(), 0x1c61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0026
        gbc.setState(0xb0d5, 0xeaf6, 0x5610, 0x3361, 0x80ee, 0x215f, 0x1, 0x1);
        gbc.writeMem(0xb0d5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xeaf6);
        EXPECT(gbc.pc(), 0xb0d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d5), 0xcb);
        EXPECT(gbc.readMem(0xb0d6), 0x75);
        // CB 75 0027
        gbc.setState(0x7d79, 0xb06c, 0x1a0, 0xc163, 0xf376, 0x6f5a, 0x0, 0x0);
        gbc.writeMem(0x7d79, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb06c);
        EXPECT(gbc.pc(), 0x7d7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0028
        gbc.setState(0xd462, 0xe571, 0xa950, 0x3a88, 0xf49f, 0x1886, 0x1, 0x1);
        gbc.writeMem(0xd462, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe571);
        EXPECT(gbc.pc(), 0xd464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd462), 0xcb);
        EXPECT(gbc.readMem(0xd463), 0x75);
        // CB 75 0029
        gbc.setState(0x6334, 0x4b70, 0x5f50, 0x7cfe, 0x5824, 0xc845, 0x1, 0x0);
        gbc.writeMem(0x6334, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4b70);
        EXPECT(gbc.pc(), 0x6336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 002A
        gbc.setState(0xbe89, 0xde1e, 0x4fb0, 0x9586, 0x93e4, 0x7a43, 0x1, 0x0);
        gbc.writeMem(0xbe89, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xde1e);
        EXPECT(gbc.pc(), 0xbe8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe89), 0xcb);
        EXPECT(gbc.readMem(0xbe8a), 0x75);
        // CB 75 002B
        gbc.setState(0x2b36, 0xac92, 0x8300, 0x6fc6, 0x9623, 0x7a3b, 0x1, 0x1);
        gbc.writeMem(0x2b36, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xac92);
        EXPECT(gbc.pc(), 0x2b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 002C
        gbc.setState(0x11d6, 0x38c6, 0xbdf0, 0xf16f, 0x30e8, 0x4aea, 0x0, 0x0);
        gbc.writeMem(0x11d6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x38c6);
        EXPECT(gbc.pc(), 0x11d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 002D
        gbc.setState(0x35db, 0xfb98, 0x8b90, 0xb74a, 0xc554, 0x7dbb, 0x1, 0x0);
        gbc.writeMem(0x35db, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfb98);
        EXPECT(gbc.pc(), 0x35dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 002F
        gbc.setState(0xcfe4, 0xda88, 0x5630, 0x29c3, 0x8311, 0xff3b, 0x1, 0x1);
        gbc.writeMem(0xcfe4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xda88);
        EXPECT(gbc.pc(), 0xcfe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe4), 0xcb);
        EXPECT(gbc.readMem(0xcfe5), 0x75);
        // CB 75 0030
        gbc.setState(0xca81, 0x56b1, 0xfd90, 0x7a93, 0xe7cc, 0x3018, 0x0, 0x0);
        gbc.writeMem(0xca81, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x56b1);
        EXPECT(gbc.pc(), 0xca83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca81), 0xcb);
        EXPECT(gbc.readMem(0xca82), 0x75);
        // CB 75 0031
        gbc.setState(0x4983, 0xcc1, 0xd570, 0xd003, 0x5860, 0x2682, 0x0, 0x1);
        gbc.writeMem(0x4983, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xcc1);
        EXPECT(gbc.pc(), 0x4985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0032
        gbc.setState(0x819, 0x2c36, 0x7eb0, 0x8f78, 0xefea, 0x12ab, 0x1, 0x1);
        gbc.writeMem(0x819, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2c36);
        EXPECT(gbc.pc(), 0x81b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0033
        gbc.setState(0xac61, 0xcd74, 0x3e20, 0xca88, 0x9da1, 0xd3f1, 0x1, 0x0);
        gbc.writeMem(0xac61, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcd74);
        EXPECT(gbc.pc(), 0xac63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac61), 0xcb);
        EXPECT(gbc.readMem(0xac62), 0x75);
        // CB 75 0034
        gbc.setState(0xd214, 0x8d90, 0xc960, 0xf3d6, 0xad2, 0x5d19, 0x1, 0x0);
        gbc.writeMem(0xd214, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8d90);
        EXPECT(gbc.pc(), 0xd216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd214), 0xcb);
        EXPECT(gbc.readMem(0xd215), 0x75);
        // CB 75 0035
        gbc.setState(0x59d7, 0xcd4f, 0xe070, 0x6b3, 0xcd0c, 0x99f3, 0x0, 0x1);
        gbc.writeMem(0x59d7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcd4f);
        EXPECT(gbc.pc(), 0x59d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0036
        gbc.setState(0xe1ce, 0x258e, 0x85e0, 0xdb0b, 0x5960, 0xd35c, 0x0, 0x0);
        gbc.writeMem(0xe1ce, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x258e);
        EXPECT(gbc.pc(), 0xe1d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ce), 0xcb);
        EXPECT(gbc.readMem(0xe1cf), 0x75);
        // CB 75 0037
        gbc.setState(0x297c, 0x7672, 0x55a0, 0x4d10, 0x5e58, 0x5b85, 0x0, 0x1);
        gbc.writeMem(0x297c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7672);
        EXPECT(gbc.pc(), 0x297e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0038
        gbc.setState(0x28bd, 0x1e1e, 0x89d0, 0x20ec, 0x84b4, 0x94df, 0x0, 0x0);
        gbc.writeMem(0x28bd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1e1e);
        EXPECT(gbc.pc(), 0x28bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 003A
        gbc.setState(0x58e1, 0x84f, 0x81b0, 0x3740, 0x71af, 0xf304, 0x0, 0x0);
        gbc.writeMem(0x58e1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x84f);
        EXPECT(gbc.pc(), 0x58e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 003B
        gbc.setState(0xb8dd, 0x362a, 0x9480, 0xbe93, 0x726c, 0x7109, 0x1, 0x0);
        gbc.writeMem(0xb8dd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x362a);
        EXPECT(gbc.pc(), 0xb8df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8dd), 0xcb);
        EXPECT(gbc.readMem(0xb8de), 0x75);
        // CB 75 003C
        gbc.setState(0xebac, 0x8ae, 0x59a0, 0x7595, 0x9547, 0xba7c, 0x0, 0x0);
        gbc.writeMem(0xebac, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8ae);
        EXPECT(gbc.pc(), 0xebae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebac), 0xcb);
        EXPECT(gbc.readMem(0xebad), 0x75);
        // CB 75 003D
        gbc.setState(0xc307, 0x35fd, 0x5c80, 0x5844, 0xe514, 0x4e97, 0x0, 0x1);
        gbc.writeMem(0xc307, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x35fd);
        EXPECT(gbc.pc(), 0xc309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc307), 0xcb);
        EXPECT(gbc.readMem(0xc308), 0x75);
        // CB 75 003E
        gbc.setState(0x33f, 0xb39e, 0xb0, 0xe992, 0xa17e, 0x8efd, 0x0, 0x0);
        gbc.writeMem(0x33f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb39e);
        EXPECT(gbc.pc(), 0x341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 003F
        gbc.setState(0x85c7, 0x6c9a, 0xf060, 0x68f7, 0x3cf7, 0xf118, 0x1, 0x1);
        gbc.writeMem(0x85c7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6c9a);
        EXPECT(gbc.pc(), 0x85c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c7), 0xcb);
        EXPECT(gbc.readMem(0x85c8), 0x75);
        // CB 75 0040
        gbc.setState(0xa2ff, 0x5453, 0x8b50, 0x140e, 0x840, 0xc3e1, 0x0, 0x0);
        gbc.writeMem(0xa2ff, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5453);
        EXPECT(gbc.pc(), 0xa301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ff), 0xcb);
        EXPECT(gbc.readMem(0xa300), 0x75);
        // CB 75 0041
        gbc.setState(0x5c5d, 0x6411, 0xceb0, 0x9d88, 0x7814, 0xc783, 0x1, 0x0);
        gbc.writeMem(0x5c5d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6411);
        EXPECT(gbc.pc(), 0x5c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0042
        gbc.setState(0x26af, 0xd5c4, 0x65e0, 0xd072, 0x86fe, 0xe9b5, 0x0, 0x0);
        gbc.writeMem(0x26af, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd5c4);
        EXPECT(gbc.pc(), 0x26b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0043
        gbc.setState(0xb96c, 0x5a77, 0x8010, 0x84d7, 0x40b8, 0xc31f, 0x0, 0x1);
        gbc.writeMem(0xb96c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5a77);
        EXPECT(gbc.pc(), 0xb96e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb96c), 0xcb);
        EXPECT(gbc.readMem(0xb96d), 0x75);
        // CB 75 0044
        gbc.setState(0xbe71, 0x6f76, 0x2aa0, 0xa459, 0x4708, 0x692e, 0x0, 0x0);
        gbc.writeMem(0xbe71, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6f76);
        EXPECT(gbc.pc(), 0xbe73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe71), 0xcb);
        EXPECT(gbc.readMem(0xbe72), 0x75);
        // CB 75 0045
        gbc.setState(0xadec, 0xb698, 0xf980, 0xf2, 0xb001, 0x8051, 0x1, 0x1);
        gbc.writeMem(0xadec, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb698);
        EXPECT(gbc.pc(), 0xadee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadec), 0xcb);
        EXPECT(gbc.readMem(0xaded), 0x75);
        // CB 75 0046
        gbc.setState(0x32e, 0x473, 0xffe0, 0xdc01, 0x9359, 0x9168, 0x1, 0x1);
        gbc.writeMem(0x32e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x473);
        EXPECT(gbc.pc(), 0x330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0047
        gbc.setState(0x8a20, 0x9300, 0x440, 0xaec1, 0xe6a6, 0x740a, 0x0, 0x0);
        gbc.writeMem(0x8a20, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9300);
        EXPECT(gbc.pc(), 0x8a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a20), 0xcb);
        EXPECT(gbc.readMem(0x8a21), 0x75);
        // CB 75 0048
        gbc.setState(0xd0f1, 0xdcde, 0xdd10, 0xfd2b, 0x8eb4, 0x9de6, 0x1, 0x0);
        gbc.writeMem(0xd0f1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdcde);
        EXPECT(gbc.pc(), 0xd0f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f1), 0xcb);
        EXPECT(gbc.readMem(0xd0f2), 0x75);
        // CB 75 0049
        gbc.setState(0x7ae5, 0x3d67, 0xe580, 0x6994, 0x9487, 0x92a4, 0x0, 0x0);
        gbc.writeMem(0x7ae5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3d67);
        EXPECT(gbc.pc(), 0x7ae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 004A
        gbc.setState(0x2f3a, 0x18f8, 0xea90, 0xeb96, 0xb543, 0x5a48, 0x0, 0x1);
        gbc.writeMem(0x2f3a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x18f8);
        EXPECT(gbc.pc(), 0x2f3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 004B
        gbc.setState(0xb123, 0xc3a, 0x7ec0, 0xed12, 0xc34f, 0x5bea, 0x0, 0x0);
        gbc.writeMem(0xb123, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc3a);
        EXPECT(gbc.pc(), 0xb125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb123), 0xcb);
        EXPECT(gbc.readMem(0xb124), 0x75);
        // CB 75 004C
        gbc.setState(0xaf37, 0xc995, 0x9a50, 0x3f04, 0xf9bf, 0xebad, 0x1, 0x1);
        gbc.writeMem(0xaf37, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc995);
        EXPECT(gbc.pc(), 0xaf39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf37), 0xcb);
        EXPECT(gbc.readMem(0xaf38), 0x75);
        // CB 75 004E
        gbc.setState(0x1e15, 0x4bf6, 0xf350, 0x3e52, 0xacb0, 0x5265, 0x0, 0x1);
        gbc.writeMem(0x1e15, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4bf6);
        EXPECT(gbc.pc(), 0x1e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 004F
        gbc.setState(0x31e2, 0x754b, 0xb0e0, 0x5927, 0x38f1, 0xee18, 0x0, 0x1);
        gbc.writeMem(0x31e2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x754b);
        EXPECT(gbc.pc(), 0x31e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0050
        gbc.setState(0x58d5, 0xa8a5, 0xe000, 0x80fe, 0x96a5, 0x332, 0x1, 0x0);
        gbc.writeMem(0x58d5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa8a5);
        EXPECT(gbc.pc(), 0x58d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0051
        gbc.setState(0x7954, 0x611c, 0x1d60, 0x174d, 0x3a9, 0x1b5f, 0x1, 0x0);
        gbc.writeMem(0x7954, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x611c);
        EXPECT(gbc.pc(), 0x7956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0052
        gbc.setState(0xe232, 0x7e77, 0xe040, 0x919f, 0x1ade, 0x757d, 0x0, 0x1);
        gbc.writeMem(0xe232, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7e77);
        EXPECT(gbc.pc(), 0xe234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe232), 0xcb);
        EXPECT(gbc.readMem(0xe233), 0x75);
        // CB 75 0053
        gbc.setState(0x5706, 0xd1eb, 0xc070, 0xa6a9, 0xb781, 0x21b8, 0x1, 0x1);
        gbc.writeMem(0x5706, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd1eb);
        EXPECT(gbc.pc(), 0x5708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0054
        gbc.setState(0xd7cd, 0x315d, 0x1c90, 0x7d86, 0x716d, 0xcd44, 0x0, 0x0);
        gbc.writeMem(0xd7cd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x315d);
        EXPECT(gbc.pc(), 0xd7cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7cd), 0xcb);
        EXPECT(gbc.readMem(0xd7ce), 0x75);
        // CB 75 0055
        gbc.setState(0x6c28, 0x6df, 0x9380, 0x7040, 0xd2c0, 0x393b, 0x1, 0x0);
        gbc.writeMem(0x6c28, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6df);
        EXPECT(gbc.pc(), 0x6c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0056
        gbc.setState(0xe0d5, 0x844d, 0x5800, 0x69bd, 0x885f, 0x611, 0x0, 0x0);
        gbc.writeMem(0xe0d5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x844d);
        EXPECT(gbc.pc(), 0xe0d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0d5), 0xcb);
        EXPECT(gbc.readMem(0xe0d6), 0x75);
        // CB 75 0057
        gbc.setState(0x1b83, 0x2b11, 0x1980, 0x402c, 0xa0f6, 0xfe2c, 0x0, 0x0);
        gbc.writeMem(0x1b83, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2b11);
        EXPECT(gbc.pc(), 0x1b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0058
        gbc.setState(0xa11e, 0xfed8, 0x7de0, 0x300f, 0x5e0, 0x2349, 0x1, 0x1);
        gbc.writeMem(0xa11e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfed8);
        EXPECT(gbc.pc(), 0xa120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa11e), 0xcb);
        EXPECT(gbc.readMem(0xa11f), 0x75);
        // CB 75 0059
        gbc.setState(0x9e55, 0x976d, 0x7860, 0x3ec4, 0xd4f7, 0x9210, 0x0, 0x0);
        gbc.writeMem(0x9e55, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x976d);
        EXPECT(gbc.pc(), 0x9e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e55), 0xcb);
        EXPECT(gbc.readMem(0x9e56), 0x75);
        // CB 75 005A
        gbc.setState(0xe73f, 0x7546, 0xe9f0, 0x2707, 0x23eb, 0xf1b6, 0x1, 0x1);
        gbc.writeMem(0xe73f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7546);
        EXPECT(gbc.pc(), 0xe741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73f), 0xcb);
        EXPECT(gbc.readMem(0xe740), 0x75);
        // CB 75 005B
        gbc.setState(0x31e, 0x20b7, 0xca30, 0xee34, 0x8cc7, 0xc384, 0x1, 0x0);
        gbc.writeMem(0x31e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x20b7);
        EXPECT(gbc.pc(), 0x320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 005C
        gbc.setState(0x2a99, 0xd5e0, 0x70e0, 0x50a9, 0xb459, 0xb7ab, 0x0, 0x0);
        gbc.writeMem(0x2a99, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd5e0);
        EXPECT(gbc.pc(), 0x2a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 005D
        gbc.setState(0x8fed, 0x1a5a, 0x4b80, 0x7bb6, 0x8e7d, 0xedf3, 0x0, 0x0);
        gbc.writeMem(0x8fed, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1a5a);
        EXPECT(gbc.pc(), 0x8fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fed), 0xcb);
        EXPECT(gbc.readMem(0x8fee), 0x75);
        // CB 75 005E
        gbc.setState(0xb17, 0xca31, 0xfff0, 0xc32d, 0x1f06, 0x4a23, 0x1, 0x1);
        gbc.writeMem(0xb17, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xca31);
        EXPECT(gbc.pc(), 0xb19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 005F
        gbc.setState(0xa91d, 0x8bf9, 0x7240, 0x7e2f, 0x987b, 0xb3dd, 0x0, 0x0);
        gbc.writeMem(0xa91d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8bf9);
        EXPECT(gbc.pc(), 0xa91f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91d), 0xcb);
        EXPECT(gbc.readMem(0xa91e), 0x75);
        // CB 75 0060
        gbc.setState(0xe154, 0x5bbb, 0x270, 0x3bc0, 0x34e7, 0x36a7, 0x1, 0x1);
        gbc.writeMem(0xe154, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5bbb);
        EXPECT(gbc.pc(), 0xe156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe154), 0xcb);
        EXPECT(gbc.readMem(0xe155), 0x75);
        // CB 75 0061
        gbc.setState(0x101c, 0xfffd, 0x3fc0, 0x4098, 0x610d, 0x7298, 0x1, 0x0);
        gbc.writeMem(0x101c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfffd);
        EXPECT(gbc.pc(), 0x101e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0062
        gbc.setState(0xc79a, 0x154e, 0x3c20, 0x996d, 0xf0cf, 0x78ac, 0x1, 0x0);
        gbc.writeMem(0xc79a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x154e);
        EXPECT(gbc.pc(), 0xc79c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc79a), 0xcb);
        EXPECT(gbc.readMem(0xc79b), 0x75);
        // CB 75 0063
        gbc.setState(0xcdf1, 0xdbc4, 0xac40, 0x254c, 0x6f81, 0xeaf, 0x0, 0x1);
        gbc.writeMem(0xcdf1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xdbc4);
        EXPECT(gbc.pc(), 0xcdf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf1), 0xcb);
        EXPECT(gbc.readMem(0xcdf2), 0x75);
        // CB 75 0064
        gbc.setState(0xcb0b, 0x68ad, 0x7240, 0x1bfc, 0x7477, 0xf333, 0x1, 0x1);
        gbc.writeMem(0xcb0b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x68ad);
        EXPECT(gbc.pc(), 0xcb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb0b), 0xcb);
        EXPECT(gbc.readMem(0xcb0c), 0x75);
        // CB 75 0065
        gbc.setState(0xa154, 0xc061, 0x7bd0, 0x8388, 0xcae2, 0xa5c3, 0x0, 0x0);
        gbc.writeMem(0xa154, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc061);
        EXPECT(gbc.pc(), 0xa156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa154), 0xcb);
        EXPECT(gbc.readMem(0xa155), 0x75);
        // CB 75 0066
        gbc.setState(0x658d, 0x6aef, 0x880, 0x7129, 0xeb46, 0xcc42, 0x0, 0x0);
        gbc.writeMem(0x658d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6aef);
        EXPECT(gbc.pc(), 0x658f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0067
        gbc.setState(0x4003, 0xf04a, 0xdf0, 0x86a2, 0xf665, 0xc9da, 0x0, 0x0);
        gbc.writeMem(0x4003, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf04a);
        EXPECT(gbc.pc(), 0x4005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0068
        gbc.setState(0xa2ec, 0x96ae, 0x3510, 0xdece, 0xefe, 0x8683, 0x1, 0x1);
        gbc.writeMem(0xa2ec, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x96ae);
        EXPECT(gbc.pc(), 0xa2ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ec), 0xcb);
        EXPECT(gbc.readMem(0xa2ed), 0x75);
        // CB 75 0069
        gbc.setState(0x87e5, 0xb1c7, 0xa7c0, 0x6d40, 0x639a, 0x217d, 0x0, 0x1);
        gbc.writeMem(0x87e5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb1c7);
        EXPECT(gbc.pc(), 0x87e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e5), 0xcb);
        EXPECT(gbc.readMem(0x87e6), 0x75);
        // CB 75 006A
        gbc.setState(0x4664, 0x3d5f, 0x26c0, 0x6175, 0xa689, 0x7b2c, 0x1, 0x1);
        gbc.writeMem(0x4664, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3d5f);
        EXPECT(gbc.pc(), 0x4666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 006B
        gbc.setState(0xd7a2, 0xc66b, 0x1b50, 0x8192, 0xc911, 0x7f3b, 0x1, 0x1);
        gbc.writeMem(0xd7a2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc66b);
        EXPECT(gbc.pc(), 0xd7a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a2), 0xcb);
        EXPECT(gbc.readMem(0xd7a3), 0x75);
        // CB 75 006C
        gbc.setState(0x9f3, 0x6bcb, 0xfff0, 0xab10, 0xa415, 0xce71, 0x0, 0x1);
        gbc.writeMem(0x9f3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6bcb);
        EXPECT(gbc.pc(), 0x9f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 006D
        gbc.setState(0x7433, 0x1060, 0x6c70, 0xc3e5, 0xace7, 0x685a, 0x1, 0x1);
        gbc.writeMem(0x7433, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1060);
        EXPECT(gbc.pc(), 0x7435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 006E
        gbc.setState(0x204c, 0xca01, 0x5550, 0xbe4c, 0x75fa, 0xe5e7, 0x1, 0x1);
        gbc.writeMem(0x204c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xca01);
        EXPECT(gbc.pc(), 0x204e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 006F
        gbc.setState(0xde5f, 0x3539, 0x6990, 0x6696, 0x4c82, 0xa893, 0x0, 0x1);
        gbc.writeMem(0xde5f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3539);
        EXPECT(gbc.pc(), 0xde61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde5f), 0xcb);
        EXPECT(gbc.readMem(0xde60), 0x75);
        // CB 75 0070
        gbc.setState(0x71c1, 0xd29, 0xdcf0, 0xc13, 0x6c33, 0x8393, 0x0, 0x1);
        gbc.writeMem(0x71c1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd29);
        EXPECT(gbc.pc(), 0x71c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0071
        gbc.setState(0xc762, 0x42c5, 0x14c0, 0x2a6a, 0x12a, 0xf80d, 0x1, 0x0);
        gbc.writeMem(0xc762, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x42c5);
        EXPECT(gbc.pc(), 0xc764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc762), 0xcb);
        EXPECT(gbc.readMem(0xc763), 0x75);
        // CB 75 0072
        gbc.setState(0xeb40, 0xc064, 0xff60, 0xa594, 0xcd2a, 0x3332, 0x0, 0x0);
        gbc.writeMem(0xeb40, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc064);
        EXPECT(gbc.pc(), 0xeb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb40), 0xcb);
        EXPECT(gbc.readMem(0xeb41), 0x75);
        // CB 75 0073
        gbc.setState(0x3a37, 0xdd87, 0xed90, 0x8520, 0x8915, 0x7b33, 0x0, 0x0);
        gbc.writeMem(0x3a37, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdd87);
        EXPECT(gbc.pc(), 0x3a39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0074
        gbc.setState(0x688b, 0xaab3, 0xb50, 0xba95, 0xeeef, 0xcd1f, 0x1, 0x0);
        gbc.writeMem(0x688b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xaab3);
        EXPECT(gbc.pc(), 0x688d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0075
        gbc.setState(0x5de0, 0xd577, 0x12d0, 0xdee6, 0xc7c9, 0xc2b6, 0x1, 0x1);
        gbc.writeMem(0x5de0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd577);
        EXPECT(gbc.pc(), 0x5de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0076
        gbc.setState(0x6aad, 0xe5a, 0x9c60, 0xda4c, 0x4033, 0xb397, 0x0, 0x0);
        gbc.writeMem(0x6aad, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe5a);
        EXPECT(gbc.pc(), 0x6aaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0077
        gbc.setState(0x37ea, 0xa04a, 0x27b0, 0x937a, 0x7e60, 0x59b7, 0x0, 0x1);
        gbc.writeMem(0x37ea, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa04a);
        EXPECT(gbc.pc(), 0x37ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0078
        gbc.setState(0x124d, 0xfa4d, 0x5790, 0x974e, 0x1bb1, 0x904d, 0x1, 0x1);
        gbc.writeMem(0x124d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xfa4d);
        EXPECT(gbc.pc(), 0x124f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0079
        gbc.setState(0xc6bb, 0xfb04, 0xc60, 0xb856, 0x54fe, 0xcaa, 0x1, 0x1);
        gbc.writeMem(0xc6bb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfb04);
        EXPECT(gbc.pc(), 0xc6bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6bb), 0xcb);
        EXPECT(gbc.readMem(0xc6bc), 0x75);
        // CB 75 007A
        gbc.setState(0x7db8, 0x3fe7, 0x6a10, 0xcd60, 0x6dfb, 0x89d, 0x0, 0x1);
        gbc.writeMem(0x7db8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3fe7);
        EXPECT(gbc.pc(), 0x7dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 007B
        gbc.setState(0x9c85, 0x86f4, 0xd7e0, 0x3ab5, 0x4057, 0x4d80, 0x0, 0x0);
        gbc.writeMem(0x9c85, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x86f4);
        EXPECT(gbc.pc(), 0x9c87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c85), 0xcb);
        EXPECT(gbc.readMem(0x9c86), 0x75);
        // CB 75 007C
        gbc.setState(0x5344, 0xa283, 0x8250, 0x92a, 0xa519, 0xc49d, 0x0, 0x0);
        gbc.writeMem(0x5344, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa283);
        EXPECT(gbc.pc(), 0x5346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 007D
        gbc.setState(0x68f1, 0xa54d, 0xe490, 0xabb0, 0x6fd, 0xd35, 0x1, 0x1);
        gbc.writeMem(0x68f1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa54d);
        EXPECT(gbc.pc(), 0x68f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 007E
        gbc.setState(0x55b5, 0x4cbf, 0xf050, 0xbce4, 0xf6b4, 0x30a2, 0x1, 0x1);
        gbc.writeMem(0x55b5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4cbf);
        EXPECT(gbc.pc(), 0x55b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 007F
        gbc.setState(0x1f6f, 0x78c2, 0x6350, 0x5cf4, 0x39ed, 0xbe69, 0x1, 0x0);
        gbc.writeMem(0x1f6f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x78c2);
        EXPECT(gbc.pc(), 0x1f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0080
        gbc.setState(0xb553, 0x86a8, 0xb4c0, 0x5531, 0x9856, 0xba46, 0x1, 0x0);
        gbc.writeMem(0xb553, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x86a8);
        EXPECT(gbc.pc(), 0xb555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb553), 0xcb);
        EXPECT(gbc.readMem(0xb554), 0x75);
        // CB 75 0081
        gbc.setState(0xa08e, 0xd21f, 0xaa0, 0xb292, 0x4795, 0x9b0b, 0x1, 0x1);
        gbc.writeMem(0xa08e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd21f);
        EXPECT(gbc.pc(), 0xa090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08e), 0xcb);
        EXPECT(gbc.readMem(0xa08f), 0x75);
        // CB 75 0083
        gbc.setState(0x1317, 0xb65f, 0xb9b0, 0xf86b, 0x5ea3, 0x109f, 0x0, 0x1);
        gbc.writeMem(0x1317, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb65f);
        EXPECT(gbc.pc(), 0x1319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0084
        gbc.setState(0xd722, 0x24ae, 0x6ac0, 0xfb3c, 0x2d30, 0x83db, 0x1, 0x0);
        gbc.writeMem(0xd722, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x24ae);
        EXPECT(gbc.pc(), 0xd724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd722), 0xcb);
        EXPECT(gbc.readMem(0xd723), 0x75);
        // CB 75 0085
        gbc.setState(0x3ee3, 0xcae1, 0x7f90, 0xe61f, 0xb930, 0xd9e3, 0x0, 0x0);
        gbc.writeMem(0x3ee3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcae1);
        EXPECT(gbc.pc(), 0x3ee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0086
        gbc.setState(0xee69, 0xe575, 0x40, 0x5840, 0xfd51, 0xa808, 0x0, 0x1);
        gbc.writeMem(0xee69, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe575);
        EXPECT(gbc.pc(), 0xee6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee69), 0xcb);
        EXPECT(gbc.readMem(0xee6a), 0x75);
        // CB 75 0088
        gbc.setState(0x7edf, 0xbc42, 0x2d90, 0x4b00, 0xd6b3, 0xa1b, 0x0, 0x0);
        gbc.writeMem(0x7edf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbc42);
        EXPECT(gbc.pc(), 0x7ee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 008A
        gbc.setState(0x12d, 0x78c7, 0x65f0, 0x12a2, 0xf06d, 0xbfc5, 0x1, 0x1);
        gbc.writeMem(0x12d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x78c7);
        EXPECT(gbc.pc(), 0x12f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 008B
        gbc.setState(0x7aa2, 0x7e7d, 0x6bd0, 0xb35d, 0x187c, 0xfb4f, 0x0, 0x0);
        gbc.writeMem(0x7aa2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7e7d);
        EXPECT(gbc.pc(), 0x7aa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 008C
        gbc.setState(0x5535, 0x2b4f, 0x2aa0, 0x1bd7, 0x363f, 0xf3af, 0x0, 0x1);
        gbc.writeMem(0x5535, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2b4f);
        EXPECT(gbc.pc(), 0x5537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 008D
        gbc.setState(0x48c8, 0x3c47, 0xe630, 0xfaa7, 0x72bb, 0xc3be, 0x0, 0x1);
        gbc.writeMem(0x48c8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3c47);
        EXPECT(gbc.pc(), 0x48ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 008E
        gbc.setState(0x6d9b, 0xc868, 0x120, 0xbe18, 0x9746, 0x290a, 0x1, 0x0);
        gbc.writeMem(0x6d9b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc868);
        EXPECT(gbc.pc(), 0x6d9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 008F
        gbc.setState(0x441e, 0x472c, 0xf2c0, 0xde78, 0xb3ee, 0x13fb, 0x0, 0x0);
        gbc.writeMem(0x441e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x472c);
        EXPECT(gbc.pc(), 0x4420);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0090
        gbc.setState(0x19b1, 0x9c65, 0xc6e0, 0xa963, 0x63c5, 0x5d62, 0x1, 0x0);
        gbc.writeMem(0x19b1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9c65);
        EXPECT(gbc.pc(), 0x19b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0091
        gbc.setState(0x47a1, 0x4ca3, 0x9250, 0xc901, 0xe4da, 0x224f, 0x1, 0x1);
        gbc.writeMem(0x47a1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4ca3);
        EXPECT(gbc.pc(), 0x47a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0092
        gbc.setState(0xa7e, 0x4fa8, 0x23a0, 0x4fe6, 0xd0d8, 0x3d7c, 0x1, 0x0);
        gbc.writeMem(0xa7e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4fa8);
        EXPECT(gbc.pc(), 0xa80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0093
        gbc.setState(0x5510, 0xdc71, 0xdf80, 0xd3a5, 0x8a35, 0x4902, 0x0, 0x0);
        gbc.writeMem(0x5510, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdc71);
        EXPECT(gbc.pc(), 0x5512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0094
        gbc.setState(0x5be7, 0xff06, 0x7910, 0x8fa, 0xf015, 0x8fea, 0x1, 0x0);
        gbc.writeMem(0x5be7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xff06);
        EXPECT(gbc.pc(), 0x5be9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0095
        gbc.setState(0x658e, 0xbdf5, 0x1050, 0x4969, 0x1e2a, 0x1e0a, 0x0, 0x1);
        gbc.writeMem(0x658e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbdf5);
        EXPECT(gbc.pc(), 0x6590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0096
        gbc.setState(0x2ef1, 0xc96c, 0x9460, 0x90e4, 0x8140, 0xecf2, 0x0, 0x0);
        gbc.writeMem(0x2ef1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc96c);
        EXPECT(gbc.pc(), 0x2ef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0097
        gbc.setState(0xc5f0, 0x302, 0xfc90, 0x64bb, 0x5016, 0xc305, 0x0, 0x0);
        gbc.writeMem(0xc5f0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x302);
        EXPECT(gbc.pc(), 0xc5f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f0), 0xcb);
        EXPECT(gbc.readMem(0xc5f1), 0x75);
        // CB 75 0098
        gbc.setState(0xd45e, 0x5c05, 0xd8a0, 0xe8d3, 0xe2ac, 0xb2d4, 0x0, 0x0);
        gbc.writeMem(0xd45e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5c05);
        EXPECT(gbc.pc(), 0xd460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd45e), 0xcb);
        EXPECT(gbc.readMem(0xd45f), 0x75);
        // CB 75 0099
        gbc.setState(0x5381, 0x6497, 0xb900, 0x59dd, 0xa31, 0x6182, 0x1, 0x0);
        gbc.writeMem(0x5381, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6497);
        EXPECT(gbc.pc(), 0x5383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 009A
        gbc.setState(0x92c4, 0xf8d7, 0x9090, 0x92fd, 0xd0b3, 0x1051, 0x1, 0x0);
        gbc.writeMem(0x92c4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf8d7);
        EXPECT(gbc.pc(), 0x92c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c4), 0xcb);
        EXPECT(gbc.readMem(0x92c5), 0x75);
        // CB 75 009B
        gbc.setState(0x4e4f, 0x434f, 0xdee0, 0x592b, 0xbea9, 0x999b, 0x1, 0x0);
        gbc.writeMem(0x4e4f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x434f);
        EXPECT(gbc.pc(), 0x4e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 009C
        gbc.setState(0xbbc2, 0x9f49, 0xdd90, 0xcf94, 0x74d, 0xef81, 0x0, 0x1);
        gbc.writeMem(0xbbc2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9f49);
        EXPECT(gbc.pc(), 0xbbc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbc2), 0xcb);
        EXPECT(gbc.readMem(0xbbc3), 0x75);
        // CB 75 009D
        gbc.setState(0x72b5, 0x8c56, 0x46a0, 0x2715, 0xde01, 0x8ac2, 0x1, 0x1);
        gbc.writeMem(0x72b5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8c56);
        EXPECT(gbc.pc(), 0x72b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 009E
        gbc.setState(0x1ceb, 0x8225, 0x9630, 0xbf18, 0xe6f2, 0x1fdf, 0x1, 0x0);
        gbc.writeMem(0x1ceb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8225);
        EXPECT(gbc.pc(), 0x1ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 009F
        gbc.setState(0x3ba8, 0xdb5b, 0x41f0, 0x3d2, 0x84ba, 0x5f76, 0x1, 0x1);
        gbc.writeMem(0x3ba8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdb5b);
        EXPECT(gbc.pc(), 0x3baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00A0
        gbc.setState(0xddda, 0x7802, 0x3b60, 0x9fc5, 0x3f05, 0x7673, 0x1, 0x1);
        gbc.writeMem(0xddda, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7802);
        EXPECT(gbc.pc(), 0xdddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddda), 0xcb);
        EXPECT(gbc.readMem(0xdddb), 0x75);
        // CB 75 00A1
        gbc.setState(0x6001, 0xaf10, 0x8d50, 0xc8be, 0xa2b0, 0xe39e, 0x1, 0x1);
        gbc.writeMem(0x6001, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xaf10);
        EXPECT(gbc.pc(), 0x6003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00A2
        gbc.setState(0x5be6, 0xf43, 0x77c0, 0x2dba, 0xb468, 0x2313, 0x1, 0x0);
        gbc.writeMem(0x5be6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf43);
        EXPECT(gbc.pc(), 0x5be8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00A3
        gbc.setState(0xc180, 0x64d7, 0x94c0, 0xaae0, 0xf1e2, 0xa64e, 0x1, 0x1);
        gbc.writeMem(0xc180, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x64d7);
        EXPECT(gbc.pc(), 0xc182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc180), 0xcb);
        EXPECT(gbc.readMem(0xc181), 0x75);
        // CB 75 00A4
        gbc.setState(0xe8c3, 0x346a, 0xef10, 0x7c4e, 0x398c, 0x10e1, 0x0, 0x0);
        gbc.writeMem(0xe8c3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x346a);
        EXPECT(gbc.pc(), 0xe8c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c3), 0xcb);
        EXPECT(gbc.readMem(0xe8c4), 0x75);
        // CB 75 00A5
        gbc.setState(0x392b, 0x3ffd, 0xd170, 0xf3f0, 0xed19, 0xec1a, 0x0, 0x0);
        gbc.writeMem(0x392b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3ffd);
        EXPECT(gbc.pc(), 0x392d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00A6
        gbc.setState(0xb304, 0x56e4, 0xb320, 0x3617, 0xfe6f, 0x2b1b, 0x0, 0x1);
        gbc.writeMem(0xb304, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x56e4);
        EXPECT(gbc.pc(), 0xb306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb304), 0xcb);
        EXPECT(gbc.readMem(0xb305), 0x75);
        // CB 75 00A7
        gbc.setState(0x2bce, 0x857a, 0xa80, 0x88ae, 0x2abf, 0x80ca, 0x0, 0x0);
        gbc.writeMem(0x2bce, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x857a);
        EXPECT(gbc.pc(), 0x2bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00A8
        gbc.setState(0x8851, 0xa6cd, 0x6010, 0x1e90, 0x591d, 0x7537, 0x1, 0x0);
        gbc.writeMem(0x8851, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa6cd);
        EXPECT(gbc.pc(), 0x8853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8851), 0xcb);
        EXPECT(gbc.readMem(0x8852), 0x75);
        // CB 75 00A9
        gbc.setState(0x5008, 0xc06d, 0xc460, 0xd167, 0xbb4f, 0x7819, 0x0, 0x0);
        gbc.writeMem(0x5008, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc06d);
        EXPECT(gbc.pc(), 0x500a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00AA
        gbc.setState(0xa72, 0xd8b3, 0x9870, 0x7157, 0x682d, 0x4832, 0x0, 0x1);
        gbc.writeMem(0xa72, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd8b3);
        EXPECT(gbc.pc(), 0xa74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00AB
        gbc.setState(0xca44, 0xb83a, 0x960, 0xabf4, 0x3c5d, 0x581a, 0x0, 0x1);
        gbc.writeMem(0xca44, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb83a);
        EXPECT(gbc.pc(), 0xca46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca44), 0xcb);
        EXPECT(gbc.readMem(0xca45), 0x75);
        // CB 75 00AC
        gbc.setState(0x6e93, 0xf5e0, 0xe000, 0x6932, 0xd627, 0x7f61, 0x1, 0x1);
        gbc.writeMem(0x6e93, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf5e0);
        EXPECT(gbc.pc(), 0x6e95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00AD
        gbc.setState(0x2cf1, 0x1433, 0xb7a0, 0xd438, 0xd423, 0xc2e3, 0x0, 0x1);
        gbc.writeMem(0x2cf1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1433);
        EXPECT(gbc.pc(), 0x2cf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00AE
        gbc.setState(0x6854, 0x1ca9, 0x5b20, 0x5266, 0x6e1, 0x8460, 0x1, 0x1);
        gbc.writeMem(0x6854, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1ca9);
        EXPECT(gbc.pc(), 0x6856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00AF
        gbc.setState(0xb1f7, 0xc9ca, 0xb210, 0xe68c, 0x390c, 0xf6e6, 0x1, 0x1);
        gbc.writeMem(0xb1f7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc9ca);
        EXPECT(gbc.pc(), 0xb1f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f7), 0xcb);
        EXPECT(gbc.readMem(0xb1f8), 0x75);
        // CB 75 00B0
        gbc.setState(0xbac4, 0x9c6e, 0x9560, 0x96e2, 0xf1c3, 0x502c, 0x0, 0x1);
        gbc.writeMem(0xbac4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9c6e);
        EXPECT(gbc.pc(), 0xbac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac4), 0xcb);
        EXPECT(gbc.readMem(0xbac5), 0x75);
        // CB 75 00B1
        gbc.setState(0x8adb, 0x4e7a, 0x13e0, 0x4ea5, 0xf9fc, 0x37b6, 0x0, 0x0);
        gbc.writeMem(0x8adb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4e7a);
        EXPECT(gbc.pc(), 0x8add);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8adb), 0xcb);
        EXPECT(gbc.readMem(0x8adc), 0x75);
        // CB 75 00B2
        gbc.setState(0xbeca, 0x5e45, 0xcd90, 0x7739, 0x5e57, 0xa08c, 0x0, 0x1);
        gbc.writeMem(0xbeca, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5e45);
        EXPECT(gbc.pc(), 0xbecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeca), 0xcb);
        EXPECT(gbc.readMem(0xbecb), 0x75);
        // CB 75 00B3
        gbc.setState(0xd172, 0x78f6, 0x7020, 0x9557, 0xdb8f, 0xad2f, 0x1, 0x0);
        gbc.writeMem(0xd172, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x78f6);
        EXPECT(gbc.pc(), 0xd174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd172), 0xcb);
        EXPECT(gbc.readMem(0xd173), 0x75);
        // CB 75 00B4
        gbc.setState(0x64f, 0x2ebb, 0xa200, 0xb71a, 0x8512, 0x7d43, 0x0, 0x0);
        gbc.writeMem(0x64f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2ebb);
        EXPECT(gbc.pc(), 0x651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00B5
        gbc.setState(0x2a48, 0x5cd4, 0xa6e0, 0x88d8, 0xabb0, 0x9cba, 0x1, 0x1);
        gbc.writeMem(0x2a48, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5cd4);
        EXPECT(gbc.pc(), 0x2a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00B6
        gbc.setState(0x9aa7, 0x783, 0x2580, 0x7a14, 0x8364, 0xd969, 0x1, 0x0);
        gbc.writeMem(0x9aa7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x783);
        EXPECT(gbc.pc(), 0x9aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa7), 0xcb);
        EXPECT(gbc.readMem(0x9aa8), 0x75);
        // CB 75 00B8
        gbc.setState(0x2db9, 0xafc8, 0xcaa0, 0x59fb, 0x640f, 0xb9fb, 0x1, 0x1);
        gbc.writeMem(0x2db9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xafc8);
        EXPECT(gbc.pc(), 0x2dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00B9
        gbc.setState(0x2283, 0x48f, 0x7be0, 0x4935, 0xf5de, 0x6b85, 0x1, 0x1);
        gbc.writeMem(0x2283, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x48f);
        EXPECT(gbc.pc(), 0x2285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00BA
        gbc.setState(0xac51, 0x2a3e, 0x5580, 0x63bf, 0x47e9, 0x28cc, 0x0, 0x0);
        gbc.writeMem(0xac51, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2a3e);
        EXPECT(gbc.pc(), 0xac53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac51), 0xcb);
        EXPECT(gbc.readMem(0xac52), 0x75);
        // CB 75 00BB
        gbc.setState(0x54f9, 0x1f1d, 0xb400, 0xb598, 0xa27, 0xeea5, 0x1, 0x1);
        gbc.writeMem(0x54f9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1f1d);
        EXPECT(gbc.pc(), 0x54fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00BC
        gbc.setState(0xee7, 0x958b, 0xa3f0, 0x12ed, 0xe22f, 0x6b2b, 0x0, 0x1);
        gbc.writeMem(0xee7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x958b);
        EXPECT(gbc.pc(), 0xee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00BD
        gbc.setState(0xc24c, 0xadf6, 0xf370, 0x7100, 0xa92c, 0xed14, 0x0, 0x0);
        gbc.writeMem(0xc24c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xadf6);
        EXPECT(gbc.pc(), 0xc24e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc24c), 0xcb);
        EXPECT(gbc.readMem(0xc24d), 0x75);
        // CB 75 00BE
        gbc.setState(0x62a8, 0xee72, 0xfa40, 0x5c69, 0xe9e9, 0x41f5, 0x0, 0x0);
        gbc.writeMem(0x62a8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xee72);
        EXPECT(gbc.pc(), 0x62aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00BF
        gbc.setState(0x39b6, 0x65c9, 0x33d0, 0x3506, 0x9c9f, 0x8475, 0x1, 0x1);
        gbc.writeMem(0x39b6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x65c9);
        EXPECT(gbc.pc(), 0x39b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00C0
        gbc.setState(0x9624, 0x99e, 0x5140, 0xcdb7, 0x7991, 0xda07, 0x1, 0x0);
        gbc.writeMem(0x9624, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x99e);
        EXPECT(gbc.pc(), 0x9626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9624), 0xcb);
        EXPECT(gbc.readMem(0x9625), 0x75);
        // CB 75 00C1
        gbc.setState(0xb4c, 0x20e6, 0x1fb0, 0x8781, 0x31c5, 0x3348, 0x0, 0x1);
        gbc.writeMem(0xb4c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x20e6);
        EXPECT(gbc.pc(), 0xb4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00C2
        gbc.setState(0x58ab, 0x6d29, 0x7110, 0x781b, 0xf96a, 0xc122, 0x1, 0x1);
        gbc.writeMem(0x58ab, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6d29);
        EXPECT(gbc.pc(), 0x58ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00C3
        gbc.setState(0x70fc, 0x7fae, 0xa540, 0x5cce, 0xd3d2, 0xb771, 0x0, 0x0);
        gbc.writeMem(0x70fc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7fae);
        EXPECT(gbc.pc(), 0x70fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00C4
        gbc.setState(0x3fa6, 0x798f, 0xff0, 0xc1c1, 0x91cd, 0xc642, 0x1, 0x0);
        gbc.writeMem(0x3fa6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x798f);
        EXPECT(gbc.pc(), 0x3fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00C5
        gbc.setState(0xce4, 0x4256, 0xdbf0, 0x4452, 0xeaee, 0x82, 0x0, 0x1);
        gbc.writeMem(0xce4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4256);
        EXPECT(gbc.pc(), 0xce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00C6
        gbc.setState(0xbc32, 0x8c39, 0xa0f0, 0x33f1, 0x68f6, 0x69b3, 0x0, 0x1);
        gbc.writeMem(0xbc32, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8c39);
        EXPECT(gbc.pc(), 0xbc34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc32), 0xcb);
        EXPECT(gbc.readMem(0xbc33), 0x75);
        // CB 75 00C8
        gbc.setState(0x311b, 0x6d76, 0xbbb0, 0x971, 0xcc4b, 0xec41, 0x1, 0x0);
        gbc.writeMem(0x311b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6d76);
        EXPECT(gbc.pc(), 0x311d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00C9
        gbc.setState(0x7682, 0x9ecf, 0x64f0, 0x9be2, 0x3393, 0x17dd, 0x0, 0x1);
        gbc.writeMem(0x7682, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9ecf);
        EXPECT(gbc.pc(), 0x7684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00CA
        gbc.setState(0xcbf4, 0xbbf6, 0x2070, 0x7257, 0x771b, 0xe2df, 0x0, 0x1);
        gbc.writeMem(0xcbf4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbbf6);
        EXPECT(gbc.pc(), 0xcbf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbf4), 0xcb);
        EXPECT(gbc.readMem(0xcbf5), 0x75);
        // CB 75 00CB
        gbc.setState(0x2411, 0xc1e0, 0xa1f0, 0x9d95, 0x7e44, 0x625a, 0x0, 0x1);
        gbc.writeMem(0x2411, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc1e0);
        EXPECT(gbc.pc(), 0x2413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00CC
        gbc.setState(0xe320, 0xab8c, 0x3880, 0x2d6e, 0x4bf0, 0xd9bb, 0x1, 0x1);
        gbc.writeMem(0xe320, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xab8c);
        EXPECT(gbc.pc(), 0xe322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe320), 0xcb);
        EXPECT(gbc.readMem(0xe321), 0x75);
        // CB 75 00CD
        gbc.setState(0x89cd, 0x952b, 0x5440, 0xdec2, 0xcbb6, 0x8bbc, 0x1, 0x0);
        gbc.writeMem(0x89cd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x952b);
        EXPECT(gbc.pc(), 0x89cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89cd), 0xcb);
        EXPECT(gbc.readMem(0x89ce), 0x75);
        // CB 75 00CE
        gbc.setState(0x13fa, 0x50e4, 0x5b40, 0xe4a6, 0x1a77, 0xa24f, 0x0, 0x1);
        gbc.writeMem(0x13fa, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x50e4);
        EXPECT(gbc.pc(), 0x13fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00CF
        gbc.setState(0xd241, 0x400f, 0xd540, 0xdbe2, 0xca46, 0xd7a0, 0x0, 0x0);
        gbc.writeMem(0xd241, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x400f);
        EXPECT(gbc.pc(), 0xd243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd241), 0xcb);
        EXPECT(gbc.readMem(0xd242), 0x75);
        // CB 75 00D0
        gbc.setState(0xbf31, 0x3586, 0x8880, 0x67f, 0xb369, 0xdc1c, 0x0, 0x1);
        gbc.writeMem(0xbf31, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3586);
        EXPECT(gbc.pc(), 0xbf33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf31), 0xcb);
        EXPECT(gbc.readMem(0xbf32), 0x75);
        // CB 75 00D1
        gbc.setState(0xaad, 0x7acc, 0x560, 0xbaa9, 0x8bde, 0xbcf9, 0x1, 0x0);
        gbc.writeMem(0xaad, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7acc);
        EXPECT(gbc.pc(), 0xaaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00D2
        gbc.setState(0xd073, 0xbbe5, 0x15b0, 0xff4d, 0xe2d9, 0x398f, 0x1, 0x0);
        gbc.writeMem(0xd073, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xbbe5);
        EXPECT(gbc.pc(), 0xd075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd073), 0xcb);
        EXPECT(gbc.readMem(0xd074), 0x75);
        // CB 75 00D3
        gbc.setState(0xb772, 0x9a17, 0xc240, 0x3778, 0xa723, 0xaecd, 0x0, 0x1);
        gbc.writeMem(0xb772, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9a17);
        EXPECT(gbc.pc(), 0xb774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb772), 0xcb);
        EXPECT(gbc.readMem(0xb773), 0x75);
        // CB 75 00D4
        gbc.setState(0xcc3e, 0x2be, 0xb970, 0x2f41, 0x554b, 0xa66, 0x0, 0x0);
        gbc.writeMem(0xcc3e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2be);
        EXPECT(gbc.pc(), 0xcc40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3e), 0xcb);
        EXPECT(gbc.readMem(0xcc3f), 0x75);
        // CB 75 00D5
        gbc.setState(0x881a, 0xdcd, 0x7170, 0xdcad, 0x5366, 0x6598, 0x0, 0x1);
        gbc.writeMem(0x881a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdcd);
        EXPECT(gbc.pc(), 0x881c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x881a), 0xcb);
        EXPECT(gbc.readMem(0x881b), 0x75);
        // CB 75 00D6
        gbc.setState(0x82a3, 0xcc7c, 0xc5c0, 0xb436, 0xa0be, 0x4d38, 0x0, 0x0);
        gbc.writeMem(0x82a3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcc7c);
        EXPECT(gbc.pc(), 0x82a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a3), 0xcb);
        EXPECT(gbc.readMem(0x82a4), 0x75);
        // CB 75 00D7
        gbc.setState(0x4dff, 0xcf46, 0xbe50, 0x46e6, 0x8021, 0x1993, 0x0, 0x1);
        gbc.writeMem(0x4dff, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcf46);
        EXPECT(gbc.pc(), 0x4e01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00D9
        gbc.setState(0xe852, 0x68b4, 0xa780, 0x7a47, 0x19fc, 0x7ca7, 0x0, 0x1);
        gbc.writeMem(0xe852, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x68b4);
        EXPECT(gbc.pc(), 0xe854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe852), 0xcb);
        EXPECT(gbc.readMem(0xe853), 0x75);
        // CB 75 00DA
        gbc.setState(0xe51, 0x7b39, 0x3ea0, 0x7ae3, 0x18c, 0x1887, 0x1, 0x0);
        gbc.writeMem(0xe51, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7b39);
        EXPECT(gbc.pc(), 0xe53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00DB
        gbc.setState(0xb6e9, 0x1b9f, 0x27d0, 0xa95b, 0x1184, 0xca9e, 0x1, 0x0);
        gbc.writeMem(0xb6e9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1b9f);
        EXPECT(gbc.pc(), 0xb6eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e9), 0xcb);
        EXPECT(gbc.readMem(0xb6ea), 0x75);
        // CB 75 00DC
        gbc.setState(0x78be, 0x931c, 0x5650, 0x243f, 0xdc9d, 0xf114, 0x1, 0x1);
        gbc.writeMem(0x78be, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x931c);
        EXPECT(gbc.pc(), 0x78c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00DD
        gbc.setState(0x30d0, 0xf634, 0x530, 0x3ad1, 0x1e9c, 0x382f, 0x1, 0x0);
        gbc.writeMem(0x30d0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf634);
        EXPECT(gbc.pc(), 0x30d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00DE
        gbc.setState(0x32f6, 0x283a, 0x4ff0, 0x36b7, 0x5240, 0x562a, 0x0, 0x1);
        gbc.writeMem(0x32f6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x283a);
        EXPECT(gbc.pc(), 0x32f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00DF
        gbc.setState(0xa107, 0x6c1e, 0x6b80, 0x984, 0x6187, 0x242f, 0x0, 0x1);
        gbc.writeMem(0xa107, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6c1e);
        EXPECT(gbc.pc(), 0xa109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa107), 0xcb);
        EXPECT(gbc.readMem(0xa108), 0x75);
        // CB 75 00E0
        gbc.setState(0xcab1, 0x56f3, 0xb2b0, 0x7478, 0x7067, 0xefb5, 0x1, 0x0);
        gbc.writeMem(0xcab1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x56f3);
        EXPECT(gbc.pc(), 0xcab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab1), 0xcb);
        EXPECT(gbc.readMem(0xcab2), 0x75);
        // CB 75 00E1
        gbc.setState(0xa90b, 0x6773, 0xa40, 0xd176, 0x8283, 0x6d98, 0x1, 0x1);
        gbc.writeMem(0xa90b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6773);
        EXPECT(gbc.pc(), 0xa90d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa90b), 0xcb);
        EXPECT(gbc.readMem(0xa90c), 0x75);
        // CB 75 00E2
        gbc.setState(0xbc31, 0xc7aa, 0xf980, 0xcca3, 0x918c, 0x1c54, 0x1, 0x0);
        gbc.writeMem(0xbc31, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc7aa);
        EXPECT(gbc.pc(), 0xbc33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc31), 0xcb);
        EXPECT(gbc.readMem(0xbc32), 0x75);
        // CB 75 00E4
        gbc.setState(0x570d, 0x3e8f, 0xcc70, 0x974f, 0x972d, 0x740f, 0x0, 0x0);
        gbc.writeMem(0x570d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3e8f);
        EXPECT(gbc.pc(), 0x570f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00E5
        gbc.setState(0x80bc, 0x79f4, 0x5ba0, 0x5d4, 0xa796, 0xecdd, 0x0, 0x0);
        gbc.writeMem(0x80bc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x79f4);
        EXPECT(gbc.pc(), 0x80be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80bc), 0xcb);
        EXPECT(gbc.readMem(0x80bd), 0x75);
        // CB 75 00E7
        gbc.setState(0x3a9b, 0xe7ff, 0x40c0, 0xcf5a, 0x7889, 0xe84, 0x0, 0x1);
        gbc.writeMem(0x3a9b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe7ff);
        EXPECT(gbc.pc(), 0x3a9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00E8
        gbc.setState(0xbda9, 0x6bb5, 0xdc10, 0x38d0, 0xde90, 0xaaa1, 0x1, 0x0);
        gbc.writeMem(0xbda9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6bb5);
        EXPECT(gbc.pc(), 0xbdab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda9), 0xcb);
        EXPECT(gbc.readMem(0xbdaa), 0x75);
        // CB 75 00E9
        gbc.setState(0x8cdb, 0x2696, 0xa940, 0xf95e, 0x860f, 0x15a2, 0x0, 0x1);
        gbc.writeMem(0x8cdb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2696);
        EXPECT(gbc.pc(), 0x8cdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cdb), 0xcb);
        EXPECT(gbc.readMem(0x8cdc), 0x75);
        // CB 75 00EA
        gbc.setState(0x2c7e, 0xf01d, 0x3f0, 0xb1d2, 0xb64c, 0xe9fd, 0x0, 0x1);
        gbc.writeMem(0x2c7e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf01d);
        EXPECT(gbc.pc(), 0x2c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00EB
        gbc.setState(0xb99a, 0x57e1, 0xf00, 0x6d1d, 0x5cf1, 0x7a75, 0x1, 0x1);
        gbc.writeMem(0xb99a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x57e1);
        EXPECT(gbc.pc(), 0xb99c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99a), 0xcb);
        EXPECT(gbc.readMem(0xb99b), 0x75);
        // CB 75 00EC
        gbc.setState(0xdc37, 0x1173, 0xedf0, 0x3048, 0x89bc, 0x777f, 0x0, 0x1);
        gbc.writeMem(0xdc37, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1173);
        EXPECT(gbc.pc(), 0xdc39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc37), 0xcb);
        EXPECT(gbc.readMem(0xdc38), 0x75);
        // CB 75 00ED
        gbc.setState(0x3f54, 0x7ed9, 0xb8f0, 0x59fb, 0x1cee, 0x434b, 0x0, 0x0);
        gbc.writeMem(0x3f54, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7ed9);
        EXPECT(gbc.pc(), 0x3f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00EE
        gbc.setState(0x2bea, 0xabcd, 0x4ac0, 0x590, 0xe03b, 0xc603, 0x1, 0x0);
        gbc.writeMem(0x2bea, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xabcd);
        EXPECT(gbc.pc(), 0x2bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00EF
        gbc.setState(0xd8f9, 0x7fd3, 0x9990, 0xa9e7, 0xb345, 0xa9a4, 0x0, 0x0);
        gbc.writeMem(0xd8f9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7fd3);
        EXPECT(gbc.pc(), 0xd8fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f9), 0xcb);
        EXPECT(gbc.readMem(0xd8fa), 0x75);
        // CB 75 00F0
        gbc.setState(0x788a, 0x4966, 0x4110, 0x3fb8, 0x16a8, 0x2ec9, 0x0, 0x0);
        gbc.writeMem(0x788a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4966);
        EXPECT(gbc.pc(), 0x788c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00F1
        gbc.setState(0x236b, 0x656d, 0x1910, 0xf54b, 0x8133, 0x5819, 0x0, 0x0);
        gbc.writeMem(0x236b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x656d);
        EXPECT(gbc.pc(), 0x236d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00F2
        gbc.setState(0x372, 0x4691, 0x8280, 0xe311, 0x21be, 0xc2ba, 0x0, 0x1);
        gbc.writeMem(0x372, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4691);
        EXPECT(gbc.pc(), 0x374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00F3
        gbc.setState(0x6e93, 0xf38c, 0x59c0, 0xdc81, 0x91fe, 0x423c, 0x1, 0x1);
        gbc.writeMem(0x6e93, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf38c);
        EXPECT(gbc.pc(), 0x6e95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00F4
        gbc.setState(0x8ed7, 0x52b, 0xdab0, 0x464b, 0x956, 0xaa52, 0x0, 0x1);
        gbc.writeMem(0x8ed7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x52b);
        EXPECT(gbc.pc(), 0x8ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed7), 0xcb);
        EXPECT(gbc.readMem(0x8ed8), 0x75);
        // CB 75 00F5
        gbc.setState(0x6738, 0x2c8a, 0x9eb0, 0x2418, 0xd199, 0x7d6e, 0x0, 0x0);
        gbc.writeMem(0x6738, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2c8a);
        EXPECT(gbc.pc(), 0x673a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00F6
        gbc.setState(0x23c0, 0x6e20, 0x3de0, 0x5776, 0xb3aa, 0xc0ef, 0x1, 0x1);
        gbc.writeMem(0x23c0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6e20);
        EXPECT(gbc.pc(), 0x23c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 00F7
        gbc.setState(0xd85f, 0xf808, 0x8a50, 0x6f, 0x502, 0xc29b, 0x1, 0x1);
        gbc.writeMem(0xd85f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf808);
        EXPECT(gbc.pc(), 0xd861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd85f), 0xcb);
        EXPECT(gbc.readMem(0xd860), 0x75);
        // CB 75 00F8
        gbc.setState(0x716a, 0xe6a0, 0x74b0, 0xe9b4, 0xb8aa, 0x9d3f, 0x1, 0x0);
        gbc.writeMem(0x716a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe6a0);
        EXPECT(gbc.pc(), 0x716c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00F9
        gbc.setState(0x8511, 0xe45c, 0x8330, 0xbbbd, 0x9e93, 0xbf43, 0x0, 0x0);
        gbc.writeMem(0x8511, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe45c);
        EXPECT(gbc.pc(), 0x8513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8511), 0xcb);
        EXPECT(gbc.readMem(0x8512), 0x75);
        // CB 75 00FA
        gbc.setState(0x41db, 0xd0b7, 0x57f0, 0xdbc, 0xb416, 0x3123, 0x0, 0x1);
        gbc.writeMem(0x41db, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd0b7);
        EXPECT(gbc.pc(), 0x41dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00FB
        gbc.setState(0x9cd2, 0x8259, 0x3b0, 0xd96e, 0xa798, 0xe280, 0x0, 0x1);
        gbc.writeMem(0x9cd2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8259);
        EXPECT(gbc.pc(), 0x9cd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd2), 0xcb);
        EXPECT(gbc.readMem(0x9cd3), 0x75);
        // CB 75 00FC
        gbc.setState(0x347b, 0x67c1, 0xcfb0, 0x9c2, 0xad53, 0x80ef, 0x0, 0x0);
        gbc.writeMem(0x347b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x67c1);
        EXPECT(gbc.pc(), 0x347d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 00FD
        gbc.setState(0x96ed, 0x5120, 0x4b80, 0xac93, 0x7943, 0x3a92, 0x1, 0x0);
        gbc.writeMem(0x96ed, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5120);
        EXPECT(gbc.pc(), 0x96ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ed), 0xcb);
        EXPECT(gbc.readMem(0x96ee), 0x75);
        // CB 75 00FE
        gbc.setState(0xd631, 0x417a, 0xfcc0, 0xa38d, 0x7549, 0x575a, 0x0, 0x1);
        gbc.writeMem(0xd631, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x417a);
        EXPECT(gbc.pc(), 0xd633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd631), 0xcb);
        EXPECT(gbc.readMem(0xd632), 0x75);
        // CB 75 0100
        gbc.setState(0xa802, 0x1c32, 0x3930, 0xb8e5, 0x55f3, 0x5c00, 0x0, 0x0);
        gbc.writeMem(0xa802, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1c32);
        EXPECT(gbc.pc(), 0xa804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa802), 0xcb);
        EXPECT(gbc.readMem(0xa803), 0x75);
        // CB 75 0101
        gbc.setState(0x523d, 0xdbc, 0x24d0, 0x58b8, 0x8c9, 0x7882, 0x1, 0x0);
        gbc.writeMem(0x523d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xdbc);
        EXPECT(gbc.pc(), 0x523f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0102
        gbc.setState(0x11ce, 0xf9de, 0xb10, 0x8802, 0x2700, 0xe1ac, 0x1, 0x1);
        gbc.writeMem(0x11ce, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf9de);
        EXPECT(gbc.pc(), 0x11d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0104
        gbc.setState(0xe8b2, 0xf7cb, 0x1330, 0x61fa, 0xe8f1, 0xd2f5, 0x1, 0x1);
        gbc.writeMem(0xe8b2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf7cb);
        EXPECT(gbc.pc(), 0xe8b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b2), 0xcb);
        EXPECT(gbc.readMem(0xe8b3), 0x75);
        // CB 75 0106
        gbc.setState(0xfbb, 0x11c2, 0x5d70, 0xf2e4, 0x2d78, 0x3554, 0x1, 0x1);
        gbc.writeMem(0xfbb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x11c2);
        EXPECT(gbc.pc(), 0xfbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0107
        gbc.setState(0xd0b4, 0xc730, 0xbb70, 0x50fd, 0x76a6, 0xf005, 0x0, 0x0);
        gbc.writeMem(0xd0b4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc730);
        EXPECT(gbc.pc(), 0xd0b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b4), 0xcb);
        EXPECT(gbc.readMem(0xd0b5), 0x75);
        // CB 75 0108
        gbc.setState(0xa73e, 0x13c9, 0xf0b0, 0x7952, 0xff30, 0xf423, 0x1, 0x1);
        gbc.writeMem(0xa73e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x13c9);
        EXPECT(gbc.pc(), 0xa740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa73e), 0xcb);
        EXPECT(gbc.readMem(0xa73f), 0x75);
        // CB 75 0109
        gbc.setState(0x19cb, 0xcb48, 0x3850, 0xfabd, 0xe7de, 0x2442, 0x0, 0x0);
        gbc.writeMem(0x19cb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xcb48);
        EXPECT(gbc.pc(), 0x19cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 010A
        gbc.setState(0x62b6, 0x5057, 0xcf60, 0x1696, 0x4f68, 0x98e3, 0x1, 0x1);
        gbc.writeMem(0x62b6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5057);
        EXPECT(gbc.pc(), 0x62b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 010C
        gbc.setState(0xacc1, 0x19e7, 0x8510, 0x2b46, 0x9dcc, 0x35c0, 0x0, 0x0);
        gbc.writeMem(0xacc1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x19e7);
        EXPECT(gbc.pc(), 0xacc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc1), 0xcb);
        EXPECT(gbc.readMem(0xacc2), 0x75);
        // CB 75 010D
        gbc.setState(0xe1, 0x1b6a, 0xfc40, 0x39d8, 0xe6c1, 0xaade, 0x0, 0x0);
        gbc.writeMem(0xe1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1b6a);
        EXPECT(gbc.pc(), 0xe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 010E
        gbc.setState(0x1b6a, 0xcb56, 0x2420, 0x4d7, 0x45ee, 0x8425, 0x0, 0x1);
        gbc.writeMem(0x1b6a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcb56);
        EXPECT(gbc.pc(), 0x1b6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 010F
        gbc.setState(0x1754, 0xae11, 0x5550, 0x1fad, 0x285a, 0x812c, 0x0, 0x1);
        gbc.writeMem(0x1754, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xae11);
        EXPECT(gbc.pc(), 0x1756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0110
        gbc.setState(0xb3a2, 0xc512, 0x9040, 0x179e, 0x99af, 0xa875, 0x1, 0x0);
        gbc.writeMem(0xb3a2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc512);
        EXPECT(gbc.pc(), 0xb3a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a2), 0xcb);
        EXPECT(gbc.readMem(0xb3a3), 0x75);
        // CB 75 0111
        gbc.setState(0x615f, 0xb653, 0x5e80, 0xceae, 0xa785, 0x98d5, 0x1, 0x0);
        gbc.writeMem(0x615f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb653);
        EXPECT(gbc.pc(), 0x6161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0112
        gbc.setState(0xbf0a, 0x77a6, 0x5230, 0x9c3e, 0x78e7, 0xfe00, 0x1, 0x1);
        gbc.writeMem(0xbf0a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x77a6);
        EXPECT(gbc.pc(), 0xbf0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf0a), 0xcb);
        EXPECT(gbc.readMem(0xbf0b), 0x75);
        // CB 75 0113
        gbc.setState(0xd5ea, 0x8fe0, 0x4ff0, 0x961c, 0x233d, 0x1bb4, 0x0, 0x1);
        gbc.writeMem(0xd5ea, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8fe0);
        EXPECT(gbc.pc(), 0xd5ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ea), 0xcb);
        EXPECT(gbc.readMem(0xd5eb), 0x75);
        // CB 75 0114
        gbc.setState(0xec8a, 0xf92f, 0xa0d0, 0xad79, 0x9620, 0x419b, 0x0, 0x0);
        gbc.writeMem(0xec8a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf92f);
        EXPECT(gbc.pc(), 0xec8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec8a), 0xcb);
        EXPECT(gbc.readMem(0xec8b), 0x75);
        // CB 75 0115
        gbc.setState(0xe5b, 0xbf41, 0xd6f0, 0x409c, 0xffd5, 0xb472, 0x1, 0x0);
        gbc.writeMem(0xe5b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xbf41);
        EXPECT(gbc.pc(), 0xe5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0116
        gbc.setState(0x8a2a, 0x8e18, 0x6d40, 0x9c8, 0xedce, 0xf308, 0x0, 0x0);
        gbc.writeMem(0x8a2a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8e18);
        EXPECT(gbc.pc(), 0x8a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2a), 0xcb);
        EXPECT(gbc.readMem(0x8a2b), 0x75);
        // CB 75 0117
        gbc.setState(0xa899, 0x5039, 0xa740, 0x4abe, 0x6016, 0xd873, 0x1, 0x0);
        gbc.writeMem(0xa899, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5039);
        EXPECT(gbc.pc(), 0xa89b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa899), 0xcb);
        EXPECT(gbc.readMem(0xa89a), 0x75);
        // CB 75 0119
        gbc.setState(0xdaa4, 0xf6df, 0xfc0, 0x547d, 0x5fc5, 0x1e61, 0x1, 0x1);
        gbc.writeMem(0xdaa4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf6df);
        EXPECT(gbc.pc(), 0xdaa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa4), 0xcb);
        EXPECT(gbc.readMem(0xdaa5), 0x75);
        // CB 75 011A
        gbc.setState(0xa7c1, 0xc196, 0x6c10, 0xc937, 0xdae6, 0x47e2, 0x1, 0x1);
        gbc.writeMem(0xa7c1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc196);
        EXPECT(gbc.pc(), 0xa7c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c1), 0xcb);
        EXPECT(gbc.readMem(0xa7c2), 0x75);
        // CB 75 011B
        gbc.setState(0x9107, 0x36f, 0x7730, 0x7c8f, 0xdff9, 0x6c43, 0x0, 0x0);
        gbc.writeMem(0x9107, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x36f);
        EXPECT(gbc.pc(), 0x9109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9107), 0xcb);
        EXPECT(gbc.readMem(0x9108), 0x75);
        // CB 75 011C
        gbc.setState(0x6a45, 0xa7aa, 0xad50, 0x70e8, 0x53b1, 0x9b5c, 0x0, 0x1);
        gbc.writeMem(0x6a45, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa7aa);
        EXPECT(gbc.pc(), 0x6a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 011D
        gbc.setState(0x6818, 0xe1b7, 0x5740, 0xe662, 0xe9a7, 0xc7c, 0x1, 0x1);
        gbc.writeMem(0x6818, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe1b7);
        EXPECT(gbc.pc(), 0x681a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 011E
        gbc.setState(0xb6bb, 0x43c5, 0x7f90, 0xabb1, 0xee07, 0x46d7, 0x0, 0x0);
        gbc.writeMem(0xb6bb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x43c5);
        EXPECT(gbc.pc(), 0xb6bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6bb), 0xcb);
        EXPECT(gbc.readMem(0xb6bc), 0x75);
        // CB 75 011F
        gbc.setState(0x4875, 0x6286, 0x7480, 0x8780, 0xf44, 0xff46, 0x1, 0x0);
        gbc.writeMem(0x4875, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6286);
        EXPECT(gbc.pc(), 0x4877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0120
        gbc.setState(0x243a, 0x621f, 0x7be0, 0xb1d8, 0xef08, 0xfce9, 0x0, 0x1);
        gbc.writeMem(0x243a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x621f);
        EXPECT(gbc.pc(), 0x243c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0121
        gbc.setState(0xd881, 0x8a69, 0x5850, 0x5b5f, 0x7f7a, 0xfa63, 0x1, 0x0);
        gbc.writeMem(0xd881, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8a69);
        EXPECT(gbc.pc(), 0xd883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd881), 0xcb);
        EXPECT(gbc.readMem(0xd882), 0x75);
        // CB 75 0122
        gbc.setState(0x5d40, 0xdc13, 0xf490, 0xb5fc, 0xaff0, 0xbda4, 0x0, 0x0);
        gbc.writeMem(0x5d40, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdc13);
        EXPECT(gbc.pc(), 0x5d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0123
        gbc.setState(0x57cf, 0xdefb, 0x59a0, 0x8772, 0x37bf, 0x155e, 0x0, 0x0);
        gbc.writeMem(0x57cf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xdefb);
        EXPECT(gbc.pc(), 0x57d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0124
        gbc.setState(0xd817, 0x9ead, 0x8b80, 0x4b6b, 0xc4f3, 0x83cf, 0x0, 0x1);
        gbc.writeMem(0xd817, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9ead);
        EXPECT(gbc.pc(), 0xd819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd817), 0xcb);
        EXPECT(gbc.readMem(0xd818), 0x75);
        // CB 75 0126
        gbc.setState(0x132a, 0xd7b4, 0x9120, 0xf6dc, 0xc5fa, 0x9d1, 0x1, 0x0);
        gbc.writeMem(0x132a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd7b4);
        EXPECT(gbc.pc(), 0x132c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0127
        gbc.setState(0x8dbc, 0x8573, 0x9a50, 0xb98c, 0x259, 0xd88f, 0x1, 0x1);
        gbc.writeMem(0x8dbc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8573);
        EXPECT(gbc.pc(), 0x8dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dbc), 0xcb);
        EXPECT(gbc.readMem(0x8dbd), 0x75);
        // CB 75 0128
        gbc.setState(0x72d7, 0x7f6d, 0x1d50, 0x4a82, 0x9e88, 0xd560, 0x1, 0x0);
        gbc.writeMem(0x72d7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7f6d);
        EXPECT(gbc.pc(), 0x72d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0129
        gbc.setState(0xd086, 0x5553, 0x4040, 0xb90, 0xb4c5, 0xdc0d, 0x1, 0x1);
        gbc.writeMem(0xd086, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5553);
        EXPECT(gbc.pc(), 0xd088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd086), 0xcb);
        EXPECT(gbc.readMem(0xd087), 0x75);
        // CB 75 012A
        gbc.setState(0x3f67, 0x79b8, 0xf660, 0x71ae, 0x1aeb, 0xb619, 0x0, 0x1);
        gbc.writeMem(0x3f67, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x79b8);
        EXPECT(gbc.pc(), 0x3f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 012B
        gbc.setState(0x16ed, 0xaf4, 0x6670, 0xefa2, 0xa17f, 0xa65b, 0x0, 0x0);
        gbc.writeMem(0x16ed, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xaf4);
        EXPECT(gbc.pc(), 0x16ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 012C
        gbc.setState(0x1b54, 0xc64d, 0xada0, 0x760d, 0x49f2, 0x33d6, 0x1, 0x1);
        gbc.writeMem(0x1b54, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc64d);
        EXPECT(gbc.pc(), 0x1b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 012D
        gbc.setState(0xd65, 0x6765, 0x51c0, 0xeafc, 0x6e26, 0x253a, 0x1, 0x1);
        gbc.writeMem(0xd65, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6765);
        EXPECT(gbc.pc(), 0xd67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 012E
        gbc.setState(0xe0ad, 0x2013, 0xd440, 0xecf8, 0x89fb, 0xe975, 0x1, 0x1);
        gbc.writeMem(0xe0ad, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2013);
        EXPECT(gbc.pc(), 0xe0af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ad), 0xcb);
        EXPECT(gbc.readMem(0xe0ae), 0x75);
        // CB 75 012F
        gbc.setState(0xd7bd, 0xc4c4, 0x510, 0x234d, 0x1111, 0x3df2, 0x0, 0x1);
        gbc.writeMem(0xd7bd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc4c4);
        EXPECT(gbc.pc(), 0xd7bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7bd), 0xcb);
        EXPECT(gbc.readMem(0xd7be), 0x75);
        // CB 75 0130
        gbc.setState(0x7896, 0x5b78, 0x1010, 0x1d92, 0xa2bf, 0x2168, 0x1, 0x0);
        gbc.writeMem(0x7896, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5b78);
        EXPECT(gbc.pc(), 0x7898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0131
        gbc.setState(0x17a0, 0x3b6f, 0x9b20, 0x5348, 0xedf7, 0xf7e3, 0x1, 0x0);
        gbc.writeMem(0x17a0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3b6f);
        EXPECT(gbc.pc(), 0x17a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0132
        gbc.setState(0xe777, 0x9f9c, 0x2c80, 0x10d3, 0x4fd, 0x970, 0x1, 0x0);
        gbc.writeMem(0xe777, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9f9c);
        EXPECT(gbc.pc(), 0xe779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe777), 0xcb);
        EXPECT(gbc.readMem(0xe778), 0x75);
        // CB 75 0133
        gbc.setState(0x682d, 0x9d22, 0xd300, 0xab5e, 0x6d8e, 0x7d9d, 0x0, 0x0);
        gbc.writeMem(0x682d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9d22);
        EXPECT(gbc.pc(), 0x682f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0134
        gbc.setState(0x1809, 0x82a0, 0x4fa0, 0x70d9, 0xebb4, 0x6d9, 0x1, 0x1);
        gbc.writeMem(0x1809, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0x180b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0135
        gbc.setState(0xc6cc, 0xcbec, 0xbe00, 0xa13d, 0x6538, 0x792b, 0x1, 0x0);
        gbc.writeMem(0xc6cc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcbec);
        EXPECT(gbc.pc(), 0xc6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6cc), 0xcb);
        EXPECT(gbc.readMem(0xc6cd), 0x75);
        // CB 75 0136
        gbc.setState(0x9d39, 0x59ae, 0xca20, 0xa6ba, 0xe20c, 0x57fa, 0x0, 0x0);
        gbc.writeMem(0x9d39, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x59ae);
        EXPECT(gbc.pc(), 0x9d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d39), 0xcb);
        EXPECT(gbc.readMem(0x9d3a), 0x75);
        // CB 75 0137
        gbc.setState(0xb1ad, 0x60a, 0xa670, 0x5810, 0x9436, 0x67d1, 0x0, 0x1);
        gbc.writeMem(0xb1ad, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x60a);
        EXPECT(gbc.pc(), 0xb1af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ad), 0xcb);
        EXPECT(gbc.readMem(0xb1ae), 0x75);
        // CB 75 0138
        gbc.setState(0xf6b, 0x3491, 0x8de0, 0xceb7, 0x380, 0x636b, 0x0, 0x0);
        gbc.writeMem(0xf6b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3491);
        EXPECT(gbc.pc(), 0xf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0139
        gbc.setState(0x1b17, 0xaae1, 0x7c10, 0x92d3, 0xe0e6, 0x94d6, 0x1, 0x1);
        gbc.writeMem(0x1b17, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xaae1);
        EXPECT(gbc.pc(), 0x1b19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 013A
        gbc.setState(0xcc1, 0x740c, 0xdd30, 0x6955, 0xa65b, 0x315, 0x1, 0x0);
        gbc.writeMem(0xcc1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x740c);
        EXPECT(gbc.pc(), 0xcc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 013B
        gbc.setState(0xde80, 0x8945, 0xbab0, 0xd28d, 0x1fd3, 0x7c73, 0x1, 0x0);
        gbc.writeMem(0xde80, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8945);
        EXPECT(gbc.pc(), 0xde82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde80), 0xcb);
        EXPECT(gbc.readMem(0xde81), 0x75);
        // CB 75 013C
        gbc.setState(0x4e0e, 0x8712, 0x69c0, 0x8665, 0x2c85, 0x1b22, 0x1, 0x1);
        gbc.writeMem(0x4e0e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8712);
        EXPECT(gbc.pc(), 0x4e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 013D
        gbc.setState(0x2d65, 0x2521, 0x5490, 0xe13b, 0x5a53, 0xcfa5, 0x1, 0x1);
        gbc.writeMem(0x2d65, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2521);
        EXPECT(gbc.pc(), 0x2d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 013E
        gbc.setState(0x50c9, 0x1f8, 0x4d00, 0xfa61, 0x40d8, 0x5380, 0x1, 0x1);
        gbc.writeMem(0x50c9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1f8);
        EXPECT(gbc.pc(), 0x50cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 013F
        gbc.setState(0x44c2, 0x6f50, 0xf4f0, 0x8448, 0x6777, 0x7b37, 0x0, 0x1);
        gbc.writeMem(0x44c2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6f50);
        EXPECT(gbc.pc(), 0x44c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0140
        gbc.setState(0x3cb4, 0x21a, 0x7640, 0x33a, 0xc821, 0xa65, 0x0, 0x0);
        gbc.writeMem(0x3cb4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x21a);
        EXPECT(gbc.pc(), 0x3cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0141
        gbc.setState(0x3ecf, 0x4b6b, 0xa190, 0x296e, 0x11c4, 0x1e20, 0x1, 0x1);
        gbc.writeMem(0x3ecf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4b6b);
        EXPECT(gbc.pc(), 0x3ed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0142
        gbc.setState(0x98d2, 0x153d, 0x21e0, 0xae62, 0x2b72, 0xae45, 0x1, 0x0);
        gbc.writeMem(0x98d2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x153d);
        EXPECT(gbc.pc(), 0x98d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d2), 0xcb);
        EXPECT(gbc.readMem(0x98d3), 0x75);
        // CB 75 0143
        gbc.setState(0xe07e, 0xde89, 0x2dd0, 0x7c04, 0xf579, 0x6a6e, 0x1, 0x0);
        gbc.writeMem(0xe07e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xde89);
        EXPECT(gbc.pc(), 0xe080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe07e), 0xcb);
        EXPECT(gbc.readMem(0xe07f), 0x75);
        // CB 75 0144
        gbc.setState(0x7c1d, 0x116c, 0xcf40, 0x9d4b, 0xdb31, 0xc640, 0x1, 0x1);
        gbc.writeMem(0x7c1d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x116c);
        EXPECT(gbc.pc(), 0x7c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0148
        gbc.setState(0x1f5c, 0x9ab5, 0xa030, 0xdc9e, 0xf534, 0xd470, 0x1, 0x0);
        gbc.writeMem(0x1f5c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9ab5);
        EXPECT(gbc.pc(), 0x1f5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0149
        gbc.setState(0x3b94, 0x919, 0x3ff0, 0xe75b, 0x4fdf, 0x1a4, 0x1, 0x0);
        gbc.writeMem(0x3b94, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x919);
        EXPECT(gbc.pc(), 0x3b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 014A
        gbc.setState(0x2dec, 0x185f, 0x46a0, 0x44a5, 0x45c2, 0xaf46, 0x1, 0x1);
        gbc.writeMem(0x2dec, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x185f);
        EXPECT(gbc.pc(), 0x2dee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 014B
        gbc.setState(0x1117, 0x8211, 0x89e0, 0x4695, 0xd456, 0xb187, 0x0, 0x1);
        gbc.writeMem(0x1117, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8211);
        EXPECT(gbc.pc(), 0x1119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 014C
        gbc.setState(0xe8bb, 0x212d, 0x2d40, 0x156, 0x65ec, 0xa6b4, 0x0, 0x0);
        gbc.writeMem(0xe8bb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x212d);
        EXPECT(gbc.pc(), 0xe8bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8bb), 0xcb);
        EXPECT(gbc.readMem(0xe8bc), 0x75);
        // CB 75 014D
        gbc.setState(0xafd1, 0xe7ee, 0xc7a0, 0xf333, 0xf3ce, 0xd796, 0x0, 0x0);
        gbc.writeMem(0xafd1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe7ee);
        EXPECT(gbc.pc(), 0xafd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd1), 0xcb);
        EXPECT(gbc.readMem(0xafd2), 0x75);
        // CB 75 014E
        gbc.setState(0x3d9f, 0xd128, 0x78a0, 0x47bc, 0xc2b0, 0xc8bb, 0x1, 0x1);
        gbc.writeMem(0x3d9f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd128);
        EXPECT(gbc.pc(), 0x3da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 014F
        gbc.setState(0x7bfb, 0x6002, 0xb350, 0xfc8b, 0xb7f9, 0xa2de, 0x0, 0x1);
        gbc.writeMem(0x7bfb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6002);
        EXPECT(gbc.pc(), 0x7bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0150
        gbc.setState(0xe901, 0xfbe0, 0x8870, 0x8611, 0xdd83, 0x428c, 0x0, 0x1);
        gbc.writeMem(0xe901, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfbe0);
        EXPECT(gbc.pc(), 0xe903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe901), 0xcb);
        EXPECT(gbc.readMem(0xe902), 0x75);
        // CB 75 0151
        gbc.setState(0x970d, 0xde2c, 0x40b0, 0xd64b, 0x8ad1, 0xe09f, 0x1, 0x1);
        gbc.writeMem(0x970d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xde2c);
        EXPECT(gbc.pc(), 0x970f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x970d), 0xcb);
        EXPECT(gbc.readMem(0x970e), 0x75);
        // CB 75 0152
        gbc.setState(0x9a1, 0x4114, 0xa2a0, 0xcd07, 0x6a77, 0x22e9, 0x1, 0x1);
        gbc.writeMem(0x9a1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4114);
        EXPECT(gbc.pc(), 0x9a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0153
        gbc.setState(0x9f90, 0xc8bc, 0xc3f0, 0xe9ed, 0x41c0, 0xfbbc, 0x1, 0x1);
        gbc.writeMem(0x9f90, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc8bc);
        EXPECT(gbc.pc(), 0x9f92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f90), 0xcb);
        EXPECT(gbc.readMem(0x9f91), 0x75);
        // CB 75 0154
        gbc.setState(0x5d62, 0xf5f4, 0x1100, 0xf12a, 0xd9b, 0x9796, 0x1, 0x0);
        gbc.writeMem(0x5d62, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf5f4);
        EXPECT(gbc.pc(), 0x5d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0155
        gbc.setState(0x410c, 0x9a94, 0xce50, 0xc40a, 0x132c, 0xd5de, 0x1, 0x0);
        gbc.writeMem(0x410c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9a94);
        EXPECT(gbc.pc(), 0x410e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0156
        gbc.setState(0xe5a1, 0xacd2, 0x1350, 0xbfd5, 0x37d1, 0x4da4, 0x0, 0x0);
        gbc.writeMem(0xe5a1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xacd2);
        EXPECT(gbc.pc(), 0xe5a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a1), 0xcb);
        EXPECT(gbc.readMem(0xe5a2), 0x75);
        // CB 75 0157
        gbc.setState(0x7637, 0xa8, 0xa010, 0xff6d, 0x1095, 0x91fe, 0x1, 0x1);
        gbc.writeMem(0x7637, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa8);
        EXPECT(gbc.pc(), 0x7639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0158
        gbc.setState(0x3009, 0x254e, 0xa0, 0xbdc6, 0x92c8, 0x689d, 0x1, 0x1);
        gbc.writeMem(0x3009, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x254e);
        EXPECT(gbc.pc(), 0x300b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0159
        gbc.setState(0xdb5a, 0xb599, 0xe8f0, 0xd271, 0xd86d, 0xd8e5, 0x1, 0x1);
        gbc.writeMem(0xdb5a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb599);
        EXPECT(gbc.pc(), 0xdb5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb5a), 0xcb);
        EXPECT(gbc.readMem(0xdb5b), 0x75);
        // CB 75 015A
        gbc.setState(0x35a2, 0xf829, 0x5e20, 0x2f57, 0x1345, 0x7203, 0x0, 0x1);
        gbc.writeMem(0x35a2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf829);
        EXPECT(gbc.pc(), 0x35a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 015B
        gbc.setState(0x51a7, 0x7807, 0xa9b0, 0x4bd4, 0x723f, 0x1b83, 0x0, 0x1);
        gbc.writeMem(0x51a7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7807);
        EXPECT(gbc.pc(), 0x51a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 015C
        gbc.setState(0xa62f, 0x96c5, 0x64f0, 0x92d3, 0xb7d0, 0x9925, 0x1, 0x0);
        gbc.writeMem(0xa62f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x96c5);
        EXPECT(gbc.pc(), 0xa631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa62f), 0xcb);
        EXPECT(gbc.readMem(0xa630), 0x75);
        // CB 75 015D
        gbc.setState(0x602a, 0x3e42, 0x1480, 0x7d28, 0xb4ea, 0x6023, 0x1, 0x1);
        gbc.writeMem(0x602a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3e42);
        EXPECT(gbc.pc(), 0x602c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 015E
        gbc.setState(0x440a, 0x9441, 0xc1f0, 0x5926, 0x92c4, 0xdc65, 0x1, 0x1);
        gbc.writeMem(0x440a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9441);
        EXPECT(gbc.pc(), 0x440c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 015F
        gbc.setState(0x5988, 0x4343, 0x2770, 0xdcfc, 0x8ad2, 0xeca0, 0x1, 0x1);
        gbc.writeMem(0x5988, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4343);
        EXPECT(gbc.pc(), 0x598a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0160
        gbc.setState(0xe4db, 0xc8e, 0xf990, 0x7f68, 0xb9c0, 0x9f6e, 0x1, 0x0);
        gbc.writeMem(0xe4db, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc8e);
        EXPECT(gbc.pc(), 0xe4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4db), 0xcb);
        EXPECT(gbc.readMem(0xe4dc), 0x75);
        // CB 75 0161
        gbc.setState(0x64c5, 0x3dd7, 0xfd40, 0x2569, 0x6e1a, 0xfe4a, 0x1, 0x1);
        gbc.writeMem(0x64c5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3dd7);
        EXPECT(gbc.pc(), 0x64c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0162
        gbc.setState(0xbd4b, 0x73b4, 0xe960, 0xc483, 0x3e1e, 0xf949, 0x0, 0x1);
        gbc.writeMem(0xbd4b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x73b4);
        EXPECT(gbc.pc(), 0xbd4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4b), 0xcb);
        EXPECT(gbc.readMem(0xbd4c), 0x75);
        // CB 75 0163
        gbc.setState(0xaa90, 0xa97e, 0x7020, 0xb53c, 0xd74e, 0x6d55, 0x1, 0x0);
        gbc.writeMem(0xaa90, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa97e);
        EXPECT(gbc.pc(), 0xaa92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa90), 0xcb);
        EXPECT(gbc.readMem(0xaa91), 0x75);
        // CB 75 0164
        gbc.setState(0xe3a8, 0x42b0, 0xc800, 0x8aea, 0xec7b, 0xe9bd, 0x1, 0x1);
        gbc.writeMem(0xe3a8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x42b0);
        EXPECT(gbc.pc(), 0xe3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a8), 0xcb);
        EXPECT(gbc.readMem(0xe3a9), 0x75);
        // CB 75 0165
        gbc.setState(0xf6a, 0xf81b, 0x3570, 0xbeee, 0xf614, 0xdb3f, 0x0, 0x0);
        gbc.writeMem(0xf6a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf81b);
        EXPECT(gbc.pc(), 0xf6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0166
        gbc.setState(0x5b10, 0x3bee, 0x47e0, 0x58d0, 0x48ad, 0xcb33, 0x0, 0x1);
        gbc.writeMem(0x5b10, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3bee);
        EXPECT(gbc.pc(), 0x5b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0167
        gbc.setState(0x5235, 0x37b5, 0xb2a0, 0x2203, 0x2aca, 0xad76, 0x0, 0x1);
        gbc.writeMem(0x5235, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x37b5);
        EXPECT(gbc.pc(), 0x5237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0168
        gbc.setState(0x4c5f, 0x376, 0x8120, 0x781, 0x389f, 0x57, 0x1, 0x0);
        gbc.writeMem(0x4c5f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x376);
        EXPECT(gbc.pc(), 0x4c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0169
        gbc.setState(0x9a42, 0x3f0b, 0x3b90, 0xc5bf, 0x138, 0xd907, 0x1, 0x1);
        gbc.writeMem(0x9a42, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3f0b);
        EXPECT(gbc.pc(), 0x9a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a42), 0xcb);
        EXPECT(gbc.readMem(0x9a43), 0x75);
        // CB 75 016A
        gbc.setState(0xea3c, 0x667a, 0xde30, 0x937c, 0x5656, 0x9cd7, 0x1, 0x1);
        gbc.writeMem(0xea3c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x667a);
        EXPECT(gbc.pc(), 0xea3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea3c), 0xcb);
        EXPECT(gbc.readMem(0xea3d), 0x75);
        // CB 75 016B
        gbc.setState(0x38f0, 0x2518, 0x79d0, 0xaa53, 0xac58, 0xf502, 0x0, 0x0);
        gbc.writeMem(0x38f0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2518);
        EXPECT(gbc.pc(), 0x38f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 016C
        gbc.setState(0x3843, 0x5a87, 0xebd0, 0xeb4e, 0x58f6, 0x3bd0, 0x1, 0x1);
        gbc.writeMem(0x3843, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5a87);
        EXPECT(gbc.pc(), 0x3845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 016D
        gbc.setState(0x302f, 0x31ef, 0xcf40, 0xfaea, 0xce40, 0x9406, 0x0, 0x1);
        gbc.writeMem(0x302f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x31ef);
        EXPECT(gbc.pc(), 0x3031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 016E
        gbc.setState(0x6798, 0x56c0, 0xf510, 0x1764, 0x582a, 0x8630, 0x1, 0x1);
        gbc.writeMem(0x6798, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x56c0);
        EXPECT(gbc.pc(), 0x679a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 016F
        gbc.setState(0x6c9, 0x1595, 0x2710, 0xd0ef, 0x6316, 0xf916, 0x0, 0x1);
        gbc.writeMem(0x6c9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1595);
        EXPECT(gbc.pc(), 0x6cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0170
        gbc.setState(0xcbe0, 0x4cfb, 0xe850, 0x4ff6, 0x7231, 0x15ca, 0x1, 0x0);
        gbc.writeMem(0xcbe0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4cfb);
        EXPECT(gbc.pc(), 0xcbe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbe0), 0xcb);
        EXPECT(gbc.readMem(0xcbe1), 0x75);
        // CB 75 0171
        gbc.setState(0xdf55, 0x72f9, 0xae70, 0xcfba, 0x776e, 0x10a8, 0x1, 0x1);
        gbc.writeMem(0xdf55, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x72f9);
        EXPECT(gbc.pc(), 0xdf57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf55), 0xcb);
        EXPECT(gbc.readMem(0xdf56), 0x75);
        // CB 75 0172
        gbc.setState(0x3d72, 0xd241, 0x48d0, 0xc80c, 0x6fc9, 0x21d7, 0x0, 0x0);
        gbc.writeMem(0x3d72, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd241);
        EXPECT(gbc.pc(), 0x3d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0174
        gbc.setState(0x64c3, 0x9c, 0x4df0, 0xf005, 0xa7de, 0xadc4, 0x1, 0x0);
        gbc.writeMem(0x64c3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9c);
        EXPECT(gbc.pc(), 0x64c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0175
        gbc.setState(0xa717, 0x26da, 0x8d10, 0x17a5, 0x6ea6, 0x6f53, 0x0, 0x1);
        gbc.writeMem(0xa717, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x26da);
        EXPECT(gbc.pc(), 0xa719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa717), 0xcb);
        EXPECT(gbc.readMem(0xa718), 0x75);
        // CB 75 0176
        gbc.setState(0xea14, 0xf370, 0x7be0, 0x153d, 0x7d39, 0xf489, 0x0, 0x1);
        gbc.writeMem(0xea14, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf370);
        EXPECT(gbc.pc(), 0xea16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea14), 0xcb);
        EXPECT(gbc.readMem(0xea15), 0x75);
        // CB 75 0178
        gbc.setState(0x888, 0xfe7d, 0xe900, 0x87fc, 0x474f, 0x91e, 0x1, 0x0);
        gbc.writeMem(0x888, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfe7d);
        EXPECT(gbc.pc(), 0x88a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0179
        gbc.setState(0x8281, 0xad5d, 0x2f30, 0xb86c, 0xfcd9, 0x7e58, 0x0, 0x1);
        gbc.writeMem(0x8281, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xad5d);
        EXPECT(gbc.pc(), 0x8283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8281), 0xcb);
        EXPECT(gbc.readMem(0x8282), 0x75);
        // CB 75 017C
        gbc.setState(0xb15, 0xf373, 0xcda0, 0x4bde, 0xbd90, 0x8778, 0x0, 0x1);
        gbc.writeMem(0xb15, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf373);
        EXPECT(gbc.pc(), 0xb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 017D
        gbc.setState(0x8379, 0xa92b, 0x8eb0, 0x6673, 0x785e, 0x1592, 0x1, 0x0);
        gbc.writeMem(0x8379, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa92b);
        EXPECT(gbc.pc(), 0x837b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8379), 0xcb);
        EXPECT(gbc.readMem(0x837a), 0x75);
        // CB 75 017E
        gbc.setState(0xcdc8, 0x61bf, 0xd780, 0xcc3d, 0xb436, 0x237f, 0x0, 0x1);
        gbc.writeMem(0xcdc8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x61bf);
        EXPECT(gbc.pc(), 0xcdca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc8), 0xcb);
        EXPECT(gbc.readMem(0xcdc9), 0x75);
        // CB 75 017F
        gbc.setState(0xbbf, 0xff16, 0x17d0, 0x3408, 0xe5a0, 0xba29, 0x1, 0x1);
        gbc.writeMem(0xbbf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xff16);
        EXPECT(gbc.pc(), 0xbc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0180
        gbc.setState(0x5eac, 0x8546, 0xed70, 0x97d3, 0xf002, 0xcff9, 0x1, 0x1);
        gbc.writeMem(0x5eac, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8546);
        EXPECT(gbc.pc(), 0x5eae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0182
        gbc.setState(0x564c, 0xe31b, 0x11f0, 0xefcb, 0xe412, 0xa588, 0x0, 0x1);
        gbc.writeMem(0x564c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe31b);
        EXPECT(gbc.pc(), 0x564e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0183
        gbc.setState(0xbef1, 0xfa8c, 0x5310, 0xc6d8, 0x7b4e, 0xfb8a, 0x0, 0x1);
        gbc.writeMem(0xbef1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfa8c);
        EXPECT(gbc.pc(), 0xbef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef1), 0xcb);
        EXPECT(gbc.readMem(0xbef2), 0x75);
        // CB 75 0184
        gbc.setState(0x57a8, 0x3d86, 0xf8c0, 0xd5e1, 0x55c8, 0xe754, 0x0, 0x1);
        gbc.writeMem(0x57a8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3d86);
        EXPECT(gbc.pc(), 0x57aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0185
        gbc.setState(0x1678, 0x5dac, 0xfad0, 0xbc53, 0xab6a, 0xa524, 0x0, 0x1);
        gbc.writeMem(0x1678, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5dac);
        EXPECT(gbc.pc(), 0x167a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0186
        gbc.setState(0xa14b, 0xd6d, 0x14a0, 0x9f62, 0x5e48, 0xfb0d, 0x0, 0x0);
        gbc.writeMem(0xa14b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd6d);
        EXPECT(gbc.pc(), 0xa14d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa14b), 0xcb);
        EXPECT(gbc.readMem(0xa14c), 0x75);
        // CB 75 0187
        gbc.setState(0xd43a, 0xcde, 0xc2b0, 0x42ef, 0x19a, 0xe0cf, 0x0, 0x0);
        gbc.writeMem(0xd43a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcde);
        EXPECT(gbc.pc(), 0xd43c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43a), 0xcb);
        EXPECT(gbc.readMem(0xd43b), 0x75);
        // CB 75 0188
        gbc.setState(0x8783, 0xd8b5, 0xe310, 0xdd84, 0xfd8e, 0x59f, 0x1, 0x1);
        gbc.writeMem(0x8783, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd8b5);
        EXPECT(gbc.pc(), 0x8785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8783), 0xcb);
        EXPECT(gbc.readMem(0x8784), 0x75);
        // CB 75 0189
        gbc.setState(0x3362, 0x8d36, 0x9aa0, 0xffde, 0x6d48, 0xfeef, 0x0, 0x0);
        gbc.writeMem(0x3362, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8d36);
        EXPECT(gbc.pc(), 0x3364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 018A
        gbc.setState(0x806, 0xfff1, 0x5850, 0x68f4, 0xd0be, 0x6e9b, 0x1, 0x1);
        gbc.writeMem(0x806, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfff1);
        EXPECT(gbc.pc(), 0x808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 018B
        gbc.setState(0x8255, 0xc797, 0x5fd0, 0xa81d, 0xfc8f, 0xdfa1, 0x1, 0x0);
        gbc.writeMem(0x8255, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc797);
        EXPECT(gbc.pc(), 0x8257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8255), 0xcb);
        EXPECT(gbc.readMem(0x8256), 0x75);
        // CB 75 018C
        gbc.setState(0xc8ee, 0x67f, 0xc970, 0xcc46, 0xfbc6, 0x3ac, 0x1, 0x0);
        gbc.writeMem(0xc8ee, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x67f);
        EXPECT(gbc.pc(), 0xc8f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ee), 0xcb);
        EXPECT(gbc.readMem(0xc8ef), 0x75);
        // CB 75 018D
        gbc.setState(0x9cd0, 0x838e, 0xc390, 0xc6c6, 0x5086, 0x5e90, 0x1, 0x0);
        gbc.writeMem(0x9cd0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x838e);
        EXPECT(gbc.pc(), 0x9cd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd0), 0xcb);
        EXPECT(gbc.readMem(0x9cd1), 0x75);
        // CB 75 018E
        gbc.setState(0xebba, 0x9194, 0xd4e0, 0xdfa6, 0x88ff, 0xe4bb, 0x1, 0x1);
        gbc.writeMem(0xebba, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9194);
        EXPECT(gbc.pc(), 0xebbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebba), 0xcb);
        EXPECT(gbc.readMem(0xebbb), 0x75);
        // CB 75 018F
        gbc.setState(0xb1c6, 0x15fa, 0x20, 0x4dc5, 0x87cb, 0x1e7f, 0x1, 0x1);
        gbc.writeMem(0xb1c6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x15fa);
        EXPECT(gbc.pc(), 0xb1c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c6), 0xcb);
        EXPECT(gbc.readMem(0xb1c7), 0x75);
        // CB 75 0190
        gbc.setState(0x2df3, 0x1ff9, 0x9380, 0xe939, 0xb0b8, 0x39c9, 0x0, 0x0);
        gbc.writeMem(0x2df3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1ff9);
        EXPECT(gbc.pc(), 0x2df5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0191
        gbc.setState(0x2cce, 0x62c7, 0x40c0, 0xc09c, 0x3dd, 0x19c8, 0x1, 0x0);
        gbc.writeMem(0x2cce, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x62c7);
        EXPECT(gbc.pc(), 0x2cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0192
        gbc.setState(0x841c, 0x6f09, 0x32b0, 0xcefa, 0x3270, 0x58f, 0x1, 0x0);
        gbc.writeMem(0x841c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6f09);
        EXPECT(gbc.pc(), 0x841e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841c), 0xcb);
        EXPECT(gbc.readMem(0x841d), 0x75);
        // CB 75 0193
        gbc.setState(0x7f54, 0x29e6, 0x5410, 0x27e7, 0x1fbe, 0x6114, 0x0, 0x0);
        gbc.writeMem(0x7f54, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x29e6);
        EXPECT(gbc.pc(), 0x7f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0194
        gbc.setState(0x5a99, 0x7a6e, 0x4630, 0xdfd4, 0xe5b0, 0xaca2, 0x1, 0x1);
        gbc.writeMem(0x5a99, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7a6e);
        EXPECT(gbc.pc(), 0x5a9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0195
        gbc.setState(0x7645, 0xf7f0, 0xb6f0, 0xf88b, 0xf7cc, 0xf978, 0x1, 0x1);
        gbc.writeMem(0x7645, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf7f0);
        EXPECT(gbc.pc(), 0x7647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0196
        gbc.setState(0x4927, 0x52e5, 0x9480, 0x3a26, 0x9138, 0x270c, 0x1, 0x1);
        gbc.writeMem(0x4927, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x52e5);
        EXPECT(gbc.pc(), 0x4929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0197
        gbc.setState(0x8b2a, 0x7e5d, 0xc200, 0x30d9, 0x81ff, 0x8e85, 0x1, 0x0);
        gbc.writeMem(0x8b2a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7e5d);
        EXPECT(gbc.pc(), 0x8b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2a), 0xcb);
        EXPECT(gbc.readMem(0x8b2b), 0x75);
        // CB 75 0198
        gbc.setState(0x12f3, 0x56ea, 0x7d60, 0xb260, 0x5af9, 0x5e2a, 0x1, 0x1);
        gbc.writeMem(0x12f3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x56ea);
        EXPECT(gbc.pc(), 0x12f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0199
        gbc.setState(0x2d3b, 0xd5, 0x5590, 0xe757, 0x4bd6, 0x333d, 0x0, 0x0);
        gbc.writeMem(0x2d3b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd5);
        EXPECT(gbc.pc(), 0x2d3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 019A
        gbc.setState(0xbbfb, 0xd39f, 0x7a50, 0x1335, 0x7d0c, 0x6f0d, 0x0, 0x0);
        gbc.writeMem(0xbbfb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd39f);
        EXPECT(gbc.pc(), 0xbbfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbfb), 0xcb);
        EXPECT(gbc.readMem(0xbbfc), 0x75);
        // CB 75 019B
        gbc.setState(0xbc4b, 0xe2fa, 0x5240, 0xdf3a, 0x5986, 0xd19e, 0x0, 0x0);
        gbc.writeMem(0xbc4b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe2fa);
        EXPECT(gbc.pc(), 0xbc4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc4b), 0xcb);
        EXPECT(gbc.readMem(0xbc4c), 0x75);
        // CB 75 019C
        gbc.setState(0xda5a, 0xc79b, 0xcb00, 0x515b, 0xef4c, 0x98e8, 0x0, 0x0);
        gbc.writeMem(0xda5a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc79b);
        EXPECT(gbc.pc(), 0xda5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda5a), 0xcb);
        EXPECT(gbc.readMem(0xda5b), 0x75);
        // CB 75 019D
        gbc.setState(0xe4ed, 0xd0c4, 0x1e10, 0x9ad0, 0xb517, 0x3991, 0x0, 0x0);
        gbc.writeMem(0xe4ed, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd0c4);
        EXPECT(gbc.pc(), 0xe4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ed), 0xcb);
        EXPECT(gbc.readMem(0xe4ee), 0x75);
        // CB 75 019E
        gbc.setState(0x502, 0x87a7, 0xd1a0, 0x5076, 0x1206, 0x73bc, 0x1, 0x1);
        gbc.writeMem(0x502, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x87a7);
        EXPECT(gbc.pc(), 0x504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 019F
        gbc.setState(0xef96, 0x532b, 0x5310, 0x73be, 0x4613, 0x6337, 0x1, 0x0);
        gbc.writeMem(0xef96, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x532b);
        EXPECT(gbc.pc(), 0xef98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef96), 0xcb);
        EXPECT(gbc.readMem(0xef97), 0x75);
        // CB 75 01A0
        gbc.setState(0xb655, 0x20bf, 0x610, 0xea96, 0x4fdd, 0xbf5a, 0x0, 0x0);
        gbc.writeMem(0xb655, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x20bf);
        EXPECT(gbc.pc(), 0xb657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb655), 0xcb);
        EXPECT(gbc.readMem(0xb656), 0x75);
        // CB 75 01A1
        gbc.setState(0x3dc9, 0x2fbb, 0x3ef0, 0xc06d, 0x783f, 0xaacb, 0x0, 0x1);
        gbc.writeMem(0x3dc9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2fbb);
        EXPECT(gbc.pc(), 0x3dcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01A3
        gbc.setState(0x1f6d, 0xceaa, 0x1f60, 0xcbe7, 0x6314, 0xa425, 0x0, 0x0);
        gbc.writeMem(0x1f6d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xceaa);
        EXPECT(gbc.pc(), 0x1f6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01A4
        gbc.setState(0x6a8d, 0x664d, 0xef50, 0x598b, 0x97d0, 0xed58, 0x1, 0x1);
        gbc.writeMem(0x6a8d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x664d);
        EXPECT(gbc.pc(), 0x6a8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01A5
        gbc.setState(0xc6d9, 0x8a58, 0xb8a0, 0xf21a, 0x30c6, 0x714a, 0x0, 0x0);
        gbc.writeMem(0xc6d9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8a58);
        EXPECT(gbc.pc(), 0xc6db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d9), 0xcb);
        EXPECT(gbc.readMem(0xc6da), 0x75);
        // CB 75 01A6
        gbc.setState(0xcd55, 0x25ec, 0xc8c0, 0x6998, 0x1c2b, 0x4c94, 0x1, 0x0);
        gbc.writeMem(0xcd55, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x25ec);
        EXPECT(gbc.pc(), 0xcd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd55), 0xcb);
        EXPECT(gbc.readMem(0xcd56), 0x75);
        // CB 75 01A7
        gbc.setState(0x1d83, 0xdb4f, 0x4a00, 0x3ed8, 0xb55c, 0x5849, 0x0, 0x0);
        gbc.writeMem(0x1d83, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdb4f);
        EXPECT(gbc.pc(), 0x1d85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01A8
        gbc.setState(0xbd3e, 0xe96c, 0xcf60, 0xaf75, 0x435e, 0xa88b, 0x1, 0x1);
        gbc.writeMem(0xbd3e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe96c);
        EXPECT(gbc.pc(), 0xbd40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd3e), 0xcb);
        EXPECT(gbc.readMem(0xbd3f), 0x75);
        // CB 75 01A9
        gbc.setState(0x1b1d, 0x6c0d, 0xaac0, 0x35e1, 0xeec8, 0xcf28, 0x0, 0x0);
        gbc.writeMem(0x1b1d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6c0d);
        EXPECT(gbc.pc(), 0x1b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01AA
        gbc.setState(0x8d32, 0x7bdb, 0xfaa0, 0xdf1b, 0x39a6, 0xf064, 0x1, 0x1);
        gbc.writeMem(0x8d32, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7bdb);
        EXPECT(gbc.pc(), 0x8d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d32), 0xcb);
        EXPECT(gbc.readMem(0x8d33), 0x75);
        // CB 75 01AB
        gbc.setState(0x6510, 0x49e5, 0x1660, 0xbc4a, 0x1730, 0x7b13, 0x1, 0x0);
        gbc.writeMem(0x6510, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x49e5);
        EXPECT(gbc.pc(), 0x6512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01AC
        gbc.setState(0x9010, 0x2a33, 0xf040, 0x77be, 0xc8e8, 0xf8ff, 0x1, 0x0);
        gbc.writeMem(0x9010, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2a33);
        EXPECT(gbc.pc(), 0x9012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9010), 0xcb);
        EXPECT(gbc.readMem(0x9011), 0x75);
        // CB 75 01AD
        gbc.setState(0x15fb, 0xbbde, 0x5260, 0xe56b, 0x5d53, 0x88b6, 0x0, 0x0);
        gbc.writeMem(0x15fb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbbde);
        EXPECT(gbc.pc(), 0x15fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01AE
        gbc.setState(0x7ea7, 0xbe3a, 0x4010, 0xf30, 0x86f5, 0xf5ca, 0x0, 0x1);
        gbc.writeMem(0x7ea7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbe3a);
        EXPECT(gbc.pc(), 0x7ea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01AF
        gbc.setState(0x9eb9, 0x965c, 0x6c40, 0xacfa, 0x5ca9, 0xb9f5, 0x0, 0x0);
        gbc.writeMem(0x9eb9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x965c);
        EXPECT(gbc.pc(), 0x9ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eb9), 0xcb);
        EXPECT(gbc.readMem(0x9eba), 0x75);
        // CB 75 01B0
        gbc.setState(0x7082, 0xa158, 0x5540, 0x3fd4, 0x90ef, 0x196, 0x1, 0x1);
        gbc.writeMem(0x7082, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa158);
        EXPECT(gbc.pc(), 0x7084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01B2
        gbc.setState(0x74a8, 0xda38, 0x5400, 0x67db, 0xa432, 0xa8a9, 0x1, 0x0);
        gbc.writeMem(0x74a8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xda38);
        EXPECT(gbc.pc(), 0x74aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01B3
        gbc.setState(0x227c, 0x6d38, 0x47e0, 0xc31d, 0x69e5, 0x8cc4, 0x1, 0x0);
        gbc.writeMem(0x227c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6d38);
        EXPECT(gbc.pc(), 0x227e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01B4
        gbc.setState(0x79bb, 0x892b, 0x9f80, 0x8dcd, 0x6b15, 0x23bc, 0x1, 0x1);
        gbc.writeMem(0x79bb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x892b);
        EXPECT(gbc.pc(), 0x79bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01B5
        gbc.setState(0xde1e, 0x1451, 0x6c00, 0xec1d, 0x5b2d, 0x5a7e, 0x1, 0x1);
        gbc.writeMem(0xde1e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1451);
        EXPECT(gbc.pc(), 0xde20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1e), 0xcb);
        EXPECT(gbc.readMem(0xde1f), 0x75);
        // CB 75 01B6
        gbc.setState(0x5441, 0xb421, 0xdf80, 0x475b, 0xf9e0, 0x40af, 0x0, 0x0);
        gbc.writeMem(0x5441, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb421);
        EXPECT(gbc.pc(), 0x5443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01B7
        gbc.setState(0xcd73, 0xa2d, 0x3140, 0x2147, 0xdeab, 0xb84, 0x0, 0x1);
        gbc.writeMem(0xcd73, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa2d);
        EXPECT(gbc.pc(), 0xcd75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd73), 0xcb);
        EXPECT(gbc.readMem(0xcd74), 0x75);
        // CB 75 01B8
        gbc.setState(0x38cf, 0x9d47, 0x8890, 0x51b3, 0x844b, 0x32a9, 0x0, 0x0);
        gbc.writeMem(0x38cf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9d47);
        EXPECT(gbc.pc(), 0x38d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01B9
        gbc.setState(0x13cd, 0xbc59, 0xf50, 0x4b99, 0x14c3, 0x18aa, 0x1, 0x0);
        gbc.writeMem(0x13cd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xbc59);
        EXPECT(gbc.pc(), 0x13cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01BA
        gbc.setState(0xc3f7, 0x4518, 0xf450, 0x1058, 0x6484, 0x8133, 0x0, 0x1);
        gbc.writeMem(0xc3f7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4518);
        EXPECT(gbc.pc(), 0xc3f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f7), 0xcb);
        EXPECT(gbc.readMem(0xc3f8), 0x75);
        // CB 75 01BC
        gbc.setState(0x33be, 0x360e, 0x4ff0, 0xeb70, 0x1cf6, 0xcfe4, 0x0, 0x1);
        gbc.writeMem(0x33be, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x360e);
        EXPECT(gbc.pc(), 0x33c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01BD
        gbc.setState(0x663e, 0x9d48, 0xc490, 0xf081, 0xb359, 0x158b, 0x0, 0x0);
        gbc.writeMem(0x663e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9d48);
        EXPECT(gbc.pc(), 0x6640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01BE
        gbc.setState(0xbf0e, 0x6fc5, 0x1ca0, 0xfc8f, 0x28d, 0x78a, 0x0, 0x1);
        gbc.writeMem(0xbf0e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6fc5);
        EXPECT(gbc.pc(), 0xbf10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf0e), 0xcb);
        EXPECT(gbc.readMem(0xbf0f), 0x75);
        // CB 75 01BF
        gbc.setState(0x7fd0, 0xec78, 0x2160, 0x673, 0xe737, 0xec50, 0x0, 0x0);
        gbc.writeMem(0x7fd0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xec78);
        EXPECT(gbc.pc(), 0x7fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01C0
        gbc.setState(0x6510, 0x6d84, 0xeef0, 0x7147, 0x9864, 0x7188, 0x1, 0x1);
        gbc.writeMem(0x6510, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6d84);
        EXPECT(gbc.pc(), 0x6512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01C1
        gbc.setState(0x5bc, 0x728b, 0x37c0, 0x27d8, 0x987e, 0xc035, 0x0, 0x0);
        gbc.writeMem(0x5bc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x728b);
        EXPECT(gbc.pc(), 0x5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01C2
        gbc.setState(0xe398, 0x8420, 0x6840, 0x4a28, 0x812f, 0x484e, 0x0, 0x1);
        gbc.writeMem(0xe398, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8420);
        EXPECT(gbc.pc(), 0xe39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe398), 0xcb);
        EXPECT(gbc.readMem(0xe399), 0x75);
        // CB 75 01C3
        gbc.setState(0xc60b, 0x85e1, 0x1200, 0xef3, 0x7555, 0xd545, 0x1, 0x1);
        gbc.writeMem(0xc60b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x85e1);
        EXPECT(gbc.pc(), 0xc60d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc60b), 0xcb);
        EXPECT(gbc.readMem(0xc60c), 0x75);
        // CB 75 01C4
        gbc.setState(0x671, 0x50cf, 0x7a10, 0x7ecf, 0x87c4, 0x5010, 0x0, 0x1);
        gbc.writeMem(0x671, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x50cf);
        EXPECT(gbc.pc(), 0x673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01C5
        gbc.setState(0x3742, 0xc5ce, 0x35e0, 0x6b9d, 0x9a4d, 0x998a, 0x0, 0x1);
        gbc.writeMem(0x3742, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc5ce);
        EXPECT(gbc.pc(), 0x3744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01C6
        gbc.setState(0x9a1, 0xf55d, 0xc3b0, 0xce0c, 0x9139, 0x6057, 0x1, 0x1);
        gbc.writeMem(0x9a1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf55d);
        EXPECT(gbc.pc(), 0x9a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01C7
        gbc.setState(0xacd, 0xaa9a, 0x5c70, 0x66bd, 0x5424, 0xf38d, 0x0, 0x0);
        gbc.writeMem(0xacd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xaa9a);
        EXPECT(gbc.pc(), 0xacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01C8
        gbc.setState(0xa967, 0x2f6b, 0xe1c0, 0xcd34, 0x32cd, 0x20d2, 0x1, 0x0);
        gbc.writeMem(0xa967, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2f6b);
        EXPECT(gbc.pc(), 0xa969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa967), 0xcb);
        EXPECT(gbc.readMem(0xa968), 0x75);
        // CB 75 01C9
        gbc.setState(0xa977, 0x509f, 0xd460, 0xfe6b, 0xc697, 0x9104, 0x1, 0x1);
        gbc.writeMem(0xa977, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x509f);
        EXPECT(gbc.pc(), 0xa979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa977), 0xcb);
        EXPECT(gbc.readMem(0xa978), 0x75);
        // CB 75 01CA
        gbc.setState(0x4922, 0x44e7, 0x31d0, 0xbb42, 0x4a58, 0xec6b, 0x1, 0x0);
        gbc.writeMem(0x4922, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x44e7);
        EXPECT(gbc.pc(), 0x4924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01CC
        gbc.setState(0x8465, 0x1e4, 0x4e50, 0x97e1, 0x68a, 0x399f, 0x1, 0x0);
        gbc.writeMem(0x8465, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1e4);
        EXPECT(gbc.pc(), 0x8467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8465), 0xcb);
        EXPECT(gbc.readMem(0x8466), 0x75);
        // CB 75 01CD
        gbc.setState(0x9e8c, 0x63fd, 0xfb40, 0x3413, 0x3ffc, 0xeacb, 0x1, 0x0);
        gbc.writeMem(0x9e8c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x63fd);
        EXPECT(gbc.pc(), 0x9e8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e8c), 0xcb);
        EXPECT(gbc.readMem(0x9e8d), 0x75);
        // CB 75 01CE
        gbc.setState(0xe2a4, 0x44f0, 0xd000, 0x6a57, 0x3f8d, 0xcecb, 0x0, 0x0);
        gbc.writeMem(0xe2a4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x44f0);
        EXPECT(gbc.pc(), 0xe2a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a4), 0xcb);
        EXPECT(gbc.readMem(0xe2a5), 0x75);
        // CB 75 01CF
        gbc.setState(0x8bf8, 0x364d, 0xf810, 0xedc9, 0x9633, 0x5545, 0x1, 0x1);
        gbc.writeMem(0x8bf8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x364d);
        EXPECT(gbc.pc(), 0x8bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf8), 0xcb);
        EXPECT(gbc.readMem(0x8bf9), 0x75);
        // CB 75 01D0
        gbc.setState(0xed54, 0xfc41, 0xa870, 0x8ed6, 0xbb83, 0x3845, 0x0, 0x0);
        gbc.writeMem(0xed54, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfc41);
        EXPECT(gbc.pc(), 0xed56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed54), 0xcb);
        EXPECT(gbc.readMem(0xed55), 0x75);
        // CB 75 01D1
        gbc.setState(0x5ce7, 0x10af, 0x41c0, 0x3121, 0x7aea, 0x9d5f, 0x1, 0x0);
        gbc.writeMem(0x5ce7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x10af);
        EXPECT(gbc.pc(), 0x5ce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01D2
        gbc.setState(0x7d7a, 0xfe48, 0x99e0, 0x5882, 0xf435, 0xfe14, 0x0, 0x1);
        gbc.writeMem(0x7d7a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfe48);
        EXPECT(gbc.pc(), 0x7d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01D3
        gbc.setState(0xc68, 0x9dff, 0x9b50, 0x9173, 0x262b, 0xf64f, 0x1, 0x1);
        gbc.writeMem(0xc68, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9dff);
        EXPECT(gbc.pc(), 0xc6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01D4
        gbc.setState(0xd9ee, 0xea65, 0x3de0, 0x5acc, 0x580a, 0xf9fe, 0x1, 0x0);
        gbc.writeMem(0xd9ee, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xea65);
        EXPECT(gbc.pc(), 0xd9f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ee), 0xcb);
        EXPECT(gbc.readMem(0xd9ef), 0x75);
        // CB 75 01D5
        gbc.setState(0x6b5b, 0xb785, 0xbed0, 0x690e, 0xdd5e, 0x73a0, 0x1, 0x1);
        gbc.writeMem(0x6b5b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb785);
        EXPECT(gbc.pc(), 0x6b5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01D6
        gbc.setState(0x88eb, 0x91b3, 0x9950, 0x395c, 0x9a9d, 0xf638, 0x1, 0x0);
        gbc.writeMem(0x88eb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x91b3);
        EXPECT(gbc.pc(), 0x88ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88eb), 0xcb);
        EXPECT(gbc.readMem(0x88ec), 0x75);
        // CB 75 01D7
        gbc.setState(0x6547, 0xe010, 0x6e10, 0xc521, 0x29fe, 0xb8e1, 0x1, 0x0);
        gbc.writeMem(0x6547, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe010);
        EXPECT(gbc.pc(), 0x6549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01D8
        gbc.setState(0x42b, 0xb1c0, 0xf5e0, 0x230d, 0x28a1, 0x2e61, 0x0, 0x0);
        gbc.writeMem(0x42b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb1c0);
        EXPECT(gbc.pc(), 0x42d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01D9
        gbc.setState(0x8e38, 0x2c1e, 0x3b10, 0x9099, 0x374b, 0x31bd, 0x1, 0x1);
        gbc.writeMem(0x8e38, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2c1e);
        EXPECT(gbc.pc(), 0x8e3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e38), 0xcb);
        EXPECT(gbc.readMem(0x8e39), 0x75);
        // CB 75 01DA
        gbc.setState(0xaa68, 0x257e, 0x6820, 0x58f9, 0x4bec, 0xed3b, 0x1, 0x0);
        gbc.writeMem(0xaa68, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x257e);
        EXPECT(gbc.pc(), 0xaa6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa68), 0xcb);
        EXPECT(gbc.readMem(0xaa69), 0x75);
        // CB 75 01DB
        gbc.setState(0x6a99, 0xe7fd, 0xeba0, 0xbe04, 0xe5bf, 0x2de7, 0x0, 0x0);
        gbc.writeMem(0x6a99, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe7fd);
        EXPECT(gbc.pc(), 0x6a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01DC
        gbc.setState(0x4cb6, 0x30a5, 0xa310, 0x719d, 0x5933, 0x5a85, 0x0, 0x1);
        gbc.writeMem(0x4cb6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x30a5);
        EXPECT(gbc.pc(), 0x4cb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01DD
        gbc.setState(0x76d, 0x5745, 0x2b00, 0x3f04, 0x14da, 0x3402, 0x0, 0x0);
        gbc.writeMem(0x76d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5745);
        EXPECT(gbc.pc(), 0x76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01DE
        gbc.setState(0x4355, 0xb657, 0x86f0, 0xa190, 0x1ac2, 0x6c14, 0x1, 0x0);
        gbc.writeMem(0x4355, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb657);
        EXPECT(gbc.pc(), 0x4357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01DF
        gbc.setState(0x7536, 0xf533, 0x720, 0x512e, 0xa27a, 0x5f30, 0x1, 0x0);
        gbc.writeMem(0x7536, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf533);
        EXPECT(gbc.pc(), 0x7538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01E0
        gbc.setState(0x9420, 0xa749, 0xe4a0, 0xc7bb, 0x29ee, 0x10b4, 0x0, 0x0);
        gbc.writeMem(0x9420, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa749);
        EXPECT(gbc.pc(), 0x9422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9420), 0xcb);
        EXPECT(gbc.readMem(0x9421), 0x75);
        // CB 75 01E1
        gbc.setState(0x3bcf, 0xd3c, 0x5fc0, 0xde34, 0xfbdb, 0x26f0, 0x0, 0x0);
        gbc.writeMem(0x3bcf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd3c);
        EXPECT(gbc.pc(), 0x3bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01E2
        gbc.setState(0x1b35, 0x8a8f, 0x7590, 0x2dbf, 0xb5c0, 0xbcb5, 0x0, 0x1);
        gbc.writeMem(0x1b35, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8a8f);
        EXPECT(gbc.pc(), 0x1b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01E3
        gbc.setState(0x7960, 0xc0b6, 0xbce0, 0x6633, 0x695b, 0xabb4, 0x1, 0x1);
        gbc.writeMem(0x7960, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc0b6);
        EXPECT(gbc.pc(), 0x7962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01E4
        gbc.setState(0xb6e7, 0x7c8b, 0xc480, 0x3e7a, 0xaee2, 0xbf4f, 0x0, 0x0);
        gbc.writeMem(0xb6e7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7c8b);
        EXPECT(gbc.pc(), 0xb6e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e7), 0xcb);
        EXPECT(gbc.readMem(0xb6e8), 0x75);
        // CB 75 01E5
        gbc.setState(0x3212, 0x9dca, 0x7ea0, 0xa463, 0xb8dd, 0xd562, 0x1, 0x0);
        gbc.writeMem(0x3212, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9dca);
        EXPECT(gbc.pc(), 0x3214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01E6
        gbc.setState(0xc50, 0x8c5b, 0x79e0, 0x99b0, 0x27aa, 0x505a, 0x1, 0x1);
        gbc.writeMem(0xc50, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8c5b);
        EXPECT(gbc.pc(), 0xc52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01E7
        gbc.setState(0xdb58, 0x59c3, 0x2740, 0x8e69, 0xdbdb, 0x677d, 0x1, 0x1);
        gbc.writeMem(0xdb58, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x59c3);
        EXPECT(gbc.pc(), 0xdb5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb58), 0xcb);
        EXPECT(gbc.readMem(0xdb59), 0x75);
        // CB 75 01E8
        gbc.setState(0x9d3c, 0xc05b, 0xd2c0, 0x2a15, 0xd2f5, 0xd37b, 0x0, 0x0);
        gbc.writeMem(0x9d3c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc05b);
        EXPECT(gbc.pc(), 0x9d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d3c), 0xcb);
        EXPECT(gbc.readMem(0x9d3d), 0x75);
        // CB 75 01E9
        gbc.setState(0x3d97, 0xc6a5, 0x7810, 0xa7ba, 0xa8a9, 0xaf4d, 0x0, 0x0);
        gbc.writeMem(0x3d97, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc6a5);
        EXPECT(gbc.pc(), 0x3d99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01EA
        gbc.setState(0xe8a, 0xfb4e, 0xe0b0, 0x9192, 0x9c92, 0x4cb2, 0x1, 0x0);
        gbc.writeMem(0xe8a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfb4e);
        EXPECT(gbc.pc(), 0xe8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01EB
        gbc.setState(0x4d07, 0xfd5, 0xeee0, 0xc3bb, 0xb100, 0x9789, 0x0, 0x0);
        gbc.writeMem(0x4d07, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfd5);
        EXPECT(gbc.pc(), 0x4d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01EC
        gbc.setState(0x125e, 0xadc8, 0xaaf0, 0x4862, 0xb085, 0xfc95, 0x1, 0x0);
        gbc.writeMem(0x125e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xadc8);
        EXPECT(gbc.pc(), 0x1260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01ED
        gbc.setState(0x5f98, 0xe260, 0x9410, 0x3cdf, 0x67e5, 0x1efe, 0x0, 0x1);
        gbc.writeMem(0x5f98, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe260);
        EXPECT(gbc.pc(), 0x5f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01EE
        gbc.setState(0xc2cb, 0x98df, 0xf2a0, 0x9321, 0x9e32, 0xc70a, 0x0, 0x1);
        gbc.writeMem(0xc2cb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x98df);
        EXPECT(gbc.pc(), 0xc2cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2cb), 0xcb);
        EXPECT(gbc.readMem(0xc2cc), 0x75);
        // CB 75 01EF
        gbc.setState(0x23b7, 0x3d33, 0x3770, 0x6840, 0xaff8, 0xc487, 0x1, 0x1);
        gbc.writeMem(0x23b7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3d33);
        EXPECT(gbc.pc(), 0x23b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01F0
        gbc.setState(0x8998, 0x5a28, 0x1840, 0x2c3d, 0xe20f, 0xefd, 0x0, 0x0);
        gbc.writeMem(0x8998, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5a28);
        EXPECT(gbc.pc(), 0x899a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8998), 0xcb);
        EXPECT(gbc.readMem(0x8999), 0x75);
        // CB 75 01F1
        gbc.setState(0xe1d1, 0xbe0f, 0x8df0, 0x722a, 0x4a34, 0xc4ea, 0x1, 0x1);
        gbc.writeMem(0xe1d1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbe0f);
        EXPECT(gbc.pc(), 0xe1d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d1), 0xcb);
        EXPECT(gbc.readMem(0xe1d2), 0x75);
        // CB 75 01F2
        gbc.setState(0x188b, 0x80c1, 0xdd0, 0xcc20, 0xd333, 0x61ad, 0x0, 0x0);
        gbc.writeMem(0x188b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x80c1);
        EXPECT(gbc.pc(), 0x188d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01F3
        gbc.setState(0x4eaa, 0x5274, 0x9f70, 0x3469, 0x9703, 0x1485, 0x1, 0x0);
        gbc.writeMem(0x4eaa, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5274);
        EXPECT(gbc.pc(), 0x4eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01F4
        gbc.setState(0x27f5, 0x79f3, 0x2a70, 0x65c9, 0x5be7, 0x1b52, 0x1, 0x0);
        gbc.writeMem(0x27f5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x79f3);
        EXPECT(gbc.pc(), 0x27f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01F5
        gbc.setState(0xd4af, 0xd4d1, 0xa5f0, 0x91be, 0x99b6, 0xbab4, 0x1, 0x1);
        gbc.writeMem(0xd4af, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd4d1);
        EXPECT(gbc.pc(), 0xd4b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4af), 0xcb);
        EXPECT(gbc.readMem(0xd4b0), 0x75);
        // CB 75 01F6
        gbc.setState(0x602c, 0xb1d1, 0xb1e0, 0xe9a1, 0xfe93, 0x685a, 0x0, 0x1);
        gbc.writeMem(0x602c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb1d1);
        EXPECT(gbc.pc(), 0x602e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01F7
        gbc.setState(0x88d5, 0xc151, 0x4f20, 0x7b71, 0xe6c0, 0x642a, 0x1, 0x0);
        gbc.writeMem(0x88d5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc151);
        EXPECT(gbc.pc(), 0x88d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d5), 0xcb);
        EXPECT(gbc.readMem(0x88d6), 0x75);
        // CB 75 01F8
        gbc.setState(0x3089, 0x152f, 0xf00, 0x65bc, 0x1ddc, 0xf2cb, 0x1, 0x1);
        gbc.writeMem(0x3089, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x152f);
        EXPECT(gbc.pc(), 0x308b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01F9
        gbc.setState(0x6b3b, 0x77f6, 0x790, 0x47e3, 0xbc2a, 0xe1da, 0x1, 0x1);
        gbc.writeMem(0x6b3b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x77f6);
        EXPECT(gbc.pc(), 0x6b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01FA
        gbc.setState(0xca36, 0x45a2, 0x3180, 0x6acf, 0xfc20, 0xad43, 0x1, 0x0);
        gbc.writeMem(0xca36, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x45a2);
        EXPECT(gbc.pc(), 0xca38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca36), 0xcb);
        EXPECT(gbc.readMem(0xca37), 0x75);
        // CB 75 01FB
        gbc.setState(0x9735, 0xf46f, 0x7d10, 0xf082, 0xda21, 0x3876, 0x1, 0x1);
        gbc.writeMem(0x9735, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf46f);
        EXPECT(gbc.pc(), 0x9737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9735), 0xcb);
        EXPECT(gbc.readMem(0x9736), 0x75);
        // CB 75 01FC
        gbc.setState(0x56f9, 0x8aef, 0xb0f0, 0x874a, 0xf193, 0x717d, 0x1, 0x0);
        gbc.writeMem(0x56f9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8aef);
        EXPECT(gbc.pc(), 0x56fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01FD
        gbc.setState(0x4cb2, 0x29b0, 0x58c0, 0x6895, 0xb0a6, 0x6793, 0x0, 0x0);
        gbc.writeMem(0x4cb2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x29b0);
        EXPECT(gbc.pc(), 0x4cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 01FE
        gbc.setState(0x1572, 0xd1d5, 0x3610, 0x5c68, 0x27eb, 0x7576, 0x0, 0x0);
        gbc.writeMem(0x1572, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd1d5);
        EXPECT(gbc.pc(), 0x1574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 01FF
        gbc.setState(0x16be, 0xfaf7, 0x5f20, 0x5efe, 0xf507, 0x28b4, 0x0, 0x0);
        gbc.writeMem(0x16be, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfaf7);
        EXPECT(gbc.pc(), 0x16c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0200
        gbc.setState(0x8f6a, 0xb372, 0xf7e0, 0x76fb, 0x91db, 0x1c8a, 0x0, 0x0);
        gbc.writeMem(0x8f6a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb372);
        EXPECT(gbc.pc(), 0x8f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f6a), 0xcb);
        EXPECT(gbc.readMem(0x8f6b), 0x75);
        // CB 75 0201
        gbc.setState(0xe294, 0x9f68, 0xb6d0, 0x5cc8, 0xb782, 0x5e5c, 0x0, 0x1);
        gbc.writeMem(0xe294, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9f68);
        EXPECT(gbc.pc(), 0xe296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe294), 0xcb);
        EXPECT(gbc.readMem(0xe295), 0x75);
        // CB 75 0202
        gbc.setState(0x6832, 0x206c, 0xa910, 0x820d, 0xca23, 0xdf9c, 0x1, 0x0);
        gbc.writeMem(0x6832, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x206c);
        EXPECT(gbc.pc(), 0x6834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0203
        gbc.setState(0x5988, 0x559c, 0x35c0, 0xd7b4, 0x3805, 0xf344, 0x1, 0x0);
        gbc.writeMem(0x5988, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x559c);
        EXPECT(gbc.pc(), 0x598a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0204
        gbc.setState(0xc0eb, 0x7421, 0x7180, 0xa24, 0xf312, 0x2f94, 0x1, 0x1);
        gbc.writeMem(0xc0eb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7421);
        EXPECT(gbc.pc(), 0xc0ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0eb), 0xcb);
        EXPECT(gbc.readMem(0xc0ec), 0x75);
        // CB 75 0205
        gbc.setState(0xc423, 0x5d31, 0xe080, 0x37fd, 0x946, 0xadb8, 0x1, 0x0);
        gbc.writeMem(0xc423, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5d31);
        EXPECT(gbc.pc(), 0xc425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc423), 0xcb);
        EXPECT(gbc.readMem(0xc424), 0x75);
        // CB 75 0206
        gbc.setState(0xb95b, 0x1a69, 0xb850, 0x839d, 0x32ed, 0xc1ce, 0x0, 0x1);
        gbc.writeMem(0xb95b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1a69);
        EXPECT(gbc.pc(), 0xb95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb95b), 0xcb);
        EXPECT(gbc.readMem(0xb95c), 0x75);
        // CB 75 0207
        gbc.setState(0x8456, 0xf14a, 0xa450, 0xa855, 0x4d27, 0x36d9, 0x1, 0x0);
        gbc.writeMem(0x8456, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf14a);
        EXPECT(gbc.pc(), 0x8458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8456), 0xcb);
        EXPECT(gbc.readMem(0x8457), 0x75);
        // CB 75 0208
        gbc.setState(0x2702, 0x2201, 0xb330, 0x3d55, 0xbc74, 0xb37c, 0x0, 0x0);
        gbc.writeMem(0x2702, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2201);
        EXPECT(gbc.pc(), 0x2704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0209
        gbc.setState(0x4342, 0xf92c, 0x3ce0, 0x6ae0, 0x12c4, 0x34db, 0x1, 0x1);
        gbc.writeMem(0x4342, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf92c);
        EXPECT(gbc.pc(), 0x4344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 020A
        gbc.setState(0x129e, 0x23eb, 0x3980, 0x82c1, 0x53be, 0x2549, 0x0, 0x1);
        gbc.writeMem(0x129e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x23eb);
        EXPECT(gbc.pc(), 0x12a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 020B
        gbc.setState(0x5854, 0xb80f, 0x5000, 0x6f17, 0x2d55, 0xc056, 0x0, 0x1);
        gbc.writeMem(0x5854, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb80f);
        EXPECT(gbc.pc(), 0x5856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 020C
        gbc.setState(0xc82a, 0xbdd2, 0xacf0, 0x7de3, 0xe3bf, 0xcd83, 0x0, 0x1);
        gbc.writeMem(0xc82a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbdd2);
        EXPECT(gbc.pc(), 0xc82c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc82a), 0xcb);
        EXPECT(gbc.readMem(0xc82b), 0x75);
        // CB 75 020D
        gbc.setState(0x16ec, 0xec4f, 0x5cf0, 0xa6a6, 0x1d41, 0xf201, 0x1, 0x1);
        gbc.writeMem(0x16ec, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xec4f);
        EXPECT(gbc.pc(), 0x16ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 020E
        gbc.setState(0x3f76, 0x5c60, 0x7f90, 0x6019, 0x8f5e, 0xf525, 0x1, 0x1);
        gbc.writeMem(0x3f76, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5c60);
        EXPECT(gbc.pc(), 0x3f78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 020F
        gbc.setState(0x671a, 0x96fc, 0x78b0, 0x2b06, 0x540c, 0xab9a, 0x1, 0x1);
        gbc.writeMem(0x671a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x96fc);
        EXPECT(gbc.pc(), 0x671c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0210
        gbc.setState(0x4b50, 0x811, 0x18e0, 0x8238, 0xf88e, 0x7b94, 0x0, 0x1);
        gbc.writeMem(0x4b50, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x811);
        EXPECT(gbc.pc(), 0x4b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0211
        gbc.setState(0x303d, 0x70a9, 0xc6e0, 0x4707, 0x231c, 0x5ca4, 0x1, 0x1);
        gbc.writeMem(0x303d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x70a9);
        EXPECT(gbc.pc(), 0x303f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0212
        gbc.setState(0x7146, 0xe5f3, 0x3eb0, 0xa0c6, 0xeb9f, 0x4526, 0x0, 0x0);
        gbc.writeMem(0x7146, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe5f3);
        EXPECT(gbc.pc(), 0x7148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0213
        gbc.setState(0x4628, 0xd136, 0xd290, 0xa955, 0x5395, 0xfe08, 0x1, 0x0);
        gbc.writeMem(0x4628, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd136);
        EXPECT(gbc.pc(), 0x462a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0214
        gbc.setState(0x78f1, 0x2e0, 0x1000, 0x132e, 0xfcb8, 0x6950, 0x1, 0x1);
        gbc.writeMem(0x78f1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2e0);
        EXPECT(gbc.pc(), 0x78f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0215
        gbc.setState(0x1e4c, 0x599e, 0x620, 0xec57, 0x4fb1, 0x3c34, 0x0, 0x0);
        gbc.writeMem(0x1e4c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x599e);
        EXPECT(gbc.pc(), 0x1e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0216
        gbc.setState(0xbb0d, 0x7402, 0x5010, 0x9ccd, 0x24fd, 0x3e68, 0x0, 0x0);
        gbc.writeMem(0xbb0d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7402);
        EXPECT(gbc.pc(), 0xbb0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb0d), 0xcb);
        EXPECT(gbc.readMem(0xbb0e), 0x75);
        // CB 75 0217
        gbc.setState(0x4824, 0x2a47, 0xf320, 0x6cdc, 0xc4eb, 0x4ce1, 0x0, 0x0);
        gbc.writeMem(0x4824, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2a47);
        EXPECT(gbc.pc(), 0x4826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0219
        gbc.setState(0xc275, 0x280d, 0x46c0, 0x164b, 0x8cc0, 0x5dbb, 0x1, 0x0);
        gbc.writeMem(0xc275, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x280d);
        EXPECT(gbc.pc(), 0xc277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc275), 0xcb);
        EXPECT(gbc.readMem(0xc276), 0x75);
        // CB 75 021A
        gbc.setState(0xc03b, 0x1975, 0x7940, 0xa6a8, 0x3776, 0xe20d, 0x0, 0x0);
        gbc.writeMem(0xc03b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1975);
        EXPECT(gbc.pc(), 0xc03d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03b), 0xcb);
        EXPECT(gbc.readMem(0xc03c), 0x75);
        // CB 75 021B
        gbc.setState(0xaed6, 0x2435, 0xff30, 0xcb38, 0xdb84, 0x8ca1, 0x0, 0x1);
        gbc.writeMem(0xaed6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2435);
        EXPECT(gbc.pc(), 0xaed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed6), 0xcb);
        EXPECT(gbc.readMem(0xaed7), 0x75);
        // CB 75 021C
        gbc.setState(0x236a, 0x8dae, 0x9f30, 0x9c11, 0x9f68, 0x35a6, 0x1, 0x1);
        gbc.writeMem(0x236a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8dae);
        EXPECT(gbc.pc(), 0x236c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 021D
        gbc.setState(0xc6cc, 0xbc4e, 0x9620, 0x9c81, 0x739f, 0xf869, 0x1, 0x0);
        gbc.writeMem(0xc6cc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xbc4e);
        EXPECT(gbc.pc(), 0xc6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6cc), 0xcb);
        EXPECT(gbc.readMem(0xc6cd), 0x75);
        // CB 75 021E
        gbc.setState(0xbead, 0x5b45, 0x9590, 0x82f9, 0xb2b5, 0xfeeb, 0x1, 0x0);
        gbc.writeMem(0xbead, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5b45);
        EXPECT(gbc.pc(), 0xbeaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbead), 0xcb);
        EXPECT(gbc.readMem(0xbeae), 0x75);
        // CB 75 021F
        gbc.setState(0x77e0, 0xb711, 0x8f10, 0x498a, 0xbfe7, 0xda7a, 0x0, 0x0);
        gbc.writeMem(0x77e0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb711);
        EXPECT(gbc.pc(), 0x77e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0220
        gbc.setState(0x34b4, 0x2b2e, 0x4500, 0x1de4, 0xb77e, 0x1daf, 0x0, 0x1);
        gbc.writeMem(0x34b4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2b2e);
        EXPECT(gbc.pc(), 0x34b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0221
        gbc.setState(0x873f, 0xddb3, 0x61c0, 0xce07, 0xf47a, 0xf867, 0x0, 0x0);
        gbc.writeMem(0x873f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xddb3);
        EXPECT(gbc.pc(), 0x8741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x873f), 0xcb);
        EXPECT(gbc.readMem(0x8740), 0x75);
        // CB 75 0222
        gbc.setState(0x1825, 0x661b, 0x8e0, 0x5712, 0xff1c, 0xe661, 0x1, 0x0);
        gbc.writeMem(0x1825, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x661b);
        EXPECT(gbc.pc(), 0x1827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0223
        gbc.setState(0xd21e, 0xe0c5, 0x9910, 0xf7fa, 0x1b54, 0xea9d, 0x0, 0x0);
        gbc.writeMem(0xd21e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe0c5);
        EXPECT(gbc.pc(), 0xd220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21e), 0xcb);
        EXPECT(gbc.readMem(0xd21f), 0x75);
        // CB 75 0224
        gbc.setState(0x55f, 0x5c95, 0xba40, 0xe40c, 0x18b2, 0xbbec, 0x0, 0x1);
        gbc.writeMem(0x55f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5c95);
        EXPECT(gbc.pc(), 0x561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0225
        gbc.setState(0x7a86, 0xcc15, 0x1cb0, 0xc28, 0x1a57, 0xa718, 0x0, 0x0);
        gbc.writeMem(0x7a86, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xcc15);
        EXPECT(gbc.pc(), 0x7a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0226
        gbc.setState(0xca4a, 0xf2b2, 0xcdd0, 0x25d1, 0x7f28, 0xfde, 0x1, 0x1);
        gbc.writeMem(0xca4a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf2b2);
        EXPECT(gbc.pc(), 0xca4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca4a), 0xcb);
        EXPECT(gbc.readMem(0xca4b), 0x75);
        // CB 75 0227
        gbc.setState(0x6ca1, 0x7a4c, 0xd430, 0x9cc5, 0xae2c, 0x6a6d, 0x0, 0x1);
        gbc.writeMem(0x6ca1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7a4c);
        EXPECT(gbc.pc(), 0x6ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0228
        gbc.setState(0x1dd4, 0xf52, 0x1f60, 0x9cd0, 0xc531, 0x8945, 0x0, 0x0);
        gbc.writeMem(0x1dd4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf52);
        EXPECT(gbc.pc(), 0x1dd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0229
        gbc.setState(0x8c21, 0x244a, 0xbeb0, 0x2431, 0xe2da, 0x3140, 0x1, 0x0);
        gbc.writeMem(0x8c21, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x244a);
        EXPECT(gbc.pc(), 0x8c23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c21), 0xcb);
        EXPECT(gbc.readMem(0x8c22), 0x75);
        // CB 75 022A
        gbc.setState(0xc437, 0x75b8, 0xc6f0, 0xc1a9, 0xa84d, 0xe49c, 0x0, 0x0);
        gbc.writeMem(0xc437, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x75b8);
        EXPECT(gbc.pc(), 0xc439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc437), 0xcb);
        EXPECT(gbc.readMem(0xc438), 0x75);
        // CB 75 022B
        gbc.setState(0xc3a8, 0x237d, 0xe80, 0xd0a7, 0x2b84, 0x7bd4, 0x0, 0x1);
        gbc.writeMem(0xc3a8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x237d);
        EXPECT(gbc.pc(), 0xc3aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a8), 0xcb);
        EXPECT(gbc.readMem(0xc3a9), 0x75);
        // CB 75 022C
        gbc.setState(0x828a, 0xa4fc, 0xcec0, 0x4273, 0x6a39, 0x8ce1, 0x1, 0x1);
        gbc.writeMem(0x828a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa4fc);
        EXPECT(gbc.pc(), 0x828c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x828a), 0xcb);
        EXPECT(gbc.readMem(0x828b), 0x75);
        // CB 75 022D
        gbc.setState(0xacef, 0x6fa2, 0xb390, 0x9cbf, 0x48a1, 0xbdc, 0x0, 0x0);
        gbc.writeMem(0xacef, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6fa2);
        EXPECT(gbc.pc(), 0xacf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacef), 0xcb);
        EXPECT(gbc.readMem(0xacf0), 0x75);
        // CB 75 022E
        gbc.setState(0x6d7f, 0x68c9, 0xeb60, 0x9e5, 0xff90, 0x419a, 0x1, 0x0);
        gbc.writeMem(0x6d7f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x68c9);
        EXPECT(gbc.pc(), 0x6d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 022F
        gbc.setState(0xac5e, 0xefd3, 0xdb00, 0xd510, 0x3648, 0xea5b, 0x1, 0x1);
        gbc.writeMem(0xac5e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xefd3);
        EXPECT(gbc.pc(), 0xac60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac5e), 0xcb);
        EXPECT(gbc.readMem(0xac5f), 0x75);
        // CB 75 0230
        gbc.setState(0x97f2, 0x1b18, 0xe3f0, 0xa795, 0x2955, 0x5af1, 0x1, 0x1);
        gbc.writeMem(0x97f2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1b18);
        EXPECT(gbc.pc(), 0x97f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f2), 0xcb);
        EXPECT(gbc.readMem(0x97f3), 0x75);
        // CB 75 0231
        gbc.setState(0xeddd, 0x260f, 0x12b0, 0x643a, 0xf90c, 0xf91a, 0x0, 0x1);
        gbc.writeMem(0xeddd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x260f);
        EXPECT(gbc.pc(), 0xeddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeddd), 0xcb);
        EXPECT(gbc.readMem(0xedde), 0x75);
        // CB 75 0232
        gbc.setState(0x7176, 0x6db5, 0xcc60, 0x4d5, 0xc998, 0xabc1, 0x0, 0x0);
        gbc.writeMem(0x7176, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6db5);
        EXPECT(gbc.pc(), 0x7178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0233
        gbc.setState(0xc2fe, 0xa351, 0x6380, 0xbcc9, 0x3906, 0xe2c5, 0x1, 0x1);
        gbc.writeMem(0xc2fe, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa351);
        EXPECT(gbc.pc(), 0xc300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2fe), 0xcb);
        EXPECT(gbc.readMem(0xc2ff), 0x75);
        // CB 75 0234
        gbc.setState(0x5b57, 0xea7f, 0xb860, 0x984, 0x7d02, 0x8498, 0x0, 0x0);
        gbc.writeMem(0x5b57, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xea7f);
        EXPECT(gbc.pc(), 0x5b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0235
        gbc.setState(0x84f1, 0xf459, 0x7820, 0x2a96, 0x4db0, 0x825, 0x0, 0x1);
        gbc.writeMem(0x84f1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf459);
        EXPECT(gbc.pc(), 0x84f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f1), 0xcb);
        EXPECT(gbc.readMem(0x84f2), 0x75);
        // CB 75 0236
        gbc.setState(0x4680, 0xc8e5, 0xace0, 0xfac3, 0x48ad, 0xe5c8, 0x0, 0x0);
        gbc.writeMem(0x4680, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc8e5);
        EXPECT(gbc.pc(), 0x4682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0237
        gbc.setState(0xf4d, 0x5bf2, 0x690, 0x435a, 0x1aa2, 0x432f, 0x1, 0x0);
        gbc.writeMem(0xf4d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5bf2);
        EXPECT(gbc.pc(), 0xf4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0238
        gbc.setState(0xc5c6, 0x1e7f, 0x39b0, 0x426, 0xf58f, 0x5a65, 0x0, 0x0);
        gbc.writeMem(0xc5c6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1e7f);
        EXPECT(gbc.pc(), 0xc5c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c6), 0xcb);
        EXPECT(gbc.readMem(0xc5c7), 0x75);
        // CB 75 0239
        gbc.setState(0x39ed, 0x12af, 0xef80, 0x7ef2, 0xd493, 0x6fd2, 0x0, 0x0);
        gbc.writeMem(0x39ed, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x12af);
        EXPECT(gbc.pc(), 0x39ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 023A
        gbc.setState(0xea70, 0x609f, 0x28c0, 0xe053, 0x8b79, 0x64be, 0x1, 0x1);
        gbc.writeMem(0xea70, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x609f);
        EXPECT(gbc.pc(), 0xea72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea70), 0xcb);
        EXPECT(gbc.readMem(0xea71), 0x75);
        // CB 75 023B
        gbc.setState(0x669d, 0xfb8b, 0x8710, 0x638a, 0xc39a, 0xce3c, 0x0, 0x0);
        gbc.writeMem(0x669d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xfb8b);
        EXPECT(gbc.pc(), 0x669f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 023C
        gbc.setState(0xdd6e, 0xbf4, 0x7d90, 0x5160, 0x9a3, 0xcdf4, 0x1, 0x1);
        gbc.writeMem(0xdd6e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbf4);
        EXPECT(gbc.pc(), 0xdd70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd6e), 0xcb);
        EXPECT(gbc.readMem(0xdd6f), 0x75);
        // CB 75 023D
        gbc.setState(0x5c3e, 0x9877, 0x2990, 0x1e28, 0x4acf, 0x5253, 0x1, 0x0);
        gbc.writeMem(0x5c3e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9877);
        EXPECT(gbc.pc(), 0x5c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 023E
        gbc.setState(0x809d, 0xc356, 0x3280, 0x7bed, 0x3698, 0x78ec, 0x0, 0x1);
        gbc.writeMem(0x809d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc356);
        EXPECT(gbc.pc(), 0x809f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x809d), 0xcb);
        EXPECT(gbc.readMem(0x809e), 0x75);
        // CB 75 023F
        gbc.setState(0xdf24, 0x9794, 0x67b0, 0x1cc, 0x1f78, 0x7183, 0x1, 0x0);
        gbc.writeMem(0xdf24, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9794);
        EXPECT(gbc.pc(), 0xdf26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf24), 0xcb);
        EXPECT(gbc.readMem(0xdf25), 0x75);
        // CB 75 0240
        gbc.setState(0x3687, 0x503c, 0xe060, 0xa3dc, 0x516b, 0x54ce, 0x1, 0x1);
        gbc.writeMem(0x3687, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x503c);
        EXPECT(gbc.pc(), 0x3689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0241
        gbc.setState(0xddac, 0xcfb3, 0x6b20, 0xfa57, 0x7844, 0x1692, 0x1, 0x1);
        gbc.writeMem(0xddac, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcfb3);
        EXPECT(gbc.pc(), 0xddae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddac), 0xcb);
        EXPECT(gbc.readMem(0xddad), 0x75);
        // CB 75 0242
        gbc.setState(0xa9f2, 0xb1a4, 0x6ec0, 0xba54, 0xc70f, 0x1747, 0x0, 0x0);
        gbc.writeMem(0xa9f2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb1a4);
        EXPECT(gbc.pc(), 0xa9f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f2), 0xcb);
        EXPECT(gbc.readMem(0xa9f3), 0x75);
        // CB 75 0243
        gbc.setState(0x5b9c, 0xf546, 0x6aa0, 0x2968, 0x6ff3, 0xcc76, 0x1, 0x0);
        gbc.writeMem(0x5b9c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf546);
        EXPECT(gbc.pc(), 0x5b9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0244
        gbc.setState(0x90a3, 0x1c5a, 0xa0e0, 0x69f9, 0x4e17, 0xb192, 0x1, 0x1);
        gbc.writeMem(0x90a3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1c5a);
        EXPECT(gbc.pc(), 0x90a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90a3), 0xcb);
        EXPECT(gbc.readMem(0x90a4), 0x75);
        // CB 75 0245
        gbc.setState(0x6ab6, 0xf0f7, 0x1fe0, 0x4e73, 0x321f, 0x8f86, 0x0, 0x1);
        gbc.writeMem(0x6ab6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf0f7);
        EXPECT(gbc.pc(), 0x6ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0246
        gbc.setState(0x4847, 0x2adf, 0xa7f0, 0x8140, 0xc576, 0x3886, 0x1, 0x0);
        gbc.writeMem(0x4847, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2adf);
        EXPECT(gbc.pc(), 0x4849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0247
        gbc.setState(0x7c1b, 0xe71b, 0x3470, 0xc342, 0x155e, 0xc5e2, 0x1, 0x1);
        gbc.writeMem(0x7c1b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe71b);
        EXPECT(gbc.pc(), 0x7c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0248
        gbc.setState(0xd5ec, 0x5bb7, 0x8d40, 0x31cb, 0xbe17, 0x5386, 0x0, 0x0);
        gbc.writeMem(0xd5ec, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5bb7);
        EXPECT(gbc.pc(), 0xd5ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ec), 0xcb);
        EXPECT(gbc.readMem(0xd5ed), 0x75);
        // CB 75 0249
        gbc.setState(0xac7e, 0xe0fe, 0x740, 0xd665, 0xadbc, 0xf5c1, 0x1, 0x0);
        gbc.writeMem(0xac7e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe0fe);
        EXPECT(gbc.pc(), 0xac80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac7e), 0xcb);
        EXPECT(gbc.readMem(0xac7f), 0x75);
        // CB 75 024A
        gbc.setState(0xd0e3, 0x329d, 0x8460, 0x2031, 0x649e, 0x13da, 0x1, 0x0);
        gbc.writeMem(0xd0e3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x329d);
        EXPECT(gbc.pc(), 0xd0e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0e3), 0xcb);
        EXPECT(gbc.readMem(0xd0e4), 0x75);
        // CB 75 024B
        gbc.setState(0x92d2, 0x26d7, 0xb100, 0xc8c6, 0xa1e8, 0x24f8, 0x1, 0x0);
        gbc.writeMem(0x92d2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x26d7);
        EXPECT(gbc.pc(), 0x92d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d2), 0xcb);
        EXPECT(gbc.readMem(0x92d3), 0x75);
        // CB 75 024C
        gbc.setState(0xc2c3, 0x9be0, 0x9be0, 0x6ee0, 0x4f1, 0x8190, 0x0, 0x1);
        gbc.writeMem(0xc2c3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9be0);
        EXPECT(gbc.pc(), 0xc2c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c3), 0xcb);
        EXPECT(gbc.readMem(0xc2c4), 0x75);
        // CB 75 024E
        gbc.setState(0x3e5b, 0x1000, 0xb750, 0x852f, 0xd90d, 0x9965, 0x0, 0x0);
        gbc.writeMem(0x3e5b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1000);
        EXPECT(gbc.pc(), 0x3e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 024F
        gbc.setState(0xe082, 0x993b, 0xd790, 0x68b7, 0x2b4d, 0x5ecf, 0x0, 0x1);
        gbc.writeMem(0xe082, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x993b);
        EXPECT(gbc.pc(), 0xe084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe082), 0xcb);
        EXPECT(gbc.readMem(0xe083), 0x75);
        // CB 75 0250
        gbc.setState(0xed49, 0x2153, 0xad80, 0xf74c, 0xda84, 0x7bca, 0x1, 0x0);
        gbc.writeMem(0xed49, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2153);
        EXPECT(gbc.pc(), 0xed4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed49), 0xcb);
        EXPECT(gbc.readMem(0xed4a), 0x75);
        // CB 75 0251
        gbc.setState(0x64f5, 0x1290, 0xa610, 0x4759, 0x25fe, 0xd9d2, 0x1, 0x1);
        gbc.writeMem(0x64f5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1290);
        EXPECT(gbc.pc(), 0x64f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0252
        gbc.setState(0x901b, 0x958c, 0x98d0, 0xd2f1, 0x8e8, 0x1666, 0x0, 0x1);
        gbc.writeMem(0x901b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x958c);
        EXPECT(gbc.pc(), 0x901d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x901b), 0xcb);
        EXPECT(gbc.readMem(0x901c), 0x75);
        // CB 75 0253
        gbc.setState(0x4e41, 0xaa62, 0x3310, 0xbb48, 0xee7b, 0x51df, 0x1, 0x0);
        gbc.writeMem(0x4e41, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xaa62);
        EXPECT(gbc.pc(), 0x4e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0254
        gbc.setState(0x3eb, 0x5c9c, 0x35f0, 0x56e3, 0x765b, 0x13c, 0x1, 0x0);
        gbc.writeMem(0x3eb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5c9c);
        EXPECT(gbc.pc(), 0x3ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0255
        gbc.setState(0x7736, 0xbda9, 0x1320, 0xf2e8, 0x7e38, 0xe1bc, 0x1, 0x1);
        gbc.writeMem(0x7736, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbda9);
        EXPECT(gbc.pc(), 0x7738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0256
        gbc.setState(0x80d7, 0x601b, 0x4980, 0x20b7, 0x88ae, 0x7d4f, 0x1, 0x1);
        gbc.writeMem(0x80d7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x601b);
        EXPECT(gbc.pc(), 0x80d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d7), 0xcb);
        EXPECT(gbc.readMem(0x80d8), 0x75);
        // CB 75 0257
        gbc.setState(0x636f, 0x1011, 0x9b80, 0x4090, 0x591b, 0xb134, 0x1, 0x0);
        gbc.writeMem(0x636f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1011);
        EXPECT(gbc.pc(), 0x6371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0258
        gbc.setState(0x2eac, 0xa876, 0xf150, 0x68c7, 0xbfec, 0xbd18, 0x0, 0x1);
        gbc.writeMem(0x2eac, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa876);
        EXPECT(gbc.pc(), 0x2eae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0259
        gbc.setState(0x7bda, 0xae42, 0xfff0, 0x43ad, 0x2bbc, 0x6b61, 0x0, 0x1);
        gbc.writeMem(0x7bda, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xae42);
        EXPECT(gbc.pc(), 0x7bdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 025B
        gbc.setState(0x387e, 0x11ed, 0x82c0, 0x9729, 0x7104, 0x54d7, 0x1, 0x1);
        gbc.writeMem(0x387e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x11ed);
        EXPECT(gbc.pc(), 0x3880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 025C
        gbc.setState(0x4417, 0x900a, 0xdc0, 0x5bbc, 0xa255, 0x8c21, 0x0, 0x1);
        gbc.writeMem(0x4417, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x900a);
        EXPECT(gbc.pc(), 0x4419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 025E
        gbc.setState(0xc201, 0x54be, 0x46b0, 0x25c5, 0x91f3, 0xc8f6, 0x0, 0x1);
        gbc.writeMem(0xc201, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x54be);
        EXPECT(gbc.pc(), 0xc203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc201), 0xcb);
        EXPECT(gbc.readMem(0xc202), 0x75);
        // CB 75 025F
        gbc.setState(0x57bd, 0x1bf8, 0x3970, 0x6bff, 0xd65e, 0x7c76, 0x0, 0x0);
        gbc.writeMem(0x57bd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1bf8);
        EXPECT(gbc.pc(), 0x57bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0260
        gbc.setState(0x4360, 0x5cfa, 0xa9b0, 0x3b9a, 0xae91, 0xdc8b, 0x1, 0x1);
        gbc.writeMem(0x4360, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5cfa);
        EXPECT(gbc.pc(), 0x4362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0261
        gbc.setState(0xaa8f, 0x6c00, 0x93d0, 0xc10b, 0xf344, 0xd1b5, 0x1, 0x1);
        gbc.writeMem(0xaa8f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6c00);
        EXPECT(gbc.pc(), 0xaa91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa8f), 0xcb);
        EXPECT(gbc.readMem(0xaa90), 0x75);
        // CB 75 0262
        gbc.setState(0xd5e7, 0x259b, 0xc7c0, 0xf1bc, 0xcf34, 0xa129, 0x0, 0x1);
        gbc.writeMem(0xd5e7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x259b);
        EXPECT(gbc.pc(), 0xd5e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e7), 0xcb);
        EXPECT(gbc.readMem(0xd5e8), 0x75);
        // CB 75 0263
        gbc.setState(0x9331, 0x6263, 0x7ac0, 0xcab4, 0x7ca9, 0x2c61, 0x1, 0x0);
        gbc.writeMem(0x9331, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6263);
        EXPECT(gbc.pc(), 0x9333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9331), 0xcb);
        EXPECT(gbc.readMem(0x9332), 0x75);
        // CB 75 0264
        gbc.setState(0xb581, 0xe687, 0xb990, 0xd906, 0x5cc, 0xec57, 0x1, 0x0);
        gbc.writeMem(0xb581, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe687);
        EXPECT(gbc.pc(), 0xb583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb581), 0xcb);
        EXPECT(gbc.readMem(0xb582), 0x75);
        // CB 75 0265
        gbc.setState(0x60d3, 0xa153, 0x8c10, 0x5ac6, 0x863f, 0xdb99, 0x0, 0x0);
        gbc.writeMem(0x60d3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa153);
        EXPECT(gbc.pc(), 0x60d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0266
        gbc.setState(0x6d28, 0x5a39, 0xf4f0, 0x8260, 0x7a6b, 0x4cc5, 0x1, 0x1);
        gbc.writeMem(0x6d28, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5a39);
        EXPECT(gbc.pc(), 0x6d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0267
        gbc.setState(0x7cb6, 0x27d2, 0x5c20, 0xb710, 0x4e93, 0x221f, 0x1, 0x0);
        gbc.writeMem(0x7cb6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x27d2);
        EXPECT(gbc.pc(), 0x7cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0268
        gbc.setState(0x23c6, 0xbdc5, 0x86d0, 0x2ab7, 0xbdc5, 0x9b92, 0x1, 0x0);
        gbc.writeMem(0x23c6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbdc5);
        EXPECT(gbc.pc(), 0x23c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0269
        gbc.setState(0x269, 0x408d, 0x7f0, 0x93a8, 0x570b, 0x1aaf, 0x0, 0x0);
        gbc.writeMem(0x269, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x408d);
        EXPECT(gbc.pc(), 0x26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 026A
        gbc.setState(0xd36e, 0xfc31, 0xff30, 0xe168, 0xd1b0, 0x5a6c, 0x0, 0x0);
        gbc.writeMem(0xd36e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfc31);
        EXPECT(gbc.pc(), 0xd370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd36e), 0xcb);
        EXPECT(gbc.readMem(0xd36f), 0x75);
        // CB 75 026B
        gbc.setState(0x850a, 0xfc3c, 0x7e0, 0xbbab, 0xa692, 0xc4ee, 0x1, 0x0);
        gbc.writeMem(0x850a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfc3c);
        EXPECT(gbc.pc(), 0x850c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x850a), 0xcb);
        EXPECT(gbc.readMem(0x850b), 0x75);
        // CB 75 026D
        gbc.setState(0x531d, 0x4dde, 0x1be0, 0xfb46, 0x20b0, 0xdb03, 0x1, 0x1);
        gbc.writeMem(0x531d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4dde);
        EXPECT(gbc.pc(), 0x531f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 026E
        gbc.setState(0x16e3, 0x115f, 0xb8e0, 0xaaaf, 0xd002, 0xa658, 0x1, 0x1);
        gbc.writeMem(0x16e3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x115f);
        EXPECT(gbc.pc(), 0x16e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 026F
        gbc.setState(0x7183, 0xbfbf, 0x17e0, 0x3989, 0x576f, 0x1fb1, 0x0, 0x1);
        gbc.writeMem(0x7183, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbfbf);
        EXPECT(gbc.pc(), 0x7185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0270
        gbc.setState(0x42d8, 0xe0b8, 0x7d80, 0xd803, 0x58a4, 0xeca6, 0x0, 0x0);
        gbc.writeMem(0x42d8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe0b8);
        EXPECT(gbc.pc(), 0x42da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0271
        gbc.setState(0x3dc7, 0x7190, 0x3e0, 0x865, 0xecb7, 0xcf14, 0x1, 0x0);
        gbc.writeMem(0x3dc7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7190);
        EXPECT(gbc.pc(), 0x3dc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0272
        gbc.setState(0x8c86, 0x2d8, 0xd890, 0x2052, 0xb036, 0x82c2, 0x0, 0x0);
        gbc.writeMem(0x8c86, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2d8);
        EXPECT(gbc.pc(), 0x8c88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c86), 0xcb);
        EXPECT(gbc.readMem(0x8c87), 0x75);
        // CB 75 0273
        gbc.setState(0xc2ab, 0x77f, 0x7ce0, 0xada0, 0xda11, 0x2ae9, 0x1, 0x1);
        gbc.writeMem(0xc2ab, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x77f);
        EXPECT(gbc.pc(), 0xc2ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ab), 0xcb);
        EXPECT(gbc.readMem(0xc2ac), 0x75);
        // CB 75 0274
        gbc.setState(0x5fa0, 0xad02, 0x5650, 0x98ab, 0xfee1, 0xc26d, 0x1, 0x0);
        gbc.writeMem(0x5fa0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xad02);
        EXPECT(gbc.pc(), 0x5fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0275
        gbc.setState(0x328f, 0x82f9, 0x4f60, 0xd8f3, 0x7300, 0x5343, 0x1, 0x1);
        gbc.writeMem(0x328f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x82f9);
        EXPECT(gbc.pc(), 0x3291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0276
        gbc.setState(0xca29, 0xaf21, 0x620, 0x6e9a, 0xc657, 0x3221, 0x1, 0x0);
        gbc.writeMem(0xca29, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xaf21);
        EXPECT(gbc.pc(), 0xca2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca29), 0xcb);
        EXPECT(gbc.readMem(0xca2a), 0x75);
        // CB 75 0277
        gbc.setState(0x1e1a, 0x19ca, 0xce00, 0xdbe0, 0x6678, 0x2f5, 0x0, 0x1);
        gbc.writeMem(0x1e1a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x19ca);
        EXPECT(gbc.pc(), 0x1e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0278
        gbc.setState(0x5363, 0xbd77, 0x70c0, 0x39c1, 0x33db, 0x8931, 0x0, 0x1);
        gbc.writeMem(0x5363, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbd77);
        EXPECT(gbc.pc(), 0x5365);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0279
        gbc.setState(0x1433, 0x5ea, 0x1ae0, 0x9a1c, 0x2625, 0x79d2, 0x0, 0x1);
        gbc.writeMem(0x1433, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5ea);
        EXPECT(gbc.pc(), 0x1435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 027A
        gbc.setState(0x3b1e, 0x98da, 0xe3e0, 0x9d2b, 0x76f7, 0x5b16, 0x0, 0x0);
        gbc.writeMem(0x3b1e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x98da);
        EXPECT(gbc.pc(), 0x3b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 027B
        gbc.setState(0x5fe6, 0x9cfc, 0xe060, 0x924d, 0x99e3, 0xa21d, 0x0, 0x0);
        gbc.writeMem(0x5fe6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9cfc);
        EXPECT(gbc.pc(), 0x5fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 027C
        gbc.setState(0xcdce, 0x4be, 0x9130, 0xfc7, 0x7049, 0x7a25, 0x1, 0x0);
        gbc.writeMem(0xcdce, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4be);
        EXPECT(gbc.pc(), 0xcdd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdce), 0xcb);
        EXPECT(gbc.readMem(0xcdcf), 0x75);
        // CB 75 027D
        gbc.setState(0xb8ce, 0x3e10, 0xba70, 0x74b7, 0xfd0b, 0x59a2, 0x0, 0x0);
        gbc.writeMem(0xb8ce, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x3e10);
        EXPECT(gbc.pc(), 0xb8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ce), 0xcb);
        EXPECT(gbc.readMem(0xb8cf), 0x75);
        // CB 75 027E
        gbc.setState(0x7678, 0x86f, 0x24b0, 0xbfe9, 0xd959, 0x9ef8, 0x0, 0x1);
        gbc.writeMem(0x7678, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x86f);
        EXPECT(gbc.pc(), 0x767a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 027F
        gbc.setState(0x16bd, 0xd676, 0xa400, 0x8ac0, 0x370f, 0x4c28, 0x1, 0x1);
        gbc.writeMem(0x16bd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd676);
        EXPECT(gbc.pc(), 0x16bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0280
        gbc.setState(0x612d, 0x266d, 0x3610, 0xba17, 0xe7dd, 0xe946, 0x0, 0x1);
        gbc.writeMem(0x612d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x266d);
        EXPECT(gbc.pc(), 0x612f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0281
        gbc.setState(0xb457, 0x53e2, 0xc3c0, 0x42a, 0x9a30, 0xe906, 0x0, 0x1);
        gbc.writeMem(0xb457, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x53e2);
        EXPECT(gbc.pc(), 0xb459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb457), 0xcb);
        EXPECT(gbc.readMem(0xb458), 0x75);
        // CB 75 0282
        gbc.setState(0x1784, 0x373f, 0x8bf0, 0xa5f1, 0xd604, 0xb977, 0x0, 0x1);
        gbc.writeMem(0x1784, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x373f);
        EXPECT(gbc.pc(), 0x1786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0283
        gbc.setState(0xed3, 0x78fe, 0x7d80, 0x3445, 0x667f, 0x2fa0, 0x0, 0x1);
        gbc.writeMem(0xed3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x78fe);
        EXPECT(gbc.pc(), 0xed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0284
        gbc.setState(0xe1ca, 0xd1e4, 0x4fb0, 0x90c, 0x3ea9, 0xf884, 0x0, 0x1);
        gbc.writeMem(0xe1ca, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd1e4);
        EXPECT(gbc.pc(), 0xe1cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ca), 0xcb);
        EXPECT(gbc.readMem(0xe1cb), 0x75);
        // CB 75 0285
        gbc.setState(0x2ea9, 0xbdf1, 0x2610, 0xff27, 0xdd8d, 0x591c, 0x0, 0x0);
        gbc.writeMem(0x2ea9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbdf1);
        EXPECT(gbc.pc(), 0x2eab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0286
        gbc.setState(0x88f2, 0x6ac9, 0x6570, 0xbf23, 0x5e5a, 0x967e, 0x0, 0x1);
        gbc.writeMem(0x88f2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6ac9);
        EXPECT(gbc.pc(), 0x88f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f2), 0xcb);
        EXPECT(gbc.readMem(0x88f3), 0x75);
        // CB 75 0287
        gbc.setState(0x5542, 0x65a4, 0x3830, 0xa816, 0x2f33, 0x66a2, 0x0, 0x0);
        gbc.writeMem(0x5542, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x65a4);
        EXPECT(gbc.pc(), 0x5544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0288
        gbc.setState(0x2272, 0xd664, 0xe9f0, 0xf623, 0x82cd, 0x4f18, 0x1, 0x1);
        gbc.writeMem(0x2272, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd664);
        EXPECT(gbc.pc(), 0x2274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0289
        gbc.setState(0x58c0, 0x5ed8, 0x38b0, 0x3ed9, 0xaf5e, 0x160d, 0x1, 0x0);
        gbc.writeMem(0x58c0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5ed8);
        EXPECT(gbc.pc(), 0x58c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 028A
        gbc.setState(0xc2ff, 0x87cb, 0xad90, 0x4c26, 0x1b66, 0xcaa5, 0x1, 0x1);
        gbc.writeMem(0xc2ff, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x87cb);
        EXPECT(gbc.pc(), 0xc301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ff), 0xcb);
        EXPECT(gbc.readMem(0xc300), 0x75);
        // CB 75 028B
        gbc.setState(0xc8e, 0x14be, 0x1d10, 0xc76d, 0x40d0, 0x7f62, 0x0, 0x0);
        gbc.writeMem(0xc8e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x14be);
        EXPECT(gbc.pc(), 0xc90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 028C
        gbc.setState(0x85c6, 0xabe4, 0x6a80, 0xdcb6, 0xb4ae, 0x848, 0x0, 0x1);
        gbc.writeMem(0x85c6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xabe4);
        EXPECT(gbc.pc(), 0x85c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c6), 0xcb);
        EXPECT(gbc.readMem(0x85c7), 0x75);
        // CB 75 028D
        gbc.setState(0x551f, 0xbe7f, 0x1710, 0xb283, 0xbc6c, 0x3892, 0x1, 0x1);
        gbc.writeMem(0x551f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbe7f);
        EXPECT(gbc.pc(), 0x5521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 028F
        gbc.setState(0x2ff3, 0x285c, 0xb500, 0x9b91, 0x2b73, 0xcdf2, 0x1, 0x0);
        gbc.writeMem(0x2ff3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x285c);
        EXPECT(gbc.pc(), 0x2ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0290
        gbc.setState(0x8a0b, 0x7c77, 0xf520, 0x625c, 0x1efd, 0xb3b9, 0x0, 0x0);
        gbc.writeMem(0x8a0b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7c77);
        EXPECT(gbc.pc(), 0x8a0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a0b), 0xcb);
        EXPECT(gbc.readMem(0x8a0c), 0x75);
        // CB 75 0291
        gbc.setState(0xd645, 0xd13e, 0xc3d0, 0xa9a6, 0xcbf4, 0x68ce, 0x0, 0x0);
        gbc.writeMem(0xd645, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd13e);
        EXPECT(gbc.pc(), 0xd647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd645), 0xcb);
        EXPECT(gbc.readMem(0xd646), 0x75);
        // CB 75 0292
        gbc.setState(0xeb32, 0x7fcd, 0xc400, 0x783, 0xec65, 0x4ba0, 0x1, 0x0);
        gbc.writeMem(0xeb32, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7fcd);
        EXPECT(gbc.pc(), 0xeb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb32), 0xcb);
        EXPECT(gbc.readMem(0xeb33), 0x75);
        // CB 75 0293
        gbc.setState(0xc4bb, 0x3fe3, 0x4c90, 0x25b3, 0xd14f, 0x1c7, 0x0, 0x0);
        gbc.writeMem(0xc4bb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3fe3);
        EXPECT(gbc.pc(), 0xc4bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4bb), 0xcb);
        EXPECT(gbc.readMem(0xc4bc), 0x75);
        // CB 75 0294
        gbc.setState(0x4160, 0xc678, 0x5720, 0x4c17, 0x5708, 0x5306, 0x0, 0x0);
        gbc.writeMem(0x4160, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc678);
        EXPECT(gbc.pc(), 0x4162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0295
        gbc.setState(0x8c4d, 0xc2a2, 0xbbe0, 0xae0b, 0xd872, 0xd122, 0x1, 0x0);
        gbc.writeMem(0x8c4d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc2a2);
        EXPECT(gbc.pc(), 0x8c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c4d), 0xcb);
        EXPECT(gbc.readMem(0x8c4e), 0x75);
        // CB 75 0296
        gbc.setState(0x1d36, 0x6d3f, 0xea20, 0x7f64, 0xdc9f, 0x280a, 0x0, 0x0);
        gbc.writeMem(0x1d36, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6d3f);
        EXPECT(gbc.pc(), 0x1d38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0297
        gbc.setState(0x5c8b, 0xe78d, 0x9610, 0x5749, 0x6522, 0x721e, 0x1, 0x0);
        gbc.writeMem(0x5c8b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe78d);
        EXPECT(gbc.pc(), 0x5c8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0298
        gbc.setState(0x6f7f, 0x3e44, 0xade0, 0x9824, 0xfdd7, 0x26af, 0x0, 0x1);
        gbc.writeMem(0x6f7f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3e44);
        EXPECT(gbc.pc(), 0x6f81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0299
        gbc.setState(0xe5b8, 0xa2c4, 0xeb00, 0x82e7, 0x60bb, 0x1fa3, 0x0, 0x1);
        gbc.writeMem(0xe5b8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa2c4);
        EXPECT(gbc.pc(), 0xe5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b8), 0xcb);
        EXPECT(gbc.readMem(0xe5b9), 0x75);
        // CB 75 029A
        gbc.setState(0xa575, 0xa190, 0xd6a0, 0x4122, 0xcc10, 0xdbc0, 0x1, 0x0);
        gbc.writeMem(0xa575, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa190);
        EXPECT(gbc.pc(), 0xa577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa575), 0xcb);
        EXPECT(gbc.readMem(0xa576), 0x75);
        // CB 75 029B
        gbc.setState(0xcc34, 0xbe20, 0xd6c0, 0x38be, 0x56d3, 0x6055, 0x0, 0x0);
        gbc.writeMem(0xcc34, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xbe20);
        EXPECT(gbc.pc(), 0xcc36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc34), 0xcb);
        EXPECT(gbc.readMem(0xcc35), 0x75);
        // CB 75 029C
        gbc.setState(0x8aeb, 0x6890, 0xc0, 0x9a33, 0x2b32, 0xfa26, 0x0, 0x1);
        gbc.writeMem(0x8aeb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6890);
        EXPECT(gbc.pc(), 0x8aed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aeb), 0xcb);
        EXPECT(gbc.readMem(0x8aec), 0x75);
        // CB 75 029D
        gbc.setState(0x3444, 0xb777, 0x9f60, 0x8516, 0x36c1, 0xbc23, 0x0, 0x1);
        gbc.writeMem(0x3444, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb777);
        EXPECT(gbc.pc(), 0x3446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 029E
        gbc.setState(0x63bf, 0xd576, 0xd180, 0x6d00, 0xf8cd, 0x73ee, 0x1, 0x0);
        gbc.writeMem(0x63bf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd576);
        EXPECT(gbc.pc(), 0x63c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02A1
        gbc.setState(0x138, 0x1405, 0xbd70, 0xa940, 0xf085, 0x994c, 0x0, 0x1);
        gbc.writeMem(0x138, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1405);
        EXPECT(gbc.pc(), 0x13a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02A3
        gbc.setState(0xac46, 0x2073, 0x2a50, 0x5e56, 0x238a, 0x4012, 0x1, 0x0);
        gbc.writeMem(0xac46, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2073);
        EXPECT(gbc.pc(), 0xac48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac46), 0xcb);
        EXPECT(gbc.readMem(0xac47), 0x75);
        // CB 75 02A4
        gbc.setState(0xbdc5, 0x78ba, 0x6670, 0x9e75, 0x19fc, 0x274, 0x0, 0x1);
        gbc.writeMem(0xbdc5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x78ba);
        EXPECT(gbc.pc(), 0xbdc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc5), 0xcb);
        EXPECT(gbc.readMem(0xbdc6), 0x75);
        // CB 75 02A5
        gbc.setState(0xa03a, 0x85cf, 0x8fd0, 0x89e8, 0x8ac3, 0xd136, 0x0, 0x0);
        gbc.writeMem(0xa03a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x85cf);
        EXPECT(gbc.pc(), 0xa03c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa03a), 0xcb);
        EXPECT(gbc.readMem(0xa03b), 0x75);
        // CB 75 02A6
        gbc.setState(0x69ae, 0x70f0, 0xe20, 0xa8b1, 0x6d40, 0x770c, 0x1, 0x1);
        gbc.writeMem(0x69ae, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x70f0);
        EXPECT(gbc.pc(), 0x69b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02A7
        gbc.setState(0xc42, 0x8f0e, 0x2de0, 0x24d, 0x9283, 0x3331, 0x0, 0x1);
        gbc.writeMem(0xc42, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8f0e);
        EXPECT(gbc.pc(), 0xc44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02A8
        gbc.setState(0xec71, 0x595d, 0x1d80, 0xd69a, 0xb74, 0x6cea, 0x1, 0x0);
        gbc.writeMem(0xec71, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x595d);
        EXPECT(gbc.pc(), 0xec73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec71), 0xcb);
        EXPECT(gbc.readMem(0xec72), 0x75);
        // CB 75 02A9
        gbc.setState(0x1018, 0x943d, 0xf10, 0xa9d, 0xad4d, 0x3006, 0x1, 0x0);
        gbc.writeMem(0x1018, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x943d);
        EXPECT(gbc.pc(), 0x101a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02AB
        gbc.setState(0x868e, 0x3b23, 0x9510, 0x9c76, 0x87a9, 0xe205, 0x0, 0x1);
        gbc.writeMem(0x868e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3b23);
        EXPECT(gbc.pc(), 0x8690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x868e), 0xcb);
        EXPECT(gbc.readMem(0x868f), 0x75);
        // CB 75 02AC
        gbc.setState(0xbff9, 0x12e9, 0xef70, 0xda81, 0x23ba, 0x983f, 0x1, 0x1);
        gbc.writeMem(0xbff9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x12e9);
        EXPECT(gbc.pc(), 0xbffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff9), 0xcb);
        EXPECT(gbc.readMem(0xbffa), 0x75);
        // CB 75 02AD
        gbc.setState(0xdfa9, 0xe34b, 0x5df0, 0xa5e6, 0xc9f9, 0xec89, 0x1, 0x1);
        gbc.writeMem(0xdfa9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe34b);
        EXPECT(gbc.pc(), 0xdfab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa9), 0xcb);
        EXPECT(gbc.readMem(0xdfaa), 0x75);
        // CB 75 02AE
        gbc.setState(0x3532, 0x52fd, 0x3880, 0x67bf, 0xf094, 0x2ba5, 0x0, 0x1);
        gbc.writeMem(0x3532, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x52fd);
        EXPECT(gbc.pc(), 0x3534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02AF
        gbc.setState(0x3f29, 0x83e3, 0x9d70, 0xb922, 0x632, 0xf311, 0x1, 0x0);
        gbc.writeMem(0x3f29, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x83e3);
        EXPECT(gbc.pc(), 0x3f2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02B0
        gbc.setState(0x9327, 0xd68, 0x1ae0, 0xbf76, 0x7850, 0x2086, 0x1, 0x0);
        gbc.writeMem(0x9327, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd68);
        EXPECT(gbc.pc(), 0x9329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9327), 0xcb);
        EXPECT(gbc.readMem(0x9328), 0x75);
        // CB 75 02B1
        gbc.setState(0x9fc0, 0xa08f, 0xd6b0, 0x889b, 0xcede, 0xaad7, 0x0, 0x0);
        gbc.writeMem(0x9fc0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa08f);
        EXPECT(gbc.pc(), 0x9fc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc0), 0xcb);
        EXPECT(gbc.readMem(0x9fc1), 0x75);
        // CB 75 02B2
        gbc.setState(0x4756, 0x2ad9, 0xc250, 0x3d44, 0xbd0f, 0x76d7, 0x0, 0x1);
        gbc.writeMem(0x4756, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2ad9);
        EXPECT(gbc.pc(), 0x4758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02B3
        gbc.setState(0x5041, 0x1ba6, 0x3680, 0xa431, 0x3e83, 0x1e23, 0x0, 0x0);
        gbc.writeMem(0x5041, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1ba6);
        EXPECT(gbc.pc(), 0x5043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02B4
        gbc.setState(0xefb, 0xf749, 0x4160, 0x4752, 0x8cb0, 0xed3c, 0x1, 0x1);
        gbc.writeMem(0xefb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf749);
        EXPECT(gbc.pc(), 0xefd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02B5
        gbc.setState(0x11f8, 0xda2c, 0x8060, 0x39ad, 0xca0e, 0xe3e7, 0x1, 0x0);
        gbc.writeMem(0x11f8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xda2c);
        EXPECT(gbc.pc(), 0x11fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02B6
        gbc.setState(0x94f, 0x6c16, 0x520, 0x7ac5, 0x2fc6, 0xdf6, 0x0, 0x1);
        gbc.writeMem(0x94f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6c16);
        EXPECT(gbc.pc(), 0x951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02B7
        gbc.setState(0xc3a6, 0x36be, 0x7580, 0x28f8, 0x568f, 0x8b10, 0x1, 0x0);
        gbc.writeMem(0xc3a6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x36be);
        EXPECT(gbc.pc(), 0xc3a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a6), 0xcb);
        EXPECT(gbc.readMem(0xc3a7), 0x75);
        // CB 75 02B8
        gbc.setState(0x568d, 0x9388, 0x7bf0, 0x51e9, 0x3aa7, 0x5968, 0x0, 0x0);
        gbc.writeMem(0x568d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9388);
        EXPECT(gbc.pc(), 0x568f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02B9
        gbc.setState(0xa146, 0xb098, 0x2ef0, 0xab47, 0x7a15, 0x6b45, 0x0, 0x1);
        gbc.writeMem(0xa146, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb098);
        EXPECT(gbc.pc(), 0xa148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa146), 0xcb);
        EXPECT(gbc.readMem(0xa147), 0x75);
        // CB 75 02BB
        gbc.setState(0x7e34, 0xd782, 0xd080, 0xb1dd, 0x5db7, 0x56dd, 0x1, 0x0);
        gbc.writeMem(0x7e34, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd782);
        EXPECT(gbc.pc(), 0x7e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02BC
        gbc.setState(0xe2f0, 0x582e, 0x3b20, 0xeaa8, 0x909, 0xd9c8, 0x0, 0x1);
        gbc.writeMem(0xe2f0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x582e);
        EXPECT(gbc.pc(), 0xe2f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f0), 0xcb);
        EXPECT(gbc.readMem(0xe2f1), 0x75);
        // CB 75 02BD
        gbc.setState(0x8206, 0xb05d, 0x7130, 0x2136, 0x4d7f, 0xc16f, 0x0, 0x0);
        gbc.writeMem(0x8206, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb05d);
        EXPECT(gbc.pc(), 0x8208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8206), 0xcb);
        EXPECT(gbc.readMem(0x8207), 0x75);
        // CB 75 02BE
        gbc.setState(0xc6d2, 0x83a0, 0xf9d0, 0x15e3, 0x8b9c, 0x675f, 0x0, 0x0);
        gbc.writeMem(0xc6d2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x83a0);
        EXPECT(gbc.pc(), 0xc6d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d2), 0xcb);
        EXPECT(gbc.readMem(0xc6d3), 0x75);
        // CB 75 02BF
        gbc.setState(0x19e8, 0x2837, 0x8850, 0x418a, 0x9e03, 0xa92, 0x0, 0x1);
        gbc.writeMem(0x19e8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2837);
        EXPECT(gbc.pc(), 0x19ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02C0
        gbc.setState(0x31a7, 0x479c, 0x5270, 0xc61c, 0x37a2, 0x114a, 0x0, 0x1);
        gbc.writeMem(0x31a7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x479c);
        EXPECT(gbc.pc(), 0x31a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02C1
        gbc.setState(0x58e0, 0x94ad, 0xf910, 0x8dd1, 0x4ece, 0x3cad, 0x0, 0x1);
        gbc.writeMem(0x58e0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x94ad);
        EXPECT(gbc.pc(), 0x58e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02C2
        gbc.setState(0x9920, 0x827c, 0xd710, 0xb270, 0x76fe, 0xa6f2, 0x1, 0x0);
        gbc.writeMem(0x9920, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x827c);
        EXPECT(gbc.pc(), 0x9922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9920), 0xcb);
        EXPECT(gbc.readMem(0x9921), 0x75);
        // CB 75 02C3
        gbc.setState(0x6ee0, 0x2b88, 0x8d00, 0x8f7e, 0x2a8c, 0x9121, 0x0, 0x1);
        gbc.writeMem(0x6ee0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2b88);
        EXPECT(gbc.pc(), 0x6ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02C4
        gbc.setState(0x6308, 0x1f2f, 0x4eb0, 0xd972, 0x24dc, 0xa8d3, 0x0, 0x0);
        gbc.writeMem(0x6308, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1f2f);
        EXPECT(gbc.pc(), 0x630a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02C5
        gbc.setState(0x6811, 0xc453, 0x16e0, 0x33cd, 0x7b13, 0x1673, 0x1, 0x0);
        gbc.writeMem(0x6811, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc453);
        EXPECT(gbc.pc(), 0x6813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02C6
        gbc.setState(0xa837, 0x819f, 0xc420, 0x1018, 0x4a52, 0xdc0a, 0x0, 0x0);
        gbc.writeMem(0xa837, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x819f);
        EXPECT(gbc.pc(), 0xa839);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa837), 0xcb);
        EXPECT(gbc.readMem(0xa838), 0x75);
        // CB 75 02CA
        gbc.setState(0xe618, 0xbebb, 0xe640, 0x463b, 0xef2d, 0x584e, 0x0, 0x1);
        gbc.writeMem(0xe618, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbebb);
        EXPECT(gbc.pc(), 0xe61a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe618), 0xcb);
        EXPECT(gbc.readMem(0xe619), 0x75);
        // CB 75 02CB
        gbc.setState(0xebed, 0xf6f1, 0x6f60, 0xb69a, 0x7c4, 0xf70a, 0x1, 0x0);
        gbc.writeMem(0xebed, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf6f1);
        EXPECT(gbc.pc(), 0xebef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebed), 0xcb);
        EXPECT(gbc.readMem(0xebee), 0x75);
        // CB 75 02CC
        gbc.setState(0x7cfa, 0x670a, 0x4880, 0x87c8, 0x3b31, 0x444a, 0x1, 0x1);
        gbc.writeMem(0x7cfa, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x670a);
        EXPECT(gbc.pc(), 0x7cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02CD
        gbc.setState(0xcac1, 0x7af1, 0x8640, 0x6f78, 0xbba6, 0xbdb2, 0x0, 0x0);
        gbc.writeMem(0xcac1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7af1);
        EXPECT(gbc.pc(), 0xcac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac1), 0xcb);
        EXPECT(gbc.readMem(0xcac2), 0x75);
        // CB 75 02CE
        gbc.setState(0x163a, 0xcbba, 0x9020, 0xd907, 0x43db, 0x9c8c, 0x1, 0x0);
        gbc.writeMem(0x163a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xcbba);
        EXPECT(gbc.pc(), 0x163c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02CF
        gbc.setState(0xc250, 0x643d, 0xa0e0, 0xe34e, 0x10e7, 0xb449, 0x1, 0x0);
        gbc.writeMem(0xc250, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x643d);
        EXPECT(gbc.pc(), 0xc252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc250), 0xcb);
        EXPECT(gbc.readMem(0xc251), 0x75);
        // CB 75 02D0
        gbc.setState(0x83ab, 0x4509, 0xb660, 0x70ec, 0x17e2, 0xa18c, 0x1, 0x1);
        gbc.writeMem(0x83ab, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4509);
        EXPECT(gbc.pc(), 0x83ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ab), 0xcb);
        EXPECT(gbc.readMem(0x83ac), 0x75);
        // CB 75 02D1
        gbc.setState(0x420a, 0x3184, 0x5820, 0x9578, 0xa146, 0xe981, 0x1, 0x0);
        gbc.writeMem(0x420a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3184);
        EXPECT(gbc.pc(), 0x420c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02D2
        gbc.setState(0x5070, 0x6646, 0x3010, 0x8e94, 0x5a52, 0x2491, 0x0, 0x0);
        gbc.writeMem(0x5070, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6646);
        EXPECT(gbc.pc(), 0x5072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02D4
        gbc.setState(0x444b, 0xd9b1, 0x72b0, 0xc6b5, 0xb920, 0x88e1, 0x0, 0x1);
        gbc.writeMem(0x444b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd9b1);
        EXPECT(gbc.pc(), 0x444d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02D5
        gbc.setState(0xd28f, 0x7525, 0xabb0, 0x5030, 0x5b7e, 0x5b58, 0x1, 0x0);
        gbc.writeMem(0xd28f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7525);
        EXPECT(gbc.pc(), 0xd291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd28f), 0xcb);
        EXPECT(gbc.readMem(0xd290), 0x75);
        // CB 75 02D6
        gbc.setState(0x2efc, 0xf05f, 0xe090, 0x771e, 0x61c9, 0x6762, 0x1, 0x1);
        gbc.writeMem(0x2efc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf05f);
        EXPECT(gbc.pc(), 0x2efe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02D7
        gbc.setState(0x408a, 0xfc72, 0x7ff0, 0xd5dd, 0x462c, 0x10c4, 0x0, 0x1);
        gbc.writeMem(0x408a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xfc72);
        EXPECT(gbc.pc(), 0x408c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02D8
        gbc.setState(0x2cbd, 0xdd28, 0x6bc0, 0x89b3, 0x41c7, 0xd968, 0x1, 0x0);
        gbc.writeMem(0x2cbd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xdd28);
        EXPECT(gbc.pc(), 0x2cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02D9
        gbc.setState(0x1180, 0xc509, 0xd720, 0x1f22, 0xd723, 0x3663, 0x1, 0x1);
        gbc.writeMem(0x1180, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc509);
        EXPECT(gbc.pc(), 0x1182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02DA
        gbc.setState(0xb992, 0x6938, 0xbcd0, 0x1bd, 0x7a36, 0x28d, 0x0, 0x0);
        gbc.writeMem(0xb992, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6938);
        EXPECT(gbc.pc(), 0xb994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb992), 0xcb);
        EXPECT(gbc.readMem(0xb993), 0x75);
        // CB 75 02DC
        gbc.setState(0x57ea, 0x103f, 0x1c70, 0xd9ce, 0x7900, 0x99cb, 0x1, 0x1);
        gbc.writeMem(0x57ea, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x103f);
        EXPECT(gbc.pc(), 0x57ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02DD
        gbc.setState(0x44a3, 0xb28b, 0xcbe0, 0x65c2, 0xa713, 0x18f, 0x0, 0x1);
        gbc.writeMem(0x44a3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb28b);
        EXPECT(gbc.pc(), 0x44a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02DE
        gbc.setState(0xe5f2, 0xf5ed, 0xa9f0, 0xab82, 0x306a, 0x6167, 0x0, 0x0);
        gbc.writeMem(0xe5f2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf5ed);
        EXPECT(gbc.pc(), 0xe5f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f2), 0xcb);
        EXPECT(gbc.readMem(0xe5f3), 0x75);
        // CB 75 02DF
        gbc.setState(0x1cd, 0x7dff, 0xea0, 0x97ff, 0x1bed, 0x79f, 0x0, 0x1);
        gbc.writeMem(0x1cd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7dff);
        EXPECT(gbc.pc(), 0x1cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02E0
        gbc.setState(0xc671, 0x190b, 0xa3c0, 0x19cc, 0x3ef0, 0x8a68, 0x1, 0x1);
        gbc.writeMem(0xc671, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x190b);
        EXPECT(gbc.pc(), 0xc673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc671), 0xcb);
        EXPECT(gbc.readMem(0xc672), 0x75);
        // CB 75 02E1
        gbc.setState(0x9de2, 0x44d7, 0x6ed0, 0xb1c, 0xd153, 0x9d84, 0x0, 0x1);
        gbc.writeMem(0x9de2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x44d7);
        EXPECT(gbc.pc(), 0x9de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de2), 0xcb);
        EXPECT(gbc.readMem(0x9de3), 0x75);
        // CB 75 02E2
        gbc.setState(0x597c, 0xb774, 0xeb20, 0xd485, 0x3ec3, 0x5494, 0x0, 0x1);
        gbc.writeMem(0x597c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb774);
        EXPECT(gbc.pc(), 0x597e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02E3
        gbc.setState(0xad86, 0x69cb, 0x1c10, 0xacc6, 0x3dcd, 0x4941, 0x0, 0x1);
        gbc.writeMem(0xad86, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x69cb);
        EXPECT(gbc.pc(), 0xad88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad86), 0xcb);
        EXPECT(gbc.readMem(0xad87), 0x75);
        // CB 75 02E4
        gbc.setState(0x82cb, 0xe18e, 0x86f0, 0x1a9b, 0xfbd7, 0xc0fd, 0x0, 0x1);
        gbc.writeMem(0x82cb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe18e);
        EXPECT(gbc.pc(), 0x82cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cb), 0xcb);
        EXPECT(gbc.readMem(0x82cc), 0x75);
        // CB 75 02E5
        gbc.setState(0xe7f5, 0xd923, 0x3000, 0x3974, 0xf16, 0x6c06, 0x1, 0x0);
        gbc.writeMem(0xe7f5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd923);
        EXPECT(gbc.pc(), 0xe7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f5), 0xcb);
        EXPECT(gbc.readMem(0xe7f6), 0x75);
        // CB 75 02E6
        gbc.setState(0x5f98, 0x8f0, 0x9ad0, 0x47d, 0x5577, 0x6a3f, 0x1, 0x1);
        gbc.writeMem(0x5f98, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8f0);
        EXPECT(gbc.pc(), 0x5f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02E7
        gbc.setState(0xaaac, 0x2fc, 0xe7f0, 0x1af9, 0x959e, 0xf15a, 0x1, 0x1);
        gbc.writeMem(0xaaac, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2fc);
        EXPECT(gbc.pc(), 0xaaae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaac), 0xcb);
        EXPECT(gbc.readMem(0xaaad), 0x75);
        // CB 75 02E8
        gbc.setState(0x613c, 0x5a61, 0x3ea0, 0x6c9c, 0xe199, 0x666, 0x1, 0x0);
        gbc.writeMem(0x613c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5a61);
        EXPECT(gbc.pc(), 0x613e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02E9
        gbc.setState(0x6aa8, 0xbf8e, 0x9430, 0x74ba, 0xdeac, 0xc238, 0x0, 0x0);
        gbc.writeMem(0x6aa8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbf8e);
        EXPECT(gbc.pc(), 0x6aaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02EA
        gbc.setState(0xe6b3, 0x69d8, 0x45f0, 0xadca, 0xaeae, 0xcee9, 0x1, 0x0);
        gbc.writeMem(0xe6b3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x69d8);
        EXPECT(gbc.pc(), 0xe6b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6b3), 0xcb);
        EXPECT(gbc.readMem(0xe6b4), 0x75);
        // CB 75 02EC
        gbc.setState(0xe431, 0x459f, 0x33e0, 0xb212, 0x282e, 0x1e39, 0x0, 0x0);
        gbc.writeMem(0xe431, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x459f);
        EXPECT(gbc.pc(), 0xe433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe431), 0xcb);
        EXPECT(gbc.readMem(0xe432), 0x75);
        // CB 75 02ED
        gbc.setState(0x9cb6, 0xa93e, 0x1150, 0x13c2, 0xa5c9, 0x8103, 0x0, 0x0);
        gbc.writeMem(0x9cb6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa93e);
        EXPECT(gbc.pc(), 0x9cb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb6), 0xcb);
        EXPECT(gbc.readMem(0x9cb7), 0x75);
        // CB 75 02EE
        gbc.setState(0x6e83, 0x55e6, 0x27b0, 0xc9d5, 0xde53, 0x557a, 0x0, 0x0);
        gbc.writeMem(0x6e83, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x55e6);
        EXPECT(gbc.pc(), 0x6e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02EF
        gbc.setState(0x299c, 0xa3da, 0xcad0, 0x866f, 0xc4f4, 0xb07a, 0x0, 0x1);
        gbc.writeMem(0x299c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa3da);
        EXPECT(gbc.pc(), 0x299e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02F0
        gbc.setState(0xc7f7, 0xee35, 0x2d10, 0x5478, 0xb157, 0xc4c5, 0x1, 0x0);
        gbc.writeMem(0xc7f7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xee35);
        EXPECT(gbc.pc(), 0xc7f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7f7), 0xcb);
        EXPECT(gbc.readMem(0xc7f8), 0x75);
        // CB 75 02F1
        gbc.setState(0x7440, 0xab8d, 0xdf10, 0x71df, 0x6fef, 0xeb6d, 0x1, 0x1);
        gbc.writeMem(0x7440, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xab8d);
        EXPECT(gbc.pc(), 0x7442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02F2
        gbc.setState(0x71f, 0xfb9c, 0x56e0, 0x43d6, 0xa18a, 0xc63a, 0x0, 0x0);
        gbc.writeMem(0x71f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xfb9c);
        EXPECT(gbc.pc(), 0x721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02F3
        gbc.setState(0xc333, 0x7ec0, 0xb60, 0x9a3c, 0x7255, 0x7272, 0x1, 0x0);
        gbc.writeMem(0xc333, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7ec0);
        EXPECT(gbc.pc(), 0xc335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc333), 0xcb);
        EXPECT(gbc.readMem(0xc334), 0x75);
        // CB 75 02F4
        gbc.setState(0x6287, 0x20fa, 0xbd90, 0xc7b5, 0xbad5, 0x4020, 0x1, 0x0);
        gbc.writeMem(0x6287, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x20fa);
        EXPECT(gbc.pc(), 0x6289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02F5
        gbc.setState(0xae70, 0x6f52, 0xf680, 0x3c53, 0x8cb9, 0xa547, 0x0, 0x0);
        gbc.writeMem(0xae70, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6f52);
        EXPECT(gbc.pc(), 0xae72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae70), 0xcb);
        EXPECT(gbc.readMem(0xae71), 0x75);
        // CB 75 02F7
        gbc.setState(0x1271, 0x2485, 0xe630, 0xbe94, 0xca31, 0x42d2, 0x0, 0x0);
        gbc.writeMem(0x1271, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2485);
        EXPECT(gbc.pc(), 0x1273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02F8
        gbc.setState(0xc170, 0xef82, 0x8580, 0xf363, 0xaf2c, 0x30a6, 0x0, 0x0);
        gbc.writeMem(0xc170, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xef82);
        EXPECT(gbc.pc(), 0xc172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc170), 0xcb);
        EXPECT(gbc.readMem(0xc171), 0x75);
        // CB 75 02F9
        gbc.setState(0x4e0b, 0xfc3a, 0xcbb0, 0x41e0, 0x3df6, 0xde14, 0x1, 0x1);
        gbc.writeMem(0x4e0b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfc3a);
        EXPECT(gbc.pc(), 0x4e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02FA
        gbc.setState(0x148e, 0x36e6, 0x3790, 0x6dbf, 0x6e2, 0x4b79, 0x1, 0x0);
        gbc.writeMem(0x148e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x36e6);
        EXPECT(gbc.pc(), 0x1490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 02FB
        gbc.setState(0x29d3, 0xd572, 0x2500, 0x15f, 0xa094, 0x3859, 0x0, 0x1);
        gbc.writeMem(0x29d3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd572);
        EXPECT(gbc.pc(), 0x29d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 02FC
        gbc.setState(0x9815, 0x9a33, 0xf7d0, 0x4930, 0x571b, 0xacea, 0x0, 0x1);
        gbc.writeMem(0x9815, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9a33);
        EXPECT(gbc.pc(), 0x9817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9815), 0xcb);
        EXPECT(gbc.readMem(0x9816), 0x75);
        // CB 75 02FD
        gbc.setState(0xb123, 0x41e3, 0x6c20, 0x3cb2, 0x14d0, 0xbfb0, 0x1, 0x1);
        gbc.writeMem(0xb123, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x41e3);
        EXPECT(gbc.pc(), 0xb125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb123), 0xcb);
        EXPECT(gbc.readMem(0xb124), 0x75);
        // CB 75 02FE
        gbc.setState(0xa1b1, 0xf7f, 0xc390, 0xe961, 0xb13c, 0xabff, 0x0, 0x1);
        gbc.writeMem(0xa1b1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf7f);
        EXPECT(gbc.pc(), 0xa1b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b1), 0xcb);
        EXPECT(gbc.readMem(0xa1b2), 0x75);
        // CB 75 02FF
        gbc.setState(0x2b9, 0x37ae, 0xd7a0, 0xad24, 0x2309, 0x30a7, 0x1, 0x0);
        gbc.writeMem(0x2b9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x37ae);
        EXPECT(gbc.pc(), 0x2bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0300
        gbc.setState(0x7016, 0x8c2e, 0x52f0, 0xf66, 0x6cd9, 0x2ead, 0x1, 0x0);
        gbc.writeMem(0x7016, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8c2e);
        EXPECT(gbc.pc(), 0x7018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0301
        gbc.setState(0x242a, 0xa71a, 0x6f20, 0x9251, 0x341b, 0xe214, 0x0, 0x0);
        gbc.writeMem(0x242a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa71a);
        EXPECT(gbc.pc(), 0x242c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0302
        gbc.setState(0xeb7c, 0x38c2, 0x4d20, 0xa084, 0xf34, 0xd40e, 0x1, 0x0);
        gbc.writeMem(0xeb7c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x38c2);
        EXPECT(gbc.pc(), 0xeb7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb7c), 0xcb);
        EXPECT(gbc.readMem(0xeb7d), 0x75);
        // CB 75 0303
        gbc.setState(0x93cc, 0xf128, 0xfc0, 0x2946, 0x98b9, 0x1980, 0x1, 0x0);
        gbc.writeMem(0x93cc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf128);
        EXPECT(gbc.pc(), 0x93ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93cc), 0xcb);
        EXPECT(gbc.readMem(0x93cd), 0x75);
        // CB 75 0304
        gbc.setState(0x5cad, 0x4673, 0xb3b0, 0x92b0, 0x3321, 0x272d, 0x0, 0x0);
        gbc.writeMem(0x5cad, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4673);
        EXPECT(gbc.pc(), 0x5caf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0305
        gbc.setState(0xc97e, 0x685d, 0x2ad0, 0x8284, 0x3b5c, 0x48e9, 0x1, 0x0);
        gbc.writeMem(0xc97e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x685d);
        EXPECT(gbc.pc(), 0xc980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc97e), 0xcb);
        EXPECT(gbc.readMem(0xc97f), 0x75);
        // CB 75 0306
        gbc.setState(0xdecd, 0x17ab, 0xdcf0, 0x2952, 0xecea, 0x2645, 0x0, 0x1);
        gbc.writeMem(0xdecd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x17ab);
        EXPECT(gbc.pc(), 0xdecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdecd), 0xcb);
        EXPECT(gbc.readMem(0xdece), 0x75);
        // CB 75 0307
        gbc.setState(0x39ec, 0x9007, 0x96f0, 0xd0fd, 0xa1e3, 0x6251, 0x1, 0x0);
        gbc.writeMem(0x39ec, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9007);
        EXPECT(gbc.pc(), 0x39ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0308
        gbc.setState(0xa289, 0x909f, 0x6db0, 0xc947, 0x43a3, 0xf580, 0x1, 0x1);
        gbc.writeMem(0xa289, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x909f);
        EXPECT(gbc.pc(), 0xa28b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa289), 0xcb);
        EXPECT(gbc.readMem(0xa28a), 0x75);
        // CB 75 0309
        gbc.setState(0xba58, 0x9260, 0x4e30, 0xaaf0, 0x9d9f, 0x149e, 0x0, 0x1);
        gbc.writeMem(0xba58, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9260);
        EXPECT(gbc.pc(), 0xba5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba58), 0xcb);
        EXPECT(gbc.readMem(0xba59), 0x75);
        // CB 75 030A
        gbc.setState(0x8f20, 0x7b57, 0x96a0, 0xe7d6, 0xf9cc, 0x90bb, 0x0, 0x0);
        gbc.writeMem(0x8f20, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7b57);
        EXPECT(gbc.pc(), 0x8f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f20), 0xcb);
        EXPECT(gbc.readMem(0x8f21), 0x75);
        // CB 75 030B
        gbc.setState(0x99c7, 0x2dec, 0x5650, 0x5bba, 0x4cda, 0xade6, 0x1, 0x0);
        gbc.writeMem(0x99c7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2dec);
        EXPECT(gbc.pc(), 0x99c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99c7), 0xcb);
        EXPECT(gbc.readMem(0x99c8), 0x75);
        // CB 75 030D
        gbc.setState(0x744a, 0x3699, 0xc7f0, 0x9600, 0xbd2, 0xe033, 0x1, 0x0);
        gbc.writeMem(0x744a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3699);
        EXPECT(gbc.pc(), 0x744c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 030E
        gbc.setState(0xd62e, 0x7254, 0x7030, 0xd927, 0x8dd7, 0xf21d, 0x0, 0x0);
        gbc.writeMem(0xd62e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7254);
        EXPECT(gbc.pc(), 0xd630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd62e), 0xcb);
        EXPECT(gbc.readMem(0xd62f), 0x75);
        // CB 75 030F
        gbc.setState(0x365d, 0xea9a, 0x6340, 0x3931, 0xb5a5, 0x97c1, 0x1, 0x1);
        gbc.writeMem(0x365d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xea9a);
        EXPECT(gbc.pc(), 0x365f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0310
        gbc.setState(0xada1, 0xf1, 0x1e30, 0x542a, 0x8a16, 0xe5f1, 0x0, 0x0);
        gbc.writeMem(0xada1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf1);
        EXPECT(gbc.pc(), 0xada3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada1), 0xcb);
        EXPECT(gbc.readMem(0xada2), 0x75);
        // CB 75 0311
        gbc.setState(0x1817, 0x4468, 0xe6e0, 0x5a45, 0x727d, 0xfd80, 0x1, 0x1);
        gbc.writeMem(0x1817, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4468);
        EXPECT(gbc.pc(), 0x1819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0312
        gbc.setState(0xd57, 0xd236, 0x85d0, 0x8c0b, 0x82a7, 0x5831, 0x1, 0x1);
        gbc.writeMem(0xd57, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd236);
        EXPECT(gbc.pc(), 0xd59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0313
        gbc.setState(0x14fc, 0x22f5, 0x7e90, 0xf239, 0xb23, 0xfe8e, 0x0, 0x1);
        gbc.writeMem(0x14fc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x22f5);
        EXPECT(gbc.pc(), 0x14fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0314
        gbc.setState(0x4339, 0xd0d8, 0x3880, 0x18e8, 0xaee6, 0x7aed, 0x0, 0x0);
        gbc.writeMem(0x4339, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd0d8);
        EXPECT(gbc.pc(), 0x433b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0315
        gbc.setState(0x6b32, 0x50c1, 0x9cf0, 0x61bb, 0x4386, 0xa190, 0x0, 0x0);
        gbc.writeMem(0x6b32, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x50c1);
        EXPECT(gbc.pc(), 0x6b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0316
        gbc.setState(0xa512, 0xb23d, 0x6620, 0x4d1a, 0xa937, 0x68ab, 0x0, 0x0);
        gbc.writeMem(0xa512, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb23d);
        EXPECT(gbc.pc(), 0xa514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa512), 0xcb);
        EXPECT(gbc.readMem(0xa513), 0x75);
        // CB 75 0317
        gbc.setState(0xe224, 0x2590, 0xd1e0, 0x5bd3, 0x98c4, 0xc830, 0x0, 0x0);
        gbc.writeMem(0xe224, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2590);
        EXPECT(gbc.pc(), 0xe226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe224), 0xcb);
        EXPECT(gbc.readMem(0xe225), 0x75);
        // CB 75 0318
        gbc.setState(0x2668, 0x467, 0xf040, 0xe2c3, 0x8283, 0xcd29, 0x1, 0x0);
        gbc.writeMem(0x2668, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x467);
        EXPECT(gbc.pc(), 0x266a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0319
        gbc.setState(0x91a1, 0x881f, 0xb510, 0xcf35, 0xea2c, 0x5450, 0x1, 0x0);
        gbc.writeMem(0x91a1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x881f);
        EXPECT(gbc.pc(), 0x91a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a1), 0xcb);
        EXPECT(gbc.readMem(0x91a2), 0x75);
        // CB 75 031A
        gbc.setState(0x9572, 0xf8cd, 0x2e90, 0xadf3, 0xd4b4, 0xae3d, 0x1, 0x0);
        gbc.writeMem(0x9572, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf8cd);
        EXPECT(gbc.pc(), 0x9574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9572), 0xcb);
        EXPECT(gbc.readMem(0x9573), 0x75);
        // CB 75 031B
        gbc.setState(0xdd6c, 0x626d, 0x8ca0, 0x82fa, 0x8a3d, 0x9ef2, 0x0, 0x1);
        gbc.writeMem(0xdd6c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x626d);
        EXPECT(gbc.pc(), 0xdd6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd6c), 0xcb);
        EXPECT(gbc.readMem(0xdd6d), 0x75);
        // CB 75 031C
        gbc.setState(0x989e, 0xc42d, 0xc9e0, 0xf0c4, 0xd421, 0x606b, 0x0, 0x0);
        gbc.writeMem(0x989e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc42d);
        EXPECT(gbc.pc(), 0x98a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x989e), 0xcb);
        EXPECT(gbc.readMem(0x989f), 0x75);
        // CB 75 031D
        gbc.setState(0x51c2, 0x6168, 0x9130, 0xbb9f, 0x7447, 0x2ddf, 0x1, 0x0);
        gbc.writeMem(0x51c2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6168);
        EXPECT(gbc.pc(), 0x51c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 031E
        gbc.setState(0x4cba, 0x7c2a, 0xac00, 0x5c0d, 0xf31a, 0x880c, 0x0, 0x1);
        gbc.writeMem(0x4cba, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7c2a);
        EXPECT(gbc.pc(), 0x4cbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 031F
        gbc.setState(0x6ed1, 0x3a52, 0x8d10, 0x14c7, 0xe3ea, 0xe9f7, 0x0, 0x0);
        gbc.writeMem(0x6ed1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3a52);
        EXPECT(gbc.pc(), 0x6ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0320
        gbc.setState(0x7c0a, 0xe95d, 0x6a0, 0xe282, 0x9057, 0xb81c, 0x1, 0x1);
        gbc.writeMem(0x7c0a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe95d);
        EXPECT(gbc.pc(), 0x7c0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0321
        gbc.setState(0xbda9, 0x8c58, 0x7d20, 0xce4a, 0x560d, 0x4660, 0x0, 0x0);
        gbc.writeMem(0xbda9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8c58);
        EXPECT(gbc.pc(), 0xbdab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda9), 0xcb);
        EXPECT(gbc.readMem(0xbdaa), 0x75);
        // CB 75 0323
        gbc.setState(0x86c4, 0xe6a1, 0xfca0, 0x68ef, 0xccd9, 0x5cb3, 0x1, 0x1);
        gbc.writeMem(0x86c4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe6a1);
        EXPECT(gbc.pc(), 0x86c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c4), 0xcb);
        EXPECT(gbc.readMem(0x86c5), 0x75);
        // CB 75 0325
        gbc.setState(0x4ce, 0xa8c7, 0xbc50, 0x79b9, 0x6d2a, 0x49da, 0x0, 0x1);
        gbc.writeMem(0x4ce, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa8c7);
        EXPECT(gbc.pc(), 0x4d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0326
        gbc.setState(0x4ad0, 0x7057, 0x8a60, 0x95f5, 0x5bc2, 0x7da6, 0x0, 0x0);
        gbc.writeMem(0x4ad0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7057);
        EXPECT(gbc.pc(), 0x4ad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0327
        gbc.setState(0xc27e, 0x3cb3, 0x50f0, 0x6556, 0xc916, 0x3e30, 0x0, 0x0);
        gbc.writeMem(0xc27e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3cb3);
        EXPECT(gbc.pc(), 0xc280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc27e), 0xcb);
        EXPECT(gbc.readMem(0xc27f), 0x75);
        // CB 75 0328
        gbc.setState(0xe5ef, 0xb27e, 0xba40, 0x5869, 0xc27b, 0x25ab, 0x1, 0x1);
        gbc.writeMem(0xe5ef, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb27e);
        EXPECT(gbc.pc(), 0xe5f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ef), 0xcb);
        EXPECT(gbc.readMem(0xe5f0), 0x75);
        // CB 75 0329
        gbc.setState(0xd180, 0xc8f3, 0x92c0, 0xa6fc, 0x6d6d, 0x5d7d, 0x1, 0x0);
        gbc.writeMem(0xd180, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc8f3);
        EXPECT(gbc.pc(), 0xd182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd180), 0xcb);
        EXPECT(gbc.readMem(0xd181), 0x75);
        // CB 75 032A
        gbc.setState(0x8536, 0x720a, 0xe580, 0x237c, 0x37e1, 0x4301, 0x0, 0x0);
        gbc.writeMem(0x8536, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x720a);
        EXPECT(gbc.pc(), 0x8538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8536), 0xcb);
        EXPECT(gbc.readMem(0x8537), 0x75);
        // CB 75 032B
        gbc.setState(0xe890, 0xbbc7, 0x77f0, 0x2b00, 0xf0c2, 0x3703, 0x1, 0x1);
        gbc.writeMem(0xe890, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbbc7);
        EXPECT(gbc.pc(), 0xe892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe890), 0xcb);
        EXPECT(gbc.readMem(0xe891), 0x75);
        // CB 75 032C
        gbc.setState(0x2e80, 0x1d6d, 0x8220, 0xaeaf, 0xfd6c, 0x8808, 0x0, 0x0);
        gbc.writeMem(0x2e80, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1d6d);
        EXPECT(gbc.pc(), 0x2e82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 032D
        gbc.setState(0xb92d, 0x443e, 0xfef0, 0x454, 0x6c33, 0xb223, 0x0, 0x1);
        gbc.writeMem(0xb92d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x443e);
        EXPECT(gbc.pc(), 0xb92f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb92d), 0xcb);
        EXPECT(gbc.readMem(0xb92e), 0x75);
        // CB 75 032F
        gbc.setState(0x1c5c, 0x7769, 0xff60, 0xf3e6, 0xc3cb, 0x6ad3, 0x0, 0x0);
        gbc.writeMem(0x1c5c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7769);
        EXPECT(gbc.pc(), 0x1c5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0330
        gbc.setState(0x5797, 0x2638, 0xbb20, 0xa40e, 0xd3ca, 0xf65f, 0x0, 0x0);
        gbc.writeMem(0x5797, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2638);
        EXPECT(gbc.pc(), 0x5799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0331
        gbc.setState(0x275a, 0xa377, 0xf8e0, 0x5cf2, 0x64c7, 0x1a7, 0x0, 0x1);
        gbc.writeMem(0x275a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa377);
        EXPECT(gbc.pc(), 0x275c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0332
        gbc.setState(0x91d4, 0xed5, 0x8570, 0xc9c2, 0x2416, 0xc60d, 0x1, 0x0);
        gbc.writeMem(0x91d4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xed5);
        EXPECT(gbc.pc(), 0x91d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d4), 0xcb);
        EXPECT(gbc.readMem(0x91d5), 0x75);
        // CB 75 0333
        gbc.setState(0xe532, 0x1c14, 0xbcd0, 0x9d01, 0xbdac, 0x8e24, 0x1, 0x0);
        gbc.writeMem(0xe532, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1c14);
        EXPECT(gbc.pc(), 0xe534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe532), 0xcb);
        EXPECT(gbc.readMem(0xe533), 0x75);
        // CB 75 0334
        gbc.setState(0x5c5a, 0xed5f, 0xab90, 0x6f15, 0x51f3, 0xbf6c, 0x0, 0x0);
        gbc.writeMem(0x5c5a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xed5f);
        EXPECT(gbc.pc(), 0x5c5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0336
        gbc.setState(0x3368, 0x9360, 0xf2e0, 0x1a99, 0xf32c, 0x1f52, 0x0, 0x0);
        gbc.writeMem(0x3368, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9360);
        EXPECT(gbc.pc(), 0x336a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0337
        gbc.setState(0xece0, 0x61f2, 0xc000, 0xd0bb, 0x7b4d, 0x5a04, 0x1, 0x1);
        gbc.writeMem(0xece0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x61f2);
        EXPECT(gbc.pc(), 0xece2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece0), 0xcb);
        EXPECT(gbc.readMem(0xece1), 0x75);
        // CB 75 0338
        gbc.setState(0xd0dd, 0xd02d, 0xd140, 0xeb5d, 0x5650, 0x7624, 0x1, 0x1);
        gbc.writeMem(0xd0dd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd02d);
        EXPECT(gbc.pc(), 0xd0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0dd), 0xcb);
        EXPECT(gbc.readMem(0xd0de), 0x75);
        // CB 75 0339
        gbc.setState(0x2296, 0x62e8, 0xb7c0, 0xd512, 0x9286, 0xde1b, 0x1, 0x0);
        gbc.writeMem(0x2296, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x62e8);
        EXPECT(gbc.pc(), 0x2298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 033A
        gbc.setState(0xec6a, 0xaac9, 0xc350, 0x83f3, 0x92bb, 0xea65, 0x0, 0x1);
        gbc.writeMem(0xec6a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xaac9);
        EXPECT(gbc.pc(), 0xec6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec6a), 0xcb);
        EXPECT(gbc.readMem(0xec6b), 0x75);
        // CB 75 033B
        gbc.setState(0x7ea5, 0x38eb, 0xe9e0, 0x72e7, 0x279e, 0x8428, 0x0, 0x1);
        gbc.writeMem(0x7ea5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x38eb);
        EXPECT(gbc.pc(), 0x7ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 033C
        gbc.setState(0xd9dd, 0xce2f, 0xf4b0, 0xdb45, 0xe558, 0x6713, 0x1, 0x0);
        gbc.writeMem(0xd9dd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xce2f);
        EXPECT(gbc.pc(), 0xd9df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9dd), 0xcb);
        EXPECT(gbc.readMem(0xd9de), 0x75);
        // CB 75 033D
        gbc.setState(0x3842, 0xa4f4, 0x9420, 0x6f68, 0x27ac, 0xabc3, 0x0, 0x0);
        gbc.writeMem(0x3842, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa4f4);
        EXPECT(gbc.pc(), 0x3844);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 033F
        gbc.setState(0xa8f1, 0x73c5, 0x8160, 0x9e2d, 0x6751, 0xb1ed, 0x1, 0x0);
        gbc.writeMem(0xa8f1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x73c5);
        EXPECT(gbc.pc(), 0xa8f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f1), 0xcb);
        EXPECT(gbc.readMem(0xa8f2), 0x75);
        // CB 75 0340
        gbc.setState(0xff0, 0xdea3, 0x6e50, 0x3d60, 0x5b99, 0x8459, 0x1, 0x1);
        gbc.writeMem(0xff0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdea3);
        EXPECT(gbc.pc(), 0xff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0341
        gbc.setState(0xe754, 0x3329, 0x3120, 0x1437, 0xfd9e, 0x5cf2, 0x1, 0x1);
        gbc.writeMem(0xe754, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3329);
        EXPECT(gbc.pc(), 0xe756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe754), 0xcb);
        EXPECT(gbc.readMem(0xe755), 0x75);
        // CB 75 0342
        gbc.setState(0x3c47, 0xe8f8, 0x6d00, 0x7cef, 0x13f0, 0x9e32, 0x1, 0x0);
        gbc.writeMem(0x3c47, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe8f8);
        EXPECT(gbc.pc(), 0x3c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0343
        gbc.setState(0x4e62, 0x38ea, 0x2c60, 0xbca6, 0xd189, 0x7375, 0x0, 0x1);
        gbc.writeMem(0x4e62, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x38ea);
        EXPECT(gbc.pc(), 0x4e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0344
        gbc.setState(0x2fef, 0x822d, 0xbe40, 0x712e, 0xd873, 0x150d, 0x0, 0x0);
        gbc.writeMem(0x2fef, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x822d);
        EXPECT(gbc.pc(), 0x2ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0345
        gbc.setState(0x61f2, 0x2192, 0xd470, 0x4615, 0xd9f1, 0x95c7, 0x0, 0x0);
        gbc.writeMem(0x61f2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2192);
        EXPECT(gbc.pc(), 0x61f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0346
        gbc.setState(0xcdb5, 0xd3a8, 0x77f0, 0x997c, 0x1401, 0xbba7, 0x0, 0x0);
        gbc.writeMem(0xcdb5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd3a8);
        EXPECT(gbc.pc(), 0xcdb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb5), 0xcb);
        EXPECT(gbc.readMem(0xcdb6), 0x75);
        // CB 75 0348
        gbc.setState(0x94cf, 0x7b3d, 0x30d0, 0xaccb, 0xd4c0, 0x2537, 0x0, 0x0);
        gbc.writeMem(0x94cf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7b3d);
        EXPECT(gbc.pc(), 0x94d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94cf), 0xcb);
        EXPECT(gbc.readMem(0x94d0), 0x75);
        // CB 75 034A
        gbc.setState(0x6fa2, 0x456e, 0xce90, 0x16ca, 0x65e3, 0x4b3a, 0x1, 0x1);
        gbc.writeMem(0x6fa2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x456e);
        EXPECT(gbc.pc(), 0x6fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 034B
        gbc.setState(0x1a66, 0x1a08, 0xfe0, 0x14bb, 0x13c7, 0xded6, 0x1, 0x0);
        gbc.writeMem(0x1a66, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1a08);
        EXPECT(gbc.pc(), 0x1a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 034C
        gbc.setState(0x33bc, 0x69f0, 0x76a0, 0xe4f9, 0x3ec4, 0x13a3, 0x0, 0x0);
        gbc.writeMem(0x33bc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x69f0);
        EXPECT(gbc.pc(), 0x33be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 034D
        gbc.setState(0x6583, 0x5cf4, 0x5f60, 0x2528, 0xee78, 0x42a9, 0x0, 0x1);
        gbc.writeMem(0x6583, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5cf4);
        EXPECT(gbc.pc(), 0x6585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 034E
        gbc.setState(0xd61b, 0x12b4, 0x740, 0x6d34, 0x32e4, 0xa574, 0x1, 0x0);
        gbc.writeMem(0xd61b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x12b4);
        EXPECT(gbc.pc(), 0xd61d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd61b), 0xcb);
        EXPECT(gbc.readMem(0xd61c), 0x75);
        // CB 75 0350
        gbc.setState(0x2151, 0x38fb, 0x81b0, 0x1fe4, 0xc3c7, 0x307b, 0x0, 0x1);
        gbc.writeMem(0x2151, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x38fb);
        EXPECT(gbc.pc(), 0x2153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0351
        gbc.setState(0x7a54, 0xfeb5, 0xce30, 0x887e, 0x60f3, 0xa9d8, 0x0, 0x1);
        gbc.writeMem(0x7a54, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfeb5);
        EXPECT(gbc.pc(), 0x7a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0352
        gbc.setState(0x3399, 0xbfb6, 0xb440, 0x77a0, 0x9eaa, 0x85fa, 0x1, 0x1);
        gbc.writeMem(0x3399, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xbfb6);
        EXPECT(gbc.pc(), 0x339b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0353
        gbc.setState(0x338, 0xfabb, 0x7e90, 0xd0ef, 0xe2a5, 0xc24e, 0x0, 0x0);
        gbc.writeMem(0x338, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfabb);
        EXPECT(gbc.pc(), 0x33a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0354
        gbc.setState(0xe407, 0x17be, 0xf190, 0xd996, 0xeb14, 0xe074, 0x1, 0x1);
        gbc.writeMem(0xe407, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x17be);
        EXPECT(gbc.pc(), 0xe409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe407), 0xcb);
        EXPECT(gbc.readMem(0xe408), 0x75);
        // CB 75 0355
        gbc.setState(0xe282, 0x6846, 0x82b0, 0x32ee, 0x1357, 0x1415, 0x1, 0x1);
        gbc.writeMem(0xe282, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6846);
        EXPECT(gbc.pc(), 0xe284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe282), 0xcb);
        EXPECT(gbc.readMem(0xe283), 0x75);
        // CB 75 0356
        gbc.setState(0x11cf, 0x2df9, 0xe490, 0x64a8, 0xda34, 0xba66, 0x0, 0x0);
        gbc.writeMem(0x11cf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2df9);
        EXPECT(gbc.pc(), 0x11d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0357
        gbc.setState(0x4eb3, 0x15ff, 0x2a20, 0x9d2a, 0x1029, 0xd788, 0x1, 0x1);
        gbc.writeMem(0x4eb3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x15ff);
        EXPECT(gbc.pc(), 0x4eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0358
        gbc.setState(0xd5cf, 0x9555, 0x3df0, 0x564a, 0x8208, 0x7783, 0x1, 0x0);
        gbc.writeMem(0xd5cf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9555);
        EXPECT(gbc.pc(), 0xd5d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5cf), 0xcb);
        EXPECT(gbc.readMem(0xd5d0), 0x75);
        // CB 75 0359
        gbc.setState(0x23b0, 0x1eed, 0x8de0, 0x5b2b, 0xdf92, 0x7c2e, 0x1, 0x0);
        gbc.writeMem(0x23b0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1eed);
        EXPECT(gbc.pc(), 0x23b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 035A
        gbc.setState(0xa742, 0xc6c9, 0x1170, 0xc2e7, 0x8565, 0x4eae, 0x1, 0x0);
        gbc.writeMem(0xa742, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc6c9);
        EXPECT(gbc.pc(), 0xa744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa742), 0xcb);
        EXPECT(gbc.readMem(0xa743), 0x75);
        // CB 75 035B
        gbc.setState(0xb1de, 0xfc84, 0x85b0, 0x794d, 0x7a3e, 0x6d3, 0x0, 0x1);
        gbc.writeMem(0xb1de, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfc84);
        EXPECT(gbc.pc(), 0xb1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1de), 0xcb);
        EXPECT(gbc.readMem(0xb1df), 0x75);
        // CB 75 035C
        gbc.setState(0x31ce, 0x5a20, 0x28f0, 0xa493, 0xa76d, 0x7118, 0x1, 0x0);
        gbc.writeMem(0x31ce, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5a20);
        EXPECT(gbc.pc(), 0x31d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 035D
        gbc.setState(0x5a3, 0x7588, 0x4780, 0x84aa, 0x43f4, 0x4895, 0x0, 0x1);
        gbc.writeMem(0x5a3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7588);
        EXPECT(gbc.pc(), 0x5a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 035E
        gbc.setState(0x3eda, 0x26c3, 0x9c50, 0xefba, 0x7713, 0xdaa7, 0x0, 0x0);
        gbc.writeMem(0x3eda, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x26c3);
        EXPECT(gbc.pc(), 0x3edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 035F
        gbc.setState(0xb3b3, 0x21c8, 0x9970, 0xc5b1, 0x1292, 0x8ada, 0x0, 0x0);
        gbc.writeMem(0xb3b3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x21c8);
        EXPECT(gbc.pc(), 0xb3b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b3), 0xcb);
        EXPECT(gbc.readMem(0xb3b4), 0x75);
        // CB 75 0360
        gbc.setState(0x54ef, 0xe6a9, 0xab30, 0xf67b, 0x9b7e, 0x80c1, 0x0, 0x1);
        gbc.writeMem(0x54ef, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe6a9);
        EXPECT(gbc.pc(), 0x54f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0361
        gbc.setState(0xcb0b, 0x8c58, 0xcef0, 0xa845, 0x5d3b, 0xfb8e, 0x1, 0x0);
        gbc.writeMem(0xcb0b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8c58);
        EXPECT(gbc.pc(), 0xcb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb0b), 0xcb);
        EXPECT(gbc.readMem(0xcb0c), 0x75);
        // CB 75 0362
        gbc.setState(0xa683, 0x225a, 0x3dd0, 0x3953, 0xd5ae, 0xf908, 0x1, 0x0);
        gbc.writeMem(0xa683, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x225a);
        EXPECT(gbc.pc(), 0xa685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa683), 0xcb);
        EXPECT(gbc.readMem(0xa684), 0x75);
        // CB 75 0363
        gbc.setState(0xbe00, 0xfdf2, 0xfa90, 0x6704, 0x4b27, 0x40fe, 0x1, 0x0);
        gbc.writeMem(0xbe00, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfdf2);
        EXPECT(gbc.pc(), 0xbe02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe00), 0xcb);
        EXPECT(gbc.readMem(0xbe01), 0x75);
        // CB 75 0364
        gbc.setState(0x1732, 0xf991, 0xa1c0, 0xe8d3, 0x9c28, 0x65cb, 0x1, 0x0);
        gbc.writeMem(0x1732, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf991);
        EXPECT(gbc.pc(), 0x1734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0365
        gbc.setState(0x9d85, 0xd8ae, 0x64d0, 0xb201, 0x3edd, 0xa883, 0x0, 0x1);
        gbc.writeMem(0x9d85, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd8ae);
        EXPECT(gbc.pc(), 0x9d87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d85), 0xcb);
        EXPECT(gbc.readMem(0x9d86), 0x75);
        // CB 75 0366
        gbc.setState(0x33cc, 0xe651, 0xeb40, 0x894b, 0xbf32, 0xf3d2, 0x0, 0x1);
        gbc.writeMem(0x33cc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe651);
        EXPECT(gbc.pc(), 0x33ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0367
        gbc.setState(0x1d2a, 0x3287, 0xa860, 0x40fc, 0x2290, 0x9bd1, 0x0, 0x0);
        gbc.writeMem(0x1d2a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3287);
        EXPECT(gbc.pc(), 0x1d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0368
        gbc.setState(0xc8c3, 0xd96b, 0xbce0, 0xb595, 0xb690, 0x8415, 0x1, 0x1);
        gbc.writeMem(0xc8c3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd96b);
        EXPECT(gbc.pc(), 0xc8c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c3), 0xcb);
        EXPECT(gbc.readMem(0xc8c4), 0x75);
        // CB 75 0369
        gbc.setState(0x99f7, 0x392c, 0x1570, 0xaefd, 0xde0c, 0x862b, 0x1, 0x0);
        gbc.writeMem(0x99f7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x392c);
        EXPECT(gbc.pc(), 0x99f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f7), 0xcb);
        EXPECT(gbc.readMem(0x99f8), 0x75);
        // CB 75 036A
        gbc.setState(0x5bad, 0xac7, 0x97b0, 0xb3d1, 0xaad8, 0xcc0a, 0x1, 0x1);
        gbc.writeMem(0x5bad, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xac7);
        EXPECT(gbc.pc(), 0x5baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 036B
        gbc.setState(0x817c, 0x2a8b, 0x560, 0x8366, 0xa44, 0x2f47, 0x0, 0x1);
        gbc.writeMem(0x817c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2a8b);
        EXPECT(gbc.pc(), 0x817e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817c), 0xcb);
        EXPECT(gbc.readMem(0x817d), 0x75);
        // CB 75 036C
        gbc.setState(0x101a, 0x9e1c, 0xe900, 0x538a, 0x45e3, 0x90a1, 0x1, 0x1);
        gbc.writeMem(0x101a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9e1c);
        EXPECT(gbc.pc(), 0x101c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 036D
        gbc.setState(0xd185, 0xa0da, 0xcbd0, 0x89b9, 0xea8b, 0xfb60, 0x0, 0x1);
        gbc.writeMem(0xd185, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa0da);
        EXPECT(gbc.pc(), 0xd187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd185), 0xcb);
        EXPECT(gbc.readMem(0xd186), 0x75);
        // CB 75 036E
        gbc.setState(0xa023, 0x31b3, 0x6170, 0xfceb, 0x6b4e, 0xefa5, 0x1, 0x0);
        gbc.writeMem(0xa023, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x31b3);
        EXPECT(gbc.pc(), 0xa025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa023), 0xcb);
        EXPECT(gbc.readMem(0xa024), 0x75);
        // CB 75 036F
        gbc.setState(0xd100, 0x3916, 0x6a80, 0xf960, 0x84d6, 0x64ea, 0x1, 0x0);
        gbc.writeMem(0xd100, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3916);
        EXPECT(gbc.pc(), 0xd102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd100), 0xcb);
        EXPECT(gbc.readMem(0xd101), 0x75);
        // CB 75 0370
        gbc.setState(0x9d6, 0xa898, 0x5ff0, 0xe28f, 0x9aba, 0xccc4, 0x0, 0x1);
        gbc.writeMem(0x9d6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa898);
        EXPECT(gbc.pc(), 0x9d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0371
        gbc.setState(0xde3b, 0x8d83, 0xf660, 0xb793, 0x3a42, 0x973f, 0x1, 0x1);
        gbc.writeMem(0xde3b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8d83);
        EXPECT(gbc.pc(), 0xde3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde3b), 0xcb);
        EXPECT(gbc.readMem(0xde3c), 0x75);
        // CB 75 0372
        gbc.setState(0x9a7c, 0x1111, 0x6b90, 0x56c2, 0x5963, 0xe2e5, 0x1, 0x0);
        gbc.writeMem(0x9a7c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1111);
        EXPECT(gbc.pc(), 0x9a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a7c), 0xcb);
        EXPECT(gbc.readMem(0x9a7d), 0x75);
        // CB 75 0375
        gbc.setState(0x3016, 0x214c, 0x3d0, 0xbd6d, 0x3d47, 0x8fdc, 0x0, 0x1);
        gbc.writeMem(0x3016, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x214c);
        EXPECT(gbc.pc(), 0x3018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0376
        gbc.setState(0x3f1e, 0x3a36, 0xa740, 0xb6f6, 0x5e89, 0xfc6b, 0x1, 0x1);
        gbc.writeMem(0x3f1e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3a36);
        EXPECT(gbc.pc(), 0x3f20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0377
        gbc.setState(0xcda5, 0x819, 0x7460, 0x586e, 0x197a, 0x155, 0x0, 0x1);
        gbc.writeMem(0xcda5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x819);
        EXPECT(gbc.pc(), 0xcda7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcda5), 0xcb);
        EXPECT(gbc.readMem(0xcda6), 0x75);
        // CB 75 0378
        gbc.setState(0x2275, 0xb82d, 0xbe20, 0x152a, 0xff90, 0xe534, 0x1, 0x1);
        gbc.writeMem(0x2275, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb82d);
        EXPECT(gbc.pc(), 0x2277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0379
        gbc.setState(0x2d95, 0xc5c8, 0x46b0, 0x80ee, 0x5e4d, 0x91f0, 0x0, 0x1);
        gbc.writeMem(0x2d95, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc5c8);
        EXPECT(gbc.pc(), 0x2d97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 037A
        gbc.setState(0xd1f4, 0x3020, 0xd70, 0x6cb8, 0x87d4, 0xb1c7, 0x1, 0x1);
        gbc.writeMem(0xd1f4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3020);
        EXPECT(gbc.pc(), 0xd1f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f4), 0xcb);
        EXPECT(gbc.readMem(0xd1f5), 0x75);
        // CB 75 037B
        gbc.setState(0x3774, 0xe95d, 0x6800, 0xbe6a, 0x8fa1, 0x669c, 0x1, 0x1);
        gbc.writeMem(0x3774, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe95d);
        EXPECT(gbc.pc(), 0x3776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 037C
        gbc.setState(0x4bfa, 0xc600, 0xda20, 0xbe18, 0xd249, 0x4b1c, 0x1, 0x0);
        gbc.writeMem(0x4bfa, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc600);
        EXPECT(gbc.pc(), 0x4bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 037D
        gbc.setState(0xe73c, 0x99a1, 0xc120, 0x4d89, 0xf662, 0xec4, 0x0, 0x1);
        gbc.writeMem(0xe73c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x99a1);
        EXPECT(gbc.pc(), 0xe73e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe73c), 0xcb);
        EXPECT(gbc.readMem(0xe73d), 0x75);
        // CB 75 037E
        gbc.setState(0xdc50, 0xcf90, 0xe010, 0x5555, 0xb5fd, 0x488c, 0x0, 0x1);
        gbc.writeMem(0xdc50, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xcf90);
        EXPECT(gbc.pc(), 0xdc52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc50), 0xcb);
        EXPECT(gbc.readMem(0xdc51), 0x75);
        // CB 75 037F
        gbc.setState(0x4101, 0xa7b7, 0x4a00, 0xeddb, 0xc731, 0xc4a9, 0x0, 0x1);
        gbc.writeMem(0x4101, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa7b7);
        EXPECT(gbc.pc(), 0x4103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0380
        gbc.setState(0x60c4, 0x73f, 0x6e80, 0xd637, 0xa962, 0xa2b, 0x0, 0x1);
        gbc.writeMem(0x60c4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x73f);
        EXPECT(gbc.pc(), 0x60c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0381
        gbc.setState(0x909c, 0xf006, 0x6420, 0x5330, 0x8a42, 0x2317, 0x0, 0x0);
        gbc.writeMem(0x909c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf006);
        EXPECT(gbc.pc(), 0x909e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909c), 0xcb);
        EXPECT(gbc.readMem(0x909d), 0x75);
        // CB 75 0382
        gbc.setState(0x9e49, 0x275a, 0xb0a0, 0xf2fb, 0x1de9, 0x745, 0x1, 0x1);
        gbc.writeMem(0x9e49, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x275a);
        EXPECT(gbc.pc(), 0x9e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e49), 0xcb);
        EXPECT(gbc.readMem(0x9e4a), 0x75);
        // CB 75 0383
        gbc.setState(0x4664, 0xbd72, 0xf9a0, 0xd9c1, 0x72bd, 0xfe56, 0x0, 0x1);
        gbc.writeMem(0x4664, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xbd72);
        EXPECT(gbc.pc(), 0x4666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0384
        gbc.setState(0xa004, 0x6dde, 0xf650, 0x57c3, 0xf190, 0xc91d, 0x1, 0x0);
        gbc.writeMem(0xa004, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6dde);
        EXPECT(gbc.pc(), 0xa006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa004), 0xcb);
        EXPECT(gbc.readMem(0xa005), 0x75);
        // CB 75 0385
        gbc.setState(0x95bb, 0x981a, 0xd780, 0xb4bb, 0x1d44, 0x74df, 0x0, 0x1);
        gbc.writeMem(0x95bb, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x981a);
        EXPECT(gbc.pc(), 0x95bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95bb), 0xcb);
        EXPECT(gbc.readMem(0x95bc), 0x75);
        // CB 75 0386
        gbc.setState(0x111d, 0x96c1, 0x7e80, 0x2e43, 0x245d, 0x3e4c, 0x1, 0x0);
        gbc.writeMem(0x111d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x96c1);
        EXPECT(gbc.pc(), 0x111f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0387
        gbc.setState(0x61b3, 0x2108, 0xced0, 0x48a, 0x8f77, 0x5131, 0x1, 0x0);
        gbc.writeMem(0x61b3, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2108);
        EXPECT(gbc.pc(), 0x61b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0388
        gbc.setState(0x278d, 0x2ce3, 0xf7b0, 0xdedc, 0x5152, 0x126b, 0x0, 0x1);
        gbc.writeMem(0x278d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2ce3);
        EXPECT(gbc.pc(), 0x278f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0389
        gbc.setState(0x14ef, 0x92ac, 0xcad0, 0x9739, 0x1e63, 0x23dd, 0x1, 0x1);
        gbc.writeMem(0x14ef, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x92ac);
        EXPECT(gbc.pc(), 0x14f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 038A
        gbc.setState(0x60ed, 0x851b, 0xa700, 0x1028, 0xe197, 0x5140, 0x1, 0x1);
        gbc.writeMem(0x60ed, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x851b);
        EXPECT(gbc.pc(), 0x60ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 038C
        gbc.setState(0xeacf, 0x6543, 0x42e0, 0x1ca, 0x8e8e, 0xb083, 0x0, 0x1);
        gbc.writeMem(0xeacf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6543);
        EXPECT(gbc.pc(), 0xead1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeacf), 0xcb);
        EXPECT(gbc.readMem(0xead0), 0x75);
        // CB 75 038D
        gbc.setState(0xa63f, 0x3dc1, 0x91f0, 0x5755, 0xd4b3, 0x96c8, 0x0, 0x0);
        gbc.writeMem(0xa63f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3dc1);
        EXPECT(gbc.pc(), 0xa641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63f), 0xcb);
        EXPECT(gbc.readMem(0xa640), 0x75);
        // CB 75 038E
        gbc.setState(0xed44, 0x8dd1, 0x3c10, 0xc7c, 0xfe84, 0x31a, 0x1, 0x0);
        gbc.writeMem(0xed44, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8dd1);
        EXPECT(gbc.pc(), 0xed46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed44), 0xcb);
        EXPECT(gbc.readMem(0xed45), 0x75);
        // CB 75 038F
        gbc.setState(0xe3f2, 0xe66e, 0x2040, 0x7a7d, 0x9a62, 0x5b7a, 0x1, 0x0);
        gbc.writeMem(0xe3f2, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe66e);
        EXPECT(gbc.pc(), 0xe3f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f2), 0xcb);
        EXPECT(gbc.readMem(0xe3f3), 0x75);
        // CB 75 0390
        gbc.setState(0xdbc, 0x662b, 0x6f40, 0x94f2, 0x2257, 0x352, 0x0, 0x1);
        gbc.writeMem(0xdbc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x662b);
        EXPECT(gbc.pc(), 0xdbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0391
        gbc.setState(0x8ae0, 0xf7eb, 0x6750, 0x67e4, 0xafef, 0x108c, 0x1, 0x1);
        gbc.writeMem(0x8ae0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf7eb);
        EXPECT(gbc.pc(), 0x8ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae0), 0xcb);
        EXPECT(gbc.readMem(0x8ae1), 0x75);
        // CB 75 0392
        gbc.setState(0xa3d8, 0xe8be, 0x3be0, 0x2dc5, 0xb363, 0x4f14, 0x1, 0x1);
        gbc.writeMem(0xa3d8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe8be);
        EXPECT(gbc.pc(), 0xa3da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d8), 0xcb);
        EXPECT(gbc.readMem(0xa3d9), 0x75);
        // CB 75 0393
        gbc.setState(0x50de, 0x87fd, 0xe6c0, 0xe97c, 0x40ff, 0x868c, 0x1, 0x1);
        gbc.writeMem(0x50de, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x87fd);
        EXPECT(gbc.pc(), 0x50e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0394
        gbc.setState(0x3d47, 0x2a6a, 0xfd10, 0xc270, 0xcad1, 0x86fc, 0x0, 0x1);
        gbc.writeMem(0x3d47, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2a6a);
        EXPECT(gbc.pc(), 0x3d49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 0395
        gbc.setState(0x668d, 0x1ad4, 0x6280, 0x845b, 0xa188, 0xefd3, 0x0, 0x0);
        gbc.writeMem(0x668d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1ad4);
        EXPECT(gbc.pc(), 0x668f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0396
        gbc.setState(0x6e97, 0xb887, 0xa740, 0x602c, 0xc40, 0xb08, 0x1, 0x1);
        gbc.writeMem(0x6e97, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb887);
        EXPECT(gbc.pc(), 0x6e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0397
        gbc.setState(0x2834, 0x9b59, 0xb00, 0xac16, 0x233d, 0x5429, 0x1, 0x0);
        gbc.writeMem(0x2834, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9b59);
        EXPECT(gbc.pc(), 0x2836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 0398
        gbc.setState(0xbbaf, 0x21b6, 0x2320, 0x2f79, 0xbef9, 0x8eee, 0x0, 0x1);
        gbc.writeMem(0xbbaf, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x21b6);
        EXPECT(gbc.pc(), 0xbbb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbaf), 0xcb);
        EXPECT(gbc.readMem(0xbbb0), 0x75);
        // CB 75 0399
        gbc.setState(0x60f, 0xc0ec, 0xe3b0, 0xf699, 0x34c2, 0x112c, 0x1, 0x1);
        gbc.writeMem(0x60f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc0ec);
        EXPECT(gbc.pc(), 0x611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 039A
        gbc.setState(0x26fd, 0xbcdb, 0xbdc0, 0x1900, 0x6d46, 0x7f11, 0x0, 0x0);
        gbc.writeMem(0x26fd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbcdb);
        EXPECT(gbc.pc(), 0x26ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 039B
        gbc.setState(0xb7f9, 0x5aea, 0xa790, 0x18d6, 0x665b, 0x5a72, 0x1, 0x1);
        gbc.writeMem(0xb7f9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5aea);
        EXPECT(gbc.pc(), 0xb7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f9), 0xcb);
        EXPECT(gbc.readMem(0xb7fa), 0x75);
        // CB 75 039C
        gbc.setState(0x100e, 0x7d9b, 0xe8b0, 0xda7a, 0x4d57, 0xc658, 0x0, 0x0);
        gbc.writeMem(0x100e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7d9b);
        EXPECT(gbc.pc(), 0x1010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 039D
        gbc.setState(0x5ce6, 0xc57c, 0xbba0, 0x3cd, 0xd4d9, 0x90ab, 0x0, 0x1);
        gbc.writeMem(0x5ce6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc57c);
        EXPECT(gbc.pc(), 0x5ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 039E
        gbc.setState(0xb872, 0x9d67, 0xa6c0, 0xfd8e, 0x1a27, 0x3ff3, 0x1, 0x0);
        gbc.writeMem(0xb872, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9d67);
        EXPECT(gbc.pc(), 0xb874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb872), 0xcb);
        EXPECT(gbc.readMem(0xb873), 0x75);
        // CB 75 039F
        gbc.setState(0xc45d, 0xa12, 0x7950, 0x8337, 0xcefe, 0xf16d, 0x0, 0x1);
        gbc.writeMem(0xc45d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa12);
        EXPECT(gbc.pc(), 0xc45f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45d), 0xcb);
        EXPECT(gbc.readMem(0xc45e), 0x75);
        // CB 75 03A0
        gbc.setState(0x220f, 0x1d0d, 0xac80, 0x69c1, 0xe151, 0xe7ac, 0x1, 0x0);
        gbc.writeMem(0x220f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1d0d);
        EXPECT(gbc.pc(), 0x2211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03A1
        gbc.setState(0x24c8, 0x33cc, 0xbee0, 0x7706, 0xa3b3, 0x46b1, 0x0, 0x0);
        gbc.writeMem(0x24c8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x33cc);
        EXPECT(gbc.pc(), 0x24ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03A2
        gbc.setState(0xd8bc, 0x4d0, 0x12f0, 0x25e5, 0x3f11, 0xd0a7, 0x1, 0x1);
        gbc.writeMem(0xd8bc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4d0);
        EXPECT(gbc.pc(), 0xd8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8bc), 0xcb);
        EXPECT(gbc.readMem(0xd8bd), 0x75);
        // CB 75 03A3
        gbc.setState(0x147b, 0xb5fb, 0xfe80, 0x8c51, 0x425c, 0x989e, 0x0, 0x1);
        gbc.writeMem(0x147b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb5fb);
        EXPECT(gbc.pc(), 0x147d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03A4
        gbc.setState(0x4ae9, 0xa73f, 0xe750, 0xc0ed, 0x8858, 0x82fa, 0x1, 0x1);
        gbc.writeMem(0x4ae9, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa73f);
        EXPECT(gbc.pc(), 0x4aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03A5
        gbc.setState(0xad6b, 0xa6c7, 0x8c60, 0xd1ef, 0x96d9, 0x9182, 0x1, 0x1);
        gbc.writeMem(0xad6b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa6c7);
        EXPECT(gbc.pc(), 0xad6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad6b), 0xcb);
        EXPECT(gbc.readMem(0xad6c), 0x75);
        // CB 75 03A6
        gbc.setState(0x9198, 0x6fb5, 0x4390, 0xe1ed, 0x5ee, 0x6c26, 0x1, 0x1);
        gbc.writeMem(0x9198, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6fb5);
        EXPECT(gbc.pc(), 0x919a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9198), 0xcb);
        EXPECT(gbc.readMem(0x9199), 0x75);
        // CB 75 03A7
        gbc.setState(0xac9d, 0xed4c, 0x64a0, 0x873d, 0xd7ab, 0x3927, 0x0, 0x1);
        gbc.writeMem(0xac9d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xed4c);
        EXPECT(gbc.pc(), 0xac9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9d), 0xcb);
        EXPECT(gbc.readMem(0xac9e), 0x75);
        // CB 75 03A8
        gbc.setState(0xe9d1, 0x17c7, 0xf140, 0x8e17, 0xab2a, 0x95e5, 0x1, 0x1);
        gbc.writeMem(0xe9d1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x17c7);
        EXPECT(gbc.pc(), 0xe9d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9d1), 0xcb);
        EXPECT(gbc.readMem(0xe9d2), 0x75);
        // CB 75 03A9
        gbc.setState(0xc1e6, 0x8af1, 0xb660, 0xe5e7, 0xd7db, 0x3d, 0x0, 0x1);
        gbc.writeMem(0xc1e6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8af1);
        EXPECT(gbc.pc(), 0xc1e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e6), 0xcb);
        EXPECT(gbc.readMem(0xc1e7), 0x75);
        // CB 75 03AA
        gbc.setState(0xa9b, 0xc4b, 0x2440, 0xb4c3, 0xb7ae, 0xb505, 0x0, 0x1);
        gbc.writeMem(0xa9b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc4b);
        EXPECT(gbc.pc(), 0xa9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03AB
        gbc.setState(0x308c, 0x8c87, 0x5120, 0xe404, 0xb384, 0x8653, 0x0, 0x1);
        gbc.writeMem(0x308c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8c87);
        EXPECT(gbc.pc(), 0x308e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03AC
        gbc.setState(0xae7a, 0xd9a7, 0x9c20, 0x85d1, 0x3724, 0xbe8d, 0x1, 0x1);
        gbc.writeMem(0xae7a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd9a7);
        EXPECT(gbc.pc(), 0xae7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae7a), 0xcb);
        EXPECT(gbc.readMem(0xae7b), 0x75);
        // CB 75 03AD
        gbc.setState(0x383f, 0x38cf, 0xd9d0, 0xd600, 0x945f, 0xffe, 0x1, 0x0);
        gbc.writeMem(0x383f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x38cf);
        EXPECT(gbc.pc(), 0x3841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03AE
        gbc.setState(0xdb5, 0x116c, 0xaa10, 0x4173, 0xaaea, 0x6956, 0x1, 0x0);
        gbc.writeMem(0xdb5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x116c);
        EXPECT(gbc.pc(), 0xdb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03AF
        gbc.setState(0x602c, 0x8081, 0xa680, 0x2b34, 0x3bcd, 0x8420, 0x1, 0x1);
        gbc.writeMem(0x602c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8081);
        EXPECT(gbc.pc(), 0x602e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03B0
        gbc.setState(0x6cbd, 0x8559, 0xf830, 0x2496, 0xc5a5, 0x3f4e, 0x0, 0x0);
        gbc.writeMem(0x6cbd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8559);
        EXPECT(gbc.pc(), 0x6cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03B1
        gbc.setState(0x3d74, 0xa3dc, 0x12e0, 0x3c28, 0xc33b, 0x4595, 0x1, 0x1);
        gbc.writeMem(0x3d74, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa3dc);
        EXPECT(gbc.pc(), 0x3d76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03B3
        gbc.setState(0xeb22, 0xb393, 0xdcd0, 0xa4d4, 0xcc32, 0x46f6, 0x1, 0x0);
        gbc.writeMem(0xeb22, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb393);
        EXPECT(gbc.pc(), 0xeb24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb22), 0xcb);
        EXPECT(gbc.readMem(0xeb23), 0x75);
        // CB 75 03B4
        gbc.setState(0xceaa, 0x8953, 0x1e50, 0xb1bd, 0xa87d, 0x7eac, 0x0, 0x1);
        gbc.writeMem(0xceaa, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8953);
        EXPECT(gbc.pc(), 0xceac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceaa), 0xcb);
        EXPECT(gbc.readMem(0xceab), 0x75);
        // CB 75 03B5
        gbc.setState(0x748d, 0xbd5b, 0xd160, 0xfde2, 0x6c68, 0x99ed, 0x1, 0x0);
        gbc.writeMem(0x748d, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbd5b);
        EXPECT(gbc.pc(), 0x748f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03B6
        gbc.setState(0xe258, 0xdb2f, 0xefa0, 0xcfcc, 0x2381, 0xd51a, 0x0, 0x0);
        gbc.writeMem(0xe258, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdb2f);
        EXPECT(gbc.pc(), 0xe25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe258), 0xcb);
        EXPECT(gbc.readMem(0xe259), 0x75);
        // CB 75 03B7
        gbc.setState(0x1c2c, 0x6a1, 0x8790, 0xd189, 0x4994, 0xef95, 0x0, 0x0);
        gbc.writeMem(0x1c2c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6a1);
        EXPECT(gbc.pc(), 0x1c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03B8
        gbc.setState(0xd630, 0x7221, 0x9ec0, 0xe713, 0x1f9e, 0x7007, 0x0, 0x0);
        gbc.writeMem(0xd630, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7221);
        EXPECT(gbc.pc(), 0xd632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd630), 0xcb);
        EXPECT(gbc.readMem(0xd631), 0x75);
        // CB 75 03B9
        gbc.setState(0xafc6, 0x253d, 0x1540, 0x3a0b, 0xeeb6, 0x1bb7, 0x1, 0x0);
        gbc.writeMem(0xafc6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x253d);
        EXPECT(gbc.pc(), 0xafc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc6), 0xcb);
        EXPECT(gbc.readMem(0xafc7), 0x75);
        // CB 75 03BB
        gbc.setState(0xa14b, 0xca2e, 0xb0c0, 0x1d22, 0xec49, 0x616f, 0x1, 0x1);
        gbc.writeMem(0xa14b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xca2e);
        EXPECT(gbc.pc(), 0xa14d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa14b), 0xcb);
        EXPECT(gbc.readMem(0xa14c), 0x75);
        // CB 75 03BC
        gbc.setState(0x7019, 0xe2f8, 0x1090, 0x166f, 0xda6a, 0xea8a, 0x0, 0x1);
        gbc.writeMem(0x7019, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe2f8);
        EXPECT(gbc.pc(), 0x701b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03BD
        gbc.setState(0x9193, 0x6648, 0x25d0, 0x6dc3, 0xa9e3, 0x2a03, 0x1, 0x0);
        gbc.writeMem(0x9193, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6648);
        EXPECT(gbc.pc(), 0x9195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9193), 0xcb);
        EXPECT(gbc.readMem(0x9194), 0x75);
        // CB 75 03BE
        gbc.setState(0xd2ed, 0x9e3f, 0xea0, 0x84e7, 0xec1b, 0xdd96, 0x1, 0x0);
        gbc.writeMem(0xd2ed, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9e3f);
        EXPECT(gbc.pc(), 0xd2ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ed), 0xcb);
        EXPECT(gbc.readMem(0xd2ee), 0x75);
        // CB 75 03BF
        gbc.setState(0x938b, 0x5419, 0x6010, 0x458a, 0x4933, 0x5057, 0x0, 0x1);
        gbc.writeMem(0x938b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5419);
        EXPECT(gbc.pc(), 0x938d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x938b), 0xcb);
        EXPECT(gbc.readMem(0x938c), 0x75);
        // CB 75 03C0
        gbc.setState(0x7c8, 0x197a, 0x6410, 0xcf3f, 0xe7f, 0xf6d1, 0x1, 0x1);
        gbc.writeMem(0x7c8, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x197a);
        EXPECT(gbc.pc(), 0x7ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03C1
        gbc.setState(0xa162, 0xef00, 0x1880, 0xf057, 0xc8f6, 0x4c2, 0x0, 0x1);
        gbc.writeMem(0xa162, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xef00);
        EXPECT(gbc.pc(), 0xa164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa162), 0xcb);
        EXPECT(gbc.readMem(0xa163), 0x75);
        // CB 75 03C2
        gbc.setState(0xe422, 0x4f70, 0xb7a0, 0xe384, 0xd6a7, 0x54f6, 0x0, 0x1);
        gbc.writeMem(0xe422, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4f70);
        EXPECT(gbc.pc(), 0xe424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe422), 0xcb);
        EXPECT(gbc.readMem(0xe423), 0x75);
        // CB 75 03C3
        gbc.setState(0x5d0c, 0x754b, 0x3230, 0x9c53, 0xe61f, 0x653e, 0x0, 0x1);
        gbc.writeMem(0x5d0c, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x754b);
        EXPECT(gbc.pc(), 0x5d0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03C4
        gbc.setState(0x3bd, 0xd7ca, 0xf7d0, 0x2715, 0x42b9, 0xc668, 0x1, 0x0);
        gbc.writeMem(0x3bd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd7ca);
        EXPECT(gbc.pc(), 0x3bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03C5
        gbc.setState(0x714e, 0x315, 0xb0d0, 0x9a0f, 0xdc51, 0x69b, 0x0, 0x1);
        gbc.writeMem(0x714e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x315);
        EXPECT(gbc.pc(), 0x7150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03C6
        gbc.setState(0x30c1, 0x8668, 0xa350, 0x5bbc, 0x51b2, 0x2d22, 0x0, 0x0);
        gbc.writeMem(0x30c1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8668);
        EXPECT(gbc.pc(), 0x30c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03C7
        gbc.setState(0xa93f, 0x16f0, 0xd780, 0x4c11, 0x746e, 0x86fe, 0x1, 0x1);
        gbc.writeMem(0xa93f, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x16f0);
        EXPECT(gbc.pc(), 0xa941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa93f), 0xcb);
        EXPECT(gbc.readMem(0xa940), 0x75);
        // CB 75 03C8
        gbc.setState(0xa0f7, 0x684, 0x540, 0x83b9, 0x3f6e, 0x4c03, 0x1, 0x0);
        gbc.writeMem(0xa0f7, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x684);
        EXPECT(gbc.pc(), 0xa0f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f7), 0xcb);
        EXPECT(gbc.readMem(0xa0f8), 0x75);
        // CB 75 03C9
        gbc.setState(0xd425, 0x65a0, 0x5ec0, 0x563b, 0x2517, 0xced5, 0x0, 0x1);
        gbc.writeMem(0xd425, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x65a0);
        EXPECT(gbc.pc(), 0xd427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd425), 0xcb);
        EXPECT(gbc.readMem(0xd426), 0x75);
        // CB 75 03CA
        gbc.setState(0xae9b, 0xd194, 0x7d80, 0x3b38, 0xecd3, 0xe1d3, 0x0, 0x1);
        gbc.writeMem(0xae9b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd194);
        EXPECT(gbc.pc(), 0xae9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae9b), 0xcb);
        EXPECT(gbc.readMem(0xae9c), 0x75);
        // CB 75 03CB
        gbc.setState(0x862, 0xdeb7, 0xf850, 0xccad, 0x1274, 0x6a44, 0x1, 0x1);
        gbc.writeMem(0x862, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdeb7);
        EXPECT(gbc.pc(), 0x864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03CC
        gbc.setState(0x1ba6, 0x1f66, 0x2580, 0x7b15, 0x53ee, 0x31e5, 0x1, 0x0);
        gbc.writeMem(0x1ba6, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1f66);
        EXPECT(gbc.pc(), 0x1ba8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03CD
        gbc.setState(0x218e, 0xd2a4, 0xefd0, 0x90bf, 0x5107, 0x4562, 0x1, 0x1);
        gbc.writeMem(0x218e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd2a4);
        EXPECT(gbc.pc(), 0x2190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03CE
        gbc.setState(0xa219, 0x64c9, 0x5df0, 0x354a, 0x28b8, 0xf247, 0x0, 0x1);
        gbc.writeMem(0xa219, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x64c9);
        EXPECT(gbc.pc(), 0xa21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa219), 0xcb);
        EXPECT(gbc.readMem(0xa21a), 0x75);
        // CB 75 03CF
        gbc.setState(0x4c1a, 0xf309, 0xb860, 0xf700, 0xb87f, 0xe1d0, 0x1, 0x0);
        gbc.writeMem(0x4c1a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf309);
        EXPECT(gbc.pc(), 0x4c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03D0
        gbc.setState(0x155b, 0xb74b, 0x0, 0xa208, 0x9c11, 0xaa44, 0x0, 0x1);
        gbc.writeMem(0x155b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb74b);
        EXPECT(gbc.pc(), 0x155d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03D1
        gbc.setState(0xaa81, 0x30c5, 0xafc0, 0x9677, 0x7a56, 0xe85e, 0x1, 0x1);
        gbc.writeMem(0xaa81, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x30c5);
        EXPECT(gbc.pc(), 0xaa83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa81), 0xcb);
        EXPECT(gbc.readMem(0xaa82), 0x75);
        // CB 75 03D2
        gbc.setState(0xd189, 0xe6a5, 0xc8b0, 0x5bf7, 0x23d5, 0x3b09, 0x1, 0x0);
        gbc.writeMem(0xd189, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe6a5);
        EXPECT(gbc.pc(), 0xd18b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd189), 0xcb);
        EXPECT(gbc.readMem(0xd18a), 0x75);
        // CB 75 03D3
        gbc.setState(0x82ab, 0xb7a1, 0x3b80, 0x3ead, 0xf748, 0x10ea, 0x1, 0x0);
        gbc.writeMem(0x82ab, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb7a1);
        EXPECT(gbc.pc(), 0x82ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ab), 0xcb);
        EXPECT(gbc.readMem(0x82ac), 0x75);
        // CB 75 03D4
        gbc.setState(0xacbd, 0x301d, 0x2d80, 0xcce8, 0x684f, 0xc5e6, 0x1, 0x0);
        gbc.writeMem(0xacbd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x301d);
        EXPECT(gbc.pc(), 0xacbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacbd), 0xcb);
        EXPECT(gbc.readMem(0xacbe), 0x75);
        // CB 75 03D5
        gbc.setState(0xaf28, 0x2013, 0xe160, 0xc7b5, 0x24fd, 0xff95, 0x1, 0x1);
        gbc.writeMem(0xaf28, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2013);
        EXPECT(gbc.pc(), 0xaf2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf28), 0xcb);
        EXPECT(gbc.readMem(0xaf29), 0x75);
        // CB 75 03D6
        gbc.setState(0x7dd4, 0x74f4, 0x2160, 0x2abb, 0x8698, 0x4bed, 0x1, 0x1);
        gbc.writeMem(0x7dd4, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x74f4);
        EXPECT(gbc.pc(), 0x7dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03D7
        gbc.setState(0xc2de, 0x7eb2, 0xe0b0, 0x6ae0, 0xb89e, 0x2480, 0x1, 0x0);
        gbc.writeMem(0xc2de, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7eb2);
        EXPECT(gbc.pc(), 0xc2e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2de), 0xcb);
        EXPECT(gbc.readMem(0xc2df), 0x75);
        // CB 75 03D8
        gbc.setState(0x139e, 0x78d9, 0xf880, 0x382e, 0xf102, 0x191a, 0x0, 0x0);
        gbc.writeMem(0x139e, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x78d9);
        EXPECT(gbc.pc(), 0x13a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03D9
        gbc.setState(0xe03a, 0x5895, 0x3d20, 0x15ae, 0x30be, 0x59a4, 0x0, 0x0);
        gbc.writeMem(0xe03a, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5895);
        EXPECT(gbc.pc(), 0xe03c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03a), 0xcb);
        EXPECT(gbc.readMem(0xe03b), 0x75);
        // CB 75 03DA
        gbc.setState(0x5ad1, 0x6085, 0x4a80, 0xe703, 0x6890, 0x50e1, 0x1, 0x0);
        gbc.writeMem(0x5ad1, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6085);
        EXPECT(gbc.pc(), 0x5ad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03DB
        gbc.setState(0x36b5, 0x134, 0xa2e0, 0x5420, 0xa773, 0x3437, 0x0, 0x1);
        gbc.writeMem(0x36b5, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x134);
        EXPECT(gbc.pc(), 0x36b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03DC
        gbc.setState(0x8720, 0x54f, 0x2a40, 0xa85b, 0xd362, 0x5202, 0x0, 0x0);
        gbc.writeMem(0x8720, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x54f);
        EXPECT(gbc.pc(), 0x8722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8720), 0xcb);
        EXPECT(gbc.readMem(0x8721), 0x75);
        // CB 75 03DD
        gbc.setState(0x52fd, 0xbb15, 0xa3a0, 0xbcf1, 0x93db, 0xec4f, 0x0, 0x0);
        gbc.writeMem(0x52fd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xbb15);
        EXPECT(gbc.pc(), 0x52ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03DE
        gbc.setState(0x7918, 0xd01, 0x2710, 0x110d, 0x49a, 0x82ba, 0x0, 0x0);
        gbc.writeMem(0x7918, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd01);
        EXPECT(gbc.pc(), 0x791a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03DF
        gbc.setState(0x4ebc, 0x5078, 0xb3e0, 0x8a4e, 0xecb4, 0x3295, 0x0, 0x1);
        gbc.writeMem(0x4ebc, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5078);
        EXPECT(gbc.pc(), 0x4ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03E0
        gbc.setState(0x52dd, 0x3716, 0xd270, 0xfd08, 0xbeb, 0xb2c5, 0x0, 0x1);
        gbc.writeMem(0x52dd, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3716);
        EXPECT(gbc.pc(), 0x52df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 75 03E1
        gbc.setState(0x1bea, 0x1016, 0xe660, 0xb130, 0xc7d9, 0x3abd, 0x1, 0x1);
        gbc.writeMem(0x1bea, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1016);
        EXPECT(gbc.pc(), 0x1bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03E2
        gbc.setState(0xd376, 0xbeba, 0x9bb0, 0x8249, 0x5143, 0x33a1, 0x1, 0x0);
        gbc.writeMem(0xd376, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbeba);
        EXPECT(gbc.pc(), 0xd378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd376), 0xcb);
        EXPECT(gbc.readMem(0xd377), 0x75);
        // CB 75 03E3
        gbc.setState(0x4853, 0x933c, 0xbae0, 0x27a6, 0x6f02, 0x3112, 0x0, 0x0);
        gbc.writeMem(0x4853, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x933c);
        EXPECT(gbc.pc(), 0x4855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03E5
        gbc.setState(0x846, 0x2e0c, 0x5f60, 0x6e55, 0xc385, 0x1d2f, 0x1, 0x1);
        gbc.writeMem(0x846, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2e0c);
        EXPECT(gbc.pc(), 0x848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 75 03E6
        gbc.setState(0xe7a0, 0x1568, 0xc320, 0xd4b4, 0xfedb, 0x2eef, 0x0, 0x1);
        gbc.writeMem(0xe7a0, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1568);
        EXPECT(gbc.pc(), 0xe7a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a0), 0xcb);
        EXPECT(gbc.readMem(0xe7a1), 0x75);
        // CB 75 03E7
        gbc.setState(0x9b6b, 0xd7ad, 0x8330, 0xfc96, 0x2a03, 0xfe9e, 0x0, 0x0);
        gbc.writeMem(0x9b6b, { 0xcb, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd7ad);
        EXPECT(gbc.pc(), 0x9b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6b), 0xcb);
        EXPECT(gbc.readMem(0x9b6c), 0x75);
    }
}
#endif
