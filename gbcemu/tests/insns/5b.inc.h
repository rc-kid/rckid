    TEST(gbcemu, opcode_5b) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 5B 0001
        gbc.setState(0x178a, 0x1f4a, 0x53a0, 0xd8e3, 0x8e9f, 0x138f, 0x0, 0x0);
        gbc.writeMem(0x178a, { 0x5b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1f4a, gbc.sp());
        EXPECT(0x178b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0002
        gbc.setState(0xdb37, 0x33f0, 0xe650, 0xa0e0, 0x3b9d, 0xc8ef, 0x1, 0x1);
        gbc.writeMem(0xdb37, { 0x5b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x33f0, gbc.sp());
        EXPECT(0xdb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdb37));
        // 5B 0003
        gbc.setState(0x922c, 0x109f, 0x80e0, 0xabf9, 0xb536, 0x3e72, 0x0, 0x0);
        gbc.writeMem(0x922c, { 0x5b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x109f, gbc.sp());
        EXPECT(0x922d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x922c));
        // 5B 0004
        gbc.setState(0x6910, 0x836f, 0x1f80, 0x4add, 0xb7ae, 0x4e6d, 0x0, 0x0);
        gbc.writeMem(0x6910, { 0x5b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x836f, gbc.sp());
        EXPECT(0x6911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0005
        gbc.setState(0x8346, 0x6d5, 0xc10, 0x5d7c, 0x4ea0, 0x5f7e, 0x0, 0x1);
        gbc.writeMem(0x8346, { 0x5b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6d5, gbc.sp());
        EXPECT(0x8347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8346));
        // 5B 0006
        gbc.setState(0x9a84, 0x72f, 0xe750, 0x7b0e, 0x7cde, 0x118d, 0x1, 0x1);
        gbc.writeMem(0x9a84, { 0x5b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x72f, gbc.sp());
        EXPECT(0x9a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9a84));
        // 5B 0007
        gbc.setState(0x385, 0x95ff, 0x4460, 0xc9b1, 0xd5a8, 0x7d96, 0x0, 0x1);
        gbc.writeMem(0x385, { 0x5b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x95ff, gbc.sp());
        EXPECT(0x386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0008
        gbc.setState(0x1478, 0xf3ab, 0x9a70, 0xfc85, 0x3c5a, 0x8602, 0x1, 0x0);
        gbc.writeMem(0x1478, { 0x5b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf3ab, gbc.sp());
        EXPECT(0x1479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0009
        gbc.setState(0x9d8c, 0x6a40, 0x3cf0, 0x6110, 0xba05, 0x1e51, 0x1, 0x0);
        gbc.writeMem(0x9d8c, { 0x5b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6a40, gbc.sp());
        EXPECT(0x9d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9d8c));
        // 5B 000A
        gbc.setState(0x1008, 0x3b5b, 0x4b90, 0x32fc, 0x3643, 0xb2f4, 0x0, 0x1);
        gbc.writeMem(0x1008, { 0x5b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3b5b, gbc.sp());
        EXPECT(0x1009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 000B
        gbc.setState(0x2f65, 0xaa5c, 0x28a0, 0x6e7f, 0x8b08, 0x202e, 0x0, 0x0);
        gbc.writeMem(0x2f65, { 0x5b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xaa5c, gbc.sp());
        EXPECT(0x2f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 000C
        gbc.setState(0x40ff, 0x9233, 0xc100, 0x9fdc, 0x832f, 0x7db9, 0x0, 0x1);
        gbc.writeMem(0x40ff, { 0x5b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9233, gbc.sp());
        EXPECT(0x4100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 000D
        gbc.setState(0xd991, 0x59d6, 0xc440, 0x649f, 0xe37e, 0x750d, 0x0, 0x0);
        gbc.writeMem(0xd991, { 0x5b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x59d6, gbc.sp());
        EXPECT(0xd992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd991));
        // 5B 000E
        gbc.setState(0xbc61, 0x1af6, 0x53e0, 0x16dc, 0xe7fd, 0xa753, 0x1, 0x1);
        gbc.writeMem(0xbc61, { 0x5b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1af6, gbc.sp());
        EXPECT(0xbc62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbc61));
        // 5B 000F
        gbc.setState(0xa525, 0x7ca2, 0x1af0, 0x2f0a, 0x4193, 0x9295, 0x1, 0x0);
        gbc.writeMem(0xa525, { 0x5b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7ca2, gbc.sp());
        EXPECT(0xa526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa525));
        // 5B 0010
        gbc.setState(0x74da, 0x604, 0xbbe0, 0xcc6f, 0xb8e2, 0xbf7f, 0x1, 0x0);
        gbc.writeMem(0x74da, { 0x5b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x604, gbc.sp());
        EXPECT(0x74db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0012
        gbc.setState(0x857f, 0x51b6, 0xef50, 0x6989, 0x69fd, 0x6e38, 0x1, 0x1);
        gbc.writeMem(0x857f, { 0x5b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x51b6, gbc.sp());
        EXPECT(0x8580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x857f));
        // 5B 0013
        gbc.setState(0x9d05, 0xcdc7, 0x1050, 0x4129, 0xdc2e, 0xea94, 0x0, 0x0);
        gbc.writeMem(0x9d05, { 0x5b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcdc7, gbc.sp());
        EXPECT(0x9d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9d05));
        // 5B 0014
        gbc.setState(0x2513, 0x8d38, 0x1940, 0x2609, 0x375d, 0x9813, 0x1, 0x1);
        gbc.writeMem(0x2513, { 0x5b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8d38, gbc.sp());
        EXPECT(0x2514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0015
        gbc.setState(0xb43f, 0xbff9, 0xe5f0, 0xe3ef, 0xf149, 0xb212, 0x1, 0x0);
        gbc.writeMem(0xb43f, { 0x5b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbff9, gbc.sp());
        EXPECT(0xb440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb43f));
        // 5B 0016
        gbc.setState(0x5d45, 0xf10a, 0x3a60, 0xe611, 0xe682, 0xcf53, 0x1, 0x1);
        gbc.writeMem(0x5d45, { 0x5b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf10a, gbc.sp());
        EXPECT(0x5d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0017
        gbc.setState(0xe355, 0x176e, 0x35a0, 0xf335, 0x61e4, 0x5361, 0x0, 0x1);
        gbc.writeMem(0xe355, { 0x5b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x176e, gbc.sp());
        EXPECT(0xe356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe355));
        // 5B 0018
        gbc.setState(0x5585, 0x9df7, 0xdc10, 0xbb03, 0x1165, 0xdac, 0x0, 0x1);
        gbc.writeMem(0x5585, { 0x5b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9df7, gbc.sp());
        EXPECT(0x5586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0019
        gbc.setState(0x7778, 0xb489, 0x9060, 0xe3f7, 0xafe4, 0x73e5, 0x1, 0x0);
        gbc.writeMem(0x7778, { 0x5b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb489, gbc.sp());
        EXPECT(0x7779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 001A
        gbc.setState(0x2ba5, 0x2f44, 0xbb60, 0x1568, 0x7908, 0xeac, 0x0, 0x1);
        gbc.writeMem(0x2ba5, { 0x5b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2f44, gbc.sp());
        EXPECT(0x2ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 001B
        gbc.setState(0xd429, 0x99dc, 0x3730, 0xa287, 0xc0fb, 0x95c9, 0x0, 0x1);
        gbc.writeMem(0xd429, { 0x5b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x99dc, gbc.sp());
        EXPECT(0xd42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd429));
        // 5B 001C
        gbc.setState(0x10ea, 0xf2ee, 0x6ee0, 0x7504, 0x55ae, 0x4077, 0x0, 0x1);
        gbc.writeMem(0x10ea, { 0x5b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf2ee, gbc.sp());
        EXPECT(0x10eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 001D
        gbc.setState(0x953e, 0x917c, 0x8dd0, 0x933f, 0x7383, 0x32f9, 0x1, 0x1);
        gbc.writeMem(0x953e, { 0x5b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x917c, gbc.sp());
        EXPECT(0x953f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x953e));
        // 5B 001E
        gbc.setState(0xe545, 0x58f8, 0xf450, 0x49ab, 0xe668, 0xd3bd, 0x0, 0x0);
        gbc.writeMem(0xe545, { 0x5b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x58f8, gbc.sp());
        EXPECT(0xe546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe545));
        // 5B 001F
        gbc.setState(0x6ca2, 0xd03c, 0x5670, 0x738a, 0x4d81, 0xa5ba, 0x0, 0x0);
        gbc.writeMem(0x6ca2, { 0x5b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd03c, gbc.sp());
        EXPECT(0x6ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0020
        gbc.setState(0x358a, 0x155d, 0xf390, 0x3f0, 0x8bf, 0x4acc, 0x0, 0x1);
        gbc.writeMem(0x358a, { 0x5b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x155d, gbc.sp());
        EXPECT(0x358b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0021
        gbc.setState(0xd83, 0x29db, 0x4db0, 0xf224, 0xa67, 0x9802, 0x0, 0x1);
        gbc.writeMem(0xd83, { 0x5b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x29db, gbc.sp());
        EXPECT(0xd84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0022
        gbc.setState(0x1e98, 0x540, 0x950, 0x45b2, 0x861a, 0x5af8, 0x1, 0x1);
        gbc.writeMem(0x1e98, { 0x5b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x540, gbc.sp());
        EXPECT(0x1e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0023
        gbc.setState(0xc960, 0x2cb2, 0x2d0, 0xeec9, 0xd968, 0x8ae0, 0x1, 0x1);
        gbc.writeMem(0xc960, { 0x5b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2cb2, gbc.sp());
        EXPECT(0xc961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc960));
        // 5B 0024
        gbc.setState(0x6e99, 0x6ab9, 0xc290, 0xbc1e, 0x7653, 0xe99d, 0x1, 0x1);
        gbc.writeMem(0x6e99, { 0x5b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6ab9, gbc.sp());
        EXPECT(0x6e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0025
        gbc.setState(0xcbbf, 0xecf4, 0xb1f0, 0x5c4, 0x58e4, 0x41eb, 0x1, 0x0);
        gbc.writeMem(0xcbbf, { 0x5b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xecf4, gbc.sp());
        EXPECT(0xcbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcbbf));
        // 5B 0026
        gbc.setState(0x83f2, 0xec1, 0xd2d0, 0xd837, 0x56af, 0x39ec, 0x1, 0x1);
        gbc.writeMem(0x83f2, { 0x5b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xec1, gbc.sp());
        EXPECT(0x83f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x83f2));
        // 5B 0027
        gbc.setState(0x2db9, 0x12b2, 0xc00, 0x6ce3, 0x8882, 0x962c, 0x1, 0x1);
        gbc.writeMem(0x2db9, { 0x5b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x12b2, gbc.sp());
        EXPECT(0x2dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0028
        gbc.setState(0xe85f, 0x705f, 0x2d0, 0x523f, 0x4994, 0x95bd, 0x0, 0x1);
        gbc.writeMem(0xe85f, { 0x5b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x705f, gbc.sp());
        EXPECT(0xe860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe85f));
        // 5B 0029
        gbc.setState(0xce8e, 0xc7ba, 0xdcb0, 0xe3b, 0x64d1, 0x7492, 0x0, 0x1);
        gbc.writeMem(0xce8e, { 0x5b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc7ba, gbc.sp());
        EXPECT(0xce8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xce8e));
        // 5B 002A
        gbc.setState(0x157a, 0x9141, 0x7e20, 0xc58e, 0x6089, 0x1996, 0x0, 0x0);
        gbc.writeMem(0x157a, { 0x5b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9141, gbc.sp());
        EXPECT(0x157b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 002C
        gbc.setState(0xa7d0, 0xaee8, 0xc350, 0x96f, 0x4248, 0x4a32, 0x1, 0x1);
        gbc.writeMem(0xa7d0, { 0x5b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaee8, gbc.sp());
        EXPECT(0xa7d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa7d0));
        // 5B 002D
        gbc.setState(0x3bbb, 0xefe3, 0x43b0, 0xaac5, 0x7285, 0x6d7c, 0x1, 0x1);
        gbc.writeMem(0x3bbb, { 0x5b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xefe3, gbc.sp());
        EXPECT(0x3bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 002E
        gbc.setState(0xb74f, 0xff1e, 0xf2b0, 0xe126, 0x875d, 0x9431, 0x0, 0x1);
        gbc.writeMem(0xb74f, { 0x5b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xff1e, gbc.sp());
        EXPECT(0xb750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb74f));
        // 5B 002F
        gbc.setState(0x7b84, 0x4be5, 0x2740, 0x2fb7, 0x2d1, 0x836e, 0x0, 0x1);
        gbc.writeMem(0x7b84, { 0x5b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4be5, gbc.sp());
        EXPECT(0x7b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0030
        gbc.setState(0x68bc, 0x4977, 0x7280, 0xbd4e, 0xddbe, 0x232a, 0x0, 0x1);
        gbc.writeMem(0x68bc, { 0x5b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4977, gbc.sp());
        EXPECT(0x68bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0032
        gbc.setState(0x924, 0xfa23, 0xf00, 0x48ed, 0xa256, 0x1ea1, 0x1, 0x0);
        gbc.writeMem(0x924, { 0x5b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfa23, gbc.sp());
        EXPECT(0x925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0033
        gbc.setState(0x3e65, 0x2981, 0xb660, 0x25f, 0x13e2, 0x8cee, 0x0, 0x1);
        gbc.writeMem(0x3e65, { 0x5b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2981, gbc.sp());
        EXPECT(0x3e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0034
        gbc.setState(0x9e06, 0x3517, 0xdd30, 0x3eba, 0x9b33, 0x482f, 0x1, 0x0);
        gbc.writeMem(0x9e06, { 0x5b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3517, gbc.sp());
        EXPECT(0x9e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9e06));
        // 5B 0035
        gbc.setState(0x9a85, 0x2a5e, 0x7af0, 0xb69b, 0xd6ba, 0x185a, 0x1, 0x1);
        gbc.writeMem(0x9a85, { 0x5b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2a5e, gbc.sp());
        EXPECT(0x9a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9a85));
        // 5B 0036
        gbc.setState(0x5456, 0xad28, 0x7830, 0x46e5, 0x62a1, 0x5149, 0x0, 0x0);
        gbc.writeMem(0x5456, { 0x5b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xad28, gbc.sp());
        EXPECT(0x5457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0037
        gbc.setState(0xb684, 0x922a, 0x4c10, 0x94b5, 0x4f3b, 0x8005, 0x1, 0x0);
        gbc.writeMem(0xb684, { 0x5b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x922a, gbc.sp());
        EXPECT(0xb685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb684));
        // 5B 0038
        gbc.setState(0xe763, 0xf761, 0x9d40, 0x45d, 0x8fa6, 0xfaf4, 0x1, 0x1);
        gbc.writeMem(0xe763, { 0x5b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf761, gbc.sp());
        EXPECT(0xe764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe763));
        // 5B 0039
        gbc.setState(0xbbbf, 0x3999, 0xd90, 0x6749, 0x89d3, 0x494, 0x0, 0x1);
        gbc.writeMem(0xbbbf, { 0x5b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3999, gbc.sp());
        EXPECT(0xbbc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbbbf));
        // 5B 003A
        gbc.setState(0xa9d2, 0x8111, 0xf40, 0x6118, 0x8940, 0xba96, 0x0, 0x1);
        gbc.writeMem(0xa9d2, { 0x5b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8111, gbc.sp());
        EXPECT(0xa9d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa9d2));
        // 5B 003B
        gbc.setState(0x65ff, 0x94e9, 0xbef0, 0xc81a, 0x363b, 0xd5f3, 0x1, 0x1);
        gbc.writeMem(0x65ff, { 0x5b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x94e9, gbc.sp());
        EXPECT(0x6600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 003C
        gbc.setState(0x894d, 0xa62e, 0x94b0, 0xf6d0, 0xce17, 0x5755, 0x0, 0x0);
        gbc.writeMem(0x894d, { 0x5b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa62e, gbc.sp());
        EXPECT(0x894e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x894d));
        // 5B 003D
        gbc.setState(0x6487, 0x4152, 0x41d0, 0x89c8, 0x3988, 0x6978, 0x1, 0x1);
        gbc.writeMem(0x6487, { 0x5b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4152, gbc.sp());
        EXPECT(0x6488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 003E
        gbc.setState(0x854a, 0xffe3, 0x4e90, 0x5b6f, 0xb6d, 0x98f2, 0x1, 0x0);
        gbc.writeMem(0x854a, { 0x5b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xffe3, gbc.sp());
        EXPECT(0x854b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x854a));
        // 5B 003F
        gbc.setState(0x7d15, 0x1aa7, 0x9b50, 0x5640, 0xc98f, 0xb14d, 0x1, 0x1);
        gbc.writeMem(0x7d15, { 0x5b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1aa7, gbc.sp());
        EXPECT(0x7d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0040
        gbc.setState(0x8a38, 0x77eb, 0xa260, 0xcf7f, 0x45f0, 0x52e1, 0x1, 0x1);
        gbc.writeMem(0x8a38, { 0x5b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x77eb, gbc.sp());
        EXPECT(0x8a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8a38));
        // 5B 0041
        gbc.setState(0x3647, 0x434d, 0x4950, 0xdc3b, 0xf51c, 0x419b, 0x1, 0x1);
        gbc.writeMem(0x3647, { 0x5b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0x3648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0042
        gbc.setState(0x1ac0, 0x7b04, 0x860, 0xb954, 0xf682, 0x9ff5, 0x0, 0x0);
        gbc.writeMem(0x1ac0, { 0x5b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7b04, gbc.sp());
        EXPECT(0x1ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0043
        gbc.setState(0x9be5, 0x45ab, 0xffe0, 0x442a, 0x5564, 0x42, 0x0, 0x0);
        gbc.writeMem(0x9be5, { 0x5b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x45ab, gbc.sp());
        EXPECT(0x9be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9be5));
        // 5B 0044
        gbc.setState(0xbf9e, 0xbf31, 0xa4a0, 0xd604, 0x50b7, 0xd932, 0x0, 0x1);
        gbc.writeMem(0xbf9e, { 0x5b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbf31, gbc.sp());
        EXPECT(0xbf9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbf9e));
        // 5B 0045
        gbc.setState(0xd41b, 0xb954, 0x4fb0, 0x59bb, 0x1488, 0x3361, 0x1, 0x0);
        gbc.writeMem(0xd41b, { 0x5b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb954, gbc.sp());
        EXPECT(0xd41c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd41b));
        // 5B 0046
        gbc.setState(0xb5be, 0xeb34, 0x4d70, 0x426e, 0x2aa0, 0xede6, 0x0, 0x1);
        gbc.writeMem(0xb5be, { 0x5b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xeb34, gbc.sp());
        EXPECT(0xb5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb5be));
        // 5B 0047
        gbc.setState(0x7038, 0x4a44, 0x8990, 0xf17c, 0x8881, 0x48f0, 0x0, 0x1);
        gbc.writeMem(0x7038, { 0x5b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4a44, gbc.sp());
        EXPECT(0x7039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0048
        gbc.setState(0xdc94, 0xae46, 0x49b0, 0xb134, 0x2eb6, 0x6205, 0x0, 0x1);
        gbc.writeMem(0xdc94, { 0x5b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xae46, gbc.sp());
        EXPECT(0xdc95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdc94));
        // 5B 0049
        gbc.setState(0xade3, 0xe00a, 0xe1d0, 0xe6f6, 0x36b9, 0x719c, 0x0, 0x0);
        gbc.writeMem(0xade3, { 0x5b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe00a, gbc.sp());
        EXPECT(0xade4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xade3));
        // 5B 004A
        gbc.setState(0x5533, 0xcd4d, 0xa5e0, 0x4850, 0xa4a3, 0x257, 0x0, 0x1);
        gbc.writeMem(0x5533, { 0x5b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcd4d, gbc.sp());
        EXPECT(0x5534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 004B
        gbc.setState(0x84ab, 0x1604, 0xe810, 0x727e, 0x1afc, 0x6bd3, 0x1, 0x0);
        gbc.writeMem(0x84ab, { 0x5b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1604, gbc.sp());
        EXPECT(0x84ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x84ab));
        // 5B 004C
        gbc.setState(0xd6e2, 0x65f5, 0xfc30, 0x67b9, 0x770c, 0x9fec, 0x1, 0x1);
        gbc.writeMem(0xd6e2, { 0x5b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x65f5, gbc.sp());
        EXPECT(0xd6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd6e2));
        // 5B 004D
        gbc.setState(0x7e45, 0x59a2, 0xe670, 0xdbb6, 0x5a8d, 0x1448, 0x1, 0x0);
        gbc.writeMem(0x7e45, { 0x5b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x59a2, gbc.sp());
        EXPECT(0x7e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 004E
        gbc.setState(0x5d86, 0xd91f, 0x67b0, 0xac0b, 0xaff8, 0x5bb8, 0x0, 0x1);
        gbc.writeMem(0x5d86, { 0x5b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd91f, gbc.sp());
        EXPECT(0x5d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 004F
        gbc.setState(0x24ba, 0xc705, 0x2db0, 0xa895, 0xf3ee, 0x6137, 0x1, 0x0);
        gbc.writeMem(0x24ba, { 0x5b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc705, gbc.sp());
        EXPECT(0x24bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0050
        gbc.setState(0x1aea, 0x245, 0x8d20, 0x859a, 0xdb03, 0x3dcc, 0x0, 0x0);
        gbc.writeMem(0x1aea, { 0x5b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x245, gbc.sp());
        EXPECT(0x1aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0051
        gbc.setState(0x7b76, 0x6dcb, 0xcec0, 0xe22, 0xb6e9, 0x9053, 0x1, 0x0);
        gbc.writeMem(0x7b76, { 0x5b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6dcb, gbc.sp());
        EXPECT(0x7b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0052
        gbc.setState(0xd2be, 0x1b0a, 0x2940, 0x281c, 0x963c, 0xae78, 0x0, 0x0);
        gbc.writeMem(0xd2be, { 0x5b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1b0a, gbc.sp());
        EXPECT(0xd2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd2be));
        // 5B 0053
        gbc.setState(0x24e3, 0xe204, 0xa9d0, 0x1062, 0x149b, 0xf73d, 0x0, 0x0);
        gbc.writeMem(0x24e3, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe204, gbc.sp());
        EXPECT(0x24e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0054
        gbc.setState(0xd9d2, 0x7d10, 0x9fa0, 0x18ef, 0x3a5d, 0x19cf, 0x1, 0x1);
        gbc.writeMem(0xd9d2, { 0x5b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7d10, gbc.sp());
        EXPECT(0xd9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd9d2));
        // 5B 0056
        gbc.setState(0x41e2, 0x7cc2, 0x2580, 0x62f9, 0x2ed0, 0x1c8c, 0x0, 0x0);
        gbc.writeMem(0x41e2, { 0x5b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7cc2, gbc.sp());
        EXPECT(0x41e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0057
        gbc.setState(0x6ee9, 0x9734, 0x68d0, 0x9430, 0xdf66, 0x656c, 0x1, 0x0);
        gbc.writeMem(0x6ee9, { 0x5b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9734, gbc.sp());
        EXPECT(0x6eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0058
        gbc.setState(0x6bc6, 0x5d96, 0x8670, 0xa5a0, 0x8b23, 0x80d7, 0x0, 0x0);
        gbc.writeMem(0x6bc6, { 0x5b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5d96, gbc.sp());
        EXPECT(0x6bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0059
        gbc.setState(0xe717, 0x19af, 0xffd0, 0x4216, 0xee38, 0x79f2, 0x1, 0x1);
        gbc.writeMem(0xe717, { 0x5b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x19af, gbc.sp());
        EXPECT(0xe718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe717));
        // 5B 005A
        gbc.setState(0x2e67, 0xb492, 0x4de0, 0xc2d5, 0xfc87, 0xa907, 0x1, 0x0);
        gbc.writeMem(0x2e67, { 0x5b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb492, gbc.sp());
        EXPECT(0x2e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 005B
        gbc.setState(0x7d9c, 0x6fdb, 0xe80, 0xe725, 0x6805, 0xa8d8, 0x1, 0x1);
        gbc.writeMem(0x7d9c, { 0x5b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6fdb, gbc.sp());
        EXPECT(0x7d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 005C
        gbc.setState(0xdf77, 0x7446, 0xb650, 0x600b, 0x1dd5, 0xd338, 0x0, 0x0);
        gbc.writeMem(0xdf77, { 0x5b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7446, gbc.sp());
        EXPECT(0xdf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdf77));
        // 5B 005D
        gbc.setState(0x83a4, 0xcf8, 0x3660, 0x71b6, 0x865a, 0x5084, 0x0, 0x1);
        gbc.writeMem(0x83a4, { 0x5b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcf8, gbc.sp());
        EXPECT(0x83a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x83a4));
        // 5B 005F
        gbc.setState(0xb1cf, 0xab65, 0xd020, 0x4b75, 0x6067, 0x4405, 0x1, 0x1);
        gbc.writeMem(0xb1cf, { 0x5b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xab65, gbc.sp());
        EXPECT(0xb1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb1cf));
        // 5B 0060
        gbc.setState(0xe32c, 0x75f8, 0x1cb0, 0x9f2b, 0xee5a, 0xf946, 0x1, 0x0);
        gbc.writeMem(0xe32c, { 0x5b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x75f8, gbc.sp());
        EXPECT(0xe32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe32c));
        // 5B 0061
        gbc.setState(0x3e20, 0xcfef, 0xcc70, 0x3fb1, 0x97ca, 0x4243, 0x0, 0x0);
        gbc.writeMem(0x3e20, { 0x5b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcfef, gbc.sp());
        EXPECT(0x3e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0062
        gbc.setState(0xe4b, 0x234e, 0x6700, 0x23f2, 0x21c6, 0xb6c, 0x1, 0x1);
        gbc.writeMem(0xe4b, { 0x5b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x234e, gbc.sp());
        EXPECT(0xe4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0063
        gbc.setState(0x8eb6, 0xd85b, 0x19d0, 0x425c, 0x7892, 0xa15c, 0x1, 0x0);
        gbc.writeMem(0x8eb6, { 0x5b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd85b, gbc.sp());
        EXPECT(0x8eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8eb6));
        // 5B 0064
        gbc.setState(0x36fa, 0x48df, 0x77a0, 0x952c, 0x1dca, 0x5507, 0x1, 0x1);
        gbc.writeMem(0x36fa, { 0x5b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x48df, gbc.sp());
        EXPECT(0x36fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0065
        gbc.setState(0x39bb, 0xb2ed, 0x7500, 0x6d04, 0x448b, 0xe258, 0x1, 0x0);
        gbc.writeMem(0x39bb, { 0x5b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb2ed, gbc.sp());
        EXPECT(0x39bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0066
        gbc.setState(0x1ae, 0x5319, 0xe3e0, 0x3c37, 0xc48f, 0x776d, 0x1, 0x1);
        gbc.writeMem(0x1ae, { 0x5b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5319, gbc.sp());
        EXPECT(0x1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0067
        gbc.setState(0xaea4, 0x4e8b, 0x290, 0xc4e7, 0x3e1, 0xb749, 0x1, 0x1);
        gbc.writeMem(0xaea4, { 0x5b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4e8b, gbc.sp());
        EXPECT(0xaea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaea4));
        // 5B 0068
        gbc.setState(0x6840, 0x3629, 0x1480, 0x4c6f, 0x846b, 0x30c9, 0x0, 0x1);
        gbc.writeMem(0x6840, { 0x5b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3629, gbc.sp());
        EXPECT(0x6841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0069
        gbc.setState(0xc329, 0xe161, 0x6910, 0x4a93, 0xf7cc, 0x2910, 0x1, 0x0);
        gbc.writeMem(0xc329, { 0x5b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe161, gbc.sp());
        EXPECT(0xc32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc329));
        // 5B 006A
        gbc.setState(0x662e, 0x3cd1, 0x1e0, 0x8d2b, 0x1659, 0x5a17, 0x0, 0x0);
        gbc.writeMem(0x662e, { 0x5b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3cd1, gbc.sp());
        EXPECT(0x662f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 006B
        gbc.setState(0xea74, 0x6c39, 0x75d0, 0x36df, 0xa814, 0xad79, 0x0, 0x1);
        gbc.writeMem(0xea74, { 0x5b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6c39, gbc.sp());
        EXPECT(0xea75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xea74));
        // 5B 006C
        gbc.setState(0x76c0, 0x1e64, 0xd640, 0x5008, 0x5288, 0xf8a8, 0x1, 0x1);
        gbc.writeMem(0x76c0, { 0x5b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1e64, gbc.sp());
        EXPECT(0x76c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 006E
        gbc.setState(0x3589, 0xe350, 0x4050, 0xac39, 0xdb92, 0x4b1d, 0x0, 0x1);
        gbc.writeMem(0x3589, { 0x5b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe350, gbc.sp());
        EXPECT(0x358a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 006F
        gbc.setState(0xaaee, 0x6a89, 0xf280, 0x80a5, 0x570, 0x68ca, 0x1, 0x1);
        gbc.writeMem(0xaaee, { 0x5b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6a89, gbc.sp());
        EXPECT(0xaaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaaee));
        // 5B 0070
        gbc.setState(0x2226, 0xa5fe, 0x96f0, 0x7244, 0xb091, 0x570f, 0x0, 0x1);
        gbc.writeMem(0x2226, { 0x5b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa5fe, gbc.sp());
        EXPECT(0x2227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0071
        gbc.setState(0x4f80, 0xe908, 0x7540, 0x4bdf, 0x6e67, 0x84b6, 0x0, 0x1);
        gbc.writeMem(0x4f80, { 0x5b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe908, gbc.sp());
        EXPECT(0x4f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0072
        gbc.setState(0xddf6, 0xfe6f, 0x1b30, 0xa58c, 0x8955, 0x2cfe, 0x0, 0x1);
        gbc.writeMem(0xddf6, { 0x5b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfe6f, gbc.sp());
        EXPECT(0xddf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xddf6));
        // 5B 0073
        gbc.setState(0xdb33, 0xbc18, 0x6c90, 0x7c96, 0x5ef0, 0x8f47, 0x1, 0x0);
        gbc.writeMem(0xdb33, { 0x5b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbc18, gbc.sp());
        EXPECT(0xdb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdb33));
        // 5B 0075
        gbc.setState(0x7b06, 0xd3c9, 0xd5e0, 0xdd5f, 0x7ab8, 0x86d1, 0x1, 0x0);
        gbc.writeMem(0x7b06, { 0x5b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd3c9, gbc.sp());
        EXPECT(0x7b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0076
        gbc.setState(0xab2b, 0x6699, 0xde50, 0xc014, 0x7227, 0x607f, 0x0, 0x1);
        gbc.writeMem(0xab2b, { 0x5b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6699, gbc.sp());
        EXPECT(0xab2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xab2b));
        // 5B 0077
        gbc.setState(0x5a6c, 0x81f, 0x6970, 0x1eb6, 0xffaa, 0x1580, 0x0, 0x0);
        gbc.writeMem(0x5a6c, { 0x5b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x81f, gbc.sp());
        EXPECT(0x5a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0078
        gbc.setState(0xd074, 0xc7d4, 0x4160, 0xaf97, 0x4ebf, 0x8f2e, 0x1, 0x1);
        gbc.writeMem(0xd074, { 0x5b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc7d4, gbc.sp());
        EXPECT(0xd075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd074));
        // 5B 0079
        gbc.setState(0x12bf, 0x5850, 0x8ff0, 0xed5b, 0x48b4, 0x405a, 0x0, 0x1);
        gbc.writeMem(0x12bf, { 0x5b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5850, gbc.sp());
        EXPECT(0x12c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 007A
        gbc.setState(0xd1f6, 0xb217, 0x8010, 0xeb47, 0x2411, 0x55dd, 0x0, 0x1);
        gbc.writeMem(0xd1f6, { 0x5b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb217, gbc.sp());
        EXPECT(0xd1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd1f6));
        // 5B 007B
        gbc.setState(0x152b, 0x15e, 0x77c0, 0x3cc9, 0xba1c, 0x4e6f, 0x1, 0x0);
        gbc.writeMem(0x152b, { 0x5b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x15e, gbc.sp());
        EXPECT(0x152c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 007D
        gbc.setState(0x35ec, 0xfda9, 0xabf0, 0x6a1c, 0xd035, 0xd645, 0x1, 0x0);
        gbc.writeMem(0x35ec, { 0x5b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfda9, gbc.sp());
        EXPECT(0x35ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 007E
        gbc.setState(0x3660, 0xf9d9, 0x8ae0, 0x21ed, 0x5ff1, 0x5e65, 0x0, 0x1);
        gbc.writeMem(0x3660, { 0x5b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf9d9, gbc.sp());
        EXPECT(0x3661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 007F
        gbc.setState(0x2e4, 0xeda9, 0x3ec0, 0x62a4, 0xfa40, 0x11f9, 0x1, 0x1);
        gbc.writeMem(0x2e4, { 0x5b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xeda9, gbc.sp());
        EXPECT(0x2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0080
        gbc.setState(0x62d7, 0x2565, 0x35b0, 0x14d5, 0xd064, 0x959c, 0x0, 0x1);
        gbc.writeMem(0x62d7, { 0x5b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2565, gbc.sp());
        EXPECT(0x62d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0081
        gbc.setState(0x61fb, 0x2db7, 0x2520, 0x4de3, 0x7ade, 0x1802, 0x0, 0x0);
        gbc.writeMem(0x61fb, { 0x5b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2db7, gbc.sp());
        EXPECT(0x61fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0083
        gbc.setState(0x94da, 0x9e68, 0xf8a0, 0xf08f, 0x448a, 0xca9a, 0x0, 0x1);
        gbc.writeMem(0x94da, { 0x5b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9e68, gbc.sp());
        EXPECT(0x94db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x94da));
        // 5B 0084
        gbc.setState(0x482a, 0x5c32, 0xef10, 0xb0d4, 0x2e73, 0xf7b4, 0x0, 0x1);
        gbc.writeMem(0x482a, { 0x5b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5c32, gbc.sp());
        EXPECT(0x482b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0087
        gbc.setState(0x7635, 0x8056, 0x67a0, 0xcd35, 0x677e, 0x985a, 0x1, 0x0);
        gbc.writeMem(0x7635, { 0x5b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8056, gbc.sp());
        EXPECT(0x7636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0088
        gbc.setState(0x5d03, 0xa115, 0x6770, 0x9efc, 0x379, 0xeb15, 0x0, 0x1);
        gbc.writeMem(0x5d03, { 0x5b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa115, gbc.sp());
        EXPECT(0x5d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0089
        gbc.setState(0x1f65, 0x657f, 0xf330, 0x7c88, 0xc204, 0xcf2e, 0x0, 0x0);
        gbc.writeMem(0x1f65, { 0x5b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x657f, gbc.sp());
        EXPECT(0x1f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 008A
        gbc.setState(0xc9bb, 0x88cc, 0xa880, 0xee84, 0xba17, 0x22a5, 0x1, 0x0);
        gbc.writeMem(0xc9bb, { 0x5b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x88cc, gbc.sp());
        EXPECT(0xc9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc9bb));
        // 5B 008B
        gbc.setState(0x1be3, 0xe7d8, 0x4730, 0x4301, 0x4d55, 0x79a9, 0x0, 0x0);
        gbc.writeMem(0x1be3, { 0x5b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe7d8, gbc.sp());
        EXPECT(0x1be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 008C
        gbc.setState(0x2b22, 0x1303, 0xd370, 0x2923, 0x6ba7, 0x8d7, 0x0, 0x1);
        gbc.writeMem(0x2b22, { 0x5b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1303, gbc.sp());
        EXPECT(0x2b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 008D
        gbc.setState(0x416d, 0x4fc2, 0x4cd0, 0xc141, 0xc0d5, 0xbb69, 0x0, 0x0);
        gbc.writeMem(0x416d, { 0x5b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4fc2, gbc.sp());
        EXPECT(0x416e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 008E
        gbc.setState(0x5dec, 0xd32a, 0x2b0, 0x56ec, 0x795b, 0xd534, 0x1, 0x1);
        gbc.writeMem(0x5dec, { 0x5b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd32a, gbc.sp());
        EXPECT(0x5ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0091
        gbc.setState(0xd3b1, 0x1426, 0xa220, 0x1c2f, 0xdcda, 0x33a6, 0x1, 0x0);
        gbc.writeMem(0xd3b1, { 0x5b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1426, gbc.sp());
        EXPECT(0xd3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd3b1));
        // 5B 0092
        gbc.setState(0xc8f8, 0x8319, 0xab30, 0xd783, 0x71f0, 0x69e9, 0x0, 0x0);
        gbc.writeMem(0xc8f8, { 0x5b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8319, gbc.sp());
        EXPECT(0xc8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc8f8));
        // 5B 0094
        gbc.setState(0x652c, 0x8c4c, 0xffb0, 0xf4b9, 0xc3d7, 0x51b4, 0x1, 0x1);
        gbc.writeMem(0x652c, { 0x5b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8c4c, gbc.sp());
        EXPECT(0x652d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0095
        gbc.setState(0xe1f0, 0x5c5e, 0xd80, 0x52b7, 0x69ff, 0xe927, 0x0, 0x1);
        gbc.writeMem(0xe1f0, { 0x5b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5c5e, gbc.sp());
        EXPECT(0xe1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe1f0));
        // 5B 0096
        gbc.setState(0x8eef, 0x3f02, 0x3cd0, 0xb79b, 0x2b86, 0xd8c6, 0x1, 0x1);
        gbc.writeMem(0x8eef, { 0x5b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3f02, gbc.sp());
        EXPECT(0x8ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8eef));
        // 5B 0097
        gbc.setState(0x5f31, 0xdc5, 0xfb20, 0x86d5, 0x6c61, 0x7fff, 0x0, 0x1);
        gbc.writeMem(0x5f31, { 0x5b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdc5, gbc.sp());
        EXPECT(0x5f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0098
        gbc.setState(0x4b41, 0x3c25, 0x9c90, 0x4937, 0x9e29, 0x10d5, 0x0, 0x1);
        gbc.writeMem(0x4b41, { 0x5b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3c25, gbc.sp());
        EXPECT(0x4b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0099
        gbc.setState(0xd16e, 0x5e6b, 0xc910, 0xaa0d, 0x4d8e, 0x5523, 0x0, 0x1);
        gbc.writeMem(0xd16e, { 0x5b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5e6b, gbc.sp());
        EXPECT(0xd16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd16e));
        // 5B 009A
        gbc.setState(0x7056, 0x7faa, 0xe830, 0x8b23, 0x341e, 0xfbec, 0x1, 0x0);
        gbc.writeMem(0x7056, { 0x5b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7faa, gbc.sp());
        EXPECT(0x7057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 009C
        gbc.setState(0x3b34, 0x955b, 0x5be0, 0x406f, 0xb031, 0xa356, 0x0, 0x1);
        gbc.writeMem(0x3b34, { 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x955b, gbc.sp());
        EXPECT(0x3b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 009D
        gbc.setState(0xe4b4, 0x3bc7, 0x1b0, 0x14e, 0x78e1, 0x3b42, 0x1, 0x0);
        gbc.writeMem(0xe4b4, { 0x5b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3bc7, gbc.sp());
        EXPECT(0xe4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe4b4));
        // 5B 009E
        gbc.setState(0xc1cf, 0x6b83, 0xfa60, 0xc550, 0xfbfa, 0x15b4, 0x0, 0x1);
        gbc.writeMem(0xc1cf, { 0x5b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6b83, gbc.sp());
        EXPECT(0xc1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc1cf));
        // 5B 009F
        gbc.setState(0xb533, 0x8ce0, 0x4280, 0x96ae, 0x32ab, 0xe8c8, 0x0, 0x1);
        gbc.writeMem(0xb533, { 0x5b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8ce0, gbc.sp());
        EXPECT(0xb534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb533));
        // 5B 00A0
        gbc.setState(0xd7d8, 0xa7c5, 0x9e10, 0x604, 0xecae, 0xc99d, 0x1, 0x0);
        gbc.writeMem(0xd7d8, { 0x5b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa7c5, gbc.sp());
        EXPECT(0xd7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd7d8));
        // 5B 00A1
        gbc.setState(0xad7, 0x794d, 0xc500, 0x57b3, 0xafe9, 0x2531, 0x1, 0x1);
        gbc.writeMem(0xad7, { 0x5b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x794d, gbc.sp());
        EXPECT(0xad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00A2
        gbc.setState(0xc150, 0xe27f, 0x8810, 0x5d23, 0xefa5, 0x1a9e, 0x0, 0x1);
        gbc.writeMem(0xc150, { 0x5b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe27f, gbc.sp());
        EXPECT(0xc151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc150));
        // 5B 00A3
        gbc.setState(0x9603, 0x8e60, 0xa780, 0x183f, 0x44d4, 0x6090, 0x0, 0x1);
        gbc.writeMem(0x9603, { 0x5b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8e60, gbc.sp());
        EXPECT(0x9604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9603));
        // 5B 00A4
        gbc.setState(0xec9a, 0x2cb8, 0x3590, 0xc074, 0x3f22, 0xbd78, 0x1, 0x1);
        gbc.writeMem(0xec9a, { 0x5b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2cb8, gbc.sp());
        EXPECT(0xec9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xec9a));
        // 5B 00A5
        gbc.setState(0x17e1, 0x8e72, 0xa910, 0x5f1d, 0x4fe5, 0x35cd, 0x0, 0x0);
        gbc.writeMem(0x17e1, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8e72, gbc.sp());
        EXPECT(0x17e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00A6
        gbc.setState(0x2e8d, 0xa225, 0x89a0, 0xdee9, 0xfb3e, 0x8c8a, 0x1, 0x1);
        gbc.writeMem(0x2e8d, { 0x5b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa225, gbc.sp());
        EXPECT(0x2e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00A7
        gbc.setState(0x1781, 0xeae5, 0xb210, 0xc9ae, 0xe6c, 0xb453, 0x1, 0x1);
        gbc.writeMem(0x1781, { 0x5b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xeae5, gbc.sp());
        EXPECT(0x1782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00A8
        gbc.setState(0xba8b, 0x898b, 0x1700, 0x492a, 0x4073, 0x157b, 0x1, 0x1);
        gbc.writeMem(0xba8b, { 0x5b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x898b, gbc.sp());
        EXPECT(0xba8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xba8b));
        // 5B 00A9
        gbc.setState(0x4479, 0x13ab, 0xcc50, 0x8960, 0x7856, 0x4036, 0x0, 0x0);
        gbc.writeMem(0x4479, { 0x5b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x13ab, gbc.sp());
        EXPECT(0x447a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00AA
        gbc.setState(0xedee, 0x88c6, 0x1400, 0x9e9d, 0xab79, 0x510, 0x0, 0x0);
        gbc.writeMem(0xedee, { 0x5b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x88c6, gbc.sp());
        EXPECT(0xedef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xedee));
        // 5B 00AB
        gbc.setState(0xa97c, 0x2d1b, 0xbcc0, 0xa584, 0x4dd5, 0x4a1b, 0x1, 0x1);
        gbc.writeMem(0xa97c, { 0x5b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2d1b, gbc.sp());
        EXPECT(0xa97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa97c));
        // 5B 00AC
        gbc.setState(0x4b77, 0xc1f6, 0x9ae0, 0xa2b4, 0x4865, 0x1abb, 0x1, 0x1);
        gbc.writeMem(0x4b77, { 0x5b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc1f6, gbc.sp());
        EXPECT(0x4b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00AD
        gbc.setState(0xd626, 0xf204, 0x6b20, 0x9d53, 0xd81, 0xcb1e, 0x0, 0x1);
        gbc.writeMem(0xd626, { 0x5b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf204, gbc.sp());
        EXPECT(0xd627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd626));
        // 5B 00AE
        gbc.setState(0x3fe4, 0xcb2b, 0x8480, 0x76de, 0xa, 0x86b6, 0x1, 0x1);
        gbc.writeMem(0x3fe4, { 0x5b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcb2b, gbc.sp());
        EXPECT(0x3fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00AF
        gbc.setState(0xe518, 0xbd75, 0xcd10, 0xefbc, 0xb3e, 0x39c0, 0x0, 0x0);
        gbc.writeMem(0xe518, { 0x5b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbd75, gbc.sp());
        EXPECT(0xe519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe518));
        // 5B 00B0
        gbc.setState(0x5406, 0xee52, 0x7590, 0x6e20, 0x8f6d, 0xcb08, 0x1, 0x1);
        gbc.writeMem(0x5406, { 0x5b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xee52, gbc.sp());
        EXPECT(0x5407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00B2
        gbc.setState(0xd205, 0x5a6a, 0xf0a0, 0x6f5c, 0x8c1d, 0x693d, 0x1, 0x1);
        gbc.writeMem(0xd205, { 0x5b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5a6a, gbc.sp());
        EXPECT(0xd206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd205));
        // 5B 00B4
        gbc.setState(0x9854, 0x9bb7, 0xf540, 0xe044, 0x5762, 0xa6d5, 0x0, 0x1);
        gbc.writeMem(0x9854, { 0x5b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9bb7, gbc.sp());
        EXPECT(0x9855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9854));
        // 5B 00B5
        gbc.setState(0x271c, 0xe045, 0x6cc0, 0xaebb, 0xece5, 0xf19d, 0x0, 0x1);
        gbc.writeMem(0x271c, { 0x5b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe045, gbc.sp());
        EXPECT(0x271d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00B6
        gbc.setState(0xec78, 0xb2fe, 0x1c30, 0xafe5, 0x4909, 0xd3d5, 0x1, 0x1);
        gbc.writeMem(0xec78, { 0x5b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb2fe, gbc.sp());
        EXPECT(0xec79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xec78));
        // 5B 00B7
        gbc.setState(0xbe6b, 0x8366, 0x1dc0, 0xbd35, 0xe39a, 0x3b52, 0x0, 0x0);
        gbc.writeMem(0xbe6b, { 0x5b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8366, gbc.sp());
        EXPECT(0xbe6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbe6b));
        // 5B 00B8
        gbc.setState(0x1ba7, 0x14d6, 0xe50, 0xebe6, 0x3, 0x6c, 0x0, 0x0);
        gbc.writeMem(0x1ba7, { 0x5b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x14d6, gbc.sp());
        EXPECT(0x1ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00B9
        gbc.setState(0xb869, 0xdf4e, 0x5230, 0x909a, 0xb0d7, 0xa83b, 0x1, 0x1);
        gbc.writeMem(0xb869, { 0x5b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdf4e, gbc.sp());
        EXPECT(0xb86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb869));
        // 5B 00BA
        gbc.setState(0xbd2d, 0x51ec, 0x20d0, 0x7f41, 0xbb66, 0xbdff, 0x1, 0x1);
        gbc.writeMem(0xbd2d, { 0x5b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x51ec, gbc.sp());
        EXPECT(0xbd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbd2d));
        // 5B 00BB
        gbc.setState(0x483f, 0xe1b9, 0xe8d0, 0xc0c9, 0x7a52, 0x1949, 0x0, 0x1);
        gbc.writeMem(0x483f, { 0x5b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe1b9, gbc.sp());
        EXPECT(0x4840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00BD
        gbc.setState(0xc36b, 0x19f2, 0x1e00, 0xa349, 0x2f71, 0xc92a, 0x0, 0x1);
        gbc.writeMem(0xc36b, { 0x5b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x19f2, gbc.sp());
        EXPECT(0xc36c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc36b));
        // 5B 00BE
        gbc.setState(0xd6f7, 0xbc5c, 0x5a10, 0x727b, 0xfd1f, 0xc164, 0x0, 0x1);
        gbc.writeMem(0xd6f7, { 0x5b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbc5c, gbc.sp());
        EXPECT(0xd6f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd6f7));
        // 5B 00BF
        gbc.setState(0x71a0, 0xf3c5, 0x5a40, 0x384, 0x63c9, 0xc4d0, 0x1, 0x0);
        gbc.writeMem(0x71a0, { 0x5b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf3c5, gbc.sp());
        EXPECT(0x71a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00C0
        gbc.setState(0xe345, 0x95c8, 0xe0f0, 0xbbdc, 0x9945, 0xa7fa, 0x1, 0x0);
        gbc.writeMem(0xe345, { 0x5b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x95c8, gbc.sp());
        EXPECT(0xe346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe345));
        // 5B 00C1
        gbc.setState(0x1f7d, 0x480d, 0x5fb0, 0xb778, 0x9c9f, 0xd322, 0x1, 0x0);
        gbc.writeMem(0x1f7d, { 0x5b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x480d, gbc.sp());
        EXPECT(0x1f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00C2
        gbc.setState(0x81f6, 0x62b2, 0xfc60, 0x615, 0x5246, 0x7bd9, 0x1, 0x0);
        gbc.writeMem(0x81f6, { 0x5b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x62b2, gbc.sp());
        EXPECT(0x81f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x81f6));
        // 5B 00C3
        gbc.setState(0xdc4d, 0x34c2, 0x1d90, 0x55dd, 0x1a66, 0x974, 0x1, 0x1);
        gbc.writeMem(0xdc4d, { 0x5b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x34c2, gbc.sp());
        EXPECT(0xdc4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdc4d));
        // 5B 00C4
        gbc.setState(0xbc5d, 0x16a9, 0x52b0, 0x502, 0x415c, 0x756f, 0x0, 0x0);
        gbc.writeMem(0xbc5d, { 0x5b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x16a9, gbc.sp());
        EXPECT(0xbc5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbc5d));
        // 5B 00C5
        gbc.setState(0xd5e7, 0x8f63, 0x9b40, 0x2ddc, 0x7c8f, 0xe665, 0x0, 0x0);
        gbc.writeMem(0xd5e7, { 0x5b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8f63, gbc.sp());
        EXPECT(0xd5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd5e7));
        // 5B 00C6
        gbc.setState(0x5d5b, 0x835b, 0x6d60, 0x9b5, 0xe5c0, 0x9e20, 0x1, 0x0);
        gbc.writeMem(0x5d5b, { 0x5b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x835b, gbc.sp());
        EXPECT(0x5d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00C7
        gbc.setState(0x4be, 0x60b3, 0x4fb0, 0x602e, 0x5b72, 0x63b6, 0x0, 0x0);
        gbc.writeMem(0x4be, { 0x5b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x60b3, gbc.sp());
        EXPECT(0x4bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00C9
        gbc.setState(0x5ede, 0x93d6, 0x8300, 0xdfd7, 0x199b, 0xab3b, 0x0, 0x1);
        gbc.writeMem(0x5ede, { 0x5b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x93d6, gbc.sp());
        EXPECT(0x5edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00CB
        gbc.setState(0xaffc, 0xb3e4, 0x7b10, 0x54bb, 0x77f7, 0x5772, 0x0, 0x1);
        gbc.writeMem(0xaffc, { 0x5b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb3e4, gbc.sp());
        EXPECT(0xaffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaffc));
        // 5B 00CC
        gbc.setState(0x7fcf, 0x8705, 0x1760, 0xa945, 0x407c, 0x9d5d, 0x1, 0x0);
        gbc.writeMem(0x7fcf, { 0x5b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8705, gbc.sp());
        EXPECT(0x7fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00CE
        gbc.setState(0xb22b, 0xf8e1, 0xe420, 0x8549, 0x2a3b, 0xf197, 0x1, 0x1);
        gbc.writeMem(0xb22b, { 0x5b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf8e1, gbc.sp());
        EXPECT(0xb22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb22b));
        // 5B 00CF
        gbc.setState(0x62f8, 0x1ce4, 0x9b90, 0xf3b3, 0x2f4d, 0xc2cd, 0x0, 0x1);
        gbc.writeMem(0x62f8, { 0x5b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1ce4, gbc.sp());
        EXPECT(0x62f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00D0
        gbc.setState(0xbc39, 0xcfa8, 0xd560, 0xf1a9, 0x4b55, 0x1c66, 0x0, 0x1);
        gbc.writeMem(0xbc39, { 0x5b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcfa8, gbc.sp());
        EXPECT(0xbc3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbc39));
        // 5B 00D1
        gbc.setState(0x25f1, 0x6c27, 0xaea0, 0x5d8f, 0xd133, 0xd293, 0x1, 0x1);
        gbc.writeMem(0x25f1, { 0x5b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6c27, gbc.sp());
        EXPECT(0x25f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00D2
        gbc.setState(0x8508, 0x1fb, 0x5e00, 0x712e, 0x71b6, 0xf141, 0x0, 0x0);
        gbc.writeMem(0x8508, { 0x5b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1fb, gbc.sp());
        EXPECT(0x8509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8508));
        // 5B 00D3
        gbc.setState(0x7d07, 0x23e3, 0x4120, 0x4a7b, 0xee5f, 0x931f, 0x1, 0x1);
        gbc.writeMem(0x7d07, { 0x5b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x23e3, gbc.sp());
        EXPECT(0x7d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00D4
        gbc.setState(0xedd6, 0x1402, 0xd990, 0xc94e, 0x221c, 0xa045, 0x1, 0x1);
        gbc.writeMem(0xedd6, { 0x5b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1402, gbc.sp());
        EXPECT(0xedd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xedd6));
        // 5B 00D5
        gbc.setState(0x1b27, 0x9ab5, 0xc130, 0xae3b, 0x4254, 0x762, 0x1, 0x0);
        gbc.writeMem(0x1b27, { 0x5b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9ab5, gbc.sp());
        EXPECT(0x1b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00D6
        gbc.setState(0xdd25, 0xe70f, 0xb050, 0xf7c1, 0xd81d, 0x4df8, 0x0, 0x1);
        gbc.writeMem(0xdd25, { 0x5b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe70f, gbc.sp());
        EXPECT(0xdd26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdd25));
        // 5B 00D7
        gbc.setState(0xb77d, 0x3e4, 0x62f0, 0xdc54, 0x5c4e, 0xabaa, 0x0, 0x1);
        gbc.writeMem(0xb77d, { 0x5b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3e4, gbc.sp());
        EXPECT(0xb77e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb77d));
        // 5B 00D8
        gbc.setState(0x3bec, 0xa801, 0x1dc0, 0xc88b, 0xbea, 0xb9c5, 0x0, 0x1);
        gbc.writeMem(0x3bec, { 0x5b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa801, gbc.sp());
        EXPECT(0x3bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00D9
        gbc.setState(0x10be, 0x97e7, 0x91d0, 0xe931, 0xbbbe, 0xf947, 0x0, 0x0);
        gbc.writeMem(0x10be, { 0x5b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x97e7, gbc.sp());
        EXPECT(0x10bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00DA
        gbc.setState(0x5b75, 0x40e2, 0xa300, 0x789d, 0xab8e, 0x5c95, 0x1, 0x1);
        gbc.writeMem(0x5b75, { 0x5b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x40e2, gbc.sp());
        EXPECT(0x5b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00DB
        gbc.setState(0x8021, 0x1998, 0x9c50, 0xa13a, 0x5ce0, 0x64, 0x1, 0x0);
        gbc.writeMem(0x8021, { 0x5b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1998, gbc.sp());
        EXPECT(0x8022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8021));
        // 5B 00DC
        gbc.setState(0x91ab, 0xa20f, 0x2e90, 0x3461, 0xdbab, 0x40bd, 0x1, 0x0);
        gbc.writeMem(0x91ab, { 0x5b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa20f, gbc.sp());
        EXPECT(0x91ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x91ab));
        // 5B 00DD
        gbc.setState(0x2cc0, 0x827b, 0xa760, 0xcc76, 0x3581, 0x3d18, 0x1, 0x0);
        gbc.writeMem(0x2cc0, { 0x5b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x827b, gbc.sp());
        EXPECT(0x2cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00DE
        gbc.setState(0xe1c1, 0x226c, 0x2f20, 0x919d, 0x9d3c, 0xee3c, 0x0, 0x0);
        gbc.writeMem(0xe1c1, { 0x5b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x226c, gbc.sp());
        EXPECT(0xe1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe1c1));
        // 5B 00E0
        gbc.setState(0x224d, 0xbe2d, 0x7d20, 0x6053, 0x85cb, 0xa0a, 0x1, 0x0);
        gbc.writeMem(0x224d, { 0x5b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbe2d, gbc.sp());
        EXPECT(0x224e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00E1
        gbc.setState(0xd36, 0xd567, 0xa4c0, 0xe572, 0x8007, 0x2653, 0x0, 0x0);
        gbc.writeMem(0xd36, { 0x5b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd567, gbc.sp());
        EXPECT(0xd37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00E2
        gbc.setState(0x7463, 0x75a2, 0x2e60, 0x48e0, 0xea2c, 0x8878, 0x0, 0x1);
        gbc.writeMem(0x7463, { 0x5b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x75a2, gbc.sp());
        EXPECT(0x7464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00E3
        gbc.setState(0xe22c, 0x62cc, 0x400, 0x25ad, 0x8d68, 0x8cb2, 0x1, 0x1);
        gbc.writeMem(0xe22c, { 0x5b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x62cc, gbc.sp());
        EXPECT(0xe22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe22c));
        // 5B 00E4
        gbc.setState(0xc2dd, 0x7d85, 0xd10, 0x7eb5, 0x473d, 0x4350, 0x0, 0x1);
        gbc.writeMem(0xc2dd, { 0x5b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7d85, gbc.sp());
        EXPECT(0xc2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc2dd));
        // 5B 00E5
        gbc.setState(0x7919, 0x742c, 0xf10, 0x4670, 0x837a, 0x4122, 0x1, 0x1);
        gbc.writeMem(0x7919, { 0x5b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x742c, gbc.sp());
        EXPECT(0x791a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00E6
        gbc.setState(0x9244, 0xa348, 0xdf60, 0xca07, 0x81bf, 0xb345, 0x1, 0x0);
        gbc.writeMem(0x9244, { 0x5b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa348, gbc.sp());
        EXPECT(0x9245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9244));
        // 5B 00E7
        gbc.setState(0x53ae, 0xfc5e, 0xd8b0, 0x47e, 0x8fd2, 0xdd32, 0x0, 0x1);
        gbc.writeMem(0x53ae, { 0x5b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfc5e, gbc.sp());
        EXPECT(0x53af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00E8
        gbc.setState(0xc036, 0x85a8, 0x36a0, 0xa3d1, 0x4106, 0x2c1c, 0x1, 0x1);
        gbc.writeMem(0xc036, { 0x5b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x85a8, gbc.sp());
        EXPECT(0xc037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc036));
        // 5B 00E9
        gbc.setState(0x419, 0xad79, 0x1ff0, 0xf10f, 0x2e1c, 0xf516, 0x0, 0x1);
        gbc.writeMem(0x419, { 0x5b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xad79, gbc.sp());
        EXPECT(0x41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00EA
        gbc.setState(0x3177, 0x1694, 0xc3c0, 0xba8f, 0xaa0, 0x3336, 0x0, 0x0);
        gbc.writeMem(0x3177, { 0x5b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1694, gbc.sp());
        EXPECT(0x3178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00EC
        gbc.setState(0x1e6d, 0x1e3d, 0x89f0, 0xf0e8, 0xc92, 0x3865, 0x0, 0x1);
        gbc.writeMem(0x1e6d, { 0x5b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1e3d, gbc.sp());
        EXPECT(0x1e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00ED
        gbc.setState(0x74ab, 0xc7f1, 0xb010, 0xca60, 0x8c88, 0xf55a, 0x0, 0x0);
        gbc.writeMem(0x74ab, { 0x5b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc7f1, gbc.sp());
        EXPECT(0x74ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00EE
        gbc.setState(0x836a, 0x7b4f, 0x25a0, 0x7670, 0xbed1, 0xeae8, 0x0, 0x0);
        gbc.writeMem(0x836a, { 0x5b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7b4f, gbc.sp());
        EXPECT(0x836b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x836a));
        // 5B 00EF
        gbc.setState(0x5b69, 0x3185, 0xdf30, 0xe209, 0x6452, 0x2932, 0x1, 0x0);
        gbc.writeMem(0x5b69, { 0x5b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3185, gbc.sp());
        EXPECT(0x5b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00F0
        gbc.setState(0xafa6, 0xd51a, 0x9600, 0x686a, 0xc44f, 0xccb, 0x1, 0x1);
        gbc.writeMem(0xafa6, { 0x5b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd51a, gbc.sp());
        EXPECT(0xafa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xafa6));
        // 5B 00F1
        gbc.setState(0x3c37, 0x95d6, 0x1f10, 0x7c6e, 0x23c5, 0xcc, 0x1, 0x1);
        gbc.writeMem(0x3c37, { 0x5b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x95d6, gbc.sp());
        EXPECT(0x3c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00F2
        gbc.setState(0xc301, 0xe123, 0xc410, 0xa8a, 0x36e3, 0x41b8, 0x0, 0x1);
        gbc.writeMem(0xc301, { 0x5b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe123, gbc.sp());
        EXPECT(0xc302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc301));
        // 5B 00F3
        gbc.setState(0x85f0, 0x1090, 0x5540, 0x6ccb, 0x57fc, 0xf605, 0x0, 0x1);
        gbc.writeMem(0x85f0, { 0x5b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1090, gbc.sp());
        EXPECT(0x85f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x85f0));
        // 5B 00F4
        gbc.setState(0x71fa, 0xf8a, 0x67a0, 0xbf1b, 0x570c, 0x95c0, 0x0, 0x0);
        gbc.writeMem(0x71fa, { 0x5b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf8a, gbc.sp());
        EXPECT(0x71fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00F5
        gbc.setState(0x42d, 0xa690, 0xd100, 0xa5d4, 0xfab4, 0xda54, 0x1, 0x0);
        gbc.writeMem(0x42d, { 0x5b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa690, gbc.sp());
        EXPECT(0x42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00F6
        gbc.setState(0xcbd5, 0x6154, 0xbe50, 0xb98f, 0xd391, 0x5063, 0x1, 0x0);
        gbc.writeMem(0xcbd5, { 0x5b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6154, gbc.sp());
        EXPECT(0xcbd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcbd5));
        // 5B 00F7
        gbc.setState(0xe3de, 0x93c2, 0x75d0, 0x1844, 0x72a, 0x2f3b, 0x0, 0x1);
        gbc.writeMem(0xe3de, { 0x5b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x93c2, gbc.sp());
        EXPECT(0xe3df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe3de));
        // 5B 00F8
        gbc.setState(0x4537, 0x81a3, 0x9fd0, 0x20c0, 0x6d19, 0xce39, 0x1, 0x0);
        gbc.writeMem(0x4537, { 0x5b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x81a3, gbc.sp());
        EXPECT(0x4538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00F9
        gbc.setState(0x7c7a, 0xcf2f, 0x8700, 0x323a, 0x79a0, 0xae49, 0x1, 0x0);
        gbc.writeMem(0x7c7a, { 0x5b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcf2f, gbc.sp());
        EXPECT(0x7c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00FA
        gbc.setState(0x1bd2, 0xce2f, 0x1530, 0x1493, 0x4b1f, 0x8231, 0x1, 0x1);
        gbc.writeMem(0x1bd2, { 0x5b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xce2f, gbc.sp());
        EXPECT(0x1bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 00FB
        gbc.setState(0x9615, 0x9cc1, 0xc230, 0x2a0, 0xb123, 0xd816, 0x1, 0x1);
        gbc.writeMem(0x9615, { 0x5b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9cc1, gbc.sp());
        EXPECT(0x9616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9615));
        // 5B 00FC
        gbc.setState(0x2edc, 0xdb4b, 0x1900, 0x95c6, 0xfc2e, 0x220c, 0x1, 0x1);
        gbc.writeMem(0x2edc, { 0x5b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdb4b, gbc.sp());
        EXPECT(0x2edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00FD
        gbc.setState(0x1472, 0x9595, 0x3ee0, 0xe9a0, 0xedde, 0xc9d9, 0x0, 0x1);
        gbc.writeMem(0x1472, { 0x5b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9595, gbc.sp());
        EXPECT(0x1473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 00FE
        gbc.setState(0xad96, 0x8b72, 0xc6a0, 0x956c, 0x60ca, 0xa89d, 0x1, 0x1);
        gbc.writeMem(0xad96, { 0x5b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8b72, gbc.sp());
        EXPECT(0xad97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xad96));
        // 5B 00FF
        gbc.setState(0x5c52, 0x8f54, 0xb010, 0x1692, 0x341a, 0x4024, 0x1, 0x0);
        gbc.writeMem(0x5c52, { 0x5b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8f54, gbc.sp());
        EXPECT(0x5c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0100
        gbc.setState(0x1e98, 0x917d, 0x800, 0x7bf1, 0x7a6f, 0xa49e, 0x0, 0x1);
        gbc.writeMem(0x1e98, { 0x5b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x917d, gbc.sp());
        EXPECT(0x1e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0101
        gbc.setState(0x55aa, 0x4e72, 0x9c10, 0x58e6, 0xbb70, 0x31a, 0x0, 0x0);
        gbc.writeMem(0x55aa, { 0x5b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4e72, gbc.sp());
        EXPECT(0x55ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0102
        gbc.setState(0xe6a4, 0x814d, 0xa560, 0x3c1c, 0x2739, 0x6c42, 0x1, 0x1);
        gbc.writeMem(0xe6a4, { 0x5b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x814d, gbc.sp());
        EXPECT(0xe6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe6a4));
        // 5B 0103
        gbc.setState(0xe340, 0xdb36, 0x790, 0x7ba, 0x8e15, 0x7d48, 0x1, 0x0);
        gbc.writeMem(0xe340, { 0x5b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdb36, gbc.sp());
        EXPECT(0xe341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe340));
        // 5B 0104
        gbc.setState(0x5e81, 0x1f1f, 0x17e0, 0xe49c, 0x20c7, 0x84a7, 0x0, 0x1);
        gbc.writeMem(0x5e81, { 0x5b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1f1f, gbc.sp());
        EXPECT(0x5e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0105
        gbc.setState(0xb375, 0x7b1a, 0xaa70, 0x10b5, 0x9fb4, 0xb665, 0x1, 0x1);
        gbc.writeMem(0xb375, { 0x5b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7b1a, gbc.sp());
        EXPECT(0xb376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb375));
        // 5B 0106
        gbc.setState(0xddae, 0xe628, 0x41f0, 0x33e9, 0xbde6, 0x51a3, 0x0, 0x0);
        gbc.writeMem(0xddae, { 0x5b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe628, gbc.sp());
        EXPECT(0xddaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xddae));
        // 5B 0107
        gbc.setState(0xee1a, 0xcf95, 0xf390, 0xcb3, 0x5b98, 0x75ae, 0x1, 0x1);
        gbc.writeMem(0xee1a, { 0x5b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcf95, gbc.sp());
        EXPECT(0xee1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xee1a));
        // 5B 0108
        gbc.setState(0x907f, 0x146b, 0x3010, 0x5d28, 0x7542, 0xc16b, 0x1, 0x0);
        gbc.writeMem(0x907f, { 0x5b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x146b, gbc.sp());
        EXPECT(0x9080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x907f));
        // 5B 0109
        gbc.setState(0xd332, 0xea7d, 0xced0, 0x10d7, 0x631d, 0x46ef, 0x1, 0x0);
        gbc.writeMem(0xd332, { 0x5b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xea7d, gbc.sp());
        EXPECT(0xd333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd332));
        // 5B 010A
        gbc.setState(0x387, 0x652a, 0xdb70, 0xa9ab, 0x447a, 0xc4a8, 0x1, 0x0);
        gbc.writeMem(0x387, { 0x5b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x652a, gbc.sp());
        EXPECT(0x388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 010B
        gbc.setState(0xc8ab, 0x9b9e, 0xa30, 0xbc36, 0x3cff, 0x459d, 0x0, 0x0);
        gbc.writeMem(0xc8ab, { 0x5b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9b9e, gbc.sp());
        EXPECT(0xc8ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc8ab));
        // 5B 010C
        gbc.setState(0xd240, 0xcd3c, 0x4d00, 0xa913, 0x221f, 0x6bc7, 0x1, 0x1);
        gbc.writeMem(0xd240, { 0x5b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcd3c, gbc.sp());
        EXPECT(0xd241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd240));
        // 5B 010D
        gbc.setState(0xd153, 0x3c1b, 0x85c0, 0x465b, 0xeaf8, 0x2f25, 0x0, 0x0);
        gbc.writeMem(0xd153, { 0x5b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3c1b, gbc.sp());
        EXPECT(0xd154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd153));
        // 5B 010E
        gbc.setState(0xe1b4, 0xc4ca, 0x18c0, 0x54b8, 0x2561, 0x9be5, 0x0, 0x1);
        gbc.writeMem(0xe1b4, { 0x5b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc4ca, gbc.sp());
        EXPECT(0xe1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe1b4));
        // 5B 010F
        gbc.setState(0x7cea, 0x80e5, 0x1fb0, 0xdd48, 0x75b5, 0x25d4, 0x1, 0x0);
        gbc.writeMem(0x7cea, { 0x5b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x80e5, gbc.sp());
        EXPECT(0x7ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0110
        gbc.setState(0xf2d, 0xc60a, 0x2b20, 0xa73b, 0xe3c0, 0x29, 0x0, 0x1);
        gbc.writeMem(0xf2d, { 0x5b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc60a, gbc.sp());
        EXPECT(0xf2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0111
        gbc.setState(0xab96, 0xc39, 0xb420, 0xe1aa, 0x3a6, 0x9349, 0x0, 0x0);
        gbc.writeMem(0xab96, { 0x5b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc39, gbc.sp());
        EXPECT(0xab97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xab96));
        // 5B 0112
        gbc.setState(0x2096, 0xdf6, 0x35f0, 0xefc7, 0xa2af, 0xcbf4, 0x0, 0x0);
        gbc.writeMem(0x2096, { 0x5b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdf6, gbc.sp());
        EXPECT(0x2097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0113
        gbc.setState(0x7773, 0xe5a, 0xf360, 0x2191, 0xf5d5, 0xd77, 0x0, 0x0);
        gbc.writeMem(0x7773, { 0x5b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe5a, gbc.sp());
        EXPECT(0x7774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0114
        gbc.setState(0x9c6d, 0x23a7, 0xc90, 0xf73a, 0xd61c, 0x7aa1, 0x1, 0x0);
        gbc.writeMem(0x9c6d, { 0x5b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x23a7, gbc.sp());
        EXPECT(0x9c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9c6d));
        // 5B 0115
        gbc.setState(0xd3c, 0xa7b9, 0x2220, 0xcef0, 0x40e8, 0x442e, 0x0, 0x1);
        gbc.writeMem(0xd3c, { 0x5b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa7b9, gbc.sp());
        EXPECT(0xd3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0116
        gbc.setState(0xb260, 0x3c2d, 0x63e0, 0xb92b, 0xa92f, 0xdec7, 0x0, 0x0);
        gbc.writeMem(0xb260, { 0x5b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3c2d, gbc.sp());
        EXPECT(0xb261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb260));
        // 5B 0117
        gbc.setState(0xdc43, 0x207d, 0x5640, 0x7728, 0xec6, 0x1853, 0x0, 0x1);
        gbc.writeMem(0xdc43, { 0x5b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x207d, gbc.sp());
        EXPECT(0xdc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdc43));
        // 5B 0118
        gbc.setState(0xf26, 0x10ee, 0xc290, 0xa88a, 0xc783, 0x6c39, 0x0, 0x1);
        gbc.writeMem(0xf26, { 0x5b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x10ee, gbc.sp());
        EXPECT(0xf27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0119
        gbc.setState(0x6880, 0x261a, 0xb9f0, 0x73ed, 0x21de, 0xff97, 0x0, 0x1);
        gbc.writeMem(0x6880, { 0x5b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x261a, gbc.sp());
        EXPECT(0x6881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 011A
        gbc.setState(0x73a9, 0xb4f3, 0x8b30, 0x2467, 0xff22, 0xaa68, 0x0, 0x0);
        gbc.writeMem(0x73a9, { 0x5b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb4f3, gbc.sp());
        EXPECT(0x73aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 011B
        gbc.setState(0x8310, 0xe07e, 0x1310, 0xa97, 0x9335, 0x8bd, 0x0, 0x0);
        gbc.writeMem(0x8310, { 0x5b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe07e, gbc.sp());
        EXPECT(0x8311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8310));
        // 5B 011C
        gbc.setState(0x5954, 0x96e7, 0x9610, 0x3cc1, 0x8e43, 0xcbc2, 0x1, 0x0);
        gbc.writeMem(0x5954, { 0x5b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x96e7, gbc.sp());
        EXPECT(0x5955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 011D
        gbc.setState(0x25fd, 0x650, 0x3070, 0x8a7d, 0xef41, 0x5100, 0x0, 0x1);
        gbc.writeMem(0x25fd, { 0x5b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x650, gbc.sp());
        EXPECT(0x25fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 011E
        gbc.setState(0x8d48, 0xd4f, 0x1a40, 0xedc5, 0x9f1b, 0xbfa5, 0x1, 0x0);
        gbc.writeMem(0x8d48, { 0x5b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd4f, gbc.sp());
        EXPECT(0x8d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8d48));
        // 5B 011F
        gbc.setState(0x3582, 0x2718, 0xaf00, 0xdf6a, 0x6442, 0xb345, 0x0, 0x1);
        gbc.writeMem(0x3582, { 0x5b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2718, gbc.sp());
        EXPECT(0x3583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0120
        gbc.setState(0xeb61, 0xb3ab, 0xde60, 0xfd09, 0xb8b4, 0xaa8, 0x1, 0x0);
        gbc.writeMem(0xeb61, { 0x5b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb3ab, gbc.sp());
        EXPECT(0xeb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xeb61));
        // 5B 0121
        gbc.setState(0x3127, 0x821f, 0x5520, 0x166f, 0x7f6c, 0x7822, 0x0, 0x0);
        gbc.writeMem(0x3127, { 0x5b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x821f, gbc.sp());
        EXPECT(0x3128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0122
        gbc.setState(0x4fb7, 0x32ad, 0xb6d0, 0x2d2b, 0x89fd, 0xb355, 0x1, 0x1);
        gbc.writeMem(0x4fb7, { 0x5b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x32ad, gbc.sp());
        EXPECT(0x4fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0123
        gbc.setState(0xd2b7, 0x86a0, 0xa9c0, 0xcd1e, 0x8f73, 0x219c, 0x1, 0x1);
        gbc.writeMem(0xd2b7, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x86a0, gbc.sp());
        EXPECT(0xd2b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd2b7));
        // 5B 0124
        gbc.setState(0x9a06, 0x7165, 0x7eb0, 0xc8ad, 0xc1b4, 0xba60, 0x0, 0x0);
        gbc.writeMem(0x9a06, { 0x5b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7165, gbc.sp());
        EXPECT(0x9a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9a06));
        // 5B 0125
        gbc.setState(0xd513, 0xa337, 0x9e40, 0xf7f, 0xdc83, 0x47ea, 0x1, 0x1);
        gbc.writeMem(0xd513, { 0x5b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa337, gbc.sp());
        EXPECT(0xd514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd513));
        // 5B 0126
        gbc.setState(0xa89b, 0xa28, 0x370, 0xadc, 0xf5d1, 0x92be, 0x0, 0x1);
        gbc.writeMem(0xa89b, { 0x5b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa28, gbc.sp());
        EXPECT(0xa89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa89b));
        // 5B 0127
        gbc.setState(0xd974, 0xfefd, 0x3be0, 0xead5, 0xc761, 0x4b9d, 0x1, 0x0);
        gbc.writeMem(0xd974, { 0x5b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfefd, gbc.sp());
        EXPECT(0xd975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd974));
        // 5B 0128
        gbc.setState(0x6a4b, 0x4dc5, 0x3830, 0x5d96, 0x1a8, 0xeb25, 0x1, 0x0);
        gbc.writeMem(0x6a4b, { 0x5b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4dc5, gbc.sp());
        EXPECT(0x6a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0129
        gbc.setState(0x99c7, 0xe3fd, 0xb400, 0xa079, 0x9ac6, 0x638, 0x0, 0x0);
        gbc.writeMem(0x99c7, { 0x5b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe3fd, gbc.sp());
        EXPECT(0x99c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x99c7));
        // 5B 012A
        gbc.setState(0x5bc3, 0x40f2, 0x2be0, 0x8119, 0xc509, 0xdf4d, 0x0, 0x0);
        gbc.writeMem(0x5bc3, { 0x5b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x40f2, gbc.sp());
        EXPECT(0x5bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 012B
        gbc.setState(0xf7a, 0x14ed, 0x56f0, 0x26c0, 0xf1ab, 0xc014, 0x1, 0x0);
        gbc.writeMem(0xf7a, { 0x5b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x14ed, gbc.sp());
        EXPECT(0xf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 012C
        gbc.setState(0x3352, 0x8627, 0xcc20, 0x59ae, 0x7d4b, 0x1d19, 0x1, 0x0);
        gbc.writeMem(0x3352, { 0x5b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8627, gbc.sp());
        EXPECT(0x3353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 012D
        gbc.setState(0x972, 0x9924, 0xdb20, 0x524d, 0xa0e2, 0x5c67, 0x0, 0x1);
        gbc.writeMem(0x972, { 0x5b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9924, gbc.sp());
        EXPECT(0x973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 012E
        gbc.setState(0x740e, 0xa036, 0xbe90, 0xc1a2, 0x73cf, 0xf5c4, 0x0, 0x1);
        gbc.writeMem(0x740e, { 0x5b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa036, gbc.sp());
        EXPECT(0x740f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 012F
        gbc.setState(0xb142, 0xf332, 0xf420, 0x6196, 0x7bf, 0x192b, 0x0, 0x1);
        gbc.writeMem(0xb142, { 0x5b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf332, gbc.sp());
        EXPECT(0xb143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb142));
        // 5B 0130
        gbc.setState(0x56d2, 0x310c, 0x2190, 0x6fa7, 0x4d9c, 0xa342, 0x1, 0x0);
        gbc.writeMem(0x56d2, { 0x5b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x310c, gbc.sp());
        EXPECT(0x56d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0131
        gbc.setState(0x9ef6, 0xf77a, 0xd9d0, 0xdfc3, 0x31d8, 0x7e35, 0x1, 0x0);
        gbc.writeMem(0x9ef6, { 0x5b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf77a, gbc.sp());
        EXPECT(0x9ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9ef6));
        // 5B 0132
        gbc.setState(0x6c29, 0x2789, 0xbab0, 0xadfc, 0xd1ca, 0xb6db, 0x0, 0x0);
        gbc.writeMem(0x6c29, { 0x5b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2789, gbc.sp());
        EXPECT(0x6c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0133
        gbc.setState(0x9c3f, 0xbd, 0x5a20, 0x650d, 0x8973, 0xad9e, 0x1, 0x1);
        gbc.writeMem(0x9c3f, { 0x5b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbd, gbc.sp());
        EXPECT(0x9c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9c3f));
        // 5B 0134
        gbc.setState(0xa3d9, 0x14c1, 0x71f0, 0x6e4, 0x9575, 0xb128, 0x1, 0x0);
        gbc.writeMem(0xa3d9, { 0x5b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x14c1, gbc.sp());
        EXPECT(0xa3da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa3d9));
        // 5B 0135
        gbc.setState(0xb8fb, 0xa118, 0xd710, 0xc537, 0x3b57, 0xc633, 0x0, 0x0);
        gbc.writeMem(0xb8fb, { 0x5b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0xb8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb8fb));
        // 5B 0136
        gbc.setState(0xbc26, 0xc466, 0xe8b0, 0x6fcc, 0xaa15, 0x1cb6, 0x0, 0x0);
        gbc.writeMem(0xbc26, { 0x5b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc466, gbc.sp());
        EXPECT(0xbc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbc26));
        // 5B 0138
        gbc.setState(0x19b7, 0xf9b7, 0x3e80, 0x42d4, 0xbb79, 0x14f0, 0x1, 0x0);
        gbc.writeMem(0x19b7, { 0x5b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf9b7, gbc.sp());
        EXPECT(0x19b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0139
        gbc.setState(0xd59b, 0x7a17, 0x77c0, 0xe56f, 0xa529, 0x5160, 0x1, 0x0);
        gbc.writeMem(0xd59b, { 0x5b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7a17, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd59b));
        // 5B 013A
        gbc.setState(0xc4d6, 0xc83f, 0x5740, 0xa8d5, 0xa247, 0xbf7f, 0x0, 0x1);
        gbc.writeMem(0xc4d6, { 0x5b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc83f, gbc.sp());
        EXPECT(0xc4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc4d6));
        // 5B 013B
        gbc.setState(0xcd36, 0x5879, 0x7eb0, 0x247b, 0x9960, 0xd13f, 0x0, 0x0);
        gbc.writeMem(0xcd36, { 0x5b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5879, gbc.sp());
        EXPECT(0xcd37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcd36));
        // 5B 013C
        gbc.setState(0x4353, 0x724a, 0x6700, 0x3fb, 0xd55b, 0x65a9, 0x0, 0x0);
        gbc.writeMem(0x4353, { 0x5b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x724a, gbc.sp());
        EXPECT(0x4354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 013D
        gbc.setState(0x9042, 0x8e6e, 0x1f80, 0x4d5b, 0x98ba, 0x9868, 0x1, 0x0);
        gbc.writeMem(0x9042, { 0x5b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8e6e, gbc.sp());
        EXPECT(0x9043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9042));
        // 5B 013E
        gbc.setState(0xdf6f, 0x2bd2, 0x4ad0, 0xddd4, 0xc02, 0xd5f4, 0x0, 0x1);
        gbc.writeMem(0xdf6f, { 0x5b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2bd2, gbc.sp());
        EXPECT(0xdf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdf6f));
        // 5B 013F
        gbc.setState(0x41e1, 0xff09, 0x8bc0, 0x26f9, 0x2c4b, 0xd677, 0x1, 0x0);
        gbc.writeMem(0x41e1, { 0x5b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xff09, gbc.sp());
        EXPECT(0x41e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0141
        gbc.setState(0x7119, 0xcf4e, 0x94a0, 0x57fc, 0x25a9, 0x59f5, 0x1, 0x1);
        gbc.writeMem(0x7119, { 0x5b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcf4e, gbc.sp());
        EXPECT(0x711a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0142
        gbc.setState(0xefb6, 0x66fc, 0x3d50, 0x60d1, 0xd852, 0xf152, 0x0, 0x1);
        gbc.writeMem(0xefb6, { 0x5b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x66fc, gbc.sp());
        EXPECT(0xefb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xefb6));
        // 5B 0143
        gbc.setState(0xedc7, 0xbf82, 0x9d40, 0x3e44, 0xd77b, 0x1c1c, 0x1, 0x1);
        gbc.writeMem(0xedc7, { 0x5b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbf82, gbc.sp());
        EXPECT(0xedc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xedc7));
        // 5B 0144
        gbc.setState(0x3a6f, 0xf2ec, 0x1470, 0xe5b8, 0x3b2f, 0x3613, 0x1, 0x0);
        gbc.writeMem(0x3a6f, { 0x5b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf2ec, gbc.sp());
        EXPECT(0x3a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0145
        gbc.setState(0x4bf3, 0xd359, 0x580, 0x1016, 0xabe, 0x935c, 0x0, 0x0);
        gbc.writeMem(0x4bf3, { 0x5b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd359, gbc.sp());
        EXPECT(0x4bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0146
        gbc.setState(0xd4fd, 0x5674, 0xe1c0, 0x358e, 0x7567, 0x8265, 0x1, 0x0);
        gbc.writeMem(0xd4fd, { 0x5b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5674, gbc.sp());
        EXPECT(0xd4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd4fd));
        // 5B 0147
        gbc.setState(0x9baf, 0x381, 0xa7e0, 0x385f, 0x6884, 0xd665, 0x0, 0x1);
        gbc.writeMem(0x9baf, { 0x5b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x381, gbc.sp());
        EXPECT(0x9bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9baf));
        // 5B 0148
        gbc.setState(0x8726, 0x564d, 0xc510, 0xaf23, 0xd91d, 0x376b, 0x1, 0x1);
        gbc.writeMem(0x8726, { 0x5b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x564d, gbc.sp());
        EXPECT(0x8727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8726));
        // 5B 0149
        gbc.setState(0xb140, 0x4c57, 0xa9f0, 0x544c, 0x60e, 0x9bd4, 0x0, 0x0);
        gbc.writeMem(0xb140, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4c57, gbc.sp());
        EXPECT(0xb141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb140));
        // 5B 014A
        gbc.setState(0x66e1, 0x66e2, 0x2920, 0xcb3b, 0xf68f, 0x1ff9, 0x1, 0x1);
        gbc.writeMem(0x66e1, { 0x5b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x66e2, gbc.sp());
        EXPECT(0x66e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 014B
        gbc.setState(0xae6, 0x6ee2, 0xa230, 0xff93, 0xb322, 0x8e3b, 0x1, 0x0);
        gbc.writeMem(0xae6, { 0x5b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6ee2, gbc.sp());
        EXPECT(0xae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 014C
        gbc.setState(0xa2b3, 0x462f, 0x7810, 0x37a3, 0x620f, 0xad13, 0x1, 0x1);
        gbc.writeMem(0xa2b3, { 0x5b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x462f, gbc.sp());
        EXPECT(0xa2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa2b3));
        // 5B 014D
        gbc.setState(0xc3bf, 0xeba8, 0x8e70, 0xdb45, 0xaecf, 0xa4db, 0x0, 0x1);
        gbc.writeMem(0xc3bf, { 0x5b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xeba8, gbc.sp());
        EXPECT(0xc3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc3bf));
        // 5B 014E
        gbc.setState(0x49b7, 0xaf8e, 0x87d0, 0xf331, 0x555f, 0x5468, 0x0, 0x1);
        gbc.writeMem(0x49b7, { 0x5b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xaf8e, gbc.sp());
        EXPECT(0x49b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 014F
        gbc.setState(0xb244, 0x12cc, 0x4bb0, 0x1b2d, 0x85af, 0xa1d8, 0x0, 0x1);
        gbc.writeMem(0xb244, { 0x5b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x12cc, gbc.sp());
        EXPECT(0xb245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb244));
        // 5B 0150
        gbc.setState(0xab12, 0x2895, 0x7ec0, 0xca1c, 0x567f, 0x73ea, 0x1, 0x0);
        gbc.writeMem(0xab12, { 0x5b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2895, gbc.sp());
        EXPECT(0xab13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xab12));
        // 5B 0151
        gbc.setState(0xc4c6, 0x9763, 0x5c20, 0x4d11, 0x16eb, 0x8043, 0x1, 0x1);
        gbc.writeMem(0xc4c6, { 0x5b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9763, gbc.sp());
        EXPECT(0xc4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc4c6));
        // 5B 0152
        gbc.setState(0xae95, 0xf935, 0x2140, 0xd724, 0xe938, 0xf6d9, 0x1, 0x1);
        gbc.writeMem(0xae95, { 0x5b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf935, gbc.sp());
        EXPECT(0xae96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xae95));
        // 5B 0153
        gbc.setState(0x175a, 0x7ddf, 0xd920, 0x689d, 0xf6d4, 0xc24d, 0x0, 0x0);
        gbc.writeMem(0x175a, { 0x5b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7ddf, gbc.sp());
        EXPECT(0x175b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0154
        gbc.setState(0x5bab, 0xf430, 0xba0, 0xe09a, 0xabff, 0x2e47, 0x0, 0x0);
        gbc.writeMem(0x5bab, { 0x5b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf430, gbc.sp());
        EXPECT(0x5bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0155
        gbc.setState(0xc073, 0xe7ac, 0xf500, 0xf957, 0x5ca0, 0xb26b, 0x1, 0x0);
        gbc.writeMem(0xc073, { 0x5b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe7ac, gbc.sp());
        EXPECT(0xc074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc073));
        // 5B 0156
        gbc.setState(0x3e62, 0x9fb0, 0xa3b0, 0x4e68, 0x95c8, 0x5a1e, 0x1, 0x0);
        gbc.writeMem(0x3e62, { 0x5b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9fb0, gbc.sp());
        EXPECT(0x3e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0157
        gbc.setState(0x2e2c, 0x4180, 0x7c00, 0x8f2b, 0x81eb, 0xed3f, 0x1, 0x0);
        gbc.writeMem(0x2e2c, { 0x5b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4180, gbc.sp());
        EXPECT(0x2e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0158
        gbc.setState(0x7117, 0x5240, 0x8f60, 0xfb1d, 0x13a3, 0x157c, 0x0, 0x1);
        gbc.writeMem(0x7117, { 0x5b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5240, gbc.sp());
        EXPECT(0x7118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0159
        gbc.setState(0xb55b, 0xd396, 0xacf0, 0x44, 0x4ef8, 0xa4a0, 0x1, 0x1);
        gbc.writeMem(0xb55b, { 0x5b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd396, gbc.sp());
        EXPECT(0xb55c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb55b));
        // 5B 015A
        gbc.setState(0x2c63, 0x1fbc, 0x7130, 0x8de9, 0xab02, 0xb0d5, 0x1, 0x0);
        gbc.writeMem(0x2c63, { 0x5b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1fbc, gbc.sp());
        EXPECT(0x2c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 015B
        gbc.setState(0x34d2, 0xed5, 0x7b50, 0x22d1, 0x1b09, 0x12ae, 0x1, 0x1);
        gbc.writeMem(0x34d2, { 0x5b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xed5, gbc.sp());
        EXPECT(0x34d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 015C
        gbc.setState(0x48be, 0xadcd, 0x4440, 0x4579, 0xd670, 0x4ab7, 0x1, 0x0);
        gbc.writeMem(0x48be, { 0x5b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xadcd, gbc.sp());
        EXPECT(0x48bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 015D
        gbc.setState(0xa297, 0xe391, 0x4fc0, 0xdfaa, 0x96cd, 0x500c, 0x0, 0x0);
        gbc.writeMem(0xa297, { 0x5b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe391, gbc.sp());
        EXPECT(0xa298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa297));
        // 5B 015E
        gbc.setState(0x1f1f, 0xa05, 0xdd70, 0x25ef, 0x7b01, 0x48a3, 0x0, 0x0);
        gbc.writeMem(0x1f1f, { 0x5b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa05, gbc.sp());
        EXPECT(0x1f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0160
        gbc.setState(0x2d4f, 0xb1b4, 0x8b30, 0x76f, 0xae8, 0xd367, 0x0, 0x0);
        gbc.writeMem(0x2d4f, { 0x5b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb1b4, gbc.sp());
        EXPECT(0x2d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0162
        gbc.setState(0x6531, 0x9a24, 0xe150, 0x4065, 0x7b41, 0xd9ed, 0x0, 0x0);
        gbc.writeMem(0x6531, { 0x5b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9a24, gbc.sp());
        EXPECT(0x6532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0163
        gbc.setState(0xa1cc, 0xed3b, 0xd900, 0xa42, 0x9a0e, 0x98eb, 0x1, 0x0);
        gbc.writeMem(0xa1cc, { 0x5b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xed3b, gbc.sp());
        EXPECT(0xa1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa1cc));
        // 5B 0164
        gbc.setState(0x69d1, 0xb972, 0x990, 0x6de1, 0x126, 0x174a, 0x1, 0x1);
        gbc.writeMem(0x69d1, { 0x5b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb972, gbc.sp());
        EXPECT(0x69d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0165
        gbc.setState(0xc0d1, 0xd202, 0xbea0, 0x2f4c, 0x70bc, 0x7ff6, 0x1, 0x0);
        gbc.writeMem(0xc0d1, { 0x5b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd202, gbc.sp());
        EXPECT(0xc0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc0d1));
        // 5B 0166
        gbc.setState(0x3c13, 0x293b, 0x77d0, 0x6ee2, 0x65d0, 0x6f16, 0x1, 0x0);
        gbc.writeMem(0x3c13, { 0x5b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x293b, gbc.sp());
        EXPECT(0x3c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0167
        gbc.setState(0x8bbc, 0x16ba, 0x4ca0, 0xaede, 0xb276, 0x9ac, 0x0, 0x1);
        gbc.writeMem(0x8bbc, { 0x5b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x16ba, gbc.sp());
        EXPECT(0x8bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8bbc));
        // 5B 0168
        gbc.setState(0x64a9, 0x4d3c, 0xe8d0, 0xdb2b, 0x8e44, 0x7983, 0x1, 0x1);
        gbc.writeMem(0x64a9, { 0x5b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4d3c, gbc.sp());
        EXPECT(0x64aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0169
        gbc.setState(0x22d8, 0x2bd7, 0x290, 0xa78a, 0x4367, 0x3da2, 0x1, 0x0);
        gbc.writeMem(0x22d8, { 0x5b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2bd7, gbc.sp());
        EXPECT(0x22d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 016B
        gbc.setState(0xa810, 0x93b6, 0x1410, 0x7618, 0xdba8, 0x7f84, 0x1, 0x1);
        gbc.writeMem(0xa810, { 0x5b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x93b6, gbc.sp());
        EXPECT(0xa811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa810));
        // 5B 016C
        gbc.setState(0x26e1, 0xe4bf, 0x7dc0, 0x14d8, 0x778b, 0x725e, 0x0, 0x0);
        gbc.writeMem(0x26e1, { 0x5b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe4bf, gbc.sp());
        EXPECT(0x26e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 016D
        gbc.setState(0x9045, 0x1f6d, 0x830, 0xc492, 0xf705, 0xcb5b, 0x1, 0x1);
        gbc.writeMem(0x9045, { 0x5b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1f6d, gbc.sp());
        EXPECT(0x9046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9045));
        // 5B 016E
        gbc.setState(0xbe81, 0x6c83, 0x3180, 0x865c, 0x9250, 0x1764, 0x1, 0x0);
        gbc.writeMem(0xbe81, { 0x5b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6c83, gbc.sp());
        EXPECT(0xbe82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbe81));
        // 5B 016F
        gbc.setState(0x8cda, 0xee84, 0xcf00, 0x9f97, 0x9ac4, 0x309f, 0x1, 0x0);
        gbc.writeMem(0x8cda, { 0x5b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xee84, gbc.sp());
        EXPECT(0x8cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8cda));
        // 5B 0170
        gbc.setState(0xefb8, 0x4f57, 0x5cc0, 0xce5d, 0xae09, 0x7fa3, 0x0, 0x0);
        gbc.writeMem(0xefb8, { 0x5b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4f57, gbc.sp());
        EXPECT(0xefb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xefb8));
        // 5B 0171
        gbc.setState(0xc9c5, 0x33af, 0x3ef0, 0xa282, 0x244c, 0xf346, 0x1, 0x0);
        gbc.writeMem(0xc9c5, { 0x5b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x33af, gbc.sp());
        EXPECT(0xc9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc9c5));
        // 5B 0172
        gbc.setState(0xdb96, 0x7416, 0x6650, 0xd12d, 0x7fd8, 0xa13f, 0x1, 0x1);
        gbc.writeMem(0xdb96, { 0x5b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7416, gbc.sp());
        EXPECT(0xdb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdb96));
        // 5B 0173
        gbc.setState(0xc85a, 0xca0, 0xf230, 0x1895, 0x5c3b, 0xdfb4, 0x1, 0x1);
        gbc.writeMem(0xc85a, { 0x5b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xca0, gbc.sp());
        EXPECT(0xc85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc85a));
        // 5B 0174
        gbc.setState(0x8104, 0x2596, 0x2320, 0x8b62, 0x2631, 0x943c, 0x0, 0x1);
        gbc.writeMem(0x8104, { 0x5b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2596, gbc.sp());
        EXPECT(0x8105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8104));
        // 5B 0175
        gbc.setState(0x43a6, 0x7af2, 0xee60, 0xa440, 0x8acf, 0xbb2d, 0x1, 0x1);
        gbc.writeMem(0x43a6, { 0x5b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7af2, gbc.sp());
        EXPECT(0x43a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0176
        gbc.setState(0x9e0e, 0x1024, 0x2160, 0x154a, 0xfb39, 0xcde5, 0x0, 0x0);
        gbc.writeMem(0x9e0e, { 0x5b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1024, gbc.sp());
        EXPECT(0x9e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9e0e));
        // 5B 0177
        gbc.setState(0xdc11, 0x5baa, 0xb130, 0x7d5d, 0xb58e, 0x5133, 0x1, 0x1);
        gbc.writeMem(0xdc11, { 0x5b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5baa, gbc.sp());
        EXPECT(0xdc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdc11));
        // 5B 0178
        gbc.setState(0x16d2, 0xbb53, 0xd9d0, 0x5d01, 0xb64e, 0x3b77, 0x1, 0x1);
        gbc.writeMem(0x16d2, { 0x5b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbb53, gbc.sp());
        EXPECT(0x16d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0179
        gbc.setState(0xbdf8, 0x5530, 0x9130, 0xdf7, 0x28f4, 0xc883, 0x0, 0x1);
        gbc.writeMem(0xbdf8, { 0x5b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5530, gbc.sp());
        EXPECT(0xbdf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbdf8));
        // 5B 017A
        gbc.setState(0xa013, 0x25b5, 0x5d30, 0xbce0, 0xe213, 0x1e79, 0x1, 0x1);
        gbc.writeMem(0xa013, { 0x5b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x25b5, gbc.sp());
        EXPECT(0xa014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa013));
        // 5B 017B
        gbc.setState(0x81d3, 0xcfcc, 0xe170, 0x2174, 0xdbfe, 0x22c0, 0x1, 0x1);
        gbc.writeMem(0x81d3, { 0x5b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcfcc, gbc.sp());
        EXPECT(0x81d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x81d3));
        // 5B 017C
        gbc.setState(0x51de, 0x306c, 0xffb0, 0x44d7, 0x45ba, 0xac23, 0x1, 0x1);
        gbc.writeMem(0x51de, { 0x5b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x306c, gbc.sp());
        EXPECT(0x51df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 017D
        gbc.setState(0x4c68, 0xb1ce, 0x1850, 0x7f5e, 0xfc67, 0x58b4, 0x0, 0x1);
        gbc.writeMem(0x4c68, { 0x5b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb1ce, gbc.sp());
        EXPECT(0x4c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 017E
        gbc.setState(0x186a, 0x4923, 0x9370, 0x7f76, 0x19ba, 0x3a9a, 0x0, 0x0);
        gbc.writeMem(0x186a, { 0x5b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4923, gbc.sp());
        EXPECT(0x186b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 017F
        gbc.setState(0xe4cd, 0x96e9, 0x6100, 0xd1a3, 0x9efd, 0xa698, 0x0, 0x0);
        gbc.writeMem(0xe4cd, { 0x5b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x96e9, gbc.sp());
        EXPECT(0xe4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe4cd));
        // 5B 0180
        gbc.setState(0xa27a, 0x1c02, 0x3cc0, 0xb565, 0xef0a, 0x2b72, 0x1, 0x0);
        gbc.writeMem(0xa27a, { 0x5b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1c02, gbc.sp());
        EXPECT(0xa27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa27a));
        // 5B 0181
        gbc.setState(0xaff7, 0x8df7, 0xbbd0, 0x66f7, 0xc0d4, 0xfd7, 0x0, 0x0);
        gbc.writeMem(0xaff7, { 0x5b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8df7, gbc.sp());
        EXPECT(0xaff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaff7));
        // 5B 0183
        gbc.setState(0x8f77, 0x2937, 0x5c60, 0x67ff, 0x115b, 0xb62, 0x0, 0x0);
        gbc.writeMem(0x8f77, { 0x5b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2937, gbc.sp());
        EXPECT(0x8f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8f77));
        // 5B 0184
        gbc.setState(0x70, 0x9d9d, 0x8370, 0x8cd6, 0x5bda, 0xa72f, 0x0, 0x0);
        gbc.writeMem(0x70, { 0x5b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9d9d, gbc.sp());
        EXPECT(0x71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0186
        gbc.setState(0xa171, 0x9c0e, 0xe2e0, 0x3388, 0x68e5, 0x78b9, 0x0, 0x1);
        gbc.writeMem(0xa171, { 0x5b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9c0e, gbc.sp());
        EXPECT(0xa172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa171));
        // 5B 0187
        gbc.setState(0xc437, 0x17d7, 0x2390, 0xbb5a, 0x5509, 0xbbdf, 0x0, 0x1);
        gbc.writeMem(0xc437, { 0x5b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x17d7, gbc.sp());
        EXPECT(0xc438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc437));
        // 5B 0188
        gbc.setState(0xec33, 0xabed, 0x6f80, 0xd057, 0x4728, 0x4265, 0x0, 0x0);
        gbc.writeMem(0xec33, { 0x5b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xabed, gbc.sp());
        EXPECT(0xec34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xec33));
        // 5B 0189
        gbc.setState(0x5259, 0xda13, 0x2ee0, 0x6450, 0xa539, 0x6db4, 0x1, 0x0);
        gbc.writeMem(0x5259, { 0x5b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xda13, gbc.sp());
        EXPECT(0x525a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 018A
        gbc.setState(0x6713, 0xaf40, 0x4620, 0x1351, 0x9f52, 0xddc1, 0x1, 0x0);
        gbc.writeMem(0x6713, { 0x5b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xaf40, gbc.sp());
        EXPECT(0x6714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 018B
        gbc.setState(0xe193, 0x1c80, 0x6d90, 0x488e, 0x54f, 0x2542, 0x0, 0x1);
        gbc.writeMem(0xe193, { 0x5b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1c80, gbc.sp());
        EXPECT(0xe194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe193));
        // 5B 018C
        gbc.setState(0x9a9e, 0xac51, 0xd9b0, 0x2c69, 0xe8db, 0x1a18, 0x0, 0x0);
        gbc.writeMem(0x9a9e, { 0x5b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xac51, gbc.sp());
        EXPECT(0x9a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9a9e));
        // 5B 018D
        gbc.setState(0x1e3e, 0x485b, 0x8420, 0x5fe8, 0x82b3, 0x5cf, 0x0, 0x0);
        gbc.writeMem(0x1e3e, { 0x5b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x485b, gbc.sp());
        EXPECT(0x1e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 018E
        gbc.setState(0x3521, 0xc7da, 0x6140, 0x31e2, 0x8fc6, 0xd417, 0x1, 0x0);
        gbc.writeMem(0x3521, { 0x5b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc7da, gbc.sp());
        EXPECT(0x3522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 018F
        gbc.setState(0x962d, 0xb57c, 0x2cd0, 0xcd49, 0x7752, 0xd117, 0x1, 0x1);
        gbc.writeMem(0x962d, { 0x5b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb57c, gbc.sp());
        EXPECT(0x962e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x962d));
        // 5B 0190
        gbc.setState(0x70d, 0xda56, 0xa860, 0x10b1, 0x80a0, 0x3c76, 0x0, 0x1);
        gbc.writeMem(0x70d, { 0x5b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xda56, gbc.sp());
        EXPECT(0x70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0191
        gbc.setState(0x7ab, 0xa97c, 0x3370, 0xcce8, 0x102, 0x352f, 0x0, 0x0);
        gbc.writeMem(0x7ab, { 0x5b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa97c, gbc.sp());
        EXPECT(0x7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0192
        gbc.setState(0x105c, 0x7fa0, 0x8ff0, 0x63a7, 0x10e7, 0x99a2, 0x0, 0x0);
        gbc.writeMem(0x105c, { 0x5b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7fa0, gbc.sp());
        EXPECT(0x105d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0193
        gbc.setState(0x159, 0x180d, 0xa520, 0x38db, 0x66c, 0x482c, 0x0, 0x1);
        gbc.writeMem(0x159, { 0x5b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x180d, gbc.sp());
        EXPECT(0x15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0194
        gbc.setState(0x9f1e, 0x63a9, 0xb500, 0x9321, 0x6704, 0xeda7, 0x1, 0x1);
        gbc.writeMem(0x9f1e, { 0x5b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x63a9, gbc.sp());
        EXPECT(0x9f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9f1e));
        // 5B 0195
        gbc.setState(0x4855, 0x5e25, 0x2030, 0x15ff, 0x2586, 0xf583, 0x1, 0x0);
        gbc.writeMem(0x4855, { 0x5b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5e25, gbc.sp());
        EXPECT(0x4856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0196
        gbc.setState(0xe30, 0x3f52, 0xad10, 0x37df, 0x7b54, 0x9cd2, 0x1, 0x1);
        gbc.writeMem(0xe30, { 0x5b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3f52, gbc.sp());
        EXPECT(0xe31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0197
        gbc.setState(0x35bb, 0x364b, 0xa9c0, 0xfbf3, 0x571d, 0x5477, 0x1, 0x1);
        gbc.writeMem(0x35bb, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x364b, gbc.sp());
        EXPECT(0x35bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0198
        gbc.setState(0x36de, 0x7e5c, 0xe4a0, 0xf20c, 0x7e59, 0x78ac, 0x0, 0x0);
        gbc.writeMem(0x36de, { 0x5b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7e5c, gbc.sp());
        EXPECT(0x36df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0199
        gbc.setState(0x1515, 0x4ab, 0x5b10, 0x3d55, 0xc920, 0x86f4, 0x1, 0x1);
        gbc.writeMem(0x1515, { 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4ab, gbc.sp());
        EXPECT(0x1516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 019A
        gbc.setState(0xc95c, 0x38fb, 0xa460, 0x190a, 0xb35a, 0x9b50, 0x1, 0x1);
        gbc.writeMem(0xc95c, { 0x5b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x38fb, gbc.sp());
        EXPECT(0xc95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc95c));
        // 5B 019B
        gbc.setState(0x69cc, 0x7690, 0xba10, 0xa7f3, 0x221, 0xc6c1, 0x0, 0x1);
        gbc.writeMem(0x69cc, { 0x5b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7690, gbc.sp());
        EXPECT(0x69cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 019C
        gbc.setState(0xc801, 0x2a74, 0x8ce0, 0x71d3, 0x6ff, 0xedb9, 0x1, 0x0);
        gbc.writeMem(0xc801, { 0x5b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2a74, gbc.sp());
        EXPECT(0xc802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc801));
        // 5B 019D
        gbc.setState(0xb6a7, 0x3341, 0x8690, 0xe235, 0x5cb7, 0xd23b, 0x1, 0x1);
        gbc.writeMem(0xb6a7, { 0x5b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3341, gbc.sp());
        EXPECT(0xb6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb6a7));
        // 5B 019E
        gbc.setState(0x1d33, 0x6f95, 0xf3f0, 0xcaf3, 0x3113, 0xdb9d, 0x1, 0x0);
        gbc.writeMem(0x1d33, { 0x5b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6f95, gbc.sp());
        EXPECT(0x1d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 019F
        gbc.setState(0xe4fe, 0x6075, 0x5920, 0xbf86, 0x89bd, 0x26dd, 0x0, 0x0);
        gbc.writeMem(0xe4fe, { 0x5b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6075, gbc.sp());
        EXPECT(0xe4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe4fe));
        // 5B 01A0
        gbc.setState(0x9588, 0xef5b, 0xe870, 0x37ec, 0x8ff0, 0xb92b, 0x1, 0x0);
        gbc.writeMem(0x9588, { 0x5b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xef5b, gbc.sp());
        EXPECT(0x9589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9588));
        // 5B 01A1
        gbc.setState(0xd1dd, 0x274, 0x6a50, 0x4528, 0x2bbe, 0xb7dc, 0x1, 0x0);
        gbc.writeMem(0xd1dd, { 0x5b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x274, gbc.sp());
        EXPECT(0xd1de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd1dd));
        // 5B 01A2
        gbc.setState(0x3108, 0x68ef, 0x41f0, 0xa025, 0xb60, 0xe628, 0x0, 0x1);
        gbc.writeMem(0x3108, { 0x5b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x68ef, gbc.sp());
        EXPECT(0x3109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01A3
        gbc.setState(0xd3c7, 0xc8b4, 0x5d20, 0x1c24, 0xc3b1, 0xa5f1, 0x1, 0x1);
        gbc.writeMem(0xd3c7, { 0x5b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc8b4, gbc.sp());
        EXPECT(0xd3c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd3c7));
        // 5B 01A4
        gbc.setState(0xf1c, 0x4b63, 0xf270, 0xe88, 0xcf6e, 0x962c, 0x1, 0x1);
        gbc.writeMem(0xf1c, { 0x5b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4b63, gbc.sp());
        EXPECT(0xf1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01A5
        gbc.setState(0x6510, 0xc6c4, 0x5c70, 0x4fba, 0xf0c8, 0x804b, 0x0, 0x1);
        gbc.writeMem(0x6510, { 0x5b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc6c4, gbc.sp());
        EXPECT(0x6511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01A6
        gbc.setState(0x8e60, 0x388b, 0x74d0, 0xff26, 0x9e59, 0x758e, 0x1, 0x1);
        gbc.writeMem(0x8e60, { 0x5b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x388b, gbc.sp());
        EXPECT(0x8e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8e60));
        // 5B 01A7
        gbc.setState(0x6ef1, 0xc031, 0x3bc0, 0x4e84, 0x2ac4, 0xf935, 0x1, 0x1);
        gbc.writeMem(0x6ef1, { 0x5b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc031, gbc.sp());
        EXPECT(0x6ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01A8
        gbc.setState(0x90e5, 0x4e4b, 0xd1d0, 0x7736, 0x8ea7, 0x21b2, 0x0, 0x1);
        gbc.writeMem(0x90e5, { 0x5b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4e4b, gbc.sp());
        EXPECT(0x90e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x90e5));
        // 5B 01A9
        gbc.setState(0x25b3, 0x3591, 0x6e90, 0x21d1, 0xcc01, 0x56d3, 0x0, 0x0);
        gbc.writeMem(0x25b3, { 0x5b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3591, gbc.sp());
        EXPECT(0x25b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01AA
        gbc.setState(0x66da, 0xbb9, 0x7c00, 0x22eb, 0xb212, 0xb05b, 0x1, 0x1);
        gbc.writeMem(0x66da, { 0x5b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbb9, gbc.sp());
        EXPECT(0x66db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01AB
        gbc.setState(0x87b4, 0x1c2f, 0x2af0, 0x5adb, 0x617f, 0xbea6, 0x0, 0x0);
        gbc.writeMem(0x87b4, { 0x5b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1c2f, gbc.sp());
        EXPECT(0x87b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x87b4));
        // 5B 01AC
        gbc.setState(0x947e, 0xe71, 0xad40, 0x3baf, 0x3a53, 0x177f, 0x0, 0x1);
        gbc.writeMem(0x947e, { 0x5b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe71, gbc.sp());
        EXPECT(0x947f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x947e));
        // 5B 01AD
        gbc.setState(0xc20e, 0xd854, 0xc4f0, 0x745, 0x3622, 0x3877, 0x0, 0x1);
        gbc.writeMem(0xc20e, { 0x5b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd854, gbc.sp());
        EXPECT(0xc20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc20e));
        // 5B 01AE
        gbc.setState(0xda1c, 0x22b8, 0x86b0, 0x169e, 0x2b87, 0x5758, 0x0, 0x0);
        gbc.writeMem(0xda1c, { 0x5b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x22b8, gbc.sp());
        EXPECT(0xda1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xda1c));
        // 5B 01AF
        gbc.setState(0xaa55, 0x48f3, 0x90b0, 0x6516, 0x1092, 0xc69f, 0x0, 0x1);
        gbc.writeMem(0xaa55, { 0x5b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x48f3, gbc.sp());
        EXPECT(0xaa56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaa55));
        // 5B 01B0
        gbc.setState(0x15b1, 0x58d1, 0xf9a0, 0x46f1, 0x9a0c, 0x2ac1, 0x1, 0x0);
        gbc.writeMem(0x15b1, { 0x5b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x58d1, gbc.sp());
        EXPECT(0x15b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01B1
        gbc.setState(0xefb8, 0x9674, 0xa9b0, 0xab24, 0xc99c, 0x8c4c, 0x1, 0x1);
        gbc.writeMem(0xefb8, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9674, gbc.sp());
        EXPECT(0xefb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xefb8));
        // 5B 01B2
        gbc.setState(0xdd33, 0xf58a, 0x45d0, 0x398b, 0x2f3b, 0x548, 0x0, 0x0);
        gbc.writeMem(0xdd33, { 0x5b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf58a, gbc.sp());
        EXPECT(0xdd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdd33));
        // 5B 01B3
        gbc.setState(0x44e4, 0xa8ab, 0x9000, 0x3bcd, 0x4e08, 0x65b4, 0x0, 0x1);
        gbc.writeMem(0x44e4, { 0x5b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa8ab, gbc.sp());
        EXPECT(0x44e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01B5
        gbc.setState(0x7230, 0xf672, 0x7170, 0x9498, 0xfb6d, 0xf963, 0x1, 0x0);
        gbc.writeMem(0x7230, { 0x5b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf672, gbc.sp());
        EXPECT(0x7231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01B6
        gbc.setState(0x71f8, 0x48a7, 0x6ee0, 0x137b, 0x6a14, 0x8c4c, 0x1, 0x1);
        gbc.writeMem(0x71f8, { 0x5b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x48a7, gbc.sp());
        EXPECT(0x71f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01B7
        gbc.setState(0x8434, 0xc6d4, 0xc400, 0xf7fd, 0x2cb1, 0x8c2b, 0x1, 0x1);
        gbc.writeMem(0x8434, { 0x5b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc6d4, gbc.sp());
        EXPECT(0x8435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8434));
        // 5B 01B8
        gbc.setState(0x97e, 0x5a91, 0xa9d0, 0xf184, 0x15b8, 0x3964, 0x1, 0x0);
        gbc.writeMem(0x97e, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5a91, gbc.sp());
        EXPECT(0x97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01B9
        gbc.setState(0x336f, 0x5b9b, 0xe070, 0xbc75, 0x1813, 0xdfff, 0x0, 0x1);
        gbc.writeMem(0x336f, { 0x5b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5b9b, gbc.sp());
        EXPECT(0x3370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01BA
        gbc.setState(0x1da2, 0x5c0e, 0x9590, 0x2164, 0xc9c, 0x716c, 0x0, 0x0);
        gbc.writeMem(0x1da2, { 0x5b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5c0e, gbc.sp());
        EXPECT(0x1da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01BB
        gbc.setState(0x524f, 0xf27a, 0x2d50, 0x40e6, 0x2e8a, 0x6852, 0x1, 0x1);
        gbc.writeMem(0x524f, { 0x5b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf27a, gbc.sp());
        EXPECT(0x5250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01BC
        gbc.setState(0xa400, 0x91dd, 0x1d30, 0x7732, 0x5862, 0xc37b, 0x1, 0x1);
        gbc.writeMem(0xa400, { 0x5b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x91dd, gbc.sp());
        EXPECT(0xa401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa400));
        // 5B 01BD
        gbc.setState(0x3837, 0x9b45, 0x7590, 0x1cf7, 0xe02e, 0x92c8, 0x0, 0x0);
        gbc.writeMem(0x3837, { 0x5b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9b45, gbc.sp());
        EXPECT(0x3838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01BE
        gbc.setState(0x8e25, 0xb277, 0x1500, 0x26cc, 0x8039, 0xe2e7, 0x1, 0x1);
        gbc.writeMem(0x8e25, { 0x5b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb277, gbc.sp());
        EXPECT(0x8e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8e25));
        // 5B 01BF
        gbc.setState(0xe0d, 0x2c2b, 0xb830, 0xd3bc, 0xb741, 0x6366, 0x0, 0x0);
        gbc.writeMem(0xe0d, { 0x5b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2c2b, gbc.sp());
        EXPECT(0xe0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01C0
        gbc.setState(0x8b98, 0xa63f, 0x7030, 0x843, 0xb697, 0x8b3d, 0x0, 0x0);
        gbc.writeMem(0x8b98, { 0x5b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa63f, gbc.sp());
        EXPECT(0x8b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8b98));
        // 5B 01C1
        gbc.setState(0x49b2, 0x9e2b, 0x65a0, 0xacad, 0x38a8, 0x8ab0, 0x1, 0x1);
        gbc.writeMem(0x49b2, { 0x5b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9e2b, gbc.sp());
        EXPECT(0x49b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01C2
        gbc.setState(0x8f18, 0x7a17, 0xd7c0, 0xee7d, 0xeac2, 0xf091, 0x0, 0x0);
        gbc.writeMem(0x8f18, { 0x5b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7a17, gbc.sp());
        EXPECT(0x8f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8f18));
        // 5B 01C3
        gbc.setState(0xaa3a, 0x182a, 0xeac0, 0x7a42, 0x6421, 0xa736, 0x1, 0x0);
        gbc.writeMem(0xaa3a, { 0x5b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x182a, gbc.sp());
        EXPECT(0xaa3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaa3a));
        // 5B 01C4
        gbc.setState(0x6f3d, 0xfac8, 0x9400, 0xf9b7, 0x5954, 0x4720, 0x1, 0x1);
        gbc.writeMem(0x6f3d, { 0x5b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfac8, gbc.sp());
        EXPECT(0x6f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01C5
        gbc.setState(0x5386, 0xfe29, 0x54d0, 0x9817, 0x60bd, 0x262a, 0x0, 0x0);
        gbc.writeMem(0x5386, { 0x5b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfe29, gbc.sp());
        EXPECT(0x5387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01C6
        gbc.setState(0x3656, 0xd8d9, 0x1c90, 0x756d, 0x2d35, 0xd491, 0x1, 0x1);
        gbc.writeMem(0x3656, { 0x5b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd8d9, gbc.sp());
        EXPECT(0x3657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01C7
        gbc.setState(0xeccf, 0x469e, 0x7f30, 0xb9ba, 0x38d0, 0x58ec, 0x1, 0x0);
        gbc.writeMem(0xeccf, { 0x5b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x469e, gbc.sp());
        EXPECT(0xecd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xeccf));
        // 5B 01C9
        gbc.setState(0xa6cd, 0x8057, 0x6100, 0x87f1, 0x5657, 0x539c, 0x0, 0x1);
        gbc.writeMem(0xa6cd, { 0x5b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8057, gbc.sp());
        EXPECT(0xa6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa6cd));
        // 5B 01CA
        gbc.setState(0xc622, 0x9dd7, 0x7000, 0x27dd, 0x4a50, 0xcdc, 0x1, 0x0);
        gbc.writeMem(0xc622, { 0x5b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9dd7, gbc.sp());
        EXPECT(0xc623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc622));
        // 5B 01CB
        gbc.setState(0x816a, 0x5b3e, 0xba20, 0x854d, 0x6789, 0x47e2, 0x1, 0x0);
        gbc.writeMem(0x816a, { 0x5b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5b3e, gbc.sp());
        EXPECT(0x816b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x816a));
        // 5B 01CC
        gbc.setState(0x6451, 0x6dc7, 0xe110, 0x58b7, 0x2066, 0x92e1, 0x1, 0x0);
        gbc.writeMem(0x6451, { 0x5b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6dc7, gbc.sp());
        EXPECT(0x6452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01CD
        gbc.setState(0xc0fd, 0xdb4c, 0x3eb0, 0x7f8f, 0xd725, 0xbb76, 0x0, 0x1);
        gbc.writeMem(0xc0fd, { 0x5b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdb4c, gbc.sp());
        EXPECT(0xc0fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc0fd));
        // 5B 01CE
        gbc.setState(0x3173, 0x5433, 0x4aa0, 0xf2eb, 0xdd45, 0x79c7, 0x1, 0x0);
        gbc.writeMem(0x3173, { 0x5b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5433, gbc.sp());
        EXPECT(0x3174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01CF
        gbc.setState(0xd467, 0xa7ce, 0xcb30, 0xf189, 0x4fb4, 0xbd54, 0x0, 0x1);
        gbc.writeMem(0xd467, { 0x5b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa7ce, gbc.sp());
        EXPECT(0xd468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd467));
        // 5B 01D1
        gbc.setState(0xecba, 0xe5fc, 0xbf50, 0xa7a3, 0x460, 0x1cb6, 0x1, 0x0);
        gbc.writeMem(0xecba, { 0x5b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe5fc, gbc.sp());
        EXPECT(0xecbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xecba));
        // 5B 01D2
        gbc.setState(0xea1b, 0x41cc, 0xe050, 0x5a34, 0xeffd, 0x3d3a, 0x0, 0x1);
        gbc.writeMem(0xea1b, { 0x5b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x41cc, gbc.sp());
        EXPECT(0xea1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xea1b));
        // 5B 01D3
        gbc.setState(0xe703, 0x91b4, 0xb120, 0x775d, 0xdf38, 0x21b7, 0x0, 0x0);
        gbc.writeMem(0xe703, { 0x5b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x91b4, gbc.sp());
        EXPECT(0xe704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe703));
        // 5B 01D4
        gbc.setState(0xe1c2, 0xb9d8, 0x67b0, 0x6839, 0xdbcf, 0x5e6, 0x0, 0x0);
        gbc.writeMem(0xe1c2, { 0x5b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb9d8, gbc.sp());
        EXPECT(0xe1c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe1c2));
        // 5B 01D5
        gbc.setState(0xd8e0, 0xd4b8, 0x7af0, 0xce4d, 0xab31, 0x5109, 0x0, 0x0);
        gbc.writeMem(0xd8e0, { 0x5b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd4b8, gbc.sp());
        EXPECT(0xd8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd8e0));
        // 5B 01D6
        gbc.setState(0x2a54, 0x46e6, 0x9c70, 0xcbd, 0x4cd8, 0x24a4, 0x0, 0x1);
        gbc.writeMem(0x2a54, { 0x5b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x46e6, gbc.sp());
        EXPECT(0x2a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01D7
        gbc.setState(0xc90e, 0x6ca0, 0xb6f0, 0x175f, 0xa692, 0x3959, 0x0, 0x0);
        gbc.writeMem(0xc90e, { 0x5b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6ca0, gbc.sp());
        EXPECT(0xc90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc90e));
        // 5B 01D8
        gbc.setState(0xdc77, 0xc78d, 0x2d70, 0x5811, 0xc462, 0xace, 0x1, 0x0);
        gbc.writeMem(0xdc77, { 0x5b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc78d, gbc.sp());
        EXPECT(0xdc78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdc77));
        // 5B 01D9
        gbc.setState(0x3f42, 0xb6dd, 0x28d0, 0xbede, 0x92d6, 0x9327, 0x0, 0x0);
        gbc.writeMem(0x3f42, { 0x5b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb6dd, gbc.sp());
        EXPECT(0x3f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01DA
        gbc.setState(0xb0f5, 0x93e1, 0x2ba0, 0x33b, 0x5022, 0xa4f1, 0x1, 0x0);
        gbc.writeMem(0xb0f5, { 0x5b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x93e1, gbc.sp());
        EXPECT(0xb0f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb0f5));
        // 5B 01DB
        gbc.setState(0x30a5, 0xf103, 0xf0e0, 0x2c7a, 0x1703, 0x40f5, 0x0, 0x0);
        gbc.writeMem(0x30a5, { 0x5b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf103, gbc.sp());
        EXPECT(0x30a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01DC
        gbc.setState(0xe64a, 0x842c, 0x1670, 0x151f, 0xd116, 0x1167, 0x1, 0x0);
        gbc.writeMem(0xe64a, { 0x5b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x842c, gbc.sp());
        EXPECT(0xe64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe64a));
        // 5B 01DD
        gbc.setState(0xdfe, 0x6dd9, 0x9d20, 0x1ba2, 0x40da, 0x2b4, 0x1, 0x1);
        gbc.writeMem(0xdfe, { 0x5b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6dd9, gbc.sp());
        EXPECT(0xdff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01DE
        gbc.setState(0x7f27, 0xde16, 0xf2d0, 0x24ae, 0x4a00, 0xcf26, 0x1, 0x1);
        gbc.writeMem(0x7f27, { 0x5b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xde16, gbc.sp());
        EXPECT(0x7f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01DF
        gbc.setState(0xaf3d, 0xb988, 0xecd0, 0xe35d, 0xa23d, 0x6d0d, 0x0, 0x0);
        gbc.writeMem(0xaf3d, { 0x5b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb988, gbc.sp());
        EXPECT(0xaf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaf3d));
        // 5B 01E0
        gbc.setState(0x4a0c, 0xc0d0, 0x6bd0, 0x7cef, 0xb2f7, 0x7a1d, 0x1, 0x1);
        gbc.writeMem(0x4a0c, { 0x5b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc0d0, gbc.sp());
        EXPECT(0x4a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01E1
        gbc.setState(0x4b9a, 0x2146, 0x9b70, 0xad0a, 0x5dcf, 0xa0a3, 0x1, 0x1);
        gbc.writeMem(0x4b9a, { 0x5b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2146, gbc.sp());
        EXPECT(0x4b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01E2
        gbc.setState(0x7b12, 0xbb2a, 0xe960, 0xd9e4, 0xadb, 0xf239, 0x0, 0x0);
        gbc.writeMem(0x7b12, { 0x5b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbb2a, gbc.sp());
        EXPECT(0x7b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01E3
        gbc.setState(0x520d, 0xa166, 0xd180, 0xe094, 0xf74f, 0xc848, 0x1, 0x1);
        gbc.writeMem(0x520d, { 0x5b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa166, gbc.sp());
        EXPECT(0x520e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01E4
        gbc.setState(0x9521, 0xeaa5, 0x2680, 0x3bab, 0xe195, 0x1f23, 0x1, 0x1);
        gbc.writeMem(0x9521, { 0x5b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xeaa5, gbc.sp());
        EXPECT(0x9522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9521));
        // 5B 01E5
        gbc.setState(0xdedc, 0xfbf9, 0xff30, 0x81eb, 0xa4c, 0xe353, 0x0, 0x1);
        gbc.writeMem(0xdedc, { 0x5b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfbf9, gbc.sp());
        EXPECT(0xdedd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdedc));
        // 5B 01E6
        gbc.setState(0xc8aa, 0xf384, 0x8700, 0x2ef5, 0x681c, 0xfd76, 0x1, 0x0);
        gbc.writeMem(0xc8aa, { 0x5b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf384, gbc.sp());
        EXPECT(0xc8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc8aa));
        // 5B 01E7
        gbc.setState(0x46c, 0x5211, 0x49c0, 0xe2fe, 0x5914, 0x3756, 0x1, 0x0);
        gbc.writeMem(0x46c, { 0x5b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5211, gbc.sp());
        EXPECT(0x46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01E8
        gbc.setState(0x296, 0xba36, 0xc550, 0xf2eb, 0x8e7, 0x7df9, 0x1, 0x1);
        gbc.writeMem(0x296, { 0x5b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xba36, gbc.sp());
        EXPECT(0x297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01E9
        gbc.setState(0xc7d7, 0x9f01, 0x4c50, 0xc058, 0x1f53, 0xd21f, 0x1, 0x1);
        gbc.writeMem(0xc7d7, { 0x5b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9f01, gbc.sp());
        EXPECT(0xc7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc7d7));
        // 5B 01EA
        gbc.setState(0xc232, 0x4514, 0x3dd0, 0x1f87, 0xf4c6, 0x133d, 0x0, 0x1);
        gbc.writeMem(0xc232, { 0x5b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4514, gbc.sp());
        EXPECT(0xc233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc232));
        // 5B 01EC
        gbc.setState(0x1406, 0x1379, 0x1ff0, 0xd0ab, 0x4f21, 0x13b6, 0x1, 0x0);
        gbc.writeMem(0x1406, { 0x5b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1379, gbc.sp());
        EXPECT(0x1407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01ED
        gbc.setState(0x9598, 0x55d4, 0x2540, 0x5d0a, 0x9ed5, 0xf454, 0x0, 0x1);
        gbc.writeMem(0x9598, { 0x5b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x55d4, gbc.sp());
        EXPECT(0x9599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9598));
        // 5B 01EE
        gbc.setState(0xf65, 0x399d, 0xa980, 0xab03, 0x41f8, 0x118a, 0x0, 0x0);
        gbc.writeMem(0xf65, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x399d, gbc.sp());
        EXPECT(0xf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 01EF
        gbc.setState(0x5f93, 0x5305, 0xa690, 0x97d, 0xeb5a, 0x306e, 0x1, 0x0);
        gbc.writeMem(0x5f93, { 0x5b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5305, gbc.sp());
        EXPECT(0x5f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01F0
        gbc.setState(0xe282, 0xa2e, 0x3a0, 0xd118, 0x3968, 0x39ce, 0x0, 0x1);
        gbc.writeMem(0xe282, { 0x5b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa2e, gbc.sp());
        EXPECT(0xe283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe282));
        // 5B 01F1
        gbc.setState(0xd7f4, 0x128e, 0x7a20, 0xbb51, 0x9923, 0x592, 0x0, 0x0);
        gbc.writeMem(0xd7f4, { 0x5b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x128e, gbc.sp());
        EXPECT(0xd7f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd7f4));
        // 5B 01F4
        gbc.setState(0xbc91, 0x69cd, 0x8e50, 0xd4ba, 0xac54, 0xa90a, 0x1, 0x0);
        gbc.writeMem(0xbc91, { 0x5b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x69cd, gbc.sp());
        EXPECT(0xbc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbc91));
        // 5B 01F5
        gbc.setState(0x2a8, 0x96ff, 0xa7b0, 0x3b8d, 0xcbaf, 0xe42c, 0x1, 0x1);
        gbc.writeMem(0x2a8, { 0x5b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x96ff, gbc.sp());
        EXPECT(0x2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01F6
        gbc.setState(0xe2cd, 0x6d99, 0x5ce0, 0x7d72, 0xce65, 0x775, 0x0, 0x0);
        gbc.writeMem(0xe2cd, { 0x5b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6d99, gbc.sp());
        EXPECT(0xe2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe2cd));
        // 5B 01F7
        gbc.setState(0x491b, 0x9a9c, 0x3170, 0x64bb, 0x8364, 0x6146, 0x0, 0x0);
        gbc.writeMem(0x491b, { 0x5b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9a9c, gbc.sp());
        EXPECT(0x491c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01F8
        gbc.setState(0xbb51, 0xd311, 0xcaf0, 0xb6cb, 0x1491, 0x20d, 0x0, 0x1);
        gbc.writeMem(0xbb51, { 0x5b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd311, gbc.sp());
        EXPECT(0xbb52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbb51));
        // 5B 01FA
        gbc.setState(0x78cf, 0x8f7, 0xa850, 0x6f6, 0x7b03, 0xf945, 0x1, 0x1);
        gbc.writeMem(0x78cf, { 0x5b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8f7, gbc.sp());
        EXPECT(0x78d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01FB
        gbc.setState(0x834, 0x584, 0x4650, 0x72db, 0xebe6, 0xd45a, 0x1, 0x0);
        gbc.writeMem(0x834, { 0x5b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x584, gbc.sp());
        EXPECT(0x835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 01FC
        gbc.setState(0xb50c, 0xc98, 0x81b0, 0xb92c, 0x68c8, 0x8a8d, 0x1, 0x0);
        gbc.writeMem(0xb50c, { 0x5b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc98, gbc.sp());
        EXPECT(0xb50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb50c));
        // 5B 01FD
        gbc.setState(0x9096, 0x8a73, 0xa700, 0x5a84, 0x354f, 0x8522, 0x1, 0x0);
        gbc.writeMem(0x9096, { 0x5b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8a73, gbc.sp());
        EXPECT(0x9097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9096));
        // 5B 0200
        gbc.setState(0xb61a, 0x213f, 0x6ec0, 0x5d30, 0xbe2d, 0xcf18, 0x0, 0x1);
        gbc.writeMem(0xb61a, { 0x5b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x213f, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb61a));
        // 5B 0201
        gbc.setState(0x2a21, 0x70b3, 0xba20, 0x387c, 0x5814, 0xba61, 0x1, 0x0);
        gbc.writeMem(0x2a21, { 0x5b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x70b3, gbc.sp());
        EXPECT(0x2a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0203
        gbc.setState(0x5b2a, 0xc06c, 0x7530, 0x7dae, 0x876d, 0x1f41, 0x1, 0x0);
        gbc.writeMem(0x5b2a, { 0x5b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc06c, gbc.sp());
        EXPECT(0x5b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0204
        gbc.setState(0xc8c3, 0x6a4c, 0x9160, 0x30af, 0x7000, 0xf314, 0x0, 0x0);
        gbc.writeMem(0xc8c3, { 0x5b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6a4c, gbc.sp());
        EXPECT(0xc8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc8c3));
        // 5B 0205
        gbc.setState(0x357e, 0xbce4, 0x17e0, 0xfadd, 0x8948, 0xdcef, 0x1, 0x0);
        gbc.writeMem(0x357e, { 0x5b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbce4, gbc.sp());
        EXPECT(0x357f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0206
        gbc.setState(0x4e00, 0xd635, 0x9b20, 0x1396, 0x5159, 0x78ae, 0x0, 0x1);
        gbc.writeMem(0x4e00, { 0x5b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd635, gbc.sp());
        EXPECT(0x4e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0207
        gbc.setState(0x5ab6, 0x9f67, 0xeda0, 0x66b0, 0xfd41, 0x1781, 0x1, 0x0);
        gbc.writeMem(0x5ab6, { 0x5b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9f67, gbc.sp());
        EXPECT(0x5ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0208
        gbc.setState(0x5cce, 0xc396, 0x69c0, 0x9982, 0x9363, 0x288b, 0x0, 0x1);
        gbc.writeMem(0x5cce, { 0x5b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc396, gbc.sp());
        EXPECT(0x5ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0209
        gbc.setState(0x4e7a, 0x68e3, 0x19d0, 0xe382, 0x6def, 0x2079, 0x0, 0x0);
        gbc.writeMem(0x4e7a, { 0x5b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x68e3, gbc.sp());
        EXPECT(0x4e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 020A
        gbc.setState(0xb0c7, 0xf412, 0xc090, 0xd722, 0x6467, 0x230b, 0x0, 0x0);
        gbc.writeMem(0xb0c7, { 0x5b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf412, gbc.sp());
        EXPECT(0xb0c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb0c7));
        // 5B 020B
        gbc.setState(0xb527, 0xef8f, 0xf430, 0x8e23, 0xcaa5, 0x450c, 0x0, 0x0);
        gbc.writeMem(0xb527, { 0x5b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xef8f, gbc.sp());
        EXPECT(0xb528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb527));
        // 5B 020C
        gbc.setState(0x2bb, 0x9070, 0xd100, 0x225f, 0x27fc, 0x8b53, 0x0, 0x1);
        gbc.writeMem(0x2bb, { 0x5b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9070, gbc.sp());
        EXPECT(0x2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 020D
        gbc.setState(0x77d0, 0x83c0, 0x8e30, 0x6ae3, 0x42c0, 0x39e9, 0x0, 0x1);
        gbc.writeMem(0x77d0, { 0x5b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x83c0, gbc.sp());
        EXPECT(0x77d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 020E
        gbc.setState(0x7057, 0x77da, 0x2d30, 0xe83c, 0xa42b, 0xda6b, 0x1, 0x1);
        gbc.writeMem(0x7057, { 0x5b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x77da, gbc.sp());
        EXPECT(0x7058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 020F
        gbc.setState(0xe75e, 0x6eca, 0xa760, 0x314c, 0x2be, 0xf03d, 0x0, 0x0);
        gbc.writeMem(0xe75e, { 0x5b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6eca, gbc.sp());
        EXPECT(0xe75f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe75e));
        // 5B 0210
        gbc.setState(0x6f08, 0xe0da, 0x7980, 0xa2c1, 0xfb65, 0x395b, 0x0, 0x1);
        gbc.writeMem(0x6f08, { 0x5b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe0da, gbc.sp());
        EXPECT(0x6f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0211
        gbc.setState(0x46cc, 0x134a, 0xfb50, 0x47cc, 0xdbb4, 0x9a94, 0x0, 0x0);
        gbc.writeMem(0x46cc, { 0x5b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x134a, gbc.sp());
        EXPECT(0x46cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0213
        gbc.setState(0x6efa, 0x2acb, 0xad0, 0x9cdb, 0x6c8, 0xc212, 0x0, 0x0);
        gbc.writeMem(0x6efa, { 0x5b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2acb, gbc.sp());
        EXPECT(0x6efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0214
        gbc.setState(0x6557, 0x91c7, 0x56e0, 0x5355, 0x37d0, 0xbdf6, 0x0, 0x1);
        gbc.writeMem(0x6557, { 0x5b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x91c7, gbc.sp());
        EXPECT(0x6558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0215
        gbc.setState(0xbc2e, 0x3136, 0x5a0, 0x22ab, 0x85e3, 0xebd1, 0x1, 0x0);
        gbc.writeMem(0xbc2e, { 0x5b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3136, gbc.sp());
        EXPECT(0xbc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbc2e));
        // 5B 0217
        gbc.setState(0xc2d6, 0xba3d, 0x9290, 0xd161, 0x4d2c, 0x269b, 0x0, 0x1);
        gbc.writeMem(0xc2d6, { 0x5b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xba3d, gbc.sp());
        EXPECT(0xc2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc2d6));
        // 5B 0218
        gbc.setState(0xa62a, 0x73b, 0x90, 0x4993, 0xd211, 0xa112, 0x1, 0x0);
        gbc.writeMem(0xa62a, { 0x5b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x73b, gbc.sp());
        EXPECT(0xa62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa62a));
        // 5B 0219
        gbc.setState(0x9b29, 0x2188, 0xac70, 0x7807, 0x9d34, 0x874b, 0x0, 0x1);
        gbc.writeMem(0x9b29, { 0x5b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2188, gbc.sp());
        EXPECT(0x9b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9b29));
        // 5B 021A
        gbc.setState(0x4abc, 0xb2e7, 0xc340, 0x646b, 0xd4d3, 0x3084, 0x0, 0x1);
        gbc.writeMem(0x4abc, { 0x5b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb2e7, gbc.sp());
        EXPECT(0x4abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 021B
        gbc.setState(0x192e, 0x77b9, 0x4d90, 0x6cb4, 0x4497, 0xcf4b, 0x0, 0x0);
        gbc.writeMem(0x192e, { 0x5b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x77b9, gbc.sp());
        EXPECT(0x192f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 021C
        gbc.setState(0xcb60, 0x8af9, 0xb1e0, 0xf688, 0xb202, 0x99ca, 0x1, 0x0);
        gbc.writeMem(0xcb60, { 0x5b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8af9, gbc.sp());
        EXPECT(0xcb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcb60));
        // 5B 021D
        gbc.setState(0x307d, 0x2da9, 0x41c0, 0xb486, 0x7290, 0xb020, 0x0, 0x1);
        gbc.writeMem(0x307d, { 0x5b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2da9, gbc.sp());
        EXPECT(0x307e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 021E
        gbc.setState(0x46a6, 0xef8e, 0xfe50, 0x2bb8, 0x3a80, 0x7a55, 0x1, 0x0);
        gbc.writeMem(0x46a6, { 0x5b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xef8e, gbc.sp());
        EXPECT(0x46a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 021F
        gbc.setState(0xa50a, 0x993c, 0x8a60, 0xe8b4, 0x9a73, 0x2f37, 0x0, 0x0);
        gbc.writeMem(0xa50a, { 0x5b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x993c, gbc.sp());
        EXPECT(0xa50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa50a));
        // 5B 0220
        gbc.setState(0x2f12, 0x392a, 0xddf0, 0x1634, 0xd564, 0x8a35, 0x0, 0x0);
        gbc.writeMem(0x2f12, { 0x5b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x392a, gbc.sp());
        EXPECT(0x2f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0221
        gbc.setState(0xee9f, 0x7337, 0x8d90, 0x118, 0x5d00, 0xe5d2, 0x1, 0x0);
        gbc.writeMem(0xee9f, { 0x5b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7337, gbc.sp());
        EXPECT(0xeea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xee9f));
        // 5B 0223
        gbc.setState(0x140c, 0x8690, 0xae0, 0x7b45, 0xd43e, 0x17eb, 0x1, 0x1);
        gbc.writeMem(0x140c, { 0x5b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8690, gbc.sp());
        EXPECT(0x140d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0224
        gbc.setState(0x3e9b, 0x58f9, 0x19d0, 0xcb40, 0xb927, 0x3b0d, 0x0, 0x0);
        gbc.writeMem(0x3e9b, { 0x5b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x58f9, gbc.sp());
        EXPECT(0x3e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0225
        gbc.setState(0x5c55, 0x625f, 0xafe0, 0x54cb, 0x187d, 0x5ea, 0x0, 0x1);
        gbc.writeMem(0x5c55, { 0x5b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x625f, gbc.sp());
        EXPECT(0x5c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0226
        gbc.setState(0x9350, 0x7af1, 0x8bd0, 0xd6d6, 0x35d1, 0xdfb, 0x0, 0x0);
        gbc.writeMem(0x9350, { 0x5b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7af1, gbc.sp());
        EXPECT(0x9351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9350));
        // 5B 0227
        gbc.setState(0x8ca4, 0xecd4, 0x4290, 0x194c, 0xd962, 0x7f37, 0x0, 0x1);
        gbc.writeMem(0x8ca4, { 0x5b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xecd4, gbc.sp());
        EXPECT(0x8ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8ca4));
        // 5B 0228
        gbc.setState(0x6edc, 0xebb5, 0x7da0, 0x535e, 0xda7f, 0xe495, 0x1, 0x1);
        gbc.writeMem(0x6edc, { 0x5b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xebb5, gbc.sp());
        EXPECT(0x6edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0229
        gbc.setState(0x7d44, 0x9172, 0x5590, 0x4cda, 0xb5d9, 0xea98, 0x1, 0x0);
        gbc.writeMem(0x7d44, { 0x5b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9172, gbc.sp());
        EXPECT(0x7d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 022A
        gbc.setState(0xc76b, 0xe5d1, 0x3fb0, 0xd11e, 0x8d2f, 0xe492, 0x1, 0x1);
        gbc.writeMem(0xc76b, { 0x5b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe5d1, gbc.sp());
        EXPECT(0xc76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc76b));
        // 5B 022B
        gbc.setState(0x7c6, 0x4c92, 0xe790, 0x530c, 0x6d36, 0xe994, 0x0, 0x0);
        gbc.writeMem(0x7c6, { 0x5b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4c92, gbc.sp());
        EXPECT(0x7c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 022C
        gbc.setState(0x7ec2, 0xcf75, 0x2690, 0x887, 0xb75f, 0x3bc8, 0x0, 0x0);
        gbc.writeMem(0x7ec2, { 0x5b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcf75, gbc.sp());
        EXPECT(0x7ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 022D
        gbc.setState(0x36e7, 0xa862, 0x1190, 0x9833, 0x6588, 0x43b3, 0x1, 0x1);
        gbc.writeMem(0x36e7, { 0x5b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa862, gbc.sp());
        EXPECT(0x36e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 022F
        gbc.setState(0xc5ca, 0x439b, 0xf2f0, 0x19b6, 0x3200, 0xe7b8, 0x0, 0x0);
        gbc.writeMem(0xc5ca, { 0x5b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x439b, gbc.sp());
        EXPECT(0xc5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc5ca));
        // 5B 0230
        gbc.setState(0xc04d, 0xd63a, 0xa930, 0xa1b9, 0x9900, 0x3e0e, 0x0, 0x1);
        gbc.writeMem(0xc04d, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd63a, gbc.sp());
        EXPECT(0xc04e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc04d));
        // 5B 0231
        gbc.setState(0x6d2e, 0xfd62, 0x6570, 0x52b7, 0x47d7, 0x7d89, 0x0, 0x0);
        gbc.writeMem(0x6d2e, { 0x5b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfd62, gbc.sp());
        EXPECT(0x6d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0232
        gbc.setState(0xbe2e, 0xe273, 0xe630, 0x4889, 0x5e9b, 0x9ec8, 0x0, 0x1);
        gbc.writeMem(0xbe2e, { 0x5b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe273, gbc.sp());
        EXPECT(0xbe2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbe2e));
        // 5B 0233
        gbc.setState(0xde95, 0x91e6, 0x2470, 0xe2ec, 0x296b, 0x92fe, 0x0, 0x1);
        gbc.writeMem(0xde95, { 0x5b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x91e6, gbc.sp());
        EXPECT(0xde96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xde95));
        // 5B 0234
        gbc.setState(0x371c, 0xb220, 0x79f0, 0x1263, 0xa4b0, 0xf841, 0x0, 0x0);
        gbc.writeMem(0x371c, { 0x5b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb220, gbc.sp());
        EXPECT(0x371d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0235
        gbc.setState(0x1612, 0x47c3, 0x7050, 0x29ab, 0x2c0c, 0x54cb, 0x0, 0x1);
        gbc.writeMem(0x1612, { 0x5b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x47c3, gbc.sp());
        EXPECT(0x1613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0237
        gbc.setState(0xc5bc, 0xb6c7, 0x94c0, 0xf0c2, 0xfd9f, 0x91ad, 0x1, 0x1);
        gbc.writeMem(0xc5bc, { 0x5b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb6c7, gbc.sp());
        EXPECT(0xc5bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc5bc));
        // 5B 0238
        gbc.setState(0x5110, 0x98e4, 0x2e50, 0xd764, 0x14ae, 0xfb21, 0x0, 0x0);
        gbc.writeMem(0x5110, { 0x5b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x98e4, gbc.sp());
        EXPECT(0x5111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0239
        gbc.setState(0x52f8, 0x885c, 0x47e0, 0x3b98, 0x6bb6, 0xc007, 0x0, 0x1);
        gbc.writeMem(0x52f8, { 0x5b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x885c, gbc.sp());
        EXPECT(0x52f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 023A
        gbc.setState(0x3511, 0x9b80, 0x5670, 0x511b, 0x1c45, 0x412e, 0x0, 0x0);
        gbc.writeMem(0x3511, { 0x5b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9b80, gbc.sp());
        EXPECT(0x3512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 023B
        gbc.setState(0xdafc, 0x3f32, 0x1c80, 0xda94, 0x1947, 0xd38, 0x0, 0x0);
        gbc.writeMem(0xdafc, { 0x5b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3f32, gbc.sp());
        EXPECT(0xdafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdafc));
        // 5B 023C
        gbc.setState(0xc36d, 0xb3ff, 0x50f0, 0xea2, 0x2253, 0xecf8, 0x1, 0x1);
        gbc.writeMem(0xc36d, { 0x5b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb3ff, gbc.sp());
        EXPECT(0xc36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc36d));
        // 5B 023D
        gbc.setState(0x7b19, 0x8910, 0xbcc0, 0xbe88, 0xc4cd, 0xab16, 0x1, 0x1);
        gbc.writeMem(0x7b19, { 0x5b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8910, gbc.sp());
        EXPECT(0x7b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 023E
        gbc.setState(0xebff, 0x4990, 0x8d70, 0xa614, 0xd6da, 0xc518, 0x0, 0x1);
        gbc.writeMem(0xebff, { 0x5b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4990, gbc.sp());
        EXPECT(0xec00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xebff));
        // 5B 023F
        gbc.setState(0xb84a, 0x6f65, 0x85a0, 0xc2a, 0xf0f5, 0x956a, 0x1, 0x0);
        gbc.writeMem(0xb84a, { 0x5b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6f65, gbc.sp());
        EXPECT(0xb84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb84a));
        // 5B 0240
        gbc.setState(0x6529, 0x2779, 0x4450, 0xcdae, 0xe198, 0x7962, 0x1, 0x1);
        gbc.writeMem(0x6529, { 0x5b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2779, gbc.sp());
        EXPECT(0x652a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0241
        gbc.setState(0xe8dc, 0x6aa1, 0xa30, 0xef79, 0xcf2f, 0x29a8, 0x0, 0x0);
        gbc.writeMem(0xe8dc, { 0x5b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6aa1, gbc.sp());
        EXPECT(0xe8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe8dc));
        // 5B 0242
        gbc.setState(0x2ec6, 0xda36, 0x6610, 0xd64d, 0xc284, 0x3209, 0x0, 0x1);
        gbc.writeMem(0x2ec6, { 0x5b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xda36, gbc.sp());
        EXPECT(0x2ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0243
        gbc.setState(0x8473, 0x85f5, 0xf840, 0x51fd, 0x2836, 0x41fa, 0x0, 0x1);
        gbc.writeMem(0x8473, { 0x5b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x85f5, gbc.sp());
        EXPECT(0x8474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8473));
        // 5B 0245
        gbc.setState(0x272c, 0x4182, 0x3f20, 0xcb95, 0xff64, 0xd029, 0x1, 0x1);
        gbc.writeMem(0x272c, { 0x5b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4182, gbc.sp());
        EXPECT(0x272d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0247
        gbc.setState(0x4349, 0x1f46, 0x1400, 0xf9cf, 0xb2f8, 0x2d9a, 0x1, 0x0);
        gbc.writeMem(0x4349, { 0x5b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1f46, gbc.sp());
        EXPECT(0x434a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0248
        gbc.setState(0xe895, 0x6a9b, 0x3580, 0x51ca, 0x9c35, 0xd1c9, 0x1, 0x0);
        gbc.writeMem(0xe895, { 0x5b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6a9b, gbc.sp());
        EXPECT(0xe896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe895));
        // 5B 0249
        gbc.setState(0xca1b, 0x48a2, 0x1fd0, 0x17b2, 0xfdc3, 0xb4f0, 0x1, 0x1);
        gbc.writeMem(0xca1b, { 0x5b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x48a2, gbc.sp());
        EXPECT(0xca1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xca1b));
        // 5B 024A
        gbc.setState(0x43d2, 0x1444, 0x9e50, 0xa5f9, 0x851e, 0x6666, 0x1, 0x0);
        gbc.writeMem(0x43d2, { 0x5b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1444, gbc.sp());
        EXPECT(0x43d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 024B
        gbc.setState(0x261f, 0x67bf, 0x32e0, 0xee95, 0x57dd, 0x972e, 0x1, 0x0);
        gbc.writeMem(0x261f, { 0x5b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x67bf, gbc.sp());
        EXPECT(0x2620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 024D
        gbc.setState(0xacfc, 0x5f76, 0xf080, 0x7f6b, 0xa51b, 0xeed1, 0x0, 0x0);
        gbc.writeMem(0xacfc, { 0x5b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5f76, gbc.sp());
        EXPECT(0xacfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xacfc));
        // 5B 024E
        gbc.setState(0x37c3, 0x5431, 0xd750, 0xb8f7, 0x8533, 0x439a, 0x0, 0x0);
        gbc.writeMem(0x37c3, { 0x5b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5431, gbc.sp());
        EXPECT(0x37c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 024F
        gbc.setState(0x7ed6, 0x9dde, 0xf080, 0x7d45, 0x442, 0xaa02, 0x1, 0x1);
        gbc.writeMem(0x7ed6, { 0x5b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9dde, gbc.sp());
        EXPECT(0x7ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0250
        gbc.setState(0xd618, 0x7ad6, 0x39b0, 0xf414, 0x8d7f, 0x4d36, 0x0, 0x0);
        gbc.writeMem(0xd618, { 0x5b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7ad6, gbc.sp());
        EXPECT(0xd619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd618));
        // 5B 0251
        gbc.setState(0xd50b, 0xd31e, 0xda80, 0x335d, 0xfcd2, 0xc432, 0x1, 0x1);
        gbc.writeMem(0xd50b, { 0x5b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd31e, gbc.sp());
        EXPECT(0xd50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd50b));
        // 5B 0252
        gbc.setState(0xeb9c, 0xc4af, 0x7ab0, 0xb86b, 0x31e9, 0xe4b6, 0x1, 0x1);
        gbc.writeMem(0xeb9c, { 0x5b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc4af, gbc.sp());
        EXPECT(0xeb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xeb9c));
        // 5B 0253
        gbc.setState(0xe826, 0x6b32, 0xfeb0, 0x5267, 0xbe9e, 0xa5cd, 0x1, 0x1);
        gbc.writeMem(0xe826, { 0x5b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6b32, gbc.sp());
        EXPECT(0xe827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe826));
        // 5B 0254
        gbc.setState(0x21a7, 0x9a70, 0xb3d0, 0xeb1c, 0x332f, 0xf6e6, 0x0, 0x1);
        gbc.writeMem(0x21a7, { 0x5b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0x21a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0255
        gbc.setState(0x63d7, 0x1701, 0xbe30, 0xb318, 0xbe02, 0x21de, 0x1, 0x1);
        gbc.writeMem(0x63d7, { 0x5b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1701, gbc.sp());
        EXPECT(0x63d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0256
        gbc.setState(0xbe41, 0x12b, 0xd8d0, 0x6c2f, 0x736, 0x5b4c, 0x0, 0x0);
        gbc.writeMem(0xbe41, { 0x5b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x12b, gbc.sp());
        EXPECT(0xbe42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbe41));
        // 5B 0257
        gbc.setState(0x5b60, 0xf502, 0xd2e0, 0x3d63, 0x5d7c, 0x9e32, 0x1, 0x1);
        gbc.writeMem(0x5b60, { 0x5b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf502, gbc.sp());
        EXPECT(0x5b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0258
        gbc.setState(0xad27, 0x8882, 0x25b0, 0x6a2e, 0x34ff, 0x5323, 0x0, 0x0);
        gbc.writeMem(0xad27, { 0x5b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8882, gbc.sp());
        EXPECT(0xad28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xad27));
        // 5B 0259
        gbc.setState(0x9264, 0xa067, 0x8d00, 0x3844, 0xa8b3, 0xf33d, 0x0, 0x0);
        gbc.writeMem(0x9264, { 0x5b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa067, gbc.sp());
        EXPECT(0x9265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9264));
        // 5B 025A
        gbc.setState(0x90f0, 0xfa8, 0xb670, 0x3c8, 0x4867, 0x633a, 0x1, 0x0);
        gbc.writeMem(0x90f0, { 0x5b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfa8, gbc.sp());
        EXPECT(0x90f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x90f0));
        // 5B 025B
        gbc.setState(0x53f8, 0x1f66, 0x8f00, 0x5ee2, 0xc0e3, 0x6950, 0x1, 0x1);
        gbc.writeMem(0x53f8, { 0x5b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1f66, gbc.sp());
        EXPECT(0x53f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 025C
        gbc.setState(0x3024, 0xde66, 0x27b0, 0x1389, 0x5d04, 0xf3dc, 0x0, 0x1);
        gbc.writeMem(0x3024, { 0x5b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xde66, gbc.sp());
        EXPECT(0x3025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 025D
        gbc.setState(0x1b30, 0xde78, 0xf430, 0x2be0, 0xf750, 0x3020, 0x0, 0x1);
        gbc.writeMem(0x1b30, { 0x5b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xde78, gbc.sp());
        EXPECT(0x1b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 025E
        gbc.setState(0x5485, 0xfa0c, 0x5dc0, 0x4301, 0x63af, 0x45a1, 0x1, 0x1);
        gbc.writeMem(0x5485, { 0x5b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfa0c, gbc.sp());
        EXPECT(0x5486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 025F
        gbc.setState(0x2a55, 0xdb4a, 0x6b00, 0x5db8, 0x1973, 0x10a8, 0x1, 0x1);
        gbc.writeMem(0x2a55, { 0x5b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdb4a, gbc.sp());
        EXPECT(0x2a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0260
        gbc.setState(0x5f6b, 0x5c28, 0x2290, 0xc95f, 0x10e4, 0x1371, 0x0, 0x1);
        gbc.writeMem(0x5f6b, { 0x5b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5c28, gbc.sp());
        EXPECT(0x5f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0261
        gbc.setState(0x4eef, 0x2c05, 0x84b0, 0x751c, 0x24b2, 0x1601, 0x1, 0x1);
        gbc.writeMem(0x4eef, { 0x5b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2c05, gbc.sp());
        EXPECT(0x4ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0262
        gbc.setState(0x2262, 0x8151, 0xe040, 0x8a79, 0x7ad0, 0xcd34, 0x1, 0x1);
        gbc.writeMem(0x2262, { 0x5b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8151, gbc.sp());
        EXPECT(0x2263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0263
        gbc.setState(0xbb40, 0xb98e, 0xf2b0, 0xe4e6, 0x6103, 0x3794, 0x0, 0x0);
        gbc.writeMem(0xbb40, { 0x5b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb98e, gbc.sp());
        EXPECT(0xbb41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbb40));
        // 5B 0264
        gbc.setState(0x7aa1, 0x94d0, 0x7d50, 0xcc66, 0xbdc, 0x33f7, 0x1, 0x1);
        gbc.writeMem(0x7aa1, { 0x5b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x94d0, gbc.sp());
        EXPECT(0x7aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0265
        gbc.setState(0xdc5e, 0x8c41, 0x3ef0, 0xb290, 0xb0b3, 0x2396, 0x0, 0x0);
        gbc.writeMem(0xdc5e, { 0x5b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8c41, gbc.sp());
        EXPECT(0xdc5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdc5e));
        // 5B 0266
        gbc.setState(0x8761, 0x5299, 0x5020, 0x6991, 0x97b4, 0x74e8, 0x1, 0x0);
        gbc.writeMem(0x8761, { 0x5b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5299, gbc.sp());
        EXPECT(0x8762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8761));
        // 5B 0267
        gbc.setState(0xad83, 0x1432, 0x2240, 0x4971, 0x5e49, 0x744b, 0x0, 0x1);
        gbc.writeMem(0xad83, { 0x5b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1432, gbc.sp());
        EXPECT(0xad84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xad83));
        // 5B 0268
        gbc.setState(0xa93f, 0x6c57, 0x5210, 0x16d2, 0xcdba, 0x5d30, 0x0, 0x0);
        gbc.writeMem(0xa93f, { 0x5b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6c57, gbc.sp());
        EXPECT(0xa940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa93f));
        // 5B 0269
        gbc.setState(0x3825, 0xc321, 0xe9d0, 0xd51d, 0x1b8e, 0xc709, 0x0, 0x0);
        gbc.writeMem(0x3825, { 0x5b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc321, gbc.sp());
        EXPECT(0x3826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 026A
        gbc.setState(0x8488, 0xddc8, 0xd890, 0xb9e, 0x196e, 0x75c2, 0x0, 0x0);
        gbc.writeMem(0x8488, { 0x5b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xddc8, gbc.sp());
        EXPECT(0x8489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8488));
        // 5B 026B
        gbc.setState(0x86f6, 0x775, 0xd610, 0x8842, 0xcf96, 0xf939, 0x1, 0x0);
        gbc.writeMem(0x86f6, { 0x5b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x775, gbc.sp());
        EXPECT(0x86f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x86f6));
        // 5B 026C
        gbc.setState(0x68bc, 0x2bbe, 0x4df0, 0xe01b, 0x5347, 0x3e9f, 0x1, 0x0);
        gbc.writeMem(0x68bc, { 0x5b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2bbe, gbc.sp());
        EXPECT(0x68bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 026D
        gbc.setState(0x65bd, 0xd065, 0xd5b0, 0x671b, 0xf17e, 0x5ce, 0x0, 0x1);
        gbc.writeMem(0x65bd, { 0x5b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd065, gbc.sp());
        EXPECT(0x65be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 026E
        gbc.setState(0x3d94, 0x6fa4, 0x2f70, 0x88db, 0x6609, 0x6a50, 0x0, 0x1);
        gbc.writeMem(0x3d94, { 0x5b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6fa4, gbc.sp());
        EXPECT(0x3d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 026F
        gbc.setState(0x725c, 0x2245, 0xfc80, 0x139, 0x610a, 0x28b5, 0x0, 0x0);
        gbc.writeMem(0x725c, { 0x5b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2245, gbc.sp());
        EXPECT(0x725d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0270
        gbc.setState(0xa432, 0xe583, 0x3730, 0xc5f, 0xc26e, 0xe908, 0x1, 0x1);
        gbc.writeMem(0xa432, { 0x5b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe583, gbc.sp());
        EXPECT(0xa433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa432));
        // 5B 0271
        gbc.setState(0xb525, 0x28a4, 0xdba0, 0x35c5, 0xd385, 0x6efd, 0x0, 0x0);
        gbc.writeMem(0xb525, { 0x5b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x28a4, gbc.sp());
        EXPECT(0xb526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb525));
        // 5B 0272
        gbc.setState(0x9bd1, 0x8c26, 0x3270, 0x6efa, 0xf7f6, 0x20f7, 0x1, 0x0);
        gbc.writeMem(0x9bd1, { 0x5b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8c26, gbc.sp());
        EXPECT(0x9bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9bd1));
        // 5B 0273
        gbc.setState(0x2bc1, 0x7b5e, 0x4040, 0x50fc, 0xb25d, 0x95c, 0x1, 0x1);
        gbc.writeMem(0x2bc1, { 0x5b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7b5e, gbc.sp());
        EXPECT(0x2bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0274
        gbc.setState(0x8226, 0xe7de, 0xc130, 0xa20b, 0x5aae, 0xf968, 0x1, 0x1);
        gbc.writeMem(0x8226, { 0x5b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe7de, gbc.sp());
        EXPECT(0x8227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8226));
        // 5B 0275
        gbc.setState(0xd6af, 0x114e, 0x17c0, 0x5048, 0x6098, 0x8abe, 0x0, 0x0);
        gbc.writeMem(0xd6af, { 0x5b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x114e, gbc.sp());
        EXPECT(0xd6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd6af));
        // 5B 0276
        gbc.setState(0x45ad, 0xbba, 0x7760, 0x4516, 0xd6e2, 0x5dd9, 0x1, 0x0);
        gbc.writeMem(0x45ad, { 0x5b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbba, gbc.sp());
        EXPECT(0x45ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0277
        gbc.setState(0x2925, 0x573e, 0x8460, 0x3862, 0x660, 0x9822, 0x0, 0x0);
        gbc.writeMem(0x2925, { 0x5b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x573e, gbc.sp());
        EXPECT(0x2926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0278
        gbc.setState(0xe490, 0x75f0, 0x90c0, 0xd89c, 0x2296, 0x2879, 0x1, 0x0);
        gbc.writeMem(0xe490, { 0x5b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x75f0, gbc.sp());
        EXPECT(0xe491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe490));
        // 5B 0279
        gbc.setState(0x23be, 0x7cf8, 0x3a70, 0xdb8, 0xfafd, 0x96b0, 0x1, 0x1);
        gbc.writeMem(0x23be, { 0x5b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7cf8, gbc.sp());
        EXPECT(0x23bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 027B
        gbc.setState(0xdba7, 0xe65c, 0x16f0, 0xe83f, 0xc7c9, 0x1bed, 0x1, 0x1);
        gbc.writeMem(0xdba7, { 0x5b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe65c, gbc.sp());
        EXPECT(0xdba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdba7));
        // 5B 027D
        gbc.setState(0x1c47, 0x3403, 0xf980, 0xa586, 0x32d8, 0x3ce1, 0x0, 0x1);
        gbc.writeMem(0x1c47, { 0x5b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3403, gbc.sp());
        EXPECT(0x1c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 027E
        gbc.setState(0x69bb, 0x7b8f, 0xa680, 0x955f, 0x7d52, 0x5424, 0x0, 0x0);
        gbc.writeMem(0x69bb, { 0x5b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7b8f, gbc.sp());
        EXPECT(0x69bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 027F
        gbc.setState(0x7311, 0x353b, 0x31b0, 0x6a88, 0x252, 0xf62a, 0x1, 0x1);
        gbc.writeMem(0x7311, { 0x5b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x353b, gbc.sp());
        EXPECT(0x7312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0280
        gbc.setState(0x3eb8, 0xc328, 0x6dd0, 0x5b45, 0x3440, 0x5de1, 0x1, 0x0);
        gbc.writeMem(0x3eb8, { 0x5b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc328, gbc.sp());
        EXPECT(0x3eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0281
        gbc.setState(0x728a, 0x40ed, 0xcf0, 0x4045, 0x9f2, 0x2b0d, 0x1, 0x0);
        gbc.writeMem(0x728a, { 0x5b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x40ed, gbc.sp());
        EXPECT(0x728b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0282
        gbc.setState(0xc978, 0x5d08, 0xa230, 0x86d9, 0x96d9, 0xafc3, 0x1, 0x0);
        gbc.writeMem(0xc978, { 0x5b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5d08, gbc.sp());
        EXPECT(0xc979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc978));
        // 5B 0283
        gbc.setState(0x44cc, 0x2f67, 0x50c0, 0x5568, 0x355d, 0x317, 0x0, 0x0);
        gbc.writeMem(0x44cc, { 0x5b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2f67, gbc.sp());
        EXPECT(0x44cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0284
        gbc.setState(0x9d43, 0x949a, 0x2570, 0x4f22, 0x4eec, 0x9283, 0x0, 0x0);
        gbc.writeMem(0x9d43, { 0x5b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x949a, gbc.sp());
        EXPECT(0x9d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9d43));
        // 5B 0285
        gbc.setState(0x7913, 0x8e6, 0xb020, 0x5a67, 0x79e9, 0x38a6, 0x0, 0x0);
        gbc.writeMem(0x7913, { 0x5b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8e6, gbc.sp());
        EXPECT(0x7914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0286
        gbc.setState(0x3d0c, 0x5700, 0xfee0, 0xbded, 0x26b7, 0x51dd, 0x1, 0x1);
        gbc.writeMem(0x3d0c, { 0x5b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5700, gbc.sp());
        EXPECT(0x3d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0288
        gbc.setState(0x377b, 0x3660, 0xdc0, 0x193f, 0xec0d, 0x56e4, 0x1, 0x0);
        gbc.writeMem(0x377b, { 0x5b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3660, gbc.sp());
        EXPECT(0x377c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0289
        gbc.setState(0xc328, 0xd5dd, 0x2950, 0x9747, 0x51c1, 0xb830, 0x1, 0x1);
        gbc.writeMem(0xc328, { 0x5b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd5dd, gbc.sp());
        EXPECT(0xc329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc328));
        // 5B 028A
        gbc.setState(0x7b45, 0xf5b1, 0xe8f0, 0x907e, 0x5624, 0x414e, 0x1, 0x1);
        gbc.writeMem(0x7b45, { 0x5b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf5b1, gbc.sp());
        EXPECT(0x7b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 028B
        gbc.setState(0x49e4, 0x5928, 0xb390, 0x8b61, 0x95c3, 0x22f4, 0x1, 0x0);
        gbc.writeMem(0x49e4, { 0x5b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5928, gbc.sp());
        EXPECT(0x49e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 028C
        gbc.setState(0x5a16, 0x7588, 0x8f00, 0x9bcc, 0x6f23, 0x1010, 0x0, 0x1);
        gbc.writeMem(0x5a16, { 0x5b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7588, gbc.sp());
        EXPECT(0x5a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 028D
        gbc.setState(0x6515, 0xf3f8, 0x6f30, 0xb6b4, 0x230, 0x4c02, 0x1, 0x0);
        gbc.writeMem(0x6515, { 0x5b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf3f8, gbc.sp());
        EXPECT(0x6516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 028E
        gbc.setState(0x2949, 0x97a5, 0xa000, 0x56ee, 0xfe8d, 0x578, 0x0, 0x0);
        gbc.writeMem(0x2949, { 0x5b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x97a5, gbc.sp());
        EXPECT(0x294a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 028F
        gbc.setState(0xd469, 0x8601, 0x20a0, 0xec76, 0x2ea9, 0x2e93, 0x0, 0x1);
        gbc.writeMem(0xd469, { 0x5b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8601, gbc.sp());
        EXPECT(0xd46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd469));
        // 5B 0290
        gbc.setState(0x4483, 0x2a6c, 0x4a10, 0x5f10, 0x9e8f, 0x5d53, 0x0, 0x0);
        gbc.writeMem(0x4483, { 0x5b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2a6c, gbc.sp());
        EXPECT(0x4484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0291
        gbc.setState(0x3a26, 0x2efa, 0x4b80, 0x9b16, 0x950b, 0x36ea, 0x0, 0x1);
        gbc.writeMem(0x3a26, { 0x5b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2efa, gbc.sp());
        EXPECT(0x3a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0292
        gbc.setState(0xc96d, 0xb70c, 0xcac0, 0x8d9, 0x33f1, 0x371d, 0x0, 0x0);
        gbc.writeMem(0xc96d, { 0x5b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb70c, gbc.sp());
        EXPECT(0xc96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc96d));
        // 5B 0293
        gbc.setState(0x8607, 0x1748, 0x4bd0, 0xe2d6, 0xbc5b, 0xa681, 0x0, 0x0);
        gbc.writeMem(0x8607, { 0x5b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1748, gbc.sp());
        EXPECT(0x8608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8607));
        // 5B 0294
        gbc.setState(0xb675, 0x8941, 0x9140, 0xa68f, 0xd3ce, 0x716e, 0x1, 0x1);
        gbc.writeMem(0xb675, { 0x5b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8941, gbc.sp());
        EXPECT(0xb676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb675));
        // 5B 0295
        gbc.setState(0xb9d, 0x94f7, 0x8e50, 0xcad1, 0x1d0e, 0x1495, 0x0, 0x0);
        gbc.writeMem(0xb9d, { 0x5b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x94f7, gbc.sp());
        EXPECT(0xb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0296
        gbc.setState(0x5452, 0x14ef, 0x8720, 0xa827, 0xbfc1, 0x15b4, 0x0, 0x0);
        gbc.writeMem(0x5452, { 0x5b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x14ef, gbc.sp());
        EXPECT(0x5453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0297
        gbc.setState(0x3f52, 0x81c, 0x8560, 0xc246, 0x85c3, 0x5bdd, 0x0, 0x1);
        gbc.writeMem(0x3f52, { 0x5b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x81c, gbc.sp());
        EXPECT(0x3f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0298
        gbc.setState(0x7921, 0xae6, 0x1040, 0x6402, 0x1f10, 0xbcea, 0x0, 0x1);
        gbc.writeMem(0x7921, { 0x5b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xae6, gbc.sp());
        EXPECT(0x7922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0299
        gbc.setState(0x832f, 0xe80e, 0xc160, 0xc50, 0x6e1b, 0x7b5f, 0x1, 0x0);
        gbc.writeMem(0x832f, { 0x5b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe80e, gbc.sp());
        EXPECT(0x8330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x832f));
        // 5B 029A
        gbc.setState(0x188a, 0x97a5, 0x8e60, 0x56e9, 0xa97f, 0x855d, 0x0, 0x0);
        gbc.writeMem(0x188a, { 0x5b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x97a5, gbc.sp());
        EXPECT(0x188b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 029B
        gbc.setState(0xac50, 0xda61, 0xa230, 0xf01b, 0xc1c5, 0x8428, 0x0, 0x0);
        gbc.writeMem(0xac50, { 0x5b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xda61, gbc.sp());
        EXPECT(0xac51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xac50));
        // 5B 029C
        gbc.setState(0xc4cc, 0x29b4, 0x7f60, 0x74f4, 0x5396, 0xf482, 0x1, 0x1);
        gbc.writeMem(0xc4cc, { 0x5b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x29b4, gbc.sp());
        EXPECT(0xc4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc4cc));
        // 5B 029D
        gbc.setState(0x3d69, 0xd007, 0x510, 0xa84e, 0x8c10, 0xa617, 0x1, 0x0);
        gbc.writeMem(0x3d69, { 0x5b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd007, gbc.sp());
        EXPECT(0x3d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 029E
        gbc.setState(0xa130, 0x1631, 0xdde0, 0xd069, 0x4e70, 0xd43a, 0x1, 0x1);
        gbc.writeMem(0xa130, { 0x5b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1631, gbc.sp());
        EXPECT(0xa131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa130));
        // 5B 029F
        gbc.setState(0x52f4, 0xf5e, 0xf840, 0xc275, 0x7c6e, 0x59d6, 0x0, 0x0);
        gbc.writeMem(0x52f4, { 0x5b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf5e, gbc.sp());
        EXPECT(0x52f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02A0
        gbc.setState(0xa152, 0xbe1e, 0xd050, 0xcae6, 0x2874, 0xbeb3, 0x0, 0x1);
        gbc.writeMem(0xa152, { 0x5b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbe1e, gbc.sp());
        EXPECT(0xa153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa152));
        // 5B 02A1
        gbc.setState(0x2979, 0x233c, 0x1f0, 0x7cc8, 0x312e, 0x5b2, 0x0, 0x0);
        gbc.writeMem(0x2979, { 0x5b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x233c, gbc.sp());
        EXPECT(0x297a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02A2
        gbc.setState(0x82c1, 0xb69c, 0x6ae0, 0xcb86, 0x15dc, 0xe8a7, 0x1, 0x0);
        gbc.writeMem(0x82c1, { 0x5b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb69c, gbc.sp());
        EXPECT(0x82c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x82c1));
        // 5B 02A3
        gbc.setState(0xe5f7, 0x15fc, 0x6690, 0x4cab, 0x1f5f, 0x3939, 0x1, 0x0);
        gbc.writeMem(0xe5f7, { 0x5b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x15fc, gbc.sp());
        EXPECT(0xe5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe5f7));
        // 5B 02A4
        gbc.setState(0xc7a3, 0x50a9, 0xdc80, 0xd0aa, 0xdc7e, 0xa905, 0x0, 0x1);
        gbc.writeMem(0xc7a3, { 0x5b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x50a9, gbc.sp());
        EXPECT(0xc7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc7a3));
        // 5B 02A6
        gbc.setState(0xbdc0, 0x416, 0x15a0, 0x724c, 0x41ed, 0xe3c0, 0x1, 0x0);
        gbc.writeMem(0xbdc0, { 0x5b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x416, gbc.sp());
        EXPECT(0xbdc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbdc0));
        // 5B 02A7
        gbc.setState(0x37bd, 0x7f4e, 0x18d0, 0x8252, 0x209a, 0xc529, 0x1, 0x1);
        gbc.writeMem(0x37bd, { 0x5b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7f4e, gbc.sp());
        EXPECT(0x37be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02A8
        gbc.setState(0x7c3f, 0xa4f, 0x1140, 0xf6a4, 0x6dc, 0xfd14, 0x1, 0x0);
        gbc.writeMem(0x7c3f, { 0x5b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa4f, gbc.sp());
        EXPECT(0x7c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02A9
        gbc.setState(0x349c, 0xaf79, 0xec20, 0x6976, 0x94cb, 0xdf53, 0x1, 0x1);
        gbc.writeMem(0x349c, { 0x5b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xaf79, gbc.sp());
        EXPECT(0x349d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02AB
        gbc.setState(0xe9ff, 0xa25f, 0x3d90, 0x5889, 0x6b8e, 0x8e26, 0x1, 0x1);
        gbc.writeMem(0xe9ff, { 0x5b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa25f, gbc.sp());
        EXPECT(0xea00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe9ff));
        // 5B 02AD
        gbc.setState(0xbdf6, 0x44ba, 0xd8f0, 0x33a6, 0xc0f6, 0x7402, 0x1, 0x1);
        gbc.writeMem(0xbdf6, { 0x5b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x44ba, gbc.sp());
        EXPECT(0xbdf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbdf6));
        // 5B 02AE
        gbc.setState(0x668, 0x6e35, 0x6810, 0xb2a3, 0xfdc, 0x250b, 0x0, 0x0);
        gbc.writeMem(0x668, { 0x5b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6e35, gbc.sp());
        EXPECT(0x669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02B0
        gbc.setState(0x5871, 0x6683, 0x6620, 0x8265, 0xcf5, 0x8c66, 0x0, 0x0);
        gbc.writeMem(0x5871, { 0x5b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6683, gbc.sp());
        EXPECT(0x5872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02B1
        gbc.setState(0xaf98, 0x7b48, 0xd560, 0x8eb0, 0x4c1a, 0x3c51, 0x0, 0x1);
        gbc.writeMem(0xaf98, { 0x5b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7b48, gbc.sp());
        EXPECT(0xaf99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaf98));
        // 5B 02B2
        gbc.setState(0xef73, 0xdda8, 0x2d20, 0x7cac, 0x3844, 0xbd80, 0x1, 0x1);
        gbc.writeMem(0xef73, { 0x5b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdda8, gbc.sp());
        EXPECT(0xef74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xef73));
        // 5B 02B3
        gbc.setState(0x2f6, 0xb0ae, 0xd2c0, 0xc7e9, 0xb6b, 0xc76d, 0x1, 0x0);
        gbc.writeMem(0x2f6, { 0x5b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb0ae, gbc.sp());
        EXPECT(0x2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02B4
        gbc.setState(0x2b93, 0x5c50, 0xee00, 0xb730, 0xee4f, 0x690, 0x0, 0x1);
        gbc.writeMem(0x2b93, { 0x5b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5c50, gbc.sp());
        EXPECT(0x2b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02B5
        gbc.setState(0x434e, 0xe466, 0x5f50, 0x7896, 0x965, 0x98a3, 0x1, 0x0);
        gbc.writeMem(0x434e, { 0x5b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe466, gbc.sp());
        EXPECT(0x434f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02B6
        gbc.setState(0x2774, 0xcb, 0xec50, 0x7592, 0x5a13, 0xaa32, 0x0, 0x1);
        gbc.writeMem(0x2774, { 0x5b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcb, gbc.sp());
        EXPECT(0x2775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02B7
        gbc.setState(0x76c0, 0x4c8f, 0xb710, 0x1b44, 0x2f66, 0x948c, 0x0, 0x1);
        gbc.writeMem(0x76c0, { 0x5b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4c8f, gbc.sp());
        EXPECT(0x76c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02B8
        gbc.setState(0xb014, 0x796, 0xf530, 0x4cb6, 0x2054, 0x1043, 0x0, 0x1);
        gbc.writeMem(0xb014, { 0x5b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x796, gbc.sp());
        EXPECT(0xb015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb014));
        // 5B 02B9
        gbc.setState(0x5ef4, 0x9050, 0x9510, 0x7fe1, 0x928e, 0xef3a, 0x0, 0x0);
        gbc.writeMem(0x5ef4, { 0x5b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9050, gbc.sp());
        EXPECT(0x5ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02BA
        gbc.setState(0xb9f3, 0x287f, 0x6f0, 0xd58f, 0x27a, 0xa178, 0x0, 0x0);
        gbc.writeMem(0xb9f3, { 0x5b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x287f, gbc.sp());
        EXPECT(0xb9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb9f3));
        // 5B 02BB
        gbc.setState(0xe987, 0x2e22, 0xf550, 0x4f8b, 0xeeff, 0x97cb, 0x1, 0x1);
        gbc.writeMem(0xe987, { 0x5b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2e22, gbc.sp());
        EXPECT(0xe988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe987));
        // 5B 02BC
        gbc.setState(0x611a, 0x990c, 0x26d0, 0x2996, 0x3663, 0x6de7, 0x0, 0x1);
        gbc.writeMem(0x611a, { 0x5b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x990c, gbc.sp());
        EXPECT(0x611b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02BD
        gbc.setState(0xb5ed, 0x691d, 0x2dc0, 0x97f1, 0x553c, 0x1ab0, 0x0, 0x0);
        gbc.writeMem(0xb5ed, { 0x5b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x691d, gbc.sp());
        EXPECT(0xb5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb5ed));
        // 5B 02BF
        gbc.setState(0x641e, 0x6428, 0xe770, 0x77ee, 0x9388, 0x5a95, 0x1, 0x0);
        gbc.writeMem(0x641e, { 0x5b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6428, gbc.sp());
        EXPECT(0x641f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02C0
        gbc.setState(0xb672, 0x78b2, 0x2ac0, 0xd44c, 0x7561, 0xafd, 0x1, 0x0);
        gbc.writeMem(0xb672, { 0x5b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x78b2, gbc.sp());
        EXPECT(0xb673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb672));
        // 5B 02C1
        gbc.setState(0x406, 0x5204, 0xfd10, 0x3e49, 0xf9dc, 0x6c96, 0x1, 0x0);
        gbc.writeMem(0x406, { 0x5b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5204, gbc.sp());
        EXPECT(0x407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02C2
        gbc.setState(0xd8d3, 0x9712, 0xb1e0, 0x5fa1, 0x905e, 0x8a50, 0x0, 0x0);
        gbc.writeMem(0xd8d3, { 0x5b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9712, gbc.sp());
        EXPECT(0xd8d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd8d3));
        // 5B 02C3
        gbc.setState(0xeff2, 0xb8ac, 0x81f0, 0x5858, 0x5f6a, 0xa5c9, 0x0, 0x0);
        gbc.writeMem(0xeff2, { 0x5b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb8ac, gbc.sp());
        EXPECT(0xeff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xeff2));
        // 5B 02C4
        gbc.setState(0x8f80, 0x6bd3, 0x3390, 0x9f42, 0xd835, 0x7213, 0x1, 0x1);
        gbc.writeMem(0x8f80, { 0x5b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6bd3, gbc.sp());
        EXPECT(0x8f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8f80));
        // 5B 02C5
        gbc.setState(0x9b0a, 0xb27d, 0xcf00, 0xcec1, 0x1a04, 0x174e, 0x1, 0x0);
        gbc.writeMem(0x9b0a, { 0x5b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb27d, gbc.sp());
        EXPECT(0x9b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9b0a));
        // 5B 02C6
        gbc.setState(0x1656, 0x8ac2, 0x6120, 0xe86a, 0x8605, 0xebff, 0x0, 0x0);
        gbc.writeMem(0x1656, { 0x5b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8ac2, gbc.sp());
        EXPECT(0x1657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02C8
        gbc.setState(0x340a, 0xf22, 0x9730, 0x7131, 0x6390, 0x2b3c, 0x1, 0x1);
        gbc.writeMem(0x340a, { 0x5b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf22, gbc.sp());
        EXPECT(0x340b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02C9
        gbc.setState(0x96e2, 0x17fe, 0xb4c0, 0x7bf0, 0xabc4, 0x7da0, 0x0, 0x1);
        gbc.writeMem(0x96e2, { 0x5b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x17fe, gbc.sp());
        EXPECT(0x96e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x96e2));
        // 5B 02CA
        gbc.setState(0xede8, 0xbf30, 0x2280, 0xa7f1, 0xcada, 0x5982, 0x1, 0x0);
        gbc.writeMem(0xede8, { 0x5b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbf30, gbc.sp());
        EXPECT(0xede9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xede8));
        // 5B 02CB
        gbc.setState(0xb411, 0x1007, 0xc7b0, 0x1d56, 0xee73, 0x76bc, 0x1, 0x0);
        gbc.writeMem(0xb411, { 0x5b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1007, gbc.sp());
        EXPECT(0xb412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb411));
        // 5B 02CC
        gbc.setState(0xd325, 0x99a7, 0x51d0, 0x1adc, 0xe5, 0x2f1b, 0x0, 0x0);
        gbc.writeMem(0xd325, { 0x5b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x99a7, gbc.sp());
        EXPECT(0xd326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd325));
        // 5B 02CD
        gbc.setState(0xec05, 0x538c, 0xfe60, 0x125, 0xe9b8, 0x5830, 0x0, 0x0);
        gbc.writeMem(0xec05, { 0x5b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x538c, gbc.sp());
        EXPECT(0xec06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xec05));
        // 5B 02CE
        gbc.setState(0x2588, 0xb0ef, 0xb150, 0x2d51, 0xeb35, 0x36, 0x0, 0x1);
        gbc.writeMem(0x2588, { 0x5b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb0ef, gbc.sp());
        EXPECT(0x2589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02CF
        gbc.setState(0xed68, 0xdf57, 0x58d0, 0x700, 0x54ed, 0x4b73, 0x0, 0x0);
        gbc.writeMem(0xed68, { 0x5b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdf57, gbc.sp());
        EXPECT(0xed69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xed68));
        // 5B 02D0
        gbc.setState(0x1414, 0xb427, 0x3090, 0x9a0b, 0xdd9f, 0xd926, 0x1, 0x1);
        gbc.writeMem(0x1414, { 0x5b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb427, gbc.sp());
        EXPECT(0x1415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02D1
        gbc.setState(0xaafa, 0x9d61, 0xf6f0, 0xd879, 0xee53, 0x9353, 0x0, 0x1);
        gbc.writeMem(0xaafa, { 0x5b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9d61, gbc.sp());
        EXPECT(0xaafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaafa));
        // 5B 02D2
        gbc.setState(0xdae1, 0x359f, 0xb710, 0x771, 0xbdcb, 0x7c25, 0x0, 0x1);
        gbc.writeMem(0xdae1, { 0x5b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x359f, gbc.sp());
        EXPECT(0xdae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdae1));
        // 5B 02D3
        gbc.setState(0xa85c, 0xa2b2, 0xb330, 0x20ff, 0xa8ea, 0x388b, 0x0, 0x0);
        gbc.writeMem(0xa85c, { 0x5b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa2b2, gbc.sp());
        EXPECT(0xa85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa85c));
        // 5B 02D4
        gbc.setState(0x4bbe, 0x267c, 0xc220, 0x8b3a, 0xd440, 0xb333, 0x1, 0x0);
        gbc.writeMem(0x4bbe, { 0x5b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x267c, gbc.sp());
        EXPECT(0x4bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02D5
        gbc.setState(0x8933, 0x2f3a, 0x4660, 0xd38f, 0x600b, 0x6206, 0x1, 0x0);
        gbc.writeMem(0x8933, { 0x5b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2f3a, gbc.sp());
        EXPECT(0x8934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8933));
        // 5B 02D6
        gbc.setState(0x5ab7, 0xb940, 0x8dc0, 0x1d2c, 0xbe24, 0x602f, 0x1, 0x0);
        gbc.writeMem(0x5ab7, { 0x5b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb940, gbc.sp());
        EXPECT(0x5ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02D7
        gbc.setState(0x5df1, 0x640a, 0x3c90, 0xfb28, 0x4a2, 0xd4dd, 0x0, 0x1);
        gbc.writeMem(0x5df1, { 0x5b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x640a, gbc.sp());
        EXPECT(0x5df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02D8
        gbc.setState(0xd6a4, 0xc16d, 0x27a0, 0x11b3, 0xabc6, 0x56de, 0x1, 0x0);
        gbc.writeMem(0xd6a4, { 0x5b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc16d, gbc.sp());
        EXPECT(0xd6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd6a4));
        // 5B 02D9
        gbc.setState(0xc5ec, 0x7cbf, 0x5710, 0x4bda, 0xde14, 0x1dbc, 0x1, 0x1);
        gbc.writeMem(0xc5ec, { 0x5b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7cbf, gbc.sp());
        EXPECT(0xc5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc5ec));
        // 5B 02DA
        gbc.setState(0xaa96, 0xfd9f, 0x4c40, 0x5341, 0xfd79, 0xa20a, 0x0, 0x0);
        gbc.writeMem(0xaa96, { 0x5b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfd9f, gbc.sp());
        EXPECT(0xaa97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaa96));
        // 5B 02DB
        gbc.setState(0x7b80, 0x1912, 0x9af0, 0x299, 0x231f, 0x7fac, 0x1, 0x1);
        gbc.writeMem(0x7b80, { 0x5b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1912, gbc.sp());
        EXPECT(0x7b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02DC
        gbc.setState(0x865, 0x3dff, 0xc970, 0x525f, 0xae8d, 0x265a, 0x0, 0x1);
        gbc.writeMem(0x865, { 0x5b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3dff, gbc.sp());
        EXPECT(0x866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02DD
        gbc.setState(0x8445, 0xf457, 0x6eb0, 0x8c5e, 0xe948, 0x4239, 0x0, 0x1);
        gbc.writeMem(0x8445, { 0x5b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf457, gbc.sp());
        EXPECT(0x8446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8445));
        // 5B 02DE
        gbc.setState(0x7943, 0xfe22, 0x1b90, 0xc3f3, 0xe403, 0x871e, 0x0, 0x1);
        gbc.writeMem(0x7943, { 0x5b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfe22, gbc.sp());
        EXPECT(0x7944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02DF
        gbc.setState(0x9858, 0x8780, 0xa8b0, 0x74eb, 0x739d, 0x6a4c, 0x0, 0x1);
        gbc.writeMem(0x9858, { 0x5b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8780, gbc.sp());
        EXPECT(0x9859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9858));
        // 5B 02E0
        gbc.setState(0xbad, 0x259b, 0x3330, 0x4d28, 0x6094, 0xfa05, 0x1, 0x1);
        gbc.writeMem(0xbad, { 0x5b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x259b, gbc.sp());
        EXPECT(0xbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02E1
        gbc.setState(0x726d, 0x1c77, 0x3200, 0xaf96, 0x122e, 0x46ab, 0x1, 0x0);
        gbc.writeMem(0x726d, { 0x5b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1c77, gbc.sp());
        EXPECT(0x726e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02E2
        gbc.setState(0x7dab, 0xed59, 0xd0a0, 0xd1f3, 0x6c76, 0x7298, 0x1, 0x1);
        gbc.writeMem(0x7dab, { 0x5b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xed59, gbc.sp());
        EXPECT(0x7dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02E3
        gbc.setState(0xea1a, 0x73d9, 0x2190, 0xbc5d, 0xd5d2, 0xf215, 0x0, 0x1);
        gbc.writeMem(0xea1a, { 0x5b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x73d9, gbc.sp());
        EXPECT(0xea1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xea1a));
        // 5B 02E4
        gbc.setState(0x274e, 0xeefa, 0x8830, 0x842e, 0xd58a, 0x78be, 0x0, 0x1);
        gbc.writeMem(0x274e, { 0x5b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xeefa, gbc.sp());
        EXPECT(0x274f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02E5
        gbc.setState(0x411b, 0xbda6, 0xbe60, 0x92ea, 0x70cb, 0xb932, 0x1, 0x1);
        gbc.writeMem(0x411b, { 0x5b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbda6, gbc.sp());
        EXPECT(0x411c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02E6
        gbc.setState(0xbad3, 0x1bee, 0xc360, 0x8473, 0xaf8c, 0x4694, 0x0, 0x0);
        gbc.writeMem(0xbad3, { 0x5b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1bee, gbc.sp());
        EXPECT(0xbad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbad3));
        // 5B 02E7
        gbc.setState(0x3c2d, 0xfa, 0x7640, 0xcfe5, 0x949e, 0x4105, 0x1, 0x1);
        gbc.writeMem(0x3c2d, { 0x5b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfa, gbc.sp());
        EXPECT(0x3c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02E8
        gbc.setState(0x8e0c, 0x6dcd, 0x5380, 0x588e, 0x8eee, 0x4469, 0x0, 0x0);
        gbc.writeMem(0x8e0c, { 0x5b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6dcd, gbc.sp());
        EXPECT(0x8e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8e0c));
        // 5B 02E9
        gbc.setState(0xae9b, 0x48ec, 0x4350, 0xa557, 0x9faa, 0xa443, 0x0, 0x0);
        gbc.writeMem(0xae9b, { 0x5b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x48ec, gbc.sp());
        EXPECT(0xae9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xae9b));
        // 5B 02EA
        gbc.setState(0xe2b6, 0xdb80, 0x5c50, 0x3533, 0xd83a, 0x64c9, 0x0, 0x1);
        gbc.writeMem(0xe2b6, { 0x5b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdb80, gbc.sp());
        EXPECT(0xe2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe2b6));
        // 5B 02EB
        gbc.setState(0x39e, 0xdcd9, 0x7940, 0xf6aa, 0xe759, 0x6e2a, 0x1, 0x0);
        gbc.writeMem(0x39e, { 0x5b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdcd9, gbc.sp());
        EXPECT(0x39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02EC
        gbc.setState(0x8410, 0x45ac, 0x5e90, 0x8f84, 0xe0fb, 0xd210, 0x0, 0x1);
        gbc.writeMem(0x8410, { 0x5b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x45ac, gbc.sp());
        EXPECT(0x8411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8410));
        // 5B 02ED
        gbc.setState(0x7a20, 0xcc04, 0xabe0, 0x223b, 0x8cd1, 0x90c7, 0x1, 0x1);
        gbc.writeMem(0x7a20, { 0x5b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcc04, gbc.sp());
        EXPECT(0x7a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02EE
        gbc.setState(0x52a3, 0x17bf, 0x18e0, 0x120a, 0xd5ba, 0xc9ee, 0x0, 0x0);
        gbc.writeMem(0x52a3, { 0x5b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x17bf, gbc.sp());
        EXPECT(0x52a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02EF
        gbc.setState(0xcf19, 0x589f, 0xd670, 0x8d4e, 0x6d47, 0x7fb8, 0x0, 0x0);
        gbc.writeMem(0xcf19, { 0x5b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x589f, gbc.sp());
        EXPECT(0xcf1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcf19));
        // 5B 02F0
        gbc.setState(0x4f17, 0x6fb, 0x3600, 0x4812, 0x740e, 0xb02f, 0x1, 0x0);
        gbc.writeMem(0x4f17, { 0x5b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6fb, gbc.sp());
        EXPECT(0x4f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02F2
        gbc.setState(0x816c, 0x3350, 0x5210, 0xb208, 0x6988, 0xd2f0, 0x1, 0x0);
        gbc.writeMem(0x816c, { 0x5b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3350, gbc.sp());
        EXPECT(0x816d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x816c));
        // 5B 02F3
        gbc.setState(0xd86b, 0xc84b, 0x5b80, 0x6709, 0xa171, 0xd27f, 0x1, 0x0);
        gbc.writeMem(0xd86b, { 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc84b, gbc.sp());
        EXPECT(0xd86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd86b));
        // 5B 02F4
        gbc.setState(0x76b3, 0xa28d, 0xb690, 0x5127, 0xb1db, 0x88b2, 0x0, 0x1);
        gbc.writeMem(0x76b3, { 0x5b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa28d, gbc.sp());
        EXPECT(0x76b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 02F5
        gbc.setState(0x6d7d, 0x812f, 0x67c0, 0xa617, 0xaa68, 0x665d, 0x1, 0x1);
        gbc.writeMem(0x6d7d, { 0x5b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x812f, gbc.sp());
        EXPECT(0x6d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02F6
        gbc.setState(0x1e22, 0x300e, 0xe20, 0x3875, 0x272c, 0x4076, 0x0, 0x0);
        gbc.writeMem(0x1e22, { 0x5b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x300e, gbc.sp());
        EXPECT(0x1e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02F7
        gbc.setState(0x5a17, 0x5a81, 0xd0a0, 0x3e02, 0xad69, 0x1614, 0x1, 0x1);
        gbc.writeMem(0x5a17, { 0x5b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5a81, gbc.sp());
        EXPECT(0x5a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02F8
        gbc.setState(0x6a48, 0xaa54, 0xfe60, 0x5773, 0xfcda, 0x7aa0, 0x1, 0x1);
        gbc.writeMem(0x6a48, { 0x5b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xaa54, gbc.sp());
        EXPECT(0x6a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02F9
        gbc.setState(0x8d80, 0x110, 0x6630, 0xdd6, 0x9c43, 0xbd99, 0x0, 0x1);
        gbc.writeMem(0x8d80, { 0x5b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x110, gbc.sp());
        EXPECT(0x8d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8d80));
        // 5B 02FB
        gbc.setState(0x547e, 0x70b1, 0xfc20, 0x8da5, 0xae55, 0x10a6, 0x0, 0x1);
        gbc.writeMem(0x547e, { 0x5b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x70b1, gbc.sp());
        EXPECT(0x547f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 02FC
        gbc.setState(0xd280, 0x6165, 0x7030, 0xdc95, 0x80f, 0xc5b2, 0x0, 0x1);
        gbc.writeMem(0xd280, { 0x5b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6165, gbc.sp());
        EXPECT(0xd281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd280));
        // 5B 02FD
        gbc.setState(0xa872, 0x8c03, 0x7e50, 0xc4b5, 0xfb4d, 0xd3f6, 0x0, 0x1);
        gbc.writeMem(0xa872, { 0x5b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8c03, gbc.sp());
        EXPECT(0xa873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa872));
        // 5B 02FE
        gbc.setState(0x904f, 0xf324, 0x8120, 0x4e84, 0xad65, 0x5081, 0x0, 0x1);
        gbc.writeMem(0x904f, { 0x5b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf324, gbc.sp());
        EXPECT(0x9050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x904f));
        // 5B 02FF
        gbc.setState(0xef56, 0xc32, 0x4f70, 0xbba4, 0x3290, 0x6461, 0x1, 0x1);
        gbc.writeMem(0xef56, { 0x5b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc32, gbc.sp());
        EXPECT(0xef57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xef56));
        // 5B 0300
        gbc.setState(0x4acf, 0xbe3, 0x7180, 0x7960, 0x2e0a, 0x5fa8, 0x0, 0x0);
        gbc.writeMem(0x4acf, { 0x5b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbe3, gbc.sp());
        EXPECT(0x4ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0301
        gbc.setState(0xa03a, 0x7953, 0xa540, 0xdfd6, 0xbd2, 0x28c5, 0x0, 0x1);
        gbc.writeMem(0xa03a, { 0x5b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7953, gbc.sp());
        EXPECT(0xa03b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa03a));
        // 5B 0302
        gbc.setState(0xd63d, 0x8b16, 0xb390, 0x6295, 0xdbab, 0x2de7, 0x0, 0x1);
        gbc.writeMem(0xd63d, { 0x5b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8b16, gbc.sp());
        EXPECT(0xd63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd63d));
        // 5B 0303
        gbc.setState(0x5610, 0xdff7, 0x4cc0, 0x14a2, 0x772, 0x4476, 0x1, 0x0);
        gbc.writeMem(0x5610, { 0x5b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdff7, gbc.sp());
        EXPECT(0x5611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0304
        gbc.setState(0x7670, 0xece6, 0x83d0, 0x6787, 0xb533, 0xdd10, 0x0, 0x0);
        gbc.writeMem(0x7670, { 0x5b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xece6, gbc.sp());
        EXPECT(0x7671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0305
        gbc.setState(0x82f5, 0x3344, 0x1b40, 0x2c66, 0x5420, 0x75d6, 0x1, 0x1);
        gbc.writeMem(0x82f5, { 0x5b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3344, gbc.sp());
        EXPECT(0x82f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x82f5));
        // 5B 0306
        gbc.setState(0x59d, 0x49a8, 0x7d60, 0xc660, 0xc4ee, 0x59d3, 0x0, 0x1);
        gbc.writeMem(0x59d, { 0x5b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x49a8, gbc.sp());
        EXPECT(0x59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0307
        gbc.setState(0xa4cd, 0x1d51, 0x1a90, 0x213c, 0xba6f, 0x7f59, 0x0, 0x1);
        gbc.writeMem(0xa4cd, { 0x5b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1d51, gbc.sp());
        EXPECT(0xa4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa4cd));
        // 5B 0308
        gbc.setState(0x1757, 0x39, 0x71b0, 0xd417, 0x9037, 0xc95e, 0x0, 0x0);
        gbc.writeMem(0x1757, { 0x5b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x39, gbc.sp());
        EXPECT(0x1758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0309
        gbc.setState(0x4f42, 0x61f5, 0xf790, 0xbaa9, 0x8a9b, 0xbf27, 0x0, 0x0);
        gbc.writeMem(0x4f42, { 0x5b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x61f5, gbc.sp());
        EXPECT(0x4f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 030A
        gbc.setState(0xba8b, 0x7db2, 0xfab0, 0xc691, 0x466d, 0x3383, 0x1, 0x1);
        gbc.writeMem(0xba8b, { 0x5b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7db2, gbc.sp());
        EXPECT(0xba8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xba8b));
        // 5B 030B
        gbc.setState(0x1934, 0x15bc, 0x9120, 0x5c1d, 0xc9b0, 0x7e72, 0x0, 0x1);
        gbc.writeMem(0x1934, { 0x5b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x15bc, gbc.sp());
        EXPECT(0x1935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 030C
        gbc.setState(0x248b, 0x2125, 0x1830, 0x936d, 0x36, 0x1dfa, 0x0, 0x0);
        gbc.writeMem(0x248b, { 0x5b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2125, gbc.sp());
        EXPECT(0x248c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 030E
        gbc.setState(0xcd6a, 0x4421, 0x62e0, 0x569d, 0xcc9e, 0x350b, 0x0, 0x0);
        gbc.writeMem(0xcd6a, { 0x5b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4421, gbc.sp());
        EXPECT(0xcd6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcd6a));
        // 5B 0310
        gbc.setState(0xb56, 0xc44a, 0x84d0, 0x84cb, 0xf8a, 0x789b, 0x1, 0x0);
        gbc.writeMem(0xb56, { 0x5b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc44a, gbc.sp());
        EXPECT(0xb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0311
        gbc.setState(0x3407, 0x491a, 0x7230, 0x5982, 0x4723, 0x1aaa, 0x0, 0x0);
        gbc.writeMem(0x3407, { 0x5b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x491a, gbc.sp());
        EXPECT(0x3408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0312
        gbc.setState(0x212d, 0x5a16, 0xaff0, 0xe263, 0x7bb9, 0x2cd7, 0x1, 0x0);
        gbc.writeMem(0x212d, { 0x5b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5a16, gbc.sp());
        EXPECT(0x212e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0313
        gbc.setState(0x5d58, 0x1e3d, 0x2220, 0x9e83, 0xad0c, 0x4323, 0x0, 0x0);
        gbc.writeMem(0x5d58, { 0x5b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1e3d, gbc.sp());
        EXPECT(0x5d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0314
        gbc.setState(0x6589, 0x8347, 0xb0b0, 0x64bb, 0xd58a, 0x3570, 0x1, 0x0);
        gbc.writeMem(0x6589, { 0x5b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8347, gbc.sp());
        EXPECT(0x658a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0315
        gbc.setState(0xd908, 0xab03, 0xe6e0, 0x822e, 0x511f, 0xe0ee, 0x0, 0x0);
        gbc.writeMem(0xd908, { 0x5b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xab03, gbc.sp());
        EXPECT(0xd909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd908));
        // 5B 0316
        gbc.setState(0xe269, 0xecc2, 0xa90, 0x13e5, 0xe50b, 0xf29e, 0x0, 0x0);
        gbc.writeMem(0xe269, { 0x5b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xecc2, gbc.sp());
        EXPECT(0xe26a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe269));
        // 5B 0317
        gbc.setState(0xe7fd, 0x4bcd, 0xf6b0, 0xbe8c, 0xcc3, 0xa6ab, 0x0, 0x0);
        gbc.writeMem(0xe7fd, { 0x5b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4bcd, gbc.sp());
        EXPECT(0xe7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe7fd));
        // 5B 0318
        gbc.setState(0x4c03, 0xbd10, 0x8c0, 0x34f2, 0x4fc5, 0xb496, 0x0, 0x1);
        gbc.writeMem(0x4c03, { 0x5b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbd10, gbc.sp());
        EXPECT(0x4c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0319
        gbc.setState(0xd85c, 0x895c, 0x7ff0, 0xfec, 0x1831, 0x9261, 0x1, 0x1);
        gbc.writeMem(0xd85c, { 0x5b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x895c, gbc.sp());
        EXPECT(0xd85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd85c));
        // 5B 031A
        gbc.setState(0x391e, 0x3787, 0x9240, 0x6189, 0xe578, 0x9272, 0x0, 0x1);
        gbc.writeMem(0x391e, { 0x5b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3787, gbc.sp());
        EXPECT(0x391f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 031B
        gbc.setState(0x3e15, 0xfbe5, 0xa3a0, 0xb668, 0xa5d6, 0x25c4, 0x0, 0x1);
        gbc.writeMem(0x3e15, { 0x5b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfbe5, gbc.sp());
        EXPECT(0x3e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 031C
        gbc.setState(0x86b7, 0x3c5, 0xe830, 0x72f1, 0xa7ff, 0xa9f9, 0x1, 0x1);
        gbc.writeMem(0x86b7, { 0x5b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3c5, gbc.sp());
        EXPECT(0x86b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x86b7));
        // 5B 031D
        gbc.setState(0xc94a, 0xf454, 0x9cc0, 0x78df, 0x1415, 0xe2f2, 0x1, 0x1);
        gbc.writeMem(0xc94a, { 0x5b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf454, gbc.sp());
        EXPECT(0xc94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc94a));
        // 5B 031E
        gbc.setState(0xa752, 0xc849, 0xbdd0, 0x4c5f, 0x641e, 0xd838, 0x1, 0x1);
        gbc.writeMem(0xa752, { 0x5b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc849, gbc.sp());
        EXPECT(0xa753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa752));
        // 5B 031F
        gbc.setState(0x30a2, 0x694d, 0x9140, 0x6c7c, 0x7dad, 0xd78b, 0x0, 0x0);
        gbc.writeMem(0x30a2, { 0x5b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x694d, gbc.sp());
        EXPECT(0x30a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0320
        gbc.setState(0x8a2e, 0x529d, 0x580, 0x9abd, 0xea71, 0x88cf, 0x1, 0x1);
        gbc.writeMem(0x8a2e, { 0x5b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x529d, gbc.sp());
        EXPECT(0x8a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8a2e));
        // 5B 0321
        gbc.setState(0xb59d, 0x1391, 0xd0d0, 0xc26f, 0x9cf7, 0xb1f, 0x1, 0x0);
        gbc.writeMem(0xb59d, { 0x5b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1391, gbc.sp());
        EXPECT(0xb59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb59d));
        // 5B 0322
        gbc.setState(0xd1d3, 0x517d, 0xa80, 0xe697, 0x1185, 0x972, 0x1, 0x1);
        gbc.writeMem(0xd1d3, { 0x5b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x517d, gbc.sp());
        EXPECT(0xd1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd1d3));
        // 5B 0323
        gbc.setState(0xa88d, 0x32ce, 0x6da0, 0x2cd7, 0x7785, 0xc984, 0x0, 0x0);
        gbc.writeMem(0xa88d, { 0x5b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x32ce, gbc.sp());
        EXPECT(0xa88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa88d));
        // 5B 0324
        gbc.setState(0x3bbc, 0xf5a5, 0xcd00, 0xb2f8, 0x39c3, 0x3600, 0x1, 0x0);
        gbc.writeMem(0x3bbc, { 0x5b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf5a5, gbc.sp());
        EXPECT(0x3bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0325
        gbc.setState(0x4fbf, 0x9158, 0x61e0, 0x35cd, 0x7378, 0x8007, 0x1, 0x1);
        gbc.writeMem(0x4fbf, { 0x5b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9158, gbc.sp());
        EXPECT(0x4fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0326
        gbc.setState(0x48d, 0xdab7, 0xac0, 0x655a, 0xb785, 0xbdc, 0x0, 0x0);
        gbc.writeMem(0x48d, { 0x5b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdab7, gbc.sp());
        EXPECT(0x48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0327
        gbc.setState(0xe4fd, 0x48c1, 0x2870, 0x26eb, 0xf614, 0xe646, 0x1, 0x0);
        gbc.writeMem(0xe4fd, { 0x5b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x48c1, gbc.sp());
        EXPECT(0xe4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe4fd));
        // 5B 0328
        gbc.setState(0x7c09, 0x5018, 0xb580, 0xf18b, 0xfece, 0x3e65, 0x1, 0x1);
        gbc.writeMem(0x7c09, { 0x5b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5018, gbc.sp());
        EXPECT(0x7c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0329
        gbc.setState(0x2464, 0x19b, 0xf2c0, 0x39a4, 0x332b, 0x53a7, 0x0, 0x1);
        gbc.writeMem(0x2464, { 0x5b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x19b, gbc.sp());
        EXPECT(0x2465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 032A
        gbc.setState(0xc1c4, 0xf209, 0x9f50, 0xc5a2, 0x7176, 0x588f, 0x0, 0x1);
        gbc.writeMem(0xc1c4, { 0x5b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf209, gbc.sp());
        EXPECT(0xc1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc1c4));
        // 5B 032B
        gbc.setState(0x9219, 0xaa37, 0xd2b0, 0x9c65, 0xbf8c, 0xa26f, 0x1, 0x0);
        gbc.writeMem(0x9219, { 0x5b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xaa37, gbc.sp());
        EXPECT(0x921a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9219));
        // 5B 032C
        gbc.setState(0x86ab, 0x489c, 0x7860, 0xa654, 0xd6e0, 0x4ca3, 0x0, 0x0);
        gbc.writeMem(0x86ab, { 0x5b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x489c, gbc.sp());
        EXPECT(0x86ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x86ab));
        // 5B 032D
        gbc.setState(0xce32, 0x4eaa, 0x2170, 0x26b1, 0x6300, 0x68b5, 0x1, 0x1);
        gbc.writeMem(0xce32, { 0x5b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4eaa, gbc.sp());
        EXPECT(0xce33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xce32));
        // 5B 032E
        gbc.setState(0x80a7, 0xe705, 0x6440, 0xee8c, 0x4b38, 0x5854, 0x0, 0x1);
        gbc.writeMem(0x80a7, { 0x5b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe705, gbc.sp());
        EXPECT(0x80a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x80a7));
        // 5B 032F
        gbc.setState(0x618e, 0xab7c, 0x2b20, 0xf4a9, 0xc15f, 0x5c1d, 0x1, 0x1);
        gbc.writeMem(0x618e, { 0x5b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xab7c, gbc.sp());
        EXPECT(0x618f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0330
        gbc.setState(0x3403, 0x3053, 0x7a30, 0x89b9, 0x9519, 0x60fb, 0x0, 0x0);
        gbc.writeMem(0x3403, { 0x5b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3053, gbc.sp());
        EXPECT(0x3404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0331
        gbc.setState(0xbb98, 0xb060, 0xf720, 0x1267, 0xb76a, 0xf5e0, 0x0, 0x1);
        gbc.writeMem(0xbb98, { 0x5b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb060, gbc.sp());
        EXPECT(0xbb99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbb98));
        // 5B 0332
        gbc.setState(0x253d, 0x8108, 0x420, 0x34e1, 0xb5de, 0x83ef, 0x0, 0x1);
        gbc.writeMem(0x253d, { 0x5b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8108, gbc.sp());
        EXPECT(0x253e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0333
        gbc.setState(0xd745, 0xe22, 0x38b0, 0x4da7, 0xa76d, 0x178b, 0x1, 0x1);
        gbc.writeMem(0xd745, { 0x5b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe22, gbc.sp());
        EXPECT(0xd746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd745));
        // 5B 0334
        gbc.setState(0xeed2, 0xb106, 0x6920, 0xf3df, 0xce7f, 0x16ad, 0x0, 0x1);
        gbc.writeMem(0xeed2, { 0x5b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb106, gbc.sp());
        EXPECT(0xeed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xeed2));
        // 5B 0335
        gbc.setState(0xa2d2, 0xb0eb, 0x8690, 0xf0ce, 0xd871, 0x4561, 0x1, 0x0);
        gbc.writeMem(0xa2d2, { 0x5b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb0eb, gbc.sp());
        EXPECT(0xa2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa2d2));
        // 5B 0336
        gbc.setState(0xd594, 0xc79e, 0xc740, 0x6ab7, 0xe712, 0xa446, 0x1, 0x0);
        gbc.writeMem(0xd594, { 0x5b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc79e, gbc.sp());
        EXPECT(0xd595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd594));
        // 5B 0337
        gbc.setState(0xbb62, 0x6e44, 0x7460, 0x81f6, 0xdc64, 0xab9b, 0x0, 0x0);
        gbc.writeMem(0xbb62, { 0x5b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6e44, gbc.sp());
        EXPECT(0xbb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbb62));
        // 5B 0338
        gbc.setState(0xe401, 0xf65f, 0xdc10, 0xd438, 0xfe3b, 0x66f8, 0x0, 0x1);
        gbc.writeMem(0xe401, { 0x5b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf65f, gbc.sp());
        EXPECT(0xe402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe401));
        // 5B 0339
        gbc.setState(0x711a, 0xbc68, 0xaa50, 0x8a52, 0xd9c8, 0x6752, 0x1, 0x1);
        gbc.writeMem(0x711a, { 0x5b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbc68, gbc.sp());
        EXPECT(0x711b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 033A
        gbc.setState(0xe8b8, 0xfaf, 0xdac0, 0x674, 0x9591, 0x4ef5, 0x0, 0x1);
        gbc.writeMem(0xe8b8, { 0x5b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfaf, gbc.sp());
        EXPECT(0xe8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe8b8));
        // 5B 033B
        gbc.setState(0xe8f1, 0x5c00, 0x95c0, 0xb37d, 0x24e6, 0x5dc3, 0x1, 0x1);
        gbc.writeMem(0xe8f1, { 0x5b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5c00, gbc.sp());
        EXPECT(0xe8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe8f1));
        // 5B 033D
        gbc.setState(0xb00a, 0xf564, 0xd1c0, 0x13e0, 0xcc4c, 0xcd1, 0x1, 0x0);
        gbc.writeMem(0xb00a, { 0x5b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf564, gbc.sp());
        EXPECT(0xb00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb00a));
        // 5B 033E
        gbc.setState(0x6dca, 0xceed, 0xa970, 0xc349, 0xfb3e, 0xf348, 0x1, 0x0);
        gbc.writeMem(0x6dca, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xceed, gbc.sp());
        EXPECT(0x6dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 033F
        gbc.setState(0x7b02, 0xf59d, 0xbbf0, 0x644d, 0x1840, 0x985e, 0x1, 0x0);
        gbc.writeMem(0x7b02, { 0x5b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf59d, gbc.sp());
        EXPECT(0x7b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0340
        gbc.setState(0xd16d, 0xda31, 0x5c10, 0xa9ca, 0x5f91, 0xc5b5, 0x1, 0x0);
        gbc.writeMem(0xd16d, { 0x5b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xda31, gbc.sp());
        EXPECT(0xd16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd16d));
        // 5B 0341
        gbc.setState(0x7ad7, 0x5043, 0x9c80, 0xe11b, 0x31da, 0x2b82, 0x1, 0x0);
        gbc.writeMem(0x7ad7, { 0x5b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5043, gbc.sp());
        EXPECT(0x7ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0342
        gbc.setState(0x5770, 0xaf02, 0x5cf0, 0xaa55, 0x1d5b, 0x3248, 0x1, 0x0);
        gbc.writeMem(0x5770, { 0x5b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaf02, gbc.sp());
        EXPECT(0x5771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0344
        gbc.setState(0xc6d3, 0x55d3, 0x540, 0x31f1, 0xa125, 0x6a20, 0x1, 0x0);
        gbc.writeMem(0xc6d3, { 0x5b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x55d3, gbc.sp());
        EXPECT(0xc6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc6d3));
        // 5B 0345
        gbc.setState(0xc914, 0x3bb6, 0x2be0, 0x51f1, 0x5bfd, 0xefe9, 0x1, 0x0);
        gbc.writeMem(0xc914, { 0x5b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3bb6, gbc.sp());
        EXPECT(0xc915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc914));
        // 5B 0346
        gbc.setState(0x76fc, 0xc17f, 0xc0, 0xd0e4, 0x15da, 0x9793, 0x1, 0x1);
        gbc.writeMem(0x76fc, { 0x5b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc17f, gbc.sp());
        EXPECT(0x76fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0347
        gbc.setState(0xa99a, 0x6924, 0xa700, 0x30fe, 0x43ca, 0x95d3, 0x1, 0x1);
        gbc.writeMem(0xa99a, { 0x5b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6924, gbc.sp());
        EXPECT(0xa99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa99a));
        // 5B 0348
        gbc.setState(0x882e, 0xb528, 0xb180, 0xb2f, 0xb750, 0x2a3b, 0x1, 0x0);
        gbc.writeMem(0x882e, { 0x5b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb528, gbc.sp());
        EXPECT(0x882f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x882e));
        // 5B 0349
        gbc.setState(0x5da0, 0x58a6, 0x7630, 0x256, 0xeef8, 0x302a, 0x0, 0x1);
        gbc.writeMem(0x5da0, { 0x5b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x58a6, gbc.sp());
        EXPECT(0x5da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 034A
        gbc.setState(0x2bf9, 0xfcf4, 0x86c0, 0xf256, 0x3092, 0x13c6, 0x0, 0x0);
        gbc.writeMem(0x2bf9, { 0x5b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfcf4, gbc.sp());
        EXPECT(0x2bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 034B
        gbc.setState(0x4945, 0xc989, 0x2ed0, 0x20a4, 0xad52, 0xd600, 0x1, 0x0);
        gbc.writeMem(0x4945, { 0x5b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc989, gbc.sp());
        EXPECT(0x4946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 034C
        gbc.setState(0x79ec, 0x9c72, 0xbe80, 0xc167, 0xa411, 0x2cdb, 0x0, 0x1);
        gbc.writeMem(0x79ec, { 0x5b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9c72, gbc.sp());
        EXPECT(0x79ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 034D
        gbc.setState(0xcfff, 0x55f3, 0xd5a0, 0xc5dc, 0xc6e1, 0x76c7, 0x0, 0x1);
        gbc.writeMem(0xcfff, { 0x5b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x55f3, gbc.sp());
        EXPECT(0xd000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcfff));
        // 5B 034E
        gbc.setState(0x681e, 0x1e9, 0x73e0, 0x94ad, 0x86ee, 0x2fd7, 0x1, 0x1);
        gbc.writeMem(0x681e, { 0x5b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1e9, gbc.sp());
        EXPECT(0x681f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 034F
        gbc.setState(0xe93, 0x4bb, 0x4c00, 0xd899, 0x52f, 0x1c25, 0x1, 0x1);
        gbc.writeMem(0xe93, { 0x5b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4bb, gbc.sp());
        EXPECT(0xe94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0350
        gbc.setState(0xc0b5, 0x3644, 0xc810, 0x42c8, 0x5c0c, 0x1bb5, 0x0, 0x1);
        gbc.writeMem(0xc0b5, { 0x5b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3644, gbc.sp());
        EXPECT(0xc0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc0b5));
        // 5B 0351
        gbc.setState(0x7895, 0x3ed0, 0xacb0, 0x490f, 0xbbfe, 0xc35a, 0x0, 0x1);
        gbc.writeMem(0x7895, { 0x5b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3ed0, gbc.sp());
        EXPECT(0x7896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0352
        gbc.setState(0x4c7, 0xe54, 0x6340, 0x9b0c, 0xa017, 0xefc3, 0x1, 0x1);
        gbc.writeMem(0x4c7, { 0x5b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe54, gbc.sp());
        EXPECT(0x4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0353
        gbc.setState(0xe986, 0x26c8, 0x8860, 0xee5b, 0xb681, 0x6e30, 0x0, 0x0);
        gbc.writeMem(0xe986, { 0x5b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x26c8, gbc.sp());
        EXPECT(0xe987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe986));
        // 5B 0354
        gbc.setState(0x1c03, 0x9a22, 0x530, 0xadcd, 0xa52a, 0x65b9, 0x1, 0x1);
        gbc.writeMem(0x1c03, { 0x5b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9a22, gbc.sp());
        EXPECT(0x1c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0355
        gbc.setState(0x2063, 0x852e, 0x67d0, 0x9ac2, 0xe79, 0xe82, 0x0, 0x1);
        gbc.writeMem(0x2063, { 0x5b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x852e, gbc.sp());
        EXPECT(0x2064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0356
        gbc.setState(0xddc2, 0x156c, 0xc160, 0x91c6, 0x57c8, 0x6d0f, 0x0, 0x1);
        gbc.writeMem(0xddc2, { 0x5b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x156c, gbc.sp());
        EXPECT(0xddc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xddc2));
        // 5B 0357
        gbc.setState(0x405b, 0x671e, 0xc90, 0x5d08, 0x380c, 0x7727, 0x1, 0x1);
        gbc.writeMem(0x405b, { 0x5b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x671e, gbc.sp());
        EXPECT(0x405c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0358
        gbc.setState(0x6f43, 0xa454, 0xf350, 0xc04e, 0x70a, 0x2382, 0x1, 0x0);
        gbc.writeMem(0x6f43, { 0x5b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa454, gbc.sp());
        EXPECT(0x6f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0359
        gbc.setState(0x5827, 0xe76e, 0x4fa0, 0xdab2, 0x7ff, 0x1f4e, 0x1, 0x1);
        gbc.writeMem(0x5827, { 0x5b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe76e, gbc.sp());
        EXPECT(0x5828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 035A
        gbc.setState(0xba3, 0xbc9e, 0x63a0, 0x39ec, 0xd3, 0x19fb, 0x0, 0x1);
        gbc.writeMem(0xba3, { 0x5b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbc9e, gbc.sp());
        EXPECT(0xba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 035B
        gbc.setState(0xdd53, 0xa07d, 0x7f80, 0xe468, 0x9c6d, 0x541a, 0x0, 0x1);
        gbc.writeMem(0xdd53, { 0x5b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa07d, gbc.sp());
        EXPECT(0xdd54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdd53));
        // 5B 035D
        gbc.setState(0x5201, 0x4558, 0x1610, 0x3497, 0xe17a, 0x5153, 0x0, 0x0);
        gbc.writeMem(0x5201, { 0x5b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4558, gbc.sp());
        EXPECT(0x5202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 035E
        gbc.setState(0xa9f3, 0x6458, 0xa000, 0x5cf2, 0x531d, 0x9a55, 0x0, 0x1);
        gbc.writeMem(0xa9f3, { 0x5b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6458, gbc.sp());
        EXPECT(0xa9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa9f3));
        // 5B 035F
        gbc.setState(0x93c5, 0x435, 0x2e10, 0x24a1, 0x72f7, 0x808d, 0x0, 0x1);
        gbc.writeMem(0x93c5, { 0x5b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x435, gbc.sp());
        EXPECT(0x93c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x93c5));
        // 5B 0360
        gbc.setState(0x516, 0x1b7f, 0x4bb0, 0xd693, 0xeb66, 0xcb3c, 0x0, 0x0);
        gbc.writeMem(0x516, { 0x5b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1b7f, gbc.sp());
        EXPECT(0x517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0361
        gbc.setState(0x593f, 0xb0f8, 0xffb0, 0xd218, 0x5ed1, 0xe0f1, 0x0, 0x0);
        gbc.writeMem(0x593f, { 0x5b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb0f8, gbc.sp());
        EXPECT(0x5940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0362
        gbc.setState(0x434c, 0xa4b2, 0x4830, 0x89, 0xdad1, 0xcb61, 0x0, 0x0);
        gbc.writeMem(0x434c, { 0x5b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa4b2, gbc.sp());
        EXPECT(0x434d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0363
        gbc.setState(0x62a0, 0xdf6a, 0x7fe0, 0x6a79, 0x4aea, 0xa220, 0x0, 0x0);
        gbc.writeMem(0x62a0, { 0x5b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdf6a, gbc.sp());
        EXPECT(0x62a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0364
        gbc.setState(0xbdb8, 0x28a7, 0x5010, 0xfd10, 0xb36a, 0xeaf9, 0x0, 0x0);
        gbc.writeMem(0xbdb8, { 0x5b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x28a7, gbc.sp());
        EXPECT(0xbdb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbdb8));
        // 5B 0365
        gbc.setState(0x2d73, 0x8fc1, 0x1340, 0x3ba6, 0xd407, 0x65ea, 0x1, 0x1);
        gbc.writeMem(0x2d73, { 0x5b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8fc1, gbc.sp());
        EXPECT(0x2d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0366
        gbc.setState(0x7f86, 0x2e2b, 0x7d70, 0x44d4, 0x5864, 0x4daa, 0x1, 0x0);
        gbc.writeMem(0x7f86, { 0x5b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2e2b, gbc.sp());
        EXPECT(0x7f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0367
        gbc.setState(0x189f, 0xe53c, 0x4020, 0xc119, 0xd0ef, 0x99f4, 0x1, 0x1);
        gbc.writeMem(0x189f, { 0x5b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe53c, gbc.sp());
        EXPECT(0x18a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0368
        gbc.setState(0x95b, 0x7860, 0x7640, 0xbd8d, 0x8269, 0xb6e2, 0x1, 0x1);
        gbc.writeMem(0x95b, { 0x5b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7860, gbc.sp());
        EXPECT(0x95c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0369
        gbc.setState(0xa323, 0x2e1f, 0x2f20, 0xf497, 0xc121, 0x35b2, 0x0, 0x0);
        gbc.writeMem(0xa323, { 0x5b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2e1f, gbc.sp());
        EXPECT(0xa324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa323));
        // 5B 036A
        gbc.setState(0xabb8, 0xe27, 0x9cf0, 0x5938, 0x8791, 0x8ddd, 0x1, 0x0);
        gbc.writeMem(0xabb8, { 0x5b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe27, gbc.sp());
        EXPECT(0xabb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xabb8));
        // 5B 036B
        gbc.setState(0xa4fa, 0x9516, 0x9ba0, 0xe36d, 0xe48f, 0x45ba, 0x0, 0x0);
        gbc.writeMem(0xa4fa, { 0x5b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9516, gbc.sp());
        EXPECT(0xa4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa4fa));
        // 5B 036C
        gbc.setState(0x8fa3, 0x18d2, 0xde40, 0x9d4, 0xde5b, 0x7990, 0x1, 0x0);
        gbc.writeMem(0x8fa3, { 0x5b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x18d2, gbc.sp());
        EXPECT(0x8fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8fa3));
        // 5B 036D
        gbc.setState(0xb84e, 0x37e0, 0x39b0, 0x2c7f, 0xd24e, 0x5df7, 0x0, 0x0);
        gbc.writeMem(0xb84e, { 0x5b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x37e0, gbc.sp());
        EXPECT(0xb84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb84e));
        // 5B 036E
        gbc.setState(0xe25e, 0x3121, 0xe0b0, 0x700c, 0x9438, 0xbe84, 0x1, 0x1);
        gbc.writeMem(0xe25e, { 0x5b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3121, gbc.sp());
        EXPECT(0xe25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe25e));
        // 5B 036F
        gbc.setState(0xe53a, 0xff61, 0x9aa0, 0x724, 0x1fd0, 0xe953, 0x0, 0x0);
        gbc.writeMem(0xe53a, { 0x5b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xff61, gbc.sp());
        EXPECT(0xe53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe53a));
        // 5B 0371
        gbc.setState(0x7dee, 0x4ada, 0x7be0, 0xe436, 0xec6a, 0x5bc1, 0x1, 0x1);
        gbc.writeMem(0x7dee, { 0x5b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4ada, gbc.sp());
        EXPECT(0x7def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0372
        gbc.setState(0x881b, 0x40dd, 0x2eb0, 0xad, 0x3588, 0xfad7, 0x1, 0x0);
        gbc.writeMem(0x881b, { 0x5b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x40dd, gbc.sp());
        EXPECT(0x881c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x881b));
        // 5B 0373
        gbc.setState(0xd49d, 0x2995, 0x26e0, 0x25d9, 0x48d6, 0xc7d0, 0x0, 0x1);
        gbc.writeMem(0xd49d, { 0x5b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2995, gbc.sp());
        EXPECT(0xd49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd49d));
        // 5B 0374
        gbc.setState(0xe14f, 0xd5ef, 0x6b00, 0xec06, 0xc026, 0xac9d, 0x0, 0x1);
        gbc.writeMem(0xe14f, { 0x5b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd5ef, gbc.sp());
        EXPECT(0xe150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe14f));
        // 5B 0375
        gbc.setState(0x7cd2, 0xea04, 0x8bc0, 0x2007, 0x9fb8, 0x854c, 0x1, 0x1);
        gbc.writeMem(0x7cd2, { 0x5b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xea04, gbc.sp());
        EXPECT(0x7cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0376
        gbc.setState(0xa253, 0xa29, 0x12e0, 0x7e1e, 0x8ac6, 0x5754, 0x1, 0x0);
        gbc.writeMem(0xa253, { 0x5b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa29, gbc.sp());
        EXPECT(0xa254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa253));
        // 5B 0377
        gbc.setState(0x31fc, 0x66b3, 0x2bb0, 0xee3a, 0x1a30, 0x7ea, 0x1, 0x0);
        gbc.writeMem(0x31fc, { 0x5b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x66b3, gbc.sp());
        EXPECT(0x31fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0378
        gbc.setState(0x6cfc, 0x5d5c, 0xa4e0, 0xeed1, 0x269f, 0xac03, 0x0, 0x1);
        gbc.writeMem(0x6cfc, { 0x5b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5d5c, gbc.sp());
        EXPECT(0x6cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0379
        gbc.setState(0xe6ad, 0xe506, 0x5f10, 0xb0, 0x43b4, 0xf460, 0x1, 0x1);
        gbc.writeMem(0xe6ad, { 0x5b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe506, gbc.sp());
        EXPECT(0xe6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe6ad));
        // 5B 037A
        gbc.setState(0xbc9, 0x3324, 0x8060, 0x8065, 0xb3d2, 0xef25, 0x0, 0x1);
        gbc.writeMem(0xbc9, { 0x5b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3324, gbc.sp());
        EXPECT(0xbca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 037B
        gbc.setState(0xe30e, 0xff65, 0x21d0, 0x491a, 0x2c1e, 0x7ea, 0x0, 0x1);
        gbc.writeMem(0xe30e, { 0x5b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xff65, gbc.sp());
        EXPECT(0xe30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe30e));
        // 5B 037C
        gbc.setState(0xe44d, 0x9c9, 0x61f0, 0xf250, 0xaec5, 0x27c7, 0x0, 0x0);
        gbc.writeMem(0xe44d, { 0x5b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9c9, gbc.sp());
        EXPECT(0xe44e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe44d));
        // 5B 037D
        gbc.setState(0x701b, 0x9118, 0xf140, 0x8e16, 0x2139, 0x8dd1, 0x1, 0x1);
        gbc.writeMem(0x701b, { 0x5b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9118, gbc.sp());
        EXPECT(0x701c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 037E
        gbc.setState(0x9627, 0xcf34, 0x7b0, 0x1e68, 0x6e8, 0x955c, 0x0, 0x0);
        gbc.writeMem(0x9627, { 0x5b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcf34, gbc.sp());
        EXPECT(0x9628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9627));
        // 5B 037F
        gbc.setState(0xb137, 0xb4ac, 0xce90, 0xbd6e, 0x9623, 0x8e62, 0x1, 0x1);
        gbc.writeMem(0xb137, { 0x5b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb4ac, gbc.sp());
        EXPECT(0xb138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb137));
        // 5B 0380
        gbc.setState(0x7b6d, 0x1eeb, 0xf30, 0xb374, 0xe324, 0xbfcc, 0x0, 0x0);
        gbc.writeMem(0x7b6d, { 0x5b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1eeb, gbc.sp());
        EXPECT(0x7b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0381
        gbc.setState(0xaa52, 0x4475, 0xc540, 0x9f03, 0x9d1e, 0xb0cd, 0x0, 0x0);
        gbc.writeMem(0xaa52, { 0x5b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4475, gbc.sp());
        EXPECT(0xaa53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaa52));
        // 5B 0382
        gbc.setState(0x3123, 0x6bd7, 0x62a0, 0x398c, 0x964a, 0x6e61, 0x1, 0x0);
        gbc.writeMem(0x3123, { 0x5b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6bd7, gbc.sp());
        EXPECT(0x3124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0383
        gbc.setState(0xb416, 0x88d0, 0x88b0, 0xf699, 0x3bb, 0x20d9, 0x0, 0x1);
        gbc.writeMem(0xb416, { 0x5b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x88d0, gbc.sp());
        EXPECT(0xb417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb416));
        // 5B 0384
        gbc.setState(0x76ec, 0xc8b5, 0x8d60, 0x62fe, 0xabb2, 0x2bc, 0x0, 0x1);
        gbc.writeMem(0x76ec, { 0x5b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc8b5, gbc.sp());
        EXPECT(0x76ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0385
        gbc.setState(0x3963, 0xb373, 0xcf10, 0x9698, 0x670, 0x83f3, 0x0, 0x1);
        gbc.writeMem(0x3963, { 0x5b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb373, gbc.sp());
        EXPECT(0x3964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0386
        gbc.setState(0xc260, 0x2302, 0x2660, 0x4899, 0x1527, 0xeb82, 0x0, 0x0);
        gbc.writeMem(0xc260, { 0x5b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2302, gbc.sp());
        EXPECT(0xc261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc260));
        // 5B 0387
        gbc.setState(0xe118, 0xd570, 0xcb60, 0xd148, 0x6ce, 0x3aba, 0x0, 0x0);
        gbc.writeMem(0xe118, { 0x5b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd570, gbc.sp());
        EXPECT(0xe119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe118));
        // 5B 0388
        gbc.setState(0xb29c, 0x3aa, 0xf260, 0x6e26, 0xbab7, 0x8fa0, 0x0, 0x0);
        gbc.writeMem(0xb29c, { 0x5b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3aa, gbc.sp());
        EXPECT(0xb29d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb29c));
        // 5B 0389
        gbc.setState(0xe3ac, 0x7071, 0x4090, 0x454b, 0x47d5, 0xfed0, 0x1, 0x1);
        gbc.writeMem(0xe3ac, { 0x5b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7071, gbc.sp());
        EXPECT(0xe3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe3ac));
        // 5B 038A
        gbc.setState(0xb646, 0x108f, 0x45b0, 0xa057, 0x7a95, 0xa520, 0x0, 0x1);
        gbc.writeMem(0xb646, { 0x5b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x108f, gbc.sp());
        EXPECT(0xb647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb646));
        // 5B 038B
        gbc.setState(0xb520, 0xde1e, 0x4c50, 0x6468, 0x5c71, 0xfcbe, 0x1, 0x1);
        gbc.writeMem(0xb520, { 0x5b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xde1e, gbc.sp());
        EXPECT(0xb521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb520));
        // 5B 038C
        gbc.setState(0xa8ee, 0x74ef, 0xa170, 0x33c2, 0x425b, 0xa946, 0x1, 0x1);
        gbc.writeMem(0xa8ee, { 0x5b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x74ef, gbc.sp());
        EXPECT(0xa8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa8ee));
        // 5B 038D
        gbc.setState(0xb992, 0x7d7c, 0x47b0, 0xcc9d, 0x96e7, 0x1c11, 0x1, 0x1);
        gbc.writeMem(0xb992, { 0x5b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7d7c, gbc.sp());
        EXPECT(0xb993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb992));
        // 5B 038E
        gbc.setState(0x3360, 0x74e, 0x6e40, 0x9ff4, 0x3d21, 0x5332, 0x0, 0x0);
        gbc.writeMem(0x3360, { 0x5b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x74e, gbc.sp());
        EXPECT(0x3361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 038F
        gbc.setState(0x19b9, 0x4383, 0x2bd0, 0x80e4, 0x9078, 0x8cc7, 0x0, 0x1);
        gbc.writeMem(0x19b9, { 0x5b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4383, gbc.sp());
        EXPECT(0x19ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0390
        gbc.setState(0x7c6b, 0x27fe, 0x4c00, 0x9471, 0x9307, 0xd471, 0x1, 0x0);
        gbc.writeMem(0x7c6b, { 0x5b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x27fe, gbc.sp());
        EXPECT(0x7c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0391
        gbc.setState(0x991c, 0xe715, 0x7750, 0xe70e, 0x5a01, 0x79f4, 0x1, 0x0);
        gbc.writeMem(0x991c, { 0x5b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe715, gbc.sp());
        EXPECT(0x991d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x991c));
        // 5B 0392
        gbc.setState(0x3483, 0x1c00, 0xc350, 0xf518, 0xd50f, 0x1672, 0x0, 0x0);
        gbc.writeMem(0x3483, { 0x5b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1c00, gbc.sp());
        EXPECT(0x3484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0393
        gbc.setState(0xd409, 0x3ce0, 0xb890, 0x9ce7, 0x8b2b, 0x5fc0, 0x0, 0x1);
        gbc.writeMem(0xd409, { 0x5b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3ce0, gbc.sp());
        EXPECT(0xd40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd409));
        // 5B 0394
        gbc.setState(0xe674, 0x5391, 0xb360, 0x1f77, 0xc35d, 0xbd24, 0x0, 0x1);
        gbc.writeMem(0xe674, { 0x5b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5391, gbc.sp());
        EXPECT(0xe675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe674));
        // 5B 0395
        gbc.setState(0x6135, 0x3026, 0xe630, 0xec52, 0x39db, 0xed15, 0x1, 0x0);
        gbc.writeMem(0x6135, { 0x5b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3026, gbc.sp());
        EXPECT(0x6136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 0396
        gbc.setState(0x5fbb, 0x3b7d, 0x5580, 0xf825, 0xbc79, 0xf3a9, 0x1, 0x1);
        gbc.writeMem(0x5fbb, { 0x5b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3b7d, gbc.sp());
        EXPECT(0x5fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0398
        gbc.setState(0x23e4, 0x7ec2, 0xf640, 0xbe50, 0xea0c, 0x1413, 0x0, 0x1);
        gbc.writeMem(0x23e4, { 0x5b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7ec2, gbc.sp());
        EXPECT(0x23e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 0399
        gbc.setState(0x1e98, 0x163f, 0xf910, 0x6de1, 0x9422, 0xc1ef, 0x0, 0x1);
        gbc.writeMem(0x1e98, { 0x5b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x163f, gbc.sp());
        EXPECT(0x1e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 039B
        gbc.setState(0xa3d5, 0x727f, 0x3e20, 0x888e, 0x80e3, 0x33b3, 0x0, 0x0);
        gbc.writeMem(0xa3d5, { 0x5b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x727f, gbc.sp());
        EXPECT(0xa3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa3d5));
        // 5B 039C
        gbc.setState(0x1647, 0xc2c9, 0x91c0, 0x2e82, 0x7e4, 0x90b7, 0x0, 0x0);
        gbc.writeMem(0x1647, { 0x5b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc2c9, gbc.sp());
        EXPECT(0x1648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 039D
        gbc.setState(0x3e90, 0x2843, 0x1020, 0xae9d, 0x74e7, 0x21a7, 0x0, 0x0);
        gbc.writeMem(0x3e90, { 0x5b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2843, gbc.sp());
        EXPECT(0x3e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 039E
        gbc.setState(0x8060, 0x1cdb, 0x2da0, 0x8f47, 0xaa90, 0xfc0d, 0x0, 0x0);
        gbc.writeMem(0x8060, { 0x5b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1cdb, gbc.sp());
        EXPECT(0x8061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8060));
        // 5B 039F
        gbc.setState(0x7b99, 0x1052, 0xfa70, 0x28f, 0x52d4, 0x4c8a, 0x1, 0x1);
        gbc.writeMem(0x7b99, { 0x5b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1052, gbc.sp());
        EXPECT(0x7b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03A0
        gbc.setState(0xc9eb, 0xf215, 0xb770, 0xab2f, 0xc12a, 0x538f, 0x0, 0x1);
        gbc.writeMem(0xc9eb, { 0x5b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf215, gbc.sp());
        EXPECT(0xc9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc9eb));
        // 5B 03A2
        gbc.setState(0x4740, 0x4734, 0xcd20, 0xc1b6, 0xca48, 0xdf39, 0x0, 0x1);
        gbc.writeMem(0x4740, { 0x5b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4734, gbc.sp());
        EXPECT(0x4741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03A3
        gbc.setState(0xc2d3, 0x377a, 0xd690, 0xf783, 0x3498, 0x3671, 0x1, 0x1);
        gbc.writeMem(0xc2d3, { 0x5b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x377a, gbc.sp());
        EXPECT(0xc2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc2d3));
        // 5B 03A4
        gbc.setState(0xc2f7, 0x5332, 0xa110, 0x1650, 0xa788, 0x7e20, 0x1, 0x0);
        gbc.writeMem(0xc2f7, { 0x5b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5332, gbc.sp());
        EXPECT(0xc2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc2f7));
        // 5B 03A5
        gbc.setState(0x8c6c, 0x88c5, 0xe6c0, 0xcc81, 0x6b50, 0x7953, 0x1, 0x1);
        gbc.writeMem(0x8c6c, { 0x5b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x88c5, gbc.sp());
        EXPECT(0x8c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8c6c));
        // 5B 03A6
        gbc.setState(0x9180, 0x3b23, 0xa920, 0x4b28, 0x90d7, 0xfef, 0x0, 0x0);
        gbc.writeMem(0x9180, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3b23, gbc.sp());
        EXPECT(0x9181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9180));
        // 5B 03A7
        gbc.setState(0xbfba, 0x87e9, 0x58f0, 0x9b2f, 0x72fe, 0x39f5, 0x1, 0x0);
        gbc.writeMem(0xbfba, { 0x5b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x87e9, gbc.sp());
        EXPECT(0xbfbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbfba));
        // 5B 03A8
        gbc.setState(0x5dd5, 0x9c4a, 0xf1a0, 0x391c, 0xf105, 0xbf83, 0x0, 0x1);
        gbc.writeMem(0x5dd5, { 0x5b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9c4a, gbc.sp());
        EXPECT(0x5dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03A9
        gbc.setState(0xbcc8, 0x4d4, 0x3bf0, 0xff7, 0xada1, 0xd049, 0x0, 0x0);
        gbc.writeMem(0xbcc8, { 0x5b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4d4, gbc.sp());
        EXPECT(0xbcc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbcc8));
        // 5B 03AA
        gbc.setState(0xdd4e, 0xe6cc, 0x7e60, 0xc7f8, 0xdc96, 0xa39d, 0x0, 0x1);
        gbc.writeMem(0xdd4e, { 0x5b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe6cc, gbc.sp());
        EXPECT(0xdd4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdd4e));
        // 5B 03AB
        gbc.setState(0xd2df, 0x63a1, 0x5020, 0x9d5c, 0xcde9, 0xfbe6, 0x1, 0x1);
        gbc.writeMem(0xd2df, { 0x5b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x63a1, gbc.sp());
        EXPECT(0xd2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd2df));
        // 5B 03AD
        gbc.setState(0xa77, 0xa523, 0x3970, 0x99eb, 0x16ca, 0xc8d, 0x0, 0x1);
        gbc.writeMem(0xa77, { 0x5b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa523, gbc.sp());
        EXPECT(0xa78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03AE
        gbc.setState(0xde0e, 0x30b0, 0xc680, 0xe0ac, 0xdd41, 0xfd44, 0x0, 0x1);
        gbc.writeMem(0xde0e, { 0x5b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x30b0, gbc.sp());
        EXPECT(0xde0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xde0e));
        // 5B 03AF
        gbc.setState(0xaf2d, 0xecde, 0x8f70, 0xab4f, 0x76f4, 0x31c3, 0x1, 0x0);
        gbc.writeMem(0xaf2d, { 0x5b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xecde, gbc.sp());
        EXPECT(0xaf2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaf2d));
        // 5B 03B0
        gbc.setState(0x305a, 0x5bff, 0xc630, 0xd38d, 0xb046, 0xb99f, 0x1, 0x1);
        gbc.writeMem(0x305a, { 0x5b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5bff, gbc.sp());
        EXPECT(0x305b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03B2
        gbc.setState(0xd8b, 0xf96b, 0xfd70, 0x4aa9, 0x39d5, 0x6d64, 0x0, 0x0);
        gbc.writeMem(0xd8b, { 0x5b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf96b, gbc.sp());
        EXPECT(0xd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03B3
        gbc.setState(0x3b30, 0x998e, 0xe00, 0xa7c7, 0x21dc, 0x7ed9, 0x1, 0x1);
        gbc.writeMem(0x3b30, { 0x5b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x998e, gbc.sp());
        EXPECT(0x3b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03B4
        gbc.setState(0xc978, 0xc9ff, 0x9f00, 0x49dc, 0x4f17, 0x8920, 0x1, 0x1);
        gbc.writeMem(0xc978, { 0x5b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc9ff, gbc.sp());
        EXPECT(0xc979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc978));
        // 5B 03B5
        gbc.setState(0x8321, 0x3481, 0xcb70, 0xcf1c, 0x7009, 0x1bd, 0x1, 0x0);
        gbc.writeMem(0x8321, { 0x5b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3481, gbc.sp());
        EXPECT(0x8322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8321));
        // 5B 03B6
        gbc.setState(0xa8f6, 0xa0d6, 0x8d00, 0x1e70, 0xfeed, 0xbd37, 0x1, 0x1);
        gbc.writeMem(0xa8f6, { 0x5b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa0d6, gbc.sp());
        EXPECT(0xa8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa8f6));
        // 5B 03B7
        gbc.setState(0xa372, 0x5479, 0xc4c0, 0x54c, 0xd330, 0xf57d, 0x1, 0x0);
        gbc.writeMem(0xa372, { 0x5b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5479, gbc.sp());
        EXPECT(0xa373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa372));
        // 5B 03B8
        gbc.setState(0xba4d, 0xa036, 0xe670, 0x53cb, 0x480f, 0x95c2, 0x0, 0x1);
        gbc.writeMem(0xba4d, { 0x5b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa036, gbc.sp());
        EXPECT(0xba4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xba4d));
        // 5B 03B9
        gbc.setState(0x272, 0xab6f, 0x460, 0x8388, 0xab2f, 0x92be, 0x0, 0x0);
        gbc.writeMem(0x272, { 0x5b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xab6f, gbc.sp());
        EXPECT(0x273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03BA
        gbc.setState(0x43a, 0x1448, 0xcc10, 0xddef, 0x8dc0, 0x271d, 0x0, 0x1);
        gbc.writeMem(0x43a, { 0x5b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1448, gbc.sp());
        EXPECT(0x43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03BB
        gbc.setState(0xe676, 0x14d6, 0xc020, 0x15a9, 0x3917, 0xb1c2, 0x0, 0x1);
        gbc.writeMem(0xe676, { 0x5b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x14d6, gbc.sp());
        EXPECT(0xe677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe676));
        // 5B 03BC
        gbc.setState(0x680f, 0x64e1, 0x480, 0x3ad5, 0x2905, 0xf256, 0x1, 0x1);
        gbc.writeMem(0x680f, { 0x5b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x64e1, gbc.sp());
        EXPECT(0x6810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03BD
        gbc.setState(0x3f5f, 0x879a, 0xd3f0, 0x349e, 0xc820, 0xf580, 0x0, 0x1);
        gbc.writeMem(0x3f5f, { 0x5b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x879a, gbc.sp());
        EXPECT(0x3f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03BE
        gbc.setState(0x7724, 0xf28f, 0xa460, 0x51f1, 0xf953, 0xa80, 0x0, 0x0);
        gbc.writeMem(0x7724, { 0x5b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf28f, gbc.sp());
        EXPECT(0x7725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03BF
        gbc.setState(0x6782, 0xf290, 0xa7d0, 0xcce8, 0xa921, 0x5a0b, 0x0, 0x0);
        gbc.writeMem(0x6782, { 0x5b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf290, gbc.sp());
        EXPECT(0x6783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03C1
        gbc.setState(0x832e, 0x295a, 0xc8a0, 0x149a, 0xaaee, 0x767f, 0x0, 0x0);
        gbc.writeMem(0x832e, { 0x5b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x295a, gbc.sp());
        EXPECT(0x832f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x832e));
        // 5B 03C2
        gbc.setState(0x41ea, 0xfd6e, 0x2570, 0xa9ed, 0xdfb9, 0x8e8, 0x0, 0x0);
        gbc.writeMem(0x41ea, { 0x5b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfd6e, gbc.sp());
        EXPECT(0x41eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03C3
        gbc.setState(0x7335, 0x8c0, 0x94c0, 0x6ce5, 0x62c, 0xf963, 0x0, 0x1);
        gbc.writeMem(0x7335, { 0x5b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8c0, gbc.sp());
        EXPECT(0x7336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03C4
        gbc.setState(0x8881, 0x5c7c, 0x97d0, 0x8533, 0x89b0, 0x7776, 0x1, 0x1);
        gbc.writeMem(0x8881, { 0x5b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5c7c, gbc.sp());
        EXPECT(0x8882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8881));
        // 5B 03C5
        gbc.setState(0x7746, 0xefe3, 0x8d60, 0xc328, 0xeaed, 0x42eb, 0x1, 0x1);
        gbc.writeMem(0x7746, { 0x5b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xefe3, gbc.sp());
        EXPECT(0x7747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03C6
        gbc.setState(0x92f2, 0x30d5, 0xcc00, 0xa98f, 0xb935, 0x4a7d, 0x1, 0x1);
        gbc.writeMem(0x92f2, { 0x5b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x30d5, gbc.sp());
        EXPECT(0x92f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x92f2));
        // 5B 03C7
        gbc.setState(0x527, 0x3a65, 0x2370, 0x6f80, 0xd40b, 0x9742, 0x0, 0x1);
        gbc.writeMem(0x527, { 0x5b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3a65, gbc.sp());
        EXPECT(0x528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03C8
        gbc.setState(0x2a32, 0x1a12, 0x1e00, 0x2c0b, 0xd0dc, 0x48d0, 0x1, 0x1);
        gbc.writeMem(0x2a32, { 0x5b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1a12, gbc.sp());
        EXPECT(0x2a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03C9
        gbc.setState(0x9e9b, 0x8036, 0x7600, 0xd5cb, 0x5d91, 0x98e, 0x1, 0x1);
        gbc.writeMem(0x9e9b, { 0x5b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8036, gbc.sp());
        EXPECT(0x9e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9e9b));
        // 5B 03CA
        gbc.setState(0xcf0a, 0x358e, 0x4940, 0x390c, 0x66ac, 0x3e7f, 0x0, 0x1);
        gbc.writeMem(0xcf0a, { 0x5b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x358e, gbc.sp());
        EXPECT(0xcf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcf0a));
        // 5B 03CB
        gbc.setState(0x2600, 0xd44b, 0xb560, 0xe1a7, 0x4e80, 0x10b5, 0x1, 0x1);
        gbc.writeMem(0x2600, { 0x5b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd44b, gbc.sp());
        EXPECT(0x2601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03CC
        gbc.setState(0x9322, 0x4ae1, 0x1bd0, 0xa223, 0x1a6b, 0x1262, 0x0, 0x0);
        gbc.writeMem(0x9322, { 0x5b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4ae1, gbc.sp());
        EXPECT(0x9323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9322));
        // 5B 03CD
        gbc.setState(0xc02c, 0x28df, 0x5580, 0xb717, 0xc1e9, 0xe596, 0x1, 0x1);
        gbc.writeMem(0xc02c, { 0x5b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x28df, gbc.sp());
        EXPECT(0xc02d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc02c));
        // 5B 03CE
        gbc.setState(0x7368, 0x2d40, 0x2df0, 0xa59, 0x5a98, 0xa2d8, 0x1, 0x1);
        gbc.writeMem(0x7368, { 0x5b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2d40, gbc.sp());
        EXPECT(0x7369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03CF
        gbc.setState(0x9772, 0x87d5, 0xa0f0, 0x85c2, 0x69e6, 0x8dca, 0x1, 0x0);
        gbc.writeMem(0x9772, { 0x5b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x87d5, gbc.sp());
        EXPECT(0x9773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9772));
        // 5B 03D0
        gbc.setState(0x7c9d, 0x8c07, 0x5e80, 0xf878, 0x41ef, 0x4b86, 0x0, 0x0);
        gbc.writeMem(0x7c9d, { 0x5b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8c07, gbc.sp());
        EXPECT(0x7c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03D2
        gbc.setState(0x95d6, 0x5151, 0xa780, 0x2331, 0xe960, 0x7380, 0x1, 0x0);
        gbc.writeMem(0x95d6, { 0x5b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5151, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x95d6));
        // 5B 03D3
        gbc.setState(0x64b3, 0x1447, 0x46f0, 0x2b2c, 0xe62e, 0x8255, 0x0, 0x1);
        gbc.writeMem(0x64b3, { 0x5b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1447, gbc.sp());
        EXPECT(0x64b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03D4
        gbc.setState(0xe236, 0x240b, 0x4650, 0x1c64, 0x5a20, 0x777f, 0x0, 0x1);
        gbc.writeMem(0xe236, { 0x5b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x240b, gbc.sp());
        EXPECT(0xe237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe236));
        // 5B 03D6
        gbc.setState(0x9493, 0xf4c3, 0xe60, 0xbbe5, 0x7768, 0x7eef, 0x0, 0x0);
        gbc.writeMem(0x9493, { 0x5b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf4c3, gbc.sp());
        EXPECT(0x9494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9493));
        // 5B 03D7
        gbc.setState(0x1283, 0x5696, 0x2ce0, 0x3fe6, 0x7086, 0xcf98, 0x1, 0x1);
        gbc.writeMem(0x1283, { 0x5b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5696, gbc.sp());
        EXPECT(0x1284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03D8
        gbc.setState(0x6ddf, 0x5394, 0x7020, 0xeeb9, 0x2718, 0xdda9, 0x1, 0x1);
        gbc.writeMem(0x6ddf, { 0x5b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5394, gbc.sp());
        EXPECT(0x6de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03D9
        gbc.setState(0x877f, 0x7bd4, 0x9320, 0x5565, 0x4973, 0x3521, 0x1, 0x0);
        gbc.writeMem(0x877f, { 0x5b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7bd4, gbc.sp());
        EXPECT(0x8780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x877f));
        // 5B 03DA
        gbc.setState(0x37cb, 0x6abf, 0x5b80, 0xa937, 0xa29d, 0x345b, 0x0, 0x1);
        gbc.writeMem(0x37cb, { 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6abf, gbc.sp());
        EXPECT(0x37cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03DB
        gbc.setState(0xcd2a, 0xd06e, 0x5830, 0xc68d, 0xa0ff, 0xfcb6, 0x0, 0x0);
        gbc.writeMem(0xcd2a, { 0x5b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd06e, gbc.sp());
        EXPECT(0xcd2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcd2a));
        // 5B 03DC
        gbc.setState(0x1d3f, 0xd4dc, 0xd450, 0x3211, 0xe0fd, 0x37d4, 0x0, 0x0);
        gbc.writeMem(0x1d3f, { 0x5b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd4dc, gbc.sp());
        EXPECT(0x1d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03DD
        gbc.setState(0x7ca9, 0xbd75, 0xed60, 0x3398, 0x1277, 0xef7d, 0x0, 0x0);
        gbc.writeMem(0x7ca9, { 0x5b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbd75, gbc.sp());
        EXPECT(0x7caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03DE
        gbc.setState(0xafe6, 0x5226, 0x3d0, 0x6f0c, 0xb5bd, 0xc61a, 0x1, 0x0);
        gbc.writeMem(0xafe6, { 0x5b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5226, gbc.sp());
        EXPECT(0xafe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xafe6));
        // 5B 03DF
        gbc.setState(0x676c, 0xc374, 0x35e0, 0xfcff, 0xa5ea, 0xb5b7, 0x0, 0x0);
        gbc.writeMem(0x676c, { 0x5b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc374, gbc.sp());
        EXPECT(0x676d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03E1
        gbc.setState(0x1195, 0x13ee, 0xc7e0, 0xec06, 0x210e, 0xcd05, 0x0, 0x0);
        gbc.writeMem(0x1195, { 0x5b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x13ee, gbc.sp());
        EXPECT(0x1196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03E2
        gbc.setState(0x59e0, 0xc23d, 0x6b0, 0x73f4, 0x212b, 0xa034, 0x0, 0x0);
        gbc.writeMem(0x59e0, { 0x5b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc23d, gbc.sp());
        EXPECT(0x59e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03E3
        gbc.setState(0x49d5, 0x51c7, 0xef30, 0x1a63, 0x5e19, 0x5ac, 0x0, 0x0);
        gbc.writeMem(0x49d5, { 0x5b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x51c7, gbc.sp());
        EXPECT(0x49d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5B 03E4
        gbc.setState(0x9bb5, 0x77eb, 0x2880, 0xfb2f, 0x8d54, 0xb504, 0x0, 0x0);
        gbc.writeMem(0x9bb5, { 0x5b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x77eb, gbc.sp());
        EXPECT(0x9bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9bb5));
        // 5B 03E5
        gbc.setState(0xd946, 0xfcb1, 0x5e10, 0x51f4, 0xdfd6, 0xf040, 0x0, 0x0);
        gbc.writeMem(0xd946, { 0x5b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfcb1, gbc.sp());
        EXPECT(0xd947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd946));
        // 5B 03E6
        gbc.setState(0x8a5, 0x54bc, 0x4400, 0x9958, 0xeedc, 0xa619, 0x1, 0x0);
        gbc.writeMem(0x8a5, { 0x5b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x54bc, gbc.sp());
        EXPECT(0x8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5B 03E7
        gbc.setState(0xccea, 0xbaab, 0x2300, 0xd66b, 0xf9e3, 0xae57, 0x0, 0x1);
        gbc.writeMem(0xccea, { 0x5b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbaab, gbc.sp());
        EXPECT(0xcceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xccea));
    }
