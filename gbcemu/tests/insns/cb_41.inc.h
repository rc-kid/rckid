    TEST(gbcemu, opcode_cb_41) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 41 0000
        gbc.setState(0xddec, 0xc8cc, 0x2c70, 0x9a89, 0x6b3f, 0xdef6, 0x0, 0x1);
        gbc.writeMem(0xddec, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc8cc, gbc.sp());
        EXPECT(0xddee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddec));
        EXPECT(0x41, gbc.readMem(0xdded));
        // CB 41 0001
        gbc.setState(0x9dd4, 0xd6d6, 0x9ad0, 0xa806, 0x485d, 0x8058, 0x0, 0x1);
        gbc.writeMem(0x9dd4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd6d6, gbc.sp());
        EXPECT(0x9dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd4));
        EXPECT(0x41, gbc.readMem(0x9dd5));
        // CB 41 0002
        gbc.setState(0x699b, 0x7103, 0x1480, 0x863b, 0xf85f, 0x7f8c, 0x1, 0x1);
        gbc.writeMem(0x699b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7103, gbc.sp());
        EXPECT(0x699d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0004
        gbc.setState(0x5e71, 0xcca6, 0x1d0, 0xdfb9, 0x100d, 0xc616, 0x0, 0x1);
        gbc.writeMem(0x5e71, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcca6, gbc.sp());
        EXPECT(0x5e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0005
        gbc.setState(0xcd83, 0x35dd, 0x41e0, 0x226d, 0x9679, 0xedb7, 0x0, 0x1);
        gbc.writeMem(0xcd83, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x35dd, gbc.sp());
        EXPECT(0xcd85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd83));
        EXPECT(0x41, gbc.readMem(0xcd84));
        // CB 41 0007
        gbc.setState(0x94f4, 0xba39, 0xe360, 0x36b9, 0xcd7c, 0x6ab6, 0x0, 0x1);
        gbc.writeMem(0x94f4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xba39, gbc.sp());
        EXPECT(0x94f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f4));
        EXPECT(0x41, gbc.readMem(0x94f5));
        // CB 41 0008
        gbc.setState(0xaf25, 0x7215, 0xdae0, 0xcd80, 0x9732, 0x9436, 0x1, 0x0);
        gbc.writeMem(0xaf25, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7215, gbc.sp());
        EXPECT(0xaf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf25));
        EXPECT(0x41, gbc.readMem(0xaf26));
        // CB 41 0009
        gbc.setState(0x9abb, 0x923e, 0x2210, 0x648, 0xcbe1, 0xa8ce, 0x1, 0x1);
        gbc.writeMem(0x9abb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x923e, gbc.sp());
        EXPECT(0x9abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abb));
        EXPECT(0x41, gbc.readMem(0x9abc));
        // CB 41 000A
        gbc.setState(0x6f80, 0x7e16, 0x15a0, 0x4eb7, 0x9e00, 0xf639, 0x0, 0x1);
        gbc.writeMem(0x6f80, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7e16, gbc.sp());
        EXPECT(0x6f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 000B
        gbc.setState(0x5352, 0x7315, 0x1960, 0x3fb3, 0x178a, 0x10be, 0x0, 0x1);
        gbc.writeMem(0x5352, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7315, gbc.sp());
        EXPECT(0x5354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 000C
        gbc.setState(0xd0df, 0xf6cb, 0x3c40, 0x556, 0x296, 0x41c4, 0x1, 0x1);
        gbc.writeMem(0xd0df, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf6cb, gbc.sp());
        EXPECT(0xd0e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0df));
        EXPECT(0x41, gbc.readMem(0xd0e0));
        // CB 41 000D
        gbc.setState(0xda42, 0x4612, 0x84a0, 0x9b24, 0x47ee, 0x6b3e, 0x1, 0x1);
        gbc.writeMem(0xda42, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4612, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda42));
        EXPECT(0x41, gbc.readMem(0xda43));
        // CB 41 000E
        gbc.setState(0x37b2, 0xd8d, 0x4be0, 0xb217, 0xdcaa, 0xf46a, 0x1, 0x0);
        gbc.writeMem(0x37b2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd8d, gbc.sp());
        EXPECT(0x37b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 000F
        gbc.setState(0x1476, 0x6ad0, 0x36e0, 0x8446, 0x9abb, 0x85ee, 0x1, 0x0);
        gbc.writeMem(0x1476, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6ad0, gbc.sp());
        EXPECT(0x1478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0010
        gbc.setState(0x9459, 0x6e52, 0x3dd0, 0xd07d, 0xb81e, 0xfe07, 0x0, 0x0);
        gbc.writeMem(0x9459, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6e52, gbc.sp());
        EXPECT(0x945b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9459));
        EXPECT(0x41, gbc.readMem(0x945a));
        // CB 41 0013
        gbc.setState(0xee0f, 0x32e1, 0x3a10, 0xa398, 0x2ae6, 0xb11a, 0x0, 0x0);
        gbc.writeMem(0xee0f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x32e1, gbc.sp());
        EXPECT(0xee11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0f));
        EXPECT(0x41, gbc.readMem(0xee10));
        // CB 41 0014
        gbc.setState(0xa4cc, 0x5dc1, 0x8e50, 0x7e2a, 0xbaab, 0xdf6a, 0x0, 0x1);
        gbc.writeMem(0xa4cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5dc1, gbc.sp());
        EXPECT(0xa4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4cc));
        EXPECT(0x41, gbc.readMem(0xa4cd));
        // CB 41 0015
        gbc.setState(0x56f4, 0x210d, 0xc570, 0x8c13, 0x8138, 0xaf98, 0x0, 0x0);
        gbc.writeMem(0x56f4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x210d, gbc.sp());
        EXPECT(0x56f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0016
        gbc.setState(0x7f6f, 0x2d15, 0xf260, 0xbd9d, 0x6b07, 0x4d7d, 0x1, 0x1);
        gbc.writeMem(0x7f6f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2d15, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0017
        gbc.setState(0x7369, 0x7468, 0xc890, 0xe65f, 0xa0cb, 0xc679, 0x1, 0x0);
        gbc.writeMem(0x7369, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7468, gbc.sp());
        EXPECT(0x736b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0018
        gbc.setState(0xd95b, 0x1626, 0x5030, 0xf02, 0xca1c, 0xf83a, 0x0, 0x1);
        gbc.writeMem(0xd95b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1626, gbc.sp());
        EXPECT(0xd95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95b));
        EXPECT(0x41, gbc.readMem(0xd95c));
        // CB 41 0019
        gbc.setState(0x3519, 0xed9, 0x1f50, 0xe165, 0x51d4, 0xcfe1, 0x0, 0x1);
        gbc.writeMem(0x3519, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xed9, gbc.sp());
        EXPECT(0x351b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 001A
        gbc.setState(0xe88e, 0xe00f, 0xf730, 0xaf72, 0xeeb8, 0x7e52, 0x0, 0x1);
        gbc.writeMem(0xe88e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe00f, gbc.sp());
        EXPECT(0xe890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88e));
        EXPECT(0x41, gbc.readMem(0xe88f));
        // CB 41 001B
        gbc.setState(0x9d9f, 0xd35d, 0xac00, 0x1531, 0x77ae, 0xcba9, 0x0, 0x0);
        gbc.writeMem(0x9d9f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd35d, gbc.sp());
        EXPECT(0x9da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9f));
        EXPECT(0x41, gbc.readMem(0x9da0));
        // CB 41 001C
        gbc.setState(0x8add, 0xf785, 0xc300, 0xb491, 0x42cb, 0x1bec, 0x0, 0x0);
        gbc.writeMem(0x8add, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf785, gbc.sp());
        EXPECT(0x8adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8add));
        EXPECT(0x41, gbc.readMem(0x8ade));
        // CB 41 001D
        gbc.setState(0x5cb6, 0xa131, 0xb330, 0xd804, 0x9fb7, 0x549e, 0x1, 0x0);
        gbc.writeMem(0x5cb6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa131, gbc.sp());
        EXPECT(0x5cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 001E
        gbc.setState(0xbefa, 0xbf2f, 0xc300, 0x2c7e, 0x4306, 0x75d9, 0x0, 0x0);
        gbc.writeMem(0xbefa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbf2f, gbc.sp());
        EXPECT(0xbefc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbefa));
        EXPECT(0x41, gbc.readMem(0xbefb));
        // CB 41 001F
        gbc.setState(0xe22b, 0x2ab8, 0x53f0, 0x2c32, 0x3796, 0x37e5, 0x0, 0x0);
        gbc.writeMem(0xe22b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2ab8, gbc.sp());
        EXPECT(0xe22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22b));
        EXPECT(0x41, gbc.readMem(0xe22c));
        // CB 41 0020
        gbc.setState(0xe68e, 0xed0a, 0x4e20, 0x4037, 0xbe10, 0xb84, 0x1, 0x1);
        gbc.writeMem(0xe68e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xed0a, gbc.sp());
        EXPECT(0xe690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68e));
        EXPECT(0x41, gbc.readMem(0xe68f));
        // CB 41 0021
        gbc.setState(0xc1ac, 0xb2ef, 0xd760, 0x47d1, 0x3723, 0xe24e, 0x1, 0x0);
        gbc.writeMem(0xc1ac, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb2ef, gbc.sp());
        EXPECT(0xc1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ac));
        EXPECT(0x41, gbc.readMem(0xc1ad));
        // CB 41 0022
        gbc.setState(0x28e6, 0x41a5, 0xc200, 0x3183, 0x63f0, 0xfa54, 0x1, 0x1);
        gbc.writeMem(0x28e6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x41a5, gbc.sp());
        EXPECT(0x28e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0023
        gbc.setState(0x592c, 0x9a84, 0x2a00, 0x534f, 0x1272, 0xc210, 0x1, 0x1);
        gbc.writeMem(0x592c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9a84, gbc.sp());
        EXPECT(0x592e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0024
        gbc.setState(0x4656, 0x2661, 0x410, 0x5cc3, 0xabf6, 0x80e2, 0x1, 0x0);
        gbc.writeMem(0x4656, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2661, gbc.sp());
        EXPECT(0x4658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0025
        gbc.setState(0x379d, 0xb0d1, 0xc3a0, 0x6d19, 0x3dd1, 0x42e1, 0x1, 0x0);
        gbc.writeMem(0x379d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb0d1, gbc.sp());
        EXPECT(0x379f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0026
        gbc.setState(0xec78, 0x5861, 0x3c30, 0x6a5f, 0x5faf, 0xb8b1, 0x1, 0x1);
        gbc.writeMem(0xec78, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5861, gbc.sp());
        EXPECT(0xec7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec78));
        EXPECT(0x41, gbc.readMem(0xec79));
        // CB 41 0027
        gbc.setState(0x1b8b, 0xefd9, 0x9810, 0x7f67, 0x369e, 0x6965, 0x0, 0x0);
        gbc.writeMem(0x1b8b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xefd9, gbc.sp());
        EXPECT(0x1b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0028
        gbc.setState(0xe33a, 0xf1ff, 0xd7b0, 0xe0ca, 0x5604, 0xde35, 0x0, 0x1);
        gbc.writeMem(0xe33a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf1ff, gbc.sp());
        EXPECT(0xe33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33a));
        EXPECT(0x41, gbc.readMem(0xe33b));
        // CB 41 0029
        gbc.setState(0x15a0, 0x2728, 0xeab0, 0xea54, 0x8725, 0x62d8, 0x1, 0x0);
        gbc.writeMem(0x15a0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2728, gbc.sp());
        EXPECT(0x15a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 002A
        gbc.setState(0xa7fa, 0x2aa2, 0x8ea0, 0xe1f9, 0xa884, 0x4285, 0x0, 0x1);
        gbc.writeMem(0xa7fa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2aa2, gbc.sp());
        EXPECT(0xa7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7fa));
        EXPECT(0x41, gbc.readMem(0xa7fb));
        // CB 41 002B
        gbc.setState(0x4c0a, 0xa410, 0x1bc0, 0x2829, 0x6d5f, 0x66ef, 0x1, 0x0);
        gbc.writeMem(0x4c0a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa410, gbc.sp());
        EXPECT(0x4c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 002D
        gbc.setState(0x733d, 0xaef, 0xa2e0, 0xe3f2, 0x8b4d, 0xa4fc, 0x1, 0x0);
        gbc.writeMem(0x733d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xaef, gbc.sp());
        EXPECT(0x733f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 002E
        gbc.setState(0x37f5, 0xe65b, 0xf830, 0xbbf9, 0xb10b, 0xb4f8, 0x0, 0x1);
        gbc.writeMem(0x37f5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe65b, gbc.sp());
        EXPECT(0x37f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 002F
        gbc.setState(0x1234, 0x38d0, 0x5280, 0x3d5d, 0x16a5, 0x7dae, 0x0, 0x0);
        gbc.writeMem(0x1234, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x38d0, gbc.sp());
        EXPECT(0x1236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0030
        gbc.setState(0xdad7, 0x63fd, 0xabc0, 0xa4d5, 0x11fb, 0x8f1c, 0x0, 0x0);
        gbc.writeMem(0xdad7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x63fd, gbc.sp());
        EXPECT(0xdad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad7));
        EXPECT(0x41, gbc.readMem(0xdad8));
        // CB 41 0031
        gbc.setState(0xd81d, 0xacb9, 0x8b90, 0xc63a, 0xe11b, 0xb3aa, 0x0, 0x1);
        gbc.writeMem(0xd81d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xacb9, gbc.sp());
        EXPECT(0xd81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81d));
        EXPECT(0x41, gbc.readMem(0xd81e));
        // CB 41 0032
        gbc.setState(0x4838, 0xa093, 0x490, 0xb569, 0x2fd7, 0x49eb, 0x1, 0x0);
        gbc.writeMem(0x4838, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa093, gbc.sp());
        EXPECT(0x483a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0033
        gbc.setState(0xfeb, 0xd47e, 0xa570, 0xd236, 0x1222, 0xb1bb, 0x0, 0x1);
        gbc.writeMem(0xfeb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd47e, gbc.sp());
        EXPECT(0xfed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0034
        gbc.setState(0x20f1, 0x89a3, 0x8520, 0x6c35, 0x1df9, 0x7449, 0x0, 0x0);
        gbc.writeMem(0x20f1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x89a3, gbc.sp());
        EXPECT(0x20f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0035
        gbc.setState(0x82b3, 0xac8f, 0xf220, 0x10bf, 0x728b, 0x1559, 0x0, 0x0);
        gbc.writeMem(0x82b3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xac8f, gbc.sp());
        EXPECT(0x82b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b3));
        EXPECT(0x41, gbc.readMem(0x82b4));
        // CB 41 0036
        gbc.setState(0x1c8c, 0x3c2c, 0xf260, 0x928a, 0x8d23, 0xf479, 0x0, 0x1);
        gbc.writeMem(0x1c8c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3c2c, gbc.sp());
        EXPECT(0x1c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0037
        gbc.setState(0x5496, 0x6391, 0x6860, 0xa286, 0xa6a9, 0x284, 0x1, 0x0);
        gbc.writeMem(0x5496, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6391, gbc.sp());
        EXPECT(0x5498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0038
        gbc.setState(0x3c53, 0xe818, 0x6980, 0x7c5b, 0xd9bd, 0x7b7f, 0x0, 0x1);
        gbc.writeMem(0x3c53, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe818, gbc.sp());
        EXPECT(0x3c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0039
        gbc.setState(0x532a, 0x3b23, 0xfdf0, 0x2627, 0xcf55, 0x5550, 0x0, 0x0);
        gbc.writeMem(0x532a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3b23, gbc.sp());
        EXPECT(0x532c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 003A
        gbc.setState(0xc593, 0x5821, 0xaab0, 0x321, 0xc49d, 0xd82e, 0x0, 0x0);
        gbc.writeMem(0xc593, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5821, gbc.sp());
        EXPECT(0xc595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc593));
        EXPECT(0x41, gbc.readMem(0xc594));
        // CB 41 003B
        gbc.setState(0x26b8, 0x34d3, 0x8b90, 0x6a2a, 0x68fa, 0xd25b, 0x0, 0x1);
        gbc.writeMem(0x26b8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x34d3, gbc.sp());
        EXPECT(0x26ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 003C
        gbc.setState(0x390e, 0x5eb4, 0x74a0, 0x4a3, 0x1041, 0xbe2d, 0x1, 0x0);
        gbc.writeMem(0x390e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5eb4, gbc.sp());
        EXPECT(0x3910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 003D
        gbc.setState(0xbb3d, 0x8931, 0x4a30, 0x5ef4, 0xafed, 0x9d7f, 0x1, 0x1);
        gbc.writeMem(0xbb3d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8931, gbc.sp());
        EXPECT(0xbb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb3d));
        EXPECT(0x41, gbc.readMem(0xbb3e));
        // CB 41 003E
        gbc.setState(0x118c, 0x50ef, 0xca70, 0xbd51, 0x608d, 0x157a, 0x0, 0x0);
        gbc.writeMem(0x118c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x50ef, gbc.sp());
        EXPECT(0x118e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 003F
        gbc.setState(0xbf29, 0xc05, 0x4bb0, 0xf6fe, 0x5de3, 0x1a05, 0x1, 0x0);
        gbc.writeMem(0xbf29, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc05, gbc.sp());
        EXPECT(0xbf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf29));
        EXPECT(0x41, gbc.readMem(0xbf2a));
        // CB 41 0040
        gbc.setState(0xa272, 0x60a7, 0x4930, 0xf123, 0xd779, 0xd036, 0x1, 0x1);
        gbc.writeMem(0xa272, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x60a7, gbc.sp());
        EXPECT(0xa274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa272));
        EXPECT(0x41, gbc.readMem(0xa273));
        // CB 41 0041
        gbc.setState(0x69ca, 0x6f2a, 0xc7c0, 0x8085, 0xe274, 0x34af, 0x0, 0x0);
        gbc.writeMem(0x69ca, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6f2a, gbc.sp());
        EXPECT(0x69cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0042
        gbc.setState(0x1800, 0x80f1, 0xd280, 0x3357, 0x94e3, 0x2c45, 0x0, 0x1);
        gbc.writeMem(0x1800, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x80f1, gbc.sp());
        EXPECT(0x1802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0043
        gbc.setState(0x9c5b, 0xe66d, 0x2680, 0xf97c, 0x3bca, 0xe533, 0x0, 0x0);
        gbc.writeMem(0x9c5b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe66d, gbc.sp());
        EXPECT(0x9c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c5b));
        EXPECT(0x41, gbc.readMem(0x9c5c));
        // CB 41 0044
        gbc.setState(0xb6b6, 0x67b8, 0x32a0, 0xf445, 0x6af3, 0x58a5, 0x1, 0x0);
        gbc.writeMem(0xb6b6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x67b8, gbc.sp());
        EXPECT(0xb6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b6));
        EXPECT(0x41, gbc.readMem(0xb6b7));
        // CB 41 0045
        gbc.setState(0x2416, 0x3789, 0x9970, 0x8fb5, 0x5529, 0x3cfc, 0x0, 0x1);
        gbc.writeMem(0x2416, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3789, gbc.sp());
        EXPECT(0x2418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0046
        gbc.setState(0xeb5, 0x69e5, 0xc990, 0xfca9, 0x4b74, 0xbed0, 0x1, 0x0);
        gbc.writeMem(0xeb5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x69e5, gbc.sp());
        EXPECT(0xeb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0047
        gbc.setState(0xd81d, 0xc3af, 0xc480, 0xcdfd, 0xabe9, 0xb4f, 0x0, 0x1);
        gbc.writeMem(0xd81d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc3af, gbc.sp());
        EXPECT(0xd81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81d));
        EXPECT(0x41, gbc.readMem(0xd81e));
        // CB 41 0048
        gbc.setState(0x4ffa, 0x245d, 0xd2d0, 0x1557, 0xb85c, 0xf703, 0x0, 0x1);
        gbc.writeMem(0x4ffa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x245d, gbc.sp());
        EXPECT(0x4ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0049
        gbc.setState(0x7444, 0x369f, 0xdf30, 0x1871, 0x4e6c, 0x58cd, 0x0, 0x0);
        gbc.writeMem(0x7444, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x369f, gbc.sp());
        EXPECT(0x7446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 004A
        gbc.setState(0x801d, 0x6104, 0x2f30, 0xeafd, 0xf71b, 0x7dfc, 0x1, 0x1);
        gbc.writeMem(0x801d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6104, gbc.sp());
        EXPECT(0x801f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801d));
        EXPECT(0x41, gbc.readMem(0x801e));
        // CB 41 004B
        gbc.setState(0xd790, 0xdddc, 0x1b30, 0x6040, 0x8998, 0xfb36, 0x1, 0x0);
        gbc.writeMem(0xd790, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdddc, gbc.sp());
        EXPECT(0xd792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd790));
        EXPECT(0x41, gbc.readMem(0xd791));
        // CB 41 004C
        gbc.setState(0x6db5, 0xe072, 0x2a90, 0x28ed, 0x68c7, 0xdece, 0x0, 0x1);
        gbc.writeMem(0x6db5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe072, gbc.sp());
        EXPECT(0x6db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 004D
        gbc.setState(0x88bd, 0x1d43, 0x3a20, 0x80e, 0xd6e1, 0xc49e, 0x0, 0x0);
        gbc.writeMem(0x88bd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1d43, gbc.sp());
        EXPECT(0x88bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88bd));
        EXPECT(0x41, gbc.readMem(0x88be));
        // CB 41 004E
        gbc.setState(0xb5a6, 0xd426, 0xe1e0, 0xffe9, 0xc394, 0xbdf4, 0x0, 0x0);
        gbc.writeMem(0xb5a6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd426, gbc.sp());
        EXPECT(0xb5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a6));
        EXPECT(0x41, gbc.readMem(0xb5a7));
        // CB 41 004F
        gbc.setState(0x837d, 0x54ca, 0x3d50, 0x7447, 0xa28, 0xc6df, 0x0, 0x0);
        gbc.writeMem(0x837d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x54ca, gbc.sp());
        EXPECT(0x837f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837d));
        EXPECT(0x41, gbc.readMem(0x837e));
        // CB 41 0051
        gbc.setState(0xc619, 0xc0d1, 0x55b0, 0xb7b4, 0xc0fc, 0x3151, 0x1, 0x1);
        gbc.writeMem(0xc619, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc0d1, gbc.sp());
        EXPECT(0xc61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc619));
        EXPECT(0x41, gbc.readMem(0xc61a));
        // CB 41 0052
        gbc.setState(0xb996, 0xd75c, 0x7580, 0x1517, 0x5001, 0x689b, 0x0, 0x0);
        gbc.writeMem(0xb996, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd75c, gbc.sp());
        EXPECT(0xb998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb996));
        EXPECT(0x41, gbc.readMem(0xb997));
        // CB 41 0053
        gbc.setState(0x74b1, 0x8514, 0x6f90, 0xd244, 0xc034, 0x4a53, 0x0, 0x1);
        gbc.writeMem(0x74b1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8514, gbc.sp());
        EXPECT(0x74b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0054
        gbc.setState(0x24b1, 0x5f1a, 0xa8d0, 0xb589, 0x6b61, 0xdba3, 0x0, 0x0);
        gbc.writeMem(0x24b1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5f1a, gbc.sp());
        EXPECT(0x24b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0055
        gbc.setState(0x8ae5, 0x28a4, 0x5e0, 0x7264, 0x6822, 0x298, 0x1, 0x0);
        gbc.writeMem(0x8ae5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x28a4, gbc.sp());
        EXPECT(0x8ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae5));
        EXPECT(0x41, gbc.readMem(0x8ae6));
        // CB 41 0056
        gbc.setState(0x9e4b, 0x828a, 0xb8f0, 0xf8ca, 0xc6f, 0x3005, 0x0, 0x1);
        gbc.writeMem(0x9e4b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x828a, gbc.sp());
        EXPECT(0x9e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4b));
        EXPECT(0x41, gbc.readMem(0x9e4c));
        // CB 41 0058
        gbc.setState(0x152a, 0xcd43, 0x79c0, 0x8e0a, 0x7016, 0x508, 0x1, 0x1);
        gbc.writeMem(0x152a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcd43, gbc.sp());
        EXPECT(0x152c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0059
        gbc.setState(0x1016, 0xd49, 0x9ae0, 0x6905, 0x3803, 0x139f, 0x1, 0x1);
        gbc.writeMem(0x1016, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd49, gbc.sp());
        EXPECT(0x1018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 005A
        gbc.setState(0x922c, 0xe44f, 0xfe10, 0x7e6, 0x46c, 0x89d3, 0x1, 0x1);
        gbc.writeMem(0x922c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe44f, gbc.sp());
        EXPECT(0x922e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922c));
        EXPECT(0x41, gbc.readMem(0x922d));
        // CB 41 005B
        gbc.setState(0x25bc, 0xafaa, 0xb300, 0x4a, 0xc864, 0x8915, 0x1, 0x0);
        gbc.writeMem(0x25bc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xafaa, gbc.sp());
        EXPECT(0x25be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 005C
        gbc.setState(0x4a25, 0x68df, 0x53a0, 0x96f6, 0xfc88, 0x648c, 0x0, 0x0);
        gbc.writeMem(0x4a25, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x68df, gbc.sp());
        EXPECT(0x4a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 005D
        gbc.setState(0x2218, 0x796b, 0x36e0, 0xfca4, 0x1a18, 0x72d1, 0x1, 0x1);
        gbc.writeMem(0x2218, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x796b, gbc.sp());
        EXPECT(0x221a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 005E
        gbc.setState(0xd51, 0x37bb, 0x8950, 0x6322, 0xd5b5, 0xbebc, 0x0, 0x1);
        gbc.writeMem(0xd51, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x37bb, gbc.sp());
        EXPECT(0xd53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 005F
        gbc.setState(0x6540, 0x4a61, 0xef0, 0xe8b4, 0x5850, 0xfdc2, 0x1, 0x1);
        gbc.writeMem(0x6540, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4a61, gbc.sp());
        EXPECT(0x6542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0060
        gbc.setState(0xa2d5, 0x970b, 0x8a20, 0x814d, 0x9e73, 0x5990, 0x1, 0x0);
        gbc.writeMem(0xa2d5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x970b, gbc.sp());
        EXPECT(0xa2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d5));
        EXPECT(0x41, gbc.readMem(0xa2d6));
        // CB 41 0061
        gbc.setState(0x945b, 0x698f, 0xa2c0, 0x61c9, 0x4be5, 0xf68, 0x0, 0x0);
        gbc.writeMem(0x945b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x698f, gbc.sp());
        EXPECT(0x945d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945b));
        EXPECT(0x41, gbc.readMem(0x945c));
        // CB 41 0062
        gbc.setState(0xe706, 0xe2ae, 0x19f0, 0xc102, 0xc0a4, 0xb299, 0x1, 0x0);
        gbc.writeMem(0xe706, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe2ae, gbc.sp());
        EXPECT(0xe708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe706));
        EXPECT(0x41, gbc.readMem(0xe707));
        // CB 41 0063
        gbc.setState(0xa61f, 0x6b7c, 0x24f0, 0x48dc, 0x2391, 0xea62, 0x1, 0x0);
        gbc.writeMem(0xa61f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6b7c, gbc.sp());
        EXPECT(0xa621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61f));
        EXPECT(0x41, gbc.readMem(0xa620));
        // CB 41 0064
        gbc.setState(0x7aa8, 0x1156, 0x93d0, 0xd2d0, 0x8579, 0x6fe4, 0x1, 0x1);
        gbc.writeMem(0x7aa8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1156, gbc.sp());
        EXPECT(0x7aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0065
        gbc.setState(0x32ac, 0x7467, 0x9b00, 0xb17f, 0xf5b0, 0xd3fc, 0x1, 0x1);
        gbc.writeMem(0x32ac, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7467, gbc.sp());
        EXPECT(0x32ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0066
        gbc.setState(0xe101, 0x8591, 0xcf60, 0x3c5f, 0x4fb8, 0xcd24, 0x1, 0x1);
        gbc.writeMem(0xe101, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8591, gbc.sp());
        EXPECT(0xe103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe101));
        EXPECT(0x41, gbc.readMem(0xe102));
        // CB 41 0067
        gbc.setState(0x1dc6, 0x3610, 0xa370, 0x53be, 0x6b47, 0xa668, 0x1, 0x1);
        gbc.writeMem(0x1dc6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3610, gbc.sp());
        EXPECT(0x1dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0068
        gbc.setState(0xa7f6, 0x997, 0x9e60, 0xe3e3, 0x4f96, 0xa084, 0x0, 0x0);
        gbc.writeMem(0xa7f6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x997, gbc.sp());
        EXPECT(0xa7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f6));
        EXPECT(0x41, gbc.readMem(0xa7f7));
        // CB 41 0069
        gbc.setState(0x8ddd, 0x3912, 0xaed0, 0x3489, 0xe69b, 0x9cf2, 0x1, 0x0);
        gbc.writeMem(0x8ddd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3912, gbc.sp());
        EXPECT(0x8ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ddd));
        EXPECT(0x41, gbc.readMem(0x8dde));
        // CB 41 006A
        gbc.setState(0xe437, 0xeab8, 0x5440, 0x5730, 0xba67, 0x5ada, 0x0, 0x1);
        gbc.writeMem(0xe437, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xeab8, gbc.sp());
        EXPECT(0xe439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe437));
        EXPECT(0x41, gbc.readMem(0xe438));
        // CB 41 006B
        gbc.setState(0x267d, 0xc50e, 0x73f0, 0xf3a3, 0x90cf, 0x2123, 0x1, 0x0);
        gbc.writeMem(0x267d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc50e, gbc.sp());
        EXPECT(0x267f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 006C
        gbc.setState(0xa78d, 0xbf15, 0xbd50, 0x7a82, 0xfeed, 0xc31a, 0x0, 0x0);
        gbc.writeMem(0xa78d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbf15, gbc.sp());
        EXPECT(0xa78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa78d));
        EXPECT(0x41, gbc.readMem(0xa78e));
        // CB 41 006D
        gbc.setState(0x8841, 0xc47b, 0x40e0, 0xa5f1, 0xbfcc, 0x560, 0x1, 0x0);
        gbc.writeMem(0x8841, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc47b, gbc.sp());
        EXPECT(0x8843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8841));
        EXPECT(0x41, gbc.readMem(0x8842));
        // CB 41 006E
        gbc.setState(0xa9cf, 0x6526, 0x8640, 0x1b94, 0x5b46, 0xc588, 0x1, 0x0);
        gbc.writeMem(0xa9cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6526, gbc.sp());
        EXPECT(0xa9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cf));
        EXPECT(0x41, gbc.readMem(0xa9d0));
        // CB 41 006F
        gbc.setState(0xe7e3, 0xccd1, 0x8270, 0x69ba, 0x5f24, 0x76f7, 0x1, 0x0);
        gbc.writeMem(0xe7e3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xccd1, gbc.sp());
        EXPECT(0xe7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e3));
        EXPECT(0x41, gbc.readMem(0xe7e4));
        // CB 41 0070
        gbc.setState(0x6508, 0x33ae, 0x6610, 0x3cf7, 0x7a2a, 0x81ec, 0x0, 0x1);
        gbc.writeMem(0x6508, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x33ae, gbc.sp());
        EXPECT(0x650a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0071
        gbc.setState(0x3f5b, 0x4f0f, 0x95b0, 0x88e3, 0xe6ae, 0xf16f, 0x1, 0x1);
        gbc.writeMem(0x3f5b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4f0f, gbc.sp());
        EXPECT(0x3f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0072
        gbc.setState(0x5b64, 0xb77e, 0x1eb0, 0x35e7, 0x421a, 0x3f9e, 0x0, 0x1);
        gbc.writeMem(0x5b64, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb77e, gbc.sp());
        EXPECT(0x5b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0075
        gbc.setState(0x3ab1, 0x7c7b, 0xc570, 0xe20e, 0xced5, 0x12ee, 0x1, 0x1);
        gbc.writeMem(0x3ab1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7c7b, gbc.sp());
        EXPECT(0x3ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0076
        gbc.setState(0xce29, 0x7e80, 0x55c0, 0x6e48, 0xaee, 0x2948, 0x0, 0x0);
        gbc.writeMem(0xce29, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7e80, gbc.sp());
        EXPECT(0xce2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce29));
        EXPECT(0x41, gbc.readMem(0xce2a));
        // CB 41 0077
        gbc.setState(0x4c09, 0x1e36, 0x2120, 0x7df0, 0xa824, 0x2315, 0x1, 0x0);
        gbc.writeMem(0x4c09, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1e36, gbc.sp());
        EXPECT(0x4c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0078
        gbc.setState(0x884e, 0xf3de, 0xe1f0, 0xf96d, 0x3550, 0xb9cc, 0x0, 0x1);
        gbc.writeMem(0x884e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf3de, gbc.sp());
        EXPECT(0x8850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884e));
        EXPECT(0x41, gbc.readMem(0x884f));
        // CB 41 0079
        gbc.setState(0x7ff0, 0x916d, 0xf0a0, 0xe4cc, 0x2422, 0xd875, 0x0, 0x1);
        gbc.writeMem(0x7ff0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x916d, gbc.sp());
        EXPECT(0x7ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 007A
        gbc.setState(0x4a7d, 0xaf24, 0x8830, 0xf0b, 0x2331, 0xbd00, 0x0, 0x1);
        gbc.writeMem(0x4a7d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaf24, gbc.sp());
        EXPECT(0x4a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 007B
        gbc.setState(0x9ebd, 0x744a, 0x8810, 0xa11e, 0xc88d, 0x27c7, 0x0, 0x1);
        gbc.writeMem(0x9ebd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x744a, gbc.sp());
        EXPECT(0x9ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebd));
        EXPECT(0x41, gbc.readMem(0x9ebe));
        // CB 41 007C
        gbc.setState(0xb4c5, 0x93f9, 0x14f0, 0xeee8, 0x1f88, 0xf002, 0x0, 0x1);
        gbc.writeMem(0xb4c5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x93f9, gbc.sp());
        EXPECT(0xb4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c5));
        EXPECT(0x41, gbc.readMem(0xb4c6));
        // CB 41 007D
        gbc.setState(0xe2bf, 0xac4f, 0xca90, 0x649b, 0x98e8, 0xe100, 0x1, 0x1);
        gbc.writeMem(0xe2bf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xac4f, gbc.sp());
        EXPECT(0xe2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2bf));
        EXPECT(0x41, gbc.readMem(0xe2c0));
        // CB 41 007E
        gbc.setState(0xab2b, 0x4d38, 0x8e50, 0x1a12, 0xfac3, 0xad07, 0x1, 0x0);
        gbc.writeMem(0xab2b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4d38, gbc.sp());
        EXPECT(0xab2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2b));
        EXPECT(0x41, gbc.readMem(0xab2c));
        // CB 41 007F
        gbc.setState(0x5af6, 0x118c, 0x5580, 0xc91d, 0x9dfe, 0xd3f7, 0x0, 0x1);
        gbc.writeMem(0x5af6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x118c, gbc.sp());
        EXPECT(0x5af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0080
        gbc.setState(0x2a38, 0xabe5, 0x3250, 0x8f37, 0xe591, 0xa24, 0x0, 0x0);
        gbc.writeMem(0x2a38, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xabe5, gbc.sp());
        EXPECT(0x2a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0081
        gbc.setState(0x9db2, 0x64b4, 0xc5c0, 0x201b, 0x6e01, 0xd98b, 0x1, 0x0);
        gbc.writeMem(0x9db2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x64b4, gbc.sp());
        EXPECT(0x9db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db2));
        EXPECT(0x41, gbc.readMem(0x9db3));
        // CB 41 0082
        gbc.setState(0x4d96, 0xfd3d, 0xfe00, 0x3dbc, 0x9645, 0x237d, 0x0, 0x1);
        gbc.writeMem(0x4d96, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfd3d, gbc.sp());
        EXPECT(0x4d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0083
        gbc.setState(0x996f, 0x39f2, 0xf000, 0x52e8, 0x5c90, 0x8199, 0x1, 0x0);
        gbc.writeMem(0x996f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x39f2, gbc.sp());
        EXPECT(0x9971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996f));
        EXPECT(0x41, gbc.readMem(0x9970));
        // CB 41 0084
        gbc.setState(0x2eae, 0x53b7, 0xce0, 0x3276, 0x310d, 0x90a2, 0x1, 0x1);
        gbc.writeMem(0x2eae, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x53b7, gbc.sp());
        EXPECT(0x2eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0085
        gbc.setState(0x6a6a, 0x5867, 0x6fb0, 0xf0ae, 0xa01f, 0xe260, 0x1, 0x0);
        gbc.writeMem(0x6a6a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5867, gbc.sp());
        EXPECT(0x6a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0086
        gbc.setState(0x92c1, 0xec6d, 0x6e70, 0x7e74, 0xf9b0, 0x5ec7, 0x1, 0x0);
        gbc.writeMem(0x92c1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xec6d, gbc.sp());
        EXPECT(0x92c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c1));
        EXPECT(0x41, gbc.readMem(0x92c2));
        // CB 41 0088
        gbc.setState(0x3d67, 0x5383, 0x3eb0, 0x19ec, 0xac21, 0x5e17, 0x0, 0x1);
        gbc.writeMem(0x3d67, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5383, gbc.sp());
        EXPECT(0x3d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0089
        gbc.setState(0x43a3, 0xe5b9, 0x4160, 0xa330, 0x612, 0x1cc8, 0x1, 0x1);
        gbc.writeMem(0x43a3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe5b9, gbc.sp());
        EXPECT(0x43a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 008A
        gbc.setState(0x3687, 0x3d80, 0x80f0, 0x5cfb, 0x4a5c, 0x493c, 0x0, 0x0);
        gbc.writeMem(0x3687, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3d80, gbc.sp());
        EXPECT(0x3689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 008B
        gbc.setState(0xb94f, 0x73d2, 0x1d90, 0xf842, 0xe362, 0x65d2, 0x1, 0x1);
        gbc.writeMem(0xb94f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x73d2, gbc.sp());
        EXPECT(0xb951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94f));
        EXPECT(0x41, gbc.readMem(0xb950));
        // CB 41 008C
        gbc.setState(0x221a, 0x2d11, 0x9030, 0xce6, 0x7d4a, 0x1230, 0x0, 0x0);
        gbc.writeMem(0x221a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2d11, gbc.sp());
        EXPECT(0x221c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 008D
        gbc.setState(0x4af5, 0x3a6e, 0x7fe0, 0x8a1e, 0x6c46, 0x3cff, 0x1, 0x1);
        gbc.writeMem(0x4af5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3a6e, gbc.sp());
        EXPECT(0x4af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 008E
        gbc.setState(0x2c36, 0x133, 0xed60, 0xb3fb, 0x2300, 0x261c, 0x1, 0x0);
        gbc.writeMem(0x2c36, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x133, gbc.sp());
        EXPECT(0x2c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 008F
        gbc.setState(0xdc78, 0x1c5f, 0xa3f0, 0xf17e, 0x42da, 0x3998, 0x1, 0x1);
        gbc.writeMem(0xdc78, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1c5f, gbc.sp());
        EXPECT(0xdc7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc78));
        EXPECT(0x41, gbc.readMem(0xdc79));
        // CB 41 0090
        gbc.setState(0xa529, 0xed03, 0xfb30, 0xfbec, 0x41d7, 0x4a90, 0x0, 0x1);
        gbc.writeMem(0xa529, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xed03, gbc.sp());
        EXPECT(0xa52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa529));
        EXPECT(0x41, gbc.readMem(0xa52a));
        // CB 41 0091
        gbc.setState(0xe584, 0xae43, 0xe8f0, 0x5fe, 0xd9c1, 0x5bf8, 0x0, 0x0);
        gbc.writeMem(0xe584, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xae43, gbc.sp());
        EXPECT(0xe586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe584));
        EXPECT(0x41, gbc.readMem(0xe585));
        // CB 41 0092
        gbc.setState(0xbd95, 0x7b3f, 0x8fc0, 0x45cd, 0xcd59, 0x1391, 0x0, 0x1);
        gbc.writeMem(0xbd95, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7b3f, gbc.sp());
        EXPECT(0xbd97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd95));
        EXPECT(0x41, gbc.readMem(0xbd96));
        // CB 41 0093
        gbc.setState(0xc3dd, 0xd44d, 0x2910, 0xc075, 0xf6e2, 0x99f9, 0x1, 0x0);
        gbc.writeMem(0xc3dd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd44d, gbc.sp());
        EXPECT(0xc3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3dd));
        EXPECT(0x41, gbc.readMem(0xc3de));
        // CB 41 0094
        gbc.setState(0xfb9, 0xb954, 0x2560, 0x7724, 0xffa6, 0x9643, 0x0, 0x0);
        gbc.writeMem(0xfb9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb954, gbc.sp());
        EXPECT(0xfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0095
        gbc.setState(0xa99f, 0xd5b8, 0x88d0, 0x11ee, 0x648, 0x3232, 0x0, 0x1);
        gbc.writeMem(0xa99f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd5b8, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99f));
        EXPECT(0x41, gbc.readMem(0xa9a0));
        // CB 41 0096
        gbc.setState(0x5695, 0x4046, 0xc860, 0x4883, 0xccea, 0x2220, 0x1, 0x1);
        gbc.writeMem(0x5695, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4046, gbc.sp());
        EXPECT(0x5697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0097
        gbc.setState(0x2afa, 0xe114, 0xc8d0, 0xee27, 0xb04f, 0x86, 0x0, 0x1);
        gbc.writeMem(0x2afa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe114, gbc.sp());
        EXPECT(0x2afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0098
        gbc.setState(0x3a47, 0xaef5, 0x78f0, 0x5ff, 0x32b3, 0x3216, 0x1, 0x1);
        gbc.writeMem(0x3a47, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaef5, gbc.sp());
        EXPECT(0x3a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0099
        gbc.setState(0xcf2, 0xfcb0, 0x4d40, 0xab67, 0x9, 0x30a6, 0x1, 0x1);
        gbc.writeMem(0xcf2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfcb0, gbc.sp());
        EXPECT(0xcf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 009A
        gbc.setState(0x1bc7, 0xc0f, 0xda70, 0x797d, 0xc54f, 0x7216, 0x1, 0x0);
        gbc.writeMem(0x1bc7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc0f, gbc.sp());
        EXPECT(0x1bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 009C
        gbc.setState(0x2c91, 0x7618, 0x4610, 0x98c1, 0xb8b2, 0x9822, 0x1, 0x0);
        gbc.writeMem(0x2c91, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7618, gbc.sp());
        EXPECT(0x2c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 009D
        gbc.setState(0x5d56, 0x9263, 0xc970, 0xa52b, 0xdc99, 0xe43d, 0x1, 0x0);
        gbc.writeMem(0x5d56, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9263, gbc.sp());
        EXPECT(0x5d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 009E
        gbc.setState(0xc84c, 0x4574, 0xe190, 0x26fd, 0xccb1, 0xdc6b, 0x1, 0x0);
        gbc.writeMem(0xc84c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4574, gbc.sp());
        EXPECT(0xc84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84c));
        EXPECT(0x41, gbc.readMem(0xc84d));
        // CB 41 009F
        gbc.setState(0x23cf, 0xf827, 0x1710, 0xa920, 0x8711, 0xac2c, 0x1, 0x1);
        gbc.writeMem(0x23cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf827, gbc.sp());
        EXPECT(0x23d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00A0
        gbc.setState(0x561f, 0x4af2, 0x1f30, 0x529e, 0x72f9, 0x4207, 0x1, 0x0);
        gbc.writeMem(0x561f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4af2, gbc.sp());
        EXPECT(0x5621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00A1
        gbc.setState(0x4582, 0xec4f, 0xef30, 0x2f15, 0xfdea, 0x586a, 0x0, 0x1);
        gbc.writeMem(0x4582, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xec4f, gbc.sp());
        EXPECT(0x4584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00A2
        gbc.setState(0x6004, 0x81d, 0xd180, 0x352d, 0x51d, 0x15cb, 0x0, 0x0);
        gbc.writeMem(0x6004, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x81d, gbc.sp());
        EXPECT(0x6006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00A3
        gbc.setState(0x60c2, 0xf9dc, 0x1b80, 0xff67, 0x32fd, 0x1c5, 0x1, 0x1);
        gbc.writeMem(0x60c2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf9dc, gbc.sp());
        EXPECT(0x60c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00A4
        gbc.setState(0xe458, 0x22be, 0x8e80, 0xdf6e, 0x75d4, 0xdd8, 0x1, 0x0);
        gbc.writeMem(0xe458, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x22be, gbc.sp());
        EXPECT(0xe45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe458));
        EXPECT(0x41, gbc.readMem(0xe459));
        // CB 41 00A5
        gbc.setState(0x89a9, 0xeb80, 0x1060, 0xdcd1, 0xffc4, 0xfd48, 0x0, 0x1);
        gbc.writeMem(0x89a9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xeb80, gbc.sp());
        EXPECT(0x89ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a9));
        EXPECT(0x41, gbc.readMem(0x89aa));
        // CB 41 00A6
        gbc.setState(0x34fc, 0x42fd, 0xfd60, 0xe821, 0x67fa, 0xf01e, 0x1, 0x0);
        gbc.writeMem(0x34fc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x42fd, gbc.sp());
        EXPECT(0x34fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00A7
        gbc.setState(0x5321, 0x15ac, 0x7ac0, 0x77c1, 0x417d, 0x4a1, 0x0, 0x0);
        gbc.writeMem(0x5321, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x15ac, gbc.sp());
        EXPECT(0x5323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00A8
        gbc.setState(0xc86c, 0x6c33, 0xf5a0, 0x478c, 0xc977, 0x9887, 0x1, 0x0);
        gbc.writeMem(0xc86c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6c33, gbc.sp());
        EXPECT(0xc86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc86c));
        EXPECT(0x41, gbc.readMem(0xc86d));
        // CB 41 00A9
        gbc.setState(0x8567, 0xa4b3, 0x55b0, 0xc1ac, 0x5cd7, 0xc63, 0x1, 0x1);
        gbc.writeMem(0x8567, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa4b3, gbc.sp());
        EXPECT(0x8569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8567));
        EXPECT(0x41, gbc.readMem(0x8568));
        // CB 41 00AA
        gbc.setState(0x3106, 0x80fc, 0x5f80, 0x3f7a, 0xfffd, 0x813d, 0x0, 0x1);
        gbc.writeMem(0x3106, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x80fc, gbc.sp());
        EXPECT(0x3108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00AB
        gbc.setState(0x18e8, 0x857f, 0x10, 0x6d0f, 0xc1c, 0x7f9d, 0x1, 0x0);
        gbc.writeMem(0x18e8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x857f, gbc.sp());
        EXPECT(0x18ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00AC
        gbc.setState(0x4b32, 0xc748, 0xc490, 0x529b, 0x9f5c, 0xeff1, 0x1, 0x1);
        gbc.writeMem(0x4b32, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc748, gbc.sp());
        EXPECT(0x4b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00AD
        gbc.setState(0xb502, 0x67c, 0x9370, 0x339d, 0x586f, 0x3dae, 0x1, 0x0);
        gbc.writeMem(0xb502, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x67c, gbc.sp());
        EXPECT(0xb504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb502));
        EXPECT(0x41, gbc.readMem(0xb503));
        // CB 41 00AE
        gbc.setState(0xad15, 0x1d54, 0x60e0, 0x82af, 0x40d, 0x3dce, 0x1, 0x1);
        gbc.writeMem(0xad15, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1d54, gbc.sp());
        EXPECT(0xad17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad15));
        EXPECT(0x41, gbc.readMem(0xad16));
        // CB 41 00AF
        gbc.setState(0x6fed, 0x3833, 0x7b40, 0x8585, 0x63b1, 0x6d97, 0x0, 0x1);
        gbc.writeMem(0x6fed, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3833, gbc.sp());
        EXPECT(0x6fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00B1
        gbc.setState(0x3e36, 0x85d9, 0x9200, 0xe9a1, 0xab1f, 0xf06c, 0x0, 0x0);
        gbc.writeMem(0x3e36, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x85d9, gbc.sp());
        EXPECT(0x3e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00B2
        gbc.setState(0x2665, 0x66bb, 0x1bb0, 0x6fd7, 0xcffc, 0xd467, 0x1, 0x1);
        gbc.writeMem(0x2665, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x66bb, gbc.sp());
        EXPECT(0x2667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00B3
        gbc.setState(0x5ecc, 0x8cd1, 0x76d0, 0xf82, 0xd4cf, 0x5aa6, 0x0, 0x1);
        gbc.writeMem(0x5ecc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8cd1, gbc.sp());
        EXPECT(0x5ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00B4
        gbc.setState(0x974c, 0x7916, 0x4de0, 0xcb16, 0x9daa, 0x2cfe, 0x0, 0x0);
        gbc.writeMem(0x974c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7916, gbc.sp());
        EXPECT(0x974e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x974c));
        EXPECT(0x41, gbc.readMem(0x974d));
        // CB 41 00B5
        gbc.setState(0x8d29, 0xb14f, 0xd8f0, 0x12b6, 0x2daf, 0x5dba, 0x0, 0x1);
        gbc.writeMem(0x8d29, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb14f, gbc.sp());
        EXPECT(0x8d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d29));
        EXPECT(0x41, gbc.readMem(0x8d2a));
        // CB 41 00B6
        gbc.setState(0xa09c, 0xfeda, 0xf850, 0xb74a, 0x3b2, 0x714, 0x1, 0x1);
        gbc.writeMem(0xa09c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfeda, gbc.sp());
        EXPECT(0xa09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09c));
        EXPECT(0x41, gbc.readMem(0xa09d));
        // CB 41 00B7
        gbc.setState(0x32b7, 0xf104, 0x5690, 0xf61e, 0x56a7, 0xcf06, 0x0, 0x0);
        gbc.writeMem(0x32b7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf104, gbc.sp());
        EXPECT(0x32b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00B8
        gbc.setState(0x14e5, 0xa4d8, 0xcc60, 0xb612, 0x9d40, 0x2c49, 0x1, 0x0);
        gbc.writeMem(0x14e5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa4d8, gbc.sp());
        EXPECT(0x14e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00BA
        gbc.setState(0x3254, 0x79b, 0x9990, 0xfd4e, 0x5087, 0x4370, 0x0, 0x0);
        gbc.writeMem(0x3254, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x79b, gbc.sp());
        EXPECT(0x3256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00BB
        gbc.setState(0x507b, 0x2bb9, 0xd850, 0xf70f, 0x5fa5, 0x693, 0x1, 0x0);
        gbc.writeMem(0x507b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2bb9, gbc.sp());
        EXPECT(0x507d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00BC
        gbc.setState(0x9bf6, 0xd40, 0x5ce0, 0xd8e9, 0x1ec5, 0x18be, 0x1, 0x1);
        gbc.writeMem(0x9bf6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd40, gbc.sp());
        EXPECT(0x9bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf6));
        EXPECT(0x41, gbc.readMem(0x9bf7));
        // CB 41 00BE
        gbc.setState(0x4d5a, 0xc54f, 0x6590, 0xee17, 0xd089, 0x772d, 0x0, 0x0);
        gbc.writeMem(0x4d5a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc54f, gbc.sp());
        EXPECT(0x4d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00BF
        gbc.setState(0x5f98, 0xc436, 0xe8b0, 0x8fdc, 0xe332, 0x8da, 0x1, 0x1);
        gbc.writeMem(0x5f98, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc436, gbc.sp());
        EXPECT(0x5f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00C0
        gbc.setState(0xd188, 0xad47, 0x1e40, 0xc955, 0xd4c3, 0x3aff, 0x0, 0x0);
        gbc.writeMem(0xd188, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xad47, gbc.sp());
        EXPECT(0xd18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd188));
        EXPECT(0x41, gbc.readMem(0xd189));
        // CB 41 00C1
        gbc.setState(0xd340, 0xcf32, 0x2cd0, 0xc00c, 0xa3a6, 0x7b84, 0x0, 0x0);
        gbc.writeMem(0xd340, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcf32, gbc.sp());
        EXPECT(0xd342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd340));
        EXPECT(0x41, gbc.readMem(0xd341));
        // CB 41 00C2
        gbc.setState(0x68bd, 0xbaa9, 0x88e0, 0xd8f1, 0x60ac, 0x3e37, 0x0, 0x0);
        gbc.writeMem(0x68bd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbaa9, gbc.sp());
        EXPECT(0x68bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00C3
        gbc.setState(0x43c, 0x2506, 0x18b0, 0xd406, 0xefb0, 0xb01e, 0x1, 0x1);
        gbc.writeMem(0x43c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2506, gbc.sp());
        EXPECT(0x43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00C4
        gbc.setState(0x5422, 0x2, 0xe560, 0xdf0a, 0x5a98, 0x2de2, 0x1, 0x0);
        gbc.writeMem(0x5422, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2, gbc.sp());
        EXPECT(0x5424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00C5
        gbc.setState(0xbb78, 0x1f29, 0xa590, 0x17bf, 0x5fd2, 0x20c1, 0x1, 0x0);
        gbc.writeMem(0xbb78, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1f29, gbc.sp());
        EXPECT(0xbb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb78));
        EXPECT(0x41, gbc.readMem(0xbb79));
        // CB 41 00C6
        gbc.setState(0x9acc, 0xf1c2, 0x8bc0, 0x35de, 0x6653, 0xc010, 0x0, 0x0);
        gbc.writeMem(0x9acc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf1c2, gbc.sp());
        EXPECT(0x9ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9acc));
        EXPECT(0x41, gbc.readMem(0x9acd));
        // CB 41 00C7
        gbc.setState(0xd207, 0xad98, 0x2c0, 0x701d, 0xacc9, 0xd6a7, 0x0, 0x0);
        gbc.writeMem(0xd207, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xad98, gbc.sp());
        EXPECT(0xd209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd207));
        EXPECT(0x41, gbc.readMem(0xd208));
        // CB 41 00C8
        gbc.setState(0x8b0f, 0xc75e, 0x1020, 0xcd16, 0x8ec5, 0xc837, 0x0, 0x1);
        gbc.writeMem(0x8b0f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc75e, gbc.sp());
        EXPECT(0x8b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0f));
        EXPECT(0x41, gbc.readMem(0x8b10));
        // CB 41 00C9
        gbc.setState(0x8949, 0x27, 0x800, 0x9f92, 0x81ba, 0x5a31, 0x1, 0x0);
        gbc.writeMem(0x8949, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x27, gbc.sp());
        EXPECT(0x894b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8949));
        EXPECT(0x41, gbc.readMem(0x894a));
        // CB 41 00CA
        gbc.setState(0xd3c0, 0x382d, 0xd2d0, 0x1f6a, 0x6542, 0x1e87, 0x1, 0x0);
        gbc.writeMem(0xd3c0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x382d, gbc.sp());
        EXPECT(0xd3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c0));
        EXPECT(0x41, gbc.readMem(0xd3c1));
        // CB 41 00CB
        gbc.setState(0x5321, 0x158b, 0x9ff0, 0x8f45, 0xd6a4, 0x1632, 0x1, 0x0);
        gbc.writeMem(0x5321, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x158b, gbc.sp());
        EXPECT(0x5323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00CC
        gbc.setState(0x4dee, 0x37be, 0xcdd0, 0x18b2, 0x9b53, 0xf57a, 0x1, 0x1);
        gbc.writeMem(0x4dee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x37be, gbc.sp());
        EXPECT(0x4df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00CD
        gbc.setState(0x17e9, 0xa4cc, 0x4dc0, 0x9083, 0xb217, 0xda6, 0x0, 0x0);
        gbc.writeMem(0x17e9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa4cc, gbc.sp());
        EXPECT(0x17eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00CE
        gbc.setState(0x49ef, 0x2b89, 0x2f70, 0x8708, 0x9ad, 0xf18f, 0x0, 0x1);
        gbc.writeMem(0x49ef, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2b89, gbc.sp());
        EXPECT(0x49f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00CF
        gbc.setState(0x3ef5, 0x972a, 0x5370, 0xf1be, 0x4e5b, 0xccb9, 0x1, 0x1);
        gbc.writeMem(0x3ef5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x972a, gbc.sp());
        EXPECT(0x3ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00D0
        gbc.setState(0xa966, 0xae8, 0x78b0, 0xf9fe, 0xc19d, 0xb507, 0x1, 0x0);
        gbc.writeMem(0xa966, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xae8, gbc.sp());
        EXPECT(0xa968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa966));
        EXPECT(0x41, gbc.readMem(0xa967));
        // CB 41 00D1
        gbc.setState(0x1749, 0x8921, 0xb9d0, 0xd2d1, 0x4cd6, 0x42be, 0x0, 0x0);
        gbc.writeMem(0x1749, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8921, gbc.sp());
        EXPECT(0x174b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00D2
        gbc.setState(0x8cf3, 0x9ffe, 0x5150, 0xc18a, 0x21d4, 0x896d, 0x1, 0x1);
        gbc.writeMem(0x8cf3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9ffe, gbc.sp());
        EXPECT(0x8cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf3));
        EXPECT(0x41, gbc.readMem(0x8cf4));
        // CB 41 00D3
        gbc.setState(0x3777, 0x3b7a, 0x7d60, 0x9e9b, 0x8781, 0x3f51, 0x0, 0x1);
        gbc.writeMem(0x3777, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3b7a, gbc.sp());
        EXPECT(0x3779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00D4
        gbc.setState(0xc294, 0xa1ba, 0xacd0, 0x6877, 0x194d, 0xb8d, 0x1, 0x0);
        gbc.writeMem(0xc294, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa1ba, gbc.sp());
        EXPECT(0xc296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc294));
        EXPECT(0x41, gbc.readMem(0xc295));
        // CB 41 00D5
        gbc.setState(0xbdb6, 0xe9b7, 0x2080, 0x2781, 0xdb71, 0x695e, 0x0, 0x0);
        gbc.writeMem(0xbdb6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe9b7, gbc.sp());
        EXPECT(0xbdb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb6));
        EXPECT(0x41, gbc.readMem(0xbdb7));
        // CB 41 00D7
        gbc.setState(0x8c6, 0xb1bf, 0x4b50, 0xcb39, 0x4206, 0x3c0c, 0x1, 0x1);
        gbc.writeMem(0x8c6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb1bf, gbc.sp());
        EXPECT(0x8c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00D8
        gbc.setState(0x209, 0xd5f7, 0x6740, 0x5dce, 0x73a5, 0x69ef, 0x1, 0x0);
        gbc.writeMem(0x209, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd5f7, gbc.sp());
        EXPECT(0x20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00D9
        gbc.setState(0xba6e, 0x3da7, 0xb0, 0xc194, 0x91ce, 0x8dc4, 0x1, 0x0);
        gbc.writeMem(0xba6e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3da7, gbc.sp());
        EXPECT(0xba70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6e));
        EXPECT(0x41, gbc.readMem(0xba6f));
        // CB 41 00DA
        gbc.setState(0xe323, 0x2e80, 0x9cd0, 0xcbea, 0xd32f, 0x511b, 0x0, 0x0);
        gbc.writeMem(0xe323, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2e80, gbc.sp());
        EXPECT(0xe325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe323));
        EXPECT(0x41, gbc.readMem(0xe324));
        // CB 41 00DB
        gbc.setState(0xb2dd, 0x549c, 0x690, 0x7733, 0x8fde, 0x7fd9, 0x1, 0x0);
        gbc.writeMem(0xb2dd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x549c, gbc.sp());
        EXPECT(0xb2df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2dd));
        EXPECT(0x41, gbc.readMem(0xb2de));
        // CB 41 00DC
        gbc.setState(0xb2e0, 0x8244, 0xd380, 0xb163, 0xa057, 0x2491, 0x0, 0x1);
        gbc.writeMem(0xb2e0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8244, gbc.sp());
        EXPECT(0xb2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e0));
        EXPECT(0x41, gbc.readMem(0xb2e1));
        // CB 41 00DD
        gbc.setState(0x88d5, 0xef22, 0xc500, 0x21bf, 0x445e, 0x6d6, 0x0, 0x0);
        gbc.writeMem(0x88d5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xef22, gbc.sp());
        EXPECT(0x88d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d5));
        EXPECT(0x41, gbc.readMem(0x88d6));
        // CB 41 00DE
        gbc.setState(0xa6fc, 0x98f2, 0x8e90, 0x452b, 0x2661, 0x5a45, 0x1, 0x0);
        gbc.writeMem(0xa6fc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x98f2, gbc.sp());
        EXPECT(0xa6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fc));
        EXPECT(0x41, gbc.readMem(0xa6fd));
        // CB 41 00DF
        gbc.setState(0x370a, 0x1d4e, 0xdde0, 0x697f, 0x1be1, 0x2e27, 0x0, 0x0);
        gbc.writeMem(0x370a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1d4e, gbc.sp());
        EXPECT(0x370c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00E0
        gbc.setState(0xdba9, 0xa517, 0x5f10, 0x419, 0x7e71, 0xa687, 0x0, 0x0);
        gbc.writeMem(0xdba9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa517, gbc.sp());
        EXPECT(0xdbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba9));
        EXPECT(0x41, gbc.readMem(0xdbaa));
        // CB 41 00E1
        gbc.setState(0x8291, 0x97e3, 0xb6b0, 0xa95f, 0xb356, 0xbd38, 0x1, 0x1);
        gbc.writeMem(0x8291, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x97e3, gbc.sp());
        EXPECT(0x8293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8291));
        EXPECT(0x41, gbc.readMem(0x8292));
        // CB 41 00E2
        gbc.setState(0xddc5, 0xe667, 0x1880, 0xec5, 0x16e1, 0x5451, 0x0, 0x1);
        gbc.writeMem(0xddc5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe667, gbc.sp());
        EXPECT(0xddc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc5));
        EXPECT(0x41, gbc.readMem(0xddc6));
        // CB 41 00E3
        gbc.setState(0xcf83, 0xc228, 0xf4b0, 0xc178, 0x7477, 0x3dc7, 0x1, 0x1);
        gbc.writeMem(0xcf83, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc228, gbc.sp());
        EXPECT(0xcf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf83));
        EXPECT(0x41, gbc.readMem(0xcf84));
        // CB 41 00E4
        gbc.setState(0x8acd, 0xfc52, 0xdd20, 0x62d7, 0xc6cf, 0xbabd, 0x1, 0x0);
        gbc.writeMem(0x8acd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfc52, gbc.sp());
        EXPECT(0x8acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8acd));
        EXPECT(0x41, gbc.readMem(0x8ace));
        // CB 41 00E5
        gbc.setState(0x5f5e, 0x9dcc, 0x9ed0, 0xb927, 0x4081, 0xd1dd, 0x0, 0x1);
        gbc.writeMem(0x5f5e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9dcc, gbc.sp());
        EXPECT(0x5f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00E7
        gbc.setState(0x71b7, 0xd4f, 0x5f30, 0x7a21, 0xc955, 0x91f, 0x1, 0x0);
        gbc.writeMem(0x71b7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd4f, gbc.sp());
        EXPECT(0x71b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00E8
        gbc.setState(0x98f8, 0xe3fe, 0x7110, 0x93ad, 0x17ec, 0x6c22, 0x1, 0x1);
        gbc.writeMem(0x98f8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe3fe, gbc.sp());
        EXPECT(0x98fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f8));
        EXPECT(0x41, gbc.readMem(0x98f9));
        // CB 41 00E9
        gbc.setState(0xb401, 0x3104, 0xb0b0, 0x1923, 0xe5b8, 0xb2be, 0x0, 0x0);
        gbc.writeMem(0xb401, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3104, gbc.sp());
        EXPECT(0xb403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb401));
        EXPECT(0x41, gbc.readMem(0xb402));
        // CB 41 00EA
        gbc.setState(0x606d, 0xff55, 0xf580, 0x755, 0x34b9, 0x6217, 0x1, 0x0);
        gbc.writeMem(0x606d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xff55, gbc.sp());
        EXPECT(0x606f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00EB
        gbc.setState(0x7dce, 0x1fcc, 0x41c0, 0x9b28, 0x7acd, 0x9e08, 0x1, 0x0);
        gbc.writeMem(0x7dce, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1fcc, gbc.sp());
        EXPECT(0x7dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00EC
        gbc.setState(0xe11d, 0xd85b, 0x50c0, 0x2c8a, 0xd75e, 0x38d3, 0x0, 0x0);
        gbc.writeMem(0xe11d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd85b, gbc.sp());
        EXPECT(0xe11f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe11d));
        EXPECT(0x41, gbc.readMem(0xe11e));
        // CB 41 00ED
        gbc.setState(0x2c42, 0xbac0, 0xe230, 0x5575, 0x1ea7, 0x9eb1, 0x1, 0x1);
        gbc.writeMem(0x2c42, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbac0, gbc.sp());
        EXPECT(0x2c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00EE
        gbc.setState(0x4a2e, 0x355c, 0x8910, 0x1217, 0xcecf, 0xfd66, 0x0, 0x1);
        gbc.writeMem(0x4a2e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x355c, gbc.sp());
        EXPECT(0x4a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00EF
        gbc.setState(0x8d96, 0xe1a0, 0x9640, 0xc155, 0x94d2, 0x312c, 0x0, 0x1);
        gbc.writeMem(0x8d96, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe1a0, gbc.sp());
        EXPECT(0x8d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d96));
        EXPECT(0x41, gbc.readMem(0x8d97));
        // CB 41 00F0
        gbc.setState(0x1a8a, 0xf036, 0x8af0, 0x5ee8, 0xe102, 0x45b, 0x0, 0x1);
        gbc.writeMem(0x1a8a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf036, gbc.sp());
        EXPECT(0x1a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00F1
        gbc.setState(0x12f5, 0x28f1, 0x6fe0, 0x9450, 0xe179, 0xe4e3, 0x0, 0x0);
        gbc.writeMem(0x12f5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x28f1, gbc.sp());
        EXPECT(0x12f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00F2
        gbc.setState(0xe4b3, 0xfe73, 0xe600, 0xbb81, 0x5beb, 0x4dea, 0x1, 0x0);
        gbc.writeMem(0xe4b3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfe73, gbc.sp());
        EXPECT(0xe4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b3));
        EXPECT(0x41, gbc.readMem(0xe4b4));
        // CB 41 00F4
        gbc.setState(0xc4c3, 0xf6e7, 0xb150, 0x62ab, 0x2cea, 0x1c40, 0x0, 0x0);
        gbc.writeMem(0xc4c3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf6e7, gbc.sp());
        EXPECT(0xc4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c3));
        EXPECT(0x41, gbc.readMem(0xc4c4));
        // CB 41 00F5
        gbc.setState(0x7fc1, 0x7c86, 0x2de0, 0xf6f7, 0x52c6, 0x12b8, 0x1, 0x0);
        gbc.writeMem(0x7fc1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7c86, gbc.sp());
        EXPECT(0x7fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00F6
        gbc.setState(0xd817, 0x9654, 0x3360, 0x2a67, 0x89d2, 0xaacc, 0x0, 0x1);
        gbc.writeMem(0xd817, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9654, gbc.sp());
        EXPECT(0xd819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd817));
        EXPECT(0x41, gbc.readMem(0xd818));
        // CB 41 00F8
        gbc.setState(0x473d, 0x293e, 0x5b00, 0xe589, 0x7714, 0xe14b, 0x1, 0x0);
        gbc.writeMem(0x473d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x293e, gbc.sp());
        EXPECT(0x473f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 00F9
        gbc.setState(0x42f3, 0xdb5b, 0xef30, 0x90e0, 0xe228, 0x9ca, 0x0, 0x0);
        gbc.writeMem(0x42f3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdb5b, gbc.sp());
        EXPECT(0x42f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00FA
        gbc.setState(0x4c3c, 0xed04, 0x67f0, 0x3139, 0x8f53, 0x72c2, 0x0, 0x0);
        gbc.writeMem(0x4c3c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xed04, gbc.sp());
        EXPECT(0x4c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00FB
        gbc.setState(0xdc61, 0xecc6, 0x56b0, 0xb34d, 0x61b4, 0x263a, 0x1, 0x0);
        gbc.writeMem(0xdc61, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xecc6, gbc.sp());
        EXPECT(0xdc63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc61));
        EXPECT(0x41, gbc.readMem(0xdc62));
        // CB 41 00FD
        gbc.setState(0xa90c, 0x603b, 0x6910, 0x6dba, 0x30c6, 0x4237, 0x1, 0x1);
        gbc.writeMem(0xa90c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x603b, gbc.sp());
        EXPECT(0xa90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa90c));
        EXPECT(0x41, gbc.readMem(0xa90d));
        // CB 41 00FE
        gbc.setState(0x7a03, 0xc377, 0x4ff0, 0xec0c, 0x9f74, 0xc76d, 0x0, 0x1);
        gbc.writeMem(0x7a03, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc377, gbc.sp());
        EXPECT(0x7a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 00FF
        gbc.setState(0x44a1, 0x8d4c, 0xc6e0, 0xac21, 0xcdb2, 0x4c7d, 0x1, 0x0);
        gbc.writeMem(0x44a1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8d4c, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0100
        gbc.setState(0x736d, 0x574d, 0x9e70, 0x56de, 0xb6d7, 0x20de, 0x1, 0x1);
        gbc.writeMem(0x736d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x574d, gbc.sp());
        EXPECT(0x736f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0101
        gbc.setState(0xc30, 0xf9b2, 0xccd0, 0xf0e0, 0xf913, 0xcdf6, 0x0, 0x1);
        gbc.writeMem(0xc30, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf9b2, gbc.sp());
        EXPECT(0xc32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0102
        gbc.setState(0x53eb, 0x5059, 0x6620, 0xb441, 0x6654, 0xe7ca, 0x1, 0x0);
        gbc.writeMem(0x53eb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5059, gbc.sp());
        EXPECT(0x53ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0104
        gbc.setState(0x4da5, 0xb5d1, 0xec30, 0xbc5b, 0x6244, 0xcdf9, 0x1, 0x0);
        gbc.writeMem(0x4da5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb5d1, gbc.sp());
        EXPECT(0x4da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0105
        gbc.setState(0x73c8, 0xbd97, 0x55e0, 0xd570, 0xf038, 0xd421, 0x1, 0x1);
        gbc.writeMem(0x73c8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbd97, gbc.sp());
        EXPECT(0x73ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0106
        gbc.setState(0xdd35, 0xd9bb, 0x7b40, 0x60a, 0x85ed, 0xd7c3, 0x1, 0x1);
        gbc.writeMem(0xdd35, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd9bb, gbc.sp());
        EXPECT(0xdd37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd35));
        EXPECT(0x41, gbc.readMem(0xdd36));
        // CB 41 0107
        gbc.setState(0x2f6, 0x511a, 0xbfe0, 0x2e12, 0x4e14, 0x78f1, 0x1, 0x0);
        gbc.writeMem(0x2f6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x511a, gbc.sp());
        EXPECT(0x2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0108
        gbc.setState(0xa89f, 0xffeb, 0x53c0, 0xe7b7, 0x97af, 0x167d, 0x1, 0x0);
        gbc.writeMem(0xa89f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xffeb, gbc.sp());
        EXPECT(0xa8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89f));
        EXPECT(0x41, gbc.readMem(0xa8a0));
        // CB 41 0109
        gbc.setState(0x882a, 0x4b15, 0xcc0, 0xc1c4, 0x3fd0, 0x75e6, 0x0, 0x0);
        gbc.writeMem(0x882a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4b15, gbc.sp());
        EXPECT(0x882c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x882a));
        EXPECT(0x41, gbc.readMem(0x882b));
        // CB 41 010A
        gbc.setState(0xa402, 0x7fa, 0x7440, 0xb85b, 0x8ec5, 0x37cd, 0x1, 0x0);
        gbc.writeMem(0xa402, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7fa, gbc.sp());
        EXPECT(0xa404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa402));
        EXPECT(0x41, gbc.readMem(0xa403));
        // CB 41 010B
        gbc.setState(0xb3cc, 0x9156, 0xdf90, 0x8a74, 0xa335, 0xba98, 0x0, 0x0);
        gbc.writeMem(0xb3cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9156, gbc.sp());
        EXPECT(0xb3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cc));
        EXPECT(0x41, gbc.readMem(0xb3cd));
        // CB 41 010C
        gbc.setState(0x5e33, 0x1c3f, 0x6bf0, 0xcd46, 0x63ca, 0x901b, 0x0, 0x1);
        gbc.writeMem(0x5e33, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1c3f, gbc.sp());
        EXPECT(0x5e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 010D
        gbc.setState(0x75a7, 0x3f57, 0xddd0, 0x8fbd, 0xbff8, 0xb5fa, 0x0, 0x0);
        gbc.writeMem(0x75a7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3f57, gbc.sp());
        EXPECT(0x75a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 010E
        gbc.setState(0x3ab0, 0xb70d, 0x2b40, 0x168d, 0x41b2, 0xe8cf, 0x1, 0x1);
        gbc.writeMem(0x3ab0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb70d, gbc.sp());
        EXPECT(0x3ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 010F
        gbc.setState(0x21ad, 0xf8a5, 0xd0a0, 0x5c1f, 0xbfe7, 0xc2d5, 0x0, 0x0);
        gbc.writeMem(0x21ad, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf8a5, gbc.sp());
        EXPECT(0x21af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0111
        gbc.setState(0xa424, 0x22f7, 0xecb0, 0x5e62, 0xf5b4, 0xb89a, 0x1, 0x0);
        gbc.writeMem(0xa424, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x22f7, gbc.sp());
        EXPECT(0xa426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa424));
        EXPECT(0x41, gbc.readMem(0xa425));
        // CB 41 0112
        gbc.setState(0x4535, 0xec24, 0x3ab0, 0xf952, 0x3954, 0x576a, 0x1, 0x1);
        gbc.writeMem(0x4535, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xec24, gbc.sp());
        EXPECT(0x4537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0113
        gbc.setState(0x6433, 0x46c8, 0x7010, 0xa971, 0x29a2, 0x9bc, 0x1, 0x0);
        gbc.writeMem(0x6433, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x46c8, gbc.sp());
        EXPECT(0x6435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0114
        gbc.setState(0x3674, 0x4e15, 0xca50, 0x69b8, 0xcc41, 0x1112, 0x1, 0x0);
        gbc.writeMem(0x3674, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4e15, gbc.sp());
        EXPECT(0x3676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0115
        gbc.setState(0x25ff, 0x6314, 0x360, 0x15ea, 0x1dff, 0x5c35, 0x1, 0x0);
        gbc.writeMem(0x25ff, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6314, gbc.sp());
        EXPECT(0x2601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0116
        gbc.setState(0x8a6b, 0x83f5, 0x7d20, 0x20f7, 0x125d, 0x5e00, 0x1, 0x1);
        gbc.writeMem(0x8a6b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x83f5, gbc.sp());
        EXPECT(0x8a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6b));
        EXPECT(0x41, gbc.readMem(0x8a6c));
        // CB 41 0117
        gbc.setState(0x94af, 0xad70, 0x8a90, 0x47a0, 0xbf88, 0xb0c0, 0x1, 0x1);
        gbc.writeMem(0x94af, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xad70, gbc.sp());
        EXPECT(0x94b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94af));
        EXPECT(0x41, gbc.readMem(0x94b0));
        // CB 41 0118
        gbc.setState(0x8f97, 0x7755, 0x9130, 0x475b, 0x8f59, 0x7525, 0x1, 0x0);
        gbc.writeMem(0x8f97, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7755, gbc.sp());
        EXPECT(0x8f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f97));
        EXPECT(0x41, gbc.readMem(0x8f98));
        // CB 41 0119
        gbc.setState(0x7052, 0x576a, 0x6b90, 0x832a, 0xe885, 0x487d, 0x1, 0x0);
        gbc.writeMem(0x7052, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x576a, gbc.sp());
        EXPECT(0x7054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 011A
        gbc.setState(0x3c04, 0x62ec, 0x9820, 0x409, 0xf901, 0x4f3d, 0x0, 0x1);
        gbc.writeMem(0x3c04, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x62ec, gbc.sp());
        EXPECT(0x3c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 011B
        gbc.setState(0x6f82, 0x77dc, 0x7e30, 0x6e6a, 0x9b7f, 0x9da5, 0x0, 0x1);
        gbc.writeMem(0x6f82, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x77dc, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 011C
        gbc.setState(0x9a0b, 0xcefa, 0xd110, 0x5789, 0x4e27, 0xc2ca, 0x1, 0x1);
        gbc.writeMem(0x9a0b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcefa, gbc.sp());
        EXPECT(0x9a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a0b));
        EXPECT(0x41, gbc.readMem(0x9a0c));
        // CB 41 011D
        gbc.setState(0x79e2, 0x5c52, 0x3530, 0x6e52, 0xf641, 0x9a67, 0x0, 0x1);
        gbc.writeMem(0x79e2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5c52, gbc.sp());
        EXPECT(0x79e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 011E
        gbc.setState(0x548f, 0xfbf2, 0x7a20, 0x52eb, 0xadcc, 0x26db, 0x1, 0x1);
        gbc.writeMem(0x548f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfbf2, gbc.sp());
        EXPECT(0x5491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 011F
        gbc.setState(0x17f, 0x2d1b, 0x8da0, 0x67c0, 0xd8a9, 0x217d, 0x0, 0x1);
        gbc.writeMem(0x17f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2d1b, gbc.sp());
        EXPECT(0x181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0120
        gbc.setState(0x5f39, 0xec21, 0x3960, 0x5714, 0x97d3, 0xd18b, 0x0, 0x1);
        gbc.writeMem(0x5f39, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xec21, gbc.sp());
        EXPECT(0x5f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0121
        gbc.setState(0x3a18, 0xf2ef, 0x1dd0, 0xc697, 0xd075, 0xf03c, 0x1, 0x0);
        gbc.writeMem(0x3a18, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf2ef, gbc.sp());
        EXPECT(0x3a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0122
        gbc.setState(0xab94, 0x8ecf, 0xa6d0, 0xf617, 0xb166, 0x2b86, 0x0, 0x0);
        gbc.writeMem(0xab94, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8ecf, gbc.sp());
        EXPECT(0xab96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab94));
        EXPECT(0x41, gbc.readMem(0xab95));
        // CB 41 0123
        gbc.setState(0x7bd2, 0x22d3, 0xd8a0, 0x3364, 0x2702, 0xc982, 0x1, 0x1);
        gbc.writeMem(0x7bd2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x22d3, gbc.sp());
        EXPECT(0x7bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0124
        gbc.setState(0x197b, 0x7e11, 0xb090, 0xace5, 0xf624, 0xec6f, 0x0, 0x1);
        gbc.writeMem(0x197b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7e11, gbc.sp());
        EXPECT(0x197d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0125
        gbc.setState(0x68ae, 0xd6f3, 0x3cd0, 0x6adc, 0x5c1c, 0xb833, 0x1, 0x1);
        gbc.writeMem(0x68ae, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd6f3, gbc.sp());
        EXPECT(0x68b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0126
        gbc.setState(0xaf6a, 0x127a, 0x3530, 0x5285, 0xc76a, 0xe65f, 0x0, 0x1);
        gbc.writeMem(0xaf6a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x127a, gbc.sp());
        EXPECT(0xaf6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6a));
        EXPECT(0x41, gbc.readMem(0xaf6b));
        // CB 41 0127
        gbc.setState(0x481b, 0x9df2, 0xdb20, 0x2b1c, 0x10fe, 0x5211, 0x0, 0x1);
        gbc.writeMem(0x481b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9df2, gbc.sp());
        EXPECT(0x481d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0128
        gbc.setState(0xa498, 0xa8be, 0x6f90, 0x424c, 0x693f, 0x61a6, 0x1, 0x0);
        gbc.writeMem(0xa498, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa8be, gbc.sp());
        EXPECT(0xa49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa498));
        EXPECT(0x41, gbc.readMem(0xa499));
        // CB 41 0129
        gbc.setState(0x68f0, 0xd7c5, 0x3bb0, 0xa10a, 0x8629, 0xc6e1, 0x0, 0x0);
        gbc.writeMem(0x68f0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd7c5, gbc.sp());
        EXPECT(0x68f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 012A
        gbc.setState(0x9c64, 0x8f50, 0x8780, 0x65ea, 0xd670, 0x17b0, 0x1, 0x1);
        gbc.writeMem(0x9c64, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8f50, gbc.sp());
        EXPECT(0x9c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c64));
        EXPECT(0x41, gbc.readMem(0x9c65));
        // CB 41 012B
        gbc.setState(0x8a82, 0x5fd0, 0x2df0, 0x55a3, 0x14cd, 0xfe24, 0x0, 0x1);
        gbc.writeMem(0x8a82, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5fd0, gbc.sp());
        EXPECT(0x8a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a82));
        EXPECT(0x41, gbc.readMem(0x8a83));
        // CB 41 012C
        gbc.setState(0x94fa, 0x5d92, 0x2460, 0xf275, 0x7b2c, 0x306f, 0x1, 0x0);
        gbc.writeMem(0x94fa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5d92, gbc.sp());
        EXPECT(0x94fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94fa));
        EXPECT(0x41, gbc.readMem(0x94fb));
        // CB 41 012D
        gbc.setState(0xa32f, 0x18e4, 0xc7c0, 0xdca, 0x787c, 0xd1a, 0x0, 0x1);
        gbc.writeMem(0xa32f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x18e4, gbc.sp());
        EXPECT(0xa331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa32f));
        EXPECT(0x41, gbc.readMem(0xa330));
        // CB 41 012E
        gbc.setState(0x519, 0x48de, 0x4f10, 0x594a, 0x9f26, 0x49c5, 0x1, 0x1);
        gbc.writeMem(0x519, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x48de, gbc.sp());
        EXPECT(0x51b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 012F
        gbc.setState(0xc8fb, 0x31c2, 0xc460, 0x2210, 0xd6ba, 0x97c3, 0x0, 0x1);
        gbc.writeMem(0xc8fb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x31c2, gbc.sp());
        EXPECT(0xc8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fb));
        EXPECT(0x41, gbc.readMem(0xc8fc));
        // CB 41 0130
        gbc.setState(0x3179, 0x7170, 0x1240, 0x8dae, 0xb6f0, 0xe8b8, 0x0, 0x0);
        gbc.writeMem(0x3179, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7170, gbc.sp());
        EXPECT(0x317b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0131
        gbc.setState(0x6b05, 0x2533, 0x5320, 0xf6ab, 0xe77f, 0x6c4e, 0x1, 0x0);
        gbc.writeMem(0x6b05, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2533, gbc.sp());
        EXPECT(0x6b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0132
        gbc.setState(0xd658, 0xde75, 0x2500, 0x2db2, 0x3d7e, 0x5d81, 0x1, 0x1);
        gbc.writeMem(0xd658, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xde75, gbc.sp());
        EXPECT(0xd65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd658));
        EXPECT(0x41, gbc.readMem(0xd659));
        // CB 41 0133
        gbc.setState(0xdb2b, 0x9add, 0x410, 0xf038, 0x6d3a, 0x7b9a, 0x1, 0x0);
        gbc.writeMem(0xdb2b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9add, gbc.sp());
        EXPECT(0xdb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2b));
        EXPECT(0x41, gbc.readMem(0xdb2c));
        // CB 41 0135
        gbc.setState(0x8c51, 0x7a10, 0xd730, 0xec2c, 0xc577, 0x3e2e, 0x1, 0x1);
        gbc.writeMem(0x8c51, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7a10, gbc.sp());
        EXPECT(0x8c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c51));
        EXPECT(0x41, gbc.readMem(0x8c52));
        // CB 41 0136
        gbc.setState(0xbfce, 0xc09f, 0xc800, 0x5f5a, 0x8024, 0x7a17, 0x0, 0x0);
        gbc.writeMem(0xbfce, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc09f, gbc.sp());
        EXPECT(0xbfd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfce));
        EXPECT(0x41, gbc.readMem(0xbfcf));
        // CB 41 0137
        gbc.setState(0x18f0, 0x835b, 0x23e0, 0xeb13, 0x152f, 0x983b, 0x1, 0x0);
        gbc.writeMem(0x18f0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x835b, gbc.sp());
        EXPECT(0x18f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0138
        gbc.setState(0xa3b8, 0x4f22, 0xcd70, 0x205f, 0xa54d, 0xd1af, 0x0, 0x1);
        gbc.writeMem(0xa3b8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4f22, gbc.sp());
        EXPECT(0xa3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b8));
        EXPECT(0x41, gbc.readMem(0xa3b9));
        // CB 41 0139
        gbc.setState(0x501e, 0x9dc3, 0x6b30, 0xfa99, 0xa83, 0xb1e7, 0x0, 0x1);
        gbc.writeMem(0x501e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9dc3, gbc.sp());
        EXPECT(0x5020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 013A
        gbc.setState(0x68bb, 0x7bb9, 0xa710, 0xa142, 0x8de0, 0xbaee, 0x1, 0x1);
        gbc.writeMem(0x68bb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7bb9, gbc.sp());
        EXPECT(0x68bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 013B
        gbc.setState(0xe828, 0x88d5, 0x7fd0, 0xa4b5, 0xc2de, 0xc189, 0x1, 0x1);
        gbc.writeMem(0xe828, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x88d5, gbc.sp());
        EXPECT(0xe82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe828));
        EXPECT(0x41, gbc.readMem(0xe829));
        // CB 41 013C
        gbc.setState(0x7b6d, 0x3e1, 0x82e0, 0xe05c, 0xfff1, 0xacfa, 0x0, 0x1);
        gbc.writeMem(0x7b6d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3e1, gbc.sp());
        EXPECT(0x7b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 013D
        gbc.setState(0x11da, 0xd2ea, 0xf8f0, 0xca3f, 0xbe54, 0xde12, 0x1, 0x0);
        gbc.writeMem(0x11da, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd2ea, gbc.sp());
        EXPECT(0x11dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 013F
        gbc.setState(0x7024, 0x389c, 0xf3a0, 0x9912, 0x7ce7, 0xffb, 0x1, 0x1);
        gbc.writeMem(0x7024, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x389c, gbc.sp());
        EXPECT(0x7026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0140
        gbc.setState(0x8d72, 0xe300, 0x8a90, 0xefb1, 0x9f2b, 0x47a7, 0x0, 0x1);
        gbc.writeMem(0x8d72, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe300, gbc.sp());
        EXPECT(0x8d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d72));
        EXPECT(0x41, gbc.readMem(0x8d73));
        // CB 41 0141
        gbc.setState(0x5fa0, 0xcee2, 0x6bc0, 0xe01f, 0x8761, 0xc059, 0x0, 0x0);
        gbc.writeMem(0x5fa0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcee2, gbc.sp());
        EXPECT(0x5fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0142
        gbc.setState(0xd32b, 0xe49, 0x56a0, 0x7dd8, 0xcfc, 0x8f8c, 0x0, 0x0);
        gbc.writeMem(0xd32b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe49, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32b));
        EXPECT(0x41, gbc.readMem(0xd32c));
        // CB 41 0143
        gbc.setState(0xa0a3, 0xb278, 0xe660, 0xcdfe, 0xe930, 0x7314, 0x1, 0x0);
        gbc.writeMem(0xa0a3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb278, gbc.sp());
        EXPECT(0xa0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a3));
        EXPECT(0x41, gbc.readMem(0xa0a4));
        // CB 41 0144
        gbc.setState(0x3c70, 0xef83, 0xcfb0, 0x4fb8, 0xf13b, 0x1119, 0x0, 0x0);
        gbc.writeMem(0x3c70, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xef83, gbc.sp());
        EXPECT(0x3c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0145
        gbc.setState(0x20d6, 0xa57a, 0x5ac0, 0x85a7, 0x32f8, 0xecb3, 0x0, 0x1);
        gbc.writeMem(0x20d6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa57a, gbc.sp());
        EXPECT(0x20d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0146
        gbc.setState(0x74b6, 0xbcfa, 0xff10, 0x14c3, 0xb147, 0x823f, 0x1, 0x0);
        gbc.writeMem(0x74b6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbcfa, gbc.sp());
        EXPECT(0x74b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0147
        gbc.setState(0x9d00, 0x438d, 0xfc0, 0x4478, 0x2f44, 0xa9a, 0x0, 0x1);
        gbc.writeMem(0x9d00, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x438d, gbc.sp());
        EXPECT(0x9d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d00));
        EXPECT(0x41, gbc.readMem(0x9d01));
        // CB 41 0148
        gbc.setState(0x4619, 0xdf73, 0x8020, 0x845a, 0x3cbc, 0xd23, 0x0, 0x0);
        gbc.writeMem(0x4619, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdf73, gbc.sp());
        EXPECT(0x461b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0149
        gbc.setState(0x3c42, 0xb0c1, 0x6c50, 0xf153, 0x7b3a, 0xe7aa, 0x1, 0x0);
        gbc.writeMem(0x3c42, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb0c1, gbc.sp());
        EXPECT(0x3c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 014A
        gbc.setState(0x4fb4, 0x17b7, 0xfa0, 0xd5e7, 0xc593, 0x4ae5, 0x1, 0x1);
        gbc.writeMem(0x4fb4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x17b7, gbc.sp());
        EXPECT(0x4fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 014B
        gbc.setState(0xd49d, 0xcb32, 0x6680, 0x3241, 0xec7f, 0x5ec7, 0x0, 0x1);
        gbc.writeMem(0xd49d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcb32, gbc.sp());
        EXPECT(0xd49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49d));
        EXPECT(0x41, gbc.readMem(0xd49e));
        // CB 41 014D
        gbc.setState(0x7f52, 0x50b8, 0xfed0, 0xb41a, 0xae49, 0xa57, 0x0, 0x1);
        gbc.writeMem(0x7f52, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x50b8, gbc.sp());
        EXPECT(0x7f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 014F
        gbc.setState(0xbbb6, 0xc34e, 0x58c0, 0xcb7d, 0xc0ee, 0x6add, 0x0, 0x0);
        gbc.writeMem(0xbbb6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc34e, gbc.sp());
        EXPECT(0xbbb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbb6));
        EXPECT(0x41, gbc.readMem(0xbbb7));
        // CB 41 0150
        gbc.setState(0xebe3, 0xf650, 0xcc70, 0xf568, 0x8e25, 0xd7da, 0x0, 0x1);
        gbc.writeMem(0xebe3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf650, gbc.sp());
        EXPECT(0xebe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe3));
        EXPECT(0x41, gbc.readMem(0xebe4));
        // CB 41 0151
        gbc.setState(0x5463, 0xfc21, 0x74d0, 0xfadf, 0x4d39, 0x28bf, 0x1, 0x0);
        gbc.writeMem(0x5463, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfc21, gbc.sp());
        EXPECT(0x5465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0153
        gbc.setState(0xeb96, 0xb953, 0xcb60, 0xdcf6, 0xa53a, 0x26da, 0x1, 0x1);
        gbc.writeMem(0xeb96, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb953, gbc.sp());
        EXPECT(0xeb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb96));
        EXPECT(0x41, gbc.readMem(0xeb97));
        // CB 41 0155
        gbc.setState(0xe78d, 0x9b86, 0x3bc0, 0x53f5, 0x2c89, 0xa299, 0x1, 0x1);
        gbc.writeMem(0xe78d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9b86, gbc.sp());
        EXPECT(0xe78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78d));
        EXPECT(0x41, gbc.readMem(0xe78e));
        // CB 41 0156
        gbc.setState(0x86e0, 0x606c, 0x7350, 0x6b61, 0x54eb, 0x2488, 0x0, 0x0);
        gbc.writeMem(0x86e0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x606c, gbc.sp());
        EXPECT(0x86e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e0));
        EXPECT(0x41, gbc.readMem(0x86e1));
        // CB 41 0157
        gbc.setState(0xc41e, 0x57e5, 0xdbf0, 0x2902, 0xc3fd, 0x9f44, 0x1, 0x0);
        gbc.writeMem(0xc41e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x57e5, gbc.sp());
        EXPECT(0xc420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41e));
        EXPECT(0x41, gbc.readMem(0xc41f));
        // CB 41 0158
        gbc.setState(0x6f46, 0x61b7, 0xa190, 0x4773, 0xc5f8, 0x7c04, 0x1, 0x0);
        gbc.writeMem(0x6f46, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x61b7, gbc.sp());
        EXPECT(0x6f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0159
        gbc.setState(0x110b, 0x5056, 0x140, 0x3f62, 0x541, 0x7e0e, 0x1, 0x0);
        gbc.writeMem(0x110b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5056, gbc.sp());
        EXPECT(0x110d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 015A
        gbc.setState(0xe9f9, 0xf10a, 0x9150, 0xca3f, 0x5bae, 0x3839, 0x1, 0x1);
        gbc.writeMem(0xe9f9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf10a, gbc.sp());
        EXPECT(0xe9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f9));
        EXPECT(0x41, gbc.readMem(0xe9fa));
        // CB 41 015C
        gbc.setState(0x1ab2, 0xe1bd, 0xf2a0, 0x190d, 0x22e7, 0xa1e3, 0x1, 0x1);
        gbc.writeMem(0x1ab2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe1bd, gbc.sp());
        EXPECT(0x1ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 015D
        gbc.setState(0x7f6b, 0x3e55, 0xcda0, 0xad42, 0xe914, 0xb7d7, 0x1, 0x0);
        gbc.writeMem(0x7f6b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3e55, gbc.sp());
        EXPECT(0x7f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 015E
        gbc.setState(0xd5c1, 0x4220, 0x2630, 0x452d, 0x46e7, 0xd0de, 0x1, 0x0);
        gbc.writeMem(0xd5c1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4220, gbc.sp());
        EXPECT(0xd5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c1));
        EXPECT(0x41, gbc.readMem(0xd5c2));
        // CB 41 015F
        gbc.setState(0x5f9b, 0x53d9, 0x8b0, 0xe3f9, 0x9b3f, 0x1b9d, 0x0, 0x1);
        gbc.writeMem(0x5f9b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x53d9, gbc.sp());
        EXPECT(0x5f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0160
        gbc.setState(0xd64f, 0x200b, 0x6b0, 0x225d, 0xff49, 0x234, 0x1, 0x1);
        gbc.writeMem(0xd64f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x200b, gbc.sp());
        EXPECT(0xd651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd64f));
        EXPECT(0x41, gbc.readMem(0xd650));
        // CB 41 0162
        gbc.setState(0xe391, 0x3b5e, 0xc8b0, 0x6171, 0xb55d, 0x1e2, 0x0, 0x0);
        gbc.writeMem(0xe391, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3b5e, gbc.sp());
        EXPECT(0xe393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe391));
        EXPECT(0x41, gbc.readMem(0xe392));
        // CB 41 0163
        gbc.setState(0xe999, 0x7bc9, 0x9820, 0x569c, 0xbc1e, 0x5d20, 0x1, 0x1);
        gbc.writeMem(0xe999, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7bc9, gbc.sp());
        EXPECT(0xe99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe999));
        EXPECT(0x41, gbc.readMem(0xe99a));
        // CB 41 0164
        gbc.setState(0xd569, 0x8a9b, 0xe960, 0xc8c1, 0x1d30, 0xe411, 0x1, 0x1);
        gbc.writeMem(0xd569, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8a9b, gbc.sp());
        EXPECT(0xd56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd569));
        EXPECT(0x41, gbc.readMem(0xd56a));
        // CB 41 0165
        gbc.setState(0xcd95, 0x31ef, 0x4f80, 0x543d, 0xc453, 0x4308, 0x0, 0x0);
        gbc.writeMem(0xcd95, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x31ef, gbc.sp());
        EXPECT(0xcd97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd95));
        EXPECT(0x41, gbc.readMem(0xcd96));
        // CB 41 0166
        gbc.setState(0x711, 0xd5f3, 0xcd50, 0x36ce, 0xf138, 0x7626, 0x0, 0x1);
        gbc.writeMem(0x711, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd5f3, gbc.sp());
        EXPECT(0x713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0167
        gbc.setState(0xeed1, 0x918b, 0xf290, 0xb133, 0x3d0d, 0x4e13, 0x0, 0x0);
        gbc.writeMem(0xeed1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x918b, gbc.sp());
        EXPECT(0xeed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed1));
        EXPECT(0x41, gbc.readMem(0xeed2));
        // CB 41 0168
        gbc.setState(0x7b49, 0xc08c, 0x40b0, 0xe1dc, 0x4478, 0x562c, 0x0, 0x1);
        gbc.writeMem(0x7b49, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc08c, gbc.sp());
        EXPECT(0x7b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0169
        gbc.setState(0x5b92, 0x8554, 0x7f90, 0xa3e8, 0xf36, 0x5dbc, 0x1, 0x1);
        gbc.writeMem(0x5b92, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8554, gbc.sp());
        EXPECT(0x5b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 016A
        gbc.setState(0x1db, 0x9111, 0x27c0, 0x85b, 0xd099, 0xb4b2, 0x0, 0x1);
        gbc.writeMem(0x1db, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9111, gbc.sp());
        EXPECT(0x1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 016B
        gbc.setState(0x7b2c, 0x2903, 0x91b0, 0xd54d, 0xe707, 0xa1f8, 0x1, 0x0);
        gbc.writeMem(0x7b2c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2903, gbc.sp());
        EXPECT(0x7b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 016C
        gbc.setState(0xad5c, 0x70c2, 0x9380, 0x89d5, 0x8495, 0xdc74, 0x1, 0x1);
        gbc.writeMem(0xad5c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x70c2, gbc.sp());
        EXPECT(0xad5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5c));
        EXPECT(0x41, gbc.readMem(0xad5d));
        // CB 41 016D
        gbc.setState(0x3872, 0x97d7, 0x4750, 0xad15, 0xb76b, 0x82b7, 0x1, 0x1);
        gbc.writeMem(0x3872, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x97d7, gbc.sp());
        EXPECT(0x3874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 016E
        gbc.setState(0xd1dc, 0xe891, 0x5100, 0xa611, 0xf1f0, 0xd5f4, 0x1, 0x0);
        gbc.writeMem(0xd1dc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe891, gbc.sp());
        EXPECT(0xd1de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1dc));
        EXPECT(0x41, gbc.readMem(0xd1dd));
        // CB 41 016F
        gbc.setState(0x53be, 0xe32f, 0xd300, 0xebc0, 0x3dbc, 0xfb81, 0x1, 0x1);
        gbc.writeMem(0x53be, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe32f, gbc.sp());
        EXPECT(0x53c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0170
        gbc.setState(0x752e, 0x8fd8, 0x7330, 0x9f, 0x1777, 0xaf91, 0x1, 0x0);
        gbc.writeMem(0x752e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8fd8, gbc.sp());
        EXPECT(0x7530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0172
        gbc.setState(0x3c4c, 0xacae, 0x86d0, 0x353a, 0x358b, 0xf37f, 0x0, 0x1);
        gbc.writeMem(0x3c4c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xacae, gbc.sp());
        EXPECT(0x3c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0174
        gbc.setState(0x9090, 0x42bd, 0xc290, 0x54f8, 0x2fb9, 0x1b29, 0x0, 0x1);
        gbc.writeMem(0x9090, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x42bd, gbc.sp());
        EXPECT(0x9092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9090));
        EXPECT(0x41, gbc.readMem(0x9091));
        // CB 41 0175
        gbc.setState(0x25a4, 0xdb5, 0xc530, 0xe123, 0x879e, 0xab06, 0x1, 0x1);
        gbc.writeMem(0x25a4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdb5, gbc.sp());
        EXPECT(0x25a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0176
        gbc.setState(0x9c15, 0x8132, 0xfd90, 0x2089, 0x7f7c, 0x858c, 0x0, 0x1);
        gbc.writeMem(0x9c15, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8132, gbc.sp());
        EXPECT(0x9c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c15));
        EXPECT(0x41, gbc.readMem(0x9c16));
        // CB 41 0177
        gbc.setState(0x6c39, 0xc43f, 0xb4c0, 0x4212, 0x8ba7, 0x1230, 0x0, 0x0);
        gbc.writeMem(0x6c39, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc43f, gbc.sp());
        EXPECT(0x6c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0178
        gbc.setState(0xa9b5, 0x88c0, 0x6d00, 0xa488, 0x584b, 0xc46a, 0x0, 0x1);
        gbc.writeMem(0xa9b5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x88c0, gbc.sp());
        EXPECT(0xa9b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b5));
        EXPECT(0x41, gbc.readMem(0xa9b6));
        // CB 41 0179
        gbc.setState(0xcf2a, 0x73c3, 0x3ec0, 0x356, 0xe236, 0x522d, 0x1, 0x0);
        gbc.writeMem(0xcf2a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x73c3, gbc.sp());
        EXPECT(0xcf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2a));
        EXPECT(0x41, gbc.readMem(0xcf2b));
        // CB 41 017A
        gbc.setState(0xa147, 0x88ca, 0x4b50, 0x6d37, 0xe4a0, 0xccc0, 0x0, 0x1);
        gbc.writeMem(0xa147, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x88ca, gbc.sp());
        EXPECT(0xa149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa147));
        EXPECT(0x41, gbc.readMem(0xa148));
        // CB 41 017B
        gbc.setState(0x6962, 0x4561, 0x78d0, 0x1608, 0x2da2, 0xdd11, 0x1, 0x1);
        gbc.writeMem(0x6962, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4561, gbc.sp());
        EXPECT(0x6964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 017C
        gbc.setState(0x6c1f, 0x8779, 0xc9a0, 0x6017, 0x8918, 0x12c4, 0x1, 0x0);
        gbc.writeMem(0x6c1f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8779, gbc.sp());
        EXPECT(0x6c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 017E
        gbc.setState(0x9887, 0xee0, 0xd970, 0x1bc6, 0x4dab, 0x2da5, 0x1, 0x1);
        gbc.writeMem(0x9887, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xee0, gbc.sp());
        EXPECT(0x9889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9887));
        EXPECT(0x41, gbc.readMem(0x9888));
        // CB 41 0180
        gbc.setState(0x9ea5, 0xc574, 0xf7d0, 0x68e0, 0xa71b, 0x566a, 0x1, 0x0);
        gbc.writeMem(0x9ea5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc574, gbc.sp());
        EXPECT(0x9ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea5));
        EXPECT(0x41, gbc.readMem(0x9ea6));
        // CB 41 0181
        gbc.setState(0xbfa1, 0xcda1, 0x650, 0x6b25, 0xadcb, 0xe474, 0x0, 0x1);
        gbc.writeMem(0xbfa1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcda1, gbc.sp());
        EXPECT(0xbfa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa1));
        EXPECT(0x41, gbc.readMem(0xbfa2));
        // CB 41 0182
        gbc.setState(0xa38, 0x8b80, 0x7ee0, 0xe05, 0x7737, 0x8f5a, 0x0, 0x1);
        gbc.writeMem(0xa38, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8b80, gbc.sp());
        EXPECT(0xa3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0183
        gbc.setState(0xc5d5, 0xf27d, 0x3ba0, 0x6e27, 0xa5ce, 0xbad, 0x1, 0x1);
        gbc.writeMem(0xc5d5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf27d, gbc.sp());
        EXPECT(0xc5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d5));
        EXPECT(0x41, gbc.readMem(0xc5d6));
        // CB 41 0184
        gbc.setState(0xde6e, 0x6513, 0xacd0, 0x5714, 0xf681, 0xde9e, 0x0, 0x0);
        gbc.writeMem(0xde6e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6513, gbc.sp());
        EXPECT(0xde70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6e));
        EXPECT(0x41, gbc.readMem(0xde6f));
        // CB 41 0185
        gbc.setState(0x7100, 0x32e2, 0x9d30, 0x48a7, 0xf1b9, 0x5dca, 0x0, 0x1);
        gbc.writeMem(0x7100, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x32e2, gbc.sp());
        EXPECT(0x7102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0186
        gbc.setState(0x1227, 0x75bc, 0x86b0, 0x4c08, 0xc36a, 0x263f, 0x1, 0x1);
        gbc.writeMem(0x1227, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x75bc, gbc.sp());
        EXPECT(0x1229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0187
        gbc.setState(0xd1aa, 0xc842, 0xd4b0, 0x5c2a, 0xc31d, 0xaa8a, 0x1, 0x1);
        gbc.writeMem(0xd1aa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc842, gbc.sp());
        EXPECT(0xd1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1aa));
        EXPECT(0x41, gbc.readMem(0xd1ab));
        // CB 41 0189
        gbc.setState(0x22bc, 0x8c1, 0x5ad0, 0x8b6d, 0xe078, 0x83d8, 0x0, 0x1);
        gbc.writeMem(0x22bc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8c1, gbc.sp());
        EXPECT(0x22be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 018A
        gbc.setState(0xed8d, 0xa853, 0xe630, 0x7e96, 0xb662, 0xd4c0, 0x1, 0x0);
        gbc.writeMem(0xed8d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa853, gbc.sp());
        EXPECT(0xed8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8d));
        EXPECT(0x41, gbc.readMem(0xed8e));
        // CB 41 018C
        gbc.setState(0x6780, 0x6cb1, 0x2ce0, 0xeab, 0x6605, 0x68b4, 0x0, 0x1);
        gbc.writeMem(0x6780, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6cb1, gbc.sp());
        EXPECT(0x6782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 018D
        gbc.setState(0x6c0e, 0x76c4, 0x4cc0, 0xbfd7, 0x5cf3, 0x625a, 0x0, 0x0);
        gbc.writeMem(0x6c0e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x76c4, gbc.sp());
        EXPECT(0x6c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 018F
        gbc.setState(0x8e99, 0x892f, 0xf390, 0x41d7, 0xdd69, 0xc1cb, 0x1, 0x1);
        gbc.writeMem(0x8e99, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x892f, gbc.sp());
        EXPECT(0x8e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e99));
        EXPECT(0x41, gbc.readMem(0x8e9a));
        // CB 41 0190
        gbc.setState(0x3928, 0xd85d, 0x7070, 0x6d81, 0x92f0, 0xc224, 0x1, 0x1);
        gbc.writeMem(0x3928, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd85d, gbc.sp());
        EXPECT(0x392a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0192
        gbc.setState(0x9cf1, 0xfff4, 0x37d0, 0xdc8b, 0xa39a, 0x8d50, 0x0, 0x0);
        gbc.writeMem(0x9cf1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfff4, gbc.sp());
        EXPECT(0x9cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf1));
        EXPECT(0x41, gbc.readMem(0x9cf2));
        // CB 41 0193
        gbc.setState(0x4909, 0x4396, 0x6a60, 0x88e8, 0x4ba8, 0x2ce8, 0x1, 0x0);
        gbc.writeMem(0x4909, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4396, gbc.sp());
        EXPECT(0x490b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0194
        gbc.setState(0x3115, 0x8cb7, 0x26d0, 0xc299, 0xb459, 0xf072, 0x0, 0x1);
        gbc.writeMem(0x3115, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8cb7, gbc.sp());
        EXPECT(0x3117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0195
        gbc.setState(0xf8c, 0xf7db, 0x4610, 0xc945, 0xb568, 0x7644, 0x0, 0x0);
        gbc.writeMem(0xf8c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf7db, gbc.sp());
        EXPECT(0xf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0196
        gbc.setState(0xa03d, 0xf684, 0x6530, 0xdba5, 0x1999, 0xc553, 0x1, 0x1);
        gbc.writeMem(0xa03d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf684, gbc.sp());
        EXPECT(0xa03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03d));
        EXPECT(0x41, gbc.readMem(0xa03e));
        // CB 41 0197
        gbc.setState(0x5324, 0x9db6, 0x2bb0, 0xd3d1, 0x8391, 0x69f9, 0x1, 0x1);
        gbc.writeMem(0x5324, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9db6, gbc.sp());
        EXPECT(0x5326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0198
        gbc.setState(0xb228, 0x3917, 0xfa60, 0xe6be, 0xf46, 0x858b, 0x1, 0x1);
        gbc.writeMem(0xb228, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3917, gbc.sp());
        EXPECT(0xb22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb228));
        EXPECT(0x41, gbc.readMem(0xb229));
        // CB 41 0199
        gbc.setState(0xe51e, 0xbd93, 0x1420, 0x2bc0, 0xcc78, 0xa4c3, 0x0, 0x0);
        gbc.writeMem(0xe51e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbd93, gbc.sp());
        EXPECT(0xe520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51e));
        EXPECT(0x41, gbc.readMem(0xe51f));
        // CB 41 019A
        gbc.setState(0x91ee, 0xbff7, 0xbaf0, 0x28a0, 0x1eb8, 0x4ae7, 0x0, 0x1);
        gbc.writeMem(0x91ee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbff7, gbc.sp());
        EXPECT(0x91f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ee));
        EXPECT(0x41, gbc.readMem(0x91ef));
        // CB 41 019B
        gbc.setState(0x8155, 0x2561, 0xf00, 0xa6ca, 0x2219, 0x376b, 0x0, 0x0);
        gbc.writeMem(0x8155, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2561, gbc.sp());
        EXPECT(0x8157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8155));
        EXPECT(0x41, gbc.readMem(0x8156));
        // CB 41 019C
        gbc.setState(0xc122, 0x4d64, 0x3690, 0xdce, 0xb569, 0x90d7, 0x1, 0x1);
        gbc.writeMem(0xc122, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4d64, gbc.sp());
        EXPECT(0xc124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc122));
        EXPECT(0x41, gbc.readMem(0xc123));
        // CB 41 019D
        gbc.setState(0x6b8, 0xf9f6, 0xbec0, 0x8457, 0xca20, 0x14a7, 0x0, 0x1);
        gbc.writeMem(0x6b8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf9f6, gbc.sp());
        EXPECT(0x6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 019F
        gbc.setState(0x5fff, 0x8ef6, 0x16e0, 0x1cba, 0x6db1, 0x39c5, 0x1, 0x0);
        gbc.writeMem(0x5fff, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8ef6, gbc.sp());
        EXPECT(0x6001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01A0
        gbc.setState(0x9908, 0xc5fe, 0xac30, 0xbc88, 0x508d, 0x924a, 0x1, 0x0);
        gbc.writeMem(0x9908, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc5fe, gbc.sp());
        EXPECT(0x990a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9908));
        EXPECT(0x41, gbc.readMem(0x9909));
        // CB 41 01A1
        gbc.setState(0x2d54, 0xd1d7, 0x0, 0xea72, 0xfa7b, 0x31a1, 0x1, 0x1);
        gbc.writeMem(0x2d54, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd1d7, gbc.sp());
        EXPECT(0x2d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01A2
        gbc.setState(0xcc15, 0x8bf1, 0x5a40, 0x48aa, 0x7ae1, 0xf0bd, 0x0, 0x0);
        gbc.writeMem(0xcc15, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8bf1, gbc.sp());
        EXPECT(0xcc17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc15));
        EXPECT(0x41, gbc.readMem(0xcc16));
        // CB 41 01A3
        gbc.setState(0xac9c, 0x5bde, 0x1100, 0x98b1, 0x8a60, 0x91f5, 0x0, 0x0);
        gbc.writeMem(0xac9c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5bde, gbc.sp());
        EXPECT(0xac9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9c));
        EXPECT(0x41, gbc.readMem(0xac9d));
        // CB 41 01A4
        gbc.setState(0xe116, 0xb6e7, 0x5480, 0x2514, 0xf785, 0x6c9f, 0x1, 0x0);
        gbc.writeMem(0xe116, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb6e7, gbc.sp());
        EXPECT(0xe118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe116));
        EXPECT(0x41, gbc.readMem(0xe117));
        // CB 41 01A5
        gbc.setState(0xe5b, 0x9c8f, 0x21c0, 0xc130, 0xb3db, 0xb718, 0x1, 0x1);
        gbc.writeMem(0xe5b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9c8f, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01A6
        gbc.setState(0xb663, 0xe882, 0xa970, 0x59e9, 0x362e, 0x8bfa, 0x1, 0x1);
        gbc.writeMem(0xb663, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe882, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb663));
        EXPECT(0x41, gbc.readMem(0xb664));
        // CB 41 01A8
        gbc.setState(0x9807, 0x915d, 0x52f0, 0x5535, 0x60da, 0x4ba, 0x1, 0x0);
        gbc.writeMem(0x9807, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x915d, gbc.sp());
        EXPECT(0x9809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9807));
        EXPECT(0x41, gbc.readMem(0x9808));
        // CB 41 01A9
        gbc.setState(0x41cc, 0xfc54, 0xbd00, 0x6113, 0xc29c, 0x3532, 0x0, 0x0);
        gbc.writeMem(0x41cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfc54, gbc.sp());
        EXPECT(0x41ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01AB
        gbc.setState(0x9dea, 0x7fed, 0xe850, 0xec30, 0xd51, 0xb5b8, 0x1, 0x0);
        gbc.writeMem(0x9dea, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7fed, gbc.sp());
        EXPECT(0x9dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dea));
        EXPECT(0x41, gbc.readMem(0x9deb));
        // CB 41 01AC
        gbc.setState(0xc3b8, 0x1368, 0x84e0, 0xaa63, 0xf1c, 0xcac8, 0x1, 0x0);
        gbc.writeMem(0xc3b8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1368, gbc.sp());
        EXPECT(0xc3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b8));
        EXPECT(0x41, gbc.readMem(0xc3b9));
        // CB 41 01AD
        gbc.setState(0x64a1, 0x5dfd, 0x5330, 0x5f2a, 0x807a, 0x3f22, 0x0, 0x0);
        gbc.writeMem(0x64a1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5dfd, gbc.sp());
        EXPECT(0x64a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01AE
        gbc.setState(0x1f84, 0x297b, 0xe490, 0x7177, 0x5381, 0xbc, 0x0, 0x1);
        gbc.writeMem(0x1f84, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x297b, gbc.sp());
        EXPECT(0x1f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01AF
        gbc.setState(0x920e, 0xb2cd, 0x3ce0, 0x8220, 0xf50a, 0xb39f, 0x0, 0x0);
        gbc.writeMem(0x920e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb2cd, gbc.sp());
        EXPECT(0x9210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x920e));
        EXPECT(0x41, gbc.readMem(0x920f));
        // CB 41 01B0
        gbc.setState(0x8974, 0xfd15, 0xead0, 0x1c6c, 0x7d68, 0xc5ff, 0x0, 0x0);
        gbc.writeMem(0x8974, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfd15, gbc.sp());
        EXPECT(0x8976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8974));
        EXPECT(0x41, gbc.readMem(0x8975));
        // CB 41 01B1
        gbc.setState(0x8a8a, 0x1934, 0x160, 0xff1b, 0x67d2, 0xc3ef, 0x1, 0x0);
        gbc.writeMem(0x8a8a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1934, gbc.sp());
        EXPECT(0x8a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8a));
        EXPECT(0x41, gbc.readMem(0x8a8b));
        // CB 41 01B2
        gbc.setState(0xbbe7, 0xfa24, 0xd6a0, 0xbc31, 0x5a2a, 0xbaec, 0x0, 0x0);
        gbc.writeMem(0xbbe7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfa24, gbc.sp());
        EXPECT(0xbbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe7));
        EXPECT(0x41, gbc.readMem(0xbbe8));
        // CB 41 01B3
        gbc.setState(0xda32, 0x997a, 0xb550, 0x22ff, 0xb743, 0x2179, 0x0, 0x0);
        gbc.writeMem(0xda32, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x997a, gbc.sp());
        EXPECT(0xda34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda32));
        EXPECT(0x41, gbc.readMem(0xda33));
        // CB 41 01B4
        gbc.setState(0x32eb, 0xe4f7, 0xf140, 0x960d, 0xb906, 0x8747, 0x1, 0x1);
        gbc.writeMem(0x32eb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe4f7, gbc.sp());
        EXPECT(0x32ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01B5
        gbc.setState(0x2ccb, 0xa2c9, 0x80e0, 0x5dfb, 0xcde1, 0xc133, 0x0, 0x1);
        gbc.writeMem(0x2ccb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa2c9, gbc.sp());
        EXPECT(0x2ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01B6
        gbc.setState(0x1986, 0x918a, 0xd910, 0x9bab, 0x11a0, 0xf37c, 0x0, 0x1);
        gbc.writeMem(0x1986, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x918a, gbc.sp());
        EXPECT(0x1988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01B7
        gbc.setState(0xd972, 0x6bab, 0x53d0, 0x2ede, 0x5e94, 0x2d0c, 0x1, 0x1);
        gbc.writeMem(0xd972, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6bab, gbc.sp());
        EXPECT(0xd974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd972));
        EXPECT(0x41, gbc.readMem(0xd973));
        // CB 41 01B8
        gbc.setState(0x7d86, 0xf223, 0x7190, 0x12cf, 0xeb07, 0xbfab, 0x1, 0x0);
        gbc.writeMem(0x7d86, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf223, gbc.sp());
        EXPECT(0x7d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01B9
        gbc.setState(0x267d, 0x5e6a, 0xdbf0, 0xa6bd, 0xef9c, 0x6b4, 0x1, 0x1);
        gbc.writeMem(0x267d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5e6a, gbc.sp());
        EXPECT(0x267f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01BA
        gbc.setState(0x7115, 0xa399, 0x6ec0, 0x6310, 0xff72, 0x7ff3, 0x0, 0x1);
        gbc.writeMem(0x7115, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa399, gbc.sp());
        EXPECT(0x7117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01BB
        gbc.setState(0x34e8, 0x36a, 0x28c0, 0x2b3c, 0xad7e, 0xbe35, 0x1, 0x1);
        gbc.writeMem(0x34e8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x36a, gbc.sp());
        EXPECT(0x34ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01BC
        gbc.setState(0x33e4, 0xf090, 0xe220, 0x9bbe, 0x69d8, 0xdca4, 0x0, 0x1);
        gbc.writeMem(0x33e4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf090, gbc.sp());
        EXPECT(0x33e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01BD
        gbc.setState(0xb9e3, 0x6e7, 0x2a70, 0xecd5, 0x3c07, 0xdd3, 0x1, 0x0);
        gbc.writeMem(0xb9e3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6e7, gbc.sp());
        EXPECT(0xb9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e3));
        EXPECT(0x41, gbc.readMem(0xb9e4));
        // CB 41 01BF
        gbc.setState(0xd7f6, 0xebc7, 0x9590, 0xe5f3, 0x2a46, 0x4a15, 0x1, 0x0);
        gbc.writeMem(0xd7f6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xebc7, gbc.sp());
        EXPECT(0xd7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f6));
        EXPECT(0x41, gbc.readMem(0xd7f7));
        // CB 41 01C0
        gbc.setState(0xeb1e, 0x5461, 0x5ff0, 0x3088, 0xfdd8, 0xeadd, 0x1, 0x1);
        gbc.writeMem(0xeb1e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5461, gbc.sp());
        EXPECT(0xeb20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1e));
        EXPECT(0x41, gbc.readMem(0xeb1f));
        // CB 41 01C1
        gbc.setState(0x79d3, 0x2215, 0xa890, 0xcc8b, 0x7dea, 0x9759, 0x1, 0x0);
        gbc.writeMem(0x79d3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2215, gbc.sp());
        EXPECT(0x79d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01C2
        gbc.setState(0x79ae, 0x61e9, 0x5ac0, 0x6e44, 0xbb0f, 0xf5bd, 0x1, 0x1);
        gbc.writeMem(0x79ae, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x61e9, gbc.sp());
        EXPECT(0x79b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01C3
        gbc.setState(0x46ef, 0xbdf2, 0xe660, 0x310b, 0xdd5f, 0x999f, 0x1, 0x1);
        gbc.writeMem(0x46ef, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbdf2, gbc.sp());
        EXPECT(0x46f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01C4
        gbc.setState(0x3e7b, 0x8582, 0xa0a0, 0xac24, 0xaf45, 0x3c67, 0x1, 0x0);
        gbc.writeMem(0x3e7b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8582, gbc.sp());
        EXPECT(0x3e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01C5
        gbc.setState(0x6cf6, 0x8e4f, 0xf080, 0xd8e4, 0xf2e8, 0x9f0f, 0x0, 0x0);
        gbc.writeMem(0x6cf6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8e4f, gbc.sp());
        EXPECT(0x6cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01C6
        gbc.setState(0xb3d3, 0x5908, 0x19e0, 0x404d, 0x1eb0, 0x667d, 0x0, 0x1);
        gbc.writeMem(0xb3d3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5908, gbc.sp());
        EXPECT(0xb3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d3));
        EXPECT(0x41, gbc.readMem(0xb3d4));
        // CB 41 01C8
        gbc.setState(0xea9a, 0x4d66, 0xb510, 0x8596, 0xf378, 0x71dd, 0x1, 0x1);
        gbc.writeMem(0xea9a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4d66, gbc.sp());
        EXPECT(0xea9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea9a));
        EXPECT(0x41, gbc.readMem(0xea9b));
        // CB 41 01C9
        gbc.setState(0x37fe, 0x4437, 0x5cd0, 0x73bd, 0xfaff, 0xfa99, 0x0, 0x0);
        gbc.writeMem(0x37fe, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4437, gbc.sp());
        EXPECT(0x3800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01CA
        gbc.setState(0xe220, 0x8c9, 0x9a90, 0x55c4, 0x62aa, 0x54cb, 0x1, 0x0);
        gbc.writeMem(0xe220, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8c9, gbc.sp());
        EXPECT(0xe222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe220));
        EXPECT(0x41, gbc.readMem(0xe221));
        // CB 41 01CB
        gbc.setState(0x6abb, 0x8e8b, 0x14f0, 0x8947, 0x7e65, 0xbe9f, 0x0, 0x0);
        gbc.writeMem(0x6abb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8e8b, gbc.sp());
        EXPECT(0x6abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01CC
        gbc.setState(0xef24, 0xd9d8, 0x3ee0, 0x37a2, 0xde22, 0x7d05, 0x0, 0x1);
        gbc.writeMem(0xef24, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd9d8, gbc.sp());
        EXPECT(0xef26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef24));
        EXPECT(0x41, gbc.readMem(0xef25));
        // CB 41 01CD
        gbc.setState(0x6193, 0x8681, 0x7660, 0x7709, 0xe5a7, 0x300b, 0x1, 0x1);
        gbc.writeMem(0x6193, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8681, gbc.sp());
        EXPECT(0x6195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01CE
        gbc.setState(0x1b36, 0xf35e, 0x72e0, 0xc7b4, 0xe34b, 0x4faa, 0x0, 0x0);
        gbc.writeMem(0x1b36, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf35e, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01CF
        gbc.setState(0xd6f7, 0xa549, 0xffc0, 0x5dd9, 0xa3e3, 0x62bd, 0x1, 0x1);
        gbc.writeMem(0xd6f7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa549, gbc.sp());
        EXPECT(0xd6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f7));
        EXPECT(0x41, gbc.readMem(0xd6f8));
        // CB 41 01D0
        gbc.setState(0xa6f5, 0xdf0b, 0xf970, 0x99f1, 0x3f4c, 0x90e6, 0x1, 0x0);
        gbc.writeMem(0xa6f5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdf0b, gbc.sp());
        EXPECT(0xa6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f5));
        EXPECT(0x41, gbc.readMem(0xa6f6));
        // CB 41 01D1
        gbc.setState(0x4caf, 0x9a0f, 0x7b0, 0xf872, 0x76b, 0x15e9, 0x1, 0x0);
        gbc.writeMem(0x4caf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9a0f, gbc.sp());
        EXPECT(0x4cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01D2
        gbc.setState(0x27f2, 0x3779, 0xe630, 0x981c, 0x22a0, 0x18e5, 0x1, 0x0);
        gbc.writeMem(0x27f2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3779, gbc.sp());
        EXPECT(0x27f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01D3
        gbc.setState(0x83e, 0x265d, 0x9c70, 0xd34f, 0x8dd4, 0xf889, 0x1, 0x1);
        gbc.writeMem(0x83e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x265d, gbc.sp());
        EXPECT(0x840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01D4
        gbc.setState(0x2294, 0x37d0, 0x1030, 0x214e, 0x5eb1, 0xb0b, 0x1, 0x0);
        gbc.writeMem(0x2294, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x37d0, gbc.sp());
        EXPECT(0x2296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01D5
        gbc.setState(0x42d8, 0xd7f0, 0xd740, 0x3bc1, 0x3b24, 0xa1b6, 0x0, 0x1);
        gbc.writeMem(0x42d8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd7f0, gbc.sp());
        EXPECT(0x42da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01D6
        gbc.setState(0x2aee, 0x3f2c, 0xfff0, 0xb5ce, 0x27d3, 0x5df0, 0x1, 0x1);
        gbc.writeMem(0x2aee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3f2c, gbc.sp());
        EXPECT(0x2af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01D7
        gbc.setState(0x9c9, 0x5055, 0xa360, 0xf916, 0xed68, 0xcccf, 0x0, 0x1);
        gbc.writeMem(0x9c9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5055, gbc.sp());
        EXPECT(0x9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01D8
        gbc.setState(0x9da1, 0xa20f, 0xe010, 0xd23b, 0x3d9b, 0xd76b, 0x0, 0x1);
        gbc.writeMem(0x9da1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa20f, gbc.sp());
        EXPECT(0x9da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da1));
        EXPECT(0x41, gbc.readMem(0x9da2));
        // CB 41 01D9
        gbc.setState(0x37d2, 0x4be7, 0x5380, 0xdae9, 0x1485, 0xa1ac, 0x0, 0x1);
        gbc.writeMem(0x37d2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4be7, gbc.sp());
        EXPECT(0x37d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01DA
        gbc.setState(0x4091, 0x7247, 0x85f0, 0x25d7, 0x3e88, 0x7f4f, 0x1, 0x0);
        gbc.writeMem(0x4091, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7247, gbc.sp());
        EXPECT(0x4093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01DB
        gbc.setState(0xb1a9, 0x7603, 0x1030, 0xdc28, 0x79b8, 0xbe2b, 0x0, 0x1);
        gbc.writeMem(0xb1a9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7603, gbc.sp());
        EXPECT(0xb1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a9));
        EXPECT(0x41, gbc.readMem(0xb1aa));
        // CB 41 01DC
        gbc.setState(0x461e, 0xaf59, 0xe1d0, 0x9efa, 0xa3b6, 0xeb45, 0x0, 0x1);
        gbc.writeMem(0x461e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xaf59, gbc.sp());
        EXPECT(0x4620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01DD
        gbc.setState(0x4a6f, 0xc9c8, 0x9aa0, 0xf47, 0x5336, 0x90c7, 0x1, 0x0);
        gbc.writeMem(0x4a6f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc9c8, gbc.sp());
        EXPECT(0x4a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01DE
        gbc.setState(0xd461, 0xe9dd, 0xc210, 0xb639, 0xdb5d, 0xebb4, 0x1, 0x0);
        gbc.writeMem(0xd461, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe9dd, gbc.sp());
        EXPECT(0xd463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd461));
        EXPECT(0x41, gbc.readMem(0xd462));
        // CB 41 01DF
        gbc.setState(0xac5f, 0x2d98, 0x8b20, 0xda18, 0x7360, 0x153c, 0x1, 0x1);
        gbc.writeMem(0xac5f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2d98, gbc.sp());
        EXPECT(0xac61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5f));
        EXPECT(0x41, gbc.readMem(0xac60));
        // CB 41 01E0
        gbc.setState(0x5086, 0x46ca, 0xdae0, 0x3492, 0x4e5c, 0xe747, 0x0, 0x1);
        gbc.writeMem(0x5086, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x46ca, gbc.sp());
        EXPECT(0x5088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01E1
        gbc.setState(0xe13e, 0x2311, 0xff90, 0xb67d, 0xde40, 0x6727, 0x1, 0x1);
        gbc.writeMem(0xe13e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2311, gbc.sp());
        EXPECT(0xe140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe13e));
        EXPECT(0x41, gbc.readMem(0xe13f));
        // CB 41 01E2
        gbc.setState(0xda19, 0x4341, 0x3b20, 0x31cf, 0xd330, 0xc595, 0x1, 0x0);
        gbc.writeMem(0xda19, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4341, gbc.sp());
        EXPECT(0xda1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda19));
        EXPECT(0x41, gbc.readMem(0xda1a));
        // CB 41 01E3
        gbc.setState(0xb0d0, 0x3d27, 0x7d50, 0xc98c, 0x86f4, 0xb53a, 0x1, 0x0);
        gbc.writeMem(0xb0d0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3d27, gbc.sp());
        EXPECT(0xb0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d0));
        EXPECT(0x41, gbc.readMem(0xb0d1));
        // CB 41 01E4
        gbc.setState(0x395b, 0x1b81, 0x93f0, 0x429f, 0xe620, 0xea9c, 0x1, 0x1);
        gbc.writeMem(0x395b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1b81, gbc.sp());
        EXPECT(0x395d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01E5
        gbc.setState(0xac78, 0x29e1, 0x46c0, 0xa45e, 0xa19d, 0x7237, 0x1, 0x1);
        gbc.writeMem(0xac78, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x29e1, gbc.sp());
        EXPECT(0xac7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac78));
        EXPECT(0x41, gbc.readMem(0xac79));
        // CB 41 01E6
        gbc.setState(0x9dcb, 0x4605, 0x36a0, 0x8edf, 0x3370, 0xd1ca, 0x0, 0x0);
        gbc.writeMem(0x9dcb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4605, gbc.sp());
        EXPECT(0x9dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dcb));
        EXPECT(0x41, gbc.readMem(0x9dcc));
        // CB 41 01E7
        gbc.setState(0xdd57, 0xd1ba, 0xb600, 0x1cc7, 0x3052, 0x5fa3, 0x1, 0x0);
        gbc.writeMem(0xdd57, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd1ba, gbc.sp());
        EXPECT(0xdd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd57));
        EXPECT(0x41, gbc.readMem(0xdd58));
        // CB 41 01E8
        gbc.setState(0x600a, 0x4cdb, 0xe860, 0xaa16, 0xe4c8, 0xf88a, 0x1, 0x1);
        gbc.writeMem(0x600a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4cdb, gbc.sp());
        EXPECT(0x600c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01E9
        gbc.setState(0x2f3b, 0xde62, 0xd600, 0xdc14, 0x9daf, 0xb475, 0x0, 0x1);
        gbc.writeMem(0x2f3b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xde62, gbc.sp());
        EXPECT(0x2f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01EA
        gbc.setState(0xc739, 0x17d7, 0x3a90, 0x33e1, 0x38a5, 0xd78b, 0x0, 0x1);
        gbc.writeMem(0xc739, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x17d7, gbc.sp());
        EXPECT(0xc73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc739));
        EXPECT(0x41, gbc.readMem(0xc73a));
        // CB 41 01EB
        gbc.setState(0xf65, 0x8b22, 0xc6d0, 0x65ee, 0x5ae6, 0x3aa8, 0x1, 0x1);
        gbc.writeMem(0xf65, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8b22, gbc.sp());
        EXPECT(0xf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01EC
        gbc.setState(0x61c, 0xdb69, 0xc540, 0x870d, 0x2067, 0xedb4, 0x1, 0x1);
        gbc.writeMem(0x61c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdb69, gbc.sp());
        EXPECT(0x61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01ED
        gbc.setState(0x6287, 0x5770, 0x8820, 0xd53f, 0xb60f, 0xe7f0, 0x0, 0x1);
        gbc.writeMem(0x6287, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5770, gbc.sp());
        EXPECT(0x6289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01EE
        gbc.setState(0x612d, 0xaaf0, 0xf110, 0x3f5a, 0x72d8, 0x1556, 0x0, 0x1);
        gbc.writeMem(0x612d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xaaf0, gbc.sp());
        EXPECT(0x612f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01EF
        gbc.setState(0x7dc6, 0x778e, 0x4f10, 0x8a99, 0x1cb7, 0x41ac, 0x1, 0x1);
        gbc.writeMem(0x7dc6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x778e, gbc.sp());
        EXPECT(0x7dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01F0
        gbc.setState(0x47c, 0x7583, 0xd820, 0x9bc0, 0x827c, 0x78bd, 0x1, 0x1);
        gbc.writeMem(0x47c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7583, gbc.sp());
        EXPECT(0x47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01F1
        gbc.setState(0xcc72, 0x8000, 0x25c0, 0x764, 0xcf77, 0x7018, 0x0, 0x0);
        gbc.writeMem(0xcc72, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8000, gbc.sp());
        EXPECT(0xcc74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc72));
        EXPECT(0x41, gbc.readMem(0xcc73));
        // CB 41 01F2
        gbc.setState(0x25a1, 0xc0f8, 0x8370, 0xe324, 0xf5d8, 0x1ab0, 0x0, 0x1);
        gbc.writeMem(0x25a1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc0f8, gbc.sp());
        EXPECT(0x25a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01F3
        gbc.setState(0x9567, 0x53c3, 0xe7b0, 0xb1b1, 0x6ae0, 0xaaa7, 0x1, 0x0);
        gbc.writeMem(0x9567, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x53c3, gbc.sp());
        EXPECT(0x9569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9567));
        EXPECT(0x41, gbc.readMem(0x9568));
        // CB 41 01F4
        gbc.setState(0x9922, 0xd8a4, 0x1190, 0xe054, 0x1588, 0xc51c, 0x0, 0x0);
        gbc.writeMem(0x9922, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd8a4, gbc.sp());
        EXPECT(0x9924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9922));
        EXPECT(0x41, gbc.readMem(0x9923));
        // CB 41 01F5
        gbc.setState(0xea9d, 0x628a, 0xb050, 0x5134, 0x7780, 0x1851, 0x1, 0x0);
        gbc.writeMem(0xea9d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x628a, gbc.sp());
        EXPECT(0xea9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea9d));
        EXPECT(0x41, gbc.readMem(0xea9e));
        // CB 41 01F6
        gbc.setState(0x106a, 0x516b, 0xa630, 0x9836, 0x41b5, 0xd095, 0x0, 0x1);
        gbc.writeMem(0x106a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0x106c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01F8
        gbc.setState(0x6a44, 0x2fa6, 0xdb30, 0x6356, 0xb830, 0x8871, 0x0, 0x1);
        gbc.writeMem(0x6a44, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2fa6, gbc.sp());
        EXPECT(0x6a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01F9
        gbc.setState(0x31b0, 0x6e75, 0x4f0, 0xad3, 0x2797, 0x949c, 0x0, 0x0);
        gbc.writeMem(0x31b0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6e75, gbc.sp());
        EXPECT(0x31b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01FA
        gbc.setState(0x3887, 0xc3e1, 0xc510, 0xd808, 0x228, 0x1af4, 0x0, 0x0);
        gbc.writeMem(0x3887, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc3e1, gbc.sp());
        EXPECT(0x3889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01FB
        gbc.setState(0x66f3, 0x9ae6, 0xde10, 0x1133, 0x8174, 0x61a5, 0x1, 0x1);
        gbc.writeMem(0x66f3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9ae6, gbc.sp());
        EXPECT(0x66f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 01FC
        gbc.setState(0x87df, 0xee3, 0x3e10, 0x39f9, 0x1ab2, 0x45b8, 0x0, 0x0);
        gbc.writeMem(0x87df, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xee3, gbc.sp());
        EXPECT(0x87e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87df));
        EXPECT(0x41, gbc.readMem(0x87e0));
        // CB 41 01FD
        gbc.setState(0x5bf3, 0x58a9, 0x2820, 0x279c, 0x9b79, 0xcf9, 0x0, 0x1);
        gbc.writeMem(0x5bf3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x58a9, gbc.sp());
        EXPECT(0x5bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 01FE
        gbc.setState(0xe31, 0x6ee5, 0xbcf0, 0xa914, 0xd7c5, 0xa98b, 0x0, 0x0);
        gbc.writeMem(0xe31, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6ee5, gbc.sp());
        EXPECT(0xe33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0200
        gbc.setState(0xd785, 0xb51, 0x6f30, 0x6878, 0xe11d, 0x4f09, 0x0, 0x0);
        gbc.writeMem(0xd785, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb51, gbc.sp());
        EXPECT(0xd787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd785));
        EXPECT(0x41, gbc.readMem(0xd786));
        // CB 41 0201
        gbc.setState(0xe271, 0x5089, 0xa3c0, 0xba0b, 0x3356, 0xf6b8, 0x0, 0x1);
        gbc.writeMem(0xe271, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5089, gbc.sp());
        EXPECT(0xe273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe271));
        EXPECT(0x41, gbc.readMem(0xe272));
        // CB 41 0202
        gbc.setState(0x518d, 0xaa76, 0x4b50, 0x436, 0x5e2a, 0x604d, 0x0, 0x0);
        gbc.writeMem(0x518d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaa76, gbc.sp());
        EXPECT(0x518f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0203
        gbc.setState(0x770e, 0x9e33, 0xdd70, 0x55f5, 0x865f, 0x12f9, 0x0, 0x0);
        gbc.writeMem(0x770e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9e33, gbc.sp());
        EXPECT(0x7710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0204
        gbc.setState(0xcf94, 0x4b2, 0x9580, 0xde2b, 0x1c52, 0x692e, 0x0, 0x0);
        gbc.writeMem(0xcf94, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4b2, gbc.sp());
        EXPECT(0xcf96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf94));
        EXPECT(0x41, gbc.readMem(0xcf95));
        // CB 41 0205
        gbc.setState(0xb8e6, 0x33e1, 0x8560, 0x9c23, 0x640a, 0x29cf, 0x1, 0x0);
        gbc.writeMem(0xb8e6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x33e1, gbc.sp());
        EXPECT(0xb8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e6));
        EXPECT(0x41, gbc.readMem(0xb8e7));
        // CB 41 0207
        gbc.setState(0x5692, 0xc423, 0xc4a0, 0x8ac2, 0x1b90, 0x67b7, 0x0, 0x1);
        gbc.writeMem(0x5692, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc423, gbc.sp());
        EXPECT(0x5694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0208
        gbc.setState(0x40ee, 0x436b, 0xb6c0, 0xa2d1, 0xfe8c, 0x3f8f, 0x1, 0x1);
        gbc.writeMem(0x40ee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x436b, gbc.sp());
        EXPECT(0x40f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0209
        gbc.setState(0xeea2, 0xe59e, 0xd910, 0x96d5, 0xe453, 0xf71a, 0x1, 0x0);
        gbc.writeMem(0xeea2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe59e, gbc.sp());
        EXPECT(0xeea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea2));
        EXPECT(0x41, gbc.readMem(0xeea3));
        // CB 41 020A
        gbc.setState(0x7163, 0xe41f, 0xe2b0, 0x799, 0x3aec, 0x1ab0, 0x0, 0x1);
        gbc.writeMem(0x7163, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe41f, gbc.sp());
        EXPECT(0x7165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 020B
        gbc.setState(0xd407, 0x7c5f, 0x26d0, 0x309b, 0x4e84, 0x5778, 0x1, 0x0);
        gbc.writeMem(0xd407, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7c5f, gbc.sp());
        EXPECT(0xd409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd407));
        EXPECT(0x41, gbc.readMem(0xd408));
        // CB 41 020C
        gbc.setState(0x5a00, 0xf4ed, 0x5a0, 0xc837, 0xe6fa, 0xf280, 0x0, 0x1);
        gbc.writeMem(0x5a00, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf4ed, gbc.sp());
        EXPECT(0x5a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 020D
        gbc.setState(0x92cf, 0x63c0, 0x1a0, 0xf547, 0x54a2, 0xe540, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x63c0, gbc.sp());
        EXPECT(0x92d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92cf));
        EXPECT(0x41, gbc.readMem(0x92d0));
        // CB 41 020E
        gbc.setState(0xd48b, 0x626d, 0xcfd0, 0x85ec, 0xd542, 0x59e0, 0x0, 0x1);
        gbc.writeMem(0xd48b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x626d, gbc.sp());
        EXPECT(0xd48d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd48b));
        EXPECT(0x41, gbc.readMem(0xd48c));
        // CB 41 020F
        gbc.setState(0x683e, 0xd869, 0x6b10, 0x162d, 0xc058, 0x61f3, 0x1, 0x0);
        gbc.writeMem(0x683e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0x6840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0210
        gbc.setState(0x66d3, 0x7fc3, 0x3fb0, 0xfd36, 0x6deb, 0x3248, 0x0, 0x1);
        gbc.writeMem(0x66d3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7fc3, gbc.sp());
        EXPECT(0x66d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0211
        gbc.setState(0x6ba8, 0x44d, 0xe300, 0x158d, 0x3195, 0xec40, 0x1, 0x1);
        gbc.writeMem(0x6ba8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x44d, gbc.sp());
        EXPECT(0x6baa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0212
        gbc.setState(0x96e9, 0xddae, 0x2380, 0xf3b8, 0xf793, 0xb7f6, 0x1, 0x1);
        gbc.writeMem(0x96e9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xddae, gbc.sp());
        EXPECT(0x96eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e9));
        EXPECT(0x41, gbc.readMem(0x96ea));
        // CB 41 0213
        gbc.setState(0x4d3c, 0xef0b, 0x31c0, 0x732f, 0x137e, 0xc051, 0x0, 0x0);
        gbc.writeMem(0x4d3c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xef0b, gbc.sp());
        EXPECT(0x4d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0214
        gbc.setState(0x596e, 0xb7c, 0xa2c0, 0x4dc6, 0x404e, 0x24e1, 0x0, 0x0);
        gbc.writeMem(0x596e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb7c, gbc.sp());
        EXPECT(0x5970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0215
        gbc.setState(0x59cc, 0x36c, 0x1d30, 0xc3e7, 0x2082, 0x6012, 0x1, 0x1);
        gbc.writeMem(0x59cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x36c, gbc.sp());
        EXPECT(0x59ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0216
        gbc.setState(0xda86, 0x733b, 0x3e60, 0x330a, 0x52d9, 0xbbae, 0x1, 0x0);
        gbc.writeMem(0xda86, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x733b, gbc.sp());
        EXPECT(0xda88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda86));
        EXPECT(0x41, gbc.readMem(0xda87));
        // CB 41 0217
        gbc.setState(0x52ec, 0xc6f2, 0x8920, 0xa8b8, 0xb2ef, 0x4a94, 0x0, 0x1);
        gbc.writeMem(0x52ec, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc6f2, gbc.sp());
        EXPECT(0x52ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0218
        gbc.setState(0xc9b0, 0x5a37, 0x93f0, 0x82e2, 0xb7a5, 0x27a2, 0x1, 0x0);
        gbc.writeMem(0xc9b0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5a37, gbc.sp());
        EXPECT(0xc9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b0));
        EXPECT(0x41, gbc.readMem(0xc9b1));
        // CB 41 0219
        gbc.setState(0x386d, 0x81f2, 0x3ad0, 0x322f, 0x346e, 0x8205, 0x0, 0x1);
        gbc.writeMem(0x386d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x81f2, gbc.sp());
        EXPECT(0x386f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 021B
        gbc.setState(0x4c15, 0x5a40, 0x2c0, 0xbedb, 0xb0f1, 0xd7b, 0x0, 0x1);
        gbc.writeMem(0x4c15, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5a40, gbc.sp());
        EXPECT(0x4c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 021C
        gbc.setState(0xbb73, 0x9963, 0x6020, 0xdb01, 0x9096, 0x16e2, 0x0, 0x1);
        gbc.writeMem(0xbb73, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9963, gbc.sp());
        EXPECT(0xbb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb73));
        EXPECT(0x41, gbc.readMem(0xbb74));
        // CB 41 021D
        gbc.setState(0x3bb7, 0xc750, 0x2ee0, 0xb68, 0x4053, 0xfa1b, 0x0, 0x1);
        gbc.writeMem(0x3bb7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc750, gbc.sp());
        EXPECT(0x3bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 021E
        gbc.setState(0xe326, 0xc739, 0x3c30, 0xd187, 0x14f6, 0x1321, 0x0, 0x1);
        gbc.writeMem(0xe326, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc739, gbc.sp());
        EXPECT(0xe328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe326));
        EXPECT(0x41, gbc.readMem(0xe327));
        // CB 41 021F
        gbc.setState(0x3ace, 0xfe0a, 0x1190, 0x71e1, 0xee58, 0xcecf, 0x0, 0x1);
        gbc.writeMem(0x3ace, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfe0a, gbc.sp());
        EXPECT(0x3ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0220
        gbc.setState(0xa772, 0xc83f, 0x6b90, 0x2062, 0x4593, 0xf30c, 0x0, 0x0);
        gbc.writeMem(0xa772, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc83f, gbc.sp());
        EXPECT(0xa774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa772));
        EXPECT(0x41, gbc.readMem(0xa773));
        // CB 41 0221
        gbc.setState(0x56f0, 0x1cfe, 0xa680, 0x9306, 0xe83f, 0xfe7f, 0x0, 0x1);
        gbc.writeMem(0x56f0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1cfe, gbc.sp());
        EXPECT(0x56f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0222
        gbc.setState(0x7dee, 0x1fcb, 0x9370, 0xe3fb, 0xd83e, 0x7b38, 0x1, 0x1);
        gbc.writeMem(0x7dee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1fcb, gbc.sp());
        EXPECT(0x7df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0223
        gbc.setState(0xecfa, 0x301c, 0x9f20, 0x50b9, 0xf98c, 0x2f9c, 0x1, 0x1);
        gbc.writeMem(0xecfa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x301c, gbc.sp());
        EXPECT(0xecfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecfa));
        EXPECT(0x41, gbc.readMem(0xecfb));
        // CB 41 0224
        gbc.setState(0x6d95, 0xa0ed, 0xab90, 0x6da5, 0xeacd, 0xa04f, 0x1, 0x1);
        gbc.writeMem(0x6d95, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa0ed, gbc.sp());
        EXPECT(0x6d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0225
        gbc.setState(0x208e, 0x59dd, 0x11a0, 0x16aa, 0xaa47, 0x5bd6, 0x0, 0x1);
        gbc.writeMem(0x208e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x59dd, gbc.sp());
        EXPECT(0x2090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0226
        gbc.setState(0xb4c7, 0x2aaa, 0xfd60, 0x1811, 0x475, 0x4977, 0x1, 0x1);
        gbc.writeMem(0xb4c7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2aaa, gbc.sp());
        EXPECT(0xb4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c7));
        EXPECT(0x41, gbc.readMem(0xb4c8));
        // CB 41 0227
        gbc.setState(0xd10b, 0xf0aa, 0xd200, 0xdf9b, 0x8ea1, 0x7978, 0x1, 0x0);
        gbc.writeMem(0xd10b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf0aa, gbc.sp());
        EXPECT(0xd10d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10b));
        EXPECT(0x41, gbc.readMem(0xd10c));
        // CB 41 0228
        gbc.setState(0x8220, 0x965e, 0xff90, 0xa08, 0x34fb, 0x883d, 0x1, 0x0);
        gbc.writeMem(0x8220, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x965e, gbc.sp());
        EXPECT(0x8222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8220));
        EXPECT(0x41, gbc.readMem(0x8221));
        // CB 41 0229
        gbc.setState(0x1755, 0x61a3, 0x1050, 0x65ce, 0x662, 0xaac9, 0x0, 0x1);
        gbc.writeMem(0x1755, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x61a3, gbc.sp());
        EXPECT(0x1757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 022A
        gbc.setState(0x8fb0, 0x52c0, 0x4f90, 0x110c, 0xf506, 0xcd3, 0x1, 0x1);
        gbc.writeMem(0x8fb0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x52c0, gbc.sp());
        EXPECT(0x8fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb0));
        EXPECT(0x41, gbc.readMem(0x8fb1));
        // CB 41 022B
        gbc.setState(0x8fcc, 0x7656, 0x6200, 0x788, 0x2902, 0xd807, 0x1, 0x0);
        gbc.writeMem(0x8fcc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7656, gbc.sp());
        EXPECT(0x8fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcc));
        EXPECT(0x41, gbc.readMem(0x8fcd));
        // CB 41 022C
        gbc.setState(0x6d06, 0xfc27, 0x80e0, 0x1895, 0xa897, 0x17a5, 0x0, 0x1);
        gbc.writeMem(0x6d06, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfc27, gbc.sp());
        EXPECT(0x6d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 022D
        gbc.setState(0x37e5, 0xa89f, 0x5090, 0x72c7, 0x268c, 0xbfc9, 0x0, 0x0);
        gbc.writeMem(0x37e5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa89f, gbc.sp());
        EXPECT(0x37e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 022E
        gbc.setState(0xb283, 0xfa2e, 0x91d0, 0x9b4c, 0x2c48, 0xf4ba, 0x0, 0x1);
        gbc.writeMem(0xb283, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfa2e, gbc.sp());
        EXPECT(0xb285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb283));
        EXPECT(0x41, gbc.readMem(0xb284));
        // CB 41 022F
        gbc.setState(0x31f3, 0xf20a, 0x8fd0, 0x2392, 0xac37, 0x3513, 0x0, 0x0);
        gbc.writeMem(0x31f3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf20a, gbc.sp());
        EXPECT(0x31f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0230
        gbc.setState(0xa2a1, 0xf46c, 0xef60, 0x13ea, 0x4413, 0x63c0, 0x0, 0x0);
        gbc.writeMem(0xa2a1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf46c, gbc.sp());
        EXPECT(0xa2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a1));
        EXPECT(0x41, gbc.readMem(0xa2a2));
        // CB 41 0231
        gbc.setState(0xa348, 0x5745, 0xbcf0, 0x2f25, 0x9545, 0x4668, 0x0, 0x0);
        gbc.writeMem(0xa348, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5745, gbc.sp());
        EXPECT(0xa34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa348));
        EXPECT(0x41, gbc.readMem(0xa349));
        // CB 41 0232
        gbc.setState(0xd5b1, 0xf599, 0xca90, 0x960b, 0xa0fd, 0x7b20, 0x0, 0x0);
        gbc.writeMem(0xd5b1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf599, gbc.sp());
        EXPECT(0xd5b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b1));
        EXPECT(0x41, gbc.readMem(0xd5b2));
        // CB 41 0233
        gbc.setState(0xd1f0, 0xa36a, 0x49b0, 0x7a0f, 0x7a7f, 0x2287, 0x1, 0x0);
        gbc.writeMem(0xd1f0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa36a, gbc.sp());
        EXPECT(0xd1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f0));
        EXPECT(0x41, gbc.readMem(0xd1f1));
        // CB 41 0235
        gbc.setState(0x9eef, 0x1e22, 0x3210, 0x21e6, 0xe5a5, 0x9e5a, 0x0, 0x1);
        gbc.writeMem(0x9eef, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1e22, gbc.sp());
        EXPECT(0x9ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eef));
        EXPECT(0x41, gbc.readMem(0x9ef0));
        // CB 41 0236
        gbc.setState(0x6d04, 0xf080, 0xf590, 0xbe29, 0x326d, 0xeb5f, 0x0, 0x1);
        gbc.writeMem(0x6d04, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf080, gbc.sp());
        EXPECT(0x6d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0237
        gbc.setState(0x2159, 0x8537, 0x7ba0, 0x62dc, 0x2947, 0x75a0, 0x1, 0x0);
        gbc.writeMem(0x2159, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8537, gbc.sp());
        EXPECT(0x215b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0238
        gbc.setState(0x186f, 0x7e5f, 0x5da0, 0xe92b, 0x5c10, 0x14a7, 0x1, 0x1);
        gbc.writeMem(0x186f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7e5f, gbc.sp());
        EXPECT(0x1871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0239
        gbc.setState(0x351c, 0x32fb, 0xf1f0, 0x6bab, 0xfb83, 0xab57, 0x0, 0x0);
        gbc.writeMem(0x351c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x32fb, gbc.sp());
        EXPECT(0x351e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 023A
        gbc.setState(0x7dfb, 0x39de, 0x5830, 0xdf75, 0x1764, 0x9a51, 0x1, 0x1);
        gbc.writeMem(0x7dfb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x39de, gbc.sp());
        EXPECT(0x7dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 023B
        gbc.setState(0xc58f, 0xf72b, 0x4c0, 0xd2d8, 0x1070, 0xc4bd, 0x0, 0x0);
        gbc.writeMem(0xc58f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf72b, gbc.sp());
        EXPECT(0xc591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58f));
        EXPECT(0x41, gbc.readMem(0xc590));
        // CB 41 023C
        gbc.setState(0x12a2, 0x5dab, 0x5a60, 0x62d, 0xf32d, 0x1346, 0x0, 0x1);
        gbc.writeMem(0x12a2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5dab, gbc.sp());
        EXPECT(0x12a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 023D
        gbc.setState(0xa974, 0xdebc, 0x8440, 0x1a27, 0x75dd, 0x224c, 0x1, 0x0);
        gbc.writeMem(0xa974, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdebc, gbc.sp());
        EXPECT(0xa976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa974));
        EXPECT(0x41, gbc.readMem(0xa975));
        // CB 41 023F
        gbc.setState(0x836e, 0x266a, 0x7510, 0x39e5, 0x3df7, 0xbfd2, 0x0, 0x0);
        gbc.writeMem(0x836e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x266a, gbc.sp());
        EXPECT(0x8370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836e));
        EXPECT(0x41, gbc.readMem(0x836f));
        // CB 41 0240
        gbc.setState(0xc2a4, 0xfab1, 0x6910, 0xbb32, 0x83e7, 0xba47, 0x1, 0x1);
        gbc.writeMem(0xc2a4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfab1, gbc.sp());
        EXPECT(0xc2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a4));
        EXPECT(0x41, gbc.readMem(0xc2a5));
        // CB 41 0241
        gbc.setState(0x4c11, 0x1fa5, 0xfe30, 0xd896, 0x943b, 0x9ee3, 0x0, 0x1);
        gbc.writeMem(0x4c11, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1fa5, gbc.sp());
        EXPECT(0x4c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0242
        gbc.setState(0x1c15, 0x9c14, 0x4690, 0xee24, 0xf5d6, 0x148f, 0x0, 0x0);
        gbc.writeMem(0x1c15, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9c14, gbc.sp());
        EXPECT(0x1c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0243
        gbc.setState(0x5695, 0x8d45, 0xf140, 0xeb99, 0x2fbc, 0x78b, 0x0, 0x1);
        gbc.writeMem(0x5695, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8d45, gbc.sp());
        EXPECT(0x5697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0244
        gbc.setState(0x6555, 0x7005, 0x3ea0, 0xdece, 0x266c, 0x895c, 0x0, 0x1);
        gbc.writeMem(0x6555, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7005, gbc.sp());
        EXPECT(0x6557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0245
        gbc.setState(0x46df, 0x80a8, 0xb350, 0x64d1, 0xb65e, 0xc2c8, 0x0, 0x0);
        gbc.writeMem(0x46df, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x80a8, gbc.sp());
        EXPECT(0x46e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0246
        gbc.setState(0xcc92, 0x98c3, 0x8fb0, 0x693, 0x9af5, 0x8f40, 0x1, 0x0);
        gbc.writeMem(0xcc92, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x98c3, gbc.sp());
        EXPECT(0xcc94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc92));
        EXPECT(0x41, gbc.readMem(0xcc93));
        // CB 41 0247
        gbc.setState(0x64d9, 0xf6ad, 0xb5c0, 0x51bb, 0x8376, 0x3602, 0x1, 0x0);
        gbc.writeMem(0x64d9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf6ad, gbc.sp());
        EXPECT(0x64db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0248
        gbc.setState(0x719b, 0x797d, 0xc330, 0x5455, 0xdd1a, 0x32a1, 0x1, 0x1);
        gbc.writeMem(0x719b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x797d, gbc.sp());
        EXPECT(0x719d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0249
        gbc.setState(0x2ce6, 0x7490, 0xbed0, 0x6ea1, 0xfc50, 0xdbcf, 0x0, 0x1);
        gbc.writeMem(0x2ce6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7490, gbc.sp());
        EXPECT(0x2ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 024A
        gbc.setState(0x3218, 0x2e14, 0x82b0, 0xe0eb, 0xd52e, 0x7a43, 0x1, 0x1);
        gbc.writeMem(0x3218, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e14, gbc.sp());
        EXPECT(0x321a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 024B
        gbc.setState(0x6228, 0xdb4c, 0x6da0, 0xaeb3, 0x7288, 0x5410, 0x1, 0x0);
        gbc.writeMem(0x6228, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdb4c, gbc.sp());
        EXPECT(0x622a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 024C
        gbc.setState(0xd001, 0x4f4f, 0xf570, 0x8870, 0xc849, 0x7258, 0x1, 0x0);
        gbc.writeMem(0xd001, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4f4f, gbc.sp());
        EXPECT(0xd003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd001));
        EXPECT(0x41, gbc.readMem(0xd002));
        // CB 41 024D
        gbc.setState(0x283a, 0xcd94, 0x1d90, 0x6c4f, 0xfddd, 0x47ed, 0x0, 0x0);
        gbc.writeMem(0x283a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcd94, gbc.sp());
        EXPECT(0x283c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 024E
        gbc.setState(0x5ac9, 0x8954, 0x6560, 0xe8e9, 0x1a06, 0x80d1, 0x1, 0x0);
        gbc.writeMem(0x5ac9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8954, gbc.sp());
        EXPECT(0x5acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 024F
        gbc.setState(0xc590, 0x4334, 0x9b60, 0x29a0, 0xbdbd, 0x7dbb, 0x1, 0x1);
        gbc.writeMem(0xc590, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4334, gbc.sp());
        EXPECT(0xc592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc590));
        EXPECT(0x41, gbc.readMem(0xc591));
        // CB 41 0250
        gbc.setState(0x87fd, 0x5410, 0x2f80, 0x2cf8, 0x6ec8, 0x693e, 0x1, 0x0);
        gbc.writeMem(0x87fd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5410, gbc.sp());
        EXPECT(0x87ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fd));
        EXPECT(0x41, gbc.readMem(0x87fe));
        // CB 41 0251
        gbc.setState(0xdd6, 0x7fca, 0x5b10, 0x9214, 0x67ac, 0x4ea2, 0x0, 0x1);
        gbc.writeMem(0xdd6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7fca, gbc.sp());
        EXPECT(0xdd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0252
        gbc.setState(0x49bf, 0x8ccc, 0xc360, 0xd9e5, 0x29db, 0xe13e, 0x0, 0x1);
        gbc.writeMem(0x49bf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8ccc, gbc.sp());
        EXPECT(0x49c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0253
        gbc.setState(0xdd60, 0x223e, 0xf4e0, 0xa4ac, 0x49e8, 0xde57, 0x0, 0x0);
        gbc.writeMem(0xdd60, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x223e, gbc.sp());
        EXPECT(0xdd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd60));
        EXPECT(0x41, gbc.readMem(0xdd61));
        // CB 41 0254
        gbc.setState(0xec3c, 0xbe53, 0x3cf0, 0x5b3a, 0xa28f, 0x8f4b, 0x0, 0x1);
        gbc.writeMem(0xec3c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbe53, gbc.sp());
        EXPECT(0xec3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3c));
        EXPECT(0x41, gbc.readMem(0xec3d));
        // CB 41 0255
        gbc.setState(0x8cf7, 0x1f4c, 0xd520, 0x37a, 0x3053, 0x861b, 0x1, 0x1);
        gbc.writeMem(0x8cf7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1f4c, gbc.sp());
        EXPECT(0x8cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf7));
        EXPECT(0x41, gbc.readMem(0x8cf8));
        // CB 41 0256
        gbc.setState(0xac34, 0x7383, 0x26c0, 0x6c5a, 0x1a36, 0x7a6d, 0x0, 0x0);
        gbc.writeMem(0xac34, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7383, gbc.sp());
        EXPECT(0xac36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac34));
        EXPECT(0x41, gbc.readMem(0xac35));
        // CB 41 0257
        gbc.setState(0x6b32, 0x890, 0xc470, 0xbd06, 0xa463, 0xa44c, 0x0, 0x0);
        gbc.writeMem(0x6b32, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x890, gbc.sp());
        EXPECT(0x6b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0258
        gbc.setState(0x5d91, 0xa04f, 0x6f10, 0xf355, 0x5ca0, 0x4b0b, 0x0, 0x0);
        gbc.writeMem(0x5d91, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa04f, gbc.sp());
        EXPECT(0x5d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0259
        gbc.setState(0xaf7e, 0xd008, 0x1dc0, 0xca9c, 0x48a, 0xc3f5, 0x1, 0x1);
        gbc.writeMem(0xaf7e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd008, gbc.sp());
        EXPECT(0xaf80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7e));
        EXPECT(0x41, gbc.readMem(0xaf7f));
        // CB 41 025A
        gbc.setState(0x11d6, 0x255f, 0xecd0, 0x7056, 0xdf4, 0x8520, 0x1, 0x1);
        gbc.writeMem(0x11d6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x255f, gbc.sp());
        EXPECT(0x11d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 025B
        gbc.setState(0x584f, 0x4bb0, 0xc3c0, 0xacf7, 0xbaf8, 0x9f96, 0x0, 0x0);
        gbc.writeMem(0x584f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4bb0, gbc.sp());
        EXPECT(0x5851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 025C
        gbc.setState(0x1e3e, 0x5a7b, 0xdd90, 0xaa38, 0x30ae, 0x6d11, 0x0, 0x0);
        gbc.writeMem(0x1e3e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5a7b, gbc.sp());
        EXPECT(0x1e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 025D
        gbc.setState(0x82e, 0x3747, 0x4b20, 0xb81a, 0x1cda, 0xd3b, 0x0, 0x0);
        gbc.writeMem(0x82e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3747, gbc.sp());
        EXPECT(0x830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 025E
        gbc.setState(0xe2f1, 0x6b7d, 0xc2d0, 0xdf44, 0x72ce, 0xd165, 0x1, 0x1);
        gbc.writeMem(0xe2f1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6b7d, gbc.sp());
        EXPECT(0xe2f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f1));
        EXPECT(0x41, gbc.readMem(0xe2f2));
        // CB 41 025F
        gbc.setState(0x2f00, 0x53c3, 0x3710, 0xbcc3, 0x7138, 0x3159, 0x1, 0x0);
        gbc.writeMem(0x2f00, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x53c3, gbc.sp());
        EXPECT(0x2f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0260
        gbc.setState(0x1d20, 0xeafa, 0xefe0, 0x2c52, 0xbaeb, 0xe4e1, 0x1, 0x1);
        gbc.writeMem(0x1d20, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xeafa, gbc.sp());
        EXPECT(0x1d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0262
        gbc.setState(0xc7d7, 0xc7ca, 0x8030, 0x813b, 0x3d76, 0xe69f, 0x0, 0x1);
        gbc.writeMem(0xc7d7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc7ca, gbc.sp());
        EXPECT(0xc7d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d7));
        EXPECT(0x41, gbc.readMem(0xc7d8));
        // CB 41 0263
        gbc.setState(0xd385, 0x5925, 0x1d0, 0x3039, 0x29b8, 0x1efb, 0x1, 0x1);
        gbc.writeMem(0xd385, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5925, gbc.sp());
        EXPECT(0xd387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd385));
        EXPECT(0x41, gbc.readMem(0xd386));
        // CB 41 0264
        gbc.setState(0xca6, 0x4a17, 0x1f50, 0xd093, 0x780b, 0xeeb3, 0x1, 0x0);
        gbc.writeMem(0xca6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4a17, gbc.sp());
        EXPECT(0xca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0265
        gbc.setState(0x18f1, 0xb217, 0x3f30, 0xab7e, 0x769a, 0x2a0c, 0x0, 0x1);
        gbc.writeMem(0x18f1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb217, gbc.sp());
        EXPECT(0x18f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0266
        gbc.setState(0x3538, 0x95ac, 0xd1d0, 0x81ae, 0x3b32, 0xf22b, 0x0, 0x0);
        gbc.writeMem(0x3538, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x95ac, gbc.sp());
        EXPECT(0x353a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0267
        gbc.setState(0xedf2, 0x5f01, 0x7110, 0x1d5b, 0x63dd, 0xf794, 0x0, 0x1);
        gbc.writeMem(0xedf2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5f01, gbc.sp());
        EXPECT(0xedf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf2));
        EXPECT(0x41, gbc.readMem(0xedf3));
        // CB 41 0268
        gbc.setState(0x4740, 0x2444, 0x45c0, 0x7b6b, 0x1fa6, 0xa06e, 0x1, 0x1);
        gbc.writeMem(0x4740, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2444, gbc.sp());
        EXPECT(0x4742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0269
        gbc.setState(0xe33c, 0x1ea6, 0xb0e0, 0xc5c5, 0x2dd0, 0x2fc2, 0x0, 0x0);
        gbc.writeMem(0xe33c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1ea6, gbc.sp());
        EXPECT(0xe33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33c));
        EXPECT(0x41, gbc.readMem(0xe33d));
        // CB 41 026A
        gbc.setState(0x4d30, 0x2340, 0x65b0, 0xff21, 0xdf91, 0x478f, 0x0, 0x1);
        gbc.writeMem(0x4d30, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2340, gbc.sp());
        EXPECT(0x4d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 026B
        gbc.setState(0xc99c, 0xa, 0x2150, 0x51ec, 0x78c9, 0xd461, 0x0, 0x0);
        gbc.writeMem(0xc99c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa, gbc.sp());
        EXPECT(0xc99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99c));
        EXPECT(0x41, gbc.readMem(0xc99d));
        // CB 41 026C
        gbc.setState(0xb57a, 0x901a, 0x2ec0, 0x6a4d, 0x2482, 0x9d43, 0x0, 0x1);
        gbc.writeMem(0xb57a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x901a, gbc.sp());
        EXPECT(0xb57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57a));
        EXPECT(0x41, gbc.readMem(0xb57b));
        // CB 41 026D
        gbc.setState(0xacfc, 0x453b, 0x4e60, 0x8844, 0x8ecf, 0x8c15, 0x1, 0x0);
        gbc.writeMem(0xacfc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x453b, gbc.sp());
        EXPECT(0xacfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfc));
        EXPECT(0x41, gbc.readMem(0xacfd));
        // CB 41 026E
        gbc.setState(0x4550, 0xad80, 0xe330, 0x4c45, 0x12d7, 0xc3c6, 0x0, 0x1);
        gbc.writeMem(0x4550, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xad80, gbc.sp());
        EXPECT(0x4552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 026F
        gbc.setState(0xcac0, 0x133d, 0xaef0, 0x92d4, 0xd7e5, 0xdfa4, 0x1, 0x1);
        gbc.writeMem(0xcac0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x133d, gbc.sp());
        EXPECT(0xcac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac0));
        EXPECT(0x41, gbc.readMem(0xcac1));
        // CB 41 0270
        gbc.setState(0xa4b0, 0xee06, 0x57b0, 0x763a, 0x9ca2, 0xfda5, 0x1, 0x1);
        gbc.writeMem(0xa4b0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xee06, gbc.sp());
        EXPECT(0xa4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b0));
        EXPECT(0x41, gbc.readMem(0xa4b1));
        // CB 41 0271
        gbc.setState(0xa446, 0x5463, 0xc7a0, 0x9b69, 0xc969, 0x7751, 0x0, 0x0);
        gbc.writeMem(0xa446, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5463, gbc.sp());
        EXPECT(0xa448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa446));
        EXPECT(0x41, gbc.readMem(0xa447));
        // CB 41 0272
        gbc.setState(0x620f, 0x7e1c, 0x4ba0, 0x7d42, 0x882a, 0x9d78, 0x1, 0x1);
        gbc.writeMem(0x620f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7e1c, gbc.sp());
        EXPECT(0x6211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0273
        gbc.setState(0x6df3, 0x8f33, 0xfe30, 0xbeb5, 0xd576, 0xa30b, 0x0, 0x0);
        gbc.writeMem(0x6df3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8f33, gbc.sp());
        EXPECT(0x6df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0274
        gbc.setState(0xb739, 0x7916, 0xef00, 0xb6c1, 0xc3e2, 0xac6c, 0x1, 0x1);
        gbc.writeMem(0xb739, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7916, gbc.sp());
        EXPECT(0xb73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb739));
        EXPECT(0x41, gbc.readMem(0xb73a));
        // CB 41 0275
        gbc.setState(0x36c1, 0xcbc0, 0x1040, 0x4fb4, 0xe71d, 0x8212, 0x1, 0x1);
        gbc.writeMem(0x36c1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcbc0, gbc.sp());
        EXPECT(0x36c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0276
        gbc.setState(0xbfb4, 0x2c13, 0xe720, 0x6ffc, 0x5c03, 0x9a9a, 0x0, 0x0);
        gbc.writeMem(0xbfb4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2c13, gbc.sp());
        EXPECT(0xbfb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb4));
        EXPECT(0x41, gbc.readMem(0xbfb5));
        // CB 41 0277
        gbc.setState(0xe4, 0x1eee, 0xca0, 0x923e, 0xdbb1, 0x5aa7, 0x1, 0x0);
        gbc.writeMem(0xe4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1eee, gbc.sp());
        EXPECT(0xe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0278
        gbc.setState(0x4594, 0x4187, 0x9030, 0x5f41, 0xf7b3, 0xbb94, 0x0, 0x1);
        gbc.writeMem(0x4594, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4187, gbc.sp());
        EXPECT(0x4596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0279
        gbc.setState(0xc31, 0xfab4, 0x63b0, 0xeb87, 0x84df, 0x5416, 0x0, 0x1);
        gbc.writeMem(0xc31, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfab4, gbc.sp());
        EXPECT(0xc33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 027A
        gbc.setState(0x806b, 0x76a3, 0x4c80, 0x8ea5, 0x6efc, 0x47fe, 0x1, 0x0);
        gbc.writeMem(0x806b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x76a3, gbc.sp());
        EXPECT(0x806d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806b));
        EXPECT(0x41, gbc.readMem(0x806c));
        // CB 41 027B
        gbc.setState(0x2430, 0xf55a, 0x35a0, 0x6d0, 0x9406, 0xc97d, 0x0, 0x1);
        gbc.writeMem(0x2430, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf55a, gbc.sp());
        EXPECT(0x2432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 027D
        gbc.setState(0x5bb, 0xb645, 0xa70, 0xd883, 0x1cd0, 0x6446, 0x0, 0x0);
        gbc.writeMem(0x5bb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb645, gbc.sp());
        EXPECT(0x5bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 027E
        gbc.setState(0x2177, 0x5d86, 0x3d50, 0x2eb3, 0xe589, 0xef8a, 0x1, 0x0);
        gbc.writeMem(0x2177, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5d86, gbc.sp());
        EXPECT(0x2179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 027F
        gbc.setState(0x534e, 0xf5c1, 0xcfd0, 0x24ed, 0xc368, 0x2487, 0x0, 0x0);
        gbc.writeMem(0x534e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf5c1, gbc.sp());
        EXPECT(0x5350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0280
        gbc.setState(0xd300, 0x9d6b, 0x7990, 0xd5b5, 0x5f3f, 0xf7d2, 0x1, 0x0);
        gbc.writeMem(0xd300, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9d6b, gbc.sp());
        EXPECT(0xd302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd300));
        EXPECT(0x41, gbc.readMem(0xd301));
        // CB 41 0281
        gbc.setState(0x7cfe, 0x2c5, 0x2fd0, 0xfa25, 0x2e6, 0x6419, 0x1, 0x0);
        gbc.writeMem(0x7cfe, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2c5, gbc.sp());
        EXPECT(0x7d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0282
        gbc.setState(0xb654, 0xadcb, 0x4510, 0x9cf1, 0x2298, 0xf82e, 0x0, 0x0);
        gbc.writeMem(0xb654, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xadcb, gbc.sp());
        EXPECT(0xb656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb654));
        EXPECT(0x41, gbc.readMem(0xb655));
        // CB 41 0283
        gbc.setState(0xbe62, 0xe1ea, 0x18f0, 0xfb9c, 0x3157, 0x43a0, 0x0, 0x0);
        gbc.writeMem(0xbe62, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe1ea, gbc.sp());
        EXPECT(0xbe64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe62));
        EXPECT(0x41, gbc.readMem(0xbe63));
        // CB 41 0284
        gbc.setState(0x4409, 0x14fe, 0xa730, 0xf553, 0x7aaf, 0x5052, 0x0, 0x0);
        gbc.writeMem(0x4409, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x14fe, gbc.sp());
        EXPECT(0x440b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0285
        gbc.setState(0x8952, 0x1b6d, 0x1500, 0x3a21, 0xe215, 0xd96a, 0x1, 0x1);
        gbc.writeMem(0x8952, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1b6d, gbc.sp());
        EXPECT(0x8954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8952));
        EXPECT(0x41, gbc.readMem(0x8953));
        // CB 41 0286
        gbc.setState(0xd8eb, 0x378c, 0x60, 0x51bf, 0x59f3, 0x76a3, 0x1, 0x1);
        gbc.writeMem(0xd8eb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x378c, gbc.sp());
        EXPECT(0xd8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8eb));
        EXPECT(0x41, gbc.readMem(0xd8ec));
        // CB 41 0288
        gbc.setState(0x8b84, 0x411a, 0x29a0, 0x85ea, 0xe47b, 0xa216, 0x0, 0x1);
        gbc.writeMem(0x8b84, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x411a, gbc.sp());
        EXPECT(0x8b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b84));
        EXPECT(0x41, gbc.readMem(0x8b85));
        // CB 41 0289
        gbc.setState(0x6d18, 0x410b, 0xee40, 0x3798, 0x65e6, 0x5cff, 0x1, 0x0);
        gbc.writeMem(0x6d18, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x410b, gbc.sp());
        EXPECT(0x6d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 028A
        gbc.setState(0x9b77, 0xa885, 0x27b0, 0x7618, 0xf8f2, 0x24dc, 0x0, 0x1);
        gbc.writeMem(0x9b77, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa885, gbc.sp());
        EXPECT(0x9b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b77));
        EXPECT(0x41, gbc.readMem(0x9b78));
        // CB 41 028B
        gbc.setState(0x1c3d, 0xdb67, 0xa1a0, 0xd2f0, 0xdde0, 0xd1bc, 0x0, 0x1);
        gbc.writeMem(0x1c3d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdb67, gbc.sp());
        EXPECT(0x1c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 028C
        gbc.setState(0x622a, 0xbabb, 0x8500, 0x455d, 0x9da6, 0x2ec6, 0x1, 0x1);
        gbc.writeMem(0x622a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbabb, gbc.sp());
        EXPECT(0x622c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 028D
        gbc.setState(0xa4ab, 0xac58, 0x7990, 0x363c, 0x28ee, 0xc1f1, 0x1, 0x0);
        gbc.writeMem(0xa4ab, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xac58, gbc.sp());
        EXPECT(0xa4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ab));
        EXPECT(0x41, gbc.readMem(0xa4ac));
        // CB 41 028E
        gbc.setState(0xcb1c, 0x841d, 0x420, 0x95a4, 0xdbf2, 0xe558, 0x1, 0x0);
        gbc.writeMem(0xcb1c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x841d, gbc.sp());
        EXPECT(0xcb1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1c));
        EXPECT(0x41, gbc.readMem(0xcb1d));
        // CB 41 028F
        gbc.setState(0x3cba, 0xb88e, 0x3bd0, 0x5780, 0x8a91, 0xa5bd, 0x0, 0x1);
        gbc.writeMem(0x3cba, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb88e, gbc.sp());
        EXPECT(0x3cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0290
        gbc.setState(0x2e5d, 0x8e96, 0x4f90, 0x2cc9, 0xdd54, 0x8ee4, 0x1, 0x0);
        gbc.writeMem(0x2e5d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8e96, gbc.sp());
        EXPECT(0x2e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0291
        gbc.setState(0xdc1e, 0xeeca, 0xc4a0, 0xc4d4, 0x3b84, 0xd73a, 0x1, 0x0);
        gbc.writeMem(0xdc1e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xeeca, gbc.sp());
        EXPECT(0xdc20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1e));
        EXPECT(0x41, gbc.readMem(0xdc1f));
        // CB 41 0292
        gbc.setState(0x218e, 0x3d6c, 0x2df0, 0x135f, 0x8bf9, 0x8e26, 0x0, 0x0);
        gbc.writeMem(0x218e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3d6c, gbc.sp());
        EXPECT(0x2190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0293
        gbc.setState(0x3a68, 0x40e4, 0xa3a0, 0xb263, 0xdcbf, 0xdb21, 0x0, 0x1);
        gbc.writeMem(0x3a68, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x40e4, gbc.sp());
        EXPECT(0x3a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0294
        gbc.setState(0x4be6, 0x2243, 0x4b00, 0x5372, 0x51e2, 0x9834, 0x0, 0x1);
        gbc.writeMem(0x4be6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2243, gbc.sp());
        EXPECT(0x4be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0295
        gbc.setState(0x9962, 0xe31a, 0xbe10, 0x893, 0xdc4, 0xb4ce, 0x0, 0x0);
        gbc.writeMem(0x9962, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe31a, gbc.sp());
        EXPECT(0x9964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9962));
        EXPECT(0x41, gbc.readMem(0x9963));
        // CB 41 0296
        gbc.setState(0x5cbf, 0xa1b8, 0x1a90, 0x3606, 0x5bd2, 0x9fb9, 0x1, 0x1);
        gbc.writeMem(0x5cbf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa1b8, gbc.sp());
        EXPECT(0x5cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0297
        gbc.setState(0x6e75, 0x3fd2, 0x9b0, 0x46d7, 0x1579, 0xd51e, 0x0, 0x1);
        gbc.writeMem(0x6e75, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3fd2, gbc.sp());
        EXPECT(0x6e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0298
        gbc.setState(0x1391, 0x5fb0, 0xac10, 0x76f1, 0x3c12, 0x978d, 0x0, 0x0);
        gbc.writeMem(0x1391, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5fb0, gbc.sp());
        EXPECT(0x1393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0299
        gbc.setState(0x1921, 0x9e60, 0x87b0, 0x8e6e, 0x4d4, 0xc0e5, 0x0, 0x0);
        gbc.writeMem(0x1921, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9e60, gbc.sp());
        EXPECT(0x1923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 029A
        gbc.setState(0xa6dc, 0xfc6c, 0xad80, 0xc38a, 0x65a0, 0x8dfa, 0x0, 0x0);
        gbc.writeMem(0xa6dc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfc6c, gbc.sp());
        EXPECT(0xa6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6dc));
        EXPECT(0x41, gbc.readMem(0xa6dd));
        // CB 41 029B
        gbc.setState(0x2418, 0x5272, 0xf120, 0x2072, 0xca4c, 0xeb5f, 0x1, 0x0);
        gbc.writeMem(0x2418, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5272, gbc.sp());
        EXPECT(0x241a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 029C
        gbc.setState(0x787a, 0x2572, 0xcd20, 0x6804, 0x22bd, 0xfc55, 0x1, 0x0);
        gbc.writeMem(0x787a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2572, gbc.sp());
        EXPECT(0x787c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 029D
        gbc.setState(0xc25b, 0x333e, 0xcc00, 0x141b, 0x92ca, 0x7b91, 0x1, 0x0);
        gbc.writeMem(0xc25b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x333e, gbc.sp());
        EXPECT(0xc25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc25b));
        EXPECT(0x41, gbc.readMem(0xc25c));
        // CB 41 029E
        gbc.setState(0x5ea9, 0x2d3a, 0xf310, 0x292, 0xb9fb, 0x2da1, 0x0, 0x1);
        gbc.writeMem(0x5ea9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2d3a, gbc.sp());
        EXPECT(0x5eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 029F
        gbc.setState(0x7d52, 0xee46, 0x1ac0, 0xfa92, 0x7404, 0x4ea1, 0x0, 0x1);
        gbc.writeMem(0x7d52, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xee46, gbc.sp());
        EXPECT(0x7d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02A0
        gbc.setState(0x877, 0x667d, 0xa80, 0x10c7, 0x59d4, 0x7e54, 0x0, 0x0);
        gbc.writeMem(0x877, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x667d, gbc.sp());
        EXPECT(0x879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02A1
        gbc.setState(0x9488, 0x5bda, 0x53e0, 0xdb5a, 0xa22d, 0x3589, 0x0, 0x1);
        gbc.writeMem(0x9488, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5bda, gbc.sp());
        EXPECT(0x948a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9488));
        EXPECT(0x41, gbc.readMem(0x9489));
        // CB 41 02A3
        gbc.setState(0x8471, 0x214f, 0xcc40, 0x12c5, 0x3d44, 0x9bd8, 0x0, 0x1);
        gbc.writeMem(0x8471, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x214f, gbc.sp());
        EXPECT(0x8473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8471));
        EXPECT(0x41, gbc.readMem(0x8472));
        // CB 41 02A4
        gbc.setState(0x6830, 0x556f, 0x5540, 0xd53c, 0x6de6, 0x554c, 0x1, 0x0);
        gbc.writeMem(0x6830, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x556f, gbc.sp());
        EXPECT(0x6832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02A6
        gbc.setState(0xb811, 0xdcd2, 0xa1e0, 0xb613, 0xbb2, 0x981f, 0x0, 0x0);
        gbc.writeMem(0xb811, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdcd2, gbc.sp());
        EXPECT(0xb813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb811));
        EXPECT(0x41, gbc.readMem(0xb812));
        // CB 41 02A7
        gbc.setState(0xeaa9, 0x37a6, 0xb770, 0xa74e, 0x61d3, 0x8b3d, 0x1, 0x1);
        gbc.writeMem(0xeaa9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x37a6, gbc.sp());
        EXPECT(0xeaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa9));
        EXPECT(0x41, gbc.readMem(0xeaaa));
        // CB 41 02A8
        gbc.setState(0x91f7, 0x6489, 0x91f0, 0x737a, 0x91d9, 0x43fa, 0x1, 0x1);
        gbc.writeMem(0x91f7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6489, gbc.sp());
        EXPECT(0x91f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f7));
        EXPECT(0x41, gbc.readMem(0x91f8));
        // CB 41 02A9
        gbc.setState(0xb9a5, 0x5755, 0xcc10, 0xc4f9, 0x711e, 0x22d3, 0x0, 0x0);
        gbc.writeMem(0xb9a5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5755, gbc.sp());
        EXPECT(0xb9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a5));
        EXPECT(0x41, gbc.readMem(0xb9a6));
        // CB 41 02AB
        gbc.setState(0xdceb, 0x35f5, 0x8ff0, 0x28df, 0xf46f, 0x6065, 0x0, 0x0);
        gbc.writeMem(0xdceb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x35f5, gbc.sp());
        EXPECT(0xdced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdceb));
        EXPECT(0x41, gbc.readMem(0xdcec));
        // CB 41 02AC
        gbc.setState(0x9503, 0x647, 0xc820, 0xda9, 0x6d05, 0x28cc, 0x1, 0x0);
        gbc.writeMem(0x9503, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x647, gbc.sp());
        EXPECT(0x9505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9503));
        EXPECT(0x41, gbc.readMem(0x9504));
        // CB 41 02AD
        gbc.setState(0x6b6b, 0xaf8, 0x4c60, 0xf4d1, 0xf445, 0xac9e, 0x1, 0x1);
        gbc.writeMem(0x6b6b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xaf8, gbc.sp());
        EXPECT(0x6b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02AF
        gbc.setState(0x88a6, 0xb1e6, 0xa1a0, 0x1493, 0xa8e6, 0x236d, 0x0, 0x1);
        gbc.writeMem(0x88a6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb1e6, gbc.sp());
        EXPECT(0x88a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a6));
        EXPECT(0x41, gbc.readMem(0x88a7));
        // CB 41 02B0
        gbc.setState(0xc51e, 0xe155, 0xa0c0, 0xa1b1, 0x2301, 0x7d2f, 0x1, 0x0);
        gbc.writeMem(0xc51e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe155, gbc.sp());
        EXPECT(0xc520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51e));
        EXPECT(0x41, gbc.readMem(0xc51f));
        // CB 41 02B1
        gbc.setState(0x1767, 0xd602, 0x74e0, 0x338a, 0x933b, 0xb577, 0x0, 0x0);
        gbc.writeMem(0x1767, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd602, gbc.sp());
        EXPECT(0x1769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02B2
        gbc.setState(0x2032, 0x935, 0xd3a0, 0x7490, 0x2f82, 0xbca4, 0x0, 0x1);
        gbc.writeMem(0x2032, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x935, gbc.sp());
        EXPECT(0x2034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02B4
        gbc.setState(0x9ad5, 0x28f, 0x68f0, 0x3eb5, 0xc06, 0xabd, 0x0, 0x0);
        gbc.writeMem(0x9ad5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x28f, gbc.sp());
        EXPECT(0x9ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad5));
        EXPECT(0x41, gbc.readMem(0x9ad6));
        // CB 41 02B5
        gbc.setState(0x5a73, 0x796b, 0xd1f0, 0xe985, 0xfa9f, 0x63ac, 0x0, 0x0);
        gbc.writeMem(0x5a73, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x796b, gbc.sp());
        EXPECT(0x5a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02B6
        gbc.setState(0xe5bc, 0xbdf5, 0x13f0, 0xd575, 0xd0dd, 0x4cec, 0x1, 0x1);
        gbc.writeMem(0xe5bc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbdf5, gbc.sp());
        EXPECT(0xe5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5bc));
        EXPECT(0x41, gbc.readMem(0xe5bd));
        // CB 41 02B7
        gbc.setState(0xb71f, 0x1cb3, 0xa880, 0x3d2d, 0x193f, 0xcea3, 0x0, 0x0);
        gbc.writeMem(0xb71f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1cb3, gbc.sp());
        EXPECT(0xb721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb71f));
        EXPECT(0x41, gbc.readMem(0xb720));
        // CB 41 02B8
        gbc.setState(0x44f, 0x8429, 0xf5a0, 0xeb6c, 0x50e9, 0x6499, 0x1, 0x0);
        gbc.writeMem(0x44f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8429, gbc.sp());
        EXPECT(0x451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02B9
        gbc.setState(0xe501, 0x3d3c, 0xb0e0, 0xaab0, 0x2b8a, 0x25a6, 0x1, 0x1);
        gbc.writeMem(0xe501, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3d3c, gbc.sp());
        EXPECT(0xe503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe501));
        EXPECT(0x41, gbc.readMem(0xe502));
        // CB 41 02BA
        gbc.setState(0x5f8, 0xdece, 0x4dd0, 0x25ec, 0x3184, 0x502c, 0x1, 0x0);
        gbc.writeMem(0x5f8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdece, gbc.sp());
        EXPECT(0x5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02BB
        gbc.setState(0xa5a2, 0x7a1, 0xa480, 0x9a5f, 0xa6b5, 0x4b7d, 0x0, 0x1);
        gbc.writeMem(0xa5a2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7a1, gbc.sp());
        EXPECT(0xa5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a2));
        EXPECT(0x41, gbc.readMem(0xa5a3));
        // CB 41 02BC
        gbc.setState(0xb6ca, 0x2d7f, 0x86d0, 0x8576, 0x8ef7, 0xcc39, 0x0, 0x1);
        gbc.writeMem(0xb6ca, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2d7f, gbc.sp());
        EXPECT(0xb6cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ca));
        EXPECT(0x41, gbc.readMem(0xb6cb));
        // CB 41 02BD
        gbc.setState(0x5afa, 0xdd6c, 0xce10, 0x3f87, 0x5c4a, 0x3618, 0x1, 0x1);
        gbc.writeMem(0x5afa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdd6c, gbc.sp());
        EXPECT(0x5afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02BE
        gbc.setState(0x2501, 0x268d, 0xe710, 0x1981, 0x5131, 0xa049, 0x0, 0x0);
        gbc.writeMem(0x2501, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x268d, gbc.sp());
        EXPECT(0x2503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02BF
        gbc.setState(0x8a6a, 0xcb5e, 0xec00, 0xd2e3, 0xa744, 0x295, 0x1, 0x1);
        gbc.writeMem(0x8a6a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcb5e, gbc.sp());
        EXPECT(0x8a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6a));
        EXPECT(0x41, gbc.readMem(0x8a6b));
        // CB 41 02C0
        gbc.setState(0xcdb8, 0xe00, 0x8200, 0x560e, 0xc877, 0xab84, 0x0, 0x1);
        gbc.writeMem(0xcdb8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe00, gbc.sp());
        EXPECT(0xcdba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb8));
        EXPECT(0x41, gbc.readMem(0xcdb9));
        // CB 41 02C1
        gbc.setState(0x7182, 0xd70, 0x2cc0, 0xc6e, 0x9cb0, 0x17ba, 0x1, 0x0);
        gbc.writeMem(0x7182, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd70, gbc.sp());
        EXPECT(0x7184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02C2
        gbc.setState(0x1976, 0xe16e, 0xb160, 0x9f26, 0xa0db, 0xb603, 0x0, 0x1);
        gbc.writeMem(0x1976, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe16e, gbc.sp());
        EXPECT(0x1978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02C3
        gbc.setState(0xb070, 0xcc61, 0xa5a0, 0x7a4d, 0xdb0e, 0x11e8, 0x0, 0x1);
        gbc.writeMem(0xb070, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcc61, gbc.sp());
        EXPECT(0xb072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb070));
        EXPECT(0x41, gbc.readMem(0xb071));
        // CB 41 02C4
        gbc.setState(0x2c7c, 0x9e64, 0xb1a0, 0x383e, 0x5760, 0xbda, 0x1, 0x0);
        gbc.writeMem(0x2c7c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9e64, gbc.sp());
        EXPECT(0x2c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02C5
        gbc.setState(0x7d88, 0xf169, 0x1ce0, 0x1e5, 0x246f, 0xbf45, 0x0, 0x1);
        gbc.writeMem(0x7d88, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf169, gbc.sp());
        EXPECT(0x7d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02C6
        gbc.setState(0x560c, 0xc08b, 0x8630, 0xd3ee, 0xb35, 0x641c, 0x1, 0x1);
        gbc.writeMem(0x560c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc08b, gbc.sp());
        EXPECT(0x560e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02C7
        gbc.setState(0x11b5, 0xefa2, 0x41f0, 0x1b8, 0xbc56, 0xb55f, 0x0, 0x0);
        gbc.writeMem(0x11b5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xefa2, gbc.sp());
        EXPECT(0x11b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02C8
        gbc.setState(0x6d93, 0x79af, 0xc480, 0xa7e8, 0x34fd, 0x3d9a, 0x0, 0x1);
        gbc.writeMem(0x6d93, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x79af, gbc.sp());
        EXPECT(0x6d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02C9
        gbc.setState(0xd794, 0x17db, 0x1560, 0x9486, 0xbdd8, 0x22df, 0x1, 0x0);
        gbc.writeMem(0xd794, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x17db, gbc.sp());
        EXPECT(0xd796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd794));
        EXPECT(0x41, gbc.readMem(0xd795));
        // CB 41 02CA
        gbc.setState(0x1b7a, 0x9d4d, 0xccc0, 0x8fed, 0x7406, 0x3bc, 0x1, 0x0);
        gbc.writeMem(0x1b7a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9d4d, gbc.sp());
        EXPECT(0x1b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02CB
        gbc.setState(0x3043, 0xddcc, 0x3af0, 0x4de2, 0x14b5, 0xf285, 0x0, 0x0);
        gbc.writeMem(0x3043, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xddcc, gbc.sp());
        EXPECT(0x3045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02CC
        gbc.setState(0x20, 0x920a, 0x2640, 0x42a2, 0xd5bc, 0xff5d, 0x0, 0x1);
        gbc.writeMem(0x20, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x920a, gbc.sp());
        EXPECT(0x22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02CD
        gbc.setState(0xadfe, 0x721, 0x77d0, 0xe42e, 0x4488, 0xd54, 0x1, 0x1);
        gbc.writeMem(0xadfe, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x721, gbc.sp());
        EXPECT(0xae00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadfe));
        EXPECT(0x41, gbc.readMem(0xadff));
        // CB 41 02CE
        gbc.setState(0x1975, 0x5fa4, 0xe3c0, 0x87b8, 0x149a, 0xb716, 0x0, 0x0);
        gbc.writeMem(0x1975, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5fa4, gbc.sp());
        EXPECT(0x1977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02CF
        gbc.setState(0xe284, 0xa90e, 0xfb0, 0x5e78, 0xdb2, 0xc794, 0x1, 0x0);
        gbc.writeMem(0xe284, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa90e, gbc.sp());
        EXPECT(0xe286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe284));
        EXPECT(0x41, gbc.readMem(0xe285));
        // CB 41 02D0
        gbc.setState(0x527b, 0x13ec, 0xf180, 0x6184, 0xb231, 0x5b48, 0x0, 0x0);
        gbc.writeMem(0x527b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x13ec, gbc.sp());
        EXPECT(0x527d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02D1
        gbc.setState(0xd73f, 0xb743, 0x5150, 0x3d05, 0x54f3, 0x9e30, 0x0, 0x0);
        gbc.writeMem(0xd73f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb743, gbc.sp());
        EXPECT(0xd741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73f));
        EXPECT(0x41, gbc.readMem(0xd740));
        // CB 41 02D2
        gbc.setState(0x53ca, 0xca13, 0xe0, 0x4c52, 0xbf28, 0xc6a, 0x0, 0x1);
        gbc.writeMem(0x53ca, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xca13, gbc.sp());
        EXPECT(0x53cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02D3
        gbc.setState(0x93a9, 0x3d25, 0x8fe0, 0x1728, 0x4df0, 0x2aca, 0x1, 0x1);
        gbc.writeMem(0x93a9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3d25, gbc.sp());
        EXPECT(0x93ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a9));
        EXPECT(0x41, gbc.readMem(0x93aa));
        // CB 41 02D4
        gbc.setState(0xb5ce, 0xeca8, 0xc240, 0x7cf8, 0x7928, 0xd850, 0x0, 0x1);
        gbc.writeMem(0xb5ce, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xeca8, gbc.sp());
        EXPECT(0xb5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ce));
        EXPECT(0x41, gbc.readMem(0xb5cf));
        // CB 41 02D5
        gbc.setState(0x8197, 0xfcb4, 0x2350, 0xc009, 0x61a4, 0xc692, 0x1, 0x0);
        gbc.writeMem(0x8197, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfcb4, gbc.sp());
        EXPECT(0x8199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8197));
        EXPECT(0x41, gbc.readMem(0x8198));
        // CB 41 02D6
        gbc.setState(0x203f, 0xfb59, 0xa620, 0xd623, 0xe36f, 0x6033, 0x0, 0x0);
        gbc.writeMem(0x203f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfb59, gbc.sp());
        EXPECT(0x2041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02D7
        gbc.setState(0x343, 0x1223, 0xe960, 0xa6cd, 0x7eb0, 0x4bbe, 0x1, 0x0);
        gbc.writeMem(0x343, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1223, gbc.sp());
        EXPECT(0x345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02D8
        gbc.setState(0x71bd, 0x40c0, 0xadc0, 0xed4a, 0xee2b, 0x4044, 0x0, 0x0);
        gbc.writeMem(0x71bd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x40c0, gbc.sp());
        EXPECT(0x71bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02D9
        gbc.setState(0x45da, 0x472d, 0x8c0, 0xb5bf, 0x6a75, 0x3666, 0x1, 0x0);
        gbc.writeMem(0x45da, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x472d, gbc.sp());
        EXPECT(0x45dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02DA
        gbc.setState(0xbddd, 0x2d3, 0x2c50, 0x9fd1, 0xdbd9, 0x12a2, 0x0, 0x0);
        gbc.writeMem(0xbddd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2d3, gbc.sp());
        EXPECT(0xbddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbddd));
        EXPECT(0x41, gbc.readMem(0xbdde));
        // CB 41 02DB
        gbc.setState(0x7704, 0xd028, 0x94f0, 0x3550, 0x54bc, 0xa8b3, 0x1, 0x1);
        gbc.writeMem(0x7704, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd028, gbc.sp());
        EXPECT(0x7706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02DC
        gbc.setState(0x36e5, 0xa61b, 0x3ad0, 0x52c, 0x7d5c, 0x2e58, 0x1, 0x1);
        gbc.writeMem(0x36e5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa61b, gbc.sp());
        EXPECT(0x36e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02DD
        gbc.setState(0xd0af, 0xbb16, 0x3b80, 0xf78e, 0x85f2, 0xeec4, 0x0, 0x0);
        gbc.writeMem(0xd0af, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbb16, gbc.sp());
        EXPECT(0xd0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0af));
        EXPECT(0x41, gbc.readMem(0xd0b0));
        // CB 41 02DE
        gbc.setState(0x2bcd, 0x9bc9, 0xc860, 0x898d, 0x589, 0x1a02, 0x0, 0x0);
        gbc.writeMem(0x2bcd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9bc9, gbc.sp());
        EXPECT(0x2bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02DF
        gbc.setState(0x51ce, 0x20f6, 0xdbc0, 0x4b1a, 0xe00b, 0xbe33, 0x0, 0x0);
        gbc.writeMem(0x51ce, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x20f6, gbc.sp());
        EXPECT(0x51d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02E0
        gbc.setState(0x76ac, 0x8a54, 0x1990, 0xd6ae, 0x28fe, 0x87a7, 0x0, 0x0);
        gbc.writeMem(0x76ac, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8a54, gbc.sp());
        EXPECT(0x76ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02E1
        gbc.setState(0xc6d2, 0x2e47, 0x5a20, 0xa80a, 0x402a, 0x89ff, 0x0, 0x1);
        gbc.writeMem(0xc6d2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2e47, gbc.sp());
        EXPECT(0xc6d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d2));
        EXPECT(0x41, gbc.readMem(0xc6d3));
        // CB 41 02E2
        gbc.setState(0x62b, 0x2b16, 0x7000, 0xf5f9, 0x631e, 0x463e, 0x1, 0x1);
        gbc.writeMem(0x62b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2b16, gbc.sp());
        EXPECT(0x62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02E3
        gbc.setState(0x1f7d, 0x357, 0x7e90, 0x3656, 0xd61f, 0x6e83, 0x1, 0x1);
        gbc.writeMem(0x1f7d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x357, gbc.sp());
        EXPECT(0x1f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02E4
        gbc.setState(0x14cf, 0x6634, 0x7640, 0x4642, 0xc265, 0x4dd5, 0x1, 0x1);
        gbc.writeMem(0x14cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6634, gbc.sp());
        EXPECT(0x14d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02E5
        gbc.setState(0x173a, 0x3571, 0x3ce0, 0xcc9c, 0x5712, 0x9d7, 0x1, 0x0);
        gbc.writeMem(0x173a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3571, gbc.sp());
        EXPECT(0x173c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02E6
        gbc.setState(0xdfef, 0x80e9, 0xf8c0, 0x2845, 0xb022, 0x3e5e, 0x0, 0x1);
        gbc.writeMem(0xdfef, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x80e9, gbc.sp());
        EXPECT(0xdff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfef));
        EXPECT(0x41, gbc.readMem(0xdff0));
        // CB 41 02E8
        gbc.setState(0x2548, 0x41db, 0x1d00, 0xb6b1, 0x5de8, 0x47b9, 0x1, 0x1);
        gbc.writeMem(0x2548, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x41db, gbc.sp());
        EXPECT(0x254a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02E9
        gbc.setState(0x8db0, 0x90c9, 0x5d30, 0x79ed, 0x8930, 0x8700, 0x0, 0x1);
        gbc.writeMem(0x8db0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x90c9, gbc.sp());
        EXPECT(0x8db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db0));
        EXPECT(0x41, gbc.readMem(0x8db1));
        // CB 41 02EA
        gbc.setState(0xa05f, 0xde9, 0x35a0, 0x2a94, 0xeb17, 0x5641, 0x0, 0x0);
        gbc.writeMem(0xa05f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xde9, gbc.sp());
        EXPECT(0xa061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05f));
        EXPECT(0x41, gbc.readMem(0xa060));
        // CB 41 02EB
        gbc.setState(0x8561, 0xe94f, 0x1ae0, 0xa377, 0x7981, 0xb121, 0x0, 0x0);
        gbc.writeMem(0x8561, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe94f, gbc.sp());
        EXPECT(0x8563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8561));
        EXPECT(0x41, gbc.readMem(0x8562));
        // CB 41 02EC
        gbc.setState(0x9114, 0x5389, 0x5f20, 0x8f62, 0x58c7, 0xe72b, 0x1, 0x0);
        gbc.writeMem(0x9114, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5389, gbc.sp());
        EXPECT(0x9116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9114));
        EXPECT(0x41, gbc.readMem(0x9115));
        // CB 41 02ED
        gbc.setState(0x7699, 0x5706, 0xb670, 0x6da8, 0x29a, 0xf2ee, 0x0, 0x1);
        gbc.writeMem(0x7699, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5706, gbc.sp());
        EXPECT(0x769b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02EE
        gbc.setState(0x448c, 0x671, 0x4e00, 0xfb1a, 0x8458, 0x9c5b, 0x1, 0x1);
        gbc.writeMem(0x448c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x671, gbc.sp());
        EXPECT(0x448e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02EF
        gbc.setState(0x863f, 0xe047, 0x7760, 0x8df3, 0x20e3, 0xdd4f, 0x0, 0x1);
        gbc.writeMem(0x863f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe047, gbc.sp());
        EXPECT(0x8641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863f));
        EXPECT(0x41, gbc.readMem(0x8640));
        // CB 41 02F0
        gbc.setState(0xb0e0, 0x7f7, 0x59d0, 0xf327, 0x1a5a, 0xa2f8, 0x0, 0x0);
        gbc.writeMem(0xb0e0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7f7, gbc.sp());
        EXPECT(0xb0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e0));
        EXPECT(0x41, gbc.readMem(0xb0e1));
        // CB 41 02F2
        gbc.setState(0x7ad3, 0x717, 0xd960, 0x34e2, 0x3b69, 0xff6e, 0x0, 0x1);
        gbc.writeMem(0x7ad3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x717, gbc.sp());
        EXPECT(0x7ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02F3
        gbc.setState(0x17a8, 0x8cef, 0x7cf0, 0x1381, 0x2193, 0xa07b, 0x0, 0x0);
        gbc.writeMem(0x17a8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8cef, gbc.sp());
        EXPECT(0x17aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02F4
        gbc.setState(0x3d79, 0xd17c, 0xff0, 0xd835, 0x81bb, 0xe74, 0x0, 0x1);
        gbc.writeMem(0x3d79, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd17c, gbc.sp());
        EXPECT(0x3d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02F5
        gbc.setState(0x559b, 0x60d3, 0x6ce0, 0xff71, 0xda3b, 0x845, 0x1, 0x1);
        gbc.writeMem(0x559b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x60d3, gbc.sp());
        EXPECT(0x559d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02F6
        gbc.setState(0xc12b, 0xdb67, 0xc0c0, 0xfa86, 0x5f4, 0xf03f, 0x0, 0x0);
        gbc.writeMem(0xc12b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdb67, gbc.sp());
        EXPECT(0xc12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12b));
        EXPECT(0x41, gbc.readMem(0xc12c));
        // CB 41 02F7
        gbc.setState(0xe4cc, 0x4b36, 0x3490, 0x6c20, 0x76b1, 0x9542, 0x1, 0x0);
        gbc.writeMem(0xe4cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4b36, gbc.sp());
        EXPECT(0xe4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4cc));
        EXPECT(0x41, gbc.readMem(0xe4cd));
        // CB 41 02F8
        gbc.setState(0xac5a, 0x48f8, 0xa350, 0x5c88, 0x1e72, 0xfe93, 0x0, 0x1);
        gbc.writeMem(0xac5a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x48f8, gbc.sp());
        EXPECT(0xac5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5a));
        EXPECT(0x41, gbc.readMem(0xac5b));
        // CB 41 02F9
        gbc.setState(0xd248, 0xee42, 0x5b20, 0xcdd6, 0x975f, 0xf13c, 0x0, 0x0);
        gbc.writeMem(0xd248, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xee42, gbc.sp());
        EXPECT(0xd24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd248));
        EXPECT(0x41, gbc.readMem(0xd249));
        // CB 41 02FA
        gbc.setState(0x924, 0xf7b9, 0x1d10, 0xa1c8, 0x7da3, 0xc2ea, 0x0, 0x0);
        gbc.writeMem(0x924, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf7b9, gbc.sp());
        EXPECT(0x926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02FB
        gbc.setState(0x4793, 0xf2f3, 0x4900, 0x99d7, 0xccf2, 0xc455, 0x0, 0x1);
        gbc.writeMem(0x4793, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf2f3, gbc.sp());
        EXPECT(0x4795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02FC
        gbc.setState(0x2d62, 0x3d11, 0xf1c0, 0x96c0, 0xe9ca, 0x84cb, 0x1, 0x0);
        gbc.writeMem(0x2d62, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3d11, gbc.sp());
        EXPECT(0x2d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02FD
        gbc.setState(0x6613, 0x973f, 0x2a0, 0x4c14, 0x98cc, 0x9cab, 0x0, 0x0);
        gbc.writeMem(0x6613, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x973f, gbc.sp());
        EXPECT(0x6615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 02FE
        gbc.setState(0x529e, 0xb99d, 0x3470, 0xf0ff, 0x7c22, 0x9369, 0x0, 0x0);
        gbc.writeMem(0x529e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb99d, gbc.sp());
        EXPECT(0x52a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 02FF
        gbc.setState(0x3491, 0x6967, 0x4430, 0x1ab7, 0xe72c, 0x25e0, 0x1, 0x1);
        gbc.writeMem(0x3491, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6967, gbc.sp());
        EXPECT(0x3493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0300
        gbc.setState(0x51c3, 0x882f, 0x8750, 0x5eed, 0x5ddf, 0x15f2, 0x1, 0x0);
        gbc.writeMem(0x51c3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x882f, gbc.sp());
        EXPECT(0x51c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0301
        gbc.setState(0xb2a0, 0xd23b, 0x5ab0, 0x34a6, 0xf4, 0x84d0, 0x1, 0x1);
        gbc.writeMem(0xb2a0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd23b, gbc.sp());
        EXPECT(0xb2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a0));
        EXPECT(0x41, gbc.readMem(0xb2a1));
        // CB 41 0302
        gbc.setState(0x9033, 0x768d, 0xe270, 0x3b14, 0xcfd, 0x7d45, 0x0, 0x1);
        gbc.writeMem(0x9033, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x768d, gbc.sp());
        EXPECT(0x9035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9033));
        EXPECT(0x41, gbc.readMem(0x9034));
        // CB 41 0303
        gbc.setState(0x287d, 0xea34, 0xb9d0, 0xde68, 0x1ce8, 0x436e, 0x1, 0x1);
        gbc.writeMem(0x287d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xea34, gbc.sp());
        EXPECT(0x287f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0304
        gbc.setState(0x9303, 0x19af, 0xc9b0, 0xb590, 0x2fb4, 0x3905, 0x0, 0x0);
        gbc.writeMem(0x9303, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x19af, gbc.sp());
        EXPECT(0x9305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9303));
        EXPECT(0x41, gbc.readMem(0x9304));
        // CB 41 0305
        gbc.setState(0xa80, 0xbd5b, 0x8310, 0x111e, 0xdb39, 0x5973, 0x1, 0x0);
        gbc.writeMem(0xa80, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbd5b, gbc.sp());
        EXPECT(0xa82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0306
        gbc.setState(0x3d82, 0x1551, 0x8700, 0xef97, 0x4322, 0x14c6, 0x1, 0x1);
        gbc.writeMem(0x3d82, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1551, gbc.sp());
        EXPECT(0x3d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0307
        gbc.setState(0x590a, 0x959a, 0x7f90, 0x4c61, 0xd6e8, 0xc743, 0x0, 0x0);
        gbc.writeMem(0x590a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x959a, gbc.sp());
        EXPECT(0x590c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0308
        gbc.setState(0xc683, 0xa91d, 0xc450, 0xb7f, 0x4217, 0x5ebb, 0x1, 0x1);
        gbc.writeMem(0xc683, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa91d, gbc.sp());
        EXPECT(0xc685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc683));
        EXPECT(0x41, gbc.readMem(0xc684));
        // CB 41 0309
        gbc.setState(0x967d, 0x7d6c, 0x73c0, 0x4b7a, 0x2e5d, 0x573a, 0x1, 0x1);
        gbc.writeMem(0x967d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7d6c, gbc.sp());
        EXPECT(0x967f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x967d));
        EXPECT(0x41, gbc.readMem(0x967e));
        // CB 41 030B
        gbc.setState(0xa489, 0x2542, 0x8b90, 0x1f77, 0x6ec8, 0x6f89, 0x0, 0x0);
        gbc.writeMem(0xa489, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2542, gbc.sp());
        EXPECT(0xa48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa489));
        EXPECT(0x41, gbc.readMem(0xa48a));
        // CB 41 030C
        gbc.setState(0xa7cf, 0xfe69, 0xbaf0, 0x2637, 0x551, 0xabce, 0x0, 0x1);
        gbc.writeMem(0xa7cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfe69, gbc.sp());
        EXPECT(0xa7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cf));
        EXPECT(0x41, gbc.readMem(0xa7d0));
        // CB 41 030D
        gbc.setState(0x7c09, 0xfae, 0xb7f0, 0x67b, 0x7c48, 0xf6ca, 0x1, 0x1);
        gbc.writeMem(0x7c09, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfae, gbc.sp());
        EXPECT(0x7c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 030E
        gbc.setState(0xb09c, 0xc83b, 0x5ae0, 0xa4ae, 0x92f2, 0xda17, 0x0, 0x1);
        gbc.writeMem(0xb09c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc83b, gbc.sp());
        EXPECT(0xb09e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09c));
        EXPECT(0x41, gbc.readMem(0xb09d));
        // CB 41 030F
        gbc.setState(0x73a3, 0xe0e3, 0x7e80, 0xe883, 0x7238, 0x2389, 0x0, 0x0);
        gbc.writeMem(0x73a3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe0e3, gbc.sp());
        EXPECT(0x73a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0310
        gbc.setState(0x7034, 0xd6b1, 0xda20, 0x8190, 0xc47b, 0xaeb7, 0x1, 0x1);
        gbc.writeMem(0x7034, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd6b1, gbc.sp());
        EXPECT(0x7036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0311
        gbc.setState(0x55f0, 0x238, 0x3ef0, 0x8d8, 0x1dcb, 0x589c, 0x1, 0x1);
        gbc.writeMem(0x55f0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x238, gbc.sp());
        EXPECT(0x55f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0312
        gbc.setState(0x8db6, 0x3be5, 0xa540, 0xba00, 0x844a, 0xaaaa, 0x1, 0x0);
        gbc.writeMem(0x8db6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3be5, gbc.sp());
        EXPECT(0x8db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db6));
        EXPECT(0x41, gbc.readMem(0x8db7));
        // CB 41 0313
        gbc.setState(0x6498, 0xa536, 0xab40, 0xc6f0, 0xa6de, 0xa2a, 0x1, 0x0);
        gbc.writeMem(0x6498, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa536, gbc.sp());
        EXPECT(0x649a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0314
        gbc.setState(0xff1, 0xedd9, 0xaf60, 0x31fb, 0x476f, 0xa615, 0x1, 0x0);
        gbc.writeMem(0xff1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xedd9, gbc.sp());
        EXPECT(0xff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0315
        gbc.setState(0x6526, 0x9d4b, 0x2b00, 0xacad, 0xf6c4, 0x7d2d, 0x0, 0x1);
        gbc.writeMem(0x6526, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9d4b, gbc.sp());
        EXPECT(0x6528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0316
        gbc.setState(0x482f, 0x6885, 0x1490, 0xcdcf, 0xfd3d, 0xc856, 0x0, 0x1);
        gbc.writeMem(0x482f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6885, gbc.sp());
        EXPECT(0x4831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0317
        gbc.setState(0x621d, 0x6dc5, 0x98a0, 0x6695, 0xb498, 0x513d, 0x1, 0x0);
        gbc.writeMem(0x621d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6dc5, gbc.sp());
        EXPECT(0x621f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0318
        gbc.setState(0x4089, 0x3a09, 0x75a0, 0xb590, 0x7fc1, 0xaee8, 0x1, 0x1);
        gbc.writeMem(0x4089, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3a09, gbc.sp());
        EXPECT(0x408b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0319
        gbc.setState(0x2ebf, 0xcefd, 0x3290, 0xdeb9, 0x4f8e, 0xfc8b, 0x1, 0x1);
        gbc.writeMem(0x2ebf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcefd, gbc.sp());
        EXPECT(0x2ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 031A
        gbc.setState(0x62cc, 0x69a8, 0x4530, 0xed1f, 0xf2a2, 0x1d47, 0x0, 0x0);
        gbc.writeMem(0x62cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x69a8, gbc.sp());
        EXPECT(0x62ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 031B
        gbc.setState(0x7095, 0x25e1, 0xf860, 0x3a4c, 0x476c, 0xfbec, 0x0, 0x1);
        gbc.writeMem(0x7095, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x25e1, gbc.sp());
        EXPECT(0x7097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 031C
        gbc.setState(0x7a61, 0x111a, 0x6270, 0x7185, 0xc108, 0xd57d, 0x0, 0x0);
        gbc.writeMem(0x7a61, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x111a, gbc.sp());
        EXPECT(0x7a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 031D
        gbc.setState(0xd6fb, 0x5508, 0xef30, 0x8bf, 0x4878, 0x9b13, 0x1, 0x0);
        gbc.writeMem(0xd6fb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5508, gbc.sp());
        EXPECT(0xd6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fb));
        EXPECT(0x41, gbc.readMem(0xd6fc));
        // CB 41 031E
        gbc.setState(0x961c, 0x2abb, 0x99a0, 0x3089, 0x834e, 0x4dd5, 0x1, 0x0);
        gbc.writeMem(0x961c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2abb, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961c));
        EXPECT(0x41, gbc.readMem(0x961d));
        // CB 41 031F
        gbc.setState(0x7a46, 0xb064, 0x8110, 0x5bbd, 0x571d, 0x3357, 0x0, 0x0);
        gbc.writeMem(0x7a46, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb064, gbc.sp());
        EXPECT(0x7a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0320
        gbc.setState(0x75b0, 0x7964, 0xed70, 0xfa15, 0x79e3, 0xe79f, 0x1, 0x1);
        gbc.writeMem(0x75b0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7964, gbc.sp());
        EXPECT(0x75b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0323
        gbc.setState(0x2c91, 0xca40, 0x7b50, 0x4989, 0xa65f, 0x5912, 0x1, 0x1);
        gbc.writeMem(0x2c91, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xca40, gbc.sp());
        EXPECT(0x2c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0324
        gbc.setState(0xabda, 0x131a, 0x7ef0, 0x52d6, 0xe914, 0x1d62, 0x1, 0x1);
        gbc.writeMem(0xabda, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x131a, gbc.sp());
        EXPECT(0xabdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabda));
        EXPECT(0x41, gbc.readMem(0xabdb));
        // CB 41 0325
        gbc.setState(0x9bf4, 0xa80b, 0xe9e0, 0x8392, 0xcaf6, 0x4be9, 0x1, 0x1);
        gbc.writeMem(0x9bf4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa80b, gbc.sp());
        EXPECT(0x9bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf4));
        EXPECT(0x41, gbc.readMem(0x9bf5));
        // CB 41 0326
        gbc.setState(0xbbc4, 0xd4e8, 0x1800, 0x79b5, 0x86c0, 0x6122, 0x1, 0x1);
        gbc.writeMem(0xbbc4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd4e8, gbc.sp());
        EXPECT(0xbbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc4));
        EXPECT(0x41, gbc.readMem(0xbbc5));
        // CB 41 0327
        gbc.setState(0x5809, 0xc8ea, 0x38a0, 0x3e3e, 0x56f, 0x99b8, 0x0, 0x0);
        gbc.writeMem(0x5809, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc8ea, gbc.sp());
        EXPECT(0x580b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0328
        gbc.setState(0xccde, 0x8cb, 0xead0, 0xad39, 0x7d2c, 0xef72, 0x1, 0x0);
        gbc.writeMem(0xccde, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8cb, gbc.sp());
        EXPECT(0xcce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccde));
        EXPECT(0x41, gbc.readMem(0xccdf));
        // CB 41 0329
        gbc.setState(0x8b05, 0xb6ae, 0x30d0, 0x8560, 0x7dac, 0x2339, 0x0, 0x1);
        gbc.writeMem(0x8b05, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb6ae, gbc.sp());
        EXPECT(0x8b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b05));
        EXPECT(0x41, gbc.readMem(0x8b06));
        // CB 41 032A
        gbc.setState(0x2d11, 0x431f, 0xb710, 0x8833, 0x996e, 0x1b67, 0x1, 0x1);
        gbc.writeMem(0x2d11, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x431f, gbc.sp());
        EXPECT(0x2d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 032B
        gbc.setState(0xd47, 0xeaa4, 0x4c0, 0x5bd1, 0x9b3f, 0xf91f, 0x1, 0x1);
        gbc.writeMem(0xd47, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xeaa4, gbc.sp());
        EXPECT(0xd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 032C
        gbc.setState(0x44bc, 0xa988, 0x6d70, 0xbdf8, 0xceff, 0xb766, 0x1, 0x0);
        gbc.writeMem(0x44bc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa988, gbc.sp());
        EXPECT(0x44be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 032D
        gbc.setState(0xca68, 0xfbe9, 0xa300, 0xd5e7, 0xe0d6, 0x30e8, 0x1, 0x0);
        gbc.writeMem(0xca68, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0xca6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca68));
        EXPECT(0x41, gbc.readMem(0xca69));
        // CB 41 032E
        gbc.setState(0x3b49, 0xccd4, 0xc870, 0x24bb, 0xa264, 0xaf8b, 0x0, 0x1);
        gbc.writeMem(0x3b49, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xccd4, gbc.sp());
        EXPECT(0x3b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 032F
        gbc.setState(0x8e3b, 0xb3f0, 0xfa0, 0x40e2, 0x66f4, 0xe6d2, 0x1, 0x0);
        gbc.writeMem(0x8e3b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb3f0, gbc.sp());
        EXPECT(0x8e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3b));
        EXPECT(0x41, gbc.readMem(0x8e3c));
        // CB 41 0330
        gbc.setState(0x95ff, 0x65c7, 0x5a30, 0xd283, 0x6422, 0xcc55, 0x1, 0x1);
        gbc.writeMem(0x95ff, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x65c7, gbc.sp());
        EXPECT(0x9601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ff));
        EXPECT(0x41, gbc.readMem(0x9600));
        // CB 41 0331
        gbc.setState(0xb7a9, 0xf27e, 0x4e30, 0x7bd5, 0xd48c, 0xef52, 0x1, 0x1);
        gbc.writeMem(0xb7a9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf27e, gbc.sp());
        EXPECT(0xb7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a9));
        EXPECT(0x41, gbc.readMem(0xb7aa));
        // CB 41 0333
        gbc.setState(0x56cb, 0x38d1, 0x570, 0xfb9c, 0x66d2, 0x4d54, 0x0, 0x0);
        gbc.writeMem(0x56cb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x38d1, gbc.sp());
        EXPECT(0x56cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0334
        gbc.setState(0x2a42, 0xe12b, 0x5c30, 0x5cf8, 0x9951, 0x6b9b, 0x0, 0x1);
        gbc.writeMem(0x2a42, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe12b, gbc.sp());
        EXPECT(0x2a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0335
        gbc.setState(0x90c8, 0x70f1, 0xc8b0, 0x1ae9, 0x8928, 0xa8ae, 0x0, 0x0);
        gbc.writeMem(0x90c8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x70f1, gbc.sp());
        EXPECT(0x90ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c8));
        EXPECT(0x41, gbc.readMem(0x90c9));
        // CB 41 0336
        gbc.setState(0x67e3, 0x6202, 0x1640, 0x582c, 0x9229, 0xe18, 0x1, 0x0);
        gbc.writeMem(0x67e3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6202, gbc.sp());
        EXPECT(0x67e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0337
        gbc.setState(0x6beb, 0x386b, 0x6b50, 0xd2f4, 0x62f2, 0x96b5, 0x0, 0x0);
        gbc.writeMem(0x6beb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x386b, gbc.sp());
        EXPECT(0x6bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0338
        gbc.setState(0xe706, 0xee78, 0xd620, 0x2c2e, 0x8f7d, 0x2813, 0x1, 0x1);
        gbc.writeMem(0xe706, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xee78, gbc.sp());
        EXPECT(0xe708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe706));
        EXPECT(0x41, gbc.readMem(0xe707));
        // CB 41 0339
        gbc.setState(0xe77d, 0x64aa, 0xa4a0, 0xd5b1, 0xe355, 0x62cf, 0x0, 0x0);
        gbc.writeMem(0xe77d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x64aa, gbc.sp());
        EXPECT(0xe77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77d));
        EXPECT(0x41, gbc.readMem(0xe77e));
        // CB 41 033A
        gbc.setState(0x7e66, 0x1d2d, 0xb1c0, 0x3d3c, 0x5292, 0xa56e, 0x1, 0x1);
        gbc.writeMem(0x7e66, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1d2d, gbc.sp());
        EXPECT(0x7e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 033B
        gbc.setState(0x64ba, 0x944, 0x6bd0, 0x3ca7, 0xc754, 0x43f8, 0x0, 0x1);
        gbc.writeMem(0x64ba, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x944, gbc.sp());
        EXPECT(0x64bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 033C
        gbc.setState(0x469e, 0x168e, 0x1540, 0xad34, 0x624f, 0x4aff, 0x1, 0x0);
        gbc.writeMem(0x469e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x168e, gbc.sp());
        EXPECT(0x46a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 033D
        gbc.setState(0x7bf1, 0x1a9a, 0xcaa0, 0xded6, 0xba, 0x9924, 0x1, 0x0);
        gbc.writeMem(0x7bf1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1a9a, gbc.sp());
        EXPECT(0x7bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 033E
        gbc.setState(0x2e47, 0x2206, 0xd670, 0x321f, 0xd95b, 0xa3c3, 0x0, 0x1);
        gbc.writeMem(0x2e47, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2206, gbc.sp());
        EXPECT(0x2e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 033F
        gbc.setState(0xe64a, 0x2108, 0x55e0, 0x55a2, 0x532d, 0xed43, 0x0, 0x1);
        gbc.writeMem(0xe64a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2108, gbc.sp());
        EXPECT(0xe64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64a));
        EXPECT(0x41, gbc.readMem(0xe64b));
        // CB 41 0340
        gbc.setState(0x12c8, 0x5554, 0x9cf0, 0x29e8, 0x3931, 0x5fbe, 0x1, 0x1);
        gbc.writeMem(0x12c8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5554, gbc.sp());
        EXPECT(0x12ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0341
        gbc.setState(0xa0f8, 0x818, 0xcc40, 0xc3a6, 0xa3cd, 0x3882, 0x0, 0x1);
        gbc.writeMem(0xa0f8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x818, gbc.sp());
        EXPECT(0xa0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f8));
        EXPECT(0x41, gbc.readMem(0xa0f9));
        // CB 41 0342
        gbc.setState(0x1fdf, 0x8372, 0xc380, 0x7670, 0x6db2, 0xec8e, 0x1, 0x1);
        gbc.writeMem(0x1fdf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8372, gbc.sp());
        EXPECT(0x1fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0343
        gbc.setState(0x5ac9, 0x9eab, 0xa1a0, 0xf3b9, 0xec4, 0x9978, 0x1, 0x0);
        gbc.writeMem(0x5ac9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9eab, gbc.sp());
        EXPECT(0x5acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0344
        gbc.setState(0x88ea, 0x1e30, 0x26c0, 0xd18c, 0xaa48, 0x6bdb, 0x1, 0x1);
        gbc.writeMem(0x88ea, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1e30, gbc.sp());
        EXPECT(0x88ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ea));
        EXPECT(0x41, gbc.readMem(0x88eb));
        // CB 41 0345
        gbc.setState(0x39c8, 0x7fa3, 0x7290, 0x7dae, 0xb198, 0xbf15, 0x0, 0x0);
        gbc.writeMem(0x39c8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7fa3, gbc.sp());
        EXPECT(0x39ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0347
        gbc.setState(0xa79c, 0x4dd0, 0xa960, 0x186, 0x52fd, 0x8242, 0x1, 0x0);
        gbc.writeMem(0xa79c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4dd0, gbc.sp());
        EXPECT(0xa79e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79c));
        EXPECT(0x41, gbc.readMem(0xa79d));
        // CB 41 0348
        gbc.setState(0x8300, 0x3b76, 0x2ef0, 0x6055, 0xbc2, 0x6ea0, 0x1, 0x1);
        gbc.writeMem(0x8300, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3b76, gbc.sp());
        EXPECT(0x8302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8300));
        EXPECT(0x41, gbc.readMem(0x8301));
        // CB 41 0349
        gbc.setState(0xaf0f, 0x2ed1, 0x1210, 0x800f, 0x65f4, 0x2750, 0x1, 0x0);
        gbc.writeMem(0xaf0f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2ed1, gbc.sp());
        EXPECT(0xaf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0f));
        EXPECT(0x41, gbc.readMem(0xaf10));
        // CB 41 034A
        gbc.setState(0x9f62, 0xe468, 0x400, 0x48e6, 0x35bc, 0x8fec, 0x1, 0x0);
        gbc.writeMem(0x9f62, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe468, gbc.sp());
        EXPECT(0x9f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f62));
        EXPECT(0x41, gbc.readMem(0x9f63));
        // CB 41 034B
        gbc.setState(0xa8c1, 0x57c4, 0x7df0, 0x4ef, 0x91bf, 0xd4d8, 0x0, 0x0);
        gbc.writeMem(0xa8c1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x57c4, gbc.sp());
        EXPECT(0xa8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c1));
        EXPECT(0x41, gbc.readMem(0xa8c2));
        // CB 41 034C
        gbc.setState(0x79c4, 0x4b0, 0xcfe0, 0x166b, 0x9e0, 0xd322, 0x0, 0x0);
        gbc.writeMem(0x79c4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4b0, gbc.sp());
        EXPECT(0x79c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 034D
        gbc.setState(0x2593, 0x2ebf, 0x3680, 0xf1a, 0x808, 0x2e2a, 0x0, 0x1);
        gbc.writeMem(0x2593, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2ebf, gbc.sp());
        EXPECT(0x2595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 034E
        gbc.setState(0x9ebc, 0xff8e, 0xb540, 0x1a2a, 0x9907, 0x8a8b, 0x1, 0x0);
        gbc.writeMem(0x9ebc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xff8e, gbc.sp());
        EXPECT(0x9ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebc));
        EXPECT(0x41, gbc.readMem(0x9ebd));
        // CB 41 034F
        gbc.setState(0x2e89, 0xf6de, 0x550, 0xed4c, 0x3435, 0x7dae, 0x1, 0x0);
        gbc.writeMem(0x2e89, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf6de, gbc.sp());
        EXPECT(0x2e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0350
        gbc.setState(0xe665, 0xda6e, 0x72d0, 0x4c9c, 0x553e, 0x2d5, 0x0, 0x1);
        gbc.writeMem(0xe665, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xda6e, gbc.sp());
        EXPECT(0xe667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe665));
        EXPECT(0x41, gbc.readMem(0xe666));
        // CB 41 0351
        gbc.setState(0x1b30, 0x10d8, 0x7f10, 0x8c69, 0x9b29, 0xaf48, 0x0, 0x0);
        gbc.writeMem(0x1b30, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x10d8, gbc.sp());
        EXPECT(0x1b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0352
        gbc.setState(0xae75, 0xa713, 0xab50, 0x7f9, 0x2906, 0xeeb7, 0x1, 0x1);
        gbc.writeMem(0xae75, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa713, gbc.sp());
        EXPECT(0xae77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae75));
        EXPECT(0x41, gbc.readMem(0xae76));
        // CB 41 0353
        gbc.setState(0xa9cc, 0xde16, 0xe710, 0x311b, 0x611d, 0xea9f, 0x1, 0x1);
        gbc.writeMem(0xa9cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xde16, gbc.sp());
        EXPECT(0xa9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cc));
        EXPECT(0x41, gbc.readMem(0xa9cd));
        // CB 41 0354
        gbc.setState(0xf51, 0xd01f, 0xa350, 0x25fa, 0x90c4, 0xa4f9, 0x0, 0x0);
        gbc.writeMem(0xf51, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd01f, gbc.sp());
        EXPECT(0xf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0355
        gbc.setState(0x58d4, 0x9500, 0xebb0, 0x8ef8, 0xf5c5, 0x990c, 0x1, 0x0);
        gbc.writeMem(0x58d4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9500, gbc.sp());
        EXPECT(0x58d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0356
        gbc.setState(0xa9c6, 0xad8f, 0xe5d0, 0x1f2b, 0x8738, 0xef7c, 0x0, 0x1);
        gbc.writeMem(0xa9c6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xad8f, gbc.sp());
        EXPECT(0xa9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c6));
        EXPECT(0x41, gbc.readMem(0xa9c7));
        // CB 41 0357
        gbc.setState(0xc367, 0xd656, 0xd50, 0x4680, 0xcb77, 0x519e, 0x1, 0x1);
        gbc.writeMem(0xc367, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd656, gbc.sp());
        EXPECT(0xc369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc367));
        EXPECT(0x41, gbc.readMem(0xc368));
        // CB 41 0358
        gbc.setState(0xc680, 0x68c1, 0x8d20, 0x6c76, 0xfc33, 0x3fff, 0x1, 0x0);
        gbc.writeMem(0xc680, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x68c1, gbc.sp());
        EXPECT(0xc682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc680));
        EXPECT(0x41, gbc.readMem(0xc681));
        // CB 41 0359
        gbc.setState(0x5964, 0xd64d, 0x8f00, 0xb812, 0x13fa, 0x5599, 0x1, 0x0);
        gbc.writeMem(0x5964, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd64d, gbc.sp());
        EXPECT(0x5966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 035A
        gbc.setState(0x28ef, 0xb1ef, 0x3410, 0x7f1e, 0xe931, 0x9d94, 0x1, 0x0);
        gbc.writeMem(0x28ef, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb1ef, gbc.sp());
        EXPECT(0x28f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 035B
        gbc.setState(0x8f89, 0x9306, 0xcb50, 0xf9f, 0x321a, 0x686a, 0x1, 0x1);
        gbc.writeMem(0x8f89, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9306, gbc.sp());
        EXPECT(0x8f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f89));
        EXPECT(0x41, gbc.readMem(0x8f8a));
        // CB 41 035C
        gbc.setState(0x2197, 0x157d, 0xadd0, 0xa91b, 0xe454, 0x3501, 0x0, 0x1);
        gbc.writeMem(0x2197, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x157d, gbc.sp());
        EXPECT(0x2199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 035D
        gbc.setState(0xaec1, 0x76f2, 0xed60, 0x8bc9, 0x288, 0x5971, 0x1, 0x0);
        gbc.writeMem(0xaec1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x76f2, gbc.sp());
        EXPECT(0xaec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec1));
        EXPECT(0x41, gbc.readMem(0xaec2));
        // CB 41 035E
        gbc.setState(0x335a, 0x7587, 0x3e40, 0x62ad, 0xc3a3, 0x6c1c, 0x1, 0x0);
        gbc.writeMem(0x335a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7587, gbc.sp());
        EXPECT(0x335c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 035F
        gbc.setState(0x5c6b, 0xad0b, 0xe5b0, 0x5aef, 0xea2a, 0xdc07, 0x0, 0x0);
        gbc.writeMem(0x5c6b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xad0b, gbc.sp());
        EXPECT(0x5c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0360
        gbc.setState(0xc3d3, 0x748d, 0x29e0, 0xbe95, 0x4bdc, 0xb030, 0x0, 0x0);
        gbc.writeMem(0xc3d3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x748d, gbc.sp());
        EXPECT(0xc3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d3));
        EXPECT(0x41, gbc.readMem(0xc3d4));
        // CB 41 0361
        gbc.setState(0x2ed7, 0x7a4d, 0xc210, 0xe2b1, 0x9f4d, 0xadf2, 0x1, 0x0);
        gbc.writeMem(0x2ed7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7a4d, gbc.sp());
        EXPECT(0x2ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0362
        gbc.setState(0x4db6, 0x7b7d, 0xd2a0, 0xc68c, 0x3d08, 0xc320, 0x0, 0x1);
        gbc.writeMem(0x4db6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7b7d, gbc.sp());
        EXPECT(0x4db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0363
        gbc.setState(0x2f3b, 0xfa4, 0x760, 0xf223, 0xfb95, 0xc6fa, 0x0, 0x1);
        gbc.writeMem(0x2f3b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfa4, gbc.sp());
        EXPECT(0x2f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0364
        gbc.setState(0xb8ec, 0x54d, 0xecc0, 0x1dc7, 0xaa7a, 0x24bc, 0x1, 0x1);
        gbc.writeMem(0xb8ec, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x54d, gbc.sp());
        EXPECT(0xb8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ec));
        EXPECT(0x41, gbc.readMem(0xb8ed));
        // CB 41 0365
        gbc.setState(0xd8d4, 0xf00e, 0x1410, 0x36e, 0x2c0f, 0x3c29, 0x1, 0x0);
        gbc.writeMem(0xd8d4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf00e, gbc.sp());
        EXPECT(0xd8d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d4));
        EXPECT(0x41, gbc.readMem(0xd8d5));
        // CB 41 0366
        gbc.setState(0xdfcb, 0x6cdb, 0x9180, 0xec79, 0xf1f5, 0xc77e, 0x0, 0x0);
        gbc.writeMem(0xdfcb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6cdb, gbc.sp());
        EXPECT(0xdfcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfcb));
        EXPECT(0x41, gbc.readMem(0xdfcc));
        // CB 41 0367
        gbc.setState(0xe9e9, 0x7713, 0x77e0, 0xd2e6, 0x7fa3, 0x8777, 0x1, 0x1);
        gbc.writeMem(0xe9e9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7713, gbc.sp());
        EXPECT(0xe9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e9));
        EXPECT(0x41, gbc.readMem(0xe9ea));
        // CB 41 0368
        gbc.setState(0x3ec8, 0xc908, 0xed80, 0xe565, 0x1536, 0x2aaa, 0x0, 0x0);
        gbc.writeMem(0x3ec8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc908, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0369
        gbc.setState(0xd2f7, 0x7311, 0xce90, 0xd636, 0x6fa, 0xd2ae, 0x0, 0x0);
        gbc.writeMem(0xd2f7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7311, gbc.sp());
        EXPECT(0xd2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f7));
        EXPECT(0x41, gbc.readMem(0xd2f8));
        // CB 41 036A
        gbc.setState(0x4d03, 0x9374, 0x16a0, 0xe193, 0x2463, 0x8f43, 0x1, 0x1);
        gbc.writeMem(0x4d03, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9374, gbc.sp());
        EXPECT(0x4d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 036B
        gbc.setState(0x7070, 0x859a, 0x7130, 0x6155, 0x7511, 0xd454, 0x0, 0x1);
        gbc.writeMem(0x7070, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x859a, gbc.sp());
        EXPECT(0x7072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 036C
        gbc.setState(0x752a, 0xa74b, 0x230, 0xcedf, 0x13f7, 0x4ed7, 0x0, 0x0);
        gbc.writeMem(0x752a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa74b, gbc.sp());
        EXPECT(0x752c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 036D
        gbc.setState(0x8b35, 0x3735, 0x3f20, 0x1487, 0xc5a3, 0xa6ac, 0x1, 0x1);
        gbc.writeMem(0x8b35, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3735, gbc.sp());
        EXPECT(0x8b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b35));
        EXPECT(0x41, gbc.readMem(0x8b36));
        // CB 41 036E
        gbc.setState(0x7158, 0x14d1, 0xedb0, 0x6847, 0x1937, 0x2841, 0x1, 0x0);
        gbc.writeMem(0x7158, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x14d1, gbc.sp());
        EXPECT(0x715a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 036F
        gbc.setState(0x8a14, 0x57fe, 0x5030, 0xbb84, 0x7a99, 0x7835, 0x0, 0x1);
        gbc.writeMem(0x8a14, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x57fe, gbc.sp());
        EXPECT(0x8a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a14));
        EXPECT(0x41, gbc.readMem(0x8a15));
        // CB 41 0370
        gbc.setState(0xbf8e, 0x3cc1, 0x2d60, 0x45fc, 0x59ea, 0x4950, 0x0, 0x1);
        gbc.writeMem(0xbf8e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3cc1, gbc.sp());
        EXPECT(0xbf90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8e));
        EXPECT(0x41, gbc.readMem(0xbf8f));
        // CB 41 0371
        gbc.setState(0x1b9b, 0x9276, 0xd400, 0x2a54, 0x2fc4, 0xe32f, 0x0, 0x1);
        gbc.writeMem(0x1b9b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9276, gbc.sp());
        EXPECT(0x1b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0372
        gbc.setState(0x37b4, 0xf23e, 0x2530, 0xbbda, 0x3a45, 0xb692, 0x1, 0x1);
        gbc.writeMem(0x37b4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf23e, gbc.sp());
        EXPECT(0x37b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0373
        gbc.setState(0x3f1a, 0xd05, 0x41c0, 0xaad0, 0x3fc, 0x290c, 0x1, 0x0);
        gbc.writeMem(0x3f1a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd05, gbc.sp());
        EXPECT(0x3f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0374
        gbc.setState(0x2c00, 0x370f, 0xb690, 0x1ad3, 0xe05a, 0x5857, 0x1, 0x1);
        gbc.writeMem(0x2c00, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x370f, gbc.sp());
        EXPECT(0x2c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0375
        gbc.setState(0x2bb5, 0xc15b, 0x9f20, 0x544e, 0x77c1, 0xc0f7, 0x0, 0x0);
        gbc.writeMem(0x2bb5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc15b, gbc.sp());
        EXPECT(0x2bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0376
        gbc.setState(0xbda8, 0x9939, 0x69c0, 0xfdd0, 0xd13d, 0xd934, 0x1, 0x0);
        gbc.writeMem(0xbda8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9939, gbc.sp());
        EXPECT(0xbdaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda8));
        EXPECT(0x41, gbc.readMem(0xbda9));
        // CB 41 0377
        gbc.setState(0x68d5, 0x2c5a, 0x72b0, 0xc044, 0x238f, 0x72f2, 0x1, 0x0);
        gbc.writeMem(0x68d5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2c5a, gbc.sp());
        EXPECT(0x68d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0378
        gbc.setState(0xe4c8, 0xcf23, 0x9c30, 0xe45, 0xd8fe, 0xcfb1, 0x0, 0x1);
        gbc.writeMem(0xe4c8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcf23, gbc.sp());
        EXPECT(0xe4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c8));
        EXPECT(0x41, gbc.readMem(0xe4c9));
        // CB 41 0379
        gbc.setState(0x242f, 0x24e4, 0xba80, 0x639f, 0x3b53, 0xcf6a, 0x0, 0x1);
        gbc.writeMem(0x242f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x24e4, gbc.sp());
        EXPECT(0x2431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 037A
        gbc.setState(0xe93c, 0x8a9b, 0x9df0, 0x3f2a, 0xe0ee, 0x3d3a, 0x0, 0x0);
        gbc.writeMem(0xe93c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8a9b, gbc.sp());
        EXPECT(0xe93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe93c));
        EXPECT(0x41, gbc.readMem(0xe93d));
        // CB 41 037B
        gbc.setState(0x530d, 0xc2f5, 0xf250, 0x208d, 0x7255, 0xcb5c, 0x0, 0x1);
        gbc.writeMem(0x530d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc2f5, gbc.sp());
        EXPECT(0x530f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 037C
        gbc.setState(0xceb1, 0x2c4b, 0x7fd0, 0xfb55, 0x8da0, 0x99a5, 0x0, 0x1);
        gbc.writeMem(0xceb1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2c4b, gbc.sp());
        EXPECT(0xceb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb1));
        EXPECT(0x41, gbc.readMem(0xceb2));
        // CB 41 037D
        gbc.setState(0x8ba1, 0x97f7, 0xd070, 0x70c2, 0xcc99, 0xe026, 0x0, 0x1);
        gbc.writeMem(0x8ba1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x97f7, gbc.sp());
        EXPECT(0x8ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba1));
        EXPECT(0x41, gbc.readMem(0x8ba2));
        // CB 41 037E
        gbc.setState(0xebf1, 0x970c, 0xa590, 0x8433, 0x260d, 0x235, 0x1, 0x1);
        gbc.writeMem(0xebf1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x970c, gbc.sp());
        EXPECT(0xebf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf1));
        EXPECT(0x41, gbc.readMem(0xebf2));
        // CB 41 037F
        gbc.setState(0x5dc6, 0x107c, 0x98a0, 0xd6b1, 0x91fc, 0xb60f, 0x1, 0x1);
        gbc.writeMem(0x5dc6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x107c, gbc.sp());
        EXPECT(0x5dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0381
        gbc.setState(0x7d77, 0x55af, 0x8d80, 0x826f, 0x7b5d, 0x3265, 0x0, 0x1);
        gbc.writeMem(0x7d77, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x55af, gbc.sp());
        EXPECT(0x7d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0382
        gbc.setState(0xde95, 0x33c, 0x2620, 0x2e1f, 0xef07, 0x9aa0, 0x0, 0x0);
        gbc.writeMem(0xde95, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x33c, gbc.sp());
        EXPECT(0xde97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde95));
        EXPECT(0x41, gbc.readMem(0xde96));
        // CB 41 0383
        gbc.setState(0x71cc, 0xa87c, 0x690, 0x18d6, 0x181e, 0x5397, 0x1, 0x0);
        gbc.writeMem(0x71cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa87c, gbc.sp());
        EXPECT(0x71ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0384
        gbc.setState(0xeec8, 0x9911, 0x89d0, 0x2d0a, 0xfde5, 0x5fc3, 0x0, 0x1);
        gbc.writeMem(0xeec8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9911, gbc.sp());
        EXPECT(0xeeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec8));
        EXPECT(0x41, gbc.readMem(0xeec9));
        // CB 41 0385
        gbc.setState(0x2dfc, 0xd1c, 0x9b70, 0xa696, 0x740d, 0x17a7, 0x0, 0x0);
        gbc.writeMem(0x2dfc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd1c, gbc.sp());
        EXPECT(0x2dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0386
        gbc.setState(0xb5f5, 0x5861, 0xa850, 0x62a7, 0x3275, 0x4325, 0x0, 0x0);
        gbc.writeMem(0xb5f5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5861, gbc.sp());
        EXPECT(0xb5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f5));
        EXPECT(0x41, gbc.readMem(0xb5f6));
        // CB 41 0387
        gbc.setState(0x236, 0x272b, 0xbc60, 0xc425, 0x3968, 0x5c4, 0x0, 0x0);
        gbc.writeMem(0x236, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x272b, gbc.sp());
        EXPECT(0x238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0388
        gbc.setState(0xdf1e, 0xc55a, 0x91d0, 0xb2ed, 0x9a20, 0xfb17, 0x0, 0x1);
        gbc.writeMem(0xdf1e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc55a, gbc.sp());
        EXPECT(0xdf20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf1e));
        EXPECT(0x41, gbc.readMem(0xdf1f));
        // CB 41 0389
        gbc.setState(0x895, 0x551c, 0x5b40, 0xc774, 0x5cee, 0x515a, 0x1, 0x1);
        gbc.writeMem(0x895, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x551c, gbc.sp());
        EXPECT(0x897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 038A
        gbc.setState(0x7b9a, 0x9d60, 0x7d20, 0x73b7, 0xe781, 0xf775, 0x1, 0x0);
        gbc.writeMem(0x7b9a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9d60, gbc.sp());
        EXPECT(0x7b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 038B
        gbc.setState(0xdec9, 0xcf26, 0x780, 0x5464, 0x8280, 0x3180, 0x0, 0x0);
        gbc.writeMem(0xdec9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcf26, gbc.sp());
        EXPECT(0xdecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec9));
        EXPECT(0x41, gbc.readMem(0xdeca));
        // CB 41 038C
        gbc.setState(0x6739, 0x83ab, 0x8f50, 0x2903, 0x8d20, 0xdfa1, 0x0, 0x0);
        gbc.writeMem(0x6739, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x83ab, gbc.sp());
        EXPECT(0x673b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 038D
        gbc.setState(0x3d2c, 0xc12c, 0xb5b0, 0x5c36, 0x661d, 0xb3f, 0x0, 0x0);
        gbc.writeMem(0x3d2c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc12c, gbc.sp());
        EXPECT(0x3d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 038E
        gbc.setState(0x866a, 0xf9b1, 0xbc00, 0x224a, 0x656e, 0xefd3, 0x1, 0x0);
        gbc.writeMem(0x866a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf9b1, gbc.sp());
        EXPECT(0x866c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866a));
        EXPECT(0x41, gbc.readMem(0x866b));
        // CB 41 038F
        gbc.setState(0xb76b, 0x7f44, 0xf300, 0x73b6, 0x72fc, 0x3a7c, 0x0, 0x1);
        gbc.writeMem(0xb76b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7f44, gbc.sp());
        EXPECT(0xb76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76b));
        EXPECT(0x41, gbc.readMem(0xb76c));
        // CB 41 0390
        gbc.setState(0x5447, 0xac86, 0x2a00, 0xf96e, 0x1640, 0x15ec, 0x1, 0x0);
        gbc.writeMem(0x5447, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xac86, gbc.sp());
        EXPECT(0x5449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0391
        gbc.setState(0x835f, 0xb8e8, 0xa5f0, 0x34f9, 0x3602, 0x86af, 0x0, 0x0);
        gbc.writeMem(0x835f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb8e8, gbc.sp());
        EXPECT(0x8361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835f));
        EXPECT(0x41, gbc.readMem(0x8360));
        // CB 41 0392
        gbc.setState(0xb586, 0xeea2, 0x1ea0, 0xbbee, 0x344a, 0x19ff, 0x0, 0x1);
        gbc.writeMem(0xb586, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xeea2, gbc.sp());
        EXPECT(0xb588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb586));
        EXPECT(0x41, gbc.readMem(0xb587));
        // CB 41 0393
        gbc.setState(0x28cf, 0xffc, 0xaef0, 0x363b, 0x5198, 0x780f, 0x1, 0x1);
        gbc.writeMem(0x28cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xffc, gbc.sp());
        EXPECT(0x28d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0394
        gbc.setState(0x7fd5, 0xab78, 0x7570, 0x164d, 0xc728, 0xc906, 0x0, 0x1);
        gbc.writeMem(0x7fd5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xab78, gbc.sp());
        EXPECT(0x7fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 0395
        gbc.setState(0x8e41, 0xc137, 0xf9b0, 0x35e3, 0xc4f6, 0xf48e, 0x1, 0x1);
        gbc.writeMem(0x8e41, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc137, gbc.sp());
        EXPECT(0x8e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e41));
        EXPECT(0x41, gbc.readMem(0x8e42));
        // CB 41 0396
        gbc.setState(0xef68, 0x4b43, 0x2e10, 0x36fb, 0xe042, 0xfe78, 0x1, 0x1);
        gbc.writeMem(0xef68, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4b43, gbc.sp());
        EXPECT(0xef6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef68));
        EXPECT(0x41, gbc.readMem(0xef69));
        // CB 41 0398
        gbc.setState(0x76b6, 0x4992, 0x3d60, 0x4288, 0xafe, 0xa385, 0x0, 0x1);
        gbc.writeMem(0x76b6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4992, gbc.sp());
        EXPECT(0x76b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 0399
        gbc.setState(0x7602, 0x953e, 0x2e50, 0x82a6, 0x70d4, 0xcd95, 0x1, 0x0);
        gbc.writeMem(0x7602, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x953e, gbc.sp());
        EXPECT(0x7604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 039A
        gbc.setState(0xa42c, 0x1435, 0x7b10, 0x9652, 0xceb7, 0x8d30, 0x1, 0x1);
        gbc.writeMem(0xa42c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1435, gbc.sp());
        EXPECT(0xa42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42c));
        EXPECT(0x41, gbc.readMem(0xa42d));
        // CB 41 039B
        gbc.setState(0x5bb9, 0xb84c, 0x8cc0, 0x85fe, 0xcec9, 0x1d9, 0x1, 0x0);
        gbc.writeMem(0x5bb9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb84c, gbc.sp());
        EXPECT(0x5bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 039D
        gbc.setState(0x3162, 0x5745, 0x37c0, 0xc691, 0xca3f, 0xff4f, 0x1, 0x0);
        gbc.writeMem(0x3162, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5745, gbc.sp());
        EXPECT(0x3164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 039E
        gbc.setState(0xd72f, 0xa0cb, 0x1940, 0x4fd, 0x5efb, 0x7cba, 0x0, 0x1);
        gbc.writeMem(0xd72f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa0cb, gbc.sp());
        EXPECT(0xd731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72f));
        EXPECT(0x41, gbc.readMem(0xd730));
        // CB 41 039F
        gbc.setState(0x9891, 0x6185, 0xd890, 0xe5df, 0xb015, 0xe435, 0x1, 0x1);
        gbc.writeMem(0x9891, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6185, gbc.sp());
        EXPECT(0x9893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9891));
        EXPECT(0x41, gbc.readMem(0x9892));
        // CB 41 03A1
        gbc.setState(0x9aec, 0x4587, 0x5e90, 0x4b5c, 0x811b, 0xf937, 0x0, 0x1);
        gbc.writeMem(0x9aec, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4587, gbc.sp());
        EXPECT(0x9aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aec));
        EXPECT(0x41, gbc.readMem(0x9aed));
        // CB 41 03A2
        gbc.setState(0x6206, 0x857f, 0x8c60, 0x1ac7, 0xc627, 0xe135, 0x0, 0x0);
        gbc.writeMem(0x6206, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x857f, gbc.sp());
        EXPECT(0x6208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03A3
        gbc.setState(0xcd57, 0xacdf, 0x45a0, 0xf46c, 0x64ea, 0xc1a0, 0x1, 0x0);
        gbc.writeMem(0xcd57, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xacdf, gbc.sp());
        EXPECT(0xcd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd57));
        EXPECT(0x41, gbc.readMem(0xcd58));
        // CB 41 03A4
        gbc.setState(0xe7e2, 0x15fa, 0x68b0, 0x728c, 0x6f0, 0xe851, 0x1, 0x0);
        gbc.writeMem(0xe7e2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x15fa, gbc.sp());
        EXPECT(0xe7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e2));
        EXPECT(0x41, gbc.readMem(0xe7e3));
        // CB 41 03A5
        gbc.setState(0x8a1e, 0x471, 0x2940, 0x4de3, 0xae11, 0x8a1, 0x1, 0x0);
        gbc.writeMem(0x8a1e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x471, gbc.sp());
        EXPECT(0x8a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1e));
        EXPECT(0x41, gbc.readMem(0x8a1f));
        // CB 41 03A6
        gbc.setState(0x6873, 0xe821, 0xf720, 0x9a3e, 0x4bc5, 0x53d9, 0x0, 0x0);
        gbc.writeMem(0x6873, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe821, gbc.sp());
        EXPECT(0x6875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03A7
        gbc.setState(0x5811, 0x3c5, 0x1470, 0x20db, 0xd234, 0xa061, 0x0, 0x1);
        gbc.writeMem(0x5811, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3c5, gbc.sp());
        EXPECT(0x5813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03A8
        gbc.setState(0xc95, 0x8c24, 0x4490, 0xc51e, 0x6267, 0x374d, 0x0, 0x1);
        gbc.writeMem(0xc95, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8c24, gbc.sp());
        EXPECT(0xc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03A9
        gbc.setState(0x6c54, 0xe1c9, 0x700, 0xf31c, 0x46e9, 0xc099, 0x1, 0x0);
        gbc.writeMem(0x6c54, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe1c9, gbc.sp());
        EXPECT(0x6c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03AA
        gbc.setState(0x5569, 0x62d4, 0x6dd0, 0xe1f3, 0x75f5, 0x73e9, 0x1, 0x1);
        gbc.writeMem(0x5569, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x62d4, gbc.sp());
        EXPECT(0x556b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03AB
        gbc.setState(0x5aa9, 0x4da1, 0x4f90, 0xf6cb, 0x51a5, 0xbf39, 0x1, 0x1);
        gbc.writeMem(0x5aa9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4da1, gbc.sp());
        EXPECT(0x5aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03AC
        gbc.setState(0x7b41, 0x9ad4, 0xa460, 0xa374, 0xfb45, 0x9520, 0x0, 0x1);
        gbc.writeMem(0x7b41, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0x7b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03AD
        gbc.setState(0x93d8, 0x3109, 0xb4e0, 0x3230, 0xb822, 0x63a9, 0x0, 0x1);
        gbc.writeMem(0x93d8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3109, gbc.sp());
        EXPECT(0x93da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d8));
        EXPECT(0x41, gbc.readMem(0x93d9));
        // CB 41 03AE
        gbc.setState(0xdc1d, 0xec9, 0x88e0, 0xf12d, 0x1786, 0x3d55, 0x1, 0x1);
        gbc.writeMem(0xdc1d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xec9, gbc.sp());
        EXPECT(0xdc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1d));
        EXPECT(0x41, gbc.readMem(0xdc1e));
        // CB 41 03AF
        gbc.setState(0x858d, 0xe2a5, 0x6de0, 0x1b70, 0x844b, 0xa534, 0x0, 0x0);
        gbc.writeMem(0x858d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe2a5, gbc.sp());
        EXPECT(0x858f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858d));
        EXPECT(0x41, gbc.readMem(0x858e));
        // CB 41 03B0
        gbc.setState(0xc354, 0x9905, 0xc490, 0x2b6, 0x3f3d, 0x1264, 0x1, 0x0);
        gbc.writeMem(0xc354, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9905, gbc.sp());
        EXPECT(0xc356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc354));
        EXPECT(0x41, gbc.readMem(0xc355));
        // CB 41 03B1
        gbc.setState(0x62f8, 0x1, 0x7540, 0xc0d6, 0xfe41, 0xfd17, 0x0, 0x1);
        gbc.writeMem(0x62f8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1, gbc.sp());
        EXPECT(0x62fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03B2
        gbc.setState(0xd508, 0x4df5, 0xdc30, 0x2976, 0xf823, 0xc704, 0x1, 0x1);
        gbc.writeMem(0xd508, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4df5, gbc.sp());
        EXPECT(0xd50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd508));
        EXPECT(0x41, gbc.readMem(0xd509));
        // CB 41 03B3
        gbc.setState(0x7ce6, 0x36cb, 0x2760, 0xfa1b, 0x3a8d, 0x93df, 0x0, 0x0);
        gbc.writeMem(0x7ce6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x36cb, gbc.sp());
        EXPECT(0x7ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03B4
        gbc.setState(0x19c, 0x3541, 0xf9c0, 0x144b, 0x7205, 0xc94e, 0x0, 0x1);
        gbc.writeMem(0x19c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3541, gbc.sp());
        EXPECT(0x19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03B5
        gbc.setState(0xfd5, 0x67b8, 0x6960, 0x4bc1, 0x448b, 0x377b, 0x0, 0x0);
        gbc.writeMem(0xfd5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x67b8, gbc.sp());
        EXPECT(0xfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03B6
        gbc.setState(0x9dde, 0x57fc, 0xd8d0, 0x2ca2, 0xbb45, 0x6bfb, 0x1, 0x0);
        gbc.writeMem(0x9dde, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x57fc, gbc.sp());
        EXPECT(0x9de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dde));
        EXPECT(0x41, gbc.readMem(0x9ddf));
        // CB 41 03B7
        gbc.setState(0x6ee6, 0x2f52, 0x4c50, 0xead3, 0x8600, 0xe283, 0x0, 0x1);
        gbc.writeMem(0x6ee6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2f52, gbc.sp());
        EXPECT(0x6ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03B8
        gbc.setState(0x4632, 0xcce0, 0x59b0, 0x1a04, 0x23f5, 0x36c, 0x1, 0x0);
        gbc.writeMem(0x4632, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcce0, gbc.sp());
        EXPECT(0x4634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03B9
        gbc.setState(0xb8e8, 0xde4c, 0xe040, 0xed47, 0xec42, 0x463, 0x1, 0x0);
        gbc.writeMem(0xb8e8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xde4c, gbc.sp());
        EXPECT(0xb8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e8));
        EXPECT(0x41, gbc.readMem(0xb8e9));
        // CB 41 03BA
        gbc.setState(0x7aab, 0x4914, 0x9c90, 0x26c, 0xe670, 0xe20e, 0x1, 0x0);
        gbc.writeMem(0x7aab, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4914, gbc.sp());
        EXPECT(0x7aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03BB
        gbc.setState(0xb891, 0xa48e, 0x9930, 0x13ed, 0xee37, 0x5431, 0x0, 0x0);
        gbc.writeMem(0xb891, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa48e, gbc.sp());
        EXPECT(0xb893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb891));
        EXPECT(0x41, gbc.readMem(0xb892));
        // CB 41 03BC
        gbc.setState(0xbb9a, 0xcc49, 0xc320, 0x374a, 0x5f0f, 0x49a1, 0x1, 0x0);
        gbc.writeMem(0xbb9a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcc49, gbc.sp());
        EXPECT(0xbb9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb9a));
        EXPECT(0x41, gbc.readMem(0xbb9b));
        // CB 41 03BD
        gbc.setState(0x11c6, 0x9abc, 0xc440, 0x1b3a, 0x66bd, 0x69, 0x0, 0x0);
        gbc.writeMem(0x11c6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0x11c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03BE
        gbc.setState(0x1089, 0xe0b2, 0x8fb0, 0x1c00, 0x147c, 0x7337, 0x1, 0x1);
        gbc.writeMem(0x1089, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe0b2, gbc.sp());
        EXPECT(0x108b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03BF
        gbc.setState(0x678e, 0x24db, 0x6380, 0x53b0, 0xf8ad, 0xccc5, 0x1, 0x1);
        gbc.writeMem(0x678e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x24db, gbc.sp());
        EXPECT(0x6790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03C0
        gbc.setState(0xa83d, 0xb2e, 0x2e30, 0x8ca9, 0xf3c2, 0x2e8d, 0x1, 0x1);
        gbc.writeMem(0xa83d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb2e, gbc.sp());
        EXPECT(0xa83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83d));
        EXPECT(0x41, gbc.readMem(0xa83e));
        // CB 41 03C2
        gbc.setState(0x48f4, 0xaeca, 0x1620, 0x8efc, 0xff7d, 0x4c93, 0x1, 0x1);
        gbc.writeMem(0x48f4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xaeca, gbc.sp());
        EXPECT(0x48f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03C3
        gbc.setState(0xceee, 0x7cfe, 0x6100, 0x2116, 0x892, 0x9ac7, 0x1, 0x0);
        gbc.writeMem(0xceee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7cfe, gbc.sp());
        EXPECT(0xcef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceee));
        EXPECT(0x41, gbc.readMem(0xceef));
        // CB 41 03C4
        gbc.setState(0xefb3, 0x433c, 0xf2c0, 0x8f62, 0xe09c, 0x849, 0x1, 0x0);
        gbc.writeMem(0xefb3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x433c, gbc.sp());
        EXPECT(0xefb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb3));
        EXPECT(0x41, gbc.readMem(0xefb4));
        // CB 41 03C5
        gbc.setState(0x5865, 0x2cd5, 0x4c80, 0xec13, 0x1bcb, 0x2788, 0x1, 0x1);
        gbc.writeMem(0x5865, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2cd5, gbc.sp());
        EXPECT(0x5867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03C6
        gbc.setState(0xda37, 0xa4e7, 0x3f10, 0x153b, 0xd93e, 0xba74, 0x0, 0x0);
        gbc.writeMem(0xda37, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa4e7, gbc.sp());
        EXPECT(0xda39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda37));
        EXPECT(0x41, gbc.readMem(0xda38));
        // CB 41 03C7
        gbc.setState(0x7512, 0xfbd2, 0xae40, 0x2859, 0x4af2, 0x6230, 0x0, 0x1);
        gbc.writeMem(0x7512, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfbd2, gbc.sp());
        EXPECT(0x7514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03C8
        gbc.setState(0x9516, 0x8289, 0x34c0, 0xff28, 0x443e, 0x6ede, 0x0, 0x1);
        gbc.writeMem(0x9516, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8289, gbc.sp());
        EXPECT(0x9518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9516));
        EXPECT(0x41, gbc.readMem(0x9517));
        // CB 41 03C9
        gbc.setState(0x74e4, 0xca4c, 0x38c0, 0x3059, 0x4568, 0xab1a, 0x0, 0x1);
        gbc.writeMem(0x74e4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xca4c, gbc.sp());
        EXPECT(0x74e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03CA
        gbc.setState(0xc570, 0x1714, 0x5a20, 0xd1bd, 0x472, 0xbce9, 0x1, 0x0);
        gbc.writeMem(0xc570, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1714, gbc.sp());
        EXPECT(0xc572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc570));
        EXPECT(0x41, gbc.readMem(0xc571));
        // CB 41 03CB
        gbc.setState(0x918a, 0xf09b, 0x52e0, 0x73b2, 0x64c2, 0x5dee, 0x0, 0x1);
        gbc.writeMem(0x918a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf09b, gbc.sp());
        EXPECT(0x918c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918a));
        EXPECT(0x41, gbc.readMem(0x918b));
        // CB 41 03CC
        gbc.setState(0x40ca, 0xaee0, 0xea20, 0x8537, 0xe7e8, 0x1102, 0x1, 0x1);
        gbc.writeMem(0x40ca, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xaee0, gbc.sp());
        EXPECT(0x40cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03CD
        gbc.setState(0xdd6d, 0x838b, 0x1390, 0xe43b, 0xc40f, 0xe0fc, 0x0, 0x1);
        gbc.writeMem(0xdd6d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x838b, gbc.sp());
        EXPECT(0xdd6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd6d));
        EXPECT(0x41, gbc.readMem(0xdd6e));
        // CB 41 03CE
        gbc.setState(0xe676, 0xda5b, 0xbce0, 0x9d83, 0xfe6a, 0x5896, 0x0, 0x0);
        gbc.writeMem(0xe676, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xda5b, gbc.sp());
        EXPECT(0xe678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe676));
        EXPECT(0x41, gbc.readMem(0xe677));
        // CB 41 03CF
        gbc.setState(0x1dc6, 0x8e58, 0xf90, 0x9a74, 0x784e, 0x7e57, 0x0, 0x0);
        gbc.writeMem(0x1dc6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8e58, gbc.sp());
        EXPECT(0x1dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03D0
        gbc.setState(0x30a8, 0x71be, 0x7250, 0xc41, 0x56c7, 0xa1af, 0x0, 0x0);
        gbc.writeMem(0x30a8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x71be, gbc.sp());
        EXPECT(0x30aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03D1
        gbc.setState(0x3499, 0xab18, 0x2280, 0x8abe, 0xf9d0, 0x3ada, 0x1, 0x0);
        gbc.writeMem(0x3499, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xab18, gbc.sp());
        EXPECT(0x349b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03D2
        gbc.setState(0x48d5, 0x9572, 0xe6a0, 0x6c0d, 0x1314, 0xda34, 0x0, 0x1);
        gbc.writeMem(0x48d5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9572, gbc.sp());
        EXPECT(0x48d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03D3
        gbc.setState(0xa1fb, 0x1c, 0x8990, 0x78e8, 0xfaa5, 0x21aa, 0x0, 0x1);
        gbc.writeMem(0xa1fb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1c, gbc.sp());
        EXPECT(0xa1fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1fb));
        EXPECT(0x41, gbc.readMem(0xa1fc));
        // CB 41 03D4
        gbc.setState(0xabcc, 0xe395, 0x86c0, 0xf4c, 0xd265, 0xbb28, 0x0, 0x0);
        gbc.writeMem(0xabcc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe395, gbc.sp());
        EXPECT(0xabce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcc));
        EXPECT(0x41, gbc.readMem(0xabcd));
        // CB 41 03D5
        gbc.setState(0x285e, 0xca22, 0x8ad0, 0x2c95, 0x2082, 0xf5b3, 0x0, 0x1);
        gbc.writeMem(0x285e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xca22, gbc.sp());
        EXPECT(0x2860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03D6
        gbc.setState(0x9cf8, 0xf1c, 0xe240, 0xc958, 0xd65b, 0x2f66, 0x1, 0x0);
        gbc.writeMem(0x9cf8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf1c, gbc.sp());
        EXPECT(0x9cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf8));
        EXPECT(0x41, gbc.readMem(0x9cf9));
        // CB 41 03D7
        gbc.setState(0x4696, 0x4ee3, 0xbb30, 0xfa62, 0x9160, 0xe8b7, 0x1, 0x1);
        gbc.writeMem(0x4696, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4ee3, gbc.sp());
        EXPECT(0x4698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03D8
        gbc.setState(0xef10, 0x6fbd, 0xe210, 0xb30d, 0x115e, 0x258d, 0x0, 0x0);
        gbc.writeMem(0xef10, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6fbd, gbc.sp());
        EXPECT(0xef12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef10));
        EXPECT(0x41, gbc.readMem(0xef11));
        // CB 41 03D9
        gbc.setState(0x75a1, 0xa4ce, 0x2410, 0x9a43, 0xceda, 0xdc1f, 0x0, 0x1);
        gbc.writeMem(0x75a1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa4ce, gbc.sp());
        EXPECT(0x75a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03DA
        gbc.setState(0x283c, 0x660e, 0x1420, 0xc83c, 0xa5f5, 0xbfd0, 0x0, 0x1);
        gbc.writeMem(0x283c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x660e, gbc.sp());
        EXPECT(0x283e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 41 03DB
        gbc.setState(0x560e, 0xe13e, 0x770, 0xe36b, 0x59e0, 0xec81, 0x1, 0x0);
        gbc.writeMem(0x560e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0x5610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03DC
        gbc.setState(0xdd5d, 0xefcb, 0xab80, 0xcb54, 0xf59d, 0xec53, 0x1, 0x1);
        gbc.writeMem(0xdd5d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xefcb, gbc.sp());
        EXPECT(0xdd5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5d));
        EXPECT(0x41, gbc.readMem(0xdd5e));
        // CB 41 03DD
        gbc.setState(0xd77f, 0x9d63, 0xbdf0, 0xec85, 0xfd34, 0xbefb, 0x1, 0x1);
        gbc.writeMem(0xd77f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9d63, gbc.sp());
        EXPECT(0xd781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77f));
        EXPECT(0x41, gbc.readMem(0xd780));
        // CB 41 03DE
        gbc.setState(0x247f, 0x4c69, 0x4730, 0xc198, 0xb19c, 0x4f2e, 0x1, 0x0);
        gbc.writeMem(0x247f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4c69, gbc.sp());
        EXPECT(0x2481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03DF
        gbc.setState(0xad0b, 0x9926, 0x1b70, 0x7fc5, 0xc805, 0x493f, 0x0, 0x0);
        gbc.writeMem(0xad0b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9926, gbc.sp());
        EXPECT(0xad0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0b));
        EXPECT(0x41, gbc.readMem(0xad0c));
        // CB 41 03E0
        gbc.setState(0xb656, 0xe593, 0x6dc0, 0xebd2, 0x8bd, 0xe606, 0x0, 0x0);
        gbc.writeMem(0xb656, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe593, gbc.sp());
        EXPECT(0xb658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb656));
        EXPECT(0x41, gbc.readMem(0xb657));
        // CB 41 03E1
        gbc.setState(0xc0a4, 0xf544, 0x4de0, 0x223c, 0x81ad, 0xf62, 0x1, 0x0);
        gbc.writeMem(0xc0a4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf544, gbc.sp());
        EXPECT(0xc0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a4));
        EXPECT(0x41, gbc.readMem(0xc0a5));
        // CB 41 03E3
        gbc.setState(0x8578, 0x6792, 0xc330, 0xd5ba, 0x983a, 0xc200, 0x0, 0x0);
        gbc.writeMem(0x8578, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6792, gbc.sp());
        EXPECT(0x857a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8578));
        EXPECT(0x41, gbc.readMem(0x8579));
        // CB 41 03E4
        gbc.setState(0x730b, 0x2fb5, 0xf30, 0x6984, 0x2fc3, 0x3bb5, 0x1, 0x0);
        gbc.writeMem(0x730b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2fb5, gbc.sp());
        EXPECT(0x730d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03E5
        gbc.setState(0x1da8, 0xa941, 0xb470, 0x6d59, 0x9950, 0x1a83, 0x1, 0x1);
        gbc.writeMem(0x1da8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa941, gbc.sp());
        EXPECT(0x1daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 41 03E6
        gbc.setState(0xe5e1, 0xf5, 0x5c90, 0xbb6e, 0xba2e, 0xca5e, 0x0, 0x1);
        gbc.writeMem(0xe5e1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf5, gbc.sp());
        EXPECT(0xe5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e1));
        EXPECT(0x41, gbc.readMem(0xe5e2));
        // CB 41 03E7
        gbc.setState(0x1c3a, 0x3251, 0x7830, 0x43cd, 0xbdce, 0xedf4, 0x0, 0x0);
        gbc.writeMem(0x1c3a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3251, gbc.sp());
        EXPECT(0x1c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
