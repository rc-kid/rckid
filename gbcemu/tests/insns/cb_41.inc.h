    TEST(gbcemu, opcode_cb_41) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 41 0000
        gbc.setState(0xddec, 0xc8cc, 0x2c70, 0x9a89, 0x6b3f, 0xdef6, 0x0, 0x1);
        gbc.writeMem(0xddec, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc8cc);
        EXPECT(gbc.pc(), 0xddee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddec), 0xcb);
        EXPECT(gbc.readMem(0xdded), 0x41);
        // CB 41 0001
        gbc.setState(0x9dd4, 0xd6d6, 0x9ad0, 0xa806, 0x485d, 0x8058, 0x0, 0x1);
        gbc.writeMem(0x9dd4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd6d6);
        EXPECT(gbc.pc(), 0x9dd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd4), 0xcb);
        EXPECT(gbc.readMem(0x9dd5), 0x41);
        // CB 41 0002
        gbc.setState(0x699b, 0x7103, 0x1480, 0x863b, 0xf85f, 0x7f8c, 0x1, 0x1);
        gbc.writeMem(0x699b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7103);
        EXPECT(gbc.pc(), 0x699d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0004
        gbc.setState(0x5e71, 0xcca6, 0x1d0, 0xdfb9, 0x100d, 0xc616, 0x0, 0x1);
        gbc.writeMem(0x5e71, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xcca6);
        EXPECT(gbc.pc(), 0x5e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0005
        gbc.setState(0xcd83, 0x35dd, 0x41e0, 0x226d, 0x9679, 0xedb7, 0x0, 0x1);
        gbc.writeMem(0xcd83, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x35dd);
        EXPECT(gbc.pc(), 0xcd85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd83), 0xcb);
        EXPECT(gbc.readMem(0xcd84), 0x41);
        // CB 41 0007
        gbc.setState(0x94f4, 0xba39, 0xe360, 0x36b9, 0xcd7c, 0x6ab6, 0x0, 0x1);
        gbc.writeMem(0x94f4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xba39);
        EXPECT(gbc.pc(), 0x94f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f4), 0xcb);
        EXPECT(gbc.readMem(0x94f5), 0x41);
        // CB 41 0008
        gbc.setState(0xaf25, 0x7215, 0xdae0, 0xcd80, 0x9732, 0x9436, 0x1, 0x0);
        gbc.writeMem(0xaf25, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7215);
        EXPECT(gbc.pc(), 0xaf27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf25), 0xcb);
        EXPECT(gbc.readMem(0xaf26), 0x41);
        // CB 41 0009
        gbc.setState(0x9abb, 0x923e, 0x2210, 0x648, 0xcbe1, 0xa8ce, 0x1, 0x1);
        gbc.writeMem(0x9abb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x923e);
        EXPECT(gbc.pc(), 0x9abd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9abb), 0xcb);
        EXPECT(gbc.readMem(0x9abc), 0x41);
        // CB 41 000A
        gbc.setState(0x6f80, 0x7e16, 0x15a0, 0x4eb7, 0x9e00, 0xf639, 0x0, 0x1);
        gbc.writeMem(0x6f80, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7e16);
        EXPECT(gbc.pc(), 0x6f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 000B
        gbc.setState(0x5352, 0x7315, 0x1960, 0x3fb3, 0x178a, 0x10be, 0x0, 0x1);
        gbc.writeMem(0x5352, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7315);
        EXPECT(gbc.pc(), 0x5354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 000C
        gbc.setState(0xd0df, 0xf6cb, 0x3c40, 0x556, 0x296, 0x41c4, 0x1, 0x1);
        gbc.writeMem(0xd0df, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf6cb);
        EXPECT(gbc.pc(), 0xd0e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0df), 0xcb);
        EXPECT(gbc.readMem(0xd0e0), 0x41);
        // CB 41 000D
        gbc.setState(0xda42, 0x4612, 0x84a0, 0x9b24, 0x47ee, 0x6b3e, 0x1, 0x1);
        gbc.writeMem(0xda42, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4612);
        EXPECT(gbc.pc(), 0xda44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda42), 0xcb);
        EXPECT(gbc.readMem(0xda43), 0x41);
        // CB 41 000E
        gbc.setState(0x37b2, 0xd8d, 0x4be0, 0xb217, 0xdcaa, 0xf46a, 0x1, 0x0);
        gbc.writeMem(0x37b2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd8d);
        EXPECT(gbc.pc(), 0x37b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 000F
        gbc.setState(0x1476, 0x6ad0, 0x36e0, 0x8446, 0x9abb, 0x85ee, 0x1, 0x0);
        gbc.writeMem(0x1476, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6ad0);
        EXPECT(gbc.pc(), 0x1478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0010
        gbc.setState(0x9459, 0x6e52, 0x3dd0, 0xd07d, 0xb81e, 0xfe07, 0x0, 0x0);
        gbc.writeMem(0x9459, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6e52);
        EXPECT(gbc.pc(), 0x945b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9459), 0xcb);
        EXPECT(gbc.readMem(0x945a), 0x41);
        // CB 41 0013
        gbc.setState(0xee0f, 0x32e1, 0x3a10, 0xa398, 0x2ae6, 0xb11a, 0x0, 0x0);
        gbc.writeMem(0xee0f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x32e1);
        EXPECT(gbc.pc(), 0xee11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee0f), 0xcb);
        EXPECT(gbc.readMem(0xee10), 0x41);
        // CB 41 0014
        gbc.setState(0xa4cc, 0x5dc1, 0x8e50, 0x7e2a, 0xbaab, 0xdf6a, 0x0, 0x1);
        gbc.writeMem(0xa4cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5dc1);
        EXPECT(gbc.pc(), 0xa4ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4cc), 0xcb);
        EXPECT(gbc.readMem(0xa4cd), 0x41);
        // CB 41 0015
        gbc.setState(0x56f4, 0x210d, 0xc570, 0x8c13, 0x8138, 0xaf98, 0x0, 0x0);
        gbc.writeMem(0x56f4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x210d);
        EXPECT(gbc.pc(), 0x56f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0016
        gbc.setState(0x7f6f, 0x2d15, 0xf260, 0xbd9d, 0x6b07, 0x4d7d, 0x1, 0x1);
        gbc.writeMem(0x7f6f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2d15);
        EXPECT(gbc.pc(), 0x7f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0017
        gbc.setState(0x7369, 0x7468, 0xc890, 0xe65f, 0xa0cb, 0xc679, 0x1, 0x0);
        gbc.writeMem(0x7369, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7468);
        EXPECT(gbc.pc(), 0x736b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0018
        gbc.setState(0xd95b, 0x1626, 0x5030, 0xf02, 0xca1c, 0xf83a, 0x0, 0x1);
        gbc.writeMem(0xd95b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1626);
        EXPECT(gbc.pc(), 0xd95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd95b), 0xcb);
        EXPECT(gbc.readMem(0xd95c), 0x41);
        // CB 41 0019
        gbc.setState(0x3519, 0xed9, 0x1f50, 0xe165, 0x51d4, 0xcfe1, 0x0, 0x1);
        gbc.writeMem(0x3519, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xed9);
        EXPECT(gbc.pc(), 0x351b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 001A
        gbc.setState(0xe88e, 0xe00f, 0xf730, 0xaf72, 0xeeb8, 0x7e52, 0x0, 0x1);
        gbc.writeMem(0xe88e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe00f);
        EXPECT(gbc.pc(), 0xe890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88e), 0xcb);
        EXPECT(gbc.readMem(0xe88f), 0x41);
        // CB 41 001B
        gbc.setState(0x9d9f, 0xd35d, 0xac00, 0x1531, 0x77ae, 0xcba9, 0x0, 0x0);
        gbc.writeMem(0x9d9f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd35d);
        EXPECT(gbc.pc(), 0x9da1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d9f), 0xcb);
        EXPECT(gbc.readMem(0x9da0), 0x41);
        // CB 41 001C
        gbc.setState(0x8add, 0xf785, 0xc300, 0xb491, 0x42cb, 0x1bec, 0x0, 0x0);
        gbc.writeMem(0x8add, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf785);
        EXPECT(gbc.pc(), 0x8adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8add), 0xcb);
        EXPECT(gbc.readMem(0x8ade), 0x41);
        // CB 41 001D
        gbc.setState(0x5cb6, 0xa131, 0xb330, 0xd804, 0x9fb7, 0x549e, 0x1, 0x0);
        gbc.writeMem(0x5cb6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa131);
        EXPECT(gbc.pc(), 0x5cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 001E
        gbc.setState(0xbefa, 0xbf2f, 0xc300, 0x2c7e, 0x4306, 0x75d9, 0x0, 0x0);
        gbc.writeMem(0xbefa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbf2f);
        EXPECT(gbc.pc(), 0xbefc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbefa), 0xcb);
        EXPECT(gbc.readMem(0xbefb), 0x41);
        // CB 41 001F
        gbc.setState(0xe22b, 0x2ab8, 0x53f0, 0x2c32, 0x3796, 0x37e5, 0x0, 0x0);
        gbc.writeMem(0xe22b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2ab8);
        EXPECT(gbc.pc(), 0xe22d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe22b), 0xcb);
        EXPECT(gbc.readMem(0xe22c), 0x41);
        // CB 41 0020
        gbc.setState(0xe68e, 0xed0a, 0x4e20, 0x4037, 0xbe10, 0xb84, 0x1, 0x1);
        gbc.writeMem(0xe68e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xed0a);
        EXPECT(gbc.pc(), 0xe690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe68e), 0xcb);
        EXPECT(gbc.readMem(0xe68f), 0x41);
        // CB 41 0021
        gbc.setState(0xc1ac, 0xb2ef, 0xd760, 0x47d1, 0x3723, 0xe24e, 0x1, 0x0);
        gbc.writeMem(0xc1ac, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb2ef);
        EXPECT(gbc.pc(), 0xc1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ac), 0xcb);
        EXPECT(gbc.readMem(0xc1ad), 0x41);
        // CB 41 0022
        gbc.setState(0x28e6, 0x41a5, 0xc200, 0x3183, 0x63f0, 0xfa54, 0x1, 0x1);
        gbc.writeMem(0x28e6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x41a5);
        EXPECT(gbc.pc(), 0x28e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0023
        gbc.setState(0x592c, 0x9a84, 0x2a00, 0x534f, 0x1272, 0xc210, 0x1, 0x1);
        gbc.writeMem(0x592c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9a84);
        EXPECT(gbc.pc(), 0x592e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0024
        gbc.setState(0x4656, 0x2661, 0x410, 0x5cc3, 0xabf6, 0x80e2, 0x1, 0x0);
        gbc.writeMem(0x4656, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2661);
        EXPECT(gbc.pc(), 0x4658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0025
        gbc.setState(0x379d, 0xb0d1, 0xc3a0, 0x6d19, 0x3dd1, 0x42e1, 0x1, 0x0);
        gbc.writeMem(0x379d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb0d1);
        EXPECT(gbc.pc(), 0x379f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0026
        gbc.setState(0xec78, 0x5861, 0x3c30, 0x6a5f, 0x5faf, 0xb8b1, 0x1, 0x1);
        gbc.writeMem(0xec78, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5861);
        EXPECT(gbc.pc(), 0xec7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec78), 0xcb);
        EXPECT(gbc.readMem(0xec79), 0x41);
        // CB 41 0027
        gbc.setState(0x1b8b, 0xefd9, 0x9810, 0x7f67, 0x369e, 0x6965, 0x0, 0x0);
        gbc.writeMem(0x1b8b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xefd9);
        EXPECT(gbc.pc(), 0x1b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0028
        gbc.setState(0xe33a, 0xf1ff, 0xd7b0, 0xe0ca, 0x5604, 0xde35, 0x0, 0x1);
        gbc.writeMem(0xe33a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf1ff);
        EXPECT(gbc.pc(), 0xe33c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33a), 0xcb);
        EXPECT(gbc.readMem(0xe33b), 0x41);
        // CB 41 0029
        gbc.setState(0x15a0, 0x2728, 0xeab0, 0xea54, 0x8725, 0x62d8, 0x1, 0x0);
        gbc.writeMem(0x15a0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2728);
        EXPECT(gbc.pc(), 0x15a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 002A
        gbc.setState(0xa7fa, 0x2aa2, 0x8ea0, 0xe1f9, 0xa884, 0x4285, 0x0, 0x1);
        gbc.writeMem(0xa7fa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2aa2);
        EXPECT(gbc.pc(), 0xa7fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7fa), 0xcb);
        EXPECT(gbc.readMem(0xa7fb), 0x41);
        // CB 41 002B
        gbc.setState(0x4c0a, 0xa410, 0x1bc0, 0x2829, 0x6d5f, 0x66ef, 0x1, 0x0);
        gbc.writeMem(0x4c0a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa410);
        EXPECT(gbc.pc(), 0x4c0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 002D
        gbc.setState(0x733d, 0xaef, 0xa2e0, 0xe3f2, 0x8b4d, 0xa4fc, 0x1, 0x0);
        gbc.writeMem(0x733d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xaef);
        EXPECT(gbc.pc(), 0x733f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 002E
        gbc.setState(0x37f5, 0xe65b, 0xf830, 0xbbf9, 0xb10b, 0xb4f8, 0x0, 0x1);
        gbc.writeMem(0x37f5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe65b);
        EXPECT(gbc.pc(), 0x37f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 002F
        gbc.setState(0x1234, 0x38d0, 0x5280, 0x3d5d, 0x16a5, 0x7dae, 0x0, 0x0);
        gbc.writeMem(0x1234, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x38d0);
        EXPECT(gbc.pc(), 0x1236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0030
        gbc.setState(0xdad7, 0x63fd, 0xabc0, 0xa4d5, 0x11fb, 0x8f1c, 0x0, 0x0);
        gbc.writeMem(0xdad7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x63fd);
        EXPECT(gbc.pc(), 0xdad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad7), 0xcb);
        EXPECT(gbc.readMem(0xdad8), 0x41);
        // CB 41 0031
        gbc.setState(0xd81d, 0xacb9, 0x8b90, 0xc63a, 0xe11b, 0xb3aa, 0x0, 0x1);
        gbc.writeMem(0xd81d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xacb9);
        EXPECT(gbc.pc(), 0xd81f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd81d), 0xcb);
        EXPECT(gbc.readMem(0xd81e), 0x41);
        // CB 41 0032
        gbc.setState(0x4838, 0xa093, 0x490, 0xb569, 0x2fd7, 0x49eb, 0x1, 0x0);
        gbc.writeMem(0x4838, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa093);
        EXPECT(gbc.pc(), 0x483a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0033
        gbc.setState(0xfeb, 0xd47e, 0xa570, 0xd236, 0x1222, 0xb1bb, 0x0, 0x1);
        gbc.writeMem(0xfeb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd47e);
        EXPECT(gbc.pc(), 0xfed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0034
        gbc.setState(0x20f1, 0x89a3, 0x8520, 0x6c35, 0x1df9, 0x7449, 0x0, 0x0);
        gbc.writeMem(0x20f1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x89a3);
        EXPECT(gbc.pc(), 0x20f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0035
        gbc.setState(0x82b3, 0xac8f, 0xf220, 0x10bf, 0x728b, 0x1559, 0x0, 0x0);
        gbc.writeMem(0x82b3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xac8f);
        EXPECT(gbc.pc(), 0x82b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b3), 0xcb);
        EXPECT(gbc.readMem(0x82b4), 0x41);
        // CB 41 0036
        gbc.setState(0x1c8c, 0x3c2c, 0xf260, 0x928a, 0x8d23, 0xf479, 0x0, 0x1);
        gbc.writeMem(0x1c8c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3c2c);
        EXPECT(gbc.pc(), 0x1c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0037
        gbc.setState(0x5496, 0x6391, 0x6860, 0xa286, 0xa6a9, 0x284, 0x1, 0x0);
        gbc.writeMem(0x5496, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6391);
        EXPECT(gbc.pc(), 0x5498);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0038
        gbc.setState(0x3c53, 0xe818, 0x6980, 0x7c5b, 0xd9bd, 0x7b7f, 0x0, 0x1);
        gbc.writeMem(0x3c53, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe818);
        EXPECT(gbc.pc(), 0x3c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0039
        gbc.setState(0x532a, 0x3b23, 0xfdf0, 0x2627, 0xcf55, 0x5550, 0x0, 0x0);
        gbc.writeMem(0x532a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3b23);
        EXPECT(gbc.pc(), 0x532c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 003A
        gbc.setState(0xc593, 0x5821, 0xaab0, 0x321, 0xc49d, 0xd82e, 0x0, 0x0);
        gbc.writeMem(0xc593, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5821);
        EXPECT(gbc.pc(), 0xc595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc593), 0xcb);
        EXPECT(gbc.readMem(0xc594), 0x41);
        // CB 41 003B
        gbc.setState(0x26b8, 0x34d3, 0x8b90, 0x6a2a, 0x68fa, 0xd25b, 0x0, 0x1);
        gbc.writeMem(0x26b8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x34d3);
        EXPECT(gbc.pc(), 0x26ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 003C
        gbc.setState(0x390e, 0x5eb4, 0x74a0, 0x4a3, 0x1041, 0xbe2d, 0x1, 0x0);
        gbc.writeMem(0x390e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5eb4);
        EXPECT(gbc.pc(), 0x3910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 003D
        gbc.setState(0xbb3d, 0x8931, 0x4a30, 0x5ef4, 0xafed, 0x9d7f, 0x1, 0x1);
        gbc.writeMem(0xbb3d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8931);
        EXPECT(gbc.pc(), 0xbb3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb3d), 0xcb);
        EXPECT(gbc.readMem(0xbb3e), 0x41);
        // CB 41 003E
        gbc.setState(0x118c, 0x50ef, 0xca70, 0xbd51, 0x608d, 0x157a, 0x0, 0x0);
        gbc.writeMem(0x118c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x50ef);
        EXPECT(gbc.pc(), 0x118e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 003F
        gbc.setState(0xbf29, 0xc05, 0x4bb0, 0xf6fe, 0x5de3, 0x1a05, 0x1, 0x0);
        gbc.writeMem(0xbf29, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc05);
        EXPECT(gbc.pc(), 0xbf2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf29), 0xcb);
        EXPECT(gbc.readMem(0xbf2a), 0x41);
        // CB 41 0040
        gbc.setState(0xa272, 0x60a7, 0x4930, 0xf123, 0xd779, 0xd036, 0x1, 0x1);
        gbc.writeMem(0xa272, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x60a7);
        EXPECT(gbc.pc(), 0xa274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa272), 0xcb);
        EXPECT(gbc.readMem(0xa273), 0x41);
        // CB 41 0041
        gbc.setState(0x69ca, 0x6f2a, 0xc7c0, 0x8085, 0xe274, 0x34af, 0x0, 0x0);
        gbc.writeMem(0x69ca, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6f2a);
        EXPECT(gbc.pc(), 0x69cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0042
        gbc.setState(0x1800, 0x80f1, 0xd280, 0x3357, 0x94e3, 0x2c45, 0x0, 0x1);
        gbc.writeMem(0x1800, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x80f1);
        EXPECT(gbc.pc(), 0x1802);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0043
        gbc.setState(0x9c5b, 0xe66d, 0x2680, 0xf97c, 0x3bca, 0xe533, 0x0, 0x0);
        gbc.writeMem(0x9c5b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe66d);
        EXPECT(gbc.pc(), 0x9c5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c5b), 0xcb);
        EXPECT(gbc.readMem(0x9c5c), 0x41);
        // CB 41 0044
        gbc.setState(0xb6b6, 0x67b8, 0x32a0, 0xf445, 0x6af3, 0x58a5, 0x1, 0x0);
        gbc.writeMem(0xb6b6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x67b8);
        EXPECT(gbc.pc(), 0xb6b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b6), 0xcb);
        EXPECT(gbc.readMem(0xb6b7), 0x41);
        // CB 41 0045
        gbc.setState(0x2416, 0x3789, 0x9970, 0x8fb5, 0x5529, 0x3cfc, 0x0, 0x1);
        gbc.writeMem(0x2416, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3789);
        EXPECT(gbc.pc(), 0x2418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0046
        gbc.setState(0xeb5, 0x69e5, 0xc990, 0xfca9, 0x4b74, 0xbed0, 0x1, 0x0);
        gbc.writeMem(0xeb5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x69e5);
        EXPECT(gbc.pc(), 0xeb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0047
        gbc.setState(0xd81d, 0xc3af, 0xc480, 0xcdfd, 0xabe9, 0xb4f, 0x0, 0x1);
        gbc.writeMem(0xd81d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc3af);
        EXPECT(gbc.pc(), 0xd81f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd81d), 0xcb);
        EXPECT(gbc.readMem(0xd81e), 0x41);
        // CB 41 0048
        gbc.setState(0x4ffa, 0x245d, 0xd2d0, 0x1557, 0xb85c, 0xf703, 0x0, 0x1);
        gbc.writeMem(0x4ffa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x245d);
        EXPECT(gbc.pc(), 0x4ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0049
        gbc.setState(0x7444, 0x369f, 0xdf30, 0x1871, 0x4e6c, 0x58cd, 0x0, 0x0);
        gbc.writeMem(0x7444, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x369f);
        EXPECT(gbc.pc(), 0x7446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 004A
        gbc.setState(0x801d, 0x6104, 0x2f30, 0xeafd, 0xf71b, 0x7dfc, 0x1, 0x1);
        gbc.writeMem(0x801d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6104);
        EXPECT(gbc.pc(), 0x801f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801d), 0xcb);
        EXPECT(gbc.readMem(0x801e), 0x41);
        // CB 41 004B
        gbc.setState(0xd790, 0xdddc, 0x1b30, 0x6040, 0x8998, 0xfb36, 0x1, 0x0);
        gbc.writeMem(0xd790, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xdddc);
        EXPECT(gbc.pc(), 0xd792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd790), 0xcb);
        EXPECT(gbc.readMem(0xd791), 0x41);
        // CB 41 004C
        gbc.setState(0x6db5, 0xe072, 0x2a90, 0x28ed, 0x68c7, 0xdece, 0x0, 0x1);
        gbc.writeMem(0x6db5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe072);
        EXPECT(gbc.pc(), 0x6db7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 004D
        gbc.setState(0x88bd, 0x1d43, 0x3a20, 0x80e, 0xd6e1, 0xc49e, 0x0, 0x0);
        gbc.writeMem(0x88bd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1d43);
        EXPECT(gbc.pc(), 0x88bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bd), 0xcb);
        EXPECT(gbc.readMem(0x88be), 0x41);
        // CB 41 004E
        gbc.setState(0xb5a6, 0xd426, 0xe1e0, 0xffe9, 0xc394, 0xbdf4, 0x0, 0x0);
        gbc.writeMem(0xb5a6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd426);
        EXPECT(gbc.pc(), 0xb5a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a6), 0xcb);
        EXPECT(gbc.readMem(0xb5a7), 0x41);
        // CB 41 004F
        gbc.setState(0x837d, 0x54ca, 0x3d50, 0x7447, 0xa28, 0xc6df, 0x0, 0x0);
        gbc.writeMem(0x837d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x54ca);
        EXPECT(gbc.pc(), 0x837f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x837d), 0xcb);
        EXPECT(gbc.readMem(0x837e), 0x41);
        // CB 41 0051
        gbc.setState(0xc619, 0xc0d1, 0x55b0, 0xb7b4, 0xc0fc, 0x3151, 0x1, 0x1);
        gbc.writeMem(0xc619, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc0d1);
        EXPECT(gbc.pc(), 0xc61b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc619), 0xcb);
        EXPECT(gbc.readMem(0xc61a), 0x41);
        // CB 41 0052
        gbc.setState(0xb996, 0xd75c, 0x7580, 0x1517, 0x5001, 0x689b, 0x0, 0x0);
        gbc.writeMem(0xb996, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd75c);
        EXPECT(gbc.pc(), 0xb998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb996), 0xcb);
        EXPECT(gbc.readMem(0xb997), 0x41);
        // CB 41 0053
        gbc.setState(0x74b1, 0x8514, 0x6f90, 0xd244, 0xc034, 0x4a53, 0x0, 0x1);
        gbc.writeMem(0x74b1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8514);
        EXPECT(gbc.pc(), 0x74b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0054
        gbc.setState(0x24b1, 0x5f1a, 0xa8d0, 0xb589, 0x6b61, 0xdba3, 0x0, 0x0);
        gbc.writeMem(0x24b1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5f1a);
        EXPECT(gbc.pc(), 0x24b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0055
        gbc.setState(0x8ae5, 0x28a4, 0x5e0, 0x7264, 0x6822, 0x298, 0x1, 0x0);
        gbc.writeMem(0x8ae5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x28a4);
        EXPECT(gbc.pc(), 0x8ae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae5), 0xcb);
        EXPECT(gbc.readMem(0x8ae6), 0x41);
        // CB 41 0056
        gbc.setState(0x9e4b, 0x828a, 0xb8f0, 0xf8ca, 0xc6f, 0x3005, 0x0, 0x1);
        gbc.writeMem(0x9e4b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x828a);
        EXPECT(gbc.pc(), 0x9e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e4b), 0xcb);
        EXPECT(gbc.readMem(0x9e4c), 0x41);
        // CB 41 0058
        gbc.setState(0x152a, 0xcd43, 0x79c0, 0x8e0a, 0x7016, 0x508, 0x1, 0x1);
        gbc.writeMem(0x152a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xcd43);
        EXPECT(gbc.pc(), 0x152c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0059
        gbc.setState(0x1016, 0xd49, 0x9ae0, 0x6905, 0x3803, 0x139f, 0x1, 0x1);
        gbc.writeMem(0x1016, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd49);
        EXPECT(gbc.pc(), 0x1018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 005A
        gbc.setState(0x922c, 0xe44f, 0xfe10, 0x7e6, 0x46c, 0x89d3, 0x1, 0x1);
        gbc.writeMem(0x922c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe44f);
        EXPECT(gbc.pc(), 0x922e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922c), 0xcb);
        EXPECT(gbc.readMem(0x922d), 0x41);
        // CB 41 005B
        gbc.setState(0x25bc, 0xafaa, 0xb300, 0x4a, 0xc864, 0x8915, 0x1, 0x0);
        gbc.writeMem(0x25bc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xafaa);
        EXPECT(gbc.pc(), 0x25be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 005C
        gbc.setState(0x4a25, 0x68df, 0x53a0, 0x96f6, 0xfc88, 0x648c, 0x0, 0x0);
        gbc.writeMem(0x4a25, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x68df);
        EXPECT(gbc.pc(), 0x4a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 005D
        gbc.setState(0x2218, 0x796b, 0x36e0, 0xfca4, 0x1a18, 0x72d1, 0x1, 0x1);
        gbc.writeMem(0x2218, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x796b);
        EXPECT(gbc.pc(), 0x221a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 005E
        gbc.setState(0xd51, 0x37bb, 0x8950, 0x6322, 0xd5b5, 0xbebc, 0x0, 0x1);
        gbc.writeMem(0xd51, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x37bb);
        EXPECT(gbc.pc(), 0xd53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 005F
        gbc.setState(0x6540, 0x4a61, 0xef0, 0xe8b4, 0x5850, 0xfdc2, 0x1, 0x1);
        gbc.writeMem(0x6540, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4a61);
        EXPECT(gbc.pc(), 0x6542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0060
        gbc.setState(0xa2d5, 0x970b, 0x8a20, 0x814d, 0x9e73, 0x5990, 0x1, 0x0);
        gbc.writeMem(0xa2d5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x970b);
        EXPECT(gbc.pc(), 0xa2d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d5), 0xcb);
        EXPECT(gbc.readMem(0xa2d6), 0x41);
        // CB 41 0061
        gbc.setState(0x945b, 0x698f, 0xa2c0, 0x61c9, 0x4be5, 0xf68, 0x0, 0x0);
        gbc.writeMem(0x945b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x698f);
        EXPECT(gbc.pc(), 0x945d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945b), 0xcb);
        EXPECT(gbc.readMem(0x945c), 0x41);
        // CB 41 0062
        gbc.setState(0xe706, 0xe2ae, 0x19f0, 0xc102, 0xc0a4, 0xb299, 0x1, 0x0);
        gbc.writeMem(0xe706, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe2ae);
        EXPECT(gbc.pc(), 0xe708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe706), 0xcb);
        EXPECT(gbc.readMem(0xe707), 0x41);
        // CB 41 0063
        gbc.setState(0xa61f, 0x6b7c, 0x24f0, 0x48dc, 0x2391, 0xea62, 0x1, 0x0);
        gbc.writeMem(0xa61f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6b7c);
        EXPECT(gbc.pc(), 0xa621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa61f), 0xcb);
        EXPECT(gbc.readMem(0xa620), 0x41);
        // CB 41 0064
        gbc.setState(0x7aa8, 0x1156, 0x93d0, 0xd2d0, 0x8579, 0x6fe4, 0x1, 0x1);
        gbc.writeMem(0x7aa8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1156);
        EXPECT(gbc.pc(), 0x7aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0065
        gbc.setState(0x32ac, 0x7467, 0x9b00, 0xb17f, 0xf5b0, 0xd3fc, 0x1, 0x1);
        gbc.writeMem(0x32ac, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7467);
        EXPECT(gbc.pc(), 0x32ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0066
        gbc.setState(0xe101, 0x8591, 0xcf60, 0x3c5f, 0x4fb8, 0xcd24, 0x1, 0x1);
        gbc.writeMem(0xe101, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8591);
        EXPECT(gbc.pc(), 0xe103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe101), 0xcb);
        EXPECT(gbc.readMem(0xe102), 0x41);
        // CB 41 0067
        gbc.setState(0x1dc6, 0x3610, 0xa370, 0x53be, 0x6b47, 0xa668, 0x1, 0x1);
        gbc.writeMem(0x1dc6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3610);
        EXPECT(gbc.pc(), 0x1dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0068
        gbc.setState(0xa7f6, 0x997, 0x9e60, 0xe3e3, 0x4f96, 0xa084, 0x0, 0x0);
        gbc.writeMem(0xa7f6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x997);
        EXPECT(gbc.pc(), 0xa7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f6), 0xcb);
        EXPECT(gbc.readMem(0xa7f7), 0x41);
        // CB 41 0069
        gbc.setState(0x8ddd, 0x3912, 0xaed0, 0x3489, 0xe69b, 0x9cf2, 0x1, 0x0);
        gbc.writeMem(0x8ddd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3912);
        EXPECT(gbc.pc(), 0x8ddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ddd), 0xcb);
        EXPECT(gbc.readMem(0x8dde), 0x41);
        // CB 41 006A
        gbc.setState(0xe437, 0xeab8, 0x5440, 0x5730, 0xba67, 0x5ada, 0x0, 0x1);
        gbc.writeMem(0xe437, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xeab8);
        EXPECT(gbc.pc(), 0xe439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe437), 0xcb);
        EXPECT(gbc.readMem(0xe438), 0x41);
        // CB 41 006B
        gbc.setState(0x267d, 0xc50e, 0x73f0, 0xf3a3, 0x90cf, 0x2123, 0x1, 0x0);
        gbc.writeMem(0x267d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc50e);
        EXPECT(gbc.pc(), 0x267f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 006C
        gbc.setState(0xa78d, 0xbf15, 0xbd50, 0x7a82, 0xfeed, 0xc31a, 0x0, 0x0);
        gbc.writeMem(0xa78d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbf15);
        EXPECT(gbc.pc(), 0xa78f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78d), 0xcb);
        EXPECT(gbc.readMem(0xa78e), 0x41);
        // CB 41 006D
        gbc.setState(0x8841, 0xc47b, 0x40e0, 0xa5f1, 0xbfcc, 0x560, 0x1, 0x0);
        gbc.writeMem(0x8841, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc47b);
        EXPECT(gbc.pc(), 0x8843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8841), 0xcb);
        EXPECT(gbc.readMem(0x8842), 0x41);
        // CB 41 006E
        gbc.setState(0xa9cf, 0x6526, 0x8640, 0x1b94, 0x5b46, 0xc588, 0x1, 0x0);
        gbc.writeMem(0xa9cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6526);
        EXPECT(gbc.pc(), 0xa9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9cf), 0xcb);
        EXPECT(gbc.readMem(0xa9d0), 0x41);
        // CB 41 006F
        gbc.setState(0xe7e3, 0xccd1, 0x8270, 0x69ba, 0x5f24, 0x76f7, 0x1, 0x0);
        gbc.writeMem(0xe7e3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xccd1);
        EXPECT(gbc.pc(), 0xe7e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7e3), 0xcb);
        EXPECT(gbc.readMem(0xe7e4), 0x41);
        // CB 41 0070
        gbc.setState(0x6508, 0x33ae, 0x6610, 0x3cf7, 0x7a2a, 0x81ec, 0x0, 0x1);
        gbc.writeMem(0x6508, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x33ae);
        EXPECT(gbc.pc(), 0x650a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0071
        gbc.setState(0x3f5b, 0x4f0f, 0x95b0, 0x88e3, 0xe6ae, 0xf16f, 0x1, 0x1);
        gbc.writeMem(0x3f5b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4f0f);
        EXPECT(gbc.pc(), 0x3f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0072
        gbc.setState(0x5b64, 0xb77e, 0x1eb0, 0x35e7, 0x421a, 0x3f9e, 0x0, 0x1);
        gbc.writeMem(0x5b64, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb77e);
        EXPECT(gbc.pc(), 0x5b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0075
        gbc.setState(0x3ab1, 0x7c7b, 0xc570, 0xe20e, 0xced5, 0x12ee, 0x1, 0x1);
        gbc.writeMem(0x3ab1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7c7b);
        EXPECT(gbc.pc(), 0x3ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0076
        gbc.setState(0xce29, 0x7e80, 0x55c0, 0x6e48, 0xaee, 0x2948, 0x0, 0x0);
        gbc.writeMem(0xce29, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7e80);
        EXPECT(gbc.pc(), 0xce2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce29), 0xcb);
        EXPECT(gbc.readMem(0xce2a), 0x41);
        // CB 41 0077
        gbc.setState(0x4c09, 0x1e36, 0x2120, 0x7df0, 0xa824, 0x2315, 0x1, 0x0);
        gbc.writeMem(0x4c09, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1e36);
        EXPECT(gbc.pc(), 0x4c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0078
        gbc.setState(0x884e, 0xf3de, 0xe1f0, 0xf96d, 0x3550, 0xb9cc, 0x0, 0x1);
        gbc.writeMem(0x884e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf3de);
        EXPECT(gbc.pc(), 0x8850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884e), 0xcb);
        EXPECT(gbc.readMem(0x884f), 0x41);
        // CB 41 0079
        gbc.setState(0x7ff0, 0x916d, 0xf0a0, 0xe4cc, 0x2422, 0xd875, 0x0, 0x1);
        gbc.writeMem(0x7ff0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x916d);
        EXPECT(gbc.pc(), 0x7ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 007A
        gbc.setState(0x4a7d, 0xaf24, 0x8830, 0xf0b, 0x2331, 0xbd00, 0x0, 0x1);
        gbc.writeMem(0x4a7d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xaf24);
        EXPECT(gbc.pc(), 0x4a7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 007B
        gbc.setState(0x9ebd, 0x744a, 0x8810, 0xa11e, 0xc88d, 0x27c7, 0x0, 0x1);
        gbc.writeMem(0x9ebd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x744a);
        EXPECT(gbc.pc(), 0x9ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ebd), 0xcb);
        EXPECT(gbc.readMem(0x9ebe), 0x41);
        // CB 41 007C
        gbc.setState(0xb4c5, 0x93f9, 0x14f0, 0xeee8, 0x1f88, 0xf002, 0x0, 0x1);
        gbc.writeMem(0xb4c5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x93f9);
        EXPECT(gbc.pc(), 0xb4c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c5), 0xcb);
        EXPECT(gbc.readMem(0xb4c6), 0x41);
        // CB 41 007D
        gbc.setState(0xe2bf, 0xac4f, 0xca90, 0x649b, 0x98e8, 0xe100, 0x1, 0x1);
        gbc.writeMem(0xe2bf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xac4f);
        EXPECT(gbc.pc(), 0xe2c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2bf), 0xcb);
        EXPECT(gbc.readMem(0xe2c0), 0x41);
        // CB 41 007E
        gbc.setState(0xab2b, 0x4d38, 0x8e50, 0x1a12, 0xfac3, 0xad07, 0x1, 0x0);
        gbc.writeMem(0xab2b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4d38);
        EXPECT(gbc.pc(), 0xab2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab2b), 0xcb);
        EXPECT(gbc.readMem(0xab2c), 0x41);
        // CB 41 007F
        gbc.setState(0x5af6, 0x118c, 0x5580, 0xc91d, 0x9dfe, 0xd3f7, 0x0, 0x1);
        gbc.writeMem(0x5af6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x118c);
        EXPECT(gbc.pc(), 0x5af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0080
        gbc.setState(0x2a38, 0xabe5, 0x3250, 0x8f37, 0xe591, 0xa24, 0x0, 0x0);
        gbc.writeMem(0x2a38, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xabe5);
        EXPECT(gbc.pc(), 0x2a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0081
        gbc.setState(0x9db2, 0x64b4, 0xc5c0, 0x201b, 0x6e01, 0xd98b, 0x1, 0x0);
        gbc.writeMem(0x9db2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x64b4);
        EXPECT(gbc.pc(), 0x9db4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db2), 0xcb);
        EXPECT(gbc.readMem(0x9db3), 0x41);
        // CB 41 0082
        gbc.setState(0x4d96, 0xfd3d, 0xfe00, 0x3dbc, 0x9645, 0x237d, 0x0, 0x1);
        gbc.writeMem(0x4d96, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfd3d);
        EXPECT(gbc.pc(), 0x4d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0083
        gbc.setState(0x996f, 0x39f2, 0xf000, 0x52e8, 0x5c90, 0x8199, 0x1, 0x0);
        gbc.writeMem(0x996f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x39f2);
        EXPECT(gbc.pc(), 0x9971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996f), 0xcb);
        EXPECT(gbc.readMem(0x9970), 0x41);
        // CB 41 0084
        gbc.setState(0x2eae, 0x53b7, 0xce0, 0x3276, 0x310d, 0x90a2, 0x1, 0x1);
        gbc.writeMem(0x2eae, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x53b7);
        EXPECT(gbc.pc(), 0x2eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0085
        gbc.setState(0x6a6a, 0x5867, 0x6fb0, 0xf0ae, 0xa01f, 0xe260, 0x1, 0x0);
        gbc.writeMem(0x6a6a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5867);
        EXPECT(gbc.pc(), 0x6a6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0086
        gbc.setState(0x92c1, 0xec6d, 0x6e70, 0x7e74, 0xf9b0, 0x5ec7, 0x1, 0x0);
        gbc.writeMem(0x92c1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xec6d);
        EXPECT(gbc.pc(), 0x92c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c1), 0xcb);
        EXPECT(gbc.readMem(0x92c2), 0x41);
        // CB 41 0088
        gbc.setState(0x3d67, 0x5383, 0x3eb0, 0x19ec, 0xac21, 0x5e17, 0x0, 0x1);
        gbc.writeMem(0x3d67, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5383);
        EXPECT(gbc.pc(), 0x3d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0089
        gbc.setState(0x43a3, 0xe5b9, 0x4160, 0xa330, 0x612, 0x1cc8, 0x1, 0x1);
        gbc.writeMem(0x43a3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe5b9);
        EXPECT(gbc.pc(), 0x43a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 008A
        gbc.setState(0x3687, 0x3d80, 0x80f0, 0x5cfb, 0x4a5c, 0x493c, 0x0, 0x0);
        gbc.writeMem(0x3687, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3d80);
        EXPECT(gbc.pc(), 0x3689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 008B
        gbc.setState(0xb94f, 0x73d2, 0x1d90, 0xf842, 0xe362, 0x65d2, 0x1, 0x1);
        gbc.writeMem(0xb94f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x73d2);
        EXPECT(gbc.pc(), 0xb951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb94f), 0xcb);
        EXPECT(gbc.readMem(0xb950), 0x41);
        // CB 41 008C
        gbc.setState(0x221a, 0x2d11, 0x9030, 0xce6, 0x7d4a, 0x1230, 0x0, 0x0);
        gbc.writeMem(0x221a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2d11);
        EXPECT(gbc.pc(), 0x221c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 008D
        gbc.setState(0x4af5, 0x3a6e, 0x7fe0, 0x8a1e, 0x6c46, 0x3cff, 0x1, 0x1);
        gbc.writeMem(0x4af5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3a6e);
        EXPECT(gbc.pc(), 0x4af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 008E
        gbc.setState(0x2c36, 0x133, 0xed60, 0xb3fb, 0x2300, 0x261c, 0x1, 0x0);
        gbc.writeMem(0x2c36, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x133);
        EXPECT(gbc.pc(), 0x2c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 008F
        gbc.setState(0xdc78, 0x1c5f, 0xa3f0, 0xf17e, 0x42da, 0x3998, 0x1, 0x1);
        gbc.writeMem(0xdc78, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1c5f);
        EXPECT(gbc.pc(), 0xdc7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc78), 0xcb);
        EXPECT(gbc.readMem(0xdc79), 0x41);
        // CB 41 0090
        gbc.setState(0xa529, 0xed03, 0xfb30, 0xfbec, 0x41d7, 0x4a90, 0x0, 0x1);
        gbc.writeMem(0xa529, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xed03);
        EXPECT(gbc.pc(), 0xa52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa529), 0xcb);
        EXPECT(gbc.readMem(0xa52a), 0x41);
        // CB 41 0091
        gbc.setState(0xe584, 0xae43, 0xe8f0, 0x5fe, 0xd9c1, 0x5bf8, 0x0, 0x0);
        gbc.writeMem(0xe584, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xae43);
        EXPECT(gbc.pc(), 0xe586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe584), 0xcb);
        EXPECT(gbc.readMem(0xe585), 0x41);
        // CB 41 0092
        gbc.setState(0xbd95, 0x7b3f, 0x8fc0, 0x45cd, 0xcd59, 0x1391, 0x0, 0x1);
        gbc.writeMem(0xbd95, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7b3f);
        EXPECT(gbc.pc(), 0xbd97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd95), 0xcb);
        EXPECT(gbc.readMem(0xbd96), 0x41);
        // CB 41 0093
        gbc.setState(0xc3dd, 0xd44d, 0x2910, 0xc075, 0xf6e2, 0x99f9, 0x1, 0x0);
        gbc.writeMem(0xc3dd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd44d);
        EXPECT(gbc.pc(), 0xc3df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3dd), 0xcb);
        EXPECT(gbc.readMem(0xc3de), 0x41);
        // CB 41 0094
        gbc.setState(0xfb9, 0xb954, 0x2560, 0x7724, 0xffa6, 0x9643, 0x0, 0x0);
        gbc.writeMem(0xfb9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb954);
        EXPECT(gbc.pc(), 0xfbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0095
        gbc.setState(0xa99f, 0xd5b8, 0x88d0, 0x11ee, 0x648, 0x3232, 0x0, 0x1);
        gbc.writeMem(0xa99f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd5b8);
        EXPECT(gbc.pc(), 0xa9a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa99f), 0xcb);
        EXPECT(gbc.readMem(0xa9a0), 0x41);
        // CB 41 0096
        gbc.setState(0x5695, 0x4046, 0xc860, 0x4883, 0xccea, 0x2220, 0x1, 0x1);
        gbc.writeMem(0x5695, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4046);
        EXPECT(gbc.pc(), 0x5697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0097
        gbc.setState(0x2afa, 0xe114, 0xc8d0, 0xee27, 0xb04f, 0x86, 0x0, 0x1);
        gbc.writeMem(0x2afa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe114);
        EXPECT(gbc.pc(), 0x2afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0098
        gbc.setState(0x3a47, 0xaef5, 0x78f0, 0x5ff, 0x32b3, 0x3216, 0x1, 0x1);
        gbc.writeMem(0x3a47, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xaef5);
        EXPECT(gbc.pc(), 0x3a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0099
        gbc.setState(0xcf2, 0xfcb0, 0x4d40, 0xab67, 0x9, 0x30a6, 0x1, 0x1);
        gbc.writeMem(0xcf2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfcb0);
        EXPECT(gbc.pc(), 0xcf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 009A
        gbc.setState(0x1bc7, 0xc0f, 0xda70, 0x797d, 0xc54f, 0x7216, 0x1, 0x0);
        gbc.writeMem(0x1bc7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc0f);
        EXPECT(gbc.pc(), 0x1bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 009C
        gbc.setState(0x2c91, 0x7618, 0x4610, 0x98c1, 0xb8b2, 0x9822, 0x1, 0x0);
        gbc.writeMem(0x2c91, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7618);
        EXPECT(gbc.pc(), 0x2c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 009D
        gbc.setState(0x5d56, 0x9263, 0xc970, 0xa52b, 0xdc99, 0xe43d, 0x1, 0x0);
        gbc.writeMem(0x5d56, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9263);
        EXPECT(gbc.pc(), 0x5d58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 009E
        gbc.setState(0xc84c, 0x4574, 0xe190, 0x26fd, 0xccb1, 0xdc6b, 0x1, 0x0);
        gbc.writeMem(0xc84c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4574);
        EXPECT(gbc.pc(), 0xc84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc84c), 0xcb);
        EXPECT(gbc.readMem(0xc84d), 0x41);
        // CB 41 009F
        gbc.setState(0x23cf, 0xf827, 0x1710, 0xa920, 0x8711, 0xac2c, 0x1, 0x1);
        gbc.writeMem(0x23cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf827);
        EXPECT(gbc.pc(), 0x23d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00A0
        gbc.setState(0x561f, 0x4af2, 0x1f30, 0x529e, 0x72f9, 0x4207, 0x1, 0x0);
        gbc.writeMem(0x561f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4af2);
        EXPECT(gbc.pc(), 0x5621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00A1
        gbc.setState(0x4582, 0xec4f, 0xef30, 0x2f15, 0xfdea, 0x586a, 0x0, 0x1);
        gbc.writeMem(0x4582, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xec4f);
        EXPECT(gbc.pc(), 0x4584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00A2
        gbc.setState(0x6004, 0x81d, 0xd180, 0x352d, 0x51d, 0x15cb, 0x0, 0x0);
        gbc.writeMem(0x6004, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x81d);
        EXPECT(gbc.pc(), 0x6006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00A3
        gbc.setState(0x60c2, 0xf9dc, 0x1b80, 0xff67, 0x32fd, 0x1c5, 0x1, 0x1);
        gbc.writeMem(0x60c2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf9dc);
        EXPECT(gbc.pc(), 0x60c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00A4
        gbc.setState(0xe458, 0x22be, 0x8e80, 0xdf6e, 0x75d4, 0xdd8, 0x1, 0x0);
        gbc.writeMem(0xe458, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x22be);
        EXPECT(gbc.pc(), 0xe45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe458), 0xcb);
        EXPECT(gbc.readMem(0xe459), 0x41);
        // CB 41 00A5
        gbc.setState(0x89a9, 0xeb80, 0x1060, 0xdcd1, 0xffc4, 0xfd48, 0x0, 0x1);
        gbc.writeMem(0x89a9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xeb80);
        EXPECT(gbc.pc(), 0x89ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a9), 0xcb);
        EXPECT(gbc.readMem(0x89aa), 0x41);
        // CB 41 00A6
        gbc.setState(0x34fc, 0x42fd, 0xfd60, 0xe821, 0x67fa, 0xf01e, 0x1, 0x0);
        gbc.writeMem(0x34fc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x42fd);
        EXPECT(gbc.pc(), 0x34fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00A7
        gbc.setState(0x5321, 0x15ac, 0x7ac0, 0x77c1, 0x417d, 0x4a1, 0x0, 0x0);
        gbc.writeMem(0x5321, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x15ac);
        EXPECT(gbc.pc(), 0x5323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00A8
        gbc.setState(0xc86c, 0x6c33, 0xf5a0, 0x478c, 0xc977, 0x9887, 0x1, 0x0);
        gbc.writeMem(0xc86c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6c33);
        EXPECT(gbc.pc(), 0xc86e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc86c), 0xcb);
        EXPECT(gbc.readMem(0xc86d), 0x41);
        // CB 41 00A9
        gbc.setState(0x8567, 0xa4b3, 0x55b0, 0xc1ac, 0x5cd7, 0xc63, 0x1, 0x1);
        gbc.writeMem(0x8567, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa4b3);
        EXPECT(gbc.pc(), 0x8569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8567), 0xcb);
        EXPECT(gbc.readMem(0x8568), 0x41);
        // CB 41 00AA
        gbc.setState(0x3106, 0x80fc, 0x5f80, 0x3f7a, 0xfffd, 0x813d, 0x0, 0x1);
        gbc.writeMem(0x3106, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x80fc);
        EXPECT(gbc.pc(), 0x3108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00AB
        gbc.setState(0x18e8, 0x857f, 0x10, 0x6d0f, 0xc1c, 0x7f9d, 0x1, 0x0);
        gbc.writeMem(0x18e8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x857f);
        EXPECT(gbc.pc(), 0x18ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00AC
        gbc.setState(0x4b32, 0xc748, 0xc490, 0x529b, 0x9f5c, 0xeff1, 0x1, 0x1);
        gbc.writeMem(0x4b32, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc748);
        EXPECT(gbc.pc(), 0x4b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00AD
        gbc.setState(0xb502, 0x67c, 0x9370, 0x339d, 0x586f, 0x3dae, 0x1, 0x0);
        gbc.writeMem(0xb502, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x67c);
        EXPECT(gbc.pc(), 0xb504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb502), 0xcb);
        EXPECT(gbc.readMem(0xb503), 0x41);
        // CB 41 00AE
        gbc.setState(0xad15, 0x1d54, 0x60e0, 0x82af, 0x40d, 0x3dce, 0x1, 0x1);
        gbc.writeMem(0xad15, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1d54);
        EXPECT(gbc.pc(), 0xad17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad15), 0xcb);
        EXPECT(gbc.readMem(0xad16), 0x41);
        // CB 41 00AF
        gbc.setState(0x6fed, 0x3833, 0x7b40, 0x8585, 0x63b1, 0x6d97, 0x0, 0x1);
        gbc.writeMem(0x6fed, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3833);
        EXPECT(gbc.pc(), 0x6fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00B1
        gbc.setState(0x3e36, 0x85d9, 0x9200, 0xe9a1, 0xab1f, 0xf06c, 0x0, 0x0);
        gbc.writeMem(0x3e36, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x85d9);
        EXPECT(gbc.pc(), 0x3e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00B2
        gbc.setState(0x2665, 0x66bb, 0x1bb0, 0x6fd7, 0xcffc, 0xd467, 0x1, 0x1);
        gbc.writeMem(0x2665, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x66bb);
        EXPECT(gbc.pc(), 0x2667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00B3
        gbc.setState(0x5ecc, 0x8cd1, 0x76d0, 0xf82, 0xd4cf, 0x5aa6, 0x0, 0x1);
        gbc.writeMem(0x5ecc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8cd1);
        EXPECT(gbc.pc(), 0x5ece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00B4
        gbc.setState(0x974c, 0x7916, 0x4de0, 0xcb16, 0x9daa, 0x2cfe, 0x0, 0x0);
        gbc.writeMem(0x974c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7916);
        EXPECT(gbc.pc(), 0x974e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x974c), 0xcb);
        EXPECT(gbc.readMem(0x974d), 0x41);
        // CB 41 00B5
        gbc.setState(0x8d29, 0xb14f, 0xd8f0, 0x12b6, 0x2daf, 0x5dba, 0x0, 0x1);
        gbc.writeMem(0x8d29, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb14f);
        EXPECT(gbc.pc(), 0x8d2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d29), 0xcb);
        EXPECT(gbc.readMem(0x8d2a), 0x41);
        // CB 41 00B6
        gbc.setState(0xa09c, 0xfeda, 0xf850, 0xb74a, 0x3b2, 0x714, 0x1, 0x1);
        gbc.writeMem(0xa09c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfeda);
        EXPECT(gbc.pc(), 0xa09e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa09c), 0xcb);
        EXPECT(gbc.readMem(0xa09d), 0x41);
        // CB 41 00B7
        gbc.setState(0x32b7, 0xf104, 0x5690, 0xf61e, 0x56a7, 0xcf06, 0x0, 0x0);
        gbc.writeMem(0x32b7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf104);
        EXPECT(gbc.pc(), 0x32b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00B8
        gbc.setState(0x14e5, 0xa4d8, 0xcc60, 0xb612, 0x9d40, 0x2c49, 0x1, 0x0);
        gbc.writeMem(0x14e5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa4d8);
        EXPECT(gbc.pc(), 0x14e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00BA
        gbc.setState(0x3254, 0x79b, 0x9990, 0xfd4e, 0x5087, 0x4370, 0x0, 0x0);
        gbc.writeMem(0x3254, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x79b);
        EXPECT(gbc.pc(), 0x3256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00BB
        gbc.setState(0x507b, 0x2bb9, 0xd850, 0xf70f, 0x5fa5, 0x693, 0x1, 0x0);
        gbc.writeMem(0x507b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2bb9);
        EXPECT(gbc.pc(), 0x507d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00BC
        gbc.setState(0x9bf6, 0xd40, 0x5ce0, 0xd8e9, 0x1ec5, 0x18be, 0x1, 0x1);
        gbc.writeMem(0x9bf6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd40);
        EXPECT(gbc.pc(), 0x9bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf6), 0xcb);
        EXPECT(gbc.readMem(0x9bf7), 0x41);
        // CB 41 00BE
        gbc.setState(0x4d5a, 0xc54f, 0x6590, 0xee17, 0xd089, 0x772d, 0x0, 0x0);
        gbc.writeMem(0x4d5a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc54f);
        EXPECT(gbc.pc(), 0x4d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00BF
        gbc.setState(0x5f98, 0xc436, 0xe8b0, 0x8fdc, 0xe332, 0x8da, 0x1, 0x1);
        gbc.writeMem(0x5f98, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc436);
        EXPECT(gbc.pc(), 0x5f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00C0
        gbc.setState(0xd188, 0xad47, 0x1e40, 0xc955, 0xd4c3, 0x3aff, 0x0, 0x0);
        gbc.writeMem(0xd188, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xad47);
        EXPECT(gbc.pc(), 0xd18a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd188), 0xcb);
        EXPECT(gbc.readMem(0xd189), 0x41);
        // CB 41 00C1
        gbc.setState(0xd340, 0xcf32, 0x2cd0, 0xc00c, 0xa3a6, 0x7b84, 0x0, 0x0);
        gbc.writeMem(0xd340, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xcf32);
        EXPECT(gbc.pc(), 0xd342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd340), 0xcb);
        EXPECT(gbc.readMem(0xd341), 0x41);
        // CB 41 00C2
        gbc.setState(0x68bd, 0xbaa9, 0x88e0, 0xd8f1, 0x60ac, 0x3e37, 0x0, 0x0);
        gbc.writeMem(0x68bd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbaa9);
        EXPECT(gbc.pc(), 0x68bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00C3
        gbc.setState(0x43c, 0x2506, 0x18b0, 0xd406, 0xefb0, 0xb01e, 0x1, 0x1);
        gbc.writeMem(0x43c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2506);
        EXPECT(gbc.pc(), 0x43e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00C4
        gbc.setState(0x5422, 0x2, 0xe560, 0xdf0a, 0x5a98, 0x2de2, 0x1, 0x0);
        gbc.writeMem(0x5422, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2);
        EXPECT(gbc.pc(), 0x5424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00C5
        gbc.setState(0xbb78, 0x1f29, 0xa590, 0x17bf, 0x5fd2, 0x20c1, 0x1, 0x0);
        gbc.writeMem(0xbb78, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1f29);
        EXPECT(gbc.pc(), 0xbb7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb78), 0xcb);
        EXPECT(gbc.readMem(0xbb79), 0x41);
        // CB 41 00C6
        gbc.setState(0x9acc, 0xf1c2, 0x8bc0, 0x35de, 0x6653, 0xc010, 0x0, 0x0);
        gbc.writeMem(0x9acc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf1c2);
        EXPECT(gbc.pc(), 0x9ace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9acc), 0xcb);
        EXPECT(gbc.readMem(0x9acd), 0x41);
        // CB 41 00C7
        gbc.setState(0xd207, 0xad98, 0x2c0, 0x701d, 0xacc9, 0xd6a7, 0x0, 0x0);
        gbc.writeMem(0xd207, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xad98);
        EXPECT(gbc.pc(), 0xd209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd207), 0xcb);
        EXPECT(gbc.readMem(0xd208), 0x41);
        // CB 41 00C8
        gbc.setState(0x8b0f, 0xc75e, 0x1020, 0xcd16, 0x8ec5, 0xc837, 0x0, 0x1);
        gbc.writeMem(0x8b0f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc75e);
        EXPECT(gbc.pc(), 0x8b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b0f), 0xcb);
        EXPECT(gbc.readMem(0x8b10), 0x41);
        // CB 41 00C9
        gbc.setState(0x8949, 0x27, 0x800, 0x9f92, 0x81ba, 0x5a31, 0x1, 0x0);
        gbc.writeMem(0x8949, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x27);
        EXPECT(gbc.pc(), 0x894b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8949), 0xcb);
        EXPECT(gbc.readMem(0x894a), 0x41);
        // CB 41 00CA
        gbc.setState(0xd3c0, 0x382d, 0xd2d0, 0x1f6a, 0x6542, 0x1e87, 0x1, 0x0);
        gbc.writeMem(0xd3c0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x382d);
        EXPECT(gbc.pc(), 0xd3c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c0), 0xcb);
        EXPECT(gbc.readMem(0xd3c1), 0x41);
        // CB 41 00CB
        gbc.setState(0x5321, 0x158b, 0x9ff0, 0x8f45, 0xd6a4, 0x1632, 0x1, 0x0);
        gbc.writeMem(0x5321, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x158b);
        EXPECT(gbc.pc(), 0x5323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00CC
        gbc.setState(0x4dee, 0x37be, 0xcdd0, 0x18b2, 0x9b53, 0xf57a, 0x1, 0x1);
        gbc.writeMem(0x4dee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x37be);
        EXPECT(gbc.pc(), 0x4df0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00CD
        gbc.setState(0x17e9, 0xa4cc, 0x4dc0, 0x9083, 0xb217, 0xda6, 0x0, 0x0);
        gbc.writeMem(0x17e9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa4cc);
        EXPECT(gbc.pc(), 0x17eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00CE
        gbc.setState(0x49ef, 0x2b89, 0x2f70, 0x8708, 0x9ad, 0xf18f, 0x0, 0x1);
        gbc.writeMem(0x49ef, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2b89);
        EXPECT(gbc.pc(), 0x49f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00CF
        gbc.setState(0x3ef5, 0x972a, 0x5370, 0xf1be, 0x4e5b, 0xccb9, 0x1, 0x1);
        gbc.writeMem(0x3ef5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x972a);
        EXPECT(gbc.pc(), 0x3ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00D0
        gbc.setState(0xa966, 0xae8, 0x78b0, 0xf9fe, 0xc19d, 0xb507, 0x1, 0x0);
        gbc.writeMem(0xa966, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xae8);
        EXPECT(gbc.pc(), 0xa968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa966), 0xcb);
        EXPECT(gbc.readMem(0xa967), 0x41);
        // CB 41 00D1
        gbc.setState(0x1749, 0x8921, 0xb9d0, 0xd2d1, 0x4cd6, 0x42be, 0x0, 0x0);
        gbc.writeMem(0x1749, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8921);
        EXPECT(gbc.pc(), 0x174b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00D2
        gbc.setState(0x8cf3, 0x9ffe, 0x5150, 0xc18a, 0x21d4, 0x896d, 0x1, 0x1);
        gbc.writeMem(0x8cf3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9ffe);
        EXPECT(gbc.pc(), 0x8cf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf3), 0xcb);
        EXPECT(gbc.readMem(0x8cf4), 0x41);
        // CB 41 00D3
        gbc.setState(0x3777, 0x3b7a, 0x7d60, 0x9e9b, 0x8781, 0x3f51, 0x0, 0x1);
        gbc.writeMem(0x3777, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3b7a);
        EXPECT(gbc.pc(), 0x3779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00D4
        gbc.setState(0xc294, 0xa1ba, 0xacd0, 0x6877, 0x194d, 0xb8d, 0x1, 0x0);
        gbc.writeMem(0xc294, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa1ba);
        EXPECT(gbc.pc(), 0xc296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc294), 0xcb);
        EXPECT(gbc.readMem(0xc295), 0x41);
        // CB 41 00D5
        gbc.setState(0xbdb6, 0xe9b7, 0x2080, 0x2781, 0xdb71, 0x695e, 0x0, 0x0);
        gbc.writeMem(0xbdb6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe9b7);
        EXPECT(gbc.pc(), 0xbdb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb6), 0xcb);
        EXPECT(gbc.readMem(0xbdb7), 0x41);
        // CB 41 00D7
        gbc.setState(0x8c6, 0xb1bf, 0x4b50, 0xcb39, 0x4206, 0x3c0c, 0x1, 0x1);
        gbc.writeMem(0x8c6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb1bf);
        EXPECT(gbc.pc(), 0x8c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00D8
        gbc.setState(0x209, 0xd5f7, 0x6740, 0x5dce, 0x73a5, 0x69ef, 0x1, 0x0);
        gbc.writeMem(0x209, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd5f7);
        EXPECT(gbc.pc(), 0x20b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00D9
        gbc.setState(0xba6e, 0x3da7, 0xb0, 0xc194, 0x91ce, 0x8dc4, 0x1, 0x0);
        gbc.writeMem(0xba6e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3da7);
        EXPECT(gbc.pc(), 0xba70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba6e), 0xcb);
        EXPECT(gbc.readMem(0xba6f), 0x41);
        // CB 41 00DA
        gbc.setState(0xe323, 0x2e80, 0x9cd0, 0xcbea, 0xd32f, 0x511b, 0x0, 0x0);
        gbc.writeMem(0xe323, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2e80);
        EXPECT(gbc.pc(), 0xe325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe323), 0xcb);
        EXPECT(gbc.readMem(0xe324), 0x41);
        // CB 41 00DB
        gbc.setState(0xb2dd, 0x549c, 0x690, 0x7733, 0x8fde, 0x7fd9, 0x1, 0x0);
        gbc.writeMem(0xb2dd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x549c);
        EXPECT(gbc.pc(), 0xb2df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2dd), 0xcb);
        EXPECT(gbc.readMem(0xb2de), 0x41);
        // CB 41 00DC
        gbc.setState(0xb2e0, 0x8244, 0xd380, 0xb163, 0xa057, 0x2491, 0x0, 0x1);
        gbc.writeMem(0xb2e0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8244);
        EXPECT(gbc.pc(), 0xb2e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e0), 0xcb);
        EXPECT(gbc.readMem(0xb2e1), 0x41);
        // CB 41 00DD
        gbc.setState(0x88d5, 0xef22, 0xc500, 0x21bf, 0x445e, 0x6d6, 0x0, 0x0);
        gbc.writeMem(0x88d5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xef22);
        EXPECT(gbc.pc(), 0x88d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d5), 0xcb);
        EXPECT(gbc.readMem(0x88d6), 0x41);
        // CB 41 00DE
        gbc.setState(0xa6fc, 0x98f2, 0x8e90, 0x452b, 0x2661, 0x5a45, 0x1, 0x0);
        gbc.writeMem(0xa6fc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x98f2);
        EXPECT(gbc.pc(), 0xa6fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6fc), 0xcb);
        EXPECT(gbc.readMem(0xa6fd), 0x41);
        // CB 41 00DF
        gbc.setState(0x370a, 0x1d4e, 0xdde0, 0x697f, 0x1be1, 0x2e27, 0x0, 0x0);
        gbc.writeMem(0x370a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1d4e);
        EXPECT(gbc.pc(), 0x370c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00E0
        gbc.setState(0xdba9, 0xa517, 0x5f10, 0x419, 0x7e71, 0xa687, 0x0, 0x0);
        gbc.writeMem(0xdba9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa517);
        EXPECT(gbc.pc(), 0xdbab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba9), 0xcb);
        EXPECT(gbc.readMem(0xdbaa), 0x41);
        // CB 41 00E1
        gbc.setState(0x8291, 0x97e3, 0xb6b0, 0xa95f, 0xb356, 0xbd38, 0x1, 0x1);
        gbc.writeMem(0x8291, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x97e3);
        EXPECT(gbc.pc(), 0x8293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8291), 0xcb);
        EXPECT(gbc.readMem(0x8292), 0x41);
        // CB 41 00E2
        gbc.setState(0xddc5, 0xe667, 0x1880, 0xec5, 0x16e1, 0x5451, 0x0, 0x1);
        gbc.writeMem(0xddc5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe667);
        EXPECT(gbc.pc(), 0xddc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc5), 0xcb);
        EXPECT(gbc.readMem(0xddc6), 0x41);
        // CB 41 00E3
        gbc.setState(0xcf83, 0xc228, 0xf4b0, 0xc178, 0x7477, 0x3dc7, 0x1, 0x1);
        gbc.writeMem(0xcf83, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc228);
        EXPECT(gbc.pc(), 0xcf85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf83), 0xcb);
        EXPECT(gbc.readMem(0xcf84), 0x41);
        // CB 41 00E4
        gbc.setState(0x8acd, 0xfc52, 0xdd20, 0x62d7, 0xc6cf, 0xbabd, 0x1, 0x0);
        gbc.writeMem(0x8acd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfc52);
        EXPECT(gbc.pc(), 0x8acf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8acd), 0xcb);
        EXPECT(gbc.readMem(0x8ace), 0x41);
        // CB 41 00E5
        gbc.setState(0x5f5e, 0x9dcc, 0x9ed0, 0xb927, 0x4081, 0xd1dd, 0x0, 0x1);
        gbc.writeMem(0x5f5e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9dcc);
        EXPECT(gbc.pc(), 0x5f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00E7
        gbc.setState(0x71b7, 0xd4f, 0x5f30, 0x7a21, 0xc955, 0x91f, 0x1, 0x0);
        gbc.writeMem(0x71b7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd4f);
        EXPECT(gbc.pc(), 0x71b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00E8
        gbc.setState(0x98f8, 0xe3fe, 0x7110, 0x93ad, 0x17ec, 0x6c22, 0x1, 0x1);
        gbc.writeMem(0x98f8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe3fe);
        EXPECT(gbc.pc(), 0x98fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f8), 0xcb);
        EXPECT(gbc.readMem(0x98f9), 0x41);
        // CB 41 00E9
        gbc.setState(0xb401, 0x3104, 0xb0b0, 0x1923, 0xe5b8, 0xb2be, 0x0, 0x0);
        gbc.writeMem(0xb401, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3104);
        EXPECT(gbc.pc(), 0xb403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb401), 0xcb);
        EXPECT(gbc.readMem(0xb402), 0x41);
        // CB 41 00EA
        gbc.setState(0x606d, 0xff55, 0xf580, 0x755, 0x34b9, 0x6217, 0x1, 0x0);
        gbc.writeMem(0x606d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xff55);
        EXPECT(gbc.pc(), 0x606f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00EB
        gbc.setState(0x7dce, 0x1fcc, 0x41c0, 0x9b28, 0x7acd, 0x9e08, 0x1, 0x0);
        gbc.writeMem(0x7dce, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1fcc);
        EXPECT(gbc.pc(), 0x7dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00EC
        gbc.setState(0xe11d, 0xd85b, 0x50c0, 0x2c8a, 0xd75e, 0x38d3, 0x0, 0x0);
        gbc.writeMem(0xe11d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd85b);
        EXPECT(gbc.pc(), 0xe11f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe11d), 0xcb);
        EXPECT(gbc.readMem(0xe11e), 0x41);
        // CB 41 00ED
        gbc.setState(0x2c42, 0xbac0, 0xe230, 0x5575, 0x1ea7, 0x9eb1, 0x1, 0x1);
        gbc.writeMem(0x2c42, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbac0);
        EXPECT(gbc.pc(), 0x2c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00EE
        gbc.setState(0x4a2e, 0x355c, 0x8910, 0x1217, 0xcecf, 0xfd66, 0x0, 0x1);
        gbc.writeMem(0x4a2e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x355c);
        EXPECT(gbc.pc(), 0x4a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00EF
        gbc.setState(0x8d96, 0xe1a0, 0x9640, 0xc155, 0x94d2, 0x312c, 0x0, 0x1);
        gbc.writeMem(0x8d96, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe1a0);
        EXPECT(gbc.pc(), 0x8d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d96), 0xcb);
        EXPECT(gbc.readMem(0x8d97), 0x41);
        // CB 41 00F0
        gbc.setState(0x1a8a, 0xf036, 0x8af0, 0x5ee8, 0xe102, 0x45b, 0x0, 0x1);
        gbc.writeMem(0x1a8a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf036);
        EXPECT(gbc.pc(), 0x1a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00F1
        gbc.setState(0x12f5, 0x28f1, 0x6fe0, 0x9450, 0xe179, 0xe4e3, 0x0, 0x0);
        gbc.writeMem(0x12f5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x28f1);
        EXPECT(gbc.pc(), 0x12f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00F2
        gbc.setState(0xe4b3, 0xfe73, 0xe600, 0xbb81, 0x5beb, 0x4dea, 0x1, 0x0);
        gbc.writeMem(0xe4b3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfe73);
        EXPECT(gbc.pc(), 0xe4b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4b3), 0xcb);
        EXPECT(gbc.readMem(0xe4b4), 0x41);
        // CB 41 00F4
        gbc.setState(0xc4c3, 0xf6e7, 0xb150, 0x62ab, 0x2cea, 0x1c40, 0x0, 0x0);
        gbc.writeMem(0xc4c3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf6e7);
        EXPECT(gbc.pc(), 0xc4c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c3), 0xcb);
        EXPECT(gbc.readMem(0xc4c4), 0x41);
        // CB 41 00F5
        gbc.setState(0x7fc1, 0x7c86, 0x2de0, 0xf6f7, 0x52c6, 0x12b8, 0x1, 0x0);
        gbc.writeMem(0x7fc1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7c86);
        EXPECT(gbc.pc(), 0x7fc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00F6
        gbc.setState(0xd817, 0x9654, 0x3360, 0x2a67, 0x89d2, 0xaacc, 0x0, 0x1);
        gbc.writeMem(0xd817, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9654);
        EXPECT(gbc.pc(), 0xd819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd817), 0xcb);
        EXPECT(gbc.readMem(0xd818), 0x41);
        // CB 41 00F8
        gbc.setState(0x473d, 0x293e, 0x5b00, 0xe589, 0x7714, 0xe14b, 0x1, 0x0);
        gbc.writeMem(0x473d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x293e);
        EXPECT(gbc.pc(), 0x473f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 00F9
        gbc.setState(0x42f3, 0xdb5b, 0xef30, 0x90e0, 0xe228, 0x9ca, 0x0, 0x0);
        gbc.writeMem(0x42f3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdb5b);
        EXPECT(gbc.pc(), 0x42f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00FA
        gbc.setState(0x4c3c, 0xed04, 0x67f0, 0x3139, 0x8f53, 0x72c2, 0x0, 0x0);
        gbc.writeMem(0x4c3c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xed04);
        EXPECT(gbc.pc(), 0x4c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00FB
        gbc.setState(0xdc61, 0xecc6, 0x56b0, 0xb34d, 0x61b4, 0x263a, 0x1, 0x0);
        gbc.writeMem(0xdc61, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xecc6);
        EXPECT(gbc.pc(), 0xdc63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc61), 0xcb);
        EXPECT(gbc.readMem(0xdc62), 0x41);
        // CB 41 00FD
        gbc.setState(0xa90c, 0x603b, 0x6910, 0x6dba, 0x30c6, 0x4237, 0x1, 0x1);
        gbc.writeMem(0xa90c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x603b);
        EXPECT(gbc.pc(), 0xa90e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa90c), 0xcb);
        EXPECT(gbc.readMem(0xa90d), 0x41);
        // CB 41 00FE
        gbc.setState(0x7a03, 0xc377, 0x4ff0, 0xec0c, 0x9f74, 0xc76d, 0x0, 0x1);
        gbc.writeMem(0x7a03, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc377);
        EXPECT(gbc.pc(), 0x7a05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 00FF
        gbc.setState(0x44a1, 0x8d4c, 0xc6e0, 0xac21, 0xcdb2, 0x4c7d, 0x1, 0x0);
        gbc.writeMem(0x44a1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8d4c);
        EXPECT(gbc.pc(), 0x44a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0100
        gbc.setState(0x736d, 0x574d, 0x9e70, 0x56de, 0xb6d7, 0x20de, 0x1, 0x1);
        gbc.writeMem(0x736d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x574d);
        EXPECT(gbc.pc(), 0x736f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0101
        gbc.setState(0xc30, 0xf9b2, 0xccd0, 0xf0e0, 0xf913, 0xcdf6, 0x0, 0x1);
        gbc.writeMem(0xc30, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf9b2);
        EXPECT(gbc.pc(), 0xc32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0102
        gbc.setState(0x53eb, 0x5059, 0x6620, 0xb441, 0x6654, 0xe7ca, 0x1, 0x0);
        gbc.writeMem(0x53eb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5059);
        EXPECT(gbc.pc(), 0x53ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0104
        gbc.setState(0x4da5, 0xb5d1, 0xec30, 0xbc5b, 0x6244, 0xcdf9, 0x1, 0x0);
        gbc.writeMem(0x4da5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb5d1);
        EXPECT(gbc.pc(), 0x4da7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0105
        gbc.setState(0x73c8, 0xbd97, 0x55e0, 0xd570, 0xf038, 0xd421, 0x1, 0x1);
        gbc.writeMem(0x73c8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbd97);
        EXPECT(gbc.pc(), 0x73ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0106
        gbc.setState(0xdd35, 0xd9bb, 0x7b40, 0x60a, 0x85ed, 0xd7c3, 0x1, 0x1);
        gbc.writeMem(0xdd35, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd9bb);
        EXPECT(gbc.pc(), 0xdd37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd35), 0xcb);
        EXPECT(gbc.readMem(0xdd36), 0x41);
        // CB 41 0107
        gbc.setState(0x2f6, 0x511a, 0xbfe0, 0x2e12, 0x4e14, 0x78f1, 0x1, 0x0);
        gbc.writeMem(0x2f6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x511a);
        EXPECT(gbc.pc(), 0x2f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0108
        gbc.setState(0xa89f, 0xffeb, 0x53c0, 0xe7b7, 0x97af, 0x167d, 0x1, 0x0);
        gbc.writeMem(0xa89f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xffeb);
        EXPECT(gbc.pc(), 0xa8a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa89f), 0xcb);
        EXPECT(gbc.readMem(0xa8a0), 0x41);
        // CB 41 0109
        gbc.setState(0x882a, 0x4b15, 0xcc0, 0xc1c4, 0x3fd0, 0x75e6, 0x0, 0x0);
        gbc.writeMem(0x882a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4b15);
        EXPECT(gbc.pc(), 0x882c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882a), 0xcb);
        EXPECT(gbc.readMem(0x882b), 0x41);
        // CB 41 010A
        gbc.setState(0xa402, 0x7fa, 0x7440, 0xb85b, 0x8ec5, 0x37cd, 0x1, 0x0);
        gbc.writeMem(0xa402, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7fa);
        EXPECT(gbc.pc(), 0xa404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa402), 0xcb);
        EXPECT(gbc.readMem(0xa403), 0x41);
        // CB 41 010B
        gbc.setState(0xb3cc, 0x9156, 0xdf90, 0x8a74, 0xa335, 0xba98, 0x0, 0x0);
        gbc.writeMem(0xb3cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9156);
        EXPECT(gbc.pc(), 0xb3ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3cc), 0xcb);
        EXPECT(gbc.readMem(0xb3cd), 0x41);
        // CB 41 010C
        gbc.setState(0x5e33, 0x1c3f, 0x6bf0, 0xcd46, 0x63ca, 0x901b, 0x0, 0x1);
        gbc.writeMem(0x5e33, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1c3f);
        EXPECT(gbc.pc(), 0x5e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 010D
        gbc.setState(0x75a7, 0x3f57, 0xddd0, 0x8fbd, 0xbff8, 0xb5fa, 0x0, 0x0);
        gbc.writeMem(0x75a7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3f57);
        EXPECT(gbc.pc(), 0x75a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 010E
        gbc.setState(0x3ab0, 0xb70d, 0x2b40, 0x168d, 0x41b2, 0xe8cf, 0x1, 0x1);
        gbc.writeMem(0x3ab0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb70d);
        EXPECT(gbc.pc(), 0x3ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 010F
        gbc.setState(0x21ad, 0xf8a5, 0xd0a0, 0x5c1f, 0xbfe7, 0xc2d5, 0x0, 0x0);
        gbc.writeMem(0x21ad, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf8a5);
        EXPECT(gbc.pc(), 0x21af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0111
        gbc.setState(0xa424, 0x22f7, 0xecb0, 0x5e62, 0xf5b4, 0xb89a, 0x1, 0x0);
        gbc.writeMem(0xa424, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x22f7);
        EXPECT(gbc.pc(), 0xa426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa424), 0xcb);
        EXPECT(gbc.readMem(0xa425), 0x41);
        // CB 41 0112
        gbc.setState(0x4535, 0xec24, 0x3ab0, 0xf952, 0x3954, 0x576a, 0x1, 0x1);
        gbc.writeMem(0x4535, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xec24);
        EXPECT(gbc.pc(), 0x4537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0113
        gbc.setState(0x6433, 0x46c8, 0x7010, 0xa971, 0x29a2, 0x9bc, 0x1, 0x0);
        gbc.writeMem(0x6433, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x46c8);
        EXPECT(gbc.pc(), 0x6435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0114
        gbc.setState(0x3674, 0x4e15, 0xca50, 0x69b8, 0xcc41, 0x1112, 0x1, 0x0);
        gbc.writeMem(0x3674, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4e15);
        EXPECT(gbc.pc(), 0x3676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0115
        gbc.setState(0x25ff, 0x6314, 0x360, 0x15ea, 0x1dff, 0x5c35, 0x1, 0x0);
        gbc.writeMem(0x25ff, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6314);
        EXPECT(gbc.pc(), 0x2601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0116
        gbc.setState(0x8a6b, 0x83f5, 0x7d20, 0x20f7, 0x125d, 0x5e00, 0x1, 0x1);
        gbc.writeMem(0x8a6b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x83f5);
        EXPECT(gbc.pc(), 0x8a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a6b), 0xcb);
        EXPECT(gbc.readMem(0x8a6c), 0x41);
        // CB 41 0117
        gbc.setState(0x94af, 0xad70, 0x8a90, 0x47a0, 0xbf88, 0xb0c0, 0x1, 0x1);
        gbc.writeMem(0x94af, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xad70);
        EXPECT(gbc.pc(), 0x94b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94af), 0xcb);
        EXPECT(gbc.readMem(0x94b0), 0x41);
        // CB 41 0118
        gbc.setState(0x8f97, 0x7755, 0x9130, 0x475b, 0x8f59, 0x7525, 0x1, 0x0);
        gbc.writeMem(0x8f97, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7755);
        EXPECT(gbc.pc(), 0x8f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f97), 0xcb);
        EXPECT(gbc.readMem(0x8f98), 0x41);
        // CB 41 0119
        gbc.setState(0x7052, 0x576a, 0x6b90, 0x832a, 0xe885, 0x487d, 0x1, 0x0);
        gbc.writeMem(0x7052, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x576a);
        EXPECT(gbc.pc(), 0x7054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 011A
        gbc.setState(0x3c04, 0x62ec, 0x9820, 0x409, 0xf901, 0x4f3d, 0x0, 0x1);
        gbc.writeMem(0x3c04, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x62ec);
        EXPECT(gbc.pc(), 0x3c06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 011B
        gbc.setState(0x6f82, 0x77dc, 0x7e30, 0x6e6a, 0x9b7f, 0x9da5, 0x0, 0x1);
        gbc.writeMem(0x6f82, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x77dc);
        EXPECT(gbc.pc(), 0x6f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 011C
        gbc.setState(0x9a0b, 0xcefa, 0xd110, 0x5789, 0x4e27, 0xc2ca, 0x1, 0x1);
        gbc.writeMem(0x9a0b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcefa);
        EXPECT(gbc.pc(), 0x9a0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a0b), 0xcb);
        EXPECT(gbc.readMem(0x9a0c), 0x41);
        // CB 41 011D
        gbc.setState(0x79e2, 0x5c52, 0x3530, 0x6e52, 0xf641, 0x9a67, 0x0, 0x1);
        gbc.writeMem(0x79e2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5c52);
        EXPECT(gbc.pc(), 0x79e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 011E
        gbc.setState(0x548f, 0xfbf2, 0x7a20, 0x52eb, 0xadcc, 0x26db, 0x1, 0x1);
        gbc.writeMem(0x548f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xfbf2);
        EXPECT(gbc.pc(), 0x5491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 011F
        gbc.setState(0x17f, 0x2d1b, 0x8da0, 0x67c0, 0xd8a9, 0x217d, 0x0, 0x1);
        gbc.writeMem(0x17f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2d1b);
        EXPECT(gbc.pc(), 0x181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0120
        gbc.setState(0x5f39, 0xec21, 0x3960, 0x5714, 0x97d3, 0xd18b, 0x0, 0x1);
        gbc.writeMem(0x5f39, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xec21);
        EXPECT(gbc.pc(), 0x5f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0121
        gbc.setState(0x3a18, 0xf2ef, 0x1dd0, 0xc697, 0xd075, 0xf03c, 0x1, 0x0);
        gbc.writeMem(0x3a18, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf2ef);
        EXPECT(gbc.pc(), 0x3a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0122
        gbc.setState(0xab94, 0x8ecf, 0xa6d0, 0xf617, 0xb166, 0x2b86, 0x0, 0x0);
        gbc.writeMem(0xab94, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8ecf);
        EXPECT(gbc.pc(), 0xab96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab94), 0xcb);
        EXPECT(gbc.readMem(0xab95), 0x41);
        // CB 41 0123
        gbc.setState(0x7bd2, 0x22d3, 0xd8a0, 0x3364, 0x2702, 0xc982, 0x1, 0x1);
        gbc.writeMem(0x7bd2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x22d3);
        EXPECT(gbc.pc(), 0x7bd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0124
        gbc.setState(0x197b, 0x7e11, 0xb090, 0xace5, 0xf624, 0xec6f, 0x0, 0x1);
        gbc.writeMem(0x197b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7e11);
        EXPECT(gbc.pc(), 0x197d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0125
        gbc.setState(0x68ae, 0xd6f3, 0x3cd0, 0x6adc, 0x5c1c, 0xb833, 0x1, 0x1);
        gbc.writeMem(0x68ae, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd6f3);
        EXPECT(gbc.pc(), 0x68b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0126
        gbc.setState(0xaf6a, 0x127a, 0x3530, 0x5285, 0xc76a, 0xe65f, 0x0, 0x1);
        gbc.writeMem(0xaf6a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x127a);
        EXPECT(gbc.pc(), 0xaf6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf6a), 0xcb);
        EXPECT(gbc.readMem(0xaf6b), 0x41);
        // CB 41 0127
        gbc.setState(0x481b, 0x9df2, 0xdb20, 0x2b1c, 0x10fe, 0x5211, 0x0, 0x1);
        gbc.writeMem(0x481b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9df2);
        EXPECT(gbc.pc(), 0x481d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0128
        gbc.setState(0xa498, 0xa8be, 0x6f90, 0x424c, 0x693f, 0x61a6, 0x1, 0x0);
        gbc.writeMem(0xa498, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa8be);
        EXPECT(gbc.pc(), 0xa49a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa498), 0xcb);
        EXPECT(gbc.readMem(0xa499), 0x41);
        // CB 41 0129
        gbc.setState(0x68f0, 0xd7c5, 0x3bb0, 0xa10a, 0x8629, 0xc6e1, 0x0, 0x0);
        gbc.writeMem(0x68f0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd7c5);
        EXPECT(gbc.pc(), 0x68f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 012A
        gbc.setState(0x9c64, 0x8f50, 0x8780, 0x65ea, 0xd670, 0x17b0, 0x1, 0x1);
        gbc.writeMem(0x9c64, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8f50);
        EXPECT(gbc.pc(), 0x9c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c64), 0xcb);
        EXPECT(gbc.readMem(0x9c65), 0x41);
        // CB 41 012B
        gbc.setState(0x8a82, 0x5fd0, 0x2df0, 0x55a3, 0x14cd, 0xfe24, 0x0, 0x1);
        gbc.writeMem(0x8a82, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5fd0);
        EXPECT(gbc.pc(), 0x8a84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a82), 0xcb);
        EXPECT(gbc.readMem(0x8a83), 0x41);
        // CB 41 012C
        gbc.setState(0x94fa, 0x5d92, 0x2460, 0xf275, 0x7b2c, 0x306f, 0x1, 0x0);
        gbc.writeMem(0x94fa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5d92);
        EXPECT(gbc.pc(), 0x94fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94fa), 0xcb);
        EXPECT(gbc.readMem(0x94fb), 0x41);
        // CB 41 012D
        gbc.setState(0xa32f, 0x18e4, 0xc7c0, 0xdca, 0x787c, 0xd1a, 0x0, 0x1);
        gbc.writeMem(0xa32f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x18e4);
        EXPECT(gbc.pc(), 0xa331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa32f), 0xcb);
        EXPECT(gbc.readMem(0xa330), 0x41);
        // CB 41 012E
        gbc.setState(0x519, 0x48de, 0x4f10, 0x594a, 0x9f26, 0x49c5, 0x1, 0x1);
        gbc.writeMem(0x519, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x48de);
        EXPECT(gbc.pc(), 0x51b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 012F
        gbc.setState(0xc8fb, 0x31c2, 0xc460, 0x2210, 0xd6ba, 0x97c3, 0x0, 0x1);
        gbc.writeMem(0xc8fb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x31c2);
        EXPECT(gbc.pc(), 0xc8fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8fb), 0xcb);
        EXPECT(gbc.readMem(0xc8fc), 0x41);
        // CB 41 0130
        gbc.setState(0x3179, 0x7170, 0x1240, 0x8dae, 0xb6f0, 0xe8b8, 0x0, 0x0);
        gbc.writeMem(0x3179, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7170);
        EXPECT(gbc.pc(), 0x317b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0131
        gbc.setState(0x6b05, 0x2533, 0x5320, 0xf6ab, 0xe77f, 0x6c4e, 0x1, 0x0);
        gbc.writeMem(0x6b05, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2533);
        EXPECT(gbc.pc(), 0x6b07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0132
        gbc.setState(0xd658, 0xde75, 0x2500, 0x2db2, 0x3d7e, 0x5d81, 0x1, 0x1);
        gbc.writeMem(0xd658, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xde75);
        EXPECT(gbc.pc(), 0xd65a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd658), 0xcb);
        EXPECT(gbc.readMem(0xd659), 0x41);
        // CB 41 0133
        gbc.setState(0xdb2b, 0x9add, 0x410, 0xf038, 0x6d3a, 0x7b9a, 0x1, 0x0);
        gbc.writeMem(0xdb2b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9add);
        EXPECT(gbc.pc(), 0xdb2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb2b), 0xcb);
        EXPECT(gbc.readMem(0xdb2c), 0x41);
        // CB 41 0135
        gbc.setState(0x8c51, 0x7a10, 0xd730, 0xec2c, 0xc577, 0x3e2e, 0x1, 0x1);
        gbc.writeMem(0x8c51, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7a10);
        EXPECT(gbc.pc(), 0x8c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c51), 0xcb);
        EXPECT(gbc.readMem(0x8c52), 0x41);
        // CB 41 0136
        gbc.setState(0xbfce, 0xc09f, 0xc800, 0x5f5a, 0x8024, 0x7a17, 0x0, 0x0);
        gbc.writeMem(0xbfce, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc09f);
        EXPECT(gbc.pc(), 0xbfd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfce), 0xcb);
        EXPECT(gbc.readMem(0xbfcf), 0x41);
        // CB 41 0137
        gbc.setState(0x18f0, 0x835b, 0x23e0, 0xeb13, 0x152f, 0x983b, 0x1, 0x0);
        gbc.writeMem(0x18f0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x835b);
        EXPECT(gbc.pc(), 0x18f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0138
        gbc.setState(0xa3b8, 0x4f22, 0xcd70, 0x205f, 0xa54d, 0xd1af, 0x0, 0x1);
        gbc.writeMem(0xa3b8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4f22);
        EXPECT(gbc.pc(), 0xa3ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b8), 0xcb);
        EXPECT(gbc.readMem(0xa3b9), 0x41);
        // CB 41 0139
        gbc.setState(0x501e, 0x9dc3, 0x6b30, 0xfa99, 0xa83, 0xb1e7, 0x0, 0x1);
        gbc.writeMem(0x501e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9dc3);
        EXPECT(gbc.pc(), 0x5020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 013A
        gbc.setState(0x68bb, 0x7bb9, 0xa710, 0xa142, 0x8de0, 0xbaee, 0x1, 0x1);
        gbc.writeMem(0x68bb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7bb9);
        EXPECT(gbc.pc(), 0x68bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 013B
        gbc.setState(0xe828, 0x88d5, 0x7fd0, 0xa4b5, 0xc2de, 0xc189, 0x1, 0x1);
        gbc.writeMem(0xe828, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x88d5);
        EXPECT(gbc.pc(), 0xe82a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe828), 0xcb);
        EXPECT(gbc.readMem(0xe829), 0x41);
        // CB 41 013C
        gbc.setState(0x7b6d, 0x3e1, 0x82e0, 0xe05c, 0xfff1, 0xacfa, 0x0, 0x1);
        gbc.writeMem(0x7b6d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3e1);
        EXPECT(gbc.pc(), 0x7b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 013D
        gbc.setState(0x11da, 0xd2ea, 0xf8f0, 0xca3f, 0xbe54, 0xde12, 0x1, 0x0);
        gbc.writeMem(0x11da, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd2ea);
        EXPECT(gbc.pc(), 0x11dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 013F
        gbc.setState(0x7024, 0x389c, 0xf3a0, 0x9912, 0x7ce7, 0xffb, 0x1, 0x1);
        gbc.writeMem(0x7024, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x389c);
        EXPECT(gbc.pc(), 0x7026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0140
        gbc.setState(0x8d72, 0xe300, 0x8a90, 0xefb1, 0x9f2b, 0x47a7, 0x0, 0x1);
        gbc.writeMem(0x8d72, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe300);
        EXPECT(gbc.pc(), 0x8d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d72), 0xcb);
        EXPECT(gbc.readMem(0x8d73), 0x41);
        // CB 41 0141
        gbc.setState(0x5fa0, 0xcee2, 0x6bc0, 0xe01f, 0x8761, 0xc059, 0x0, 0x0);
        gbc.writeMem(0x5fa0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcee2);
        EXPECT(gbc.pc(), 0x5fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0142
        gbc.setState(0xd32b, 0xe49, 0x56a0, 0x7dd8, 0xcfc, 0x8f8c, 0x0, 0x0);
        gbc.writeMem(0xd32b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe49);
        EXPECT(gbc.pc(), 0xd32d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32b), 0xcb);
        EXPECT(gbc.readMem(0xd32c), 0x41);
        // CB 41 0143
        gbc.setState(0xa0a3, 0xb278, 0xe660, 0xcdfe, 0xe930, 0x7314, 0x1, 0x0);
        gbc.writeMem(0xa0a3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb278);
        EXPECT(gbc.pc(), 0xa0a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a3), 0xcb);
        EXPECT(gbc.readMem(0xa0a4), 0x41);
        // CB 41 0144
        gbc.setState(0x3c70, 0xef83, 0xcfb0, 0x4fb8, 0xf13b, 0x1119, 0x0, 0x0);
        gbc.writeMem(0x3c70, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xef83);
        EXPECT(gbc.pc(), 0x3c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0145
        gbc.setState(0x20d6, 0xa57a, 0x5ac0, 0x85a7, 0x32f8, 0xecb3, 0x0, 0x1);
        gbc.writeMem(0x20d6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa57a);
        EXPECT(gbc.pc(), 0x20d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0146
        gbc.setState(0x74b6, 0xbcfa, 0xff10, 0x14c3, 0xb147, 0x823f, 0x1, 0x0);
        gbc.writeMem(0x74b6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbcfa);
        EXPECT(gbc.pc(), 0x74b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0147
        gbc.setState(0x9d00, 0x438d, 0xfc0, 0x4478, 0x2f44, 0xa9a, 0x0, 0x1);
        gbc.writeMem(0x9d00, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x438d);
        EXPECT(gbc.pc(), 0x9d02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d00), 0xcb);
        EXPECT(gbc.readMem(0x9d01), 0x41);
        // CB 41 0148
        gbc.setState(0x4619, 0xdf73, 0x8020, 0x845a, 0x3cbc, 0xd23, 0x0, 0x0);
        gbc.writeMem(0x4619, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdf73);
        EXPECT(gbc.pc(), 0x461b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0149
        gbc.setState(0x3c42, 0xb0c1, 0x6c50, 0xf153, 0x7b3a, 0xe7aa, 0x1, 0x0);
        gbc.writeMem(0x3c42, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb0c1);
        EXPECT(gbc.pc(), 0x3c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 014A
        gbc.setState(0x4fb4, 0x17b7, 0xfa0, 0xd5e7, 0xc593, 0x4ae5, 0x1, 0x1);
        gbc.writeMem(0x4fb4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x17b7);
        EXPECT(gbc.pc(), 0x4fb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 014B
        gbc.setState(0xd49d, 0xcb32, 0x6680, 0x3241, 0xec7f, 0x5ec7, 0x0, 0x1);
        gbc.writeMem(0xd49d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcb32);
        EXPECT(gbc.pc(), 0xd49f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd49d), 0xcb);
        EXPECT(gbc.readMem(0xd49e), 0x41);
        // CB 41 014D
        gbc.setState(0x7f52, 0x50b8, 0xfed0, 0xb41a, 0xae49, 0xa57, 0x0, 0x1);
        gbc.writeMem(0x7f52, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x50b8);
        EXPECT(gbc.pc(), 0x7f54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 014F
        gbc.setState(0xbbb6, 0xc34e, 0x58c0, 0xcb7d, 0xc0ee, 0x6add, 0x0, 0x0);
        gbc.writeMem(0xbbb6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc34e);
        EXPECT(gbc.pc(), 0xbbb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb6), 0xcb);
        EXPECT(gbc.readMem(0xbbb7), 0x41);
        // CB 41 0150
        gbc.setState(0xebe3, 0xf650, 0xcc70, 0xf568, 0x8e25, 0xd7da, 0x0, 0x1);
        gbc.writeMem(0xebe3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf650);
        EXPECT(gbc.pc(), 0xebe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebe3), 0xcb);
        EXPECT(gbc.readMem(0xebe4), 0x41);
        // CB 41 0151
        gbc.setState(0x5463, 0xfc21, 0x74d0, 0xfadf, 0x4d39, 0x28bf, 0x1, 0x0);
        gbc.writeMem(0x5463, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfc21);
        EXPECT(gbc.pc(), 0x5465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0153
        gbc.setState(0xeb96, 0xb953, 0xcb60, 0xdcf6, 0xa53a, 0x26da, 0x1, 0x1);
        gbc.writeMem(0xeb96, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb953);
        EXPECT(gbc.pc(), 0xeb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb96), 0xcb);
        EXPECT(gbc.readMem(0xeb97), 0x41);
        // CB 41 0155
        gbc.setState(0xe78d, 0x9b86, 0x3bc0, 0x53f5, 0x2c89, 0xa299, 0x1, 0x1);
        gbc.writeMem(0xe78d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9b86);
        EXPECT(gbc.pc(), 0xe78f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe78d), 0xcb);
        EXPECT(gbc.readMem(0xe78e), 0x41);
        // CB 41 0156
        gbc.setState(0x86e0, 0x606c, 0x7350, 0x6b61, 0x54eb, 0x2488, 0x0, 0x0);
        gbc.writeMem(0x86e0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x606c);
        EXPECT(gbc.pc(), 0x86e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86e0), 0xcb);
        EXPECT(gbc.readMem(0x86e1), 0x41);
        // CB 41 0157
        gbc.setState(0xc41e, 0x57e5, 0xdbf0, 0x2902, 0xc3fd, 0x9f44, 0x1, 0x0);
        gbc.writeMem(0xc41e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x57e5);
        EXPECT(gbc.pc(), 0xc420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc41e), 0xcb);
        EXPECT(gbc.readMem(0xc41f), 0x41);
        // CB 41 0158
        gbc.setState(0x6f46, 0x61b7, 0xa190, 0x4773, 0xc5f8, 0x7c04, 0x1, 0x0);
        gbc.writeMem(0x6f46, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x61b7);
        EXPECT(gbc.pc(), 0x6f48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0159
        gbc.setState(0x110b, 0x5056, 0x140, 0x3f62, 0x541, 0x7e0e, 0x1, 0x0);
        gbc.writeMem(0x110b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5056);
        EXPECT(gbc.pc(), 0x110d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 015A
        gbc.setState(0xe9f9, 0xf10a, 0x9150, 0xca3f, 0x5bae, 0x3839, 0x1, 0x1);
        gbc.writeMem(0xe9f9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf10a);
        EXPECT(gbc.pc(), 0xe9fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f9), 0xcb);
        EXPECT(gbc.readMem(0xe9fa), 0x41);
        // CB 41 015C
        gbc.setState(0x1ab2, 0xe1bd, 0xf2a0, 0x190d, 0x22e7, 0xa1e3, 0x1, 0x1);
        gbc.writeMem(0x1ab2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe1bd);
        EXPECT(gbc.pc(), 0x1ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 015D
        gbc.setState(0x7f6b, 0x3e55, 0xcda0, 0xad42, 0xe914, 0xb7d7, 0x1, 0x0);
        gbc.writeMem(0x7f6b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3e55);
        EXPECT(gbc.pc(), 0x7f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 015E
        gbc.setState(0xd5c1, 0x4220, 0x2630, 0x452d, 0x46e7, 0xd0de, 0x1, 0x0);
        gbc.writeMem(0xd5c1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4220);
        EXPECT(gbc.pc(), 0xd5c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c1), 0xcb);
        EXPECT(gbc.readMem(0xd5c2), 0x41);
        // CB 41 015F
        gbc.setState(0x5f9b, 0x53d9, 0x8b0, 0xe3f9, 0x9b3f, 0x1b9d, 0x0, 0x1);
        gbc.writeMem(0x5f9b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x53d9);
        EXPECT(gbc.pc(), 0x5f9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0160
        gbc.setState(0xd64f, 0x200b, 0x6b0, 0x225d, 0xff49, 0x234, 0x1, 0x1);
        gbc.writeMem(0xd64f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x200b);
        EXPECT(gbc.pc(), 0xd651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd64f), 0xcb);
        EXPECT(gbc.readMem(0xd650), 0x41);
        // CB 41 0162
        gbc.setState(0xe391, 0x3b5e, 0xc8b0, 0x6171, 0xb55d, 0x1e2, 0x0, 0x0);
        gbc.writeMem(0xe391, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3b5e);
        EXPECT(gbc.pc(), 0xe393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe391), 0xcb);
        EXPECT(gbc.readMem(0xe392), 0x41);
        // CB 41 0163
        gbc.setState(0xe999, 0x7bc9, 0x9820, 0x569c, 0xbc1e, 0x5d20, 0x1, 0x1);
        gbc.writeMem(0xe999, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7bc9);
        EXPECT(gbc.pc(), 0xe99b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe999), 0xcb);
        EXPECT(gbc.readMem(0xe99a), 0x41);
        // CB 41 0164
        gbc.setState(0xd569, 0x8a9b, 0xe960, 0xc8c1, 0x1d30, 0xe411, 0x1, 0x1);
        gbc.writeMem(0xd569, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8a9b);
        EXPECT(gbc.pc(), 0xd56b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd569), 0xcb);
        EXPECT(gbc.readMem(0xd56a), 0x41);
        // CB 41 0165
        gbc.setState(0xcd95, 0x31ef, 0x4f80, 0x543d, 0xc453, 0x4308, 0x0, 0x0);
        gbc.writeMem(0xcd95, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x31ef);
        EXPECT(gbc.pc(), 0xcd97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd95), 0xcb);
        EXPECT(gbc.readMem(0xcd96), 0x41);
        // CB 41 0166
        gbc.setState(0x711, 0xd5f3, 0xcd50, 0x36ce, 0xf138, 0x7626, 0x0, 0x1);
        gbc.writeMem(0x711, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd5f3);
        EXPECT(gbc.pc(), 0x713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0167
        gbc.setState(0xeed1, 0x918b, 0xf290, 0xb133, 0x3d0d, 0x4e13, 0x0, 0x0);
        gbc.writeMem(0xeed1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x918b);
        EXPECT(gbc.pc(), 0xeed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed1), 0xcb);
        EXPECT(gbc.readMem(0xeed2), 0x41);
        // CB 41 0168
        gbc.setState(0x7b49, 0xc08c, 0x40b0, 0xe1dc, 0x4478, 0x562c, 0x0, 0x1);
        gbc.writeMem(0x7b49, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc08c);
        EXPECT(gbc.pc(), 0x7b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0169
        gbc.setState(0x5b92, 0x8554, 0x7f90, 0xa3e8, 0xf36, 0x5dbc, 0x1, 0x1);
        gbc.writeMem(0x5b92, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8554);
        EXPECT(gbc.pc(), 0x5b94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 016A
        gbc.setState(0x1db, 0x9111, 0x27c0, 0x85b, 0xd099, 0xb4b2, 0x0, 0x1);
        gbc.writeMem(0x1db, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9111);
        EXPECT(gbc.pc(), 0x1dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 016B
        gbc.setState(0x7b2c, 0x2903, 0x91b0, 0xd54d, 0xe707, 0xa1f8, 0x1, 0x0);
        gbc.writeMem(0x7b2c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2903);
        EXPECT(gbc.pc(), 0x7b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 016C
        gbc.setState(0xad5c, 0x70c2, 0x9380, 0x89d5, 0x8495, 0xdc74, 0x1, 0x1);
        gbc.writeMem(0xad5c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x70c2);
        EXPECT(gbc.pc(), 0xad5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad5c), 0xcb);
        EXPECT(gbc.readMem(0xad5d), 0x41);
        // CB 41 016D
        gbc.setState(0x3872, 0x97d7, 0x4750, 0xad15, 0xb76b, 0x82b7, 0x1, 0x1);
        gbc.writeMem(0x3872, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x97d7);
        EXPECT(gbc.pc(), 0x3874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 016E
        gbc.setState(0xd1dc, 0xe891, 0x5100, 0xa611, 0xf1f0, 0xd5f4, 0x1, 0x0);
        gbc.writeMem(0xd1dc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe891);
        EXPECT(gbc.pc(), 0xd1de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1dc), 0xcb);
        EXPECT(gbc.readMem(0xd1dd), 0x41);
        // CB 41 016F
        gbc.setState(0x53be, 0xe32f, 0xd300, 0xebc0, 0x3dbc, 0xfb81, 0x1, 0x1);
        gbc.writeMem(0x53be, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe32f);
        EXPECT(gbc.pc(), 0x53c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0170
        gbc.setState(0x752e, 0x8fd8, 0x7330, 0x9f, 0x1777, 0xaf91, 0x1, 0x0);
        gbc.writeMem(0x752e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8fd8);
        EXPECT(gbc.pc(), 0x7530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0172
        gbc.setState(0x3c4c, 0xacae, 0x86d0, 0x353a, 0x358b, 0xf37f, 0x0, 0x1);
        gbc.writeMem(0x3c4c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xacae);
        EXPECT(gbc.pc(), 0x3c4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0174
        gbc.setState(0x9090, 0x42bd, 0xc290, 0x54f8, 0x2fb9, 0x1b29, 0x0, 0x1);
        gbc.writeMem(0x9090, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x42bd);
        EXPECT(gbc.pc(), 0x9092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9090), 0xcb);
        EXPECT(gbc.readMem(0x9091), 0x41);
        // CB 41 0175
        gbc.setState(0x25a4, 0xdb5, 0xc530, 0xe123, 0x879e, 0xab06, 0x1, 0x1);
        gbc.writeMem(0x25a4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdb5);
        EXPECT(gbc.pc(), 0x25a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0176
        gbc.setState(0x9c15, 0x8132, 0xfd90, 0x2089, 0x7f7c, 0x858c, 0x0, 0x1);
        gbc.writeMem(0x9c15, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8132);
        EXPECT(gbc.pc(), 0x9c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c15), 0xcb);
        EXPECT(gbc.readMem(0x9c16), 0x41);
        // CB 41 0177
        gbc.setState(0x6c39, 0xc43f, 0xb4c0, 0x4212, 0x8ba7, 0x1230, 0x0, 0x0);
        gbc.writeMem(0x6c39, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc43f);
        EXPECT(gbc.pc(), 0x6c3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0178
        gbc.setState(0xa9b5, 0x88c0, 0x6d00, 0xa488, 0x584b, 0xc46a, 0x0, 0x1);
        gbc.writeMem(0xa9b5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x88c0);
        EXPECT(gbc.pc(), 0xa9b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b5), 0xcb);
        EXPECT(gbc.readMem(0xa9b6), 0x41);
        // CB 41 0179
        gbc.setState(0xcf2a, 0x73c3, 0x3ec0, 0x356, 0xe236, 0x522d, 0x1, 0x0);
        gbc.writeMem(0xcf2a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x73c3);
        EXPECT(gbc.pc(), 0xcf2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf2a), 0xcb);
        EXPECT(gbc.readMem(0xcf2b), 0x41);
        // CB 41 017A
        gbc.setState(0xa147, 0x88ca, 0x4b50, 0x6d37, 0xe4a0, 0xccc0, 0x0, 0x1);
        gbc.writeMem(0xa147, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x88ca);
        EXPECT(gbc.pc(), 0xa149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa147), 0xcb);
        EXPECT(gbc.readMem(0xa148), 0x41);
        // CB 41 017B
        gbc.setState(0x6962, 0x4561, 0x78d0, 0x1608, 0x2da2, 0xdd11, 0x1, 0x1);
        gbc.writeMem(0x6962, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4561);
        EXPECT(gbc.pc(), 0x6964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 017C
        gbc.setState(0x6c1f, 0x8779, 0xc9a0, 0x6017, 0x8918, 0x12c4, 0x1, 0x0);
        gbc.writeMem(0x6c1f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8779);
        EXPECT(gbc.pc(), 0x6c21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 017E
        gbc.setState(0x9887, 0xee0, 0xd970, 0x1bc6, 0x4dab, 0x2da5, 0x1, 0x1);
        gbc.writeMem(0x9887, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xee0);
        EXPECT(gbc.pc(), 0x9889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9887), 0xcb);
        EXPECT(gbc.readMem(0x9888), 0x41);
        // CB 41 0180
        gbc.setState(0x9ea5, 0xc574, 0xf7d0, 0x68e0, 0xa71b, 0x566a, 0x1, 0x0);
        gbc.writeMem(0x9ea5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc574);
        EXPECT(gbc.pc(), 0x9ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea5), 0xcb);
        EXPECT(gbc.readMem(0x9ea6), 0x41);
        // CB 41 0181
        gbc.setState(0xbfa1, 0xcda1, 0x650, 0x6b25, 0xadcb, 0xe474, 0x0, 0x1);
        gbc.writeMem(0xbfa1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xcda1);
        EXPECT(gbc.pc(), 0xbfa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa1), 0xcb);
        EXPECT(gbc.readMem(0xbfa2), 0x41);
        // CB 41 0182
        gbc.setState(0xa38, 0x8b80, 0x7ee0, 0xe05, 0x7737, 0x8f5a, 0x0, 0x1);
        gbc.writeMem(0xa38, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8b80);
        EXPECT(gbc.pc(), 0xa3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0183
        gbc.setState(0xc5d5, 0xf27d, 0x3ba0, 0x6e27, 0xa5ce, 0xbad, 0x1, 0x1);
        gbc.writeMem(0xc5d5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf27d);
        EXPECT(gbc.pc(), 0xc5d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d5), 0xcb);
        EXPECT(gbc.readMem(0xc5d6), 0x41);
        // CB 41 0184
        gbc.setState(0xde6e, 0x6513, 0xacd0, 0x5714, 0xf681, 0xde9e, 0x0, 0x0);
        gbc.writeMem(0xde6e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6513);
        EXPECT(gbc.pc(), 0xde70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde6e), 0xcb);
        EXPECT(gbc.readMem(0xde6f), 0x41);
        // CB 41 0185
        gbc.setState(0x7100, 0x32e2, 0x9d30, 0x48a7, 0xf1b9, 0x5dca, 0x0, 0x1);
        gbc.writeMem(0x7100, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x32e2);
        EXPECT(gbc.pc(), 0x7102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0186
        gbc.setState(0x1227, 0x75bc, 0x86b0, 0x4c08, 0xc36a, 0x263f, 0x1, 0x1);
        gbc.writeMem(0x1227, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x75bc);
        EXPECT(gbc.pc(), 0x1229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0187
        gbc.setState(0xd1aa, 0xc842, 0xd4b0, 0x5c2a, 0xc31d, 0xaa8a, 0x1, 0x1);
        gbc.writeMem(0xd1aa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc842);
        EXPECT(gbc.pc(), 0xd1ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1aa), 0xcb);
        EXPECT(gbc.readMem(0xd1ab), 0x41);
        // CB 41 0189
        gbc.setState(0x22bc, 0x8c1, 0x5ad0, 0x8b6d, 0xe078, 0x83d8, 0x0, 0x1);
        gbc.writeMem(0x22bc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8c1);
        EXPECT(gbc.pc(), 0x22be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 018A
        gbc.setState(0xed8d, 0xa853, 0xe630, 0x7e96, 0xb662, 0xd4c0, 0x1, 0x0);
        gbc.writeMem(0xed8d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa853);
        EXPECT(gbc.pc(), 0xed8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed8d), 0xcb);
        EXPECT(gbc.readMem(0xed8e), 0x41);
        // CB 41 018C
        gbc.setState(0x6780, 0x6cb1, 0x2ce0, 0xeab, 0x6605, 0x68b4, 0x0, 0x1);
        gbc.writeMem(0x6780, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6cb1);
        EXPECT(gbc.pc(), 0x6782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 018D
        gbc.setState(0x6c0e, 0x76c4, 0x4cc0, 0xbfd7, 0x5cf3, 0x625a, 0x0, 0x0);
        gbc.writeMem(0x6c0e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x76c4);
        EXPECT(gbc.pc(), 0x6c10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 018F
        gbc.setState(0x8e99, 0x892f, 0xf390, 0x41d7, 0xdd69, 0xc1cb, 0x1, 0x1);
        gbc.writeMem(0x8e99, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x892f);
        EXPECT(gbc.pc(), 0x8e9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e99), 0xcb);
        EXPECT(gbc.readMem(0x8e9a), 0x41);
        // CB 41 0190
        gbc.setState(0x3928, 0xd85d, 0x7070, 0x6d81, 0x92f0, 0xc224, 0x1, 0x1);
        gbc.writeMem(0x3928, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd85d);
        EXPECT(gbc.pc(), 0x392a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0192
        gbc.setState(0x9cf1, 0xfff4, 0x37d0, 0xdc8b, 0xa39a, 0x8d50, 0x0, 0x0);
        gbc.writeMem(0x9cf1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xfff4);
        EXPECT(gbc.pc(), 0x9cf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf1), 0xcb);
        EXPECT(gbc.readMem(0x9cf2), 0x41);
        // CB 41 0193
        gbc.setState(0x4909, 0x4396, 0x6a60, 0x88e8, 0x4ba8, 0x2ce8, 0x1, 0x0);
        gbc.writeMem(0x4909, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4396);
        EXPECT(gbc.pc(), 0x490b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0194
        gbc.setState(0x3115, 0x8cb7, 0x26d0, 0xc299, 0xb459, 0xf072, 0x0, 0x1);
        gbc.writeMem(0x3115, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8cb7);
        EXPECT(gbc.pc(), 0x3117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0195
        gbc.setState(0xf8c, 0xf7db, 0x4610, 0xc945, 0xb568, 0x7644, 0x0, 0x0);
        gbc.writeMem(0xf8c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf7db);
        EXPECT(gbc.pc(), 0xf8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0196
        gbc.setState(0xa03d, 0xf684, 0x6530, 0xdba5, 0x1999, 0xc553, 0x1, 0x1);
        gbc.writeMem(0xa03d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf684);
        EXPECT(gbc.pc(), 0xa03f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa03d), 0xcb);
        EXPECT(gbc.readMem(0xa03e), 0x41);
        // CB 41 0197
        gbc.setState(0x5324, 0x9db6, 0x2bb0, 0xd3d1, 0x8391, 0x69f9, 0x1, 0x1);
        gbc.writeMem(0x5324, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9db6);
        EXPECT(gbc.pc(), 0x5326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0198
        gbc.setState(0xb228, 0x3917, 0xfa60, 0xe6be, 0xf46, 0x858b, 0x1, 0x1);
        gbc.writeMem(0xb228, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3917);
        EXPECT(gbc.pc(), 0xb22a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb228), 0xcb);
        EXPECT(gbc.readMem(0xb229), 0x41);
        // CB 41 0199
        gbc.setState(0xe51e, 0xbd93, 0x1420, 0x2bc0, 0xcc78, 0xa4c3, 0x0, 0x0);
        gbc.writeMem(0xe51e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbd93);
        EXPECT(gbc.pc(), 0xe520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe51e), 0xcb);
        EXPECT(gbc.readMem(0xe51f), 0x41);
        // CB 41 019A
        gbc.setState(0x91ee, 0xbff7, 0xbaf0, 0x28a0, 0x1eb8, 0x4ae7, 0x0, 0x1);
        gbc.writeMem(0x91ee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbff7);
        EXPECT(gbc.pc(), 0x91f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ee), 0xcb);
        EXPECT(gbc.readMem(0x91ef), 0x41);
        // CB 41 019B
        gbc.setState(0x8155, 0x2561, 0xf00, 0xa6ca, 0x2219, 0x376b, 0x0, 0x0);
        gbc.writeMem(0x8155, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2561);
        EXPECT(gbc.pc(), 0x8157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8155), 0xcb);
        EXPECT(gbc.readMem(0x8156), 0x41);
        // CB 41 019C
        gbc.setState(0xc122, 0x4d64, 0x3690, 0xdce, 0xb569, 0x90d7, 0x1, 0x1);
        gbc.writeMem(0xc122, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4d64);
        EXPECT(gbc.pc(), 0xc124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc122), 0xcb);
        EXPECT(gbc.readMem(0xc123), 0x41);
        // CB 41 019D
        gbc.setState(0x6b8, 0xf9f6, 0xbec0, 0x8457, 0xca20, 0x14a7, 0x0, 0x1);
        gbc.writeMem(0x6b8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf9f6);
        EXPECT(gbc.pc(), 0x6ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 019F
        gbc.setState(0x5fff, 0x8ef6, 0x16e0, 0x1cba, 0x6db1, 0x39c5, 0x1, 0x0);
        gbc.writeMem(0x5fff, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8ef6);
        EXPECT(gbc.pc(), 0x6001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01A0
        gbc.setState(0x9908, 0xc5fe, 0xac30, 0xbc88, 0x508d, 0x924a, 0x1, 0x0);
        gbc.writeMem(0x9908, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc5fe);
        EXPECT(gbc.pc(), 0x990a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9908), 0xcb);
        EXPECT(gbc.readMem(0x9909), 0x41);
        // CB 41 01A1
        gbc.setState(0x2d54, 0xd1d7, 0x0, 0xea72, 0xfa7b, 0x31a1, 0x1, 0x1);
        gbc.writeMem(0x2d54, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd1d7);
        EXPECT(gbc.pc(), 0x2d56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01A2
        gbc.setState(0xcc15, 0x8bf1, 0x5a40, 0x48aa, 0x7ae1, 0xf0bd, 0x0, 0x0);
        gbc.writeMem(0xcc15, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8bf1);
        EXPECT(gbc.pc(), 0xcc17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc15), 0xcb);
        EXPECT(gbc.readMem(0xcc16), 0x41);
        // CB 41 01A3
        gbc.setState(0xac9c, 0x5bde, 0x1100, 0x98b1, 0x8a60, 0x91f5, 0x0, 0x0);
        gbc.writeMem(0xac9c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5bde);
        EXPECT(gbc.pc(), 0xac9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9c), 0xcb);
        EXPECT(gbc.readMem(0xac9d), 0x41);
        // CB 41 01A4
        gbc.setState(0xe116, 0xb6e7, 0x5480, 0x2514, 0xf785, 0x6c9f, 0x1, 0x0);
        gbc.writeMem(0xe116, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb6e7);
        EXPECT(gbc.pc(), 0xe118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe116), 0xcb);
        EXPECT(gbc.readMem(0xe117), 0x41);
        // CB 41 01A5
        gbc.setState(0xe5b, 0x9c8f, 0x21c0, 0xc130, 0xb3db, 0xb718, 0x1, 0x1);
        gbc.writeMem(0xe5b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9c8f);
        EXPECT(gbc.pc(), 0xe5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01A6
        gbc.setState(0xb663, 0xe882, 0xa970, 0x59e9, 0x362e, 0x8bfa, 0x1, 0x1);
        gbc.writeMem(0xb663, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe882);
        EXPECT(gbc.pc(), 0xb665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb663), 0xcb);
        EXPECT(gbc.readMem(0xb664), 0x41);
        // CB 41 01A8
        gbc.setState(0x9807, 0x915d, 0x52f0, 0x5535, 0x60da, 0x4ba, 0x1, 0x0);
        gbc.writeMem(0x9807, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x915d);
        EXPECT(gbc.pc(), 0x9809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9807), 0xcb);
        EXPECT(gbc.readMem(0x9808), 0x41);
        // CB 41 01A9
        gbc.setState(0x41cc, 0xfc54, 0xbd00, 0x6113, 0xc29c, 0x3532, 0x0, 0x0);
        gbc.writeMem(0x41cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfc54);
        EXPECT(gbc.pc(), 0x41ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01AB
        gbc.setState(0x9dea, 0x7fed, 0xe850, 0xec30, 0xd51, 0xb5b8, 0x1, 0x0);
        gbc.writeMem(0x9dea, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7fed);
        EXPECT(gbc.pc(), 0x9dec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dea), 0xcb);
        EXPECT(gbc.readMem(0x9deb), 0x41);
        // CB 41 01AC
        gbc.setState(0xc3b8, 0x1368, 0x84e0, 0xaa63, 0xf1c, 0xcac8, 0x1, 0x0);
        gbc.writeMem(0xc3b8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1368);
        EXPECT(gbc.pc(), 0xc3ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b8), 0xcb);
        EXPECT(gbc.readMem(0xc3b9), 0x41);
        // CB 41 01AD
        gbc.setState(0x64a1, 0x5dfd, 0x5330, 0x5f2a, 0x807a, 0x3f22, 0x0, 0x0);
        gbc.writeMem(0x64a1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5dfd);
        EXPECT(gbc.pc(), 0x64a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01AE
        gbc.setState(0x1f84, 0x297b, 0xe490, 0x7177, 0x5381, 0xbc, 0x0, 0x1);
        gbc.writeMem(0x1f84, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x297b);
        EXPECT(gbc.pc(), 0x1f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01AF
        gbc.setState(0x920e, 0xb2cd, 0x3ce0, 0x8220, 0xf50a, 0xb39f, 0x0, 0x0);
        gbc.writeMem(0x920e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb2cd);
        EXPECT(gbc.pc(), 0x9210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x920e), 0xcb);
        EXPECT(gbc.readMem(0x920f), 0x41);
        // CB 41 01B0
        gbc.setState(0x8974, 0xfd15, 0xead0, 0x1c6c, 0x7d68, 0xc5ff, 0x0, 0x0);
        gbc.writeMem(0x8974, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xfd15);
        EXPECT(gbc.pc(), 0x8976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8974), 0xcb);
        EXPECT(gbc.readMem(0x8975), 0x41);
        // CB 41 01B1
        gbc.setState(0x8a8a, 0x1934, 0x160, 0xff1b, 0x67d2, 0xc3ef, 0x1, 0x0);
        gbc.writeMem(0x8a8a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1934);
        EXPECT(gbc.pc(), 0x8a8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a8a), 0xcb);
        EXPECT(gbc.readMem(0x8a8b), 0x41);
        // CB 41 01B2
        gbc.setState(0xbbe7, 0xfa24, 0xd6a0, 0xbc31, 0x5a2a, 0xbaec, 0x0, 0x0);
        gbc.writeMem(0xbbe7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfa24);
        EXPECT(gbc.pc(), 0xbbe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe7), 0xcb);
        EXPECT(gbc.readMem(0xbbe8), 0x41);
        // CB 41 01B3
        gbc.setState(0xda32, 0x997a, 0xb550, 0x22ff, 0xb743, 0x2179, 0x0, 0x0);
        gbc.writeMem(0xda32, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x997a);
        EXPECT(gbc.pc(), 0xda34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda32), 0xcb);
        EXPECT(gbc.readMem(0xda33), 0x41);
        // CB 41 01B4
        gbc.setState(0x32eb, 0xe4f7, 0xf140, 0x960d, 0xb906, 0x8747, 0x1, 0x1);
        gbc.writeMem(0x32eb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe4f7);
        EXPECT(gbc.pc(), 0x32ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01B5
        gbc.setState(0x2ccb, 0xa2c9, 0x80e0, 0x5dfb, 0xcde1, 0xc133, 0x0, 0x1);
        gbc.writeMem(0x2ccb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa2c9);
        EXPECT(gbc.pc(), 0x2ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01B6
        gbc.setState(0x1986, 0x918a, 0xd910, 0x9bab, 0x11a0, 0xf37c, 0x0, 0x1);
        gbc.writeMem(0x1986, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x918a);
        EXPECT(gbc.pc(), 0x1988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01B7
        gbc.setState(0xd972, 0x6bab, 0x53d0, 0x2ede, 0x5e94, 0x2d0c, 0x1, 0x1);
        gbc.writeMem(0xd972, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6bab);
        EXPECT(gbc.pc(), 0xd974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd972), 0xcb);
        EXPECT(gbc.readMem(0xd973), 0x41);
        // CB 41 01B8
        gbc.setState(0x7d86, 0xf223, 0x7190, 0x12cf, 0xeb07, 0xbfab, 0x1, 0x0);
        gbc.writeMem(0x7d86, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf223);
        EXPECT(gbc.pc(), 0x7d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01B9
        gbc.setState(0x267d, 0x5e6a, 0xdbf0, 0xa6bd, 0xef9c, 0x6b4, 0x1, 0x1);
        gbc.writeMem(0x267d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5e6a);
        EXPECT(gbc.pc(), 0x267f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01BA
        gbc.setState(0x7115, 0xa399, 0x6ec0, 0x6310, 0xff72, 0x7ff3, 0x0, 0x1);
        gbc.writeMem(0x7115, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa399);
        EXPECT(gbc.pc(), 0x7117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01BB
        gbc.setState(0x34e8, 0x36a, 0x28c0, 0x2b3c, 0xad7e, 0xbe35, 0x1, 0x1);
        gbc.writeMem(0x34e8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x36a);
        EXPECT(gbc.pc(), 0x34ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01BC
        gbc.setState(0x33e4, 0xf090, 0xe220, 0x9bbe, 0x69d8, 0xdca4, 0x0, 0x1);
        gbc.writeMem(0x33e4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf090);
        EXPECT(gbc.pc(), 0x33e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01BD
        gbc.setState(0xb9e3, 0x6e7, 0x2a70, 0xecd5, 0x3c07, 0xdd3, 0x1, 0x0);
        gbc.writeMem(0xb9e3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6e7);
        EXPECT(gbc.pc(), 0xb9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9e3), 0xcb);
        EXPECT(gbc.readMem(0xb9e4), 0x41);
        // CB 41 01BF
        gbc.setState(0xd7f6, 0xebc7, 0x9590, 0xe5f3, 0x2a46, 0x4a15, 0x1, 0x0);
        gbc.writeMem(0xd7f6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xebc7);
        EXPECT(gbc.pc(), 0xd7f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f6), 0xcb);
        EXPECT(gbc.readMem(0xd7f7), 0x41);
        // CB 41 01C0
        gbc.setState(0xeb1e, 0x5461, 0x5ff0, 0x3088, 0xfdd8, 0xeadd, 0x1, 0x1);
        gbc.writeMem(0xeb1e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5461);
        EXPECT(gbc.pc(), 0xeb20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb1e), 0xcb);
        EXPECT(gbc.readMem(0xeb1f), 0x41);
        // CB 41 01C1
        gbc.setState(0x79d3, 0x2215, 0xa890, 0xcc8b, 0x7dea, 0x9759, 0x1, 0x0);
        gbc.writeMem(0x79d3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2215);
        EXPECT(gbc.pc(), 0x79d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01C2
        gbc.setState(0x79ae, 0x61e9, 0x5ac0, 0x6e44, 0xbb0f, 0xf5bd, 0x1, 0x1);
        gbc.writeMem(0x79ae, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x61e9);
        EXPECT(gbc.pc(), 0x79b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01C3
        gbc.setState(0x46ef, 0xbdf2, 0xe660, 0x310b, 0xdd5f, 0x999f, 0x1, 0x1);
        gbc.writeMem(0x46ef, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbdf2);
        EXPECT(gbc.pc(), 0x46f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01C4
        gbc.setState(0x3e7b, 0x8582, 0xa0a0, 0xac24, 0xaf45, 0x3c67, 0x1, 0x0);
        gbc.writeMem(0x3e7b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8582);
        EXPECT(gbc.pc(), 0x3e7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01C5
        gbc.setState(0x6cf6, 0x8e4f, 0xf080, 0xd8e4, 0xf2e8, 0x9f0f, 0x0, 0x0);
        gbc.writeMem(0x6cf6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8e4f);
        EXPECT(gbc.pc(), 0x6cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01C6
        gbc.setState(0xb3d3, 0x5908, 0x19e0, 0x404d, 0x1eb0, 0x667d, 0x0, 0x1);
        gbc.writeMem(0xb3d3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5908);
        EXPECT(gbc.pc(), 0xb3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d3), 0xcb);
        EXPECT(gbc.readMem(0xb3d4), 0x41);
        // CB 41 01C8
        gbc.setState(0xea9a, 0x4d66, 0xb510, 0x8596, 0xf378, 0x71dd, 0x1, 0x1);
        gbc.writeMem(0xea9a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4d66);
        EXPECT(gbc.pc(), 0xea9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea9a), 0xcb);
        EXPECT(gbc.readMem(0xea9b), 0x41);
        // CB 41 01C9
        gbc.setState(0x37fe, 0x4437, 0x5cd0, 0x73bd, 0xfaff, 0xfa99, 0x0, 0x0);
        gbc.writeMem(0x37fe, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4437);
        EXPECT(gbc.pc(), 0x3800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01CA
        gbc.setState(0xe220, 0x8c9, 0x9a90, 0x55c4, 0x62aa, 0x54cb, 0x1, 0x0);
        gbc.writeMem(0xe220, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8c9);
        EXPECT(gbc.pc(), 0xe222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe220), 0xcb);
        EXPECT(gbc.readMem(0xe221), 0x41);
        // CB 41 01CB
        gbc.setState(0x6abb, 0x8e8b, 0x14f0, 0x8947, 0x7e65, 0xbe9f, 0x0, 0x0);
        gbc.writeMem(0x6abb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8e8b);
        EXPECT(gbc.pc(), 0x6abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01CC
        gbc.setState(0xef24, 0xd9d8, 0x3ee0, 0x37a2, 0xde22, 0x7d05, 0x0, 0x1);
        gbc.writeMem(0xef24, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd9d8);
        EXPECT(gbc.pc(), 0xef26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef24), 0xcb);
        EXPECT(gbc.readMem(0xef25), 0x41);
        // CB 41 01CD
        gbc.setState(0x6193, 0x8681, 0x7660, 0x7709, 0xe5a7, 0x300b, 0x1, 0x1);
        gbc.writeMem(0x6193, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8681);
        EXPECT(gbc.pc(), 0x6195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01CE
        gbc.setState(0x1b36, 0xf35e, 0x72e0, 0xc7b4, 0xe34b, 0x4faa, 0x0, 0x0);
        gbc.writeMem(0x1b36, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf35e);
        EXPECT(gbc.pc(), 0x1b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01CF
        gbc.setState(0xd6f7, 0xa549, 0xffc0, 0x5dd9, 0xa3e3, 0x62bd, 0x1, 0x1);
        gbc.writeMem(0xd6f7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa549);
        EXPECT(gbc.pc(), 0xd6f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f7), 0xcb);
        EXPECT(gbc.readMem(0xd6f8), 0x41);
        // CB 41 01D0
        gbc.setState(0xa6f5, 0xdf0b, 0xf970, 0x99f1, 0x3f4c, 0x90e6, 0x1, 0x0);
        gbc.writeMem(0xa6f5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdf0b);
        EXPECT(gbc.pc(), 0xa6f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6f5), 0xcb);
        EXPECT(gbc.readMem(0xa6f6), 0x41);
        // CB 41 01D1
        gbc.setState(0x4caf, 0x9a0f, 0x7b0, 0xf872, 0x76b, 0x15e9, 0x1, 0x0);
        gbc.writeMem(0x4caf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9a0f);
        EXPECT(gbc.pc(), 0x4cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01D2
        gbc.setState(0x27f2, 0x3779, 0xe630, 0x981c, 0x22a0, 0x18e5, 0x1, 0x0);
        gbc.writeMem(0x27f2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3779);
        EXPECT(gbc.pc(), 0x27f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01D3
        gbc.setState(0x83e, 0x265d, 0x9c70, 0xd34f, 0x8dd4, 0xf889, 0x1, 0x1);
        gbc.writeMem(0x83e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x265d);
        EXPECT(gbc.pc(), 0x840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01D4
        gbc.setState(0x2294, 0x37d0, 0x1030, 0x214e, 0x5eb1, 0xb0b, 0x1, 0x0);
        gbc.writeMem(0x2294, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x37d0);
        EXPECT(gbc.pc(), 0x2296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01D5
        gbc.setState(0x42d8, 0xd7f0, 0xd740, 0x3bc1, 0x3b24, 0xa1b6, 0x0, 0x1);
        gbc.writeMem(0x42d8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd7f0);
        EXPECT(gbc.pc(), 0x42da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01D6
        gbc.setState(0x2aee, 0x3f2c, 0xfff0, 0xb5ce, 0x27d3, 0x5df0, 0x1, 0x1);
        gbc.writeMem(0x2aee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3f2c);
        EXPECT(gbc.pc(), 0x2af0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01D7
        gbc.setState(0x9c9, 0x5055, 0xa360, 0xf916, 0xed68, 0xcccf, 0x0, 0x1);
        gbc.writeMem(0x9c9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5055);
        EXPECT(gbc.pc(), 0x9cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01D8
        gbc.setState(0x9da1, 0xa20f, 0xe010, 0xd23b, 0x3d9b, 0xd76b, 0x0, 0x1);
        gbc.writeMem(0x9da1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa20f);
        EXPECT(gbc.pc(), 0x9da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da1), 0xcb);
        EXPECT(gbc.readMem(0x9da2), 0x41);
        // CB 41 01D9
        gbc.setState(0x37d2, 0x4be7, 0x5380, 0xdae9, 0x1485, 0xa1ac, 0x0, 0x1);
        gbc.writeMem(0x37d2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4be7);
        EXPECT(gbc.pc(), 0x37d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01DA
        gbc.setState(0x4091, 0x7247, 0x85f0, 0x25d7, 0x3e88, 0x7f4f, 0x1, 0x0);
        gbc.writeMem(0x4091, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7247);
        EXPECT(gbc.pc(), 0x4093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01DB
        gbc.setState(0xb1a9, 0x7603, 0x1030, 0xdc28, 0x79b8, 0xbe2b, 0x0, 0x1);
        gbc.writeMem(0xb1a9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7603);
        EXPECT(gbc.pc(), 0xb1ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a9), 0xcb);
        EXPECT(gbc.readMem(0xb1aa), 0x41);
        // CB 41 01DC
        gbc.setState(0x461e, 0xaf59, 0xe1d0, 0x9efa, 0xa3b6, 0xeb45, 0x0, 0x1);
        gbc.writeMem(0x461e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xaf59);
        EXPECT(gbc.pc(), 0x4620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01DD
        gbc.setState(0x4a6f, 0xc9c8, 0x9aa0, 0xf47, 0x5336, 0x90c7, 0x1, 0x0);
        gbc.writeMem(0x4a6f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc9c8);
        EXPECT(gbc.pc(), 0x4a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01DE
        gbc.setState(0xd461, 0xe9dd, 0xc210, 0xb639, 0xdb5d, 0xebb4, 0x1, 0x0);
        gbc.writeMem(0xd461, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe9dd);
        EXPECT(gbc.pc(), 0xd463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd461), 0xcb);
        EXPECT(gbc.readMem(0xd462), 0x41);
        // CB 41 01DF
        gbc.setState(0xac5f, 0x2d98, 0x8b20, 0xda18, 0x7360, 0x153c, 0x1, 0x1);
        gbc.writeMem(0xac5f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2d98);
        EXPECT(gbc.pc(), 0xac61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac5f), 0xcb);
        EXPECT(gbc.readMem(0xac60), 0x41);
        // CB 41 01E0
        gbc.setState(0x5086, 0x46ca, 0xdae0, 0x3492, 0x4e5c, 0xe747, 0x0, 0x1);
        gbc.writeMem(0x5086, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x46ca);
        EXPECT(gbc.pc(), 0x5088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01E1
        gbc.setState(0xe13e, 0x2311, 0xff90, 0xb67d, 0xde40, 0x6727, 0x1, 0x1);
        gbc.writeMem(0xe13e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2311);
        EXPECT(gbc.pc(), 0xe140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe13e), 0xcb);
        EXPECT(gbc.readMem(0xe13f), 0x41);
        // CB 41 01E2
        gbc.setState(0xda19, 0x4341, 0x3b20, 0x31cf, 0xd330, 0xc595, 0x1, 0x0);
        gbc.writeMem(0xda19, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4341);
        EXPECT(gbc.pc(), 0xda1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda19), 0xcb);
        EXPECT(gbc.readMem(0xda1a), 0x41);
        // CB 41 01E3
        gbc.setState(0xb0d0, 0x3d27, 0x7d50, 0xc98c, 0x86f4, 0xb53a, 0x1, 0x0);
        gbc.writeMem(0xb0d0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3d27);
        EXPECT(gbc.pc(), 0xb0d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d0), 0xcb);
        EXPECT(gbc.readMem(0xb0d1), 0x41);
        // CB 41 01E4
        gbc.setState(0x395b, 0x1b81, 0x93f0, 0x429f, 0xe620, 0xea9c, 0x1, 0x1);
        gbc.writeMem(0x395b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1b81);
        EXPECT(gbc.pc(), 0x395d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01E5
        gbc.setState(0xac78, 0x29e1, 0x46c0, 0xa45e, 0xa19d, 0x7237, 0x1, 0x1);
        gbc.writeMem(0xac78, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x29e1);
        EXPECT(gbc.pc(), 0xac7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac78), 0xcb);
        EXPECT(gbc.readMem(0xac79), 0x41);
        // CB 41 01E6
        gbc.setState(0x9dcb, 0x4605, 0x36a0, 0x8edf, 0x3370, 0xd1ca, 0x0, 0x0);
        gbc.writeMem(0x9dcb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4605);
        EXPECT(gbc.pc(), 0x9dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dcb), 0xcb);
        EXPECT(gbc.readMem(0x9dcc), 0x41);
        // CB 41 01E7
        gbc.setState(0xdd57, 0xd1ba, 0xb600, 0x1cc7, 0x3052, 0x5fa3, 0x1, 0x0);
        gbc.writeMem(0xdd57, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd1ba);
        EXPECT(gbc.pc(), 0xdd59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd57), 0xcb);
        EXPECT(gbc.readMem(0xdd58), 0x41);
        // CB 41 01E8
        gbc.setState(0x600a, 0x4cdb, 0xe860, 0xaa16, 0xe4c8, 0xf88a, 0x1, 0x1);
        gbc.writeMem(0x600a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4cdb);
        EXPECT(gbc.pc(), 0x600c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01E9
        gbc.setState(0x2f3b, 0xde62, 0xd600, 0xdc14, 0x9daf, 0xb475, 0x0, 0x1);
        gbc.writeMem(0x2f3b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xde62);
        EXPECT(gbc.pc(), 0x2f3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01EA
        gbc.setState(0xc739, 0x17d7, 0x3a90, 0x33e1, 0x38a5, 0xd78b, 0x0, 0x1);
        gbc.writeMem(0xc739, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x17d7);
        EXPECT(gbc.pc(), 0xc73b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc739), 0xcb);
        EXPECT(gbc.readMem(0xc73a), 0x41);
        // CB 41 01EB
        gbc.setState(0xf65, 0x8b22, 0xc6d0, 0x65ee, 0x5ae6, 0x3aa8, 0x1, 0x1);
        gbc.writeMem(0xf65, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8b22);
        EXPECT(gbc.pc(), 0xf67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01EC
        gbc.setState(0x61c, 0xdb69, 0xc540, 0x870d, 0x2067, 0xedb4, 0x1, 0x1);
        gbc.writeMem(0x61c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdb69);
        EXPECT(gbc.pc(), 0x61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01ED
        gbc.setState(0x6287, 0x5770, 0x8820, 0xd53f, 0xb60f, 0xe7f0, 0x0, 0x1);
        gbc.writeMem(0x6287, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5770);
        EXPECT(gbc.pc(), 0x6289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01EE
        gbc.setState(0x612d, 0xaaf0, 0xf110, 0x3f5a, 0x72d8, 0x1556, 0x0, 0x1);
        gbc.writeMem(0x612d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xaaf0);
        EXPECT(gbc.pc(), 0x612f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01EF
        gbc.setState(0x7dc6, 0x778e, 0x4f10, 0x8a99, 0x1cb7, 0x41ac, 0x1, 0x1);
        gbc.writeMem(0x7dc6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x778e);
        EXPECT(gbc.pc(), 0x7dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01F0
        gbc.setState(0x47c, 0x7583, 0xd820, 0x9bc0, 0x827c, 0x78bd, 0x1, 0x1);
        gbc.writeMem(0x47c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7583);
        EXPECT(gbc.pc(), 0x47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01F1
        gbc.setState(0xcc72, 0x8000, 0x25c0, 0x764, 0xcf77, 0x7018, 0x0, 0x0);
        gbc.writeMem(0xcc72, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8000);
        EXPECT(gbc.pc(), 0xcc74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc72), 0xcb);
        EXPECT(gbc.readMem(0xcc73), 0x41);
        // CB 41 01F2
        gbc.setState(0x25a1, 0xc0f8, 0x8370, 0xe324, 0xf5d8, 0x1ab0, 0x0, 0x1);
        gbc.writeMem(0x25a1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc0f8);
        EXPECT(gbc.pc(), 0x25a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01F3
        gbc.setState(0x9567, 0x53c3, 0xe7b0, 0xb1b1, 0x6ae0, 0xaaa7, 0x1, 0x0);
        gbc.writeMem(0x9567, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x53c3);
        EXPECT(gbc.pc(), 0x9569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9567), 0xcb);
        EXPECT(gbc.readMem(0x9568), 0x41);
        // CB 41 01F4
        gbc.setState(0x9922, 0xd8a4, 0x1190, 0xe054, 0x1588, 0xc51c, 0x0, 0x0);
        gbc.writeMem(0x9922, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd8a4);
        EXPECT(gbc.pc(), 0x9924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9922), 0xcb);
        EXPECT(gbc.readMem(0x9923), 0x41);
        // CB 41 01F5
        gbc.setState(0xea9d, 0x628a, 0xb050, 0x5134, 0x7780, 0x1851, 0x1, 0x0);
        gbc.writeMem(0xea9d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x628a);
        EXPECT(gbc.pc(), 0xea9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea9d), 0xcb);
        EXPECT(gbc.readMem(0xea9e), 0x41);
        // CB 41 01F6
        gbc.setState(0x106a, 0x516b, 0xa630, 0x9836, 0x41b5, 0xd095, 0x0, 0x1);
        gbc.writeMem(0x106a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x516b);
        EXPECT(gbc.pc(), 0x106c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01F8
        gbc.setState(0x6a44, 0x2fa6, 0xdb30, 0x6356, 0xb830, 0x8871, 0x0, 0x1);
        gbc.writeMem(0x6a44, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2fa6);
        EXPECT(gbc.pc(), 0x6a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01F9
        gbc.setState(0x31b0, 0x6e75, 0x4f0, 0xad3, 0x2797, 0x949c, 0x0, 0x0);
        gbc.writeMem(0x31b0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6e75);
        EXPECT(gbc.pc(), 0x31b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01FA
        gbc.setState(0x3887, 0xc3e1, 0xc510, 0xd808, 0x228, 0x1af4, 0x0, 0x0);
        gbc.writeMem(0x3887, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc3e1);
        EXPECT(gbc.pc(), 0x3889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01FB
        gbc.setState(0x66f3, 0x9ae6, 0xde10, 0x1133, 0x8174, 0x61a5, 0x1, 0x1);
        gbc.writeMem(0x66f3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9ae6);
        EXPECT(gbc.pc(), 0x66f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 01FC
        gbc.setState(0x87df, 0xee3, 0x3e10, 0x39f9, 0x1ab2, 0x45b8, 0x0, 0x0);
        gbc.writeMem(0x87df, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xee3);
        EXPECT(gbc.pc(), 0x87e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87df), 0xcb);
        EXPECT(gbc.readMem(0x87e0), 0x41);
        // CB 41 01FD
        gbc.setState(0x5bf3, 0x58a9, 0x2820, 0x279c, 0x9b79, 0xcf9, 0x0, 0x1);
        gbc.writeMem(0x5bf3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x58a9);
        EXPECT(gbc.pc(), 0x5bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 01FE
        gbc.setState(0xe31, 0x6ee5, 0xbcf0, 0xa914, 0xd7c5, 0xa98b, 0x0, 0x0);
        gbc.writeMem(0xe31, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6ee5);
        EXPECT(gbc.pc(), 0xe33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0200
        gbc.setState(0xd785, 0xb51, 0x6f30, 0x6878, 0xe11d, 0x4f09, 0x0, 0x0);
        gbc.writeMem(0xd785, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb51);
        EXPECT(gbc.pc(), 0xd787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd785), 0xcb);
        EXPECT(gbc.readMem(0xd786), 0x41);
        // CB 41 0201
        gbc.setState(0xe271, 0x5089, 0xa3c0, 0xba0b, 0x3356, 0xf6b8, 0x0, 0x1);
        gbc.writeMem(0xe271, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5089);
        EXPECT(gbc.pc(), 0xe273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe271), 0xcb);
        EXPECT(gbc.readMem(0xe272), 0x41);
        // CB 41 0202
        gbc.setState(0x518d, 0xaa76, 0x4b50, 0x436, 0x5e2a, 0x604d, 0x0, 0x0);
        gbc.writeMem(0x518d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xaa76);
        EXPECT(gbc.pc(), 0x518f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0203
        gbc.setState(0x770e, 0x9e33, 0xdd70, 0x55f5, 0x865f, 0x12f9, 0x0, 0x0);
        gbc.writeMem(0x770e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9e33);
        EXPECT(gbc.pc(), 0x7710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0204
        gbc.setState(0xcf94, 0x4b2, 0x9580, 0xde2b, 0x1c52, 0x692e, 0x0, 0x0);
        gbc.writeMem(0xcf94, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4b2);
        EXPECT(gbc.pc(), 0xcf96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf94), 0xcb);
        EXPECT(gbc.readMem(0xcf95), 0x41);
        // CB 41 0205
        gbc.setState(0xb8e6, 0x33e1, 0x8560, 0x9c23, 0x640a, 0x29cf, 0x1, 0x0);
        gbc.writeMem(0xb8e6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x33e1);
        EXPECT(gbc.pc(), 0xb8e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8e6), 0xcb);
        EXPECT(gbc.readMem(0xb8e7), 0x41);
        // CB 41 0207
        gbc.setState(0x5692, 0xc423, 0xc4a0, 0x8ac2, 0x1b90, 0x67b7, 0x0, 0x1);
        gbc.writeMem(0x5692, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc423);
        EXPECT(gbc.pc(), 0x5694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0208
        gbc.setState(0x40ee, 0x436b, 0xb6c0, 0xa2d1, 0xfe8c, 0x3f8f, 0x1, 0x1);
        gbc.writeMem(0x40ee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x436b);
        EXPECT(gbc.pc(), 0x40f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0209
        gbc.setState(0xeea2, 0xe59e, 0xd910, 0x96d5, 0xe453, 0xf71a, 0x1, 0x0);
        gbc.writeMem(0xeea2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe59e);
        EXPECT(gbc.pc(), 0xeea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea2), 0xcb);
        EXPECT(gbc.readMem(0xeea3), 0x41);
        // CB 41 020A
        gbc.setState(0x7163, 0xe41f, 0xe2b0, 0x799, 0x3aec, 0x1ab0, 0x0, 0x1);
        gbc.writeMem(0x7163, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe41f);
        EXPECT(gbc.pc(), 0x7165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 020B
        gbc.setState(0xd407, 0x7c5f, 0x26d0, 0x309b, 0x4e84, 0x5778, 0x1, 0x0);
        gbc.writeMem(0xd407, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7c5f);
        EXPECT(gbc.pc(), 0xd409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd407), 0xcb);
        EXPECT(gbc.readMem(0xd408), 0x41);
        // CB 41 020C
        gbc.setState(0x5a00, 0xf4ed, 0x5a0, 0xc837, 0xe6fa, 0xf280, 0x0, 0x1);
        gbc.writeMem(0x5a00, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf4ed);
        EXPECT(gbc.pc(), 0x5a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 020D
        gbc.setState(0x92cf, 0x63c0, 0x1a0, 0xf547, 0x54a2, 0xe540, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x63c0);
        EXPECT(gbc.pc(), 0x92d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92cf), 0xcb);
        EXPECT(gbc.readMem(0x92d0), 0x41);
        // CB 41 020E
        gbc.setState(0xd48b, 0x626d, 0xcfd0, 0x85ec, 0xd542, 0x59e0, 0x0, 0x1);
        gbc.writeMem(0xd48b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x626d);
        EXPECT(gbc.pc(), 0xd48d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd48b), 0xcb);
        EXPECT(gbc.readMem(0xd48c), 0x41);
        // CB 41 020F
        gbc.setState(0x683e, 0xd869, 0x6b10, 0x162d, 0xc058, 0x61f3, 0x1, 0x0);
        gbc.writeMem(0x683e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd869);
        EXPECT(gbc.pc(), 0x6840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0210
        gbc.setState(0x66d3, 0x7fc3, 0x3fb0, 0xfd36, 0x6deb, 0x3248, 0x0, 0x1);
        gbc.writeMem(0x66d3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7fc3);
        EXPECT(gbc.pc(), 0x66d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0211
        gbc.setState(0x6ba8, 0x44d, 0xe300, 0x158d, 0x3195, 0xec40, 0x1, 0x1);
        gbc.writeMem(0x6ba8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x44d);
        EXPECT(gbc.pc(), 0x6baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0212
        gbc.setState(0x96e9, 0xddae, 0x2380, 0xf3b8, 0xf793, 0xb7f6, 0x1, 0x1);
        gbc.writeMem(0x96e9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xddae);
        EXPECT(gbc.pc(), 0x96eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96e9), 0xcb);
        EXPECT(gbc.readMem(0x96ea), 0x41);
        // CB 41 0213
        gbc.setState(0x4d3c, 0xef0b, 0x31c0, 0x732f, 0x137e, 0xc051, 0x0, 0x0);
        gbc.writeMem(0x4d3c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xef0b);
        EXPECT(gbc.pc(), 0x4d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0214
        gbc.setState(0x596e, 0xb7c, 0xa2c0, 0x4dc6, 0x404e, 0x24e1, 0x0, 0x0);
        gbc.writeMem(0x596e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb7c);
        EXPECT(gbc.pc(), 0x5970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0215
        gbc.setState(0x59cc, 0x36c, 0x1d30, 0xc3e7, 0x2082, 0x6012, 0x1, 0x1);
        gbc.writeMem(0x59cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x36c);
        EXPECT(gbc.pc(), 0x59ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0216
        gbc.setState(0xda86, 0x733b, 0x3e60, 0x330a, 0x52d9, 0xbbae, 0x1, 0x0);
        gbc.writeMem(0xda86, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x733b);
        EXPECT(gbc.pc(), 0xda88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda86), 0xcb);
        EXPECT(gbc.readMem(0xda87), 0x41);
        // CB 41 0217
        gbc.setState(0x52ec, 0xc6f2, 0x8920, 0xa8b8, 0xb2ef, 0x4a94, 0x0, 0x1);
        gbc.writeMem(0x52ec, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc6f2);
        EXPECT(gbc.pc(), 0x52ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0218
        gbc.setState(0xc9b0, 0x5a37, 0x93f0, 0x82e2, 0xb7a5, 0x27a2, 0x1, 0x0);
        gbc.writeMem(0xc9b0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5a37);
        EXPECT(gbc.pc(), 0xc9b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b0), 0xcb);
        EXPECT(gbc.readMem(0xc9b1), 0x41);
        // CB 41 0219
        gbc.setState(0x386d, 0x81f2, 0x3ad0, 0x322f, 0x346e, 0x8205, 0x0, 0x1);
        gbc.writeMem(0x386d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x81f2);
        EXPECT(gbc.pc(), 0x386f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 021B
        gbc.setState(0x4c15, 0x5a40, 0x2c0, 0xbedb, 0xb0f1, 0xd7b, 0x0, 0x1);
        gbc.writeMem(0x4c15, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5a40);
        EXPECT(gbc.pc(), 0x4c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 021C
        gbc.setState(0xbb73, 0x9963, 0x6020, 0xdb01, 0x9096, 0x16e2, 0x0, 0x1);
        gbc.writeMem(0xbb73, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9963);
        EXPECT(gbc.pc(), 0xbb75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb73), 0xcb);
        EXPECT(gbc.readMem(0xbb74), 0x41);
        // CB 41 021D
        gbc.setState(0x3bb7, 0xc750, 0x2ee0, 0xb68, 0x4053, 0xfa1b, 0x0, 0x1);
        gbc.writeMem(0x3bb7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc750);
        EXPECT(gbc.pc(), 0x3bb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 021E
        gbc.setState(0xe326, 0xc739, 0x3c30, 0xd187, 0x14f6, 0x1321, 0x0, 0x1);
        gbc.writeMem(0xe326, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc739);
        EXPECT(gbc.pc(), 0xe328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe326), 0xcb);
        EXPECT(gbc.readMem(0xe327), 0x41);
        // CB 41 021F
        gbc.setState(0x3ace, 0xfe0a, 0x1190, 0x71e1, 0xee58, 0xcecf, 0x0, 0x1);
        gbc.writeMem(0x3ace, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfe0a);
        EXPECT(gbc.pc(), 0x3ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0220
        gbc.setState(0xa772, 0xc83f, 0x6b90, 0x2062, 0x4593, 0xf30c, 0x0, 0x0);
        gbc.writeMem(0xa772, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc83f);
        EXPECT(gbc.pc(), 0xa774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa772), 0xcb);
        EXPECT(gbc.readMem(0xa773), 0x41);
        // CB 41 0221
        gbc.setState(0x56f0, 0x1cfe, 0xa680, 0x9306, 0xe83f, 0xfe7f, 0x0, 0x1);
        gbc.writeMem(0x56f0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1cfe);
        EXPECT(gbc.pc(), 0x56f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0222
        gbc.setState(0x7dee, 0x1fcb, 0x9370, 0xe3fb, 0xd83e, 0x7b38, 0x1, 0x1);
        gbc.writeMem(0x7dee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1fcb);
        EXPECT(gbc.pc(), 0x7df0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0223
        gbc.setState(0xecfa, 0x301c, 0x9f20, 0x50b9, 0xf98c, 0x2f9c, 0x1, 0x1);
        gbc.writeMem(0xecfa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x301c);
        EXPECT(gbc.pc(), 0xecfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfa), 0xcb);
        EXPECT(gbc.readMem(0xecfb), 0x41);
        // CB 41 0224
        gbc.setState(0x6d95, 0xa0ed, 0xab90, 0x6da5, 0xeacd, 0xa04f, 0x1, 0x1);
        gbc.writeMem(0x6d95, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa0ed);
        EXPECT(gbc.pc(), 0x6d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0225
        gbc.setState(0x208e, 0x59dd, 0x11a0, 0x16aa, 0xaa47, 0x5bd6, 0x0, 0x1);
        gbc.writeMem(0x208e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x59dd);
        EXPECT(gbc.pc(), 0x2090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0226
        gbc.setState(0xb4c7, 0x2aaa, 0xfd60, 0x1811, 0x475, 0x4977, 0x1, 0x1);
        gbc.writeMem(0xb4c7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2aaa);
        EXPECT(gbc.pc(), 0xb4c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4c7), 0xcb);
        EXPECT(gbc.readMem(0xb4c8), 0x41);
        // CB 41 0227
        gbc.setState(0xd10b, 0xf0aa, 0xd200, 0xdf9b, 0x8ea1, 0x7978, 0x1, 0x0);
        gbc.writeMem(0xd10b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf0aa);
        EXPECT(gbc.pc(), 0xd10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10b), 0xcb);
        EXPECT(gbc.readMem(0xd10c), 0x41);
        // CB 41 0228
        gbc.setState(0x8220, 0x965e, 0xff90, 0xa08, 0x34fb, 0x883d, 0x1, 0x0);
        gbc.writeMem(0x8220, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x965e);
        EXPECT(gbc.pc(), 0x8222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8220), 0xcb);
        EXPECT(gbc.readMem(0x8221), 0x41);
        // CB 41 0229
        gbc.setState(0x1755, 0x61a3, 0x1050, 0x65ce, 0x662, 0xaac9, 0x0, 0x1);
        gbc.writeMem(0x1755, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x61a3);
        EXPECT(gbc.pc(), 0x1757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 022A
        gbc.setState(0x8fb0, 0x52c0, 0x4f90, 0x110c, 0xf506, 0xcd3, 0x1, 0x1);
        gbc.writeMem(0x8fb0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x52c0);
        EXPECT(gbc.pc(), 0x8fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb0), 0xcb);
        EXPECT(gbc.readMem(0x8fb1), 0x41);
        // CB 41 022B
        gbc.setState(0x8fcc, 0x7656, 0x6200, 0x788, 0x2902, 0xd807, 0x1, 0x0);
        gbc.writeMem(0x8fcc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7656);
        EXPECT(gbc.pc(), 0x8fce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fcc), 0xcb);
        EXPECT(gbc.readMem(0x8fcd), 0x41);
        // CB 41 022C
        gbc.setState(0x6d06, 0xfc27, 0x80e0, 0x1895, 0xa897, 0x17a5, 0x0, 0x1);
        gbc.writeMem(0x6d06, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfc27);
        EXPECT(gbc.pc(), 0x6d08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 022D
        gbc.setState(0x37e5, 0xa89f, 0x5090, 0x72c7, 0x268c, 0xbfc9, 0x0, 0x0);
        gbc.writeMem(0x37e5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa89f);
        EXPECT(gbc.pc(), 0x37e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 022E
        gbc.setState(0xb283, 0xfa2e, 0x91d0, 0x9b4c, 0x2c48, 0xf4ba, 0x0, 0x1);
        gbc.writeMem(0xb283, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfa2e);
        EXPECT(gbc.pc(), 0xb285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb283), 0xcb);
        EXPECT(gbc.readMem(0xb284), 0x41);
        // CB 41 022F
        gbc.setState(0x31f3, 0xf20a, 0x8fd0, 0x2392, 0xac37, 0x3513, 0x0, 0x0);
        gbc.writeMem(0x31f3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf20a);
        EXPECT(gbc.pc(), 0x31f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0230
        gbc.setState(0xa2a1, 0xf46c, 0xef60, 0x13ea, 0x4413, 0x63c0, 0x0, 0x0);
        gbc.writeMem(0xa2a1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf46c);
        EXPECT(gbc.pc(), 0xa2a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2a1), 0xcb);
        EXPECT(gbc.readMem(0xa2a2), 0x41);
        // CB 41 0231
        gbc.setState(0xa348, 0x5745, 0xbcf0, 0x2f25, 0x9545, 0x4668, 0x0, 0x0);
        gbc.writeMem(0xa348, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5745);
        EXPECT(gbc.pc(), 0xa34a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa348), 0xcb);
        EXPECT(gbc.readMem(0xa349), 0x41);
        // CB 41 0232
        gbc.setState(0xd5b1, 0xf599, 0xca90, 0x960b, 0xa0fd, 0x7b20, 0x0, 0x0);
        gbc.writeMem(0xd5b1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf599);
        EXPECT(gbc.pc(), 0xd5b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b1), 0xcb);
        EXPECT(gbc.readMem(0xd5b2), 0x41);
        // CB 41 0233
        gbc.setState(0xd1f0, 0xa36a, 0x49b0, 0x7a0f, 0x7a7f, 0x2287, 0x1, 0x0);
        gbc.writeMem(0xd1f0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa36a);
        EXPECT(gbc.pc(), 0xd1f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f0), 0xcb);
        EXPECT(gbc.readMem(0xd1f1), 0x41);
        // CB 41 0235
        gbc.setState(0x9eef, 0x1e22, 0x3210, 0x21e6, 0xe5a5, 0x9e5a, 0x0, 0x1);
        gbc.writeMem(0x9eef, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1e22);
        EXPECT(gbc.pc(), 0x9ef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eef), 0xcb);
        EXPECT(gbc.readMem(0x9ef0), 0x41);
        // CB 41 0236
        gbc.setState(0x6d04, 0xf080, 0xf590, 0xbe29, 0x326d, 0xeb5f, 0x0, 0x1);
        gbc.writeMem(0x6d04, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf080);
        EXPECT(gbc.pc(), 0x6d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0237
        gbc.setState(0x2159, 0x8537, 0x7ba0, 0x62dc, 0x2947, 0x75a0, 0x1, 0x0);
        gbc.writeMem(0x2159, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8537);
        EXPECT(gbc.pc(), 0x215b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0238
        gbc.setState(0x186f, 0x7e5f, 0x5da0, 0xe92b, 0x5c10, 0x14a7, 0x1, 0x1);
        gbc.writeMem(0x186f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7e5f);
        EXPECT(gbc.pc(), 0x1871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0239
        gbc.setState(0x351c, 0x32fb, 0xf1f0, 0x6bab, 0xfb83, 0xab57, 0x0, 0x0);
        gbc.writeMem(0x351c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x32fb);
        EXPECT(gbc.pc(), 0x351e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 023A
        gbc.setState(0x7dfb, 0x39de, 0x5830, 0xdf75, 0x1764, 0x9a51, 0x1, 0x1);
        gbc.writeMem(0x7dfb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x39de);
        EXPECT(gbc.pc(), 0x7dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 023B
        gbc.setState(0xc58f, 0xf72b, 0x4c0, 0xd2d8, 0x1070, 0xc4bd, 0x0, 0x0);
        gbc.writeMem(0xc58f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf72b);
        EXPECT(gbc.pc(), 0xc591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc58f), 0xcb);
        EXPECT(gbc.readMem(0xc590), 0x41);
        // CB 41 023C
        gbc.setState(0x12a2, 0x5dab, 0x5a60, 0x62d, 0xf32d, 0x1346, 0x0, 0x1);
        gbc.writeMem(0x12a2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5dab);
        EXPECT(gbc.pc(), 0x12a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 023D
        gbc.setState(0xa974, 0xdebc, 0x8440, 0x1a27, 0x75dd, 0x224c, 0x1, 0x0);
        gbc.writeMem(0xa974, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdebc);
        EXPECT(gbc.pc(), 0xa976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa974), 0xcb);
        EXPECT(gbc.readMem(0xa975), 0x41);
        // CB 41 023F
        gbc.setState(0x836e, 0x266a, 0x7510, 0x39e5, 0x3df7, 0xbfd2, 0x0, 0x0);
        gbc.writeMem(0x836e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x266a);
        EXPECT(gbc.pc(), 0x8370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x836e), 0xcb);
        EXPECT(gbc.readMem(0x836f), 0x41);
        // CB 41 0240
        gbc.setState(0xc2a4, 0xfab1, 0x6910, 0xbb32, 0x83e7, 0xba47, 0x1, 0x1);
        gbc.writeMem(0xc2a4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfab1);
        EXPECT(gbc.pc(), 0xc2a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2a4), 0xcb);
        EXPECT(gbc.readMem(0xc2a5), 0x41);
        // CB 41 0241
        gbc.setState(0x4c11, 0x1fa5, 0xfe30, 0xd896, 0x943b, 0x9ee3, 0x0, 0x1);
        gbc.writeMem(0x4c11, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1fa5);
        EXPECT(gbc.pc(), 0x4c13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0242
        gbc.setState(0x1c15, 0x9c14, 0x4690, 0xee24, 0xf5d6, 0x148f, 0x0, 0x0);
        gbc.writeMem(0x1c15, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9c14);
        EXPECT(gbc.pc(), 0x1c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0243
        gbc.setState(0x5695, 0x8d45, 0xf140, 0xeb99, 0x2fbc, 0x78b, 0x0, 0x1);
        gbc.writeMem(0x5695, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8d45);
        EXPECT(gbc.pc(), 0x5697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0244
        gbc.setState(0x6555, 0x7005, 0x3ea0, 0xdece, 0x266c, 0x895c, 0x0, 0x1);
        gbc.writeMem(0x6555, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7005);
        EXPECT(gbc.pc(), 0x6557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0245
        gbc.setState(0x46df, 0x80a8, 0xb350, 0x64d1, 0xb65e, 0xc2c8, 0x0, 0x0);
        gbc.writeMem(0x46df, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x80a8);
        EXPECT(gbc.pc(), 0x46e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0246
        gbc.setState(0xcc92, 0x98c3, 0x8fb0, 0x693, 0x9af5, 0x8f40, 0x1, 0x0);
        gbc.writeMem(0xcc92, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x98c3);
        EXPECT(gbc.pc(), 0xcc94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc92), 0xcb);
        EXPECT(gbc.readMem(0xcc93), 0x41);
        // CB 41 0247
        gbc.setState(0x64d9, 0xf6ad, 0xb5c0, 0x51bb, 0x8376, 0x3602, 0x1, 0x0);
        gbc.writeMem(0x64d9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf6ad);
        EXPECT(gbc.pc(), 0x64db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0248
        gbc.setState(0x719b, 0x797d, 0xc330, 0x5455, 0xdd1a, 0x32a1, 0x1, 0x1);
        gbc.writeMem(0x719b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x797d);
        EXPECT(gbc.pc(), 0x719d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0249
        gbc.setState(0x2ce6, 0x7490, 0xbed0, 0x6ea1, 0xfc50, 0xdbcf, 0x0, 0x1);
        gbc.writeMem(0x2ce6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7490);
        EXPECT(gbc.pc(), 0x2ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 024A
        gbc.setState(0x3218, 0x2e14, 0x82b0, 0xe0eb, 0xd52e, 0x7a43, 0x1, 0x1);
        gbc.writeMem(0x3218, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2e14);
        EXPECT(gbc.pc(), 0x321a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 024B
        gbc.setState(0x6228, 0xdb4c, 0x6da0, 0xaeb3, 0x7288, 0x5410, 0x1, 0x0);
        gbc.writeMem(0x6228, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdb4c);
        EXPECT(gbc.pc(), 0x622a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 024C
        gbc.setState(0xd001, 0x4f4f, 0xf570, 0x8870, 0xc849, 0x7258, 0x1, 0x0);
        gbc.writeMem(0xd001, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4f4f);
        EXPECT(gbc.pc(), 0xd003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd001), 0xcb);
        EXPECT(gbc.readMem(0xd002), 0x41);
        // CB 41 024D
        gbc.setState(0x283a, 0xcd94, 0x1d90, 0x6c4f, 0xfddd, 0x47ed, 0x0, 0x0);
        gbc.writeMem(0x283a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcd94);
        EXPECT(gbc.pc(), 0x283c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 024E
        gbc.setState(0x5ac9, 0x8954, 0x6560, 0xe8e9, 0x1a06, 0x80d1, 0x1, 0x0);
        gbc.writeMem(0x5ac9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8954);
        EXPECT(gbc.pc(), 0x5acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 024F
        gbc.setState(0xc590, 0x4334, 0x9b60, 0x29a0, 0xbdbd, 0x7dbb, 0x1, 0x1);
        gbc.writeMem(0xc590, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4334);
        EXPECT(gbc.pc(), 0xc592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc590), 0xcb);
        EXPECT(gbc.readMem(0xc591), 0x41);
        // CB 41 0250
        gbc.setState(0x87fd, 0x5410, 0x2f80, 0x2cf8, 0x6ec8, 0x693e, 0x1, 0x0);
        gbc.writeMem(0x87fd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5410);
        EXPECT(gbc.pc(), 0x87ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87fd), 0xcb);
        EXPECT(gbc.readMem(0x87fe), 0x41);
        // CB 41 0251
        gbc.setState(0xdd6, 0x7fca, 0x5b10, 0x9214, 0x67ac, 0x4ea2, 0x0, 0x1);
        gbc.writeMem(0xdd6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7fca);
        EXPECT(gbc.pc(), 0xdd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0252
        gbc.setState(0x49bf, 0x8ccc, 0xc360, 0xd9e5, 0x29db, 0xe13e, 0x0, 0x1);
        gbc.writeMem(0x49bf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8ccc);
        EXPECT(gbc.pc(), 0x49c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0253
        gbc.setState(0xdd60, 0x223e, 0xf4e0, 0xa4ac, 0x49e8, 0xde57, 0x0, 0x0);
        gbc.writeMem(0xdd60, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x223e);
        EXPECT(gbc.pc(), 0xdd62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd60), 0xcb);
        EXPECT(gbc.readMem(0xdd61), 0x41);
        // CB 41 0254
        gbc.setState(0xec3c, 0xbe53, 0x3cf0, 0x5b3a, 0xa28f, 0x8f4b, 0x0, 0x1);
        gbc.writeMem(0xec3c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbe53);
        EXPECT(gbc.pc(), 0xec3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec3c), 0xcb);
        EXPECT(gbc.readMem(0xec3d), 0x41);
        // CB 41 0255
        gbc.setState(0x8cf7, 0x1f4c, 0xd520, 0x37a, 0x3053, 0x861b, 0x1, 0x1);
        gbc.writeMem(0x8cf7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1f4c);
        EXPECT(gbc.pc(), 0x8cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf7), 0xcb);
        EXPECT(gbc.readMem(0x8cf8), 0x41);
        // CB 41 0256
        gbc.setState(0xac34, 0x7383, 0x26c0, 0x6c5a, 0x1a36, 0x7a6d, 0x0, 0x0);
        gbc.writeMem(0xac34, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7383);
        EXPECT(gbc.pc(), 0xac36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac34), 0xcb);
        EXPECT(gbc.readMem(0xac35), 0x41);
        // CB 41 0257
        gbc.setState(0x6b32, 0x890, 0xc470, 0xbd06, 0xa463, 0xa44c, 0x0, 0x0);
        gbc.writeMem(0x6b32, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x890);
        EXPECT(gbc.pc(), 0x6b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0258
        gbc.setState(0x5d91, 0xa04f, 0x6f10, 0xf355, 0x5ca0, 0x4b0b, 0x0, 0x0);
        gbc.writeMem(0x5d91, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa04f);
        EXPECT(gbc.pc(), 0x5d93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0259
        gbc.setState(0xaf7e, 0xd008, 0x1dc0, 0xca9c, 0x48a, 0xc3f5, 0x1, 0x1);
        gbc.writeMem(0xaf7e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd008);
        EXPECT(gbc.pc(), 0xaf80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf7e), 0xcb);
        EXPECT(gbc.readMem(0xaf7f), 0x41);
        // CB 41 025A
        gbc.setState(0x11d6, 0x255f, 0xecd0, 0x7056, 0xdf4, 0x8520, 0x1, 0x1);
        gbc.writeMem(0x11d6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x255f);
        EXPECT(gbc.pc(), 0x11d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 025B
        gbc.setState(0x584f, 0x4bb0, 0xc3c0, 0xacf7, 0xbaf8, 0x9f96, 0x0, 0x0);
        gbc.writeMem(0x584f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4bb0);
        EXPECT(gbc.pc(), 0x5851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 025C
        gbc.setState(0x1e3e, 0x5a7b, 0xdd90, 0xaa38, 0x30ae, 0x6d11, 0x0, 0x0);
        gbc.writeMem(0x1e3e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5a7b);
        EXPECT(gbc.pc(), 0x1e40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 025D
        gbc.setState(0x82e, 0x3747, 0x4b20, 0xb81a, 0x1cda, 0xd3b, 0x0, 0x0);
        gbc.writeMem(0x82e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3747);
        EXPECT(gbc.pc(), 0x830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 025E
        gbc.setState(0xe2f1, 0x6b7d, 0xc2d0, 0xdf44, 0x72ce, 0xd165, 0x1, 0x1);
        gbc.writeMem(0xe2f1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6b7d);
        EXPECT(gbc.pc(), 0xe2f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2f1), 0xcb);
        EXPECT(gbc.readMem(0xe2f2), 0x41);
        // CB 41 025F
        gbc.setState(0x2f00, 0x53c3, 0x3710, 0xbcc3, 0x7138, 0x3159, 0x1, 0x0);
        gbc.writeMem(0x2f00, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x53c3);
        EXPECT(gbc.pc(), 0x2f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0260
        gbc.setState(0x1d20, 0xeafa, 0xefe0, 0x2c52, 0xbaeb, 0xe4e1, 0x1, 0x1);
        gbc.writeMem(0x1d20, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xeafa);
        EXPECT(gbc.pc(), 0x1d22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0262
        gbc.setState(0xc7d7, 0xc7ca, 0x8030, 0x813b, 0x3d76, 0xe69f, 0x0, 0x1);
        gbc.writeMem(0xc7d7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc7ca);
        EXPECT(gbc.pc(), 0xc7d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d7), 0xcb);
        EXPECT(gbc.readMem(0xc7d8), 0x41);
        // CB 41 0263
        gbc.setState(0xd385, 0x5925, 0x1d0, 0x3039, 0x29b8, 0x1efb, 0x1, 0x1);
        gbc.writeMem(0xd385, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5925);
        EXPECT(gbc.pc(), 0xd387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd385), 0xcb);
        EXPECT(gbc.readMem(0xd386), 0x41);
        // CB 41 0264
        gbc.setState(0xca6, 0x4a17, 0x1f50, 0xd093, 0x780b, 0xeeb3, 0x1, 0x0);
        gbc.writeMem(0xca6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4a17);
        EXPECT(gbc.pc(), 0xca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0265
        gbc.setState(0x18f1, 0xb217, 0x3f30, 0xab7e, 0x769a, 0x2a0c, 0x0, 0x1);
        gbc.writeMem(0x18f1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb217);
        EXPECT(gbc.pc(), 0x18f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0266
        gbc.setState(0x3538, 0x95ac, 0xd1d0, 0x81ae, 0x3b32, 0xf22b, 0x0, 0x0);
        gbc.writeMem(0x3538, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x95ac);
        EXPECT(gbc.pc(), 0x353a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0267
        gbc.setState(0xedf2, 0x5f01, 0x7110, 0x1d5b, 0x63dd, 0xf794, 0x0, 0x1);
        gbc.writeMem(0xedf2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5f01);
        EXPECT(gbc.pc(), 0xedf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf2), 0xcb);
        EXPECT(gbc.readMem(0xedf3), 0x41);
        // CB 41 0268
        gbc.setState(0x4740, 0x2444, 0x45c0, 0x7b6b, 0x1fa6, 0xa06e, 0x1, 0x1);
        gbc.writeMem(0x4740, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2444);
        EXPECT(gbc.pc(), 0x4742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0269
        gbc.setState(0xe33c, 0x1ea6, 0xb0e0, 0xc5c5, 0x2dd0, 0x2fc2, 0x0, 0x0);
        gbc.writeMem(0xe33c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1ea6);
        EXPECT(gbc.pc(), 0xe33e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe33c), 0xcb);
        EXPECT(gbc.readMem(0xe33d), 0x41);
        // CB 41 026A
        gbc.setState(0x4d30, 0x2340, 0x65b0, 0xff21, 0xdf91, 0x478f, 0x0, 0x1);
        gbc.writeMem(0x4d30, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2340);
        EXPECT(gbc.pc(), 0x4d32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 026B
        gbc.setState(0xc99c, 0xa, 0x2150, 0x51ec, 0x78c9, 0xd461, 0x0, 0x0);
        gbc.writeMem(0xc99c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa);
        EXPECT(gbc.pc(), 0xc99e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc99c), 0xcb);
        EXPECT(gbc.readMem(0xc99d), 0x41);
        // CB 41 026C
        gbc.setState(0xb57a, 0x901a, 0x2ec0, 0x6a4d, 0x2482, 0x9d43, 0x0, 0x1);
        gbc.writeMem(0xb57a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x901a);
        EXPECT(gbc.pc(), 0xb57c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb57a), 0xcb);
        EXPECT(gbc.readMem(0xb57b), 0x41);
        // CB 41 026D
        gbc.setState(0xacfc, 0x453b, 0x4e60, 0x8844, 0x8ecf, 0x8c15, 0x1, 0x0);
        gbc.writeMem(0xacfc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x453b);
        EXPECT(gbc.pc(), 0xacfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacfc), 0xcb);
        EXPECT(gbc.readMem(0xacfd), 0x41);
        // CB 41 026E
        gbc.setState(0x4550, 0xad80, 0xe330, 0x4c45, 0x12d7, 0xc3c6, 0x0, 0x1);
        gbc.writeMem(0x4550, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xad80);
        EXPECT(gbc.pc(), 0x4552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 026F
        gbc.setState(0xcac0, 0x133d, 0xaef0, 0x92d4, 0xd7e5, 0xdfa4, 0x1, 0x1);
        gbc.writeMem(0xcac0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x133d);
        EXPECT(gbc.pc(), 0xcac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac0), 0xcb);
        EXPECT(gbc.readMem(0xcac1), 0x41);
        // CB 41 0270
        gbc.setState(0xa4b0, 0xee06, 0x57b0, 0x763a, 0x9ca2, 0xfda5, 0x1, 0x1);
        gbc.writeMem(0xa4b0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xee06);
        EXPECT(gbc.pc(), 0xa4b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b0), 0xcb);
        EXPECT(gbc.readMem(0xa4b1), 0x41);
        // CB 41 0271
        gbc.setState(0xa446, 0x5463, 0xc7a0, 0x9b69, 0xc969, 0x7751, 0x0, 0x0);
        gbc.writeMem(0xa446, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5463);
        EXPECT(gbc.pc(), 0xa448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa446), 0xcb);
        EXPECT(gbc.readMem(0xa447), 0x41);
        // CB 41 0272
        gbc.setState(0x620f, 0x7e1c, 0x4ba0, 0x7d42, 0x882a, 0x9d78, 0x1, 0x1);
        gbc.writeMem(0x620f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7e1c);
        EXPECT(gbc.pc(), 0x6211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0273
        gbc.setState(0x6df3, 0x8f33, 0xfe30, 0xbeb5, 0xd576, 0xa30b, 0x0, 0x0);
        gbc.writeMem(0x6df3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8f33);
        EXPECT(gbc.pc(), 0x6df5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0274
        gbc.setState(0xb739, 0x7916, 0xef00, 0xb6c1, 0xc3e2, 0xac6c, 0x1, 0x1);
        gbc.writeMem(0xb739, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7916);
        EXPECT(gbc.pc(), 0xb73b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb739), 0xcb);
        EXPECT(gbc.readMem(0xb73a), 0x41);
        // CB 41 0275
        gbc.setState(0x36c1, 0xcbc0, 0x1040, 0x4fb4, 0xe71d, 0x8212, 0x1, 0x1);
        gbc.writeMem(0x36c1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcbc0);
        EXPECT(gbc.pc(), 0x36c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0276
        gbc.setState(0xbfb4, 0x2c13, 0xe720, 0x6ffc, 0x5c03, 0x9a9a, 0x0, 0x0);
        gbc.writeMem(0xbfb4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2c13);
        EXPECT(gbc.pc(), 0xbfb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb4), 0xcb);
        EXPECT(gbc.readMem(0xbfb5), 0x41);
        // CB 41 0277
        gbc.setState(0xe4, 0x1eee, 0xca0, 0x923e, 0xdbb1, 0x5aa7, 0x1, 0x0);
        gbc.writeMem(0xe4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1eee);
        EXPECT(gbc.pc(), 0xe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0278
        gbc.setState(0x4594, 0x4187, 0x9030, 0x5f41, 0xf7b3, 0xbb94, 0x0, 0x1);
        gbc.writeMem(0x4594, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4187);
        EXPECT(gbc.pc(), 0x4596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0279
        gbc.setState(0xc31, 0xfab4, 0x63b0, 0xeb87, 0x84df, 0x5416, 0x0, 0x1);
        gbc.writeMem(0xc31, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfab4);
        EXPECT(gbc.pc(), 0xc33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 027A
        gbc.setState(0x806b, 0x76a3, 0x4c80, 0x8ea5, 0x6efc, 0x47fe, 0x1, 0x0);
        gbc.writeMem(0x806b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x76a3);
        EXPECT(gbc.pc(), 0x806d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806b), 0xcb);
        EXPECT(gbc.readMem(0x806c), 0x41);
        // CB 41 027B
        gbc.setState(0x2430, 0xf55a, 0x35a0, 0x6d0, 0x9406, 0xc97d, 0x0, 0x1);
        gbc.writeMem(0x2430, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf55a);
        EXPECT(gbc.pc(), 0x2432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 027D
        gbc.setState(0x5bb, 0xb645, 0xa70, 0xd883, 0x1cd0, 0x6446, 0x0, 0x0);
        gbc.writeMem(0x5bb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb645);
        EXPECT(gbc.pc(), 0x5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 027E
        gbc.setState(0x2177, 0x5d86, 0x3d50, 0x2eb3, 0xe589, 0xef8a, 0x1, 0x0);
        gbc.writeMem(0x2177, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5d86);
        EXPECT(gbc.pc(), 0x2179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 027F
        gbc.setState(0x534e, 0xf5c1, 0xcfd0, 0x24ed, 0xc368, 0x2487, 0x0, 0x0);
        gbc.writeMem(0x534e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf5c1);
        EXPECT(gbc.pc(), 0x5350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0280
        gbc.setState(0xd300, 0x9d6b, 0x7990, 0xd5b5, 0x5f3f, 0xf7d2, 0x1, 0x0);
        gbc.writeMem(0xd300, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9d6b);
        EXPECT(gbc.pc(), 0xd302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd300), 0xcb);
        EXPECT(gbc.readMem(0xd301), 0x41);
        // CB 41 0281
        gbc.setState(0x7cfe, 0x2c5, 0x2fd0, 0xfa25, 0x2e6, 0x6419, 0x1, 0x0);
        gbc.writeMem(0x7cfe, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2c5);
        EXPECT(gbc.pc(), 0x7d00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0282
        gbc.setState(0xb654, 0xadcb, 0x4510, 0x9cf1, 0x2298, 0xf82e, 0x0, 0x0);
        gbc.writeMem(0xb654, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xadcb);
        EXPECT(gbc.pc(), 0xb656);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb654), 0xcb);
        EXPECT(gbc.readMem(0xb655), 0x41);
        // CB 41 0283
        gbc.setState(0xbe62, 0xe1ea, 0x18f0, 0xfb9c, 0x3157, 0x43a0, 0x0, 0x0);
        gbc.writeMem(0xbe62, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe1ea);
        EXPECT(gbc.pc(), 0xbe64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe62), 0xcb);
        EXPECT(gbc.readMem(0xbe63), 0x41);
        // CB 41 0284
        gbc.setState(0x4409, 0x14fe, 0xa730, 0xf553, 0x7aaf, 0x5052, 0x0, 0x0);
        gbc.writeMem(0x4409, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x14fe);
        EXPECT(gbc.pc(), 0x440b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0285
        gbc.setState(0x8952, 0x1b6d, 0x1500, 0x3a21, 0xe215, 0xd96a, 0x1, 0x1);
        gbc.writeMem(0x8952, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1b6d);
        EXPECT(gbc.pc(), 0x8954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8952), 0xcb);
        EXPECT(gbc.readMem(0x8953), 0x41);
        // CB 41 0286
        gbc.setState(0xd8eb, 0x378c, 0x60, 0x51bf, 0x59f3, 0x76a3, 0x1, 0x1);
        gbc.writeMem(0xd8eb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x378c);
        EXPECT(gbc.pc(), 0xd8ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8eb), 0xcb);
        EXPECT(gbc.readMem(0xd8ec), 0x41);
        // CB 41 0288
        gbc.setState(0x8b84, 0x411a, 0x29a0, 0x85ea, 0xe47b, 0xa216, 0x0, 0x1);
        gbc.writeMem(0x8b84, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x411a);
        EXPECT(gbc.pc(), 0x8b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b84), 0xcb);
        EXPECT(gbc.readMem(0x8b85), 0x41);
        // CB 41 0289
        gbc.setState(0x6d18, 0x410b, 0xee40, 0x3798, 0x65e6, 0x5cff, 0x1, 0x0);
        gbc.writeMem(0x6d18, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x410b);
        EXPECT(gbc.pc(), 0x6d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 028A
        gbc.setState(0x9b77, 0xa885, 0x27b0, 0x7618, 0xf8f2, 0x24dc, 0x0, 0x1);
        gbc.writeMem(0x9b77, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa885);
        EXPECT(gbc.pc(), 0x9b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b77), 0xcb);
        EXPECT(gbc.readMem(0x9b78), 0x41);
        // CB 41 028B
        gbc.setState(0x1c3d, 0xdb67, 0xa1a0, 0xd2f0, 0xdde0, 0xd1bc, 0x0, 0x1);
        gbc.writeMem(0x1c3d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdb67);
        EXPECT(gbc.pc(), 0x1c3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 028C
        gbc.setState(0x622a, 0xbabb, 0x8500, 0x455d, 0x9da6, 0x2ec6, 0x1, 0x1);
        gbc.writeMem(0x622a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbabb);
        EXPECT(gbc.pc(), 0x622c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 028D
        gbc.setState(0xa4ab, 0xac58, 0x7990, 0x363c, 0x28ee, 0xc1f1, 0x1, 0x0);
        gbc.writeMem(0xa4ab, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xac58);
        EXPECT(gbc.pc(), 0xa4ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ab), 0xcb);
        EXPECT(gbc.readMem(0xa4ac), 0x41);
        // CB 41 028E
        gbc.setState(0xcb1c, 0x841d, 0x420, 0x95a4, 0xdbf2, 0xe558, 0x1, 0x0);
        gbc.writeMem(0xcb1c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x841d);
        EXPECT(gbc.pc(), 0xcb1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb1c), 0xcb);
        EXPECT(gbc.readMem(0xcb1d), 0x41);
        // CB 41 028F
        gbc.setState(0x3cba, 0xb88e, 0x3bd0, 0x5780, 0x8a91, 0xa5bd, 0x0, 0x1);
        gbc.writeMem(0x3cba, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb88e);
        EXPECT(gbc.pc(), 0x3cbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0290
        gbc.setState(0x2e5d, 0x8e96, 0x4f90, 0x2cc9, 0xdd54, 0x8ee4, 0x1, 0x0);
        gbc.writeMem(0x2e5d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8e96);
        EXPECT(gbc.pc(), 0x2e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0291
        gbc.setState(0xdc1e, 0xeeca, 0xc4a0, 0xc4d4, 0x3b84, 0xd73a, 0x1, 0x0);
        gbc.writeMem(0xdc1e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xeeca);
        EXPECT(gbc.pc(), 0xdc20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc1e), 0xcb);
        EXPECT(gbc.readMem(0xdc1f), 0x41);
        // CB 41 0292
        gbc.setState(0x218e, 0x3d6c, 0x2df0, 0x135f, 0x8bf9, 0x8e26, 0x0, 0x0);
        gbc.writeMem(0x218e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3d6c);
        EXPECT(gbc.pc(), 0x2190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0293
        gbc.setState(0x3a68, 0x40e4, 0xa3a0, 0xb263, 0xdcbf, 0xdb21, 0x0, 0x1);
        gbc.writeMem(0x3a68, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x40e4);
        EXPECT(gbc.pc(), 0x3a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0294
        gbc.setState(0x4be6, 0x2243, 0x4b00, 0x5372, 0x51e2, 0x9834, 0x0, 0x1);
        gbc.writeMem(0x4be6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2243);
        EXPECT(gbc.pc(), 0x4be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0295
        gbc.setState(0x9962, 0xe31a, 0xbe10, 0x893, 0xdc4, 0xb4ce, 0x0, 0x0);
        gbc.writeMem(0x9962, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe31a);
        EXPECT(gbc.pc(), 0x9964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9962), 0xcb);
        EXPECT(gbc.readMem(0x9963), 0x41);
        // CB 41 0296
        gbc.setState(0x5cbf, 0xa1b8, 0x1a90, 0x3606, 0x5bd2, 0x9fb9, 0x1, 0x1);
        gbc.writeMem(0x5cbf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa1b8);
        EXPECT(gbc.pc(), 0x5cc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0297
        gbc.setState(0x6e75, 0x3fd2, 0x9b0, 0x46d7, 0x1579, 0xd51e, 0x0, 0x1);
        gbc.writeMem(0x6e75, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3fd2);
        EXPECT(gbc.pc(), 0x6e77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0298
        gbc.setState(0x1391, 0x5fb0, 0xac10, 0x76f1, 0x3c12, 0x978d, 0x0, 0x0);
        gbc.writeMem(0x1391, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5fb0);
        EXPECT(gbc.pc(), 0x1393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0299
        gbc.setState(0x1921, 0x9e60, 0x87b0, 0x8e6e, 0x4d4, 0xc0e5, 0x0, 0x0);
        gbc.writeMem(0x1921, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9e60);
        EXPECT(gbc.pc(), 0x1923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 029A
        gbc.setState(0xa6dc, 0xfc6c, 0xad80, 0xc38a, 0x65a0, 0x8dfa, 0x0, 0x0);
        gbc.writeMem(0xa6dc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfc6c);
        EXPECT(gbc.pc(), 0xa6de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6dc), 0xcb);
        EXPECT(gbc.readMem(0xa6dd), 0x41);
        // CB 41 029B
        gbc.setState(0x2418, 0x5272, 0xf120, 0x2072, 0xca4c, 0xeb5f, 0x1, 0x0);
        gbc.writeMem(0x2418, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5272);
        EXPECT(gbc.pc(), 0x241a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 029C
        gbc.setState(0x787a, 0x2572, 0xcd20, 0x6804, 0x22bd, 0xfc55, 0x1, 0x0);
        gbc.writeMem(0x787a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2572);
        EXPECT(gbc.pc(), 0x787c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 029D
        gbc.setState(0xc25b, 0x333e, 0xcc00, 0x141b, 0x92ca, 0x7b91, 0x1, 0x0);
        gbc.writeMem(0xc25b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x333e);
        EXPECT(gbc.pc(), 0xc25d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc25b), 0xcb);
        EXPECT(gbc.readMem(0xc25c), 0x41);
        // CB 41 029E
        gbc.setState(0x5ea9, 0x2d3a, 0xf310, 0x292, 0xb9fb, 0x2da1, 0x0, 0x1);
        gbc.writeMem(0x5ea9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2d3a);
        EXPECT(gbc.pc(), 0x5eab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 029F
        gbc.setState(0x7d52, 0xee46, 0x1ac0, 0xfa92, 0x7404, 0x4ea1, 0x0, 0x1);
        gbc.writeMem(0x7d52, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xee46);
        EXPECT(gbc.pc(), 0x7d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02A0
        gbc.setState(0x877, 0x667d, 0xa80, 0x10c7, 0x59d4, 0x7e54, 0x0, 0x0);
        gbc.writeMem(0x877, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x667d);
        EXPECT(gbc.pc(), 0x879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02A1
        gbc.setState(0x9488, 0x5bda, 0x53e0, 0xdb5a, 0xa22d, 0x3589, 0x0, 0x1);
        gbc.writeMem(0x9488, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5bda);
        EXPECT(gbc.pc(), 0x948a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9488), 0xcb);
        EXPECT(gbc.readMem(0x9489), 0x41);
        // CB 41 02A3
        gbc.setState(0x8471, 0x214f, 0xcc40, 0x12c5, 0x3d44, 0x9bd8, 0x0, 0x1);
        gbc.writeMem(0x8471, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x214f);
        EXPECT(gbc.pc(), 0x8473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8471), 0xcb);
        EXPECT(gbc.readMem(0x8472), 0x41);
        // CB 41 02A4
        gbc.setState(0x6830, 0x556f, 0x5540, 0xd53c, 0x6de6, 0x554c, 0x1, 0x0);
        gbc.writeMem(0x6830, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x556f);
        EXPECT(gbc.pc(), 0x6832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02A6
        gbc.setState(0xb811, 0xdcd2, 0xa1e0, 0xb613, 0xbb2, 0x981f, 0x0, 0x0);
        gbc.writeMem(0xb811, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xdcd2);
        EXPECT(gbc.pc(), 0xb813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb811), 0xcb);
        EXPECT(gbc.readMem(0xb812), 0x41);
        // CB 41 02A7
        gbc.setState(0xeaa9, 0x37a6, 0xb770, 0xa74e, 0x61d3, 0x8b3d, 0x1, 0x1);
        gbc.writeMem(0xeaa9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x37a6);
        EXPECT(gbc.pc(), 0xeaab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa9), 0xcb);
        EXPECT(gbc.readMem(0xeaaa), 0x41);
        // CB 41 02A8
        gbc.setState(0x91f7, 0x6489, 0x91f0, 0x737a, 0x91d9, 0x43fa, 0x1, 0x1);
        gbc.writeMem(0x91f7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6489);
        EXPECT(gbc.pc(), 0x91f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f7), 0xcb);
        EXPECT(gbc.readMem(0x91f8), 0x41);
        // CB 41 02A9
        gbc.setState(0xb9a5, 0x5755, 0xcc10, 0xc4f9, 0x711e, 0x22d3, 0x0, 0x0);
        gbc.writeMem(0xb9a5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5755);
        EXPECT(gbc.pc(), 0xb9a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a5), 0xcb);
        EXPECT(gbc.readMem(0xb9a6), 0x41);
        // CB 41 02AB
        gbc.setState(0xdceb, 0x35f5, 0x8ff0, 0x28df, 0xf46f, 0x6065, 0x0, 0x0);
        gbc.writeMem(0xdceb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x35f5);
        EXPECT(gbc.pc(), 0xdced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdceb), 0xcb);
        EXPECT(gbc.readMem(0xdcec), 0x41);
        // CB 41 02AC
        gbc.setState(0x9503, 0x647, 0xc820, 0xda9, 0x6d05, 0x28cc, 0x1, 0x0);
        gbc.writeMem(0x9503, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x647);
        EXPECT(gbc.pc(), 0x9505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9503), 0xcb);
        EXPECT(gbc.readMem(0x9504), 0x41);
        // CB 41 02AD
        gbc.setState(0x6b6b, 0xaf8, 0x4c60, 0xf4d1, 0xf445, 0xac9e, 0x1, 0x1);
        gbc.writeMem(0x6b6b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xaf8);
        EXPECT(gbc.pc(), 0x6b6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02AF
        gbc.setState(0x88a6, 0xb1e6, 0xa1a0, 0x1493, 0xa8e6, 0x236d, 0x0, 0x1);
        gbc.writeMem(0x88a6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb1e6);
        EXPECT(gbc.pc(), 0x88a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a6), 0xcb);
        EXPECT(gbc.readMem(0x88a7), 0x41);
        // CB 41 02B0
        gbc.setState(0xc51e, 0xe155, 0xa0c0, 0xa1b1, 0x2301, 0x7d2f, 0x1, 0x0);
        gbc.writeMem(0xc51e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe155);
        EXPECT(gbc.pc(), 0xc520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc51e), 0xcb);
        EXPECT(gbc.readMem(0xc51f), 0x41);
        // CB 41 02B1
        gbc.setState(0x1767, 0xd602, 0x74e0, 0x338a, 0x933b, 0xb577, 0x0, 0x0);
        gbc.writeMem(0x1767, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd602);
        EXPECT(gbc.pc(), 0x1769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02B2
        gbc.setState(0x2032, 0x935, 0xd3a0, 0x7490, 0x2f82, 0xbca4, 0x0, 0x1);
        gbc.writeMem(0x2032, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x935);
        EXPECT(gbc.pc(), 0x2034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02B4
        gbc.setState(0x9ad5, 0x28f, 0x68f0, 0x3eb5, 0xc06, 0xabd, 0x0, 0x0);
        gbc.writeMem(0x9ad5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x28f);
        EXPECT(gbc.pc(), 0x9ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad5), 0xcb);
        EXPECT(gbc.readMem(0x9ad6), 0x41);
        // CB 41 02B5
        gbc.setState(0x5a73, 0x796b, 0xd1f0, 0xe985, 0xfa9f, 0x63ac, 0x0, 0x0);
        gbc.writeMem(0x5a73, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x796b);
        EXPECT(gbc.pc(), 0x5a75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02B6
        gbc.setState(0xe5bc, 0xbdf5, 0x13f0, 0xd575, 0xd0dd, 0x4cec, 0x1, 0x1);
        gbc.writeMem(0xe5bc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbdf5);
        EXPECT(gbc.pc(), 0xe5be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5bc), 0xcb);
        EXPECT(gbc.readMem(0xe5bd), 0x41);
        // CB 41 02B7
        gbc.setState(0xb71f, 0x1cb3, 0xa880, 0x3d2d, 0x193f, 0xcea3, 0x0, 0x0);
        gbc.writeMem(0xb71f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1cb3);
        EXPECT(gbc.pc(), 0xb721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb71f), 0xcb);
        EXPECT(gbc.readMem(0xb720), 0x41);
        // CB 41 02B8
        gbc.setState(0x44f, 0x8429, 0xf5a0, 0xeb6c, 0x50e9, 0x6499, 0x1, 0x0);
        gbc.writeMem(0x44f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8429);
        EXPECT(gbc.pc(), 0x451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02B9
        gbc.setState(0xe501, 0x3d3c, 0xb0e0, 0xaab0, 0x2b8a, 0x25a6, 0x1, 0x1);
        gbc.writeMem(0xe501, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3d3c);
        EXPECT(gbc.pc(), 0xe503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe501), 0xcb);
        EXPECT(gbc.readMem(0xe502), 0x41);
        // CB 41 02BA
        gbc.setState(0x5f8, 0xdece, 0x4dd0, 0x25ec, 0x3184, 0x502c, 0x1, 0x0);
        gbc.writeMem(0x5f8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xdece);
        EXPECT(gbc.pc(), 0x5fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02BB
        gbc.setState(0xa5a2, 0x7a1, 0xa480, 0x9a5f, 0xa6b5, 0x4b7d, 0x0, 0x1);
        gbc.writeMem(0xa5a2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7a1);
        EXPECT(gbc.pc(), 0xa5a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a2), 0xcb);
        EXPECT(gbc.readMem(0xa5a3), 0x41);
        // CB 41 02BC
        gbc.setState(0xb6ca, 0x2d7f, 0x86d0, 0x8576, 0x8ef7, 0xcc39, 0x0, 0x1);
        gbc.writeMem(0xb6ca, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2d7f);
        EXPECT(gbc.pc(), 0xb6cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ca), 0xcb);
        EXPECT(gbc.readMem(0xb6cb), 0x41);
        // CB 41 02BD
        gbc.setState(0x5afa, 0xdd6c, 0xce10, 0x3f87, 0x5c4a, 0x3618, 0x1, 0x1);
        gbc.writeMem(0x5afa, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xdd6c);
        EXPECT(gbc.pc(), 0x5afc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02BE
        gbc.setState(0x2501, 0x268d, 0xe710, 0x1981, 0x5131, 0xa049, 0x0, 0x0);
        gbc.writeMem(0x2501, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x268d);
        EXPECT(gbc.pc(), 0x2503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02BF
        gbc.setState(0x8a6a, 0xcb5e, 0xec00, 0xd2e3, 0xa744, 0x295, 0x1, 0x1);
        gbc.writeMem(0x8a6a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xcb5e);
        EXPECT(gbc.pc(), 0x8a6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a6a), 0xcb);
        EXPECT(gbc.readMem(0x8a6b), 0x41);
        // CB 41 02C0
        gbc.setState(0xcdb8, 0xe00, 0x8200, 0x560e, 0xc877, 0xab84, 0x0, 0x1);
        gbc.writeMem(0xcdb8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe00);
        EXPECT(gbc.pc(), 0xcdba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb8), 0xcb);
        EXPECT(gbc.readMem(0xcdb9), 0x41);
        // CB 41 02C1
        gbc.setState(0x7182, 0xd70, 0x2cc0, 0xc6e, 0x9cb0, 0x17ba, 0x1, 0x0);
        gbc.writeMem(0x7182, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd70);
        EXPECT(gbc.pc(), 0x7184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02C2
        gbc.setState(0x1976, 0xe16e, 0xb160, 0x9f26, 0xa0db, 0xb603, 0x0, 0x1);
        gbc.writeMem(0x1976, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe16e);
        EXPECT(gbc.pc(), 0x1978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02C3
        gbc.setState(0xb070, 0xcc61, 0xa5a0, 0x7a4d, 0xdb0e, 0x11e8, 0x0, 0x1);
        gbc.writeMem(0xb070, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xcc61);
        EXPECT(gbc.pc(), 0xb072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb070), 0xcb);
        EXPECT(gbc.readMem(0xb071), 0x41);
        // CB 41 02C4
        gbc.setState(0x2c7c, 0x9e64, 0xb1a0, 0x383e, 0x5760, 0xbda, 0x1, 0x0);
        gbc.writeMem(0x2c7c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9e64);
        EXPECT(gbc.pc(), 0x2c7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02C5
        gbc.setState(0x7d88, 0xf169, 0x1ce0, 0x1e5, 0x246f, 0xbf45, 0x0, 0x1);
        gbc.writeMem(0x7d88, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf169);
        EXPECT(gbc.pc(), 0x7d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02C6
        gbc.setState(0x560c, 0xc08b, 0x8630, 0xd3ee, 0xb35, 0x641c, 0x1, 0x1);
        gbc.writeMem(0x560c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc08b);
        EXPECT(gbc.pc(), 0x560e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02C7
        gbc.setState(0x11b5, 0xefa2, 0x41f0, 0x1b8, 0xbc56, 0xb55f, 0x0, 0x0);
        gbc.writeMem(0x11b5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xefa2);
        EXPECT(gbc.pc(), 0x11b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02C8
        gbc.setState(0x6d93, 0x79af, 0xc480, 0xa7e8, 0x34fd, 0x3d9a, 0x0, 0x1);
        gbc.writeMem(0x6d93, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x79af);
        EXPECT(gbc.pc(), 0x6d95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02C9
        gbc.setState(0xd794, 0x17db, 0x1560, 0x9486, 0xbdd8, 0x22df, 0x1, 0x0);
        gbc.writeMem(0xd794, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x17db);
        EXPECT(gbc.pc(), 0xd796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd794), 0xcb);
        EXPECT(gbc.readMem(0xd795), 0x41);
        // CB 41 02CA
        gbc.setState(0x1b7a, 0x9d4d, 0xccc0, 0x8fed, 0x7406, 0x3bc, 0x1, 0x0);
        gbc.writeMem(0x1b7a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9d4d);
        EXPECT(gbc.pc(), 0x1b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02CB
        gbc.setState(0x3043, 0xddcc, 0x3af0, 0x4de2, 0x14b5, 0xf285, 0x0, 0x0);
        gbc.writeMem(0x3043, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xddcc);
        EXPECT(gbc.pc(), 0x3045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02CC
        gbc.setState(0x20, 0x920a, 0x2640, 0x42a2, 0xd5bc, 0xff5d, 0x0, 0x1);
        gbc.writeMem(0x20, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x920a);
        EXPECT(gbc.pc(), 0x22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02CD
        gbc.setState(0xadfe, 0x721, 0x77d0, 0xe42e, 0x4488, 0xd54, 0x1, 0x1);
        gbc.writeMem(0xadfe, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x721);
        EXPECT(gbc.pc(), 0xae00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadfe), 0xcb);
        EXPECT(gbc.readMem(0xadff), 0x41);
        // CB 41 02CE
        gbc.setState(0x1975, 0x5fa4, 0xe3c0, 0x87b8, 0x149a, 0xb716, 0x0, 0x0);
        gbc.writeMem(0x1975, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5fa4);
        EXPECT(gbc.pc(), 0x1977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02CF
        gbc.setState(0xe284, 0xa90e, 0xfb0, 0x5e78, 0xdb2, 0xc794, 0x1, 0x0);
        gbc.writeMem(0xe284, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa90e);
        EXPECT(gbc.pc(), 0xe286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe284), 0xcb);
        EXPECT(gbc.readMem(0xe285), 0x41);
        // CB 41 02D0
        gbc.setState(0x527b, 0x13ec, 0xf180, 0x6184, 0xb231, 0x5b48, 0x0, 0x0);
        gbc.writeMem(0x527b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x13ec);
        EXPECT(gbc.pc(), 0x527d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02D1
        gbc.setState(0xd73f, 0xb743, 0x5150, 0x3d05, 0x54f3, 0x9e30, 0x0, 0x0);
        gbc.writeMem(0xd73f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb743);
        EXPECT(gbc.pc(), 0xd741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd73f), 0xcb);
        EXPECT(gbc.readMem(0xd740), 0x41);
        // CB 41 02D2
        gbc.setState(0x53ca, 0xca13, 0xe0, 0x4c52, 0xbf28, 0xc6a, 0x0, 0x1);
        gbc.writeMem(0x53ca, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xca13);
        EXPECT(gbc.pc(), 0x53cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02D3
        gbc.setState(0x93a9, 0x3d25, 0x8fe0, 0x1728, 0x4df0, 0x2aca, 0x1, 0x1);
        gbc.writeMem(0x93a9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3d25);
        EXPECT(gbc.pc(), 0x93ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a9), 0xcb);
        EXPECT(gbc.readMem(0x93aa), 0x41);
        // CB 41 02D4
        gbc.setState(0xb5ce, 0xeca8, 0xc240, 0x7cf8, 0x7928, 0xd850, 0x0, 0x1);
        gbc.writeMem(0xb5ce, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xeca8);
        EXPECT(gbc.pc(), 0xb5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ce), 0xcb);
        EXPECT(gbc.readMem(0xb5cf), 0x41);
        // CB 41 02D5
        gbc.setState(0x8197, 0xfcb4, 0x2350, 0xc009, 0x61a4, 0xc692, 0x1, 0x0);
        gbc.writeMem(0x8197, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfcb4);
        EXPECT(gbc.pc(), 0x8199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8197), 0xcb);
        EXPECT(gbc.readMem(0x8198), 0x41);
        // CB 41 02D6
        gbc.setState(0x203f, 0xfb59, 0xa620, 0xd623, 0xe36f, 0x6033, 0x0, 0x0);
        gbc.writeMem(0x203f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfb59);
        EXPECT(gbc.pc(), 0x2041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02D7
        gbc.setState(0x343, 0x1223, 0xe960, 0xa6cd, 0x7eb0, 0x4bbe, 0x1, 0x0);
        gbc.writeMem(0x343, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1223);
        EXPECT(gbc.pc(), 0x345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02D8
        gbc.setState(0x71bd, 0x40c0, 0xadc0, 0xed4a, 0xee2b, 0x4044, 0x0, 0x0);
        gbc.writeMem(0x71bd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x40c0);
        EXPECT(gbc.pc(), 0x71bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02D9
        gbc.setState(0x45da, 0x472d, 0x8c0, 0xb5bf, 0x6a75, 0x3666, 0x1, 0x0);
        gbc.writeMem(0x45da, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x472d);
        EXPECT(gbc.pc(), 0x45dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02DA
        gbc.setState(0xbddd, 0x2d3, 0x2c50, 0x9fd1, 0xdbd9, 0x12a2, 0x0, 0x0);
        gbc.writeMem(0xbddd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2d3);
        EXPECT(gbc.pc(), 0xbddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbddd), 0xcb);
        EXPECT(gbc.readMem(0xbdde), 0x41);
        // CB 41 02DB
        gbc.setState(0x7704, 0xd028, 0x94f0, 0x3550, 0x54bc, 0xa8b3, 0x1, 0x1);
        gbc.writeMem(0x7704, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd028);
        EXPECT(gbc.pc(), 0x7706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02DC
        gbc.setState(0x36e5, 0xa61b, 0x3ad0, 0x52c, 0x7d5c, 0x2e58, 0x1, 0x1);
        gbc.writeMem(0x36e5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa61b);
        EXPECT(gbc.pc(), 0x36e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02DD
        gbc.setState(0xd0af, 0xbb16, 0x3b80, 0xf78e, 0x85f2, 0xeec4, 0x0, 0x0);
        gbc.writeMem(0xd0af, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbb16);
        EXPECT(gbc.pc(), 0xd0b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0af), 0xcb);
        EXPECT(gbc.readMem(0xd0b0), 0x41);
        // CB 41 02DE
        gbc.setState(0x2bcd, 0x9bc9, 0xc860, 0x898d, 0x589, 0x1a02, 0x0, 0x0);
        gbc.writeMem(0x2bcd, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9bc9);
        EXPECT(gbc.pc(), 0x2bcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02DF
        gbc.setState(0x51ce, 0x20f6, 0xdbc0, 0x4b1a, 0xe00b, 0xbe33, 0x0, 0x0);
        gbc.writeMem(0x51ce, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x20f6);
        EXPECT(gbc.pc(), 0x51d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02E0
        gbc.setState(0x76ac, 0x8a54, 0x1990, 0xd6ae, 0x28fe, 0x87a7, 0x0, 0x0);
        gbc.writeMem(0x76ac, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8a54);
        EXPECT(gbc.pc(), 0x76ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02E1
        gbc.setState(0xc6d2, 0x2e47, 0x5a20, 0xa80a, 0x402a, 0x89ff, 0x0, 0x1);
        gbc.writeMem(0xc6d2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2e47);
        EXPECT(gbc.pc(), 0xc6d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d2), 0xcb);
        EXPECT(gbc.readMem(0xc6d3), 0x41);
        // CB 41 02E2
        gbc.setState(0x62b, 0x2b16, 0x7000, 0xf5f9, 0x631e, 0x463e, 0x1, 0x1);
        gbc.writeMem(0x62b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2b16);
        EXPECT(gbc.pc(), 0x62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02E3
        gbc.setState(0x1f7d, 0x357, 0x7e90, 0x3656, 0xd61f, 0x6e83, 0x1, 0x1);
        gbc.writeMem(0x1f7d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x357);
        EXPECT(gbc.pc(), 0x1f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02E4
        gbc.setState(0x14cf, 0x6634, 0x7640, 0x4642, 0xc265, 0x4dd5, 0x1, 0x1);
        gbc.writeMem(0x14cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6634);
        EXPECT(gbc.pc(), 0x14d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02E5
        gbc.setState(0x173a, 0x3571, 0x3ce0, 0xcc9c, 0x5712, 0x9d7, 0x1, 0x0);
        gbc.writeMem(0x173a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3571);
        EXPECT(gbc.pc(), 0x173c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02E6
        gbc.setState(0xdfef, 0x80e9, 0xf8c0, 0x2845, 0xb022, 0x3e5e, 0x0, 0x1);
        gbc.writeMem(0xdfef, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x80e9);
        EXPECT(gbc.pc(), 0xdff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfef), 0xcb);
        EXPECT(gbc.readMem(0xdff0), 0x41);
        // CB 41 02E8
        gbc.setState(0x2548, 0x41db, 0x1d00, 0xb6b1, 0x5de8, 0x47b9, 0x1, 0x1);
        gbc.writeMem(0x2548, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x41db);
        EXPECT(gbc.pc(), 0x254a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02E9
        gbc.setState(0x8db0, 0x90c9, 0x5d30, 0x79ed, 0x8930, 0x8700, 0x0, 0x1);
        gbc.writeMem(0x8db0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x90c9);
        EXPECT(gbc.pc(), 0x8db2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db0), 0xcb);
        EXPECT(gbc.readMem(0x8db1), 0x41);
        // CB 41 02EA
        gbc.setState(0xa05f, 0xde9, 0x35a0, 0x2a94, 0xeb17, 0x5641, 0x0, 0x0);
        gbc.writeMem(0xa05f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xde9);
        EXPECT(gbc.pc(), 0xa061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa05f), 0xcb);
        EXPECT(gbc.readMem(0xa060), 0x41);
        // CB 41 02EB
        gbc.setState(0x8561, 0xe94f, 0x1ae0, 0xa377, 0x7981, 0xb121, 0x0, 0x0);
        gbc.writeMem(0x8561, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe94f);
        EXPECT(gbc.pc(), 0x8563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8561), 0xcb);
        EXPECT(gbc.readMem(0x8562), 0x41);
        // CB 41 02EC
        gbc.setState(0x9114, 0x5389, 0x5f20, 0x8f62, 0x58c7, 0xe72b, 0x1, 0x0);
        gbc.writeMem(0x9114, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5389);
        EXPECT(gbc.pc(), 0x9116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9114), 0xcb);
        EXPECT(gbc.readMem(0x9115), 0x41);
        // CB 41 02ED
        gbc.setState(0x7699, 0x5706, 0xb670, 0x6da8, 0x29a, 0xf2ee, 0x0, 0x1);
        gbc.writeMem(0x7699, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5706);
        EXPECT(gbc.pc(), 0x769b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02EE
        gbc.setState(0x448c, 0x671, 0x4e00, 0xfb1a, 0x8458, 0x9c5b, 0x1, 0x1);
        gbc.writeMem(0x448c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x671);
        EXPECT(gbc.pc(), 0x448e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02EF
        gbc.setState(0x863f, 0xe047, 0x7760, 0x8df3, 0x20e3, 0xdd4f, 0x0, 0x1);
        gbc.writeMem(0x863f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe047);
        EXPECT(gbc.pc(), 0x8641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x863f), 0xcb);
        EXPECT(gbc.readMem(0x8640), 0x41);
        // CB 41 02F0
        gbc.setState(0xb0e0, 0x7f7, 0x59d0, 0xf327, 0x1a5a, 0xa2f8, 0x0, 0x0);
        gbc.writeMem(0xb0e0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7f7);
        EXPECT(gbc.pc(), 0xb0e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e0), 0xcb);
        EXPECT(gbc.readMem(0xb0e1), 0x41);
        // CB 41 02F2
        gbc.setState(0x7ad3, 0x717, 0xd960, 0x34e2, 0x3b69, 0xff6e, 0x0, 0x1);
        gbc.writeMem(0x7ad3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x717);
        EXPECT(gbc.pc(), 0x7ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02F3
        gbc.setState(0x17a8, 0x8cef, 0x7cf0, 0x1381, 0x2193, 0xa07b, 0x0, 0x0);
        gbc.writeMem(0x17a8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8cef);
        EXPECT(gbc.pc(), 0x17aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02F4
        gbc.setState(0x3d79, 0xd17c, 0xff0, 0xd835, 0x81bb, 0xe74, 0x0, 0x1);
        gbc.writeMem(0x3d79, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd17c);
        EXPECT(gbc.pc(), 0x3d7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02F5
        gbc.setState(0x559b, 0x60d3, 0x6ce0, 0xff71, 0xda3b, 0x845, 0x1, 0x1);
        gbc.writeMem(0x559b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x60d3);
        EXPECT(gbc.pc(), 0x559d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02F6
        gbc.setState(0xc12b, 0xdb67, 0xc0c0, 0xfa86, 0x5f4, 0xf03f, 0x0, 0x0);
        gbc.writeMem(0xc12b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdb67);
        EXPECT(gbc.pc(), 0xc12d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc12b), 0xcb);
        EXPECT(gbc.readMem(0xc12c), 0x41);
        // CB 41 02F7
        gbc.setState(0xe4cc, 0x4b36, 0x3490, 0x6c20, 0x76b1, 0x9542, 0x1, 0x0);
        gbc.writeMem(0xe4cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4b36);
        EXPECT(gbc.pc(), 0xe4ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4cc), 0xcb);
        EXPECT(gbc.readMem(0xe4cd), 0x41);
        // CB 41 02F8
        gbc.setState(0xac5a, 0x48f8, 0xa350, 0x5c88, 0x1e72, 0xfe93, 0x0, 0x1);
        gbc.writeMem(0xac5a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x48f8);
        EXPECT(gbc.pc(), 0xac5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac5a), 0xcb);
        EXPECT(gbc.readMem(0xac5b), 0x41);
        // CB 41 02F9
        gbc.setState(0xd248, 0xee42, 0x5b20, 0xcdd6, 0x975f, 0xf13c, 0x0, 0x0);
        gbc.writeMem(0xd248, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xee42);
        EXPECT(gbc.pc(), 0xd24a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd248), 0xcb);
        EXPECT(gbc.readMem(0xd249), 0x41);
        // CB 41 02FA
        gbc.setState(0x924, 0xf7b9, 0x1d10, 0xa1c8, 0x7da3, 0xc2ea, 0x0, 0x0);
        gbc.writeMem(0x924, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf7b9);
        EXPECT(gbc.pc(), 0x926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02FB
        gbc.setState(0x4793, 0xf2f3, 0x4900, 0x99d7, 0xccf2, 0xc455, 0x0, 0x1);
        gbc.writeMem(0x4793, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf2f3);
        EXPECT(gbc.pc(), 0x4795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02FC
        gbc.setState(0x2d62, 0x3d11, 0xf1c0, 0x96c0, 0xe9ca, 0x84cb, 0x1, 0x0);
        gbc.writeMem(0x2d62, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3d11);
        EXPECT(gbc.pc(), 0x2d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02FD
        gbc.setState(0x6613, 0x973f, 0x2a0, 0x4c14, 0x98cc, 0x9cab, 0x0, 0x0);
        gbc.writeMem(0x6613, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x973f);
        EXPECT(gbc.pc(), 0x6615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 02FE
        gbc.setState(0x529e, 0xb99d, 0x3470, 0xf0ff, 0x7c22, 0x9369, 0x0, 0x0);
        gbc.writeMem(0x529e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb99d);
        EXPECT(gbc.pc(), 0x52a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 02FF
        gbc.setState(0x3491, 0x6967, 0x4430, 0x1ab7, 0xe72c, 0x25e0, 0x1, 0x1);
        gbc.writeMem(0x3491, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6967);
        EXPECT(gbc.pc(), 0x3493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0300
        gbc.setState(0x51c3, 0x882f, 0x8750, 0x5eed, 0x5ddf, 0x15f2, 0x1, 0x0);
        gbc.writeMem(0x51c3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x882f);
        EXPECT(gbc.pc(), 0x51c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0301
        gbc.setState(0xb2a0, 0xd23b, 0x5ab0, 0x34a6, 0xf4, 0x84d0, 0x1, 0x1);
        gbc.writeMem(0xb2a0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd23b);
        EXPECT(gbc.pc(), 0xb2a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a0), 0xcb);
        EXPECT(gbc.readMem(0xb2a1), 0x41);
        // CB 41 0302
        gbc.setState(0x9033, 0x768d, 0xe270, 0x3b14, 0xcfd, 0x7d45, 0x0, 0x1);
        gbc.writeMem(0x9033, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x768d);
        EXPECT(gbc.pc(), 0x9035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9033), 0xcb);
        EXPECT(gbc.readMem(0x9034), 0x41);
        // CB 41 0303
        gbc.setState(0x287d, 0xea34, 0xb9d0, 0xde68, 0x1ce8, 0x436e, 0x1, 0x1);
        gbc.writeMem(0x287d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xea34);
        EXPECT(gbc.pc(), 0x287f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0304
        gbc.setState(0x9303, 0x19af, 0xc9b0, 0xb590, 0x2fb4, 0x3905, 0x0, 0x0);
        gbc.writeMem(0x9303, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x19af);
        EXPECT(gbc.pc(), 0x9305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9303), 0xcb);
        EXPECT(gbc.readMem(0x9304), 0x41);
        // CB 41 0305
        gbc.setState(0xa80, 0xbd5b, 0x8310, 0x111e, 0xdb39, 0x5973, 0x1, 0x0);
        gbc.writeMem(0xa80, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xbd5b);
        EXPECT(gbc.pc(), 0xa82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0306
        gbc.setState(0x3d82, 0x1551, 0x8700, 0xef97, 0x4322, 0x14c6, 0x1, 0x1);
        gbc.writeMem(0x3d82, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1551);
        EXPECT(gbc.pc(), 0x3d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0307
        gbc.setState(0x590a, 0x959a, 0x7f90, 0x4c61, 0xd6e8, 0xc743, 0x0, 0x0);
        gbc.writeMem(0x590a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x959a);
        EXPECT(gbc.pc(), 0x590c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0308
        gbc.setState(0xc683, 0xa91d, 0xc450, 0xb7f, 0x4217, 0x5ebb, 0x1, 0x1);
        gbc.writeMem(0xc683, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa91d);
        EXPECT(gbc.pc(), 0xc685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc683), 0xcb);
        EXPECT(gbc.readMem(0xc684), 0x41);
        // CB 41 0309
        gbc.setState(0x967d, 0x7d6c, 0x73c0, 0x4b7a, 0x2e5d, 0x573a, 0x1, 0x1);
        gbc.writeMem(0x967d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7d6c);
        EXPECT(gbc.pc(), 0x967f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x967d), 0xcb);
        EXPECT(gbc.readMem(0x967e), 0x41);
        // CB 41 030B
        gbc.setState(0xa489, 0x2542, 0x8b90, 0x1f77, 0x6ec8, 0x6f89, 0x0, 0x0);
        gbc.writeMem(0xa489, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2542);
        EXPECT(gbc.pc(), 0xa48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa489), 0xcb);
        EXPECT(gbc.readMem(0xa48a), 0x41);
        // CB 41 030C
        gbc.setState(0xa7cf, 0xfe69, 0xbaf0, 0x2637, 0x551, 0xabce, 0x0, 0x1);
        gbc.writeMem(0xa7cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfe69);
        EXPECT(gbc.pc(), 0xa7d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7cf), 0xcb);
        EXPECT(gbc.readMem(0xa7d0), 0x41);
        // CB 41 030D
        gbc.setState(0x7c09, 0xfae, 0xb7f0, 0x67b, 0x7c48, 0xf6ca, 0x1, 0x1);
        gbc.writeMem(0x7c09, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfae);
        EXPECT(gbc.pc(), 0x7c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 030E
        gbc.setState(0xb09c, 0xc83b, 0x5ae0, 0xa4ae, 0x92f2, 0xda17, 0x0, 0x1);
        gbc.writeMem(0xb09c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc83b);
        EXPECT(gbc.pc(), 0xb09e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09c), 0xcb);
        EXPECT(gbc.readMem(0xb09d), 0x41);
        // CB 41 030F
        gbc.setState(0x73a3, 0xe0e3, 0x7e80, 0xe883, 0x7238, 0x2389, 0x0, 0x0);
        gbc.writeMem(0x73a3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe0e3);
        EXPECT(gbc.pc(), 0x73a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0310
        gbc.setState(0x7034, 0xd6b1, 0xda20, 0x8190, 0xc47b, 0xaeb7, 0x1, 0x1);
        gbc.writeMem(0x7034, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd6b1);
        EXPECT(gbc.pc(), 0x7036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0311
        gbc.setState(0x55f0, 0x238, 0x3ef0, 0x8d8, 0x1dcb, 0x589c, 0x1, 0x1);
        gbc.writeMem(0x55f0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x238);
        EXPECT(gbc.pc(), 0x55f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0312
        gbc.setState(0x8db6, 0x3be5, 0xa540, 0xba00, 0x844a, 0xaaaa, 0x1, 0x0);
        gbc.writeMem(0x8db6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3be5);
        EXPECT(gbc.pc(), 0x8db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db6), 0xcb);
        EXPECT(gbc.readMem(0x8db7), 0x41);
        // CB 41 0313
        gbc.setState(0x6498, 0xa536, 0xab40, 0xc6f0, 0xa6de, 0xa2a, 0x1, 0x0);
        gbc.writeMem(0x6498, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa536);
        EXPECT(gbc.pc(), 0x649a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0314
        gbc.setState(0xff1, 0xedd9, 0xaf60, 0x31fb, 0x476f, 0xa615, 0x1, 0x0);
        gbc.writeMem(0xff1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xedd9);
        EXPECT(gbc.pc(), 0xff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0315
        gbc.setState(0x6526, 0x9d4b, 0x2b00, 0xacad, 0xf6c4, 0x7d2d, 0x0, 0x1);
        gbc.writeMem(0x6526, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9d4b);
        EXPECT(gbc.pc(), 0x6528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0316
        gbc.setState(0x482f, 0x6885, 0x1490, 0xcdcf, 0xfd3d, 0xc856, 0x0, 0x1);
        gbc.writeMem(0x482f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6885);
        EXPECT(gbc.pc(), 0x4831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0317
        gbc.setState(0x621d, 0x6dc5, 0x98a0, 0x6695, 0xb498, 0x513d, 0x1, 0x0);
        gbc.writeMem(0x621d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6dc5);
        EXPECT(gbc.pc(), 0x621f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0318
        gbc.setState(0x4089, 0x3a09, 0x75a0, 0xb590, 0x7fc1, 0xaee8, 0x1, 0x1);
        gbc.writeMem(0x4089, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3a09);
        EXPECT(gbc.pc(), 0x408b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0319
        gbc.setState(0x2ebf, 0xcefd, 0x3290, 0xdeb9, 0x4f8e, 0xfc8b, 0x1, 0x1);
        gbc.writeMem(0x2ebf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcefd);
        EXPECT(gbc.pc(), 0x2ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 031A
        gbc.setState(0x62cc, 0x69a8, 0x4530, 0xed1f, 0xf2a2, 0x1d47, 0x0, 0x0);
        gbc.writeMem(0x62cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x69a8);
        EXPECT(gbc.pc(), 0x62ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 031B
        gbc.setState(0x7095, 0x25e1, 0xf860, 0x3a4c, 0x476c, 0xfbec, 0x0, 0x1);
        gbc.writeMem(0x7095, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x25e1);
        EXPECT(gbc.pc(), 0x7097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 031C
        gbc.setState(0x7a61, 0x111a, 0x6270, 0x7185, 0xc108, 0xd57d, 0x0, 0x0);
        gbc.writeMem(0x7a61, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x111a);
        EXPECT(gbc.pc(), 0x7a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 031D
        gbc.setState(0xd6fb, 0x5508, 0xef30, 0x8bf, 0x4878, 0x9b13, 0x1, 0x0);
        gbc.writeMem(0xd6fb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5508);
        EXPECT(gbc.pc(), 0xd6fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6fb), 0xcb);
        EXPECT(gbc.readMem(0xd6fc), 0x41);
        // CB 41 031E
        gbc.setState(0x961c, 0x2abb, 0x99a0, 0x3089, 0x834e, 0x4dd5, 0x1, 0x0);
        gbc.writeMem(0x961c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2abb);
        EXPECT(gbc.pc(), 0x961e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x961c), 0xcb);
        EXPECT(gbc.readMem(0x961d), 0x41);
        // CB 41 031F
        gbc.setState(0x7a46, 0xb064, 0x8110, 0x5bbd, 0x571d, 0x3357, 0x0, 0x0);
        gbc.writeMem(0x7a46, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb064);
        EXPECT(gbc.pc(), 0x7a48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0320
        gbc.setState(0x75b0, 0x7964, 0xed70, 0xfa15, 0x79e3, 0xe79f, 0x1, 0x1);
        gbc.writeMem(0x75b0, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7964);
        EXPECT(gbc.pc(), 0x75b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0323
        gbc.setState(0x2c91, 0xca40, 0x7b50, 0x4989, 0xa65f, 0x5912, 0x1, 0x1);
        gbc.writeMem(0x2c91, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xca40);
        EXPECT(gbc.pc(), 0x2c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0324
        gbc.setState(0xabda, 0x131a, 0x7ef0, 0x52d6, 0xe914, 0x1d62, 0x1, 0x1);
        gbc.writeMem(0xabda, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x131a);
        EXPECT(gbc.pc(), 0xabdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabda), 0xcb);
        EXPECT(gbc.readMem(0xabdb), 0x41);
        // CB 41 0325
        gbc.setState(0x9bf4, 0xa80b, 0xe9e0, 0x8392, 0xcaf6, 0x4be9, 0x1, 0x1);
        gbc.writeMem(0x9bf4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa80b);
        EXPECT(gbc.pc(), 0x9bf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf4), 0xcb);
        EXPECT(gbc.readMem(0x9bf5), 0x41);
        // CB 41 0326
        gbc.setState(0xbbc4, 0xd4e8, 0x1800, 0x79b5, 0x86c0, 0x6122, 0x1, 0x1);
        gbc.writeMem(0xbbc4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd4e8);
        EXPECT(gbc.pc(), 0xbbc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc4), 0xcb);
        EXPECT(gbc.readMem(0xbbc5), 0x41);
        // CB 41 0327
        gbc.setState(0x5809, 0xc8ea, 0x38a0, 0x3e3e, 0x56f, 0x99b8, 0x0, 0x0);
        gbc.writeMem(0x5809, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc8ea);
        EXPECT(gbc.pc(), 0x580b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0328
        gbc.setState(0xccde, 0x8cb, 0xead0, 0xad39, 0x7d2c, 0xef72, 0x1, 0x0);
        gbc.writeMem(0xccde, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8cb);
        EXPECT(gbc.pc(), 0xcce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccde), 0xcb);
        EXPECT(gbc.readMem(0xccdf), 0x41);
        // CB 41 0329
        gbc.setState(0x8b05, 0xb6ae, 0x30d0, 0x8560, 0x7dac, 0x2339, 0x0, 0x1);
        gbc.writeMem(0x8b05, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb6ae);
        EXPECT(gbc.pc(), 0x8b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b05), 0xcb);
        EXPECT(gbc.readMem(0x8b06), 0x41);
        // CB 41 032A
        gbc.setState(0x2d11, 0x431f, 0xb710, 0x8833, 0x996e, 0x1b67, 0x1, 0x1);
        gbc.writeMem(0x2d11, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x431f);
        EXPECT(gbc.pc(), 0x2d13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 032B
        gbc.setState(0xd47, 0xeaa4, 0x4c0, 0x5bd1, 0x9b3f, 0xf91f, 0x1, 0x1);
        gbc.writeMem(0xd47, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xeaa4);
        EXPECT(gbc.pc(), 0xd49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 032C
        gbc.setState(0x44bc, 0xa988, 0x6d70, 0xbdf8, 0xceff, 0xb766, 0x1, 0x0);
        gbc.writeMem(0x44bc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa988);
        EXPECT(gbc.pc(), 0x44be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 032D
        gbc.setState(0xca68, 0xfbe9, 0xa300, 0xd5e7, 0xe0d6, 0x30e8, 0x1, 0x0);
        gbc.writeMem(0xca68, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xfbe9);
        EXPECT(gbc.pc(), 0xca6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca68), 0xcb);
        EXPECT(gbc.readMem(0xca69), 0x41);
        // CB 41 032E
        gbc.setState(0x3b49, 0xccd4, 0xc870, 0x24bb, 0xa264, 0xaf8b, 0x0, 0x1);
        gbc.writeMem(0x3b49, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xccd4);
        EXPECT(gbc.pc(), 0x3b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 032F
        gbc.setState(0x8e3b, 0xb3f0, 0xfa0, 0x40e2, 0x66f4, 0xe6d2, 0x1, 0x0);
        gbc.writeMem(0x8e3b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb3f0);
        EXPECT(gbc.pc(), 0x8e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3b), 0xcb);
        EXPECT(gbc.readMem(0x8e3c), 0x41);
        // CB 41 0330
        gbc.setState(0x95ff, 0x65c7, 0x5a30, 0xd283, 0x6422, 0xcc55, 0x1, 0x1);
        gbc.writeMem(0x95ff, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x65c7);
        EXPECT(gbc.pc(), 0x9601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ff), 0xcb);
        EXPECT(gbc.readMem(0x9600), 0x41);
        // CB 41 0331
        gbc.setState(0xb7a9, 0xf27e, 0x4e30, 0x7bd5, 0xd48c, 0xef52, 0x1, 0x1);
        gbc.writeMem(0xb7a9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf27e);
        EXPECT(gbc.pc(), 0xb7ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a9), 0xcb);
        EXPECT(gbc.readMem(0xb7aa), 0x41);
        // CB 41 0333
        gbc.setState(0x56cb, 0x38d1, 0x570, 0xfb9c, 0x66d2, 0x4d54, 0x0, 0x0);
        gbc.writeMem(0x56cb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x38d1);
        EXPECT(gbc.pc(), 0x56cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0334
        gbc.setState(0x2a42, 0xe12b, 0x5c30, 0x5cf8, 0x9951, 0x6b9b, 0x0, 0x1);
        gbc.writeMem(0x2a42, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe12b);
        EXPECT(gbc.pc(), 0x2a44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0335
        gbc.setState(0x90c8, 0x70f1, 0xc8b0, 0x1ae9, 0x8928, 0xa8ae, 0x0, 0x0);
        gbc.writeMem(0x90c8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x70f1);
        EXPECT(gbc.pc(), 0x90ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c8), 0xcb);
        EXPECT(gbc.readMem(0x90c9), 0x41);
        // CB 41 0336
        gbc.setState(0x67e3, 0x6202, 0x1640, 0x582c, 0x9229, 0xe18, 0x1, 0x0);
        gbc.writeMem(0x67e3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6202);
        EXPECT(gbc.pc(), 0x67e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0337
        gbc.setState(0x6beb, 0x386b, 0x6b50, 0xd2f4, 0x62f2, 0x96b5, 0x0, 0x0);
        gbc.writeMem(0x6beb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x386b);
        EXPECT(gbc.pc(), 0x6bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0338
        gbc.setState(0xe706, 0xee78, 0xd620, 0x2c2e, 0x8f7d, 0x2813, 0x1, 0x1);
        gbc.writeMem(0xe706, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xee78);
        EXPECT(gbc.pc(), 0xe708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe706), 0xcb);
        EXPECT(gbc.readMem(0xe707), 0x41);
        // CB 41 0339
        gbc.setState(0xe77d, 0x64aa, 0xa4a0, 0xd5b1, 0xe355, 0x62cf, 0x0, 0x0);
        gbc.writeMem(0xe77d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x64aa);
        EXPECT(gbc.pc(), 0xe77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe77d), 0xcb);
        EXPECT(gbc.readMem(0xe77e), 0x41);
        // CB 41 033A
        gbc.setState(0x7e66, 0x1d2d, 0xb1c0, 0x3d3c, 0x5292, 0xa56e, 0x1, 0x1);
        gbc.writeMem(0x7e66, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1d2d);
        EXPECT(gbc.pc(), 0x7e68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 033B
        gbc.setState(0x64ba, 0x944, 0x6bd0, 0x3ca7, 0xc754, 0x43f8, 0x0, 0x1);
        gbc.writeMem(0x64ba, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x944);
        EXPECT(gbc.pc(), 0x64bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 033C
        gbc.setState(0x469e, 0x168e, 0x1540, 0xad34, 0x624f, 0x4aff, 0x1, 0x0);
        gbc.writeMem(0x469e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x168e);
        EXPECT(gbc.pc(), 0x46a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 033D
        gbc.setState(0x7bf1, 0x1a9a, 0xcaa0, 0xded6, 0xba, 0x9924, 0x1, 0x0);
        gbc.writeMem(0x7bf1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1a9a);
        EXPECT(gbc.pc(), 0x7bf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 033E
        gbc.setState(0x2e47, 0x2206, 0xd670, 0x321f, 0xd95b, 0xa3c3, 0x0, 0x1);
        gbc.writeMem(0x2e47, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2206);
        EXPECT(gbc.pc(), 0x2e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 033F
        gbc.setState(0xe64a, 0x2108, 0x55e0, 0x55a2, 0x532d, 0xed43, 0x0, 0x1);
        gbc.writeMem(0xe64a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2108);
        EXPECT(gbc.pc(), 0xe64c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64a), 0xcb);
        EXPECT(gbc.readMem(0xe64b), 0x41);
        // CB 41 0340
        gbc.setState(0x12c8, 0x5554, 0x9cf0, 0x29e8, 0x3931, 0x5fbe, 0x1, 0x1);
        gbc.writeMem(0x12c8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5554);
        EXPECT(gbc.pc(), 0x12ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0341
        gbc.setState(0xa0f8, 0x818, 0xcc40, 0xc3a6, 0xa3cd, 0x3882, 0x0, 0x1);
        gbc.writeMem(0xa0f8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x818);
        EXPECT(gbc.pc(), 0xa0fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f8), 0xcb);
        EXPECT(gbc.readMem(0xa0f9), 0x41);
        // CB 41 0342
        gbc.setState(0x1fdf, 0x8372, 0xc380, 0x7670, 0x6db2, 0xec8e, 0x1, 0x1);
        gbc.writeMem(0x1fdf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8372);
        EXPECT(gbc.pc(), 0x1fe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0343
        gbc.setState(0x5ac9, 0x9eab, 0xa1a0, 0xf3b9, 0xec4, 0x9978, 0x1, 0x0);
        gbc.writeMem(0x5ac9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9eab);
        EXPECT(gbc.pc(), 0x5acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0344
        gbc.setState(0x88ea, 0x1e30, 0x26c0, 0xd18c, 0xaa48, 0x6bdb, 0x1, 0x1);
        gbc.writeMem(0x88ea, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1e30);
        EXPECT(gbc.pc(), 0x88ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ea), 0xcb);
        EXPECT(gbc.readMem(0x88eb), 0x41);
        // CB 41 0345
        gbc.setState(0x39c8, 0x7fa3, 0x7290, 0x7dae, 0xb198, 0xbf15, 0x0, 0x0);
        gbc.writeMem(0x39c8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7fa3);
        EXPECT(gbc.pc(), 0x39ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0347
        gbc.setState(0xa79c, 0x4dd0, 0xa960, 0x186, 0x52fd, 0x8242, 0x1, 0x0);
        gbc.writeMem(0xa79c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4dd0);
        EXPECT(gbc.pc(), 0xa79e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa79c), 0xcb);
        EXPECT(gbc.readMem(0xa79d), 0x41);
        // CB 41 0348
        gbc.setState(0x8300, 0x3b76, 0x2ef0, 0x6055, 0xbc2, 0x6ea0, 0x1, 0x1);
        gbc.writeMem(0x8300, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3b76);
        EXPECT(gbc.pc(), 0x8302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8300), 0xcb);
        EXPECT(gbc.readMem(0x8301), 0x41);
        // CB 41 0349
        gbc.setState(0xaf0f, 0x2ed1, 0x1210, 0x800f, 0x65f4, 0x2750, 0x1, 0x0);
        gbc.writeMem(0xaf0f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2ed1);
        EXPECT(gbc.pc(), 0xaf11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf0f), 0xcb);
        EXPECT(gbc.readMem(0xaf10), 0x41);
        // CB 41 034A
        gbc.setState(0x9f62, 0xe468, 0x400, 0x48e6, 0x35bc, 0x8fec, 0x1, 0x0);
        gbc.writeMem(0x9f62, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe468);
        EXPECT(gbc.pc(), 0x9f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f62), 0xcb);
        EXPECT(gbc.readMem(0x9f63), 0x41);
        // CB 41 034B
        gbc.setState(0xa8c1, 0x57c4, 0x7df0, 0x4ef, 0x91bf, 0xd4d8, 0x0, 0x0);
        gbc.writeMem(0xa8c1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x57c4);
        EXPECT(gbc.pc(), 0xa8c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c1), 0xcb);
        EXPECT(gbc.readMem(0xa8c2), 0x41);
        // CB 41 034C
        gbc.setState(0x79c4, 0x4b0, 0xcfe0, 0x166b, 0x9e0, 0xd322, 0x0, 0x0);
        gbc.writeMem(0x79c4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4b0);
        EXPECT(gbc.pc(), 0x79c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 034D
        gbc.setState(0x2593, 0x2ebf, 0x3680, 0xf1a, 0x808, 0x2e2a, 0x0, 0x1);
        gbc.writeMem(0x2593, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2ebf);
        EXPECT(gbc.pc(), 0x2595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 034E
        gbc.setState(0x9ebc, 0xff8e, 0xb540, 0x1a2a, 0x9907, 0x8a8b, 0x1, 0x0);
        gbc.writeMem(0x9ebc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xff8e);
        EXPECT(gbc.pc(), 0x9ebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ebc), 0xcb);
        EXPECT(gbc.readMem(0x9ebd), 0x41);
        // CB 41 034F
        gbc.setState(0x2e89, 0xf6de, 0x550, 0xed4c, 0x3435, 0x7dae, 0x1, 0x0);
        gbc.writeMem(0x2e89, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf6de);
        EXPECT(gbc.pc(), 0x2e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0350
        gbc.setState(0xe665, 0xda6e, 0x72d0, 0x4c9c, 0x553e, 0x2d5, 0x0, 0x1);
        gbc.writeMem(0xe665, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xda6e);
        EXPECT(gbc.pc(), 0xe667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe665), 0xcb);
        EXPECT(gbc.readMem(0xe666), 0x41);
        // CB 41 0351
        gbc.setState(0x1b30, 0x10d8, 0x7f10, 0x8c69, 0x9b29, 0xaf48, 0x0, 0x0);
        gbc.writeMem(0x1b30, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x10d8);
        EXPECT(gbc.pc(), 0x1b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0352
        gbc.setState(0xae75, 0xa713, 0xab50, 0x7f9, 0x2906, 0xeeb7, 0x1, 0x1);
        gbc.writeMem(0xae75, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa713);
        EXPECT(gbc.pc(), 0xae77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae75), 0xcb);
        EXPECT(gbc.readMem(0xae76), 0x41);
        // CB 41 0353
        gbc.setState(0xa9cc, 0xde16, 0xe710, 0x311b, 0x611d, 0xea9f, 0x1, 0x1);
        gbc.writeMem(0xa9cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xde16);
        EXPECT(gbc.pc(), 0xa9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9cc), 0xcb);
        EXPECT(gbc.readMem(0xa9cd), 0x41);
        // CB 41 0354
        gbc.setState(0xf51, 0xd01f, 0xa350, 0x25fa, 0x90c4, 0xa4f9, 0x0, 0x0);
        gbc.writeMem(0xf51, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd01f);
        EXPECT(gbc.pc(), 0xf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0355
        gbc.setState(0x58d4, 0x9500, 0xebb0, 0x8ef8, 0xf5c5, 0x990c, 0x1, 0x0);
        gbc.writeMem(0x58d4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9500);
        EXPECT(gbc.pc(), 0x58d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0356
        gbc.setState(0xa9c6, 0xad8f, 0xe5d0, 0x1f2b, 0x8738, 0xef7c, 0x0, 0x1);
        gbc.writeMem(0xa9c6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xad8f);
        EXPECT(gbc.pc(), 0xa9c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c6), 0xcb);
        EXPECT(gbc.readMem(0xa9c7), 0x41);
        // CB 41 0357
        gbc.setState(0xc367, 0xd656, 0xd50, 0x4680, 0xcb77, 0x519e, 0x1, 0x1);
        gbc.writeMem(0xc367, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd656);
        EXPECT(gbc.pc(), 0xc369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc367), 0xcb);
        EXPECT(gbc.readMem(0xc368), 0x41);
        // CB 41 0358
        gbc.setState(0xc680, 0x68c1, 0x8d20, 0x6c76, 0xfc33, 0x3fff, 0x1, 0x0);
        gbc.writeMem(0xc680, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x68c1);
        EXPECT(gbc.pc(), 0xc682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc680), 0xcb);
        EXPECT(gbc.readMem(0xc681), 0x41);
        // CB 41 0359
        gbc.setState(0x5964, 0xd64d, 0x8f00, 0xb812, 0x13fa, 0x5599, 0x1, 0x0);
        gbc.writeMem(0x5964, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd64d);
        EXPECT(gbc.pc(), 0x5966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 035A
        gbc.setState(0x28ef, 0xb1ef, 0x3410, 0x7f1e, 0xe931, 0x9d94, 0x1, 0x0);
        gbc.writeMem(0x28ef, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb1ef);
        EXPECT(gbc.pc(), 0x28f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 035B
        gbc.setState(0x8f89, 0x9306, 0xcb50, 0xf9f, 0x321a, 0x686a, 0x1, 0x1);
        gbc.writeMem(0x8f89, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9306);
        EXPECT(gbc.pc(), 0x8f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f89), 0xcb);
        EXPECT(gbc.readMem(0x8f8a), 0x41);
        // CB 41 035C
        gbc.setState(0x2197, 0x157d, 0xadd0, 0xa91b, 0xe454, 0x3501, 0x0, 0x1);
        gbc.writeMem(0x2197, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x157d);
        EXPECT(gbc.pc(), 0x2199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 035D
        gbc.setState(0xaec1, 0x76f2, 0xed60, 0x8bc9, 0x288, 0x5971, 0x1, 0x0);
        gbc.writeMem(0xaec1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x76f2);
        EXPECT(gbc.pc(), 0xaec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec1), 0xcb);
        EXPECT(gbc.readMem(0xaec2), 0x41);
        // CB 41 035E
        gbc.setState(0x335a, 0x7587, 0x3e40, 0x62ad, 0xc3a3, 0x6c1c, 0x1, 0x0);
        gbc.writeMem(0x335a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7587);
        EXPECT(gbc.pc(), 0x335c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 035F
        gbc.setState(0x5c6b, 0xad0b, 0xe5b0, 0x5aef, 0xea2a, 0xdc07, 0x0, 0x0);
        gbc.writeMem(0x5c6b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xad0b);
        EXPECT(gbc.pc(), 0x5c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0360
        gbc.setState(0xc3d3, 0x748d, 0x29e0, 0xbe95, 0x4bdc, 0xb030, 0x0, 0x0);
        gbc.writeMem(0xc3d3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x748d);
        EXPECT(gbc.pc(), 0xc3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d3), 0xcb);
        EXPECT(gbc.readMem(0xc3d4), 0x41);
        // CB 41 0361
        gbc.setState(0x2ed7, 0x7a4d, 0xc210, 0xe2b1, 0x9f4d, 0xadf2, 0x1, 0x0);
        gbc.writeMem(0x2ed7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7a4d);
        EXPECT(gbc.pc(), 0x2ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0362
        gbc.setState(0x4db6, 0x7b7d, 0xd2a0, 0xc68c, 0x3d08, 0xc320, 0x0, 0x1);
        gbc.writeMem(0x4db6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7b7d);
        EXPECT(gbc.pc(), 0x4db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0363
        gbc.setState(0x2f3b, 0xfa4, 0x760, 0xf223, 0xfb95, 0xc6fa, 0x0, 0x1);
        gbc.writeMem(0x2f3b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfa4);
        EXPECT(gbc.pc(), 0x2f3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0364
        gbc.setState(0xb8ec, 0x54d, 0xecc0, 0x1dc7, 0xaa7a, 0x24bc, 0x1, 0x1);
        gbc.writeMem(0xb8ec, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x54d);
        EXPECT(gbc.pc(), 0xb8ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ec), 0xcb);
        EXPECT(gbc.readMem(0xb8ed), 0x41);
        // CB 41 0365
        gbc.setState(0xd8d4, 0xf00e, 0x1410, 0x36e, 0x2c0f, 0x3c29, 0x1, 0x0);
        gbc.writeMem(0xd8d4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf00e);
        EXPECT(gbc.pc(), 0xd8d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d4), 0xcb);
        EXPECT(gbc.readMem(0xd8d5), 0x41);
        // CB 41 0366
        gbc.setState(0xdfcb, 0x6cdb, 0x9180, 0xec79, 0xf1f5, 0xc77e, 0x0, 0x0);
        gbc.writeMem(0xdfcb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6cdb);
        EXPECT(gbc.pc(), 0xdfcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfcb), 0xcb);
        EXPECT(gbc.readMem(0xdfcc), 0x41);
        // CB 41 0367
        gbc.setState(0xe9e9, 0x7713, 0x77e0, 0xd2e6, 0x7fa3, 0x8777, 0x1, 0x1);
        gbc.writeMem(0xe9e9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7713);
        EXPECT(gbc.pc(), 0xe9eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e9), 0xcb);
        EXPECT(gbc.readMem(0xe9ea), 0x41);
        // CB 41 0368
        gbc.setState(0x3ec8, 0xc908, 0xed80, 0xe565, 0x1536, 0x2aaa, 0x0, 0x0);
        gbc.writeMem(0x3ec8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc908);
        EXPECT(gbc.pc(), 0x3eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0369
        gbc.setState(0xd2f7, 0x7311, 0xce90, 0xd636, 0x6fa, 0xd2ae, 0x0, 0x0);
        gbc.writeMem(0xd2f7, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7311);
        EXPECT(gbc.pc(), 0xd2f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f7), 0xcb);
        EXPECT(gbc.readMem(0xd2f8), 0x41);
        // CB 41 036A
        gbc.setState(0x4d03, 0x9374, 0x16a0, 0xe193, 0x2463, 0x8f43, 0x1, 0x1);
        gbc.writeMem(0x4d03, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9374);
        EXPECT(gbc.pc(), 0x4d05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 036B
        gbc.setState(0x7070, 0x859a, 0x7130, 0x6155, 0x7511, 0xd454, 0x0, 0x1);
        gbc.writeMem(0x7070, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x859a);
        EXPECT(gbc.pc(), 0x7072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 036C
        gbc.setState(0x752a, 0xa74b, 0x230, 0xcedf, 0x13f7, 0x4ed7, 0x0, 0x0);
        gbc.writeMem(0x752a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa74b);
        EXPECT(gbc.pc(), 0x752c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 036D
        gbc.setState(0x8b35, 0x3735, 0x3f20, 0x1487, 0xc5a3, 0xa6ac, 0x1, 0x1);
        gbc.writeMem(0x8b35, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3735);
        EXPECT(gbc.pc(), 0x8b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b35), 0xcb);
        EXPECT(gbc.readMem(0x8b36), 0x41);
        // CB 41 036E
        gbc.setState(0x7158, 0x14d1, 0xedb0, 0x6847, 0x1937, 0x2841, 0x1, 0x0);
        gbc.writeMem(0x7158, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x14d1);
        EXPECT(gbc.pc(), 0x715a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 036F
        gbc.setState(0x8a14, 0x57fe, 0x5030, 0xbb84, 0x7a99, 0x7835, 0x0, 0x1);
        gbc.writeMem(0x8a14, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x57fe);
        EXPECT(gbc.pc(), 0x8a16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a14), 0xcb);
        EXPECT(gbc.readMem(0x8a15), 0x41);
        // CB 41 0370
        gbc.setState(0xbf8e, 0x3cc1, 0x2d60, 0x45fc, 0x59ea, 0x4950, 0x0, 0x1);
        gbc.writeMem(0xbf8e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3cc1);
        EXPECT(gbc.pc(), 0xbf90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf8e), 0xcb);
        EXPECT(gbc.readMem(0xbf8f), 0x41);
        // CB 41 0371
        gbc.setState(0x1b9b, 0x9276, 0xd400, 0x2a54, 0x2fc4, 0xe32f, 0x0, 0x1);
        gbc.writeMem(0x1b9b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9276);
        EXPECT(gbc.pc(), 0x1b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0372
        gbc.setState(0x37b4, 0xf23e, 0x2530, 0xbbda, 0x3a45, 0xb692, 0x1, 0x1);
        gbc.writeMem(0x37b4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf23e);
        EXPECT(gbc.pc(), 0x37b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0373
        gbc.setState(0x3f1a, 0xd05, 0x41c0, 0xaad0, 0x3fc, 0x290c, 0x1, 0x0);
        gbc.writeMem(0x3f1a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd05);
        EXPECT(gbc.pc(), 0x3f1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0374
        gbc.setState(0x2c00, 0x370f, 0xb690, 0x1ad3, 0xe05a, 0x5857, 0x1, 0x1);
        gbc.writeMem(0x2c00, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x370f);
        EXPECT(gbc.pc(), 0x2c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0375
        gbc.setState(0x2bb5, 0xc15b, 0x9f20, 0x544e, 0x77c1, 0xc0f7, 0x0, 0x0);
        gbc.writeMem(0x2bb5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc15b);
        EXPECT(gbc.pc(), 0x2bb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0376
        gbc.setState(0xbda8, 0x9939, 0x69c0, 0xfdd0, 0xd13d, 0xd934, 0x1, 0x0);
        gbc.writeMem(0xbda8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9939);
        EXPECT(gbc.pc(), 0xbdaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda8), 0xcb);
        EXPECT(gbc.readMem(0xbda9), 0x41);
        // CB 41 0377
        gbc.setState(0x68d5, 0x2c5a, 0x72b0, 0xc044, 0x238f, 0x72f2, 0x1, 0x0);
        gbc.writeMem(0x68d5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2c5a);
        EXPECT(gbc.pc(), 0x68d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0378
        gbc.setState(0xe4c8, 0xcf23, 0x9c30, 0xe45, 0xd8fe, 0xcfb1, 0x0, 0x1);
        gbc.writeMem(0xe4c8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcf23);
        EXPECT(gbc.pc(), 0xe4ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c8), 0xcb);
        EXPECT(gbc.readMem(0xe4c9), 0x41);
        // CB 41 0379
        gbc.setState(0x242f, 0x24e4, 0xba80, 0x639f, 0x3b53, 0xcf6a, 0x0, 0x1);
        gbc.writeMem(0x242f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x24e4);
        EXPECT(gbc.pc(), 0x2431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 037A
        gbc.setState(0xe93c, 0x8a9b, 0x9df0, 0x3f2a, 0xe0ee, 0x3d3a, 0x0, 0x0);
        gbc.writeMem(0xe93c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8a9b);
        EXPECT(gbc.pc(), 0xe93e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe93c), 0xcb);
        EXPECT(gbc.readMem(0xe93d), 0x41);
        // CB 41 037B
        gbc.setState(0x530d, 0xc2f5, 0xf250, 0x208d, 0x7255, 0xcb5c, 0x0, 0x1);
        gbc.writeMem(0x530d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc2f5);
        EXPECT(gbc.pc(), 0x530f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 037C
        gbc.setState(0xceb1, 0x2c4b, 0x7fd0, 0xfb55, 0x8da0, 0x99a5, 0x0, 0x1);
        gbc.writeMem(0xceb1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2c4b);
        EXPECT(gbc.pc(), 0xceb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb1), 0xcb);
        EXPECT(gbc.readMem(0xceb2), 0x41);
        // CB 41 037D
        gbc.setState(0x8ba1, 0x97f7, 0xd070, 0x70c2, 0xcc99, 0xe026, 0x0, 0x1);
        gbc.writeMem(0x8ba1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x97f7);
        EXPECT(gbc.pc(), 0x8ba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba1), 0xcb);
        EXPECT(gbc.readMem(0x8ba2), 0x41);
        // CB 41 037E
        gbc.setState(0xebf1, 0x970c, 0xa590, 0x8433, 0x260d, 0x235, 0x1, 0x1);
        gbc.writeMem(0xebf1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x970c);
        EXPECT(gbc.pc(), 0xebf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf1), 0xcb);
        EXPECT(gbc.readMem(0xebf2), 0x41);
        // CB 41 037F
        gbc.setState(0x5dc6, 0x107c, 0x98a0, 0xd6b1, 0x91fc, 0xb60f, 0x1, 0x1);
        gbc.writeMem(0x5dc6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x107c);
        EXPECT(gbc.pc(), 0x5dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0381
        gbc.setState(0x7d77, 0x55af, 0x8d80, 0x826f, 0x7b5d, 0x3265, 0x0, 0x1);
        gbc.writeMem(0x7d77, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x55af);
        EXPECT(gbc.pc(), 0x7d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0382
        gbc.setState(0xde95, 0x33c, 0x2620, 0x2e1f, 0xef07, 0x9aa0, 0x0, 0x0);
        gbc.writeMem(0xde95, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x33c);
        EXPECT(gbc.pc(), 0xde97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde95), 0xcb);
        EXPECT(gbc.readMem(0xde96), 0x41);
        // CB 41 0383
        gbc.setState(0x71cc, 0xa87c, 0x690, 0x18d6, 0x181e, 0x5397, 0x1, 0x0);
        gbc.writeMem(0x71cc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa87c);
        EXPECT(gbc.pc(), 0x71ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0384
        gbc.setState(0xeec8, 0x9911, 0x89d0, 0x2d0a, 0xfde5, 0x5fc3, 0x0, 0x1);
        gbc.writeMem(0xeec8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9911);
        EXPECT(gbc.pc(), 0xeeca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec8), 0xcb);
        EXPECT(gbc.readMem(0xeec9), 0x41);
        // CB 41 0385
        gbc.setState(0x2dfc, 0xd1c, 0x9b70, 0xa696, 0x740d, 0x17a7, 0x0, 0x0);
        gbc.writeMem(0x2dfc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd1c);
        EXPECT(gbc.pc(), 0x2dfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0386
        gbc.setState(0xb5f5, 0x5861, 0xa850, 0x62a7, 0x3275, 0x4325, 0x0, 0x0);
        gbc.writeMem(0xb5f5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5861);
        EXPECT(gbc.pc(), 0xb5f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f5), 0xcb);
        EXPECT(gbc.readMem(0xb5f6), 0x41);
        // CB 41 0387
        gbc.setState(0x236, 0x272b, 0xbc60, 0xc425, 0x3968, 0x5c4, 0x0, 0x0);
        gbc.writeMem(0x236, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x272b);
        EXPECT(gbc.pc(), 0x238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0388
        gbc.setState(0xdf1e, 0xc55a, 0x91d0, 0xb2ed, 0x9a20, 0xfb17, 0x0, 0x1);
        gbc.writeMem(0xdf1e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc55a);
        EXPECT(gbc.pc(), 0xdf20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf1e), 0xcb);
        EXPECT(gbc.readMem(0xdf1f), 0x41);
        // CB 41 0389
        gbc.setState(0x895, 0x551c, 0x5b40, 0xc774, 0x5cee, 0x515a, 0x1, 0x1);
        gbc.writeMem(0x895, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x551c);
        EXPECT(gbc.pc(), 0x897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 038A
        gbc.setState(0x7b9a, 0x9d60, 0x7d20, 0x73b7, 0xe781, 0xf775, 0x1, 0x0);
        gbc.writeMem(0x7b9a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9d60);
        EXPECT(gbc.pc(), 0x7b9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 038B
        gbc.setState(0xdec9, 0xcf26, 0x780, 0x5464, 0x8280, 0x3180, 0x0, 0x0);
        gbc.writeMem(0xdec9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcf26);
        EXPECT(gbc.pc(), 0xdecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdec9), 0xcb);
        EXPECT(gbc.readMem(0xdeca), 0x41);
        // CB 41 038C
        gbc.setState(0x6739, 0x83ab, 0x8f50, 0x2903, 0x8d20, 0xdfa1, 0x0, 0x0);
        gbc.writeMem(0x6739, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x83ab);
        EXPECT(gbc.pc(), 0x673b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 038D
        gbc.setState(0x3d2c, 0xc12c, 0xb5b0, 0x5c36, 0x661d, 0xb3f, 0x0, 0x0);
        gbc.writeMem(0x3d2c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc12c);
        EXPECT(gbc.pc(), 0x3d2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 038E
        gbc.setState(0x866a, 0xf9b1, 0xbc00, 0x224a, 0x656e, 0xefd3, 0x1, 0x0);
        gbc.writeMem(0x866a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf9b1);
        EXPECT(gbc.pc(), 0x866c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866a), 0xcb);
        EXPECT(gbc.readMem(0x866b), 0x41);
        // CB 41 038F
        gbc.setState(0xb76b, 0x7f44, 0xf300, 0x73b6, 0x72fc, 0x3a7c, 0x0, 0x1);
        gbc.writeMem(0xb76b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7f44);
        EXPECT(gbc.pc(), 0xb76d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb76b), 0xcb);
        EXPECT(gbc.readMem(0xb76c), 0x41);
        // CB 41 0390
        gbc.setState(0x5447, 0xac86, 0x2a00, 0xf96e, 0x1640, 0x15ec, 0x1, 0x0);
        gbc.writeMem(0x5447, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xac86);
        EXPECT(gbc.pc(), 0x5449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0391
        gbc.setState(0x835f, 0xb8e8, 0xa5f0, 0x34f9, 0x3602, 0x86af, 0x0, 0x0);
        gbc.writeMem(0x835f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb8e8);
        EXPECT(gbc.pc(), 0x8361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835f), 0xcb);
        EXPECT(gbc.readMem(0x8360), 0x41);
        // CB 41 0392
        gbc.setState(0xb586, 0xeea2, 0x1ea0, 0xbbee, 0x344a, 0x19ff, 0x0, 0x1);
        gbc.writeMem(0xb586, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xeea2);
        EXPECT(gbc.pc(), 0xb588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb586), 0xcb);
        EXPECT(gbc.readMem(0xb587), 0x41);
        // CB 41 0393
        gbc.setState(0x28cf, 0xffc, 0xaef0, 0x363b, 0x5198, 0x780f, 0x1, 0x1);
        gbc.writeMem(0x28cf, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xffc);
        EXPECT(gbc.pc(), 0x28d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0394
        gbc.setState(0x7fd5, 0xab78, 0x7570, 0x164d, 0xc728, 0xc906, 0x0, 0x1);
        gbc.writeMem(0x7fd5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xab78);
        EXPECT(gbc.pc(), 0x7fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 0395
        gbc.setState(0x8e41, 0xc137, 0xf9b0, 0x35e3, 0xc4f6, 0xf48e, 0x1, 0x1);
        gbc.writeMem(0x8e41, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc137);
        EXPECT(gbc.pc(), 0x8e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e41), 0xcb);
        EXPECT(gbc.readMem(0x8e42), 0x41);
        // CB 41 0396
        gbc.setState(0xef68, 0x4b43, 0x2e10, 0x36fb, 0xe042, 0xfe78, 0x1, 0x1);
        gbc.writeMem(0xef68, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4b43);
        EXPECT(gbc.pc(), 0xef6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef68), 0xcb);
        EXPECT(gbc.readMem(0xef69), 0x41);
        // CB 41 0398
        gbc.setState(0x76b6, 0x4992, 0x3d60, 0x4288, 0xafe, 0xa385, 0x0, 0x1);
        gbc.writeMem(0x76b6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4992);
        EXPECT(gbc.pc(), 0x76b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 0399
        gbc.setState(0x7602, 0x953e, 0x2e50, 0x82a6, 0x70d4, 0xcd95, 0x1, 0x0);
        gbc.writeMem(0x7602, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x953e);
        EXPECT(gbc.pc(), 0x7604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 039A
        gbc.setState(0xa42c, 0x1435, 0x7b10, 0x9652, 0xceb7, 0x8d30, 0x1, 0x1);
        gbc.writeMem(0xa42c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1435);
        EXPECT(gbc.pc(), 0xa42e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa42c), 0xcb);
        EXPECT(gbc.readMem(0xa42d), 0x41);
        // CB 41 039B
        gbc.setState(0x5bb9, 0xb84c, 0x8cc0, 0x85fe, 0xcec9, 0x1d9, 0x1, 0x0);
        gbc.writeMem(0x5bb9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb84c);
        EXPECT(gbc.pc(), 0x5bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 039D
        gbc.setState(0x3162, 0x5745, 0x37c0, 0xc691, 0xca3f, 0xff4f, 0x1, 0x0);
        gbc.writeMem(0x3162, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5745);
        EXPECT(gbc.pc(), 0x3164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 039E
        gbc.setState(0xd72f, 0xa0cb, 0x1940, 0x4fd, 0x5efb, 0x7cba, 0x0, 0x1);
        gbc.writeMem(0xd72f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa0cb);
        EXPECT(gbc.pc(), 0xd731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd72f), 0xcb);
        EXPECT(gbc.readMem(0xd730), 0x41);
        // CB 41 039F
        gbc.setState(0x9891, 0x6185, 0xd890, 0xe5df, 0xb015, 0xe435, 0x1, 0x1);
        gbc.writeMem(0x9891, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6185);
        EXPECT(gbc.pc(), 0x9893);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9891), 0xcb);
        EXPECT(gbc.readMem(0x9892), 0x41);
        // CB 41 03A1
        gbc.setState(0x9aec, 0x4587, 0x5e90, 0x4b5c, 0x811b, 0xf937, 0x0, 0x1);
        gbc.writeMem(0x9aec, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4587);
        EXPECT(gbc.pc(), 0x9aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aec), 0xcb);
        EXPECT(gbc.readMem(0x9aed), 0x41);
        // CB 41 03A2
        gbc.setState(0x6206, 0x857f, 0x8c60, 0x1ac7, 0xc627, 0xe135, 0x0, 0x0);
        gbc.writeMem(0x6206, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x857f);
        EXPECT(gbc.pc(), 0x6208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03A3
        gbc.setState(0xcd57, 0xacdf, 0x45a0, 0xf46c, 0x64ea, 0xc1a0, 0x1, 0x0);
        gbc.writeMem(0xcd57, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xacdf);
        EXPECT(gbc.pc(), 0xcd59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd57), 0xcb);
        EXPECT(gbc.readMem(0xcd58), 0x41);
        // CB 41 03A4
        gbc.setState(0xe7e2, 0x15fa, 0x68b0, 0x728c, 0x6f0, 0xe851, 0x1, 0x0);
        gbc.writeMem(0xe7e2, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x15fa);
        EXPECT(gbc.pc(), 0xe7e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7e2), 0xcb);
        EXPECT(gbc.readMem(0xe7e3), 0x41);
        // CB 41 03A5
        gbc.setState(0x8a1e, 0x471, 0x2940, 0x4de3, 0xae11, 0x8a1, 0x1, 0x0);
        gbc.writeMem(0x8a1e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x471);
        EXPECT(gbc.pc(), 0x8a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a1e), 0xcb);
        EXPECT(gbc.readMem(0x8a1f), 0x41);
        // CB 41 03A6
        gbc.setState(0x6873, 0xe821, 0xf720, 0x9a3e, 0x4bc5, 0x53d9, 0x0, 0x0);
        gbc.writeMem(0x6873, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe821);
        EXPECT(gbc.pc(), 0x6875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03A7
        gbc.setState(0x5811, 0x3c5, 0x1470, 0x20db, 0xd234, 0xa061, 0x0, 0x1);
        gbc.writeMem(0x5811, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3c5);
        EXPECT(gbc.pc(), 0x5813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03A8
        gbc.setState(0xc95, 0x8c24, 0x4490, 0xc51e, 0x6267, 0x374d, 0x0, 0x1);
        gbc.writeMem(0xc95, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8c24);
        EXPECT(gbc.pc(), 0xc97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03A9
        gbc.setState(0x6c54, 0xe1c9, 0x700, 0xf31c, 0x46e9, 0xc099, 0x1, 0x0);
        gbc.writeMem(0x6c54, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe1c9);
        EXPECT(gbc.pc(), 0x6c56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03AA
        gbc.setState(0x5569, 0x62d4, 0x6dd0, 0xe1f3, 0x75f5, 0x73e9, 0x1, 0x1);
        gbc.writeMem(0x5569, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x62d4);
        EXPECT(gbc.pc(), 0x556b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03AB
        gbc.setState(0x5aa9, 0x4da1, 0x4f90, 0xf6cb, 0x51a5, 0xbf39, 0x1, 0x1);
        gbc.writeMem(0x5aa9, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4da1);
        EXPECT(gbc.pc(), 0x5aab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03AC
        gbc.setState(0x7b41, 0x9ad4, 0xa460, 0xa374, 0xfb45, 0x9520, 0x0, 0x1);
        gbc.writeMem(0x7b41, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9ad4);
        EXPECT(gbc.pc(), 0x7b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03AD
        gbc.setState(0x93d8, 0x3109, 0xb4e0, 0x3230, 0xb822, 0x63a9, 0x0, 0x1);
        gbc.writeMem(0x93d8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3109);
        EXPECT(gbc.pc(), 0x93da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d8), 0xcb);
        EXPECT(gbc.readMem(0x93d9), 0x41);
        // CB 41 03AE
        gbc.setState(0xdc1d, 0xec9, 0x88e0, 0xf12d, 0x1786, 0x3d55, 0x1, 0x1);
        gbc.writeMem(0xdc1d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xec9);
        EXPECT(gbc.pc(), 0xdc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc1d), 0xcb);
        EXPECT(gbc.readMem(0xdc1e), 0x41);
        // CB 41 03AF
        gbc.setState(0x858d, 0xe2a5, 0x6de0, 0x1b70, 0x844b, 0xa534, 0x0, 0x0);
        gbc.writeMem(0x858d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe2a5);
        EXPECT(gbc.pc(), 0x858f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x858d), 0xcb);
        EXPECT(gbc.readMem(0x858e), 0x41);
        // CB 41 03B0
        gbc.setState(0xc354, 0x9905, 0xc490, 0x2b6, 0x3f3d, 0x1264, 0x1, 0x0);
        gbc.writeMem(0xc354, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9905);
        EXPECT(gbc.pc(), 0xc356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc354), 0xcb);
        EXPECT(gbc.readMem(0xc355), 0x41);
        // CB 41 03B1
        gbc.setState(0x62f8, 0x1, 0x7540, 0xc0d6, 0xfe41, 0xfd17, 0x0, 0x1);
        gbc.writeMem(0x62f8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1);
        EXPECT(gbc.pc(), 0x62fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03B2
        gbc.setState(0xd508, 0x4df5, 0xdc30, 0x2976, 0xf823, 0xc704, 0x1, 0x1);
        gbc.writeMem(0xd508, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4df5);
        EXPECT(gbc.pc(), 0xd50a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd508), 0xcb);
        EXPECT(gbc.readMem(0xd509), 0x41);
        // CB 41 03B3
        gbc.setState(0x7ce6, 0x36cb, 0x2760, 0xfa1b, 0x3a8d, 0x93df, 0x0, 0x0);
        gbc.writeMem(0x7ce6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x36cb);
        EXPECT(gbc.pc(), 0x7ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03B4
        gbc.setState(0x19c, 0x3541, 0xf9c0, 0x144b, 0x7205, 0xc94e, 0x0, 0x1);
        gbc.writeMem(0x19c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3541);
        EXPECT(gbc.pc(), 0x19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03B5
        gbc.setState(0xfd5, 0x67b8, 0x6960, 0x4bc1, 0x448b, 0x377b, 0x0, 0x0);
        gbc.writeMem(0xfd5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x67b8);
        EXPECT(gbc.pc(), 0xfd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03B6
        gbc.setState(0x9dde, 0x57fc, 0xd8d0, 0x2ca2, 0xbb45, 0x6bfb, 0x1, 0x0);
        gbc.writeMem(0x9dde, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x57fc);
        EXPECT(gbc.pc(), 0x9de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dde), 0xcb);
        EXPECT(gbc.readMem(0x9ddf), 0x41);
        // CB 41 03B7
        gbc.setState(0x6ee6, 0x2f52, 0x4c50, 0xead3, 0x8600, 0xe283, 0x0, 0x1);
        gbc.writeMem(0x6ee6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2f52);
        EXPECT(gbc.pc(), 0x6ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03B8
        gbc.setState(0x4632, 0xcce0, 0x59b0, 0x1a04, 0x23f5, 0x36c, 0x1, 0x0);
        gbc.writeMem(0x4632, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcce0);
        EXPECT(gbc.pc(), 0x4634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03B9
        gbc.setState(0xb8e8, 0xde4c, 0xe040, 0xed47, 0xec42, 0x463, 0x1, 0x0);
        gbc.writeMem(0xb8e8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xde4c);
        EXPECT(gbc.pc(), 0xb8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8e8), 0xcb);
        EXPECT(gbc.readMem(0xb8e9), 0x41);
        // CB 41 03BA
        gbc.setState(0x7aab, 0x4914, 0x9c90, 0x26c, 0xe670, 0xe20e, 0x1, 0x0);
        gbc.writeMem(0x7aab, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4914);
        EXPECT(gbc.pc(), 0x7aad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03BB
        gbc.setState(0xb891, 0xa48e, 0x9930, 0x13ed, 0xee37, 0x5431, 0x0, 0x0);
        gbc.writeMem(0xb891, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa48e);
        EXPECT(gbc.pc(), 0xb893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb891), 0xcb);
        EXPECT(gbc.readMem(0xb892), 0x41);
        // CB 41 03BC
        gbc.setState(0xbb9a, 0xcc49, 0xc320, 0x374a, 0x5f0f, 0x49a1, 0x1, 0x0);
        gbc.writeMem(0xbb9a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcc49);
        EXPECT(gbc.pc(), 0xbb9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb9a), 0xcb);
        EXPECT(gbc.readMem(0xbb9b), 0x41);
        // CB 41 03BD
        gbc.setState(0x11c6, 0x9abc, 0xc440, 0x1b3a, 0x66bd, 0x69, 0x0, 0x0);
        gbc.writeMem(0x11c6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9abc);
        EXPECT(gbc.pc(), 0x11c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03BE
        gbc.setState(0x1089, 0xe0b2, 0x8fb0, 0x1c00, 0x147c, 0x7337, 0x1, 0x1);
        gbc.writeMem(0x1089, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe0b2);
        EXPECT(gbc.pc(), 0x108b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03BF
        gbc.setState(0x678e, 0x24db, 0x6380, 0x53b0, 0xf8ad, 0xccc5, 0x1, 0x1);
        gbc.writeMem(0x678e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x24db);
        EXPECT(gbc.pc(), 0x6790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03C0
        gbc.setState(0xa83d, 0xb2e, 0x2e30, 0x8ca9, 0xf3c2, 0x2e8d, 0x1, 0x1);
        gbc.writeMem(0xa83d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb2e);
        EXPECT(gbc.pc(), 0xa83f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa83d), 0xcb);
        EXPECT(gbc.readMem(0xa83e), 0x41);
        // CB 41 03C2
        gbc.setState(0x48f4, 0xaeca, 0x1620, 0x8efc, 0xff7d, 0x4c93, 0x1, 0x1);
        gbc.writeMem(0x48f4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xaeca);
        EXPECT(gbc.pc(), 0x48f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03C3
        gbc.setState(0xceee, 0x7cfe, 0x6100, 0x2116, 0x892, 0x9ac7, 0x1, 0x0);
        gbc.writeMem(0xceee, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7cfe);
        EXPECT(gbc.pc(), 0xcef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceee), 0xcb);
        EXPECT(gbc.readMem(0xceef), 0x41);
        // CB 41 03C4
        gbc.setState(0xefb3, 0x433c, 0xf2c0, 0x8f62, 0xe09c, 0x849, 0x1, 0x0);
        gbc.writeMem(0xefb3, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x433c);
        EXPECT(gbc.pc(), 0xefb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefb3), 0xcb);
        EXPECT(gbc.readMem(0xefb4), 0x41);
        // CB 41 03C5
        gbc.setState(0x5865, 0x2cd5, 0x4c80, 0xec13, 0x1bcb, 0x2788, 0x1, 0x1);
        gbc.writeMem(0x5865, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2cd5);
        EXPECT(gbc.pc(), 0x5867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03C6
        gbc.setState(0xda37, 0xa4e7, 0x3f10, 0x153b, 0xd93e, 0xba74, 0x0, 0x0);
        gbc.writeMem(0xda37, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa4e7);
        EXPECT(gbc.pc(), 0xda39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda37), 0xcb);
        EXPECT(gbc.readMem(0xda38), 0x41);
        // CB 41 03C7
        gbc.setState(0x7512, 0xfbd2, 0xae40, 0x2859, 0x4af2, 0x6230, 0x0, 0x1);
        gbc.writeMem(0x7512, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfbd2);
        EXPECT(gbc.pc(), 0x7514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03C8
        gbc.setState(0x9516, 0x8289, 0x34c0, 0xff28, 0x443e, 0x6ede, 0x0, 0x1);
        gbc.writeMem(0x9516, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8289);
        EXPECT(gbc.pc(), 0x9518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9516), 0xcb);
        EXPECT(gbc.readMem(0x9517), 0x41);
        // CB 41 03C9
        gbc.setState(0x74e4, 0xca4c, 0x38c0, 0x3059, 0x4568, 0xab1a, 0x0, 0x1);
        gbc.writeMem(0x74e4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xca4c);
        EXPECT(gbc.pc(), 0x74e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03CA
        gbc.setState(0xc570, 0x1714, 0x5a20, 0xd1bd, 0x472, 0xbce9, 0x1, 0x0);
        gbc.writeMem(0xc570, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1714);
        EXPECT(gbc.pc(), 0xc572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc570), 0xcb);
        EXPECT(gbc.readMem(0xc571), 0x41);
        // CB 41 03CB
        gbc.setState(0x918a, 0xf09b, 0x52e0, 0x73b2, 0x64c2, 0x5dee, 0x0, 0x1);
        gbc.writeMem(0x918a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf09b);
        EXPECT(gbc.pc(), 0x918c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918a), 0xcb);
        EXPECT(gbc.readMem(0x918b), 0x41);
        // CB 41 03CC
        gbc.setState(0x40ca, 0xaee0, 0xea20, 0x8537, 0xe7e8, 0x1102, 0x1, 0x1);
        gbc.writeMem(0x40ca, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xaee0);
        EXPECT(gbc.pc(), 0x40cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03CD
        gbc.setState(0xdd6d, 0x838b, 0x1390, 0xe43b, 0xc40f, 0xe0fc, 0x0, 0x1);
        gbc.writeMem(0xdd6d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x838b);
        EXPECT(gbc.pc(), 0xdd6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd6d), 0xcb);
        EXPECT(gbc.readMem(0xdd6e), 0x41);
        // CB 41 03CE
        gbc.setState(0xe676, 0xda5b, 0xbce0, 0x9d83, 0xfe6a, 0x5896, 0x0, 0x0);
        gbc.writeMem(0xe676, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xda5b);
        EXPECT(gbc.pc(), 0xe678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe676), 0xcb);
        EXPECT(gbc.readMem(0xe677), 0x41);
        // CB 41 03CF
        gbc.setState(0x1dc6, 0x8e58, 0xf90, 0x9a74, 0x784e, 0x7e57, 0x0, 0x0);
        gbc.writeMem(0x1dc6, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8e58);
        EXPECT(gbc.pc(), 0x1dc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03D0
        gbc.setState(0x30a8, 0x71be, 0x7250, 0xc41, 0x56c7, 0xa1af, 0x0, 0x0);
        gbc.writeMem(0x30a8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x71be);
        EXPECT(gbc.pc(), 0x30aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03D1
        gbc.setState(0x3499, 0xab18, 0x2280, 0x8abe, 0xf9d0, 0x3ada, 0x1, 0x0);
        gbc.writeMem(0x3499, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xab18);
        EXPECT(gbc.pc(), 0x349b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03D2
        gbc.setState(0x48d5, 0x9572, 0xe6a0, 0x6c0d, 0x1314, 0xda34, 0x0, 0x1);
        gbc.writeMem(0x48d5, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9572);
        EXPECT(gbc.pc(), 0x48d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03D3
        gbc.setState(0xa1fb, 0x1c, 0x8990, 0x78e8, 0xfaa5, 0x21aa, 0x0, 0x1);
        gbc.writeMem(0xa1fb, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1c);
        EXPECT(gbc.pc(), 0xa1fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1fb), 0xcb);
        EXPECT(gbc.readMem(0xa1fc), 0x41);
        // CB 41 03D4
        gbc.setState(0xabcc, 0xe395, 0x86c0, 0xf4c, 0xd265, 0xbb28, 0x0, 0x0);
        gbc.writeMem(0xabcc, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe395);
        EXPECT(gbc.pc(), 0xabce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabcc), 0xcb);
        EXPECT(gbc.readMem(0xabcd), 0x41);
        // CB 41 03D5
        gbc.setState(0x285e, 0xca22, 0x8ad0, 0x2c95, 0x2082, 0xf5b3, 0x0, 0x1);
        gbc.writeMem(0x285e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xca22);
        EXPECT(gbc.pc(), 0x2860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03D6
        gbc.setState(0x9cf8, 0xf1c, 0xe240, 0xc958, 0xd65b, 0x2f66, 0x1, 0x0);
        gbc.writeMem(0x9cf8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf1c);
        EXPECT(gbc.pc(), 0x9cfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf8), 0xcb);
        EXPECT(gbc.readMem(0x9cf9), 0x41);
        // CB 41 03D7
        gbc.setState(0x4696, 0x4ee3, 0xbb30, 0xfa62, 0x9160, 0xe8b7, 0x1, 0x1);
        gbc.writeMem(0x4696, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4ee3);
        EXPECT(gbc.pc(), 0x4698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03D8
        gbc.setState(0xef10, 0x6fbd, 0xe210, 0xb30d, 0x115e, 0x258d, 0x0, 0x0);
        gbc.writeMem(0xef10, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6fbd);
        EXPECT(gbc.pc(), 0xef12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef10), 0xcb);
        EXPECT(gbc.readMem(0xef11), 0x41);
        // CB 41 03D9
        gbc.setState(0x75a1, 0xa4ce, 0x2410, 0x9a43, 0xceda, 0xdc1f, 0x0, 0x1);
        gbc.writeMem(0x75a1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa4ce);
        EXPECT(gbc.pc(), 0x75a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03DA
        gbc.setState(0x283c, 0x660e, 0x1420, 0xc83c, 0xa5f5, 0xbfd0, 0x0, 0x1);
        gbc.writeMem(0x283c, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x660e);
        EXPECT(gbc.pc(), 0x283e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 41 03DB
        gbc.setState(0x560e, 0xe13e, 0x770, 0xe36b, 0x59e0, 0xec81, 0x1, 0x0);
        gbc.writeMem(0x560e, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe13e);
        EXPECT(gbc.pc(), 0x5610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03DC
        gbc.setState(0xdd5d, 0xefcb, 0xab80, 0xcb54, 0xf59d, 0xec53, 0x1, 0x1);
        gbc.writeMem(0xdd5d, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xefcb);
        EXPECT(gbc.pc(), 0xdd5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd5d), 0xcb);
        EXPECT(gbc.readMem(0xdd5e), 0x41);
        // CB 41 03DD
        gbc.setState(0xd77f, 0x9d63, 0xbdf0, 0xec85, 0xfd34, 0xbefb, 0x1, 0x1);
        gbc.writeMem(0xd77f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9d63);
        EXPECT(gbc.pc(), 0xd781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd77f), 0xcb);
        EXPECT(gbc.readMem(0xd780), 0x41);
        // CB 41 03DE
        gbc.setState(0x247f, 0x4c69, 0x4730, 0xc198, 0xb19c, 0x4f2e, 0x1, 0x0);
        gbc.writeMem(0x247f, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4c69);
        EXPECT(gbc.pc(), 0x2481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03DF
        gbc.setState(0xad0b, 0x9926, 0x1b70, 0x7fc5, 0xc805, 0x493f, 0x0, 0x0);
        gbc.writeMem(0xad0b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9926);
        EXPECT(gbc.pc(), 0xad0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad0b), 0xcb);
        EXPECT(gbc.readMem(0xad0c), 0x41);
        // CB 41 03E0
        gbc.setState(0xb656, 0xe593, 0x6dc0, 0xebd2, 0x8bd, 0xe606, 0x0, 0x0);
        gbc.writeMem(0xb656, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe593);
        EXPECT(gbc.pc(), 0xb658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb656), 0xcb);
        EXPECT(gbc.readMem(0xb657), 0x41);
        // CB 41 03E1
        gbc.setState(0xc0a4, 0xf544, 0x4de0, 0x223c, 0x81ad, 0xf62, 0x1, 0x0);
        gbc.writeMem(0xc0a4, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf544);
        EXPECT(gbc.pc(), 0xc0a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a4), 0xcb);
        EXPECT(gbc.readMem(0xc0a5), 0x41);
        // CB 41 03E3
        gbc.setState(0x8578, 0x6792, 0xc330, 0xd5ba, 0x983a, 0xc200, 0x0, 0x0);
        gbc.writeMem(0x8578, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6792);
        EXPECT(gbc.pc(), 0x857a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8578), 0xcb);
        EXPECT(gbc.readMem(0x8579), 0x41);
        // CB 41 03E4
        gbc.setState(0x730b, 0x2fb5, 0xf30, 0x6984, 0x2fc3, 0x3bb5, 0x1, 0x0);
        gbc.writeMem(0x730b, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2fb5);
        EXPECT(gbc.pc(), 0x730d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03E5
        gbc.setState(0x1da8, 0xa941, 0xb470, 0x6d59, 0x9950, 0x1a83, 0x1, 0x1);
        gbc.writeMem(0x1da8, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa941);
        EXPECT(gbc.pc(), 0x1daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 41 03E6
        gbc.setState(0xe5e1, 0xf5, 0x5c90, 0xbb6e, 0xba2e, 0xca5e, 0x0, 0x1);
        gbc.writeMem(0xe5e1, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf5);
        EXPECT(gbc.pc(), 0xe5e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e1), 0xcb);
        EXPECT(gbc.readMem(0xe5e2), 0x41);
        // CB 41 03E7
        gbc.setState(0x1c3a, 0x3251, 0x7830, 0x43cd, 0xbdce, 0xedf4, 0x0, 0x0);
        gbc.writeMem(0x1c3a, { 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3251);
        EXPECT(gbc.pc(), 0x1c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
