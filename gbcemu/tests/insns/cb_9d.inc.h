    TEST(gbcemu, opcode_cb_9d) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 9D 0000
        gbc.setState(0x7944, 0x2373, 0x2fe0, 0x4a18, 0x83e6, 0xd117, 0x0, 0x0);
        gbc.writeMem(0x7944, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2373);
        EXPECT(gbc.pc(), 0x7946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0001
        gbc.setState(0xcf4b, 0x1fca, 0x9150, 0x5cb8, 0xce3f, 0xaec8, 0x1, 0x1);
        gbc.writeMem(0xcf4b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1fca);
        EXPECT(gbc.pc(), 0xcf4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf4b), 0xcb);
        EXPECT(gbc.readMem(0xcf4c), 0x9d);
        // CB 9D 0002
        gbc.setState(0x74a0, 0xdbb6, 0xc150, 0x3356, 0x45eb, 0x67a0, 0x0, 0x0);
        gbc.writeMem(0x74a0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xdbb6);
        EXPECT(gbc.pc(), 0x74a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0003
        gbc.setState(0x333c, 0x3b4b, 0x8380, 0x9468, 0xaf11, 0x8dc5, 0x0, 0x1);
        gbc.writeMem(0x333c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3b4b);
        EXPECT(gbc.pc(), 0x333e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0004
        gbc.setState(0xe7b1, 0xa53a, 0x5710, 0x3a01, 0xa285, 0x66c8, 0x1, 0x1);
        gbc.writeMem(0xe7b1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa53a);
        EXPECT(gbc.pc(), 0xe7b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7b1), 0xcb);
        EXPECT(gbc.readMem(0xe7b2), 0x9d);
        // CB 9D 0005
        gbc.setState(0x1dba, 0x79ac, 0x49f0, 0x39c9, 0x9479, 0xdd3d, 0x1, 0x0);
        gbc.writeMem(0x1dba, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x79ac);
        EXPECT(gbc.pc(), 0x1dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0006
        gbc.setState(0xac3a, 0xa704, 0xbf50, 0x3ef0, 0x2315, 0xe6ee, 0x0, 0x1);
        gbc.writeMem(0xac3a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa704);
        EXPECT(gbc.pc(), 0xac3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac3a), 0xcb);
        EXPECT(gbc.readMem(0xac3b), 0x9d);
        // CB 9D 0007
        gbc.setState(0xe64d, 0xc10e, 0x42d0, 0xc4eb, 0x7500, 0xa012, 0x1, 0x1);
        gbc.writeMem(0xe64d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc10e);
        EXPECT(gbc.pc(), 0xe64f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64d), 0xcb);
        EXPECT(gbc.readMem(0xe64e), 0x9d);
        // CB 9D 0008
        gbc.setState(0x1bf6, 0x6412, 0x8290, 0x7a73, 0xa078, 0x4897, 0x1, 0x0);
        gbc.writeMem(0x1bf6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6412);
        EXPECT(gbc.pc(), 0x1bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0009
        gbc.setState(0xa9ca, 0x283b, 0x2f10, 0x571b, 0x1855, 0xfcc7, 0x0, 0x0);
        gbc.writeMem(0xa9ca, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x283b);
        EXPECT(gbc.pc(), 0xa9cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ca), 0xcb);
        EXPECT(gbc.readMem(0xa9cb), 0x9d);
        // CB 9D 000A
        gbc.setState(0xb22e, 0x9b61, 0x3d40, 0x10af, 0x3590, 0xeb79, 0x1, 0x1);
        gbc.writeMem(0xb22e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9b61);
        EXPECT(gbc.pc(), 0xb230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb22e), 0xcb);
        EXPECT(gbc.readMem(0xb22f), 0x9d);
        // CB 9D 000B
        gbc.setState(0x9de1, 0x2acb, 0x5510, 0x19ce, 0x97c2, 0xed33, 0x0, 0x1);
        gbc.writeMem(0x9de1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2acb);
        EXPECT(gbc.pc(), 0x9de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de1), 0xcb);
        EXPECT(gbc.readMem(0x9de2), 0x9d);
        // CB 9D 000C
        gbc.setState(0x3b17, 0xf7d4, 0x7740, 0xa353, 0x2be8, 0xd8ed, 0x1, 0x0);
        gbc.writeMem(0x3b17, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf7d4);
        EXPECT(gbc.pc(), 0x3b19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 000D
        gbc.setState(0x2e9e, 0x9228, 0x3e60, 0x175a, 0x4386, 0xdd7c, 0x1, 0x0);
        gbc.writeMem(0x2e9e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9228);
        EXPECT(gbc.pc(), 0x2ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 000E
        gbc.setState(0xe031, 0x76a9, 0x5020, 0xbdc7, 0x9f0c, 0x21ff, 0x1, 0x0);
        gbc.writeMem(0xe031, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x76a9);
        EXPECT(gbc.pc(), 0xe033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe031), 0xcb);
        EXPECT(gbc.readMem(0xe032), 0x9d);
        // CB 9D 000F
        gbc.setState(0xc807, 0x1b3c, 0x6a10, 0xa219, 0xed98, 0xf52e, 0x0, 0x0);
        gbc.writeMem(0xc807, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1b3c);
        EXPECT(gbc.pc(), 0xc809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc807), 0xcb);
        EXPECT(gbc.readMem(0xc808), 0x9d);
        // CB 9D 0011
        gbc.setState(0x3949, 0xa536, 0xd830, 0x6e39, 0xf862, 0x3073, 0x1, 0x1);
        gbc.writeMem(0x3949, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa536);
        EXPECT(gbc.pc(), 0x394b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0012
        gbc.setState(0x622a, 0x8420, 0xc490, 0x2cdc, 0x9f0e, 0xe3d0, 0x0, 0x1);
        gbc.writeMem(0x622a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8420);
        EXPECT(gbc.pc(), 0x622c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0013
        gbc.setState(0x6f2b, 0xeeec, 0x82a0, 0x7fec, 0x36f7, 0xb23b, 0x1, 0x0);
        gbc.writeMem(0x6f2b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xeeec);
        EXPECT(gbc.pc(), 0x6f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0014
        gbc.setState(0x2c3d, 0x1f39, 0x4000, 0xb9e1, 0xa9d1, 0x5c27, 0x1, 0x0);
        gbc.writeMem(0x2c3d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1f39);
        EXPECT(gbc.pc(), 0x2c3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0015
        gbc.setState(0x291e, 0xf5a0, 0x21b0, 0x8f94, 0xb5e6, 0x4bb8, 0x1, 0x0);
        gbc.writeMem(0x291e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf5a0);
        EXPECT(gbc.pc(), 0x2920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0016
        gbc.setState(0xf5c, 0xffba, 0x650, 0x68c0, 0xc1ce, 0x69e2, 0x1, 0x1);
        gbc.writeMem(0xf5c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xffba);
        EXPECT(gbc.pc(), 0xf5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0017
        gbc.setState(0xe1a6, 0x62c6, 0x8050, 0x888b, 0x5622, 0xabe1, 0x0, 0x1);
        gbc.writeMem(0xe1a6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x62c6);
        EXPECT(gbc.pc(), 0xe1a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1a6), 0xcb);
        EXPECT(gbc.readMem(0xe1a7), 0x9d);
        // CB 9D 0018
        gbc.setState(0xa86f, 0x1116, 0x5400, 0x5069, 0xea3e, 0xcac6, 0x0, 0x0);
        gbc.writeMem(0xa86f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1116);
        EXPECT(gbc.pc(), 0xa871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86f), 0xcb);
        EXPECT(gbc.readMem(0xa870), 0x9d);
        // CB 9D 0019
        gbc.setState(0x2737, 0x4d47, 0x9210, 0xc57b, 0x497c, 0xc5a5, 0x1, 0x0);
        gbc.writeMem(0x2737, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4d47);
        EXPECT(gbc.pc(), 0x2739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 001B
        gbc.setState(0x5cbd, 0x3ca9, 0x6670, 0x8a6b, 0x64a0, 0x3698, 0x0, 0x0);
        gbc.writeMem(0x5cbd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3ca9);
        EXPECT(gbc.pc(), 0x5cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 001C
        gbc.setState(0xcf54, 0x36e0, 0x7880, 0xf8be, 0x7dc, 0xb73e, 0x0, 0x1);
        gbc.writeMem(0xcf54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x36e0);
        EXPECT(gbc.pc(), 0xcf56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf54), 0xcb);
        EXPECT(gbc.readMem(0xcf55), 0x9d);
        // CB 9D 001D
        gbc.setState(0xbcd4, 0x1d45, 0x83d0, 0xd37, 0xd300, 0xf5f3, 0x0, 0x0);
        gbc.writeMem(0xbcd4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1d45);
        EXPECT(gbc.pc(), 0xbcd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd4), 0xcb);
        EXPECT(gbc.readMem(0xbcd5), 0x9d);
        // CB 9D 001E
        gbc.setState(0x990b, 0x8bd5, 0x5170, 0xb77e, 0xbba7, 0x4601, 0x0, 0x0);
        gbc.writeMem(0x990b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8bd5);
        EXPECT(gbc.pc(), 0x990d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990b), 0xcb);
        EXPECT(gbc.readMem(0x990c), 0x9d);
        // CB 9D 001F
        gbc.setState(0xd80d, 0xf40e, 0x8590, 0x28df, 0x54c0, 0xff80, 0x0, 0x1);
        gbc.writeMem(0xd80d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf40e);
        EXPECT(gbc.pc(), 0xd80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd80d), 0xcb);
        EXPECT(gbc.readMem(0xd80e), 0x9d);
        // CB 9D 0020
        gbc.setState(0x97ac, 0x72e9, 0x1c60, 0x46d5, 0x266b, 0x2f44, 0x0, 0x0);
        gbc.writeMem(0x97ac, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x72e9);
        EXPECT(gbc.pc(), 0x97ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97ac), 0xcb);
        EXPECT(gbc.readMem(0x97ad), 0x9d);
        // CB 9D 0022
        gbc.setState(0xd8e9, 0x4400, 0x9750, 0x36fe, 0xbdc9, 0x8f07, 0x0, 0x0);
        gbc.writeMem(0xd8e9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4400);
        EXPECT(gbc.pc(), 0xd8eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8e9), 0xcb);
        EXPECT(gbc.readMem(0xd8ea), 0x9d);
        // CB 9D 0023
        gbc.setState(0x3e41, 0xe1ed, 0x8150, 0xe681, 0x4b51, 0xdeed, 0x0, 0x1);
        gbc.writeMem(0x3e41, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe1ed);
        EXPECT(gbc.pc(), 0x3e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0024
        gbc.setState(0xeea6, 0xa29b, 0x50f0, 0x765b, 0xcd21, 0x2cf9, 0x1, 0x0);
        gbc.writeMem(0xeea6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa29b);
        EXPECT(gbc.pc(), 0xeea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea6), 0xcb);
        EXPECT(gbc.readMem(0xeea7), 0x9d);
        // CB 9D 0025
        gbc.setState(0xb687, 0xf1ef, 0xe010, 0x10e0, 0xd2c3, 0xa30f, 0x0, 0x1);
        gbc.writeMem(0xb687, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf1ef);
        EXPECT(gbc.pc(), 0xb689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb687), 0xcb);
        EXPECT(gbc.readMem(0xb688), 0x9d);
        // CB 9D 0026
        gbc.setState(0xff0, 0x531d, 0xd7a0, 0xa223, 0xb442, 0x2e39, 0x0, 0x0);
        gbc.writeMem(0xff0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x531d);
        EXPECT(gbc.pc(), 0xff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0027
        gbc.setState(0xa84c, 0xea26, 0xe5e0, 0x2208, 0xccfa, 0xf708, 0x0, 0x1);
        gbc.writeMem(0xa84c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xea26);
        EXPECT(gbc.pc(), 0xa84e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa84c), 0xcb);
        EXPECT(gbc.readMem(0xa84d), 0x9d);
        // CB 9D 0028
        gbc.setState(0xbd41, 0xc15c, 0xdef0, 0xd6fd, 0xd66b, 0x7e18, 0x0, 0x0);
        gbc.writeMem(0xbd41, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc15c);
        EXPECT(gbc.pc(), 0xbd43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd41), 0xcb);
        EXPECT(gbc.readMem(0xbd42), 0x9d);
        // CB 9D 0029
        gbc.setState(0x97d9, 0x1373, 0x8a0, 0x8f99, 0xa6d8, 0xb195, 0x0, 0x1);
        gbc.writeMem(0x97d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1373);
        EXPECT(gbc.pc(), 0x97db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d9), 0xcb);
        EXPECT(gbc.readMem(0x97da), 0x9d);
        // CB 9D 002A
        gbc.setState(0xd878, 0x2d97, 0x4f50, 0xb5b4, 0x788f, 0xb0f, 0x0, 0x0);
        gbc.writeMem(0xd878, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2d97);
        EXPECT(gbc.pc(), 0xd87a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd878), 0xcb);
        EXPECT(gbc.readMem(0xd879), 0x9d);
        // CB 9D 002B
        gbc.setState(0xbc1d, 0x2c81, 0xf300, 0x6e2b, 0x5cd7, 0xc05a, 0x0, 0x0);
        gbc.writeMem(0xbc1d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2c81);
        EXPECT(gbc.pc(), 0xbc1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc1d), 0xcb);
        EXPECT(gbc.readMem(0xbc1e), 0x9d);
        // CB 9D 002C
        gbc.setState(0x1049, 0x52ee, 0x38c0, 0x4f8a, 0xb2d, 0x9e00, 0x0, 0x1);
        gbc.writeMem(0x1049, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x52ee);
        EXPECT(gbc.pc(), 0x104b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 002D
        gbc.setState(0xc387, 0x82a7, 0x7910, 0x478b, 0xce49, 0x1830, 0x0, 0x1);
        gbc.writeMem(0xc387, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x82a7);
        EXPECT(gbc.pc(), 0xc389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc387), 0xcb);
        EXPECT(gbc.readMem(0xc388), 0x9d);
        // CB 9D 002E
        gbc.setState(0xf30, 0x1129, 0xbcc0, 0xadb1, 0xc956, 0xdbc8, 0x0, 0x0);
        gbc.writeMem(0xf30, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1129);
        EXPECT(gbc.pc(), 0xf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 002F
        gbc.setState(0x881a, 0x9322, 0x1600, 0x1f01, 0xbe7e, 0xd239, 0x0, 0x0);
        gbc.writeMem(0x881a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9322);
        EXPECT(gbc.pc(), 0x881c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881a), 0xcb);
        EXPECT(gbc.readMem(0x881b), 0x9d);
        // CB 9D 0030
        gbc.setState(0xb95, 0x339f, 0x9420, 0xdbdf, 0xfdc6, 0x9dfa, 0x0, 0x0);
        gbc.writeMem(0xb95, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x339f);
        EXPECT(gbc.pc(), 0xb97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0031
        gbc.setState(0x736e, 0x5a7d, 0xe890, 0xec29, 0xc0da, 0xf93c, 0x1, 0x1);
        gbc.writeMem(0x736e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5a7d);
        EXPECT(gbc.pc(), 0x7370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0032
        gbc.setState(0x56b1, 0x75fa, 0x4530, 0x7baf, 0xccd5, 0x935c, 0x1, 0x0);
        gbc.writeMem(0x56b1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x75fa);
        EXPECT(gbc.pc(), 0x56b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0033
        gbc.setState(0x51f7, 0xe8cf, 0x6400, 0xc194, 0x453d, 0x3e21, 0x1, 0x1);
        gbc.writeMem(0x51f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe8cf);
        EXPECT(gbc.pc(), 0x51f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0034
        gbc.setState(0x9cbc, 0xc48, 0x6d10, 0xd9b3, 0xb85, 0x409e, 0x0, 0x1);
        gbc.writeMem(0x9cbc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc48);
        EXPECT(gbc.pc(), 0x9cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbc), 0xcb);
        EXPECT(gbc.readMem(0x9cbd), 0x9d);
        // CB 9D 0035
        gbc.setState(0xd2c0, 0x40cb, 0x2a20, 0x1e2d, 0x4d6b, 0xf704, 0x0, 0x1);
        gbc.writeMem(0xd2c0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x40cb);
        EXPECT(gbc.pc(), 0xd2c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2c0), 0xcb);
        EXPECT(gbc.readMem(0xd2c1), 0x9d);
        // CB 9D 0036
        gbc.setState(0x8ef0, 0xfc1e, 0x9150, 0xcec5, 0x8524, 0x127a, 0x1, 0x0);
        gbc.writeMem(0x8ef0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xfc1e);
        EXPECT(gbc.pc(), 0x8ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ef0), 0xcb);
        EXPECT(gbc.readMem(0x8ef1), 0x9d);
        // CB 9D 0037
        gbc.setState(0x17ff, 0x55d6, 0x9280, 0xb66d, 0x730c, 0x78a4, 0x1, 0x1);
        gbc.writeMem(0x17ff, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x55d6);
        EXPECT(gbc.pc(), 0x1801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0038
        gbc.setState(0x539, 0x255, 0x1d90, 0x6f24, 0xd141, 0xe06f, 0x0, 0x0);
        gbc.writeMem(0x539, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x255);
        EXPECT(gbc.pc(), 0x53b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0039
        gbc.setState(0x4857, 0x12d2, 0xa900, 0x8957, 0x8dc8, 0x9d37, 0x1, 0x0);
        gbc.writeMem(0x4857, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x12d2);
        EXPECT(gbc.pc(), 0x4859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 003A
        gbc.setState(0xcb31, 0xb76, 0xb960, 0xa3d0, 0x92d8, 0x1b6f, 0x1, 0x0);
        gbc.writeMem(0xcb31, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb76);
        EXPECT(gbc.pc(), 0xcb33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb31), 0xcb);
        EXPECT(gbc.readMem(0xcb32), 0x9d);
        // CB 9D 003B
        gbc.setState(0xc64e, 0xe087, 0x1a50, 0xbc77, 0x1913, 0x5afe, 0x1, 0x0);
        gbc.writeMem(0xc64e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe087);
        EXPECT(gbc.pc(), 0xc650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc64e), 0xcb);
        EXPECT(gbc.readMem(0xc64f), 0x9d);
        // CB 9D 003C
        gbc.setState(0x23ee, 0xb940, 0x3940, 0x407b, 0x297f, 0x5cb0, 0x0, 0x0);
        gbc.writeMem(0x23ee, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb940);
        EXPECT(gbc.pc(), 0x23f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 003D
        gbc.setState(0xc87a, 0x1052, 0x10c0, 0xdeb6, 0xbcbb, 0x8d4a, 0x0, 0x1);
        gbc.writeMem(0xc87a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1052);
        EXPECT(gbc.pc(), 0xc87c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc87a), 0xcb);
        EXPECT(gbc.readMem(0xc87b), 0x9d);
        // CB 9D 003E
        gbc.setState(0x31a, 0x4750, 0x4c0, 0x78ca, 0x398f, 0x1d06, 0x1, 0x1);
        gbc.writeMem(0x31a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4750);
        EXPECT(gbc.pc(), 0x31c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 003F
        gbc.setState(0x6565, 0x7915, 0xd070, 0x525d, 0x3c7e, 0x8f45, 0x1, 0x1);
        gbc.writeMem(0x6565, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7915);
        EXPECT(gbc.pc(), 0x6567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0040
        gbc.setState(0x201c, 0x12c7, 0x3320, 0x7c2c, 0x9ce0, 0xbd32, 0x1, 0x1);
        gbc.writeMem(0x201c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x12c7);
        EXPECT(gbc.pc(), 0x201e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0042
        gbc.setState(0x41d1, 0xa70b, 0x1bb0, 0x5cc7, 0x66fe, 0x12ad, 0x0, 0x0);
        gbc.writeMem(0x41d1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa70b);
        EXPECT(gbc.pc(), 0x41d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0043
        gbc.setState(0x9581, 0x6f0c, 0x2a10, 0xd3e0, 0xc9ee, 0xab20, 0x0, 0x1);
        gbc.writeMem(0x9581, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6f0c);
        EXPECT(gbc.pc(), 0x9583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9581), 0xcb);
        EXPECT(gbc.readMem(0x9582), 0x9d);
        // CB 9D 0044
        gbc.setState(0xcf63, 0x5d51, 0x7110, 0x6e5c, 0xa8aa, 0x25fa, 0x0, 0x0);
        gbc.writeMem(0xcf63, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5d51);
        EXPECT(gbc.pc(), 0xcf65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf63), 0xcb);
        EXPECT(gbc.readMem(0xcf64), 0x9d);
        // CB 9D 0045
        gbc.setState(0xc8f3, 0xf688, 0xc4d0, 0x3bdb, 0xb1c2, 0xe70f, 0x0, 0x0);
        gbc.writeMem(0xc8f3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf688);
        EXPECT(gbc.pc(), 0xc8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f3), 0xcb);
        EXPECT(gbc.readMem(0xc8f4), 0x9d);
        // CB 9D 0046
        gbc.setState(0xc68a, 0xce03, 0x43c0, 0x4b43, 0x6874, 0x96c8, 0x0, 0x1);
        gbc.writeMem(0xc68a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xce03);
        EXPECT(gbc.pc(), 0xc68c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc68a), 0xcb);
        EXPECT(gbc.readMem(0xc68b), 0x9d);
        // CB 9D 0047
        gbc.setState(0xd04e, 0x6a77, 0x9220, 0x8186, 0xd7d9, 0x1631, 0x1, 0x1);
        gbc.writeMem(0xd04e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6a77);
        EXPECT(gbc.pc(), 0xd050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd04e), 0xcb);
        EXPECT(gbc.readMem(0xd04f), 0x9d);
        // CB 9D 0048
        gbc.setState(0x9367, 0xda29, 0x4c0, 0x9665, 0xe749, 0x7d6a, 0x0, 0x1);
        gbc.writeMem(0x9367, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xda29);
        EXPECT(gbc.pc(), 0x9369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9367), 0xcb);
        EXPECT(gbc.readMem(0x9368), 0x9d);
        // CB 9D 0049
        gbc.setState(0x55bc, 0xd8, 0xa0, 0xc773, 0xbf94, 0x3b97, 0x0, 0x0);
        gbc.writeMem(0x55bc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd8);
        EXPECT(gbc.pc(), 0x55be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 004A
        gbc.setState(0x412c, 0x9ff6, 0xf9a0, 0x65d0, 0x2821, 0xb71b, 0x1, 0x0);
        gbc.writeMem(0x412c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9ff6);
        EXPECT(gbc.pc(), 0x412e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 004B
        gbc.setState(0x7104, 0xd06b, 0x3970, 0xb8dd, 0x6775, 0x7f67, 0x0, 0x1);
        gbc.writeMem(0x7104, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd06b);
        EXPECT(gbc.pc(), 0x7106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 004C
        gbc.setState(0x36f1, 0x4a28, 0xfbd0, 0x6537, 0x9959, 0x42c2, 0x0, 0x1);
        gbc.writeMem(0x36f1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4a28);
        EXPECT(gbc.pc(), 0x36f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 004D
        gbc.setState(0x6f68, 0xfb3c, 0xf200, 0x3b35, 0xf463, 0x9bb8, 0x1, 0x1);
        gbc.writeMem(0x6f68, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfb3c);
        EXPECT(gbc.pc(), 0x6f6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 004F
        gbc.setState(0x59e7, 0x49f3, 0x7a10, 0x4bbc, 0x9414, 0x7b7, 0x1, 0x1);
        gbc.writeMem(0x59e7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x49f3);
        EXPECT(gbc.pc(), 0x59e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0050
        gbc.setState(0xcf22, 0xaff, 0x1d90, 0x4a96, 0xc71b, 0x5ce0, 0x0, 0x1);
        gbc.writeMem(0xcf22, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xaff);
        EXPECT(gbc.pc(), 0xcf24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf22), 0xcb);
        EXPECT(gbc.readMem(0xcf23), 0x9d);
        // CB 9D 0052
        gbc.setState(0xe793, 0xeac3, 0xb1d0, 0x970c, 0xd2d6, 0xdae, 0x0, 0x0);
        gbc.writeMem(0xe793, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xeac3);
        EXPECT(gbc.pc(), 0xe795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe793), 0xcb);
        EXPECT(gbc.readMem(0xe794), 0x9d);
        // CB 9D 0054
        gbc.setState(0x1ab1, 0x50fb, 0x2290, 0x7ae, 0x87a3, 0x71fd, 0x1, 0x0);
        gbc.writeMem(0x1ab1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x50fb);
        EXPECT(gbc.pc(), 0x1ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0055
        gbc.setState(0x3167, 0xaae3, 0x46c0, 0xe866, 0xe021, 0x37a7, 0x1, 0x0);
        gbc.writeMem(0x3167, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xaae3);
        EXPECT(gbc.pc(), 0x3169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0056
        gbc.setState(0xb844, 0x40f8, 0x9e30, 0x42d5, 0x3110, 0xe496, 0x0, 0x1);
        gbc.writeMem(0xb844, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x40f8);
        EXPECT(gbc.pc(), 0xb846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb844), 0xcb);
        EXPECT(gbc.readMem(0xb845), 0x9d);
        // CB 9D 0057
        gbc.setState(0x607b, 0xeaad, 0xc940, 0xdb61, 0x4651, 0xa861, 0x0, 0x0);
        gbc.writeMem(0x607b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xeaad);
        EXPECT(gbc.pc(), 0x607d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0058
        gbc.setState(0x82e9, 0x5377, 0xe80, 0x2907, 0x2aaf, 0xb138, 0x0, 0x1);
        gbc.writeMem(0x82e9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5377);
        EXPECT(gbc.pc(), 0x82eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e9), 0xcb);
        EXPECT(gbc.readMem(0x82ea), 0x9d);
        // CB 9D 0059
        gbc.setState(0x920b, 0xa2ff, 0x6820, 0x353f, 0x480d, 0x1d3d, 0x1, 0x0);
        gbc.writeMem(0x920b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa2ff);
        EXPECT(gbc.pc(), 0x920d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x920b), 0xcb);
        EXPECT(gbc.readMem(0x920c), 0x9d);
        // CB 9D 005A
        gbc.setState(0xaa0e, 0x62cc, 0x1cb0, 0x57a7, 0x3c76, 0xb569, 0x1, 0x0);
        gbc.writeMem(0xaa0e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x62cc);
        EXPECT(gbc.pc(), 0xaa10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa0e), 0xcb);
        EXPECT(gbc.readMem(0xaa0f), 0x9d);
        // CB 9D 005B
        gbc.setState(0x377d, 0xef67, 0x4f30, 0xc76f, 0xe3ab, 0x3156, 0x0, 0x0);
        gbc.writeMem(0x377d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xef67);
        EXPECT(gbc.pc(), 0x377f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 005C
        gbc.setState(0xa3f8, 0xaaa5, 0x0, 0x22cc, 0x8534, 0x589a, 0x1, 0x1);
        gbc.writeMem(0xa3f8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xaaa5);
        EXPECT(gbc.pc(), 0xa3fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f8), 0xcb);
        EXPECT(gbc.readMem(0xa3f9), 0x9d);
        // CB 9D 005D
        gbc.setState(0x78f0, 0xb3b3, 0xb8e0, 0xa3aa, 0xee5f, 0x5d7e, 0x1, 0x0);
        gbc.writeMem(0x78f0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb3b3);
        EXPECT(gbc.pc(), 0x78f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 005E
        gbc.setState(0x1257, 0x9736, 0xfed0, 0x78e7, 0xf9c0, 0xdd39, 0x0, 0x0);
        gbc.writeMem(0x1257, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9736);
        EXPECT(gbc.pc(), 0x1259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 005F
        gbc.setState(0x87ab, 0x4a1c, 0xbb80, 0x88bd, 0xfda4, 0x95b4, 0x1, 0x1);
        gbc.writeMem(0x87ab, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4a1c);
        EXPECT(gbc.pc(), 0x87ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ab), 0xcb);
        EXPECT(gbc.readMem(0x87ac), 0x9d);
        // CB 9D 0060
        gbc.setState(0x2e07, 0x6e71, 0x2140, 0xe677, 0xcdda, 0x6962, 0x0, 0x1);
        gbc.writeMem(0x2e07, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6e71);
        EXPECT(gbc.pc(), 0x2e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0062
        gbc.setState(0xb599, 0xf1af, 0x9810, 0x39ba, 0x9a2b, 0x8b96, 0x1, 0x0);
        gbc.writeMem(0xb599, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf1af);
        EXPECT(gbc.pc(), 0xb59b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb599), 0xcb);
        EXPECT(gbc.readMem(0xb59a), 0x9d);
        // CB 9D 0063
        gbc.setState(0x4cd5, 0xd7b, 0xaf50, 0x59d4, 0xf72a, 0xdf69, 0x0, 0x1);
        gbc.writeMem(0x4cd5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd7b);
        EXPECT(gbc.pc(), 0x4cd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0064
        gbc.setState(0xd5b5, 0x25e7, 0xb5f0, 0x863b, 0xedda, 0xc9bd, 0x1, 0x0);
        gbc.writeMem(0xd5b5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x25e7);
        EXPECT(gbc.pc(), 0xd5b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b5), 0xcb);
        EXPECT(gbc.readMem(0xd5b6), 0x9d);
        // CB 9D 0066
        gbc.setState(0x43bc, 0x63f0, 0x83a0, 0x4423, 0x1e05, 0x800a, 0x0, 0x1);
        gbc.writeMem(0x43bc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x63f0);
        EXPECT(gbc.pc(), 0x43be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0067
        gbc.setState(0x998c, 0x6c32, 0x1cf0, 0xcabf, 0xe337, 0xb911, 0x1, 0x0);
        gbc.writeMem(0x998c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6c32);
        EXPECT(gbc.pc(), 0x998e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998c), 0xcb);
        EXPECT(gbc.readMem(0x998d), 0x9d);
        // CB 9D 0068
        gbc.setState(0x9d15, 0x7dea, 0x6300, 0xf8bc, 0x49a9, 0x9cb5, 0x1, 0x0);
        gbc.writeMem(0x9d15, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7dea);
        EXPECT(gbc.pc(), 0x9d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d15), 0xcb);
        EXPECT(gbc.readMem(0x9d16), 0x9d);
        // CB 9D 006B
        gbc.setState(0x38ae, 0x4bcc, 0xb410, 0x89c9, 0x3e70, 0x57c1, 0x0, 0x0);
        gbc.writeMem(0x38ae, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4bcc);
        EXPECT(gbc.pc(), 0x38b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 006C
        gbc.setState(0xc7af, 0xa8c7, 0x55d0, 0x9129, 0xcdc9, 0x6624, 0x0, 0x0);
        gbc.writeMem(0xc7af, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa8c7);
        EXPECT(gbc.pc(), 0xc7b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7af), 0xcb);
        EXPECT(gbc.readMem(0xc7b0), 0x9d);
        // CB 9D 006D
        gbc.setState(0x7b80, 0xf842, 0x2e0, 0x719d, 0x4748, 0xd42d, 0x0, 0x0);
        gbc.writeMem(0x7b80, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf842);
        EXPECT(gbc.pc(), 0x7b82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 006E
        gbc.setState(0x640e, 0xd58b, 0xb460, 0x4816, 0xd419, 0xcf60, 0x0, 0x1);
        gbc.writeMem(0x640e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd58b);
        EXPECT(gbc.pc(), 0x6410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 006F
        gbc.setState(0x22fb, 0x4914, 0xc550, 0xc118, 0xc709, 0xf837, 0x0, 0x0);
        gbc.writeMem(0x22fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4914);
        EXPECT(gbc.pc(), 0x22fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0070
        gbc.setState(0x734a, 0x25dc, 0x40d0, 0x3342, 0xa4c3, 0x949f, 0x1, 0x0);
        gbc.writeMem(0x734a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x25dc);
        EXPECT(gbc.pc(), 0x734c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0071
        gbc.setState(0x4e6b, 0x417b, 0xaf20, 0x91e0, 0x68a4, 0x420a, 0x1, 0x0);
        gbc.writeMem(0x4e6b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x417b);
        EXPECT(gbc.pc(), 0x4e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0072
        gbc.setState(0xbe96, 0xae0b, 0x9b60, 0xe1a5, 0x4b5f, 0xe471, 0x0, 0x1);
        gbc.writeMem(0xbe96, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xae0b);
        EXPECT(gbc.pc(), 0xbe98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe96), 0xcb);
        EXPECT(gbc.readMem(0xbe97), 0x9d);
        // CB 9D 0073
        gbc.setState(0xa4b, 0x8a95, 0x8b90, 0xc90c, 0x13b2, 0xd2a4, 0x1, 0x0);
        gbc.writeMem(0xa4b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8a95);
        EXPECT(gbc.pc(), 0xa4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0074
        gbc.setState(0xdfa1, 0xff69, 0x91a0, 0xc61c, 0xcb32, 0xbae, 0x0, 0x0);
        gbc.writeMem(0xdfa1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xff69);
        EXPECT(gbc.pc(), 0xdfa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfa1), 0xcb);
        EXPECT(gbc.readMem(0xdfa2), 0x9d);
        // CB 9D 0075
        gbc.setState(0xb56b, 0xbcbd, 0x3890, 0xb643, 0x191d, 0x1bd8, 0x1, 0x0);
        gbc.writeMem(0xb56b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbcbd);
        EXPECT(gbc.pc(), 0xb56d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56b), 0xcb);
        EXPECT(gbc.readMem(0xb56c), 0x9d);
        // CB 9D 0076
        gbc.setState(0x41ac, 0x83ad, 0xfc60, 0xdf1, 0x3220, 0x2677, 0x1, 0x1);
        gbc.writeMem(0x41ac, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x83ad);
        EXPECT(gbc.pc(), 0x41ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0077
        gbc.setState(0x7537, 0xf823, 0x720, 0xf049, 0xb88, 0xcb06, 0x1, 0x1);
        gbc.writeMem(0x7537, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf823);
        EXPECT(gbc.pc(), 0x7539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0078
        gbc.setState(0xef17, 0x86d5, 0x2840, 0x7abb, 0xcc12, 0xb43d, 0x0, 0x0);
        gbc.writeMem(0xef17, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x86d5);
        EXPECT(gbc.pc(), 0xef19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef17), 0xcb);
        EXPECT(gbc.readMem(0xef18), 0x9d);
        // CB 9D 0079
        gbc.setState(0xbd65, 0x8ec6, 0xc9e0, 0xe19b, 0x434b, 0xa0ba, 0x0, 0x1);
        gbc.writeMem(0xbd65, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8ec6);
        EXPECT(gbc.pc(), 0xbd67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd65), 0xcb);
        EXPECT(gbc.readMem(0xbd66), 0x9d);
        // CB 9D 007C
        gbc.setState(0x9317, 0x1f87, 0x320, 0x9e0c, 0x1696, 0x1236, 0x1, 0x0);
        gbc.writeMem(0x9317, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1f87);
        EXPECT(gbc.pc(), 0x9319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9317), 0xcb);
        EXPECT(gbc.readMem(0x9318), 0x9d);
        // CB 9D 007D
        gbc.setState(0x72f, 0x7cdf, 0x1bf0, 0xa46f, 0x28a0, 0xfd50, 0x0, 0x0);
        gbc.writeMem(0x72f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7cdf);
        EXPECT(gbc.pc(), 0x731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 007E
        gbc.setState(0xe649, 0xcbe2, 0xb7f0, 0x496e, 0x1557, 0xc28, 0x1, 0x0);
        gbc.writeMem(0xe649, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcbe2);
        EXPECT(gbc.pc(), 0xe64b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe649), 0xcb);
        EXPECT(gbc.readMem(0xe64a), 0x9d);
        // CB 9D 007F
        gbc.setState(0x7c83, 0xcaa8, 0x2fd0, 0x152f, 0xc38b, 0x36aa, 0x0, 0x0);
        gbc.writeMem(0x7c83, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcaa8);
        EXPECT(gbc.pc(), 0x7c85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0081
        gbc.setState(0xd459, 0x23b8, 0x1fb0, 0x6ac3, 0xb46c, 0x5e8d, 0x1, 0x0);
        gbc.writeMem(0xd459, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x23b8);
        EXPECT(gbc.pc(), 0xd45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd459), 0xcb);
        EXPECT(gbc.readMem(0xd45a), 0x9d);
        // CB 9D 0082
        gbc.setState(0xca7e, 0x26ca, 0x1250, 0xa9bd, 0xc8bd, 0xcf48, 0x1, 0x1);
        gbc.writeMem(0xca7e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x26ca);
        EXPECT(gbc.pc(), 0xca80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca7e), 0xcb);
        EXPECT(gbc.readMem(0xca7f), 0x9d);
        // CB 9D 0083
        gbc.setState(0x871c, 0xd078, 0x21b0, 0x115c, 0x4098, 0x9643, 0x1, 0x0);
        gbc.writeMem(0x871c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd078);
        EXPECT(gbc.pc(), 0x871e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871c), 0xcb);
        EXPECT(gbc.readMem(0x871d), 0x9d);
        // CB 9D 0084
        gbc.setState(0x458, 0x9bf1, 0x5150, 0x5bfc, 0x7c8d, 0xac53, 0x1, 0x0);
        gbc.writeMem(0x458, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9bf1);
        EXPECT(gbc.pc(), 0x45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0085
        gbc.setState(0x19b6, 0xbd11, 0x37b0, 0xff8f, 0x3f80, 0x58ed, 0x1, 0x1);
        gbc.writeMem(0x19b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbd11);
        EXPECT(gbc.pc(), 0x19b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0086
        gbc.setState(0x3bbe, 0x6ac9, 0xff30, 0x33b8, 0x1a1b, 0xebde, 0x1, 0x1);
        gbc.writeMem(0x3bbe, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6ac9);
        EXPECT(gbc.pc(), 0x3bc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0087
        gbc.setState(0xe2b5, 0x4fb3, 0x6030, 0x4d7e, 0x9ba7, 0x14ca, 0x1, 0x0);
        gbc.writeMem(0xe2b5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4fb3);
        EXPECT(gbc.pc(), 0xe2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2b5), 0xcb);
        EXPECT(gbc.readMem(0xe2b6), 0x9d);
        // CB 9D 0088
        gbc.setState(0x2e07, 0x8edb, 0xf5e0, 0x4afc, 0x13e, 0xc6, 0x1, 0x0);
        gbc.writeMem(0x2e07, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8edb);
        EXPECT(gbc.pc(), 0x2e09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0089
        gbc.setState(0x70d0, 0x9106, 0x4450, 0xbb38, 0x102b, 0x5bc7, 0x0, 0x0);
        gbc.writeMem(0x70d0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9106);
        EXPECT(gbc.pc(), 0x70d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 008A
        gbc.setState(0xd9e, 0x420d, 0x260, 0xdd46, 0x8614, 0x461e, 0x0, 0x1);
        gbc.writeMem(0xd9e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x420d);
        EXPECT(gbc.pc(), 0xda0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 008B
        gbc.setState(0x9ff6, 0x4b8a, 0xd4d0, 0x3242, 0x9a6e, 0x33e2, 0x1, 0x1);
        gbc.writeMem(0x9ff6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4b8a);
        EXPECT(gbc.pc(), 0x9ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff6), 0xcb);
        EXPECT(gbc.readMem(0x9ff7), 0x9d);
        // CB 9D 008C
        gbc.setState(0x2dcc, 0xc4a6, 0xffe0, 0xa004, 0x3956, 0x7b33, 0x0, 0x1);
        gbc.writeMem(0x2dcc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc4a6);
        EXPECT(gbc.pc(), 0x2dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 008D
        gbc.setState(0x9711, 0x564d, 0x41a0, 0x5d79, 0xad78, 0x7730, 0x1, 0x0);
        gbc.writeMem(0x9711, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x564d);
        EXPECT(gbc.pc(), 0x9713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9711), 0xcb);
        EXPECT(gbc.readMem(0x9712), 0x9d);
        // CB 9D 008E
        gbc.setState(0x93b0, 0x381c, 0x4b40, 0xdbe5, 0xf1c7, 0x7936, 0x1, 0x1);
        gbc.writeMem(0x93b0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x381c);
        EXPECT(gbc.pc(), 0x93b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b0), 0xcb);
        EXPECT(gbc.readMem(0x93b1), 0x9d);
        // CB 9D 008F
        gbc.setState(0x8ce, 0x764c, 0xe920, 0xbf6b, 0xcb62, 0x5f6a, 0x0, 0x1);
        gbc.writeMem(0x8ce, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x764c);
        EXPECT(gbc.pc(), 0x8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0090
        gbc.setState(0xd0b6, 0xfd4a, 0xfa20, 0xa3c7, 0x4bfb, 0x9a53, 0x0, 0x0);
        gbc.writeMem(0xd0b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xfd4a);
        EXPECT(gbc.pc(), 0xd0b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0b6), 0xcb);
        EXPECT(gbc.readMem(0xd0b7), 0x9d);
        // CB 9D 0091
        gbc.setState(0xbd12, 0x82dd, 0xf380, 0xe3f2, 0xd01d, 0x431f, 0x0, 0x1);
        gbc.writeMem(0xbd12, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x82dd);
        EXPECT(gbc.pc(), 0xbd14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd12), 0xcb);
        EXPECT(gbc.readMem(0xbd13), 0x9d);
        // CB 9D 0092
        gbc.setState(0x4694, 0x9b80, 0x27e0, 0xa404, 0xfb5, 0x25e, 0x0, 0x1);
        gbc.writeMem(0x4694, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9b80);
        EXPECT(gbc.pc(), 0x4696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0093
        gbc.setState(0xbaba, 0xf9f, 0x4430, 0xe932, 0x81d2, 0x720f, 0x1, 0x1);
        gbc.writeMem(0xbaba, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf9f);
        EXPECT(gbc.pc(), 0xbabc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaba), 0xcb);
        EXPECT(gbc.readMem(0xbabb), 0x9d);
        // CB 9D 0094
        gbc.setState(0x30d9, 0xf101, 0x5990, 0xbcdb, 0x9710, 0x216a, 0x1, 0x0);
        gbc.writeMem(0x30d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf101);
        EXPECT(gbc.pc(), 0x30db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0096
        gbc.setState(0x8be9, 0x2397, 0xfb60, 0x5aa9, 0xd3e8, 0x8d51, 0x1, 0x1);
        gbc.writeMem(0x8be9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2397);
        EXPECT(gbc.pc(), 0x8beb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be9), 0xcb);
        EXPECT(gbc.readMem(0x8bea), 0x9d);
        // CB 9D 0097
        gbc.setState(0x8cb3, 0xbed, 0x9d80, 0x91ef, 0x4ed2, 0xd507, 0x0, 0x1);
        gbc.writeMem(0x8cb3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbed);
        EXPECT(gbc.pc(), 0x8cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb3), 0xcb);
        EXPECT(gbc.readMem(0x8cb4), 0x9d);
        // CB 9D 0098
        gbc.setState(0x4c2c, 0x37a5, 0x2f60, 0xb59a, 0x312, 0x1cac, 0x1, 0x1);
        gbc.writeMem(0x4c2c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x37a5);
        EXPECT(gbc.pc(), 0x4c2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0099
        gbc.setState(0x57f7, 0x334c, 0x2150, 0xe749, 0x55d7, 0x4b5c, 0x0, 0x0);
        gbc.writeMem(0x57f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x334c);
        EXPECT(gbc.pc(), 0x57f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 009A
        gbc.setState(0x8bfb, 0x800f, 0x1320, 0xb6d1, 0x9a3d, 0xa751, 0x1, 0x0);
        gbc.writeMem(0x8bfb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x800f);
        EXPECT(gbc.pc(), 0x8bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bfb), 0xcb);
        EXPECT(gbc.readMem(0x8bfc), 0x9d);
        // CB 9D 009B
        gbc.setState(0x4600, 0xfdcd, 0xabc0, 0x10d8, 0xe347, 0xa187, 0x1, 0x0);
        gbc.writeMem(0x4600, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfdcd);
        EXPECT(gbc.pc(), 0x4602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 009C
        gbc.setState(0x25e3, 0x9eea, 0xe670, 0xd1d0, 0xf987, 0xe85, 0x1, 0x0);
        gbc.writeMem(0x25e3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9eea);
        EXPECT(gbc.pc(), 0x25e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 009D
        gbc.setState(0x4a90, 0xa06f, 0xe5c0, 0x2560, 0x3074, 0xb09a, 0x0, 0x0);
        gbc.writeMem(0x4a90, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa06f);
        EXPECT(gbc.pc(), 0x4a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 009E
        gbc.setState(0x79fc, 0xfacd, 0x7050, 0x7fba, 0x85b0, 0xb2f2, 0x0, 0x0);
        gbc.writeMem(0x79fc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfacd);
        EXPECT(gbc.pc(), 0x79fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 009F
        gbc.setState(0xbc73, 0xf13f, 0xdbf0, 0xcafb, 0xa2df, 0x10c5, 0x0, 0x1);
        gbc.writeMem(0xbc73, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf13f);
        EXPECT(gbc.pc(), 0xbc75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc73), 0xcb);
        EXPECT(gbc.readMem(0xbc74), 0x9d);
        // CB 9D 00A0
        gbc.setState(0xcbec, 0xa93d, 0xf400, 0xecdf, 0x93d2, 0x4b2b, 0x1, 0x1);
        gbc.writeMem(0xcbec, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa93d);
        EXPECT(gbc.pc(), 0xcbee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbec), 0xcb);
        EXPECT(gbc.readMem(0xcbed), 0x9d);
        // CB 9D 00A1
        gbc.setState(0x5e9b, 0x9129, 0xe500, 0x2cf2, 0x99b7, 0xed50, 0x1, 0x1);
        gbc.writeMem(0x5e9b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9129);
        EXPECT(gbc.pc(), 0x5e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00A2
        gbc.setState(0x3a0a, 0xbf67, 0xcbe0, 0x437d, 0xa549, 0x922, 0x1, 0x0);
        gbc.writeMem(0x3a0a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbf67);
        EXPECT(gbc.pc(), 0x3a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00A3
        gbc.setState(0x1cc1, 0x72df, 0xcf50, 0xf831, 0x6cdf, 0x7c14, 0x1, 0x1);
        gbc.writeMem(0x1cc1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x72df);
        EXPECT(gbc.pc(), 0x1cc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00A4
        gbc.setState(0x3861, 0xdfa9, 0xb130, 0x3bfa, 0xa661, 0xca9f, 0x1, 0x1);
        gbc.writeMem(0x3861, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdfa9);
        EXPECT(gbc.pc(), 0x3863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00A5
        gbc.setState(0xa07c, 0x7748, 0xaf50, 0xa900, 0xfcc3, 0xec36, 0x0, 0x1);
        gbc.writeMem(0xa07c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7748);
        EXPECT(gbc.pc(), 0xa07e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07c), 0xcb);
        EXPECT(gbc.readMem(0xa07d), 0x9d);
        // CB 9D 00A6
        gbc.setState(0xb77a, 0x1d5c, 0x74d0, 0x5410, 0x49a1, 0xc866, 0x0, 0x0);
        gbc.writeMem(0xb77a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1d5c);
        EXPECT(gbc.pc(), 0xb77c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77a), 0xcb);
        EXPECT(gbc.readMem(0xb77b), 0x9d);
        // CB 9D 00A7
        gbc.setState(0x99a3, 0x1815, 0xe8e0, 0x72c0, 0x58af, 0xc69c, 0x0, 0x1);
        gbc.writeMem(0x99a3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1815);
        EXPECT(gbc.pc(), 0x99a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a3), 0xcb);
        EXPECT(gbc.readMem(0x99a4), 0x9d);
        // CB 9D 00A8
        gbc.setState(0xcf0e, 0xe2da, 0x9650, 0x2061, 0xc962, 0xa471, 0x1, 0x0);
        gbc.writeMem(0xcf0e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe2da);
        EXPECT(gbc.pc(), 0xcf10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf0e), 0xcb);
        EXPECT(gbc.readMem(0xcf0f), 0x9d);
        // CB 9D 00A9
        gbc.setState(0xa257, 0x3219, 0x6240, 0x763, 0x242, 0x9693, 0x0, 0x0);
        gbc.writeMem(0xa257, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3219);
        EXPECT(gbc.pc(), 0xa259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa257), 0xcb);
        EXPECT(gbc.readMem(0xa258), 0x9d);
        // CB 9D 00AA
        gbc.setState(0x62f0, 0x1865, 0xd10, 0x40d6, 0x9466, 0xa8d9, 0x1, 0x1);
        gbc.writeMem(0x62f0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1865);
        EXPECT(gbc.pc(), 0x62f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00AB
        gbc.setState(0x597b, 0x3fd5, 0xdf00, 0x87ca, 0xbc5a, 0xbef, 0x1, 0x0);
        gbc.writeMem(0x597b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3fd5);
        EXPECT(gbc.pc(), 0x597d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00AC
        gbc.setState(0xe9ff, 0xf4a, 0xf050, 0x13e4, 0xd794, 0x66c8, 0x0, 0x0);
        gbc.writeMem(0xe9ff, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf4a);
        EXPECT(gbc.pc(), 0xea01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ff), 0xcb);
        EXPECT(gbc.readMem(0xea00), 0x9d);
        // CB 9D 00AD
        gbc.setState(0x47b7, 0x2ada, 0xcf70, 0x3446, 0x4ef6, 0x706b, 0x0, 0x1);
        gbc.writeMem(0x47b7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2ada);
        EXPECT(gbc.pc(), 0x47b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00AE
        gbc.setState(0x2330, 0x998b, 0x7850, 0x3a25, 0x3622, 0x438, 0x1, 0x1);
        gbc.writeMem(0x2330, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x998b);
        EXPECT(gbc.pc(), 0x2332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00AF
        gbc.setState(0x86c, 0xdf17, 0x1490, 0xadc6, 0xe3cb, 0x56d2, 0x0, 0x0);
        gbc.writeMem(0x86c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xdf17);
        EXPECT(gbc.pc(), 0x86e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00B0
        gbc.setState(0x3368, 0x6504, 0x4da0, 0xaccb, 0xa4c1, 0x836, 0x1, 0x1);
        gbc.writeMem(0x3368, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6504);
        EXPECT(gbc.pc(), 0x336a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00B1
        gbc.setState(0xcd28, 0xaed8, 0x8940, 0xa2c2, 0x3077, 0x5d0a, 0x1, 0x1);
        gbc.writeMem(0xcd28, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xaed8);
        EXPECT(gbc.pc(), 0xcd2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd28), 0xcb);
        EXPECT(gbc.readMem(0xcd29), 0x9d);
        // CB 9D 00B2
        gbc.setState(0xc3cd, 0x7950, 0x6690, 0xb70f, 0xff98, 0x9263, 0x0, 0x0);
        gbc.writeMem(0xc3cd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7950);
        EXPECT(gbc.pc(), 0xc3cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3cd), 0xcb);
        EXPECT(gbc.readMem(0xc3ce), 0x9d);
        // CB 9D 00B3
        gbc.setState(0xb376, 0x25e1, 0xbb80, 0x135b, 0x49d7, 0xc8ba, 0x0, 0x1);
        gbc.writeMem(0xb376, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x25e1);
        EXPECT(gbc.pc(), 0xb378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb376), 0xcb);
        EXPECT(gbc.readMem(0xb377), 0x9d);
        // CB 9D 00B4
        gbc.setState(0x15a9, 0x6d38, 0x1d30, 0x55a6, 0xb359, 0x3124, 0x1, 0x1);
        gbc.writeMem(0x15a9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6d38);
        EXPECT(gbc.pc(), 0x15ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00B5
        gbc.setState(0xc11b, 0xaa95, 0x3e70, 0xcea4, 0xb3eb, 0xcf1b, 0x1, 0x1);
        gbc.writeMem(0xc11b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xaa95);
        EXPECT(gbc.pc(), 0xc11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc11b), 0xcb);
        EXPECT(gbc.readMem(0xc11c), 0x9d);
        // CB 9D 00B7
        gbc.setState(0xaf80, 0xd4b9, 0xebd0, 0xf4d7, 0x9c50, 0x4da9, 0x0, 0x1);
        gbc.writeMem(0xaf80, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd4b9);
        EXPECT(gbc.pc(), 0xaf82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf80), 0xcb);
        EXPECT(gbc.readMem(0xaf81), 0x9d);
        // CB 9D 00B8
        gbc.setState(0x105, 0xc970, 0x53f0, 0x2125, 0x1a97, 0x48e0, 0x1, 0x1);
        gbc.writeMem(0x105, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc970);
        EXPECT(gbc.pc(), 0x107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00B9
        gbc.setState(0x741a, 0x8379, 0xe6e0, 0xa63, 0x9b0b, 0x2c8a, 0x1, 0x0);
        gbc.writeMem(0x741a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8379);
        EXPECT(gbc.pc(), 0x741c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00BA
        gbc.setState(0x7cf, 0xc219, 0x5eb0, 0x954e, 0x7b5f, 0x7936, 0x0, 0x1);
        gbc.writeMem(0x7cf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc219);
        EXPECT(gbc.pc(), 0x7d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00BB
        gbc.setState(0xdfd0, 0xa59e, 0xd580, 0x200f, 0x5271, 0x25d5, 0x0, 0x1);
        gbc.writeMem(0xdfd0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa59e);
        EXPECT(gbc.pc(), 0xdfd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfd0), 0xcb);
        EXPECT(gbc.readMem(0xdfd1), 0x9d);
        // CB 9D 00BC
        gbc.setState(0xe549, 0xd74c, 0xd1c0, 0x38a0, 0x29bd, 0x407c, 0x0, 0x1);
        gbc.writeMem(0xe549, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd74c);
        EXPECT(gbc.pc(), 0xe54b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe549), 0xcb);
        EXPECT(gbc.readMem(0xe54a), 0x9d);
        // CB 9D 00BE
        gbc.setState(0x37, 0xc803, 0x4a0, 0x8e3a, 0x4ccc, 0xb5cb, 0x0, 0x1);
        gbc.writeMem(0x37, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc803);
        EXPECT(gbc.pc(), 0x39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00BF
        gbc.setState(0x7662, 0x24ca, 0xc9b0, 0x6bb9, 0x7e0b, 0x2111, 0x1, 0x1);
        gbc.writeMem(0x7662, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x24ca);
        EXPECT(gbc.pc(), 0x7664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00C0
        gbc.setState(0xa703, 0x8ec4, 0xa010, 0x5279, 0x5bef, 0x7c44, 0x1, 0x0);
        gbc.writeMem(0xa703, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8ec4);
        EXPECT(gbc.pc(), 0xa705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa703), 0xcb);
        EXPECT(gbc.readMem(0xa704), 0x9d);
        // CB 9D 00C2
        gbc.setState(0x4abb, 0xcd28, 0x61e0, 0x1343, 0x4b31, 0xa1b1, 0x1, 0x1);
        gbc.writeMem(0x4abb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcd28);
        EXPECT(gbc.pc(), 0x4abd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00C3
        gbc.setState(0x545c, 0xac62, 0xf370, 0x3407, 0x2321, 0xdfa6, 0x1, 0x0);
        gbc.writeMem(0x545c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xac62);
        EXPECT(gbc.pc(), 0x545e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00C4
        gbc.setState(0x2842, 0xa1f3, 0x6ef0, 0x10a0, 0xff6e, 0x3814, 0x1, 0x0);
        gbc.writeMem(0x2842, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa1f3);
        EXPECT(gbc.pc(), 0x2844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00C5
        gbc.setState(0xe155, 0xa074, 0xebd0, 0xe2d1, 0x2db, 0x7fbc, 0x1, 0x1);
        gbc.writeMem(0xe155, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa074);
        EXPECT(gbc.pc(), 0xe157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe155), 0xcb);
        EXPECT(gbc.readMem(0xe156), 0x9d);
        // CB 9D 00C7
        gbc.setState(0x8340, 0x2788, 0x4670, 0x2efc, 0xc937, 0xfecd, 0x0, 0x1);
        gbc.writeMem(0x8340, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2788);
        EXPECT(gbc.pc(), 0x8342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8340), 0xcb);
        EXPECT(gbc.readMem(0x8341), 0x9d);
        // CB 9D 00C9
        gbc.setState(0x66b5, 0x58fb, 0x6050, 0xe68b, 0xaae, 0xe37e, 0x0, 0x0);
        gbc.writeMem(0x66b5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x58fb);
        EXPECT(gbc.pc(), 0x66b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00CA
        gbc.setState(0x4200, 0xa248, 0xe5d0, 0x4a07, 0x10b3, 0x1220, 0x0, 0x0);
        gbc.writeMem(0x4200, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa248);
        EXPECT(gbc.pc(), 0x4202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00CC
        gbc.setState(0xd5e6, 0xb96d, 0x3830, 0x2029, 0x5034, 0x3d7e, 0x1, 0x0);
        gbc.writeMem(0xd5e6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb96d);
        EXPECT(gbc.pc(), 0xd5e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5e6), 0xcb);
        EXPECT(gbc.readMem(0xd5e7), 0x9d);
        // CB 9D 00CD
        gbc.setState(0x1b25, 0x10f3, 0x8d30, 0xf9dd, 0xdac1, 0xd29b, 0x0, 0x1);
        gbc.writeMem(0x1b25, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x10f3);
        EXPECT(gbc.pc(), 0x1b27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00CE
        gbc.setState(0xa82c, 0xc866, 0x26c0, 0x119a, 0xb586, 0x7b25, 0x0, 0x1);
        gbc.writeMem(0xa82c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc866);
        EXPECT(gbc.pc(), 0xa82e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82c), 0xcb);
        EXPECT(gbc.readMem(0xa82d), 0x9d);
        // CB 9D 00D0
        gbc.setState(0xc391, 0x46a4, 0x9690, 0x4968, 0xb7f1, 0xbf98, 0x0, 0x1);
        gbc.writeMem(0xc391, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x46a4);
        EXPECT(gbc.pc(), 0xc393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc391), 0xcb);
        EXPECT(gbc.readMem(0xc392), 0x9d);
        // CB 9D 00D1
        gbc.setState(0x5d87, 0x55a7, 0x2620, 0x9363, 0xbce8, 0xd386, 0x1, 0x0);
        gbc.writeMem(0x5d87, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x55a7);
        EXPECT(gbc.pc(), 0x5d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00D2
        gbc.setState(0xeb54, 0x8a1a, 0xff60, 0xae88, 0x533d, 0x4ef3, 0x0, 0x0);
        gbc.writeMem(0xeb54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8a1a);
        EXPECT(gbc.pc(), 0xeb56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb54), 0xcb);
        EXPECT(gbc.readMem(0xeb55), 0x9d);
        // CB 9D 00D3
        gbc.setState(0xeb7e, 0x75b5, 0x8230, 0x48d6, 0x4965, 0x44d0, 0x1, 0x0);
        gbc.writeMem(0xeb7e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x75b5);
        EXPECT(gbc.pc(), 0xeb80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb7e), 0xcb);
        EXPECT(gbc.readMem(0xeb7f), 0x9d);
        // CB 9D 00D4
        gbc.setState(0x1748, 0xb3ce, 0x6ed0, 0x27dc, 0xc808, 0x10f4, 0x0, 0x0);
        gbc.writeMem(0x1748, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb3ce);
        EXPECT(gbc.pc(), 0x174a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00D5
        gbc.setState(0x8333, 0x97e9, 0x6c90, 0x241, 0x8add, 0xb853, 0x1, 0x1);
        gbc.writeMem(0x8333, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x97e9);
        EXPECT(gbc.pc(), 0x8335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8333), 0xcb);
        EXPECT(gbc.readMem(0x8334), 0x9d);
        // CB 9D 00D7
        gbc.setState(0xbbea, 0xbaf9, 0x67c0, 0x2ec7, 0xbee9, 0x1a12, 0x0, 0x0);
        gbc.writeMem(0xbbea, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbaf9);
        EXPECT(gbc.pc(), 0xbbec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbea), 0xcb);
        EXPECT(gbc.readMem(0xbbeb), 0x9d);
        // CB 9D 00D8
        gbc.setState(0x2355, 0xfe07, 0x8690, 0x56e9, 0xfbed, 0xf4e2, 0x0, 0x0);
        gbc.writeMem(0x2355, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfe07);
        EXPECT(gbc.pc(), 0x2357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00D9
        gbc.setState(0x64e3, 0x5512, 0x8a30, 0x9156, 0xbb48, 0x3181, 0x0, 0x0);
        gbc.writeMem(0x64e3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5512);
        EXPECT(gbc.pc(), 0x64e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00DA
        gbc.setState(0xab07, 0x551, 0x85b0, 0x25ee, 0x6a56, 0x3bfa, 0x0, 0x0);
        gbc.writeMem(0xab07, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x551);
        EXPECT(gbc.pc(), 0xab09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab07), 0xcb);
        EXPECT(gbc.readMem(0xab08), 0x9d);
        // CB 9D 00DB
        gbc.setState(0x5f52, 0xe0f5, 0xa310, 0xf98a, 0xda07, 0x3a51, 0x1, 0x0);
        gbc.writeMem(0x5f52, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe0f5);
        EXPECT(gbc.pc(), 0x5f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00DD
        gbc.setState(0xcc2d, 0xb5d6, 0xb8e0, 0x3fe5, 0xfbff, 0xace9, 0x0, 0x0);
        gbc.writeMem(0xcc2d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb5d6);
        EXPECT(gbc.pc(), 0xcc2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc2d), 0xcb);
        EXPECT(gbc.readMem(0xcc2e), 0x9d);
        // CB 9D 00DE
        gbc.setState(0x28f9, 0x76, 0xf2b0, 0x6c22, 0xf488, 0xba90, 0x0, 0x1);
        gbc.writeMem(0x28f9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x76);
        EXPECT(gbc.pc(), 0x28fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00DF
        gbc.setState(0xd370, 0xe3b6, 0x3170, 0x2547, 0x2fc9, 0xdf09, 0x0, 0x1);
        gbc.writeMem(0xd370, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe3b6);
        EXPECT(gbc.pc(), 0xd372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd370), 0xcb);
        EXPECT(gbc.readMem(0xd371), 0x9d);
        // CB 9D 00E0
        gbc.setState(0x9c00, 0x1d26, 0x6140, 0x37b7, 0xd3cb, 0x4919, 0x1, 0x0);
        gbc.writeMem(0x9c00, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1d26);
        EXPECT(gbc.pc(), 0x9c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c00), 0xcb);
        EXPECT(gbc.readMem(0x9c01), 0x9d);
        // CB 9D 00E1
        gbc.setState(0x4beb, 0x34cf, 0xfa80, 0x1955, 0x953f, 0xdf55, 0x1, 0x1);
        gbc.writeMem(0x4beb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x34cf);
        EXPECT(gbc.pc(), 0x4bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00E2
        gbc.setState(0xaaa7, 0x9a94, 0xaae0, 0xf1b8, 0xd32b, 0xac60, 0x0, 0x0);
        gbc.writeMem(0xaaa7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9a94);
        EXPECT(gbc.pc(), 0xaaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa7), 0xcb);
        EXPECT(gbc.readMem(0xaaa8), 0x9d);
        // CB 9D 00E3
        gbc.setState(0xdc29, 0x6f80, 0xeb30, 0x1b82, 0x46d0, 0x25c4, 0x1, 0x1);
        gbc.writeMem(0xdc29, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6f80);
        EXPECT(gbc.pc(), 0xdc2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc29), 0xcb);
        EXPECT(gbc.readMem(0xdc2a), 0x9d);
        // CB 9D 00E4
        gbc.setState(0x7ffa, 0xfa1, 0x8ec0, 0x91d6, 0x59f8, 0x9562, 0x0, 0x0);
        gbc.writeMem(0x7ffa, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfa1);
        EXPECT(gbc.pc(), 0x7ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00E5
        gbc.setState(0xc46, 0xcc1f, 0x5490, 0x354e, 0x67ab, 0xe9dd, 0x1, 0x1);
        gbc.writeMem(0xc46, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xcc1f);
        EXPECT(gbc.pc(), 0xc48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00E6
        gbc.setState(0xbacc, 0x6e28, 0x9590, 0xb59f, 0x2450, 0x8e84, 0x0, 0x0);
        gbc.writeMem(0xbacc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6e28);
        EXPECT(gbc.pc(), 0xbace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbacc), 0xcb);
        EXPECT(gbc.readMem(0xbacd), 0x9d);
        // CB 9D 00E8
        gbc.setState(0x682c, 0xf341, 0x2520, 0xa8c3, 0x29a4, 0x7118, 0x0, 0x1);
        gbc.writeMem(0x682c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf341);
        EXPECT(gbc.pc(), 0x682e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00E9
        gbc.setState(0xa308, 0x29f3, 0x5a40, 0x69b0, 0x3aaf, 0x3503, 0x1, 0x1);
        gbc.writeMem(0xa308, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x29f3);
        EXPECT(gbc.pc(), 0xa30a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa308), 0xcb);
        EXPECT(gbc.readMem(0xa309), 0x9d);
        // CB 9D 00EA
        gbc.setState(0xc0e6, 0x2e9, 0x80, 0x463, 0xab7e, 0x8bb7, 0x1, 0x0);
        gbc.writeMem(0xc0e6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2e9);
        EXPECT(gbc.pc(), 0xc0e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e6), 0xcb);
        EXPECT(gbc.readMem(0xc0e7), 0x9d);
        // CB 9D 00EB
        gbc.setState(0x3ff5, 0x321d, 0x8660, 0x6123, 0xe1b3, 0x8dea, 0x0, 0x1);
        gbc.writeMem(0x3ff5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x321d);
        EXPECT(gbc.pc(), 0x3ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00EC
        gbc.setState(0x5c00, 0x1bc6, 0x7340, 0x6854, 0x98fc, 0xdf54, 0x0, 0x1);
        gbc.writeMem(0x5c00, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1bc6);
        EXPECT(gbc.pc(), 0x5c02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00ED
        gbc.setState(0x4476, 0xf245, 0x1d10, 0x621b, 0x56c, 0xbf08, 0x0, 0x0);
        gbc.writeMem(0x4476, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf245);
        EXPECT(gbc.pc(), 0x4478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00EE
        gbc.setState(0x64cb, 0xafc6, 0x1970, 0x328, 0x3d32, 0xaf55, 0x1, 0x0);
        gbc.writeMem(0x64cb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xafc6);
        EXPECT(gbc.pc(), 0x64cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00EF
        gbc.setState(0xfe7, 0x3aa7, 0x6370, 0x3d79, 0xb1f6, 0x8999, 0x1, 0x1);
        gbc.writeMem(0xfe7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3aa7);
        EXPECT(gbc.pc(), 0xfe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00F0
        gbc.setState(0xc99f, 0xe73a, 0xba0, 0x5348, 0x84de, 0xc5c5, 0x1, 0x0);
        gbc.writeMem(0xc99f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe73a);
        EXPECT(gbc.pc(), 0xc9a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99f), 0xcb);
        EXPECT(gbc.readMem(0xc9a0), 0x9d);
        // CB 9D 00F2
        gbc.setState(0x8b0f, 0xf45f, 0xcf0, 0xa813, 0xd945, 0x2692, 0x1, 0x0);
        gbc.writeMem(0x8b0f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf45f);
        EXPECT(gbc.pc(), 0x8b11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b0f), 0xcb);
        EXPECT(gbc.readMem(0x8b10), 0x9d);
        // CB 9D 00F3
        gbc.setState(0x4c11, 0x332b, 0x7680, 0xa662, 0xc725, 0xe9e5, 0x1, 0x0);
        gbc.writeMem(0x4c11, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x332b);
        EXPECT(gbc.pc(), 0x4c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00F4
        gbc.setState(0x2b65, 0x470e, 0xfaa0, 0xc945, 0xb632, 0x9d2b, 0x0, 0x1);
        gbc.writeMem(0x2b65, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x470e);
        EXPECT(gbc.pc(), 0x2b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00F5
        gbc.setState(0x458c, 0xbb37, 0xa190, 0x2948, 0x8515, 0xa012, 0x1, 0x0);
        gbc.writeMem(0x458c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbb37);
        EXPECT(gbc.pc(), 0x458e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00F6
        gbc.setState(0x4536, 0xd899, 0xd80, 0x4d02, 0xaca, 0xa33d, 0x0, 0x1);
        gbc.writeMem(0x4536, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd899);
        EXPECT(gbc.pc(), 0x4538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00F7
        gbc.setState(0x9363, 0xf7a0, 0x9ed0, 0xdbc4, 0xad84, 0x6721, 0x1, 0x1);
        gbc.writeMem(0x9363, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf7a0);
        EXPECT(gbc.pc(), 0x9365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9363), 0xcb);
        EXPECT(gbc.readMem(0x9364), 0x9d);
        // CB 9D 00F8
        gbc.setState(0x27df, 0x2a1e, 0x8970, 0x9ae3, 0x1427, 0x73da, 0x0, 0x1);
        gbc.writeMem(0x27df, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2a1e);
        EXPECT(gbc.pc(), 0x27e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00F9
        gbc.setState(0xa4f4, 0xcd50, 0x5c20, 0x5489, 0xbae9, 0x60aa, 0x0, 0x0);
        gbc.writeMem(0xa4f4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcd50);
        EXPECT(gbc.pc(), 0xa4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f4), 0xcb);
        EXPECT(gbc.readMem(0xa4f5), 0x9d);
        // CB 9D 00FA
        gbc.setState(0x2db4, 0xc38a, 0x20f0, 0x9e15, 0x3bb9, 0x404b, 0x0, 0x1);
        gbc.writeMem(0x2db4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc38a);
        EXPECT(gbc.pc(), 0x2db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00FB
        gbc.setState(0x4c93, 0xabde, 0x6a0, 0xdec9, 0x95b5, 0x300d, 0x1, 0x1);
        gbc.writeMem(0x4c93, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xabde);
        EXPECT(gbc.pc(), 0x4c95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00FC
        gbc.setState(0x7d5c, 0xcaf0, 0xd070, 0xa975, 0x6eee, 0x6144, 0x1, 0x0);
        gbc.writeMem(0x7d5c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xcaf0);
        EXPECT(gbc.pc(), 0x7d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 00FD
        gbc.setState(0x13ab, 0xedc0, 0x7800, 0x8859, 0xb685, 0x8fb5, 0x1, 0x0);
        gbc.writeMem(0x13ab, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xedc0);
        EXPECT(gbc.pc(), 0x13ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00FE
        gbc.setState(0x2df7, 0x6547, 0x5de0, 0x3e14, 0xae88, 0x9cad, 0x1, 0x0);
        gbc.writeMem(0x2df7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6547);
        EXPECT(gbc.pc(), 0x2df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 00FF
        gbc.setState(0x1d96, 0x4e4f, 0xeef0, 0x9b26, 0xd32, 0x42dc, 0x1, 0x1);
        gbc.writeMem(0x1d96, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4e4f);
        EXPECT(gbc.pc(), 0x1d98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0100
        gbc.setState(0xcf04, 0x4447, 0x6090, 0x4528, 0xbe3d, 0x412c, 0x0, 0x0);
        gbc.writeMem(0xcf04, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4447);
        EXPECT(gbc.pc(), 0xcf06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf04), 0xcb);
        EXPECT(gbc.readMem(0xcf05), 0x9d);
        // CB 9D 0101
        gbc.setState(0x6355, 0x3c57, 0xdf20, 0x4051, 0x8718, 0xa37c, 0x1, 0x1);
        gbc.writeMem(0x6355, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3c57);
        EXPECT(gbc.pc(), 0x6357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0102
        gbc.setState(0x8fe6, 0x26e0, 0x2020, 0x50da, 0xc154, 0x20c5, 0x1, 0x0);
        gbc.writeMem(0x8fe6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x26e0);
        EXPECT(gbc.pc(), 0x8fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe6), 0xcb);
        EXPECT(gbc.readMem(0x8fe7), 0x9d);
        // CB 9D 0103
        gbc.setState(0x63b, 0xb64b, 0xe220, 0x95e3, 0x1fdf, 0x9bcb, 0x0, 0x1);
        gbc.writeMem(0x63b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb64b);
        EXPECT(gbc.pc(), 0x63d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0104
        gbc.setState(0x1a0a, 0x6a6f, 0x69f0, 0x540a, 0xefb3, 0xeaf1, 0x1, 0x0);
        gbc.writeMem(0x1a0a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6a6f);
        EXPECT(gbc.pc(), 0x1a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0105
        gbc.setState(0xa83b, 0xf034, 0xcbd0, 0x36a8, 0xd8be, 0x8f0d, 0x1, 0x0);
        gbc.writeMem(0xa83b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf034);
        EXPECT(gbc.pc(), 0xa83d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa83b), 0xcb);
        EXPECT(gbc.readMem(0xa83c), 0x9d);
        // CB 9D 0106
        gbc.setState(0x5c71, 0x662d, 0xa170, 0x89fb, 0xe6c9, 0x5ea8, 0x1, 0x1);
        gbc.writeMem(0x5c71, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x662d);
        EXPECT(gbc.pc(), 0x5c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0107
        gbc.setState(0xadec, 0x7ec6, 0x4270, 0xc636, 0x39fe, 0xb091, 0x0, 0x0);
        gbc.writeMem(0xadec, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7ec6);
        EXPECT(gbc.pc(), 0xadee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadec), 0xcb);
        EXPECT(gbc.readMem(0xaded), 0x9d);
        // CB 9D 0108
        gbc.setState(0x12e, 0x762d, 0x9750, 0xe2ac, 0x8a6a, 0xefc1, 0x0, 0x0);
        gbc.writeMem(0x12e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x762d);
        EXPECT(gbc.pc(), 0x130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0109
        gbc.setState(0x1921, 0xce57, 0xc680, 0x2c1f, 0x8adc, 0x7e87, 0x1, 0x1);
        gbc.writeMem(0x1921, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xce57);
        EXPECT(gbc.pc(), 0x1923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 010A
        gbc.setState(0xb4eb, 0xb945, 0x7390, 0x8bfb, 0x9a27, 0x52c1, 0x1, 0x0);
        gbc.writeMem(0xb4eb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb945);
        EXPECT(gbc.pc(), 0xb4ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4eb), 0xcb);
        EXPECT(gbc.readMem(0xb4ec), 0x9d);
        // CB 9D 010B
        gbc.setState(0x6a5d, 0x9a02, 0x1fa0, 0x546d, 0x3a4b, 0x1712, 0x1, 0x0);
        gbc.writeMem(0x6a5d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9a02);
        EXPECT(gbc.pc(), 0x6a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 010C
        gbc.setState(0x84d3, 0xe92d, 0xd070, 0x9008, 0x387, 0xf96c, 0x1, 0x0);
        gbc.writeMem(0x84d3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe92d);
        EXPECT(gbc.pc(), 0x84d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d3), 0xcb);
        EXPECT(gbc.readMem(0x84d4), 0x9d);
        // CB 9D 010D
        gbc.setState(0x8d69, 0xc8f3, 0x2e60, 0xf59b, 0x90ae, 0x7e32, 0x0, 0x1);
        gbc.writeMem(0x8d69, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc8f3);
        EXPECT(gbc.pc(), 0x8d6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d69), 0xcb);
        EXPECT(gbc.readMem(0x8d6a), 0x9d);
        // CB 9D 010E
        gbc.setState(0x55fe, 0x5075, 0x450, 0xeb6c, 0xb7ae, 0xd10e, 0x1, 0x0);
        gbc.writeMem(0x55fe, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5075);
        EXPECT(gbc.pc(), 0x5600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 010F
        gbc.setState(0x99e2, 0x50e, 0x3c0, 0xf35c, 0x22f8, 0xd836, 0x1, 0x1);
        gbc.writeMem(0x99e2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x50e);
        EXPECT(gbc.pc(), 0x99e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e2), 0xcb);
        EXPECT(gbc.readMem(0x99e3), 0x9d);
        // CB 9D 0110
        gbc.setState(0x1e68, 0x63d, 0x6c20, 0x1995, 0x2f73, 0xe295, 0x1, 0x0);
        gbc.writeMem(0x1e68, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x63d);
        EXPECT(gbc.pc(), 0x1e6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0111
        gbc.setState(0x8a54, 0x25bd, 0x4be0, 0x875, 0x5ec9, 0x691a, 0x0, 0x1);
        gbc.writeMem(0x8a54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x25bd);
        EXPECT(gbc.pc(), 0x8a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a54), 0xcb);
        EXPECT(gbc.readMem(0x8a55), 0x9d);
        // CB 9D 0112
        gbc.setState(0xd4ac, 0xf31d, 0x48b0, 0xd8b6, 0x1a4c, 0x6ef, 0x0, 0x1);
        gbc.writeMem(0xd4ac, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf31d);
        EXPECT(gbc.pc(), 0xd4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ac), 0xcb);
        EXPECT(gbc.readMem(0xd4ad), 0x9d);
        // CB 9D 0113
        gbc.setState(0xe39b, 0xb367, 0xe4c0, 0x72a6, 0xbdf3, 0xbadb, 0x0, 0x1);
        gbc.writeMem(0xe39b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb367);
        EXPECT(gbc.pc(), 0xe39d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe39b), 0xcb);
        EXPECT(gbc.readMem(0xe39c), 0x9d);
        // CB 9D 0116
        gbc.setState(0x8940, 0x716, 0x72c0, 0x5500, 0x2d9b, 0x37e0, 0x0, 0x0);
        gbc.writeMem(0x8940, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x716);
        EXPECT(gbc.pc(), 0x8942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8940), 0xcb);
        EXPECT(gbc.readMem(0x8941), 0x9d);
        // CB 9D 0117
        gbc.setState(0xc683, 0xd409, 0xcd40, 0x1156, 0x7d6, 0x5596, 0x1, 0x0);
        gbc.writeMem(0xc683, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd409);
        EXPECT(gbc.pc(), 0xc685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc683), 0xcb);
        EXPECT(gbc.readMem(0xc684), 0x9d);
        // CB 9D 0118
        gbc.setState(0xcebc, 0x6da9, 0x62d0, 0xc5aa, 0xf424, 0xf041, 0x1, 0x0);
        gbc.writeMem(0xcebc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6da9);
        EXPECT(gbc.pc(), 0xcebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcebc), 0xcb);
        EXPECT(gbc.readMem(0xcebd), 0x9d);
        // CB 9D 0119
        gbc.setState(0xb955, 0x7932, 0x95b0, 0x5422, 0x8883, 0x89dc, 0x0, 0x0);
        gbc.writeMem(0xb955, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7932);
        EXPECT(gbc.pc(), 0xb957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb955), 0xcb);
        EXPECT(gbc.readMem(0xb956), 0x9d);
        // CB 9D 011B
        gbc.setState(0xcc98, 0x2895, 0xdbc0, 0xd202, 0x7f39, 0xb8d3, 0x0, 0x1);
        gbc.writeMem(0xcc98, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2895);
        EXPECT(gbc.pc(), 0xcc9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc98), 0xcb);
        EXPECT(gbc.readMem(0xcc99), 0x9d);
        // CB 9D 011C
        gbc.setState(0x19fb, 0x9e3b, 0xd2b0, 0x7e97, 0xfa97, 0x4639, 0x1, 0x0);
        gbc.writeMem(0x19fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9e3b);
        EXPECT(gbc.pc(), 0x19fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 011E
        gbc.setState(0x7673, 0xf659, 0x90f0, 0xa840, 0x8c04, 0x3cab, 0x1, 0x0);
        gbc.writeMem(0x7673, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf659);
        EXPECT(gbc.pc(), 0x7675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0120
        gbc.setState(0x130f, 0xe91d, 0x4420, 0x3c9f, 0xde50, 0x8d5c, 0x0, 0x0);
        gbc.writeMem(0x130f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe91d);
        EXPECT(gbc.pc(), 0x1311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0121
        gbc.setState(0x5f33, 0x450, 0x4720, 0x19f9, 0xe5dd, 0x7c1a, 0x1, 0x1);
        gbc.writeMem(0x5f33, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x450);
        EXPECT(gbc.pc(), 0x5f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0122
        gbc.setState(0x34bd, 0xd781, 0xbcd0, 0x1c4b, 0x1190, 0x67e, 0x0, 0x1);
        gbc.writeMem(0x34bd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd781);
        EXPECT(gbc.pc(), 0x34bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0123
        gbc.setState(0x104a, 0x4e59, 0xe120, 0x30d7, 0xdb54, 0x22e9, 0x1, 0x0);
        gbc.writeMem(0x104a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4e59);
        EXPECT(gbc.pc(), 0x104c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0124
        gbc.setState(0x9379, 0x4b6a, 0xcc10, 0xf183, 0x22cb, 0x9183, 0x0, 0x0);
        gbc.writeMem(0x9379, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4b6a);
        EXPECT(gbc.pc(), 0x937b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9379), 0xcb);
        EXPECT(gbc.readMem(0x937a), 0x9d);
        // CB 9D 0125
        gbc.setState(0xc610, 0xd33b, 0x42e0, 0xae73, 0x1bd8, 0x70e9, 0x0, 0x1);
        gbc.writeMem(0xc610, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd33b);
        EXPECT(gbc.pc(), 0xc612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc610), 0xcb);
        EXPECT(gbc.readMem(0xc611), 0x9d);
        // CB 9D 0126
        gbc.setState(0x2cf8, 0x57b9, 0x8e70, 0x225f, 0xca9d, 0xdad3, 0x0, 0x0);
        gbc.writeMem(0x2cf8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x57b9);
        EXPECT(gbc.pc(), 0x2cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0127
        gbc.setState(0x7424, 0xa498, 0xaa30, 0xe050, 0x63c6, 0xd375, 0x0, 0x1);
        gbc.writeMem(0x7424, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa498);
        EXPECT(gbc.pc(), 0x7426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0128
        gbc.setState(0x4ac2, 0xd64f, 0xaec0, 0xefc, 0xf240, 0x25b8, 0x0, 0x1);
        gbc.writeMem(0x4ac2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd64f);
        EXPECT(gbc.pc(), 0x4ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0129
        gbc.setState(0x45a5, 0xe641, 0xca80, 0x75b1, 0xc23d, 0xc937, 0x0, 0x1);
        gbc.writeMem(0x45a5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe641);
        EXPECT(gbc.pc(), 0x45a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 012A
        gbc.setState(0x26e8, 0xe767, 0x7c60, 0xc906, 0x710c, 0x33bc, 0x1, 0x1);
        gbc.writeMem(0x26e8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe767);
        EXPECT(gbc.pc(), 0x26ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 012B
        gbc.setState(0x5964, 0xdd07, 0x24c0, 0xc024, 0xb83f, 0x4833, 0x0, 0x0);
        gbc.writeMem(0x5964, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdd07);
        EXPECT(gbc.pc(), 0x5966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 012C
        gbc.setState(0x7d06, 0x2359, 0x80d0, 0x43aa, 0xa158, 0x8367, 0x0, 0x1);
        gbc.writeMem(0x7d06, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2359);
        EXPECT(gbc.pc(), 0x7d08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 012D
        gbc.setState(0x4fec, 0x2871, 0xffc0, 0x4fad, 0xb3d8, 0xac69, 0x0, 0x1);
        gbc.writeMem(0x4fec, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2871);
        EXPECT(gbc.pc(), 0x4fee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 012E
        gbc.setState(0x6521, 0xbb77, 0x4ec0, 0x53eb, 0x8239, 0x9987, 0x1, 0x1);
        gbc.writeMem(0x6521, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbb77);
        EXPECT(gbc.pc(), 0x6523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 012F
        gbc.setState(0x1f0a, 0x2f4c, 0x9840, 0x39b5, 0x3104, 0x35f0, 0x1, 0x0);
        gbc.writeMem(0x1f0a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2f4c);
        EXPECT(gbc.pc(), 0x1f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0131
        gbc.setState(0xbf3, 0x399a, 0xe340, 0x4306, 0x62df, 0x54e2, 0x1, 0x0);
        gbc.writeMem(0xbf3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x399a);
        EXPECT(gbc.pc(), 0xbf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0132
        gbc.setState(0xe619, 0xa5a3, 0x5470, 0x36d1, 0xbad4, 0x90b0, 0x0, 0x0);
        gbc.writeMem(0xe619, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa5a3);
        EXPECT(gbc.pc(), 0xe61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe619), 0xcb);
        EXPECT(gbc.readMem(0xe61a), 0x9d);
        // CB 9D 0134
        gbc.setState(0x1809, 0x3d7d, 0x8680, 0x409e, 0x4ce0, 0x8683, 0x0, 0x0);
        gbc.writeMem(0x1809, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3d7d);
        EXPECT(gbc.pc(), 0x180b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0135
        gbc.setState(0x3b1b, 0x22d1, 0x5580, 0x5802, 0x1245, 0xe479, 0x1, 0x0);
        gbc.writeMem(0x3b1b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x22d1);
        EXPECT(gbc.pc(), 0x3b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0136
        gbc.setState(0x9413, 0xba94, 0xe410, 0x31a6, 0x3edc, 0x7e2f, 0x1, 0x0);
        gbc.writeMem(0x9413, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xba94);
        EXPECT(gbc.pc(), 0x9415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9413), 0xcb);
        EXPECT(gbc.readMem(0x9414), 0x9d);
        // CB 9D 0137
        gbc.setState(0x4b53, 0x62a2, 0x7020, 0x6fb2, 0x4529, 0xa39e, 0x0, 0x1);
        gbc.writeMem(0x4b53, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x62a2);
        EXPECT(gbc.pc(), 0x4b55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0138
        gbc.setState(0xe66f, 0xe33, 0xc330, 0x7276, 0x190f, 0x2683, 0x0, 0x1);
        gbc.writeMem(0xe66f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe33);
        EXPECT(gbc.pc(), 0xe671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe66f), 0xcb);
        EXPECT(gbc.readMem(0xe670), 0x9d);
        // CB 9D 0139
        gbc.setState(0x7b63, 0x1cb6, 0xf260, 0x81e2, 0xb29d, 0x3fa6, 0x1, 0x0);
        gbc.writeMem(0x7b63, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1cb6);
        EXPECT(gbc.pc(), 0x7b65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 013A
        gbc.setState(0x4278, 0x2ea6, 0x7650, 0x8401, 0x33d3, 0x6916, 0x1, 0x0);
        gbc.writeMem(0x4278, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2ea6);
        EXPECT(gbc.pc(), 0x427a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 013B
        gbc.setState(0x5546, 0x7ca0, 0x66a0, 0x4819, 0x4318, 0xb9d6, 0x0, 0x0);
        gbc.writeMem(0x5546, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7ca0);
        EXPECT(gbc.pc(), 0x5548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 013C
        gbc.setState(0x8a6e, 0x7f9f, 0x9da0, 0xc2e4, 0xb1d2, 0xbe04, 0x1, 0x0);
        gbc.writeMem(0x8a6e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7f9f);
        EXPECT(gbc.pc(), 0x8a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a6e), 0xcb);
        EXPECT(gbc.readMem(0x8a6f), 0x9d);
        // CB 9D 013E
        gbc.setState(0x487e, 0xf149, 0x5700, 0x77a1, 0x360a, 0x6df3, 0x0, 0x0);
        gbc.writeMem(0x487e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf149);
        EXPECT(gbc.pc(), 0x4880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 013F
        gbc.setState(0x912, 0xdfb8, 0xdb90, 0xcf94, 0xb600, 0x52a, 0x0, 0x0);
        gbc.writeMem(0x912, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xdfb8);
        EXPECT(gbc.pc(), 0x914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0140
        gbc.setState(0x9ca, 0xacd0, 0x3700, 0x6f79, 0xa34a, 0xe707, 0x1, 0x0);
        gbc.writeMem(0x9ca, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xacd0);
        EXPECT(gbc.pc(), 0x9cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0141
        gbc.setState(0x90b0, 0x6999, 0x9a0, 0xfd5d, 0x2eb4, 0xd7e1, 0x0, 0x1);
        gbc.writeMem(0x90b0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6999);
        EXPECT(gbc.pc(), 0x90b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90b0), 0xcb);
        EXPECT(gbc.readMem(0x90b1), 0x9d);
        // CB 9D 0142
        gbc.setState(0x365f, 0xddb, 0x5c10, 0x7c52, 0x7f12, 0x4a4d, 0x1, 0x0);
        gbc.writeMem(0x365f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xddb);
        EXPECT(gbc.pc(), 0x3661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0143
        gbc.setState(0xdf32, 0xd622, 0xf800, 0x5a09, 0x5c08, 0x935e, 0x0, 0x0);
        gbc.writeMem(0xdf32, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd622);
        EXPECT(gbc.pc(), 0xdf34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf32), 0xcb);
        EXPECT(gbc.readMem(0xdf33), 0x9d);
        // CB 9D 0144
        gbc.setState(0x4faf, 0x635, 0xbbd0, 0x64cf, 0x3a66, 0x1da, 0x0, 0x1);
        gbc.writeMem(0x4faf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x635);
        EXPECT(gbc.pc(), 0x4fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0145
        gbc.setState(0x7c1f, 0x6f65, 0xb150, 0xd476, 0x9cf3, 0x4e2, 0x0, 0x0);
        gbc.writeMem(0x7c1f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6f65);
        EXPECT(gbc.pc(), 0x7c21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0146
        gbc.setState(0xa8dd, 0x20db, 0x7d30, 0x6675, 0x228e, 0x34dc, 0x0, 0x1);
        gbc.writeMem(0xa8dd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x20db);
        EXPECT(gbc.pc(), 0xa8df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8dd), 0xcb);
        EXPECT(gbc.readMem(0xa8de), 0x9d);
        // CB 9D 0147
        gbc.setState(0x9c96, 0xcac8, 0x21e0, 0x228, 0x81d, 0x9d02, 0x0, 0x0);
        gbc.writeMem(0x9c96, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcac8);
        EXPECT(gbc.pc(), 0x9c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c96), 0xcb);
        EXPECT(gbc.readMem(0x9c97), 0x9d);
        // CB 9D 0148
        gbc.setState(0x3271, 0x9623, 0x5f40, 0x3c74, 0x53f4, 0x7d00, 0x0, 0x1);
        gbc.writeMem(0x3271, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9623);
        EXPECT(gbc.pc(), 0x3273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0149
        gbc.setState(0xed99, 0x696a, 0xfaf0, 0xbba6, 0xb6e8, 0xbcb3, 0x0, 0x0);
        gbc.writeMem(0xed99, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x696a);
        EXPECT(gbc.pc(), 0xed9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed99), 0xcb);
        EXPECT(gbc.readMem(0xed9a), 0x9d);
        // CB 9D 014A
        gbc.setState(0x83e, 0xb3c7, 0xbef0, 0xc692, 0x692c, 0x6d3, 0x1, 0x0);
        gbc.writeMem(0x83e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb3c7);
        EXPECT(gbc.pc(), 0x840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 014B
        gbc.setState(0x13d0, 0x225d, 0xfea0, 0xd015, 0x9b5e, 0xfe1, 0x1, 0x1);
        gbc.writeMem(0x13d0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x225d);
        EXPECT(gbc.pc(), 0x13d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 014C
        gbc.setState(0x9cf7, 0x80c5, 0x3a20, 0x219e, 0xb1c, 0x3ae2, 0x0, 0x0);
        gbc.writeMem(0x9cf7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x80c5);
        EXPECT(gbc.pc(), 0x9cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf7), 0xcb);
        EXPECT(gbc.readMem(0x9cf8), 0x9d);
        // CB 9D 014D
        gbc.setState(0x4797, 0xe2c0, 0x2ea0, 0xa6ad, 0x1c4b, 0xa7c, 0x0, 0x0);
        gbc.writeMem(0x4797, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe2c0);
        EXPECT(gbc.pc(), 0x4799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 014E
        gbc.setState(0x8ea0, 0xf7e2, 0xa850, 0x4bd4, 0xe2a9, 0xd54a, 0x1, 0x1);
        gbc.writeMem(0x8ea0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf7e2);
        EXPECT(gbc.pc(), 0x8ea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea0), 0xcb);
        EXPECT(gbc.readMem(0x8ea1), 0x9d);
        // CB 9D 014F
        gbc.setState(0xbc12, 0x4deb, 0x3a50, 0xf0c3, 0xd8f6, 0x777b, 0x0, 0x1);
        gbc.writeMem(0xbc12, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4deb);
        EXPECT(gbc.pc(), 0xbc14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc12), 0xcb);
        EXPECT(gbc.readMem(0xbc13), 0x9d);
        // CB 9D 0150
        gbc.setState(0x2307, 0x5651, 0xb30, 0x4d27, 0xf1e, 0x6c47, 0x1, 0x1);
        gbc.writeMem(0x2307, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5651);
        EXPECT(gbc.pc(), 0x2309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0151
        gbc.setState(0x166, 0x23d7, 0x6ff0, 0xff3f, 0x329c, 0x1e26, 0x0, 0x1);
        gbc.writeMem(0x166, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x23d7);
        EXPECT(gbc.pc(), 0x168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0152
        gbc.setState(0xdcc8, 0xc951, 0x3490, 0xf600, 0x2b26, 0x837f, 0x1, 0x0);
        gbc.writeMem(0xdcc8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc951);
        EXPECT(gbc.pc(), 0xdcca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcc8), 0xcb);
        EXPECT(gbc.readMem(0xdcc9), 0x9d);
        // CB 9D 0153
        gbc.setState(0x9acd, 0xc317, 0x3ee0, 0x11f9, 0x92f6, 0xa2cb, 0x0, 0x1);
        gbc.writeMem(0x9acd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc317);
        EXPECT(gbc.pc(), 0x9acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9acd), 0xcb);
        EXPECT(gbc.readMem(0x9ace), 0x9d);
        // CB 9D 0154
        gbc.setState(0x3f5d, 0x9f23, 0x97f0, 0xd5f1, 0x3eb4, 0x24a, 0x0, 0x1);
        gbc.writeMem(0x3f5d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9f23);
        EXPECT(gbc.pc(), 0x3f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0155
        gbc.setState(0x8ccf, 0x7689, 0x5c0, 0x4d26, 0x2c89, 0x234f, 0x1, 0x0);
        gbc.writeMem(0x8ccf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7689);
        EXPECT(gbc.pc(), 0x8cd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ccf), 0xcb);
        EXPECT(gbc.readMem(0x8cd0), 0x9d);
        // CB 9D 0156
        gbc.setState(0xdebd, 0x4558, 0x4b20, 0x91c7, 0x8529, 0xf009, 0x1, 0x1);
        gbc.writeMem(0xdebd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4558);
        EXPECT(gbc.pc(), 0xdebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdebd), 0xcb);
        EXPECT(gbc.readMem(0xdebe), 0x9d);
        // CB 9D 0157
        gbc.setState(0xea9c, 0xbd70, 0xbe00, 0x28f4, 0x1490, 0xeb4, 0x0, 0x0);
        gbc.writeMem(0xea9c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbd70);
        EXPECT(gbc.pc(), 0xea9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea9c), 0xcb);
        EXPECT(gbc.readMem(0xea9d), 0x9d);
        // CB 9D 0158
        gbc.setState(0xddfe, 0x43bf, 0x4160, 0xffe8, 0xcc48, 0xbd41, 0x1, 0x1);
        gbc.writeMem(0xddfe, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x43bf);
        EXPECT(gbc.pc(), 0xde00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddfe), 0xcb);
        EXPECT(gbc.readMem(0xddff), 0x9d);
        // CB 9D 0159
        gbc.setState(0xc09e, 0xc7f4, 0x6cb0, 0xb906, 0xe2, 0x4915, 0x0, 0x0);
        gbc.writeMem(0xc09e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc7f4);
        EXPECT(gbc.pc(), 0xc0a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc09e), 0xcb);
        EXPECT(gbc.readMem(0xc09f), 0x9d);
        // CB 9D 015A
        gbc.setState(0x1fe8, 0x4c2f, 0x4330, 0xd95d, 0xaa2b, 0x5d5a, 0x1, 0x1);
        gbc.writeMem(0x1fe8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4c2f);
        EXPECT(gbc.pc(), 0x1fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 015B
        gbc.setState(0x1258, 0xc57d, 0xd300, 0x4dc8, 0xfb85, 0xeb32, 0x0, 0x0);
        gbc.writeMem(0x1258, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc57d);
        EXPECT(gbc.pc(), 0x125a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 015C
        gbc.setState(0x8173, 0x3bbe, 0xf890, 0x4b1b, 0xe90b, 0x3ac, 0x0, 0x1);
        gbc.writeMem(0x8173, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3bbe);
        EXPECT(gbc.pc(), 0x8175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8173), 0xcb);
        EXPECT(gbc.readMem(0x8174), 0x9d);
        // CB 9D 015D
        gbc.setState(0xd082, 0x8459, 0xde00, 0xf537, 0x69e0, 0xa898, 0x1, 0x1);
        gbc.writeMem(0xd082, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8459);
        EXPECT(gbc.pc(), 0xd084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd082), 0xcb);
        EXPECT(gbc.readMem(0xd083), 0x9d);
        // CB 9D 015E
        gbc.setState(0x1faa, 0x74f5, 0xb960, 0x9cb4, 0x1da7, 0xc020, 0x1, 0x1);
        gbc.writeMem(0x1faa, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x74f5);
        EXPECT(gbc.pc(), 0x1fac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 015F
        gbc.setState(0xacdd, 0xfdbb, 0xca00, 0x554e, 0xdec7, 0xb891, 0x0, 0x0);
        gbc.writeMem(0xacdd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xfdbb);
        EXPECT(gbc.pc(), 0xacdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacdd), 0xcb);
        EXPECT(gbc.readMem(0xacde), 0x9d);
        // CB 9D 0160
        gbc.setState(0x8130, 0x83f2, 0x3d90, 0xfc5e, 0xf86e, 0xc5d7, 0x1, 0x1);
        gbc.writeMem(0x8130, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x83f2);
        EXPECT(gbc.pc(), 0x8132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8130), 0xcb);
        EXPECT(gbc.readMem(0x8131), 0x9d);
        // CB 9D 0161
        gbc.setState(0xed2b, 0x691d, 0x6eb0, 0x5144, 0x8973, 0x9507, 0x0, 0x0);
        gbc.writeMem(0xed2b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x691d);
        EXPECT(gbc.pc(), 0xed2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed2b), 0xcb);
        EXPECT(gbc.readMem(0xed2c), 0x9d);
        // CB 9D 0163
        gbc.setState(0xc24c, 0x7c2a, 0x6ed0, 0xc1b0, 0x1ffd, 0x4aeb, 0x0, 0x0);
        gbc.writeMem(0xc24c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7c2a);
        EXPECT(gbc.pc(), 0xc24e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc24c), 0xcb);
        EXPECT(gbc.readMem(0xc24d), 0x9d);
        // CB 9D 0164
        gbc.setState(0x5f95, 0x316, 0x6800, 0x48fe, 0x2d2d, 0x303f, 0x0, 0x1);
        gbc.writeMem(0x5f95, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x316);
        EXPECT(gbc.pc(), 0x5f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0165
        gbc.setState(0x164e, 0x15b9, 0xfe60, 0x7782, 0x5305, 0xbcfd, 0x1, 0x1);
        gbc.writeMem(0x164e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x15b9);
        EXPECT(gbc.pc(), 0x1650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0166
        gbc.setState(0x2e35, 0x5230, 0xe4d0, 0x6f38, 0x5f28, 0xf254, 0x0, 0x1);
        gbc.writeMem(0x2e35, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5230);
        EXPECT(gbc.pc(), 0x2e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0167
        gbc.setState(0xecfe, 0x84b4, 0x9220, 0x5c66, 0x9696, 0x8941, 0x1, 0x0);
        gbc.writeMem(0xecfe, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x84b4);
        EXPECT(gbc.pc(), 0xed00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfe), 0xcb);
        EXPECT(gbc.readMem(0xecff), 0x9d);
        // CB 9D 0168
        gbc.setState(0x5a50, 0xf6c6, 0x5810, 0x64fd, 0xa98e, 0xa6cf, 0x0, 0x0);
        gbc.writeMem(0x5a50, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf6c6);
        EXPECT(gbc.pc(), 0x5a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0169
        gbc.setState(0x8ef1, 0x20d, 0x5760, 0x3966, 0x6ff9, 0xb0fd, 0x1, 0x0);
        gbc.writeMem(0x8ef1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x20d);
        EXPECT(gbc.pc(), 0x8ef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef1), 0xcb);
        EXPECT(gbc.readMem(0x8ef2), 0x9d);
        // CB 9D 016A
        gbc.setState(0x73a2, 0x5263, 0x1430, 0x7eef, 0x5323, 0xf0ab, 0x0, 0x0);
        gbc.writeMem(0x73a2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5263);
        EXPECT(gbc.pc(), 0x73a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 016B
        gbc.setState(0xa9f7, 0x9a0d, 0xe00, 0x7099, 0x5780, 0xb8a9, 0x1, 0x0);
        gbc.writeMem(0xa9f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9a0d);
        EXPECT(gbc.pc(), 0xa9f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f7), 0xcb);
        EXPECT(gbc.readMem(0xa9f8), 0x9d);
        // CB 9D 016C
        gbc.setState(0xb29f, 0x9f66, 0xb540, 0x6e98, 0x20c, 0x9b6, 0x0, 0x1);
        gbc.writeMem(0xb29f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9f66);
        EXPECT(gbc.pc(), 0xb2a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29f), 0xcb);
        EXPECT(gbc.readMem(0xb2a0), 0x9d);
        // CB 9D 016D
        gbc.setState(0x9a3c, 0xca1f, 0xd3b0, 0x5004, 0xc64e, 0xfc52, 0x0, 0x0);
        gbc.writeMem(0x9a3c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xca1f);
        EXPECT(gbc.pc(), 0x9a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a3c), 0xcb);
        EXPECT(gbc.readMem(0x9a3d), 0x9d);
        // CB 9D 016F
        gbc.setState(0xbe33, 0x4065, 0x42e0, 0xb90b, 0xba43, 0x6b24, 0x0, 0x1);
        gbc.writeMem(0xbe33, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4065);
        EXPECT(gbc.pc(), 0xbe35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe33), 0xcb);
        EXPECT(gbc.readMem(0xbe34), 0x9d);
        // CB 9D 0170
        gbc.setState(0x2869, 0x6619, 0xdc20, 0xa6a7, 0x72, 0x3fba, 0x1, 0x0);
        gbc.writeMem(0x2869, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6619);
        EXPECT(gbc.pc(), 0x286b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0171
        gbc.setState(0xa833, 0x318a, 0x4110, 0x6bd1, 0x913a, 0x3089, 0x1, 0x1);
        gbc.writeMem(0xa833, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x318a);
        EXPECT(gbc.pc(), 0xa835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa833), 0xcb);
        EXPECT(gbc.readMem(0xa834), 0x9d);
        // CB 9D 0173
        gbc.setState(0x1266, 0x33c, 0xcc00, 0x171f, 0x44bc, 0x17d9, 0x0, 0x1);
        gbc.writeMem(0x1266, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x33c);
        EXPECT(gbc.pc(), 0x1268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0174
        gbc.setState(0x3614, 0x3da8, 0x4440, 0x6175, 0x7000, 0x696b, 0x1, 0x1);
        gbc.writeMem(0x3614, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3da8);
        EXPECT(gbc.pc(), 0x3616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0175
        gbc.setState(0x1142, 0x6b28, 0x2a90, 0xa550, 0xc6c5, 0xfff2, 0x1, 0x0);
        gbc.writeMem(0x1142, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6b28);
        EXPECT(gbc.pc(), 0x1144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0176
        gbc.setState(0xa6dd, 0x63bf, 0x3a50, 0x166, 0xecb0, 0x8b1e, 0x1, 0x0);
        gbc.writeMem(0xa6dd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x63bf);
        EXPECT(gbc.pc(), 0xa6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6dd), 0xcb);
        EXPECT(gbc.readMem(0xa6de), 0x9d);
        // CB 9D 0177
        gbc.setState(0x8db7, 0xb1d2, 0x7840, 0x2c2a, 0x67e5, 0x6071, 0x1, 0x1);
        gbc.writeMem(0x8db7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb1d2);
        EXPECT(gbc.pc(), 0x8db9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db7), 0xcb);
        EXPECT(gbc.readMem(0x8db8), 0x9d);
        // CB 9D 0178
        gbc.setState(0xa800, 0x56ad, 0x5220, 0xc9d0, 0xd0b6, 0x818d, 0x1, 0x0);
        gbc.writeMem(0xa800, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x56ad);
        EXPECT(gbc.pc(), 0xa802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa800), 0xcb);
        EXPECT(gbc.readMem(0xa801), 0x9d);
        // CB 9D 0179
        gbc.setState(0x7514, 0x60c5, 0x2d20, 0xfc63, 0xe688, 0x4cbd, 0x1, 0x1);
        gbc.writeMem(0x7514, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x60c5);
        EXPECT(gbc.pc(), 0x7516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 017A
        gbc.setState(0xa877, 0x7f53, 0x6df0, 0x66b0, 0x5a0c, 0x12e8, 0x0, 0x0);
        gbc.writeMem(0xa877, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7f53);
        EXPECT(gbc.pc(), 0xa879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa877), 0xcb);
        EXPECT(gbc.readMem(0xa878), 0x9d);
        // CB 9D 017B
        gbc.setState(0xe08c, 0x526a, 0xbab0, 0x35b7, 0xc24b, 0x8d12, 0x1, 0x0);
        gbc.writeMem(0xe08c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x526a);
        EXPECT(gbc.pc(), 0xe08e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe08c), 0xcb);
        EXPECT(gbc.readMem(0xe08d), 0x9d);
        // CB 9D 017C
        gbc.setState(0x1dfe, 0x659e, 0x4690, 0x2597, 0x9e0c, 0x3167, 0x0, 0x1);
        gbc.writeMem(0x1dfe, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x659e);
        EXPECT(gbc.pc(), 0x1e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 017D
        gbc.setState(0x49d4, 0x3d6d, 0x8990, 0xf504, 0xf5e0, 0x686, 0x0, 0x0);
        gbc.writeMem(0x49d4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3d6d);
        EXPECT(gbc.pc(), 0x49d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 017E
        gbc.setState(0x47b9, 0x6f30, 0x1e60, 0xb28f, 0x2663, 0xd324, 0x1, 0x1);
        gbc.writeMem(0x47b9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6f30);
        EXPECT(gbc.pc(), 0x47bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 017F
        gbc.setState(0x8489, 0xc577, 0x3ae0, 0x6016, 0xced9, 0x31b6, 0x0, 0x0);
        gbc.writeMem(0x8489, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc577);
        EXPECT(gbc.pc(), 0x848b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8489), 0xcb);
        EXPECT(gbc.readMem(0x848a), 0x9d);
        // CB 9D 0180
        gbc.setState(0xa29a, 0x22fe, 0x9b20, 0x3ce8, 0x40a0, 0x6f8d, 0x0, 0x0);
        gbc.writeMem(0xa29a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x22fe);
        EXPECT(gbc.pc(), 0xa29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29a), 0xcb);
        EXPECT(gbc.readMem(0xa29b), 0x9d);
        // CB 9D 0181
        gbc.setState(0x79f7, 0xcc31, 0xa2d0, 0x7769, 0x350a, 0xbb60, 0x1, 0x0);
        gbc.writeMem(0x79f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcc31);
        EXPECT(gbc.pc(), 0x79f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0183
        gbc.setState(0x1448, 0x450f, 0x50c0, 0xfdb, 0xcd3f, 0xbd36, 0x0, 0x0);
        gbc.writeMem(0x1448, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x450f);
        EXPECT(gbc.pc(), 0x144a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0184
        gbc.setState(0x3e54, 0x9c42, 0x3800, 0xfeb6, 0x9d3b, 0x4eba, 0x1, 0x1);
        gbc.writeMem(0x3e54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9c42);
        EXPECT(gbc.pc(), 0x3e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0185
        gbc.setState(0x48d4, 0xa0eb, 0xe090, 0xe494, 0xcfaa, 0x56d8, 0x0, 0x0);
        gbc.writeMem(0x48d4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa0eb);
        EXPECT(gbc.pc(), 0x48d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0186
        gbc.setState(0x7548, 0xc76f, 0x82a0, 0xb1f5, 0x2ae1, 0x9413, 0x0, 0x0);
        gbc.writeMem(0x7548, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc76f);
        EXPECT(gbc.pc(), 0x754a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0187
        gbc.setState(0x6d0d, 0x6cb, 0x6e00, 0x15c3, 0x3952, 0xa714, 0x1, 0x0);
        gbc.writeMem(0x6d0d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6cb);
        EXPECT(gbc.pc(), 0x6d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0188
        gbc.setState(0x2a17, 0xdae2, 0xdbc0, 0x4de2, 0x5147, 0x87a5, 0x1, 0x0);
        gbc.writeMem(0x2a17, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xdae2);
        EXPECT(gbc.pc(), 0x2a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0189
        gbc.setState(0xd485, 0xe4e5, 0xa310, 0x977d, 0x5af8, 0xe431, 0x0, 0x0);
        gbc.writeMem(0xd485, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe4e5);
        EXPECT(gbc.pc(), 0xd487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd485), 0xcb);
        EXPECT(gbc.readMem(0xd486), 0x9d);
        // CB 9D 018A
        gbc.setState(0xd46f, 0xa5c6, 0xe250, 0x23ee, 0xbeec, 0x8ee3, 0x1, 0x1);
        gbc.writeMem(0xd46f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa5c6);
        EXPECT(gbc.pc(), 0xd471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd46f), 0xcb);
        EXPECT(gbc.readMem(0xd470), 0x9d);
        // CB 9D 018B
        gbc.setState(0x5d55, 0x3d44, 0x6850, 0x2abf, 0x4276, 0x2ab7, 0x1, 0x1);
        gbc.writeMem(0x5d55, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3d44);
        EXPECT(gbc.pc(), 0x5d57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 018C
        gbc.setState(0x203b, 0x96f7, 0xd910, 0x2e83, 0x2255, 0x8392, 0x1, 0x1);
        gbc.writeMem(0x203b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x96f7);
        EXPECT(gbc.pc(), 0x203d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 018D
        gbc.setState(0x4afc, 0xc3d9, 0x4020, 0xa47a, 0x80f4, 0x34c7, 0x1, 0x1);
        gbc.writeMem(0x4afc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc3d9);
        EXPECT(gbc.pc(), 0x4afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 018E
        gbc.setState(0xc9b7, 0x16af, 0xe010, 0x419, 0xda5b, 0x5183, 0x1, 0x1);
        gbc.writeMem(0xc9b7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x16af);
        EXPECT(gbc.pc(), 0xc9b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b7), 0xcb);
        EXPECT(gbc.readMem(0xc9b8), 0x9d);
        // CB 9D 018F
        gbc.setState(0x1cf1, 0x4137, 0xb120, 0x7186, 0xb5c5, 0xc408, 0x0, 0x0);
        gbc.writeMem(0x1cf1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4137);
        EXPECT(gbc.pc(), 0x1cf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0190
        gbc.setState(0x2b1b, 0xf7ef, 0xd6d0, 0x9b9d, 0x4f91, 0x7194, 0x1, 0x1);
        gbc.writeMem(0x2b1b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf7ef);
        EXPECT(gbc.pc(), 0x2b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0191
        gbc.setState(0xb1c6, 0xf9f8, 0xfe30, 0xff32, 0x3789, 0xf5e9, 0x0, 0x1);
        gbc.writeMem(0xb1c6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf9f8);
        EXPECT(gbc.pc(), 0xb1c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1c6), 0xcb);
        EXPECT(gbc.readMem(0xb1c7), 0x9d);
        // CB 9D 0192
        gbc.setState(0xef73, 0xd312, 0xcad0, 0x99bb, 0xa08d, 0x9bb0, 0x1, 0x0);
        gbc.writeMem(0xef73, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd312);
        EXPECT(gbc.pc(), 0xef75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef73), 0xcb);
        EXPECT(gbc.readMem(0xef74), 0x9d);
        // CB 9D 0193
        gbc.setState(0x8357, 0xe0b3, 0x5890, 0xac58, 0x6b94, 0x269, 0x1, 0x1);
        gbc.writeMem(0x8357, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe0b3);
        EXPECT(gbc.pc(), 0x8359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8357), 0xcb);
        EXPECT(gbc.readMem(0x8358), 0x9d);
        // CB 9D 0194
        gbc.setState(0x67f8, 0xa3fc, 0xe120, 0x6f82, 0xf3ca, 0x628a, 0x0, 0x0);
        gbc.writeMem(0x67f8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa3fc);
        EXPECT(gbc.pc(), 0x67fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0195
        gbc.setState(0x8d2e, 0x3cf5, 0xeb30, 0xe4ba, 0x24ad, 0xc0c9, 0x0, 0x0);
        gbc.writeMem(0x8d2e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3cf5);
        EXPECT(gbc.pc(), 0x8d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d2e), 0xcb);
        EXPECT(gbc.readMem(0x8d2f), 0x9d);
        // CB 9D 0196
        gbc.setState(0xde9a, 0x2cf, 0x5cf0, 0xa702, 0xa4c4, 0x1322, 0x1, 0x0);
        gbc.writeMem(0xde9a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2cf);
        EXPECT(gbc.pc(), 0xde9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde9a), 0xcb);
        EXPECT(gbc.readMem(0xde9b), 0x9d);
        // CB 9D 0197
        gbc.setState(0xe2a3, 0xf13b, 0xdcf0, 0xe9e6, 0x48e4, 0x248b, 0x0, 0x0);
        gbc.writeMem(0xe2a3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf13b);
        EXPECT(gbc.pc(), 0xe2a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a3), 0xcb);
        EXPECT(gbc.readMem(0xe2a4), 0x9d);
        // CB 9D 0198
        gbc.setState(0x2e70, 0x64ca, 0x2f00, 0xb368, 0x3472, 0x7a60, 0x0, 0x0);
        gbc.writeMem(0x2e70, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x64ca);
        EXPECT(gbc.pc(), 0x2e72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0199
        gbc.setState(0x5cd, 0xaca4, 0x94d0, 0xe724, 0x63ec, 0x599c, 0x0, 0x1);
        gbc.writeMem(0x5cd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xaca4);
        EXPECT(gbc.pc(), 0x5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 019A
        gbc.setState(0x9fb0, 0x2528, 0xcc60, 0x5970, 0xe082, 0x26d, 0x1, 0x0);
        gbc.writeMem(0x9fb0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2528);
        EXPECT(gbc.pc(), 0x9fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fb0), 0xcb);
        EXPECT(gbc.readMem(0x9fb1), 0x9d);
        // CB 9D 019B
        gbc.setState(0x74ed, 0x6b92, 0x6fa0, 0x86ed, 0xf5c7, 0xe3c1, 0x0, 0x1);
        gbc.writeMem(0x74ed, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6b92);
        EXPECT(gbc.pc(), 0x74ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 019C
        gbc.setState(0xd16, 0x43a9, 0xec10, 0x5be6, 0x7274, 0x95ab, 0x1, 0x0);
        gbc.writeMem(0xd16, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x43a9);
        EXPECT(gbc.pc(), 0xd18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 019E
        gbc.setState(0x8b78, 0xe080, 0xe7c0, 0x1749, 0x72e1, 0x751, 0x0, 0x0);
        gbc.writeMem(0x8b78, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe080);
        EXPECT(gbc.pc(), 0x8b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b78), 0xcb);
        EXPECT(gbc.readMem(0x8b79), 0x9d);
        // CB 9D 019F
        gbc.setState(0x7d9d, 0xc918, 0xde00, 0xea76, 0xbf8c, 0x73da, 0x1, 0x0);
        gbc.writeMem(0x7d9d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc918);
        EXPECT(gbc.pc(), 0x7d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01A0
        gbc.setState(0x4c83, 0xf16, 0xea60, 0xef0, 0xb0bf, 0xd6ef, 0x0, 0x0);
        gbc.writeMem(0x4c83, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf16);
        EXPECT(gbc.pc(), 0x4c85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01A1
        gbc.setState(0xdbfa, 0x2518, 0x890, 0x2cd, 0x164b, 0xf188, 0x1, 0x1);
        gbc.writeMem(0xdbfa, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2518);
        EXPECT(gbc.pc(), 0xdbfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbfa), 0xcb);
        EXPECT(gbc.readMem(0xdbfb), 0x9d);
        // CB 9D 01A2
        gbc.setState(0x3c74, 0xb91b, 0x4430, 0x1989, 0x1a01, 0xc6e8, 0x0, 0x0);
        gbc.writeMem(0x3c74, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb91b);
        EXPECT(gbc.pc(), 0x3c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01A3
        gbc.setState(0x53d8, 0xc1f8, 0x34c0, 0x8952, 0x9479, 0x7153, 0x0, 0x0);
        gbc.writeMem(0x53d8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc1f8);
        EXPECT(gbc.pc(), 0x53da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01A4
        gbc.setState(0x111d, 0xe57e, 0xf710, 0x258c, 0x347, 0x95db, 0x0, 0x1);
        gbc.writeMem(0x111d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe57e);
        EXPECT(gbc.pc(), 0x111f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01A5
        gbc.setState(0xd637, 0xe96c, 0xce20, 0x4e7f, 0xe04f, 0xc731, 0x0, 0x1);
        gbc.writeMem(0xd637, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe96c);
        EXPECT(gbc.pc(), 0xd639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd637), 0xcb);
        EXPECT(gbc.readMem(0xd638), 0x9d);
        // CB 9D 01A6
        gbc.setState(0x198c, 0x314b, 0x7820, 0x844b, 0xde24, 0x25ad, 0x1, 0x0);
        gbc.writeMem(0x198c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x314b);
        EXPECT(gbc.pc(), 0x198e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01A7
        gbc.setState(0x3dea, 0xfc5c, 0x6e20, 0xe761, 0x54d, 0xedb2, 0x1, 0x1);
        gbc.writeMem(0x3dea, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfc5c);
        EXPECT(gbc.pc(), 0x3dec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01A8
        gbc.setState(0x9ba5, 0xa152, 0xa360, 0xc486, 0x5d94, 0x49f3, 0x1, 0x1);
        gbc.writeMem(0x9ba5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa152);
        EXPECT(gbc.pc(), 0x9ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ba5), 0xcb);
        EXPECT(gbc.readMem(0x9ba6), 0x9d);
        // CB 9D 01AA
        gbc.setState(0x7004, 0x1409, 0xe230, 0xaa9d, 0xf11, 0x3d4d, 0x1, 0x1);
        gbc.writeMem(0x7004, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1409);
        EXPECT(gbc.pc(), 0x7006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01AB
        gbc.setState(0xe103, 0x9be2, 0x91c0, 0x71da, 0x67f2, 0x278b, 0x1, 0x1);
        gbc.writeMem(0xe103, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9be2);
        EXPECT(gbc.pc(), 0xe105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe103), 0xcb);
        EXPECT(gbc.readMem(0xe104), 0x9d);
        // CB 9D 01AC
        gbc.setState(0x9793, 0xc9da, 0x73a0, 0x9d50, 0x38b1, 0xabe2, 0x1, 0x0);
        gbc.writeMem(0x9793, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc9da);
        EXPECT(gbc.pc(), 0x9795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9793), 0xcb);
        EXPECT(gbc.readMem(0x9794), 0x9d);
        // CB 9D 01AD
        gbc.setState(0x5601, 0xe7d, 0x79e0, 0xe9ea, 0xe67c, 0x6839, 0x0, 0x1);
        gbc.writeMem(0x5601, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe7d);
        EXPECT(gbc.pc(), 0x5603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01AE
        gbc.setState(0x17f3, 0x90b7, 0xf250, 0xbb3b, 0x171d, 0xa4d0, 0x0, 0x1);
        gbc.writeMem(0x17f3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x90b7);
        EXPECT(gbc.pc(), 0x17f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01AF
        gbc.setState(0x650d, 0x92fd, 0xb340, 0xfb6a, 0x34bd, 0x67b2, 0x0, 0x1);
        gbc.writeMem(0x650d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x92fd);
        EXPECT(gbc.pc(), 0x650f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01B0
        gbc.setState(0xbe86, 0x619a, 0x58b0, 0x9eac, 0x44be, 0x97ec, 0x1, 0x0);
        gbc.writeMem(0xbe86, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x619a);
        EXPECT(gbc.pc(), 0xbe88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe86), 0xcb);
        EXPECT(gbc.readMem(0xbe87), 0x9d);
        // CB 9D 01B1
        gbc.setState(0x175a, 0xcb90, 0xcae0, 0x288b, 0x1b54, 0x2333, 0x0, 0x1);
        gbc.writeMem(0x175a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcb90);
        EXPECT(gbc.pc(), 0x175c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01B2
        gbc.setState(0xcf58, 0x5ad2, 0x8f00, 0xb777, 0x4452, 0x8c90, 0x1, 0x0);
        gbc.writeMem(0xcf58, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5ad2);
        EXPECT(gbc.pc(), 0xcf5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf58), 0xcb);
        EXPECT(gbc.readMem(0xcf59), 0x9d);
        // CB 9D 01B3
        gbc.setState(0x2872, 0x7630, 0xd040, 0xdd50, 0x45a3, 0x12e8, 0x0, 0x0);
        gbc.writeMem(0x2872, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7630);
        EXPECT(gbc.pc(), 0x2874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01B4
        gbc.setState(0xd206, 0xec79, 0x1690, 0x9e7d, 0xd00f, 0x3b5d, 0x1, 0x0);
        gbc.writeMem(0xd206, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xec79);
        EXPECT(gbc.pc(), 0xd208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd206), 0xcb);
        EXPECT(gbc.readMem(0xd207), 0x9d);
        // CB 9D 01B5
        gbc.setState(0xbf6e, 0x8aae, 0x94a0, 0x81fb, 0x7084, 0x1175, 0x0, 0x1);
        gbc.writeMem(0xbf6e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8aae);
        EXPECT(gbc.pc(), 0xbf70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf6e), 0xcb);
        EXPECT(gbc.readMem(0xbf6f), 0x9d);
        // CB 9D 01B6
        gbc.setState(0xb65c, 0x82ca, 0xcd70, 0x6f29, 0x2f5e, 0x8fd1, 0x1, 0x1);
        gbc.writeMem(0xb65c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x82ca);
        EXPECT(gbc.pc(), 0xb65e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb65c), 0xcb);
        EXPECT(gbc.readMem(0xb65d), 0x9d);
        // CB 9D 01B7
        gbc.setState(0x352, 0x58b3, 0xfb40, 0xeedc, 0x25ab, 0x769c, 0x1, 0x0);
        gbc.writeMem(0x352, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x58b3);
        EXPECT(gbc.pc(), 0x354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01B8
        gbc.setState(0x170b, 0xb37f, 0x4b20, 0xe242, 0xef06, 0xf53f, 0x1, 0x0);
        gbc.writeMem(0x170b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb37f);
        EXPECT(gbc.pc(), 0x170d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01B9
        gbc.setState(0xe1b, 0x9bd3, 0x4c0, 0xec1e, 0xc80a, 0x6bc2, 0x1, 0x1);
        gbc.writeMem(0xe1b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9bd3);
        EXPECT(gbc.pc(), 0xe1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01BA
        gbc.setState(0xcccf, 0x699d, 0xc920, 0x65b5, 0x54f6, 0xd136, 0x1, 0x0);
        gbc.writeMem(0xcccf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x699d);
        EXPECT(gbc.pc(), 0xccd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcccf), 0xcb);
        EXPECT(gbc.readMem(0xccd0), 0x9d);
        // CB 9D 01BB
        gbc.setState(0x91d, 0x3377, 0xbb0, 0x42f0, 0x93bb, 0xeb39, 0x1, 0x1);
        gbc.writeMem(0x91d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3377);
        EXPECT(gbc.pc(), 0x91f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01BC
        gbc.setState(0x57d7, 0xe10b, 0xf6f0, 0xc75, 0x4dd2, 0xde25, 0x1, 0x0);
        gbc.writeMem(0x57d7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe10b);
        EXPECT(gbc.pc(), 0x57d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01BD
        gbc.setState(0x4b04, 0x61b3, 0x4ab0, 0x4a89, 0x9e32, 0x1dd2, 0x1, 0x0);
        gbc.writeMem(0x4b04, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x61b3);
        EXPECT(gbc.pc(), 0x4b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01BE
        gbc.setState(0x6c45, 0x5de0, 0xad90, 0xa526, 0xcc9f, 0x6369, 0x0, 0x0);
        gbc.writeMem(0x6c45, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5de0);
        EXPECT(gbc.pc(), 0x6c47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01BF
        gbc.setState(0x650a, 0xdc7f, 0x3eb0, 0x96d9, 0xf6e8, 0xfc9a, 0x1, 0x1);
        gbc.writeMem(0x650a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xdc7f);
        EXPECT(gbc.pc(), 0x650c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01C0
        gbc.setState(0xbafa, 0x9b9, 0xc270, 0x2e61, 0xe64e, 0xb829, 0x0, 0x0);
        gbc.writeMem(0xbafa, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9b9);
        EXPECT(gbc.pc(), 0xbafc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbafa), 0xcb);
        EXPECT(gbc.readMem(0xbafb), 0x9d);
        // CB 9D 01C1
        gbc.setState(0x4df9, 0xca28, 0xcbe0, 0x8e4, 0x731d, 0x160a, 0x1, 0x1);
        gbc.writeMem(0x4df9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xca28);
        EXPECT(gbc.pc(), 0x4dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01C3
        gbc.setState(0x18b3, 0x8beb, 0x4110, 0x8d25, 0xb585, 0xda48, 0x0, 0x0);
        gbc.writeMem(0x18b3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8beb);
        EXPECT(gbc.pc(), 0x18b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01C4
        gbc.setState(0x9765, 0xd225, 0x35f0, 0xa06b, 0x20be, 0xb2d1, 0x0, 0x0);
        gbc.writeMem(0x9765, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd225);
        EXPECT(gbc.pc(), 0x9767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9765), 0xcb);
        EXPECT(gbc.readMem(0x9766), 0x9d);
        // CB 9D 01C5
        gbc.setState(0x846, 0x192d, 0x9e70, 0xe0b6, 0x5e5, 0x2974, 0x1, 0x1);
        gbc.writeMem(0x846, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x192d);
        EXPECT(gbc.pc(), 0x848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01C6
        gbc.setState(0x37d2, 0x8477, 0xfc50, 0x7dd7, 0x11ea, 0x19cc, 0x0, 0x1);
        gbc.writeMem(0x37d2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8477);
        EXPECT(gbc.pc(), 0x37d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01C7
        gbc.setState(0x3911, 0xe152, 0x7090, 0x3088, 0xfa81, 0xc473, 0x0, 0x1);
        gbc.writeMem(0x3911, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe152);
        EXPECT(gbc.pc(), 0x3913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01C8
        gbc.setState(0x3edc, 0xee12, 0xde20, 0xdaf4, 0xaf8d, 0xf86b, 0x1, 0x0);
        gbc.writeMem(0x3edc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xee12);
        EXPECT(gbc.pc(), 0x3ede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01C9
        gbc.setState(0x67c5, 0xa962, 0x9a20, 0x7f98, 0x4900, 0x690f, 0x1, 0x0);
        gbc.writeMem(0x67c5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa962);
        EXPECT(gbc.pc(), 0x67c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01CA
        gbc.setState(0xb818, 0x6da, 0x6850, 0xf573, 0x81cc, 0xcb78, 0x0, 0x0);
        gbc.writeMem(0xb818, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6da);
        EXPECT(gbc.pc(), 0xb81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb818), 0xcb);
        EXPECT(gbc.readMem(0xb819), 0x9d);
        // CB 9D 01CB
        gbc.setState(0x570f, 0xd734, 0x7130, 0xb6a2, 0x17cd, 0x25e5, 0x0, 0x1);
        gbc.writeMem(0x570f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd734);
        EXPECT(gbc.pc(), 0x5711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01CC
        gbc.setState(0xcb5c, 0x45a2, 0x8a00, 0xef41, 0x9baf, 0xdee, 0x0, 0x1);
        gbc.writeMem(0xcb5c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x45a2);
        EXPECT(gbc.pc(), 0xcb5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb5c), 0xcb);
        EXPECT(gbc.readMem(0xcb5d), 0x9d);
        // CB 9D 01CD
        gbc.setState(0x244e, 0x64bb, 0xa910, 0xa835, 0x8def, 0x548f, 0x1, 0x1);
        gbc.writeMem(0x244e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x64bb);
        EXPECT(gbc.pc(), 0x2450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01CE
        gbc.setState(0x6566, 0xde9c, 0xddb0, 0x38ff, 0x1894, 0xd4f7, 0x1, 0x0);
        gbc.writeMem(0x6566, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xde9c);
        EXPECT(gbc.pc(), 0x6568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01CF
        gbc.setState(0x4967, 0x1937, 0x83a0, 0xfe53, 0x6f3c, 0xe0f1, 0x1, 0x1);
        gbc.writeMem(0x4967, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1937);
        EXPECT(gbc.pc(), 0x4969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01D0
        gbc.setState(0xbcff, 0xe673, 0xa280, 0x17a9, 0x70a0, 0x8975, 0x1, 0x0);
        gbc.writeMem(0xbcff, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe673);
        EXPECT(gbc.pc(), 0xbd01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcff), 0xcb);
        EXPECT(gbc.readMem(0xbd00), 0x9d);
        // CB 9D 01D1
        gbc.setState(0x2124, 0xd232, 0xc320, 0x6f6e, 0xabee, 0x2f99, 0x0, 0x0);
        gbc.writeMem(0x2124, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd232);
        EXPECT(gbc.pc(), 0x2126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01D2
        gbc.setState(0xdfee, 0xa00, 0x3fc0, 0xb734, 0x6e3a, 0xfd79, 0x1, 0x1);
        gbc.writeMem(0xdfee, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa00);
        EXPECT(gbc.pc(), 0xdff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfee), 0xcb);
        EXPECT(gbc.readMem(0xdfef), 0x9d);
        // CB 9D 01D3
        gbc.setState(0x9fc9, 0xba0d, 0xb970, 0xf7fa, 0x80d7, 0x417a, 0x0, 0x1);
        gbc.writeMem(0x9fc9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xba0d);
        EXPECT(gbc.pc(), 0x9fcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc9), 0xcb);
        EXPECT(gbc.readMem(0x9fca), 0x9d);
        // CB 9D 01D4
        gbc.setState(0xc22b, 0x5e90, 0x9740, 0xf208, 0x43d4, 0x1ab3, 0x1, 0x0);
        gbc.writeMem(0xc22b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5e90);
        EXPECT(gbc.pc(), 0xc22d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc22b), 0xcb);
        EXPECT(gbc.readMem(0xc22c), 0x9d);
        // CB 9D 01D5
        gbc.setState(0xf83, 0x226a, 0xac50, 0xee5a, 0x5fc4, 0x4d9, 0x0, 0x1);
        gbc.writeMem(0xf83, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x226a);
        EXPECT(gbc.pc(), 0xf85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01D6
        gbc.setState(0xd384, 0x455e, 0xe290, 0x6041, 0xdcef, 0xb3e9, 0x0, 0x1);
        gbc.writeMem(0xd384, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x455e);
        EXPECT(gbc.pc(), 0xd386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd384), 0xcb);
        EXPECT(gbc.readMem(0xd385), 0x9d);
        // CB 9D 01D7
        gbc.setState(0x4ce5, 0x6cac, 0xe300, 0xa7ba, 0xe2ac, 0xb63d, 0x0, 0x1);
        gbc.writeMem(0x4ce5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6cac);
        EXPECT(gbc.pc(), 0x4ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01D8
        gbc.setState(0xe7b6, 0xf838, 0xd270, 0xa90, 0x1c88, 0xe6d6, 0x1, 0x1);
        gbc.writeMem(0xe7b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf838);
        EXPECT(gbc.pc(), 0xe7b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7b6), 0xcb);
        EXPECT(gbc.readMem(0xe7b7), 0x9d);
        // CB 9D 01D9
        gbc.setState(0x4f19, 0x8fd9, 0x4f90, 0x5979, 0xfe3d, 0xd0ea, 0x0, 0x0);
        gbc.writeMem(0x4f19, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8fd9);
        EXPECT(gbc.pc(), 0x4f1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01DA
        gbc.setState(0x4766, 0xe7f1, 0xe660, 0x265f, 0xd321, 0x40c6, 0x1, 0x1);
        gbc.writeMem(0x4766, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe7f1);
        EXPECT(gbc.pc(), 0x4768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01DB
        gbc.setState(0xd28d, 0x1052, 0xe40, 0x5f2, 0x56fd, 0x45c4, 0x0, 0x0);
        gbc.writeMem(0xd28d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1052);
        EXPECT(gbc.pc(), 0xd28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28d), 0xcb);
        EXPECT(gbc.readMem(0xd28e), 0x9d);
        // CB 9D 01DC
        gbc.setState(0xe670, 0x6f4e, 0xf410, 0x6bc9, 0x5be4, 0xbf9f, 0x1, 0x0);
        gbc.writeMem(0xe670, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6f4e);
        EXPECT(gbc.pc(), 0xe672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe670), 0xcb);
        EXPECT(gbc.readMem(0xe671), 0x9d);
        // CB 9D 01DD
        gbc.setState(0x2097, 0x5d5c, 0xa690, 0x40a, 0x395d, 0x5e62, 0x0, 0x1);
        gbc.writeMem(0x2097, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5d5c);
        EXPECT(gbc.pc(), 0x2099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01DE
        gbc.setState(0x3d5b, 0xc818, 0xea10, 0x42b6, 0xe1f2, 0xb3bb, 0x1, 0x0);
        gbc.writeMem(0x3d5b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc818);
        EXPECT(gbc.pc(), 0x3d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01DF
        gbc.setState(0x4cae, 0x328b, 0x28b0, 0xa68c, 0x2d67, 0xf287, 0x0, 0x1);
        gbc.writeMem(0x4cae, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x328b);
        EXPECT(gbc.pc(), 0x4cb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01E0
        gbc.setState(0x2e64, 0x6a52, 0xcbb0, 0xcf9a, 0x33d2, 0x62ad, 0x1, 0x1);
        gbc.writeMem(0x2e64, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6a52);
        EXPECT(gbc.pc(), 0x2e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01E1
        gbc.setState(0xe956, 0x5cca, 0x2310, 0x84ef, 0x50ae, 0xdfd6, 0x1, 0x1);
        gbc.writeMem(0xe956, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5cca);
        EXPECT(gbc.pc(), 0xe958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe956), 0xcb);
        EXPECT(gbc.readMem(0xe957), 0x9d);
        // CB 9D 01E2
        gbc.setState(0xc453, 0x9b70, 0x9570, 0x52f4, 0x17c, 0x3f93, 0x1, 0x0);
        gbc.writeMem(0xc453, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9b70);
        EXPECT(gbc.pc(), 0xc455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc453), 0xcb);
        EXPECT(gbc.readMem(0xc454), 0x9d);
        // CB 9D 01E3
        gbc.setState(0xbe6, 0x6f75, 0x50f0, 0xd5bf, 0x97c0, 0xc2f4, 0x0, 0x0);
        gbc.writeMem(0xbe6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6f75);
        EXPECT(gbc.pc(), 0xbe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01E4
        gbc.setState(0x6f33, 0x9700, 0x4f20, 0x16c2, 0xb7e7, 0x47ee, 0x1, 0x1);
        gbc.writeMem(0x6f33, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9700);
        EXPECT(gbc.pc(), 0x6f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01E5
        gbc.setState(0x314d, 0xd7f, 0xfc30, 0x1370, 0xcc9e, 0x6626, 0x0, 0x1);
        gbc.writeMem(0x314d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd7f);
        EXPECT(gbc.pc(), 0x314f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01E6
        gbc.setState(0xea67, 0x6c08, 0xc00, 0x1235, 0xd167, 0xebca, 0x1, 0x0);
        gbc.writeMem(0xea67, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6c08);
        EXPECT(gbc.pc(), 0xea69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea67), 0xcb);
        EXPECT(gbc.readMem(0xea68), 0x9d);
        // CB 9D 01E7
        gbc.setState(0x3788, 0x11d0, 0x2820, 0xb972, 0x8a74, 0xc73b, 0x0, 0x1);
        gbc.writeMem(0x3788, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x11d0);
        EXPECT(gbc.pc(), 0x378a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01E8
        gbc.setState(0x567, 0x7380, 0x6dd0, 0xe1e7, 0x2fec, 0xcb68, 0x0, 0x0);
        gbc.writeMem(0x567, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7380);
        EXPECT(gbc.pc(), 0x569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01E9
        gbc.setState(0xe15c, 0x9e26, 0xcd70, 0x2286, 0x1b7a, 0x8dfc, 0x0, 0x0);
        gbc.writeMem(0xe15c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9e26);
        EXPECT(gbc.pc(), 0xe15e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe15c), 0xcb);
        EXPECT(gbc.readMem(0xe15d), 0x9d);
        // CB 9D 01EA
        gbc.setState(0x1f23, 0xf85, 0x6920, 0x35db, 0x52c1, 0x81ef, 0x1, 0x1);
        gbc.writeMem(0x1f23, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf85);
        EXPECT(gbc.pc(), 0x1f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01EB
        gbc.setState(0xb64e, 0x956f, 0x9a10, 0x7473, 0x97a1, 0xae93, 0x0, 0x0);
        gbc.writeMem(0xb64e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x956f);
        EXPECT(gbc.pc(), 0xb650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb64e), 0xcb);
        EXPECT(gbc.readMem(0xb64f), 0x9d);
        // CB 9D 01EC
        gbc.setState(0x9078, 0x471d, 0xb900, 0xca7e, 0xe0f9, 0x71f8, 0x0, 0x0);
        gbc.writeMem(0x9078, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x471d);
        EXPECT(gbc.pc(), 0x907a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9078), 0xcb);
        EXPECT(gbc.readMem(0x9079), 0x9d);
        // CB 9D 01ED
        gbc.setState(0x2c66, 0x33c7, 0x6d00, 0xb4f9, 0x8990, 0xfbb8, 0x1, 0x0);
        gbc.writeMem(0x2c66, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x33c7);
        EXPECT(gbc.pc(), 0x2c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01EE
        gbc.setState(0x62d4, 0x7738, 0x9e20, 0x5120, 0x9dd8, 0x2ecc, 0x0, 0x0);
        gbc.writeMem(0x62d4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7738);
        EXPECT(gbc.pc(), 0x62d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01EF
        gbc.setState(0xd32f, 0x2921, 0xfb20, 0x3e13, 0x6c7b, 0x7158, 0x1, 0x1);
        gbc.writeMem(0xd32f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2921);
        EXPECT(gbc.pc(), 0xd331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32f), 0xcb);
        EXPECT(gbc.readMem(0xd330), 0x9d);
        // CB 9D 01F0
        gbc.setState(0xa020, 0xa241, 0x5790, 0x6ef6, 0xf2fc, 0x4ba5, 0x1, 0x0);
        gbc.writeMem(0xa020, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa241);
        EXPECT(gbc.pc(), 0xa022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa020), 0xcb);
        EXPECT(gbc.readMem(0xa021), 0x9d);
        // CB 9D 01F1
        gbc.setState(0x9f86, 0xca62, 0xa1c0, 0xe59d, 0x98a0, 0xf0d9, 0x0, 0x0);
        gbc.writeMem(0x9f86, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xca62);
        EXPECT(gbc.pc(), 0x9f88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f86), 0xcb);
        EXPECT(gbc.readMem(0x9f87), 0x9d);
        // CB 9D 01F2
        gbc.setState(0x687e, 0xe4e3, 0xa380, 0xc7f9, 0xb161, 0xadd0, 0x0, 0x1);
        gbc.writeMem(0x687e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe4e3);
        EXPECT(gbc.pc(), 0x6880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01F3
        gbc.setState(0x3b48, 0xc393, 0x4460, 0xbd7, 0x1fb4, 0x291d, 0x1, 0x1);
        gbc.writeMem(0x3b48, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc393);
        EXPECT(gbc.pc(), 0x3b4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01F4
        gbc.setState(0x71fc, 0xe42b, 0x87b0, 0x9d4a, 0x652b, 0xc320, 0x1, 0x1);
        gbc.writeMem(0x71fc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe42b);
        EXPECT(gbc.pc(), 0x71fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01F5
        gbc.setState(0x8e47, 0x99a9, 0x49f0, 0x3b27, 0x3497, 0x6d6e, 0x0, 0x0);
        gbc.writeMem(0x8e47, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x99a9);
        EXPECT(gbc.pc(), 0x8e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e47), 0xcb);
        EXPECT(gbc.readMem(0x8e48), 0x9d);
        // CB 9D 01F6
        gbc.setState(0xda96, 0x9860, 0xc760, 0x8d52, 0x6744, 0xf5b1, 0x0, 0x1);
        gbc.writeMem(0xda96, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9860);
        EXPECT(gbc.pc(), 0xda98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda96), 0xcb);
        EXPECT(gbc.readMem(0xda97), 0x9d);
        // CB 9D 01F7
        gbc.setState(0xa991, 0x3466, 0xcd20, 0xef29, 0x993d, 0x6d81, 0x0, 0x0);
        gbc.writeMem(0xa991, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3466);
        EXPECT(gbc.pc(), 0xa993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa991), 0xcb);
        EXPECT(gbc.readMem(0xa992), 0x9d);
        // CB 9D 01F8
        gbc.setState(0x1948, 0xbdf7, 0xecd0, 0xb8d3, 0xbfe4, 0xb8e9, 0x0, 0x0);
        gbc.writeMem(0x1948, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbdf7);
        EXPECT(gbc.pc(), 0x194a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01F9
        gbc.setState(0x74a6, 0x288, 0xd7c0, 0xaf1b, 0x3807, 0x65b0, 0x1, 0x1);
        gbc.writeMem(0x74a6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x288);
        EXPECT(gbc.pc(), 0x74a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 01FA
        gbc.setState(0xc648, 0xa612, 0xe950, 0x7fbc, 0x22ed, 0x743f, 0x0, 0x0);
        gbc.writeMem(0xc648, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa612);
        EXPECT(gbc.pc(), 0xc64a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc648), 0xcb);
        EXPECT(gbc.readMem(0xc649), 0x9d);
        // CB 9D 01FB
        gbc.setState(0x69bf, 0xd5e6, 0xed50, 0x9bcf, 0x8755, 0x9ada, 0x1, 0x1);
        gbc.writeMem(0x69bf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd5e6);
        EXPECT(gbc.pc(), 0x69c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01FC
        gbc.setState(0x698b, 0xedd5, 0xd0f0, 0xf452, 0xc5fe, 0x202f, 0x0, 0x0);
        gbc.writeMem(0x698b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xedd5);
        EXPECT(gbc.pc(), 0x698d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 01FD
        gbc.setState(0x9583, 0x3c5d, 0x610, 0x969f, 0x85ab, 0x9644, 0x0, 0x1);
        gbc.writeMem(0x9583, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3c5d);
        EXPECT(gbc.pc(), 0x9585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9583), 0xcb);
        EXPECT(gbc.readMem(0x9584), 0x9d);
        // CB 9D 01FE
        gbc.setState(0x8760, 0x173f, 0xb340, 0x3ed3, 0xa62, 0xf1df, 0x1, 0x0);
        gbc.writeMem(0x8760, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x173f);
        EXPECT(gbc.pc(), 0x8762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8760), 0xcb);
        EXPECT(gbc.readMem(0x8761), 0x9d);
        // CB 9D 01FF
        gbc.setState(0x9f98, 0x9a98, 0x32b0, 0x9f4, 0xf516, 0x4bc1, 0x1, 0x1);
        gbc.writeMem(0x9f98, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9a98);
        EXPECT(gbc.pc(), 0x9f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f98), 0xcb);
        EXPECT(gbc.readMem(0x9f99), 0x9d);
        // CB 9D 0200
        gbc.setState(0x744c, 0xcecc, 0xf770, 0xd021, 0xd8b9, 0x6751, 0x1, 0x0);
        gbc.writeMem(0x744c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcecc);
        EXPECT(gbc.pc(), 0x744e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0201
        gbc.setState(0x1fb0, 0x183d, 0x5000, 0x472b, 0xdc07, 0x6bd2, 0x0, 0x1);
        gbc.writeMem(0x1fb0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x183d);
        EXPECT(gbc.pc(), 0x1fb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0202
        gbc.setState(0xb4e2, 0x5982, 0x7ef0, 0x65cc, 0x170c, 0xdf6e, 0x0, 0x1);
        gbc.writeMem(0xb4e2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5982);
        EXPECT(gbc.pc(), 0xb4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e2), 0xcb);
        EXPECT(gbc.readMem(0xb4e3), 0x9d);
        // CB 9D 0203
        gbc.setState(0xcbe5, 0x9fd4, 0x760, 0x414d, 0x3ecc, 0x3b9b, 0x1, 0x0);
        gbc.writeMem(0xcbe5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9fd4);
        EXPECT(gbc.pc(), 0xcbe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe5), 0xcb);
        EXPECT(gbc.readMem(0xcbe6), 0x9d);
        // CB 9D 0204
        gbc.setState(0xb1e3, 0xebb7, 0x7a00, 0x476, 0xd8f, 0xa998, 0x0, 0x1);
        gbc.writeMem(0xb1e3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xebb7);
        EXPECT(gbc.pc(), 0xb1e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1e3), 0xcb);
        EXPECT(gbc.readMem(0xb1e4), 0x9d);
        // CB 9D 0205
        gbc.setState(0x263e, 0xe4a8, 0x85e0, 0x27f8, 0xa776, 0x70e9, 0x1, 0x1);
        gbc.writeMem(0x263e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe4a8);
        EXPECT(gbc.pc(), 0x2640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0206
        gbc.setState(0x55a3, 0x7843, 0x7fb0, 0xb5d4, 0x46c1, 0x156e, 0x1, 0x0);
        gbc.writeMem(0x55a3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7843);
        EXPECT(gbc.pc(), 0x55a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0207
        gbc.setState(0x2a34, 0x4e3c, 0x6050, 0xfd7c, 0xdf16, 0x5734, 0x1, 0x0);
        gbc.writeMem(0x2a34, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4e3c);
        EXPECT(gbc.pc(), 0x2a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0208
        gbc.setState(0x57c4, 0xf325, 0x9740, 0x11e6, 0x5393, 0x18bf, 0x1, 0x0);
        gbc.writeMem(0x57c4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf325);
        EXPECT(gbc.pc(), 0x57c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0209
        gbc.setState(0x8926, 0x2d20, 0x1c30, 0x9b74, 0xb59, 0x28bf, 0x1, 0x0);
        gbc.writeMem(0x8926, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2d20);
        EXPECT(gbc.pc(), 0x8928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8926), 0xcb);
        EXPECT(gbc.readMem(0x8927), 0x9d);
        // CB 9D 020A
        gbc.setState(0xe8fd, 0x70f9, 0x450, 0xa1e6, 0x4583, 0xa92a, 0x0, 0x1);
        gbc.writeMem(0xe8fd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x70f9);
        EXPECT(gbc.pc(), 0xe8ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8fd), 0xcb);
        EXPECT(gbc.readMem(0xe8fe), 0x9d);
        // CB 9D 020B
        gbc.setState(0x79a9, 0x8877, 0xe500, 0x6da5, 0x165f, 0xb384, 0x1, 0x0);
        gbc.writeMem(0x79a9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8877);
        EXPECT(gbc.pc(), 0x79ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 020C
        gbc.setState(0xc542, 0xae3e, 0xfd00, 0x80d0, 0xbc8f, 0x8d6a, 0x0, 0x0);
        gbc.writeMem(0xc542, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xae3e);
        EXPECT(gbc.pc(), 0xc544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc542), 0xcb);
        EXPECT(gbc.readMem(0xc543), 0x9d);
        // CB 9D 020D
        gbc.setState(0xbd54, 0xd294, 0x9520, 0x17c2, 0xba00, 0xe5e8, 0x0, 0x1);
        gbc.writeMem(0xbd54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd294);
        EXPECT(gbc.pc(), 0xbd56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd54), 0xcb);
        EXPECT(gbc.readMem(0xbd55), 0x9d);
        // CB 9D 020E
        gbc.setState(0x84da, 0x6ee7, 0x5980, 0x39e2, 0xa6bd, 0x6eed, 0x1, 0x0);
        gbc.writeMem(0x84da, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6ee7);
        EXPECT(gbc.pc(), 0x84dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84da), 0xcb);
        EXPECT(gbc.readMem(0x84db), 0x9d);
        // CB 9D 020F
        gbc.setState(0xaab3, 0xb91, 0x9610, 0x4d05, 0x5c88, 0xc695, 0x0, 0x1);
        gbc.writeMem(0xaab3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb91);
        EXPECT(gbc.pc(), 0xaab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab3), 0xcb);
        EXPECT(gbc.readMem(0xaab4), 0x9d);
        // CB 9D 0210
        gbc.setState(0xeb3, 0x5dee, 0xe7a0, 0x6349, 0x28f8, 0x1421, 0x1, 0x1);
        gbc.writeMem(0xeb3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5dee);
        EXPECT(gbc.pc(), 0xeb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0211
        gbc.setState(0x1e46, 0xb501, 0xce0, 0x584d, 0xc760, 0xe593, 0x0, 0x1);
        gbc.writeMem(0x1e46, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb501);
        EXPECT(gbc.pc(), 0x1e48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0212
        gbc.setState(0x5a7f, 0xdaf5, 0xf6f0, 0x7912, 0x5d5a, 0x3471, 0x1, 0x1);
        gbc.writeMem(0x5a7f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdaf5);
        EXPECT(gbc.pc(), 0x5a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0213
        gbc.setState(0x9a76, 0x300d, 0x1650, 0x2b8b, 0x6a2e, 0x958a, 0x1, 0x0);
        gbc.writeMem(0x9a76, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x300d);
        EXPECT(gbc.pc(), 0x9a78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a76), 0xcb);
        EXPECT(gbc.readMem(0x9a77), 0x9d);
        // CB 9D 0214
        gbc.setState(0xd471, 0x1dc5, 0xdbc0, 0x3b47, 0xf3d0, 0x327b, 0x0, 0x0);
        gbc.writeMem(0xd471, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1dc5);
        EXPECT(gbc.pc(), 0xd473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd471), 0xcb);
        EXPECT(gbc.readMem(0xd472), 0x9d);
        // CB 9D 0216
        gbc.setState(0xe4dc, 0xab49, 0xb960, 0xe736, 0xef1a, 0xb41, 0x0, 0x0);
        gbc.writeMem(0xe4dc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xab49);
        EXPECT(gbc.pc(), 0xe4de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4dc), 0xcb);
        EXPECT(gbc.readMem(0xe4dd), 0x9d);
        // CB 9D 0217
        gbc.setState(0x3c3, 0x5b96, 0xf0, 0xf492, 0xeeb9, 0xae86, 0x0, 0x0);
        gbc.writeMem(0x3c3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5b96);
        EXPECT(gbc.pc(), 0x3c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0218
        gbc.setState(0xbfb, 0x3141, 0x52c0, 0x24b8, 0xd9bf, 0x78d3, 0x1, 0x1);
        gbc.writeMem(0xbfb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3141);
        EXPECT(gbc.pc(), 0xbfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0219
        gbc.setState(0x28d6, 0xa71, 0x84e0, 0x1809, 0x53b6, 0xab03, 0x1, 0x0);
        gbc.writeMem(0x28d6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa71);
        EXPECT(gbc.pc(), 0x28d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 021A
        gbc.setState(0x3f00, 0x7372, 0x6fd0, 0xd7d0, 0xcc4a, 0x87bc, 0x0, 0x1);
        gbc.writeMem(0x3f00, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7372);
        EXPECT(gbc.pc(), 0x3f02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 021B
        gbc.setState(0xe584, 0x6e1, 0xa750, 0x684c, 0xda24, 0x6d31, 0x0, 0x1);
        gbc.writeMem(0xe584, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6e1);
        EXPECT(gbc.pc(), 0xe586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe584), 0xcb);
        EXPECT(gbc.readMem(0xe585), 0x9d);
        // CB 9D 021C
        gbc.setState(0xe0f2, 0x6564, 0xcba0, 0xea93, 0x7dbd, 0x6c90, 0x0, 0x1);
        gbc.writeMem(0xe0f2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6564);
        EXPECT(gbc.pc(), 0xe0f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f2), 0xcb);
        EXPECT(gbc.readMem(0xe0f3), 0x9d);
        // CB 9D 021D
        gbc.setState(0xba02, 0xbdb2, 0xa940, 0x1e44, 0xb4a7, 0x9e29, 0x1, 0x0);
        gbc.writeMem(0xba02, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbdb2);
        EXPECT(gbc.pc(), 0xba04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba02), 0xcb);
        EXPECT(gbc.readMem(0xba03), 0x9d);
        // CB 9D 021F
        gbc.setState(0xca32, 0xb657, 0xab60, 0xf244, 0x5265, 0xfadb, 0x0, 0x0);
        gbc.writeMem(0xca32, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb657);
        EXPECT(gbc.pc(), 0xca34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca32), 0xcb);
        EXPECT(gbc.readMem(0xca33), 0x9d);
        // CB 9D 0221
        gbc.setState(0xcbec, 0x995, 0xc210, 0xcaa9, 0x43d6, 0x9885, 0x0, 0x0);
        gbc.writeMem(0xcbec, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x995);
        EXPECT(gbc.pc(), 0xcbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbec), 0xcb);
        EXPECT(gbc.readMem(0xcbed), 0x9d);
        // CB 9D 0222
        gbc.setState(0x36f4, 0x2c07, 0x620, 0x32f8, 0xc452, 0x7d4d, 0x1, 0x0);
        gbc.writeMem(0x36f4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2c07);
        EXPECT(gbc.pc(), 0x36f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0223
        gbc.setState(0x10c7, 0x7043, 0x2d90, 0xe5e, 0xd2ee, 0xcbc6, 0x0, 0x1);
        gbc.writeMem(0x10c7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7043);
        EXPECT(gbc.pc(), 0x10c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0224
        gbc.setState(0xb38b, 0x96d5, 0xdd80, 0x8fc5, 0x1adc, 0xadc7, 0x1, 0x0);
        gbc.writeMem(0xb38b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x96d5);
        EXPECT(gbc.pc(), 0xb38d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb38b), 0xcb);
        EXPECT(gbc.readMem(0xb38c), 0x9d);
        // CB 9D 0225
        gbc.setState(0xd75d, 0x2340, 0x1360, 0x3fbd, 0xdaf2, 0x6f4a, 0x1, 0x1);
        gbc.writeMem(0xd75d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2340);
        EXPECT(gbc.pc(), 0xd75f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd75d), 0xcb);
        EXPECT(gbc.readMem(0xd75e), 0x9d);
        // CB 9D 0226
        gbc.setState(0x5d24, 0x5239, 0xb770, 0x67ac, 0x59ad, 0xda5, 0x1, 0x1);
        gbc.writeMem(0x5d24, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5239);
        EXPECT(gbc.pc(), 0x5d26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0227
        gbc.setState(0x912d, 0x6653, 0xb050, 0x292a, 0x15c9, 0x6cc9, 0x0, 0x1);
        gbc.writeMem(0x912d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6653);
        EXPECT(gbc.pc(), 0x912f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912d), 0xcb);
        EXPECT(gbc.readMem(0x912e), 0x9d);
        // CB 9D 0228
        gbc.setState(0x66d6, 0xa1, 0xb8d0, 0x9e9e, 0xfd71, 0x4f4, 0x0, 0x1);
        gbc.writeMem(0x66d6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa1);
        EXPECT(gbc.pc(), 0x66d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0229
        gbc.setState(0x1d99, 0x9004, 0xa0e0, 0xcdc, 0xd40c, 0x927e, 0x0, 0x1);
        gbc.writeMem(0x1d99, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9004);
        EXPECT(gbc.pc(), 0x1d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 022A
        gbc.setState(0xb06a, 0x1467, 0x3350, 0xeb57, 0xf930, 0xe08f, 0x0, 0x0);
        gbc.writeMem(0xb06a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1467);
        EXPECT(gbc.pc(), 0xb06c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb06a), 0xcb);
        EXPECT(gbc.readMem(0xb06b), 0x9d);
        // CB 9D 022B
        gbc.setState(0xee63, 0xf88e, 0xed0, 0xa151, 0xf85a, 0x2338, 0x0, 0x0);
        gbc.writeMem(0xee63, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf88e);
        EXPECT(gbc.pc(), 0xee65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee63), 0xcb);
        EXPECT(gbc.readMem(0xee64), 0x9d);
        // CB 9D 022C
        gbc.setState(0x7f2, 0xdcf6, 0xb0d0, 0x4025, 0xde75, 0x810f, 0x0, 0x1);
        gbc.writeMem(0x7f2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdcf6);
        EXPECT(gbc.pc(), 0x7f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 022D
        gbc.setState(0xcf7d, 0x2fab, 0xf5b0, 0xbc6b, 0x6256, 0x6feb, 0x1, 0x1);
        gbc.writeMem(0xcf7d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2fab);
        EXPECT(gbc.pc(), 0xcf7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf7d), 0xcb);
        EXPECT(gbc.readMem(0xcf7e), 0x9d);
        // CB 9D 022E
        gbc.setState(0x9e04, 0xc5a3, 0xd830, 0xfad1, 0x7760, 0xbdcf, 0x0, 0x0);
        gbc.writeMem(0x9e04, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc5a3);
        EXPECT(gbc.pc(), 0x9e06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e04), 0xcb);
        EXPECT(gbc.readMem(0x9e05), 0x9d);
        // CB 9D 022F
        gbc.setState(0x414a, 0xf476, 0x3170, 0xe5e5, 0xa8fc, 0xce3c, 0x0, 0x0);
        gbc.writeMem(0x414a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf476);
        EXPECT(gbc.pc(), 0x414c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0230
        gbc.setState(0x7b72, 0x1318, 0x53a0, 0x4f49, 0xf89a, 0xb5cc, 0x0, 0x0);
        gbc.writeMem(0x7b72, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1318);
        EXPECT(gbc.pc(), 0x7b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0231
        gbc.setState(0xb8d7, 0x1eb2, 0x1ca0, 0x8d7a, 0x6915, 0xd59b, 0x1, 0x0);
        gbc.writeMem(0xb8d7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1eb2);
        EXPECT(gbc.pc(), 0xb8d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d7), 0xcb);
        EXPECT(gbc.readMem(0xb8d8), 0x9d);
        // CB 9D 0233
        gbc.setState(0xa34, 0x4b80, 0x2d90, 0xd5f8, 0x5e62, 0xb879, 0x0, 0x1);
        gbc.writeMem(0xa34, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4b80);
        EXPECT(gbc.pc(), 0xa36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0234
        gbc.setState(0x104b, 0xccb1, 0x41c0, 0xd7b0, 0x491c, 0x26e6, 0x1, 0x0);
        gbc.writeMem(0x104b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xccb1);
        EXPECT(gbc.pc(), 0x104d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0236
        gbc.setState(0xa8cb, 0x9c4e, 0x27a0, 0x15f4, 0x7a5c, 0x833c, 0x0, 0x1);
        gbc.writeMem(0xa8cb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9c4e);
        EXPECT(gbc.pc(), 0xa8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8cb), 0xcb);
        EXPECT(gbc.readMem(0xa8cc), 0x9d);
        // CB 9D 0237
        gbc.setState(0xaa6f, 0xbe1c, 0x71c0, 0x4c28, 0x212e, 0x5165, 0x0, 0x1);
        gbc.writeMem(0xaa6f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbe1c);
        EXPECT(gbc.pc(), 0xaa71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa6f), 0xcb);
        EXPECT(gbc.readMem(0xaa70), 0x9d);
        // CB 9D 0238
        gbc.setState(0x9bb8, 0xbe56, 0x940, 0x188c, 0xaf10, 0xb34e, 0x0, 0x1);
        gbc.writeMem(0x9bb8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbe56);
        EXPECT(gbc.pc(), 0x9bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bb8), 0xcb);
        EXPECT(gbc.readMem(0x9bb9), 0x9d);
        // CB 9D 0239
        gbc.setState(0x5904, 0x328c, 0xbe0, 0xf445, 0xb260, 0x9981, 0x0, 0x1);
        gbc.writeMem(0x5904, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x328c);
        EXPECT(gbc.pc(), 0x5906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 023A
        gbc.setState(0x161f, 0xfb51, 0xe0c0, 0x5d34, 0x210a, 0x7442, 0x1, 0x1);
        gbc.writeMem(0x161f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfb51);
        EXPECT(gbc.pc(), 0x1621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 023B
        gbc.setState(0xd5e2, 0x19d3, 0x4f10, 0x5444, 0x117f, 0xd1f2, 0x1, 0x0);
        gbc.writeMem(0xd5e2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x19d3);
        EXPECT(gbc.pc(), 0xd5e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5e2), 0xcb);
        EXPECT(gbc.readMem(0xd5e3), 0x9d);
        // CB 9D 023D
        gbc.setState(0xc324, 0x401d, 0x7140, 0x307c, 0x56ee, 0x9677, 0x1, 0x1);
        gbc.writeMem(0xc324, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x401d);
        EXPECT(gbc.pc(), 0xc326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc324), 0xcb);
        EXPECT(gbc.readMem(0xc325), 0x9d);
        // CB 9D 023E
        gbc.setState(0xc53b, 0x3a5e, 0x57d0, 0xa4e4, 0x435d, 0x83ab, 0x0, 0x1);
        gbc.writeMem(0xc53b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3a5e);
        EXPECT(gbc.pc(), 0xc53d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc53b), 0xcb);
        EXPECT(gbc.readMem(0xc53c), 0x9d);
        // CB 9D 023F
        gbc.setState(0x7a5e, 0x2b92, 0x9d0, 0xd7ea, 0x2628, 0x42e5, 0x0, 0x0);
        gbc.writeMem(0x7a5e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2b92);
        EXPECT(gbc.pc(), 0x7a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0240
        gbc.setState(0x5dc1, 0xff8b, 0xd390, 0xf70e, 0xdb56, 0xa5eb, 0x0, 0x1);
        gbc.writeMem(0x5dc1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xff8b);
        EXPECT(gbc.pc(), 0x5dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0241
        gbc.setState(0x77dd, 0xebf, 0x7cc0, 0xf357, 0x947b, 0x61fd, 0x0, 0x1);
        gbc.writeMem(0x77dd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xebf);
        EXPECT(gbc.pc(), 0x77df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0242
        gbc.setState(0xbda8, 0x5362, 0xf80, 0xefa2, 0xb762, 0x5726, 0x1, 0x0);
        gbc.writeMem(0xbda8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5362);
        EXPECT(gbc.pc(), 0xbdaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda8), 0xcb);
        EXPECT(gbc.readMem(0xbda9), 0x9d);
        // CB 9D 0243
        gbc.setState(0x8ac0, 0x2c28, 0x2a50, 0xc825, 0x7664, 0x4a0e, 0x0, 0x0);
        gbc.writeMem(0x8ac0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2c28);
        EXPECT(gbc.pc(), 0x8ac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac0), 0xcb);
        EXPECT(gbc.readMem(0x8ac1), 0x9d);
        // CB 9D 0245
        gbc.setState(0xa4ef, 0x92b0, 0x750, 0xb7ab, 0x5013, 0x1f7a, 0x1, 0x1);
        gbc.writeMem(0xa4ef, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x92b0);
        EXPECT(gbc.pc(), 0xa4f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ef), 0xcb);
        EXPECT(gbc.readMem(0xa4f0), 0x9d);
        // CB 9D 0246
        gbc.setState(0x8228, 0xce0c, 0xbac0, 0xf37d, 0xdda5, 0xe24d, 0x1, 0x0);
        gbc.writeMem(0x8228, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xce0c);
        EXPECT(gbc.pc(), 0x822a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8228), 0xcb);
        EXPECT(gbc.readMem(0x8229), 0x9d);
        // CB 9D 0247
        gbc.setState(0x7ed7, 0xccf4, 0xfff0, 0x87ee, 0x1fed, 0x4fae, 0x0, 0x0);
        gbc.writeMem(0x7ed7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xccf4);
        EXPECT(gbc.pc(), 0x7ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0249
        gbc.setState(0x605a, 0x823, 0x6ca0, 0xa430, 0xe80a, 0x18e6, 0x1, 0x0);
        gbc.writeMem(0x605a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x823);
        EXPECT(gbc.pc(), 0x605c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 024A
        gbc.setState(0xd57b, 0x7c06, 0xf060, 0x9594, 0x8561, 0xdd13, 0x1, 0x1);
        gbc.writeMem(0xd57b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7c06);
        EXPECT(gbc.pc(), 0xd57d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd57b), 0xcb);
        EXPECT(gbc.readMem(0xd57c), 0x9d);
        // CB 9D 024B
        gbc.setState(0xc85b, 0xf0af, 0x75b0, 0x4629, 0x27f3, 0x97fc, 0x0, 0x1);
        gbc.writeMem(0xc85b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf0af);
        EXPECT(gbc.pc(), 0xc85d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc85b), 0xcb);
        EXPECT(gbc.readMem(0xc85c), 0x9d);
        // CB 9D 024C
        gbc.setState(0x6e86, 0x9313, 0x2f50, 0x5e57, 0x871b, 0xfd7a, 0x1, 0x0);
        gbc.writeMem(0x6e86, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9313);
        EXPECT(gbc.pc(), 0x6e88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 024D
        gbc.setState(0x48e6, 0x2e8, 0xe8f0, 0xb8, 0x9944, 0x22b4, 0x1, 0x1);
        gbc.writeMem(0x48e6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2e8);
        EXPECT(gbc.pc(), 0x48e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 024E
        gbc.setState(0x3691, 0x9b51, 0x2b20, 0x525a, 0x27ca, 0x705a, 0x1, 0x1);
        gbc.writeMem(0x3691, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9b51);
        EXPECT(gbc.pc(), 0x3693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 024F
        gbc.setState(0x891d, 0xc486, 0x5700, 0xaa91, 0x5abf, 0xae96, 0x1, 0x1);
        gbc.writeMem(0x891d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc486);
        EXPECT(gbc.pc(), 0x891f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x891d), 0xcb);
        EXPECT(gbc.readMem(0x891e), 0x9d);
        // CB 9D 0250
        gbc.setState(0x83e9, 0xdaa6, 0x51d0, 0xcafe, 0x75de, 0x573c, 0x1, 0x1);
        gbc.writeMem(0x83e9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdaa6);
        EXPECT(gbc.pc(), 0x83eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e9), 0xcb);
        EXPECT(gbc.readMem(0x83ea), 0x9d);
        // CB 9D 0251
        gbc.setState(0x25bb, 0xfbc1, 0x1660, 0xa681, 0xa683, 0x5c73, 0x0, 0x0);
        gbc.writeMem(0x25bb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfbc1);
        EXPECT(gbc.pc(), 0x25bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0252
        gbc.setState(0x3170, 0x488b, 0xaab0, 0xf93f, 0xbb03, 0x4ce9, 0x0, 0x1);
        gbc.writeMem(0x3170, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x488b);
        EXPECT(gbc.pc(), 0x3172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0253
        gbc.setState(0x318, 0x88f, 0x6d90, 0x672b, 0x5e45, 0x7830, 0x0, 0x0);
        gbc.writeMem(0x318, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x88f);
        EXPECT(gbc.pc(), 0x31a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0254
        gbc.setState(0xbfb1, 0xfcde, 0x8030, 0xd86a, 0x80ae, 0x7e95, 0x1, 0x1);
        gbc.writeMem(0xbfb1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfcde);
        EXPECT(gbc.pc(), 0xbfb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb1), 0xcb);
        EXPECT(gbc.readMem(0xbfb2), 0x9d);
        // CB 9D 0255
        gbc.setState(0xe2c, 0x27a7, 0x1630, 0xe239, 0x1c3e, 0xdf6e, 0x0, 0x0);
        gbc.writeMem(0xe2c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x27a7);
        EXPECT(gbc.pc(), 0xe2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0256
        gbc.setState(0x371a, 0x3caf, 0x23e0, 0xd3a6, 0xef9f, 0xe128, 0x0, 0x0);
        gbc.writeMem(0x371a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3caf);
        EXPECT(gbc.pc(), 0x371c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0258
        gbc.setState(0xdd67, 0xe597, 0x8a20, 0x764b, 0x42f8, 0xb42, 0x0, 0x1);
        gbc.writeMem(0xdd67, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe597);
        EXPECT(gbc.pc(), 0xdd69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd67), 0xcb);
        EXPECT(gbc.readMem(0xdd68), 0x9d);
        // CB 9D 0259
        gbc.setState(0x9b1e, 0x69a3, 0xb9f0, 0xfa35, 0xe925, 0xeda8, 0x1, 0x0);
        gbc.writeMem(0x9b1e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x69a3);
        EXPECT(gbc.pc(), 0x9b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1e), 0xcb);
        EXPECT(gbc.readMem(0x9b1f), 0x9d);
        // CB 9D 025A
        gbc.setState(0xe9a6, 0xbd7e, 0x9bc0, 0x1199, 0xd0d8, 0x9a29, 0x1, 0x0);
        gbc.writeMem(0xe9a6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbd7e);
        EXPECT(gbc.pc(), 0xe9a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a6), 0xcb);
        EXPECT(gbc.readMem(0xe9a7), 0x9d);
        // CB 9D 025B
        gbc.setState(0x9a12, 0x2892, 0x5650, 0x436e, 0xdb92, 0xb372, 0x1, 0x1);
        gbc.writeMem(0x9a12, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2892);
        EXPECT(gbc.pc(), 0x9a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a12), 0xcb);
        EXPECT(gbc.readMem(0x9a13), 0x9d);
        // CB 9D 025C
        gbc.setState(0x914a, 0xbe8c, 0x4e30, 0x378d, 0x39c0, 0x440f, 0x0, 0x0);
        gbc.writeMem(0x914a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbe8c);
        EXPECT(gbc.pc(), 0x914c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x914a), 0xcb);
        EXPECT(gbc.readMem(0x914b), 0x9d);
        // CB 9D 025D
        gbc.setState(0x37d5, 0x9f0d, 0x9f50, 0x237e, 0x50ea, 0xf31d, 0x1, 0x1);
        gbc.writeMem(0x37d5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9f0d);
        EXPECT(gbc.pc(), 0x37d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 025E
        gbc.setState(0x8664, 0x133e, 0xd5e0, 0xa53e, 0x9fe8, 0x5dd7, 0x0, 0x0);
        gbc.writeMem(0x8664, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x133e);
        EXPECT(gbc.pc(), 0x8666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8664), 0xcb);
        EXPECT(gbc.readMem(0x8665), 0x9d);
        // CB 9D 025F
        gbc.setState(0x38e5, 0xeb79, 0xf210, 0xca73, 0xc65c, 0xd732, 0x1, 0x0);
        gbc.writeMem(0x38e5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xeb79);
        EXPECT(gbc.pc(), 0x38e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0260
        gbc.setState(0x9f3f, 0x1ef4, 0x7b20, 0xe4c8, 0xcbc3, 0xf78f, 0x0, 0x1);
        gbc.writeMem(0x9f3f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1ef4);
        EXPECT(gbc.pc(), 0x9f41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3f), 0xcb);
        EXPECT(gbc.readMem(0x9f40), 0x9d);
        // CB 9D 0261
        gbc.setState(0x1eb3, 0xf18c, 0x6160, 0xf9cf, 0x3814, 0x3925, 0x1, 0x1);
        gbc.writeMem(0x1eb3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf18c);
        EXPECT(gbc.pc(), 0x1eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0262
        gbc.setState(0x7aea, 0x9b8e, 0xf450, 0xe345, 0xdb21, 0x580f, 0x0, 0x0);
        gbc.writeMem(0x7aea, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9b8e);
        EXPECT(gbc.pc(), 0x7aec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0264
        gbc.setState(0x5, 0x9615, 0x6400, 0x8caa, 0x8f51, 0xb1a8, 0x0, 0x0);
        gbc.writeMem(0x5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9615);
        EXPECT(gbc.pc(), 0x7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0265
        gbc.setState(0x1214, 0x82d5, 0x1b50, 0x8f1e, 0x2ab6, 0x387c, 0x0, 0x1);
        gbc.writeMem(0x1214, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x82d5);
        EXPECT(gbc.pc(), 0x1216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0267
        gbc.setState(0xc455, 0xad47, 0x3f0, 0xf88, 0xd258, 0x108, 0x0, 0x0);
        gbc.writeMem(0xc455, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xad47);
        EXPECT(gbc.pc(), 0xc457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc455), 0xcb);
        EXPECT(gbc.readMem(0xc456), 0x9d);
        // CB 9D 0268
        gbc.setState(0x9c56, 0xe9a4, 0x25f0, 0xa430, 0xad94, 0xf82f, 0x1, 0x1);
        gbc.writeMem(0x9c56, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe9a4);
        EXPECT(gbc.pc(), 0x9c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c56), 0xcb);
        EXPECT(gbc.readMem(0x9c57), 0x9d);
        // CB 9D 0269
        gbc.setState(0xcef5, 0xffdd, 0xafe0, 0xa6ee, 0x74ed, 0x11ec, 0x1, 0x1);
        gbc.writeMem(0xcef5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xffdd);
        EXPECT(gbc.pc(), 0xcef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef5), 0xcb);
        EXPECT(gbc.readMem(0xcef6), 0x9d);
        // CB 9D 026A
        gbc.setState(0x515b, 0xd327, 0xeb90, 0x4c3a, 0x904d, 0xc626, 0x0, 0x1);
        gbc.writeMem(0x515b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd327);
        EXPECT(gbc.pc(), 0x515d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 026B
        gbc.setState(0x3524, 0xa333, 0x6120, 0x758f, 0xf00, 0xb54c, 0x1, 0x0);
        gbc.writeMem(0x3524, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa333);
        EXPECT(gbc.pc(), 0x3526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 026C
        gbc.setState(0x7ba, 0x6242, 0x1a90, 0xd19c, 0xccd4, 0x1f88, 0x0, 0x1);
        gbc.writeMem(0x7ba, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6242);
        EXPECT(gbc.pc(), 0x7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 026D
        gbc.setState(0x40f2, 0x5651, 0x31e0, 0xa85f, 0xb3ab, 0xbd61, 0x1, 0x1);
        gbc.writeMem(0x40f2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5651);
        EXPECT(gbc.pc(), 0x40f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 026E
        gbc.setState(0x83a4, 0xc4bc, 0x5060, 0xf041, 0xd7ad, 0xa1b0, 0x1, 0x0);
        gbc.writeMem(0x83a4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc4bc);
        EXPECT(gbc.pc(), 0x83a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a4), 0xcb);
        EXPECT(gbc.readMem(0x83a5), 0x9d);
        // CB 9D 026F
        gbc.setState(0x483c, 0x5f0, 0x8090, 0x6d02, 0x18bb, 0x90ee, 0x1, 0x1);
        gbc.writeMem(0x483c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5f0);
        EXPECT(gbc.pc(), 0x483e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0270
        gbc.setState(0x5251, 0xfa8e, 0xbe0, 0x80a, 0xdc74, 0x5dd8, 0x0, 0x1);
        gbc.writeMem(0x5251, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfa8e);
        EXPECT(gbc.pc(), 0x5253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0271
        gbc.setState(0xe14d, 0x43e9, 0x8e30, 0x1671, 0x582, 0x5852, 0x1, 0x0);
        gbc.writeMem(0xe14d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x43e9);
        EXPECT(gbc.pc(), 0xe14f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14d), 0xcb);
        EXPECT(gbc.readMem(0xe14e), 0x9d);
        // CB 9D 0272
        gbc.setState(0xa5dd, 0xbad2, 0x8710, 0xd30f, 0x7122, 0x6887, 0x1, 0x1);
        gbc.writeMem(0xa5dd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbad2);
        EXPECT(gbc.pc(), 0xa5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5dd), 0xcb);
        EXPECT(gbc.readMem(0xa5de), 0x9d);
        // CB 9D 0273
        gbc.setState(0xd3f, 0xb494, 0x9c50, 0xc1f1, 0x5bb9, 0x6803, 0x0, 0x0);
        gbc.writeMem(0xd3f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb494);
        EXPECT(gbc.pc(), 0xd41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0274
        gbc.setState(0xb6d9, 0x175b, 0xa530, 0x7bdf, 0xd7d, 0xb53, 0x1, 0x0);
        gbc.writeMem(0xb6d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x175b);
        EXPECT(gbc.pc(), 0xb6db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d9), 0xcb);
        EXPECT(gbc.readMem(0xb6da), 0x9d);
        // CB 9D 0275
        gbc.setState(0x27f2, 0x8a32, 0x7b60, 0xb389, 0x70c9, 0xff87, 0x0, 0x1);
        gbc.writeMem(0x27f2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8a32);
        EXPECT(gbc.pc(), 0x27f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0276
        gbc.setState(0x6894, 0xc7ca, 0xc450, 0x97a4, 0x7d0, 0xe1cf, 0x0, 0x0);
        gbc.writeMem(0x6894, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc7ca);
        EXPECT(gbc.pc(), 0x6896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0277
        gbc.setState(0x821a, 0x9d1, 0xa3c0, 0xbc04, 0x406, 0x4eaa, 0x1, 0x1);
        gbc.writeMem(0x821a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9d1);
        EXPECT(gbc.pc(), 0x821c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821a), 0xcb);
        EXPECT(gbc.readMem(0x821b), 0x9d);
        // CB 9D 0278
        gbc.setState(0xb704, 0xc29e, 0x4990, 0xe8c5, 0x39f8, 0x3451, 0x0, 0x1);
        gbc.writeMem(0xb704, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc29e);
        EXPECT(gbc.pc(), 0xb706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb704), 0xcb);
        EXPECT(gbc.readMem(0xb705), 0x9d);
        // CB 9D 0279
        gbc.setState(0xd89e, 0x98ed, 0x5a30, 0x7373, 0x60ab, 0xb012, 0x0, 0x0);
        gbc.writeMem(0xd89e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x98ed);
        EXPECT(gbc.pc(), 0xd8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89e), 0xcb);
        EXPECT(gbc.readMem(0xd89f), 0x9d);
        // CB 9D 027A
        gbc.setState(0xc4dc, 0x67d6, 0x8fd0, 0x5513, 0xcf54, 0x9440, 0x0, 0x0);
        gbc.writeMem(0xc4dc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x67d6);
        EXPECT(gbc.pc(), 0xc4de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4dc), 0xcb);
        EXPECT(gbc.readMem(0xc4dd), 0x9d);
        // CB 9D 027B
        gbc.setState(0x639d, 0x1da2, 0xd80, 0xd923, 0x3d5a, 0x9aec, 0x1, 0x0);
        gbc.writeMem(0x639d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1da2);
        EXPECT(gbc.pc(), 0x639f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 027C
        gbc.setState(0xd534, 0xd5d8, 0xa0a0, 0x8c68, 0xf6a5, 0xea3a, 0x1, 0x0);
        gbc.writeMem(0xd534, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd5d8);
        EXPECT(gbc.pc(), 0xd536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd534), 0xcb);
        EXPECT(gbc.readMem(0xd535), 0x9d);
        // CB 9D 027D
        gbc.setState(0xbc86, 0x829c, 0x6690, 0xd202, 0x79fd, 0xcf7e, 0x0, 0x0);
        gbc.writeMem(0xbc86, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x829c);
        EXPECT(gbc.pc(), 0xbc88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc86), 0xcb);
        EXPECT(gbc.readMem(0xbc87), 0x9d);
        // CB 9D 027E
        gbc.setState(0x63fb, 0xfa3b, 0x9a10, 0x60c2, 0x8518, 0xec3a, 0x0, 0x0);
        gbc.writeMem(0x63fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfa3b);
        EXPECT(gbc.pc(), 0x63fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 027F
        gbc.setState(0xe713, 0x4bf2, 0xf790, 0x7294, 0xde78, 0x4a89, 0x0, 0x0);
        gbc.writeMem(0xe713, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4bf2);
        EXPECT(gbc.pc(), 0xe715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe713), 0xcb);
        EXPECT(gbc.readMem(0xe714), 0x9d);
        // CB 9D 0280
        gbc.setState(0xb13f, 0x5733, 0xf6c0, 0x881a, 0x1def, 0x455, 0x0, 0x1);
        gbc.writeMem(0xb13f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5733);
        EXPECT(gbc.pc(), 0xb141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb13f), 0xcb);
        EXPECT(gbc.readMem(0xb140), 0x9d);
        // CB 9D 0281
        gbc.setState(0x5609, 0xf362, 0xbe00, 0x4bb3, 0x339, 0x407b, 0x1, 0x1);
        gbc.writeMem(0x5609, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf362);
        EXPECT(gbc.pc(), 0x560b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0282
        gbc.setState(0xdc62, 0xd181, 0xf8c0, 0x1b28, 0x4cab, 0x1de0, 0x1, 0x1);
        gbc.writeMem(0xdc62, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd181);
        EXPECT(gbc.pc(), 0xdc64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc62), 0xcb);
        EXPECT(gbc.readMem(0xdc63), 0x9d);
        // CB 9D 0283
        gbc.setState(0x5636, 0xcc90, 0x32b0, 0x3c03, 0x1c99, 0x9bee, 0x1, 0x0);
        gbc.writeMem(0x5636, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcc90);
        EXPECT(gbc.pc(), 0x5638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0284
        gbc.setState(0x97fd, 0x533, 0x2830, 0xaa21, 0x3faa, 0x6a84, 0x0, 0x0);
        gbc.writeMem(0x97fd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x533);
        EXPECT(gbc.pc(), 0x97ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97fd), 0xcb);
        EXPECT(gbc.readMem(0x97fe), 0x9d);
        // CB 9D 0286
        gbc.setState(0xdcdb, 0xad1a, 0x380, 0xe17c, 0x8081, 0x52bc, 0x0, 0x0);
        gbc.writeMem(0xdcdb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xad1a);
        EXPECT(gbc.pc(), 0xdcdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcdb), 0xcb);
        EXPECT(gbc.readMem(0xdcdc), 0x9d);
        // CB 9D 0287
        gbc.setState(0x34af, 0x8661, 0xdc60, 0xe21a, 0x8ee1, 0x97f2, 0x0, 0x1);
        gbc.writeMem(0x34af, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8661);
        EXPECT(gbc.pc(), 0x34b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0288
        gbc.setState(0x79dc, 0x88f6, 0xe830, 0x141b, 0x25b6, 0xcf9a, 0x0, 0x1);
        gbc.writeMem(0x79dc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x88f6);
        EXPECT(gbc.pc(), 0x79de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 028A
        gbc.setState(0x21e1, 0x43a9, 0x86d0, 0xd40f, 0x72da, 0x36dc, 0x0, 0x1);
        gbc.writeMem(0x21e1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x43a9);
        EXPECT(gbc.pc(), 0x21e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 028B
        gbc.setState(0x3812, 0x45c2, 0x5100, 0x16cb, 0x15e3, 0x22a9, 0x0, 0x0);
        gbc.writeMem(0x3812, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x45c2);
        EXPECT(gbc.pc(), 0x3814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 028C
        gbc.setState(0x8609, 0xcd02, 0x67b0, 0xef1f, 0xab06, 0x4737, 0x1, 0x0);
        gbc.writeMem(0x8609, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcd02);
        EXPECT(gbc.pc(), 0x860b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8609), 0xcb);
        EXPECT(gbc.readMem(0x860a), 0x9d);
        // CB 9D 028D
        gbc.setState(0x6437, 0xefe, 0x6e50, 0xbd07, 0xdce7, 0x6741, 0x0, 0x1);
        gbc.writeMem(0x6437, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xefe);
        EXPECT(gbc.pc(), 0x6439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 028E
        gbc.setState(0xdb70, 0x4d04, 0xe0f0, 0xe63c, 0xdbf8, 0x71eb, 0x0, 0x1);
        gbc.writeMem(0xdb70, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4d04);
        EXPECT(gbc.pc(), 0xdb72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb70), 0xcb);
        EXPECT(gbc.readMem(0xdb71), 0x9d);
        // CB 9D 028F
        gbc.setState(0x96e6, 0x632e, 0xc910, 0x30da, 0x38b0, 0xac42, 0x1, 0x0);
        gbc.writeMem(0x96e6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x632e);
        EXPECT(gbc.pc(), 0x96e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e6), 0xcb);
        EXPECT(gbc.readMem(0x96e7), 0x9d);
        // CB 9D 0290
        gbc.setState(0x6cce, 0xd088, 0x1e80, 0xf714, 0x3240, 0x645a, 0x0, 0x1);
        gbc.writeMem(0x6cce, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd088);
        EXPECT(gbc.pc(), 0x6cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0291
        gbc.setState(0xc897, 0xf167, 0x4910, 0xa9ab, 0xe2ad, 0x8a28, 0x0, 0x0);
        gbc.writeMem(0xc897, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf167);
        EXPECT(gbc.pc(), 0xc899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc897), 0xcb);
        EXPECT(gbc.readMem(0xc898), 0x9d);
        // CB 9D 0292
        gbc.setState(0x1974, 0x9f80, 0xe0d0, 0x9c13, 0xbaa9, 0x2a8c, 0x0, 0x0);
        gbc.writeMem(0x1974, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9f80);
        EXPECT(gbc.pc(), 0x1976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0293
        gbc.setState(0xc56b, 0xbf7d, 0xbed0, 0xba69, 0xce03, 0x28b1, 0x1, 0x0);
        gbc.writeMem(0xc56b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbf7d);
        EXPECT(gbc.pc(), 0xc56d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc56b), 0xcb);
        EXPECT(gbc.readMem(0xc56c), 0x9d);
        // CB 9D 0294
        gbc.setState(0x485, 0x76f9, 0x490, 0xe5a4, 0xeb38, 0xe6c3, 0x0, 0x0);
        gbc.writeMem(0x485, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x76f9);
        EXPECT(gbc.pc(), 0x487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0295
        gbc.setState(0x601b, 0x7b00, 0xf400, 0x6192, 0x5eac, 0x2eb4, 0x1, 0x0);
        gbc.writeMem(0x601b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7b00);
        EXPECT(gbc.pc(), 0x601d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0297
        gbc.setState(0x8669, 0xdd0a, 0xb730, 0x6aa3, 0x4b01, 0xbef4, 0x1, 0x1);
        gbc.writeMem(0x8669, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdd0a);
        EXPECT(gbc.pc(), 0x866b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8669), 0xcb);
        EXPECT(gbc.readMem(0x866a), 0x9d);
        // CB 9D 0298
        gbc.setState(0x5c1b, 0x813b, 0x3fa0, 0x3b6d, 0xdf6b, 0xbb29, 0x1, 0x0);
        gbc.writeMem(0x5c1b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x813b);
        EXPECT(gbc.pc(), 0x5c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0299
        gbc.setState(0xb2b8, 0xd7b3, 0x180, 0x9418, 0x2039, 0xf4b1, 0x1, 0x1);
        gbc.writeMem(0xb2b8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd7b3);
        EXPECT(gbc.pc(), 0xb2ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b8), 0xcb);
        EXPECT(gbc.readMem(0xb2b9), 0x9d);
        // CB 9D 029A
        gbc.setState(0x75fb, 0xad38, 0x2290, 0xd2a3, 0x1d9a, 0x689, 0x0, 0x1);
        gbc.writeMem(0x75fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xad38);
        EXPECT(gbc.pc(), 0x75fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 029B
        gbc.setState(0x978c, 0xef6c, 0x9120, 0x5c40, 0x35d1, 0x1daa, 0x1, 0x1);
        gbc.writeMem(0x978c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xef6c);
        EXPECT(gbc.pc(), 0x978e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978c), 0xcb);
        EXPECT(gbc.readMem(0x978d), 0x9d);
        // CB 9D 029C
        gbc.setState(0x34e7, 0xb024, 0x9e90, 0x7002, 0x615f, 0x869e, 0x1, 0x1);
        gbc.writeMem(0x34e7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb024);
        EXPECT(gbc.pc(), 0x34e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 029D
        gbc.setState(0x1596, 0xdefb, 0xa080, 0x7ce8, 0x6414, 0xb59f, 0x0, 0x1);
        gbc.writeMem(0x1596, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdefb);
        EXPECT(gbc.pc(), 0x1598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 029E
        gbc.setState(0x5650, 0x1d33, 0xfd80, 0x2b30, 0x9b3f, 0x796c, 0x0, 0x0);
        gbc.writeMem(0x5650, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1d33);
        EXPECT(gbc.pc(), 0x5652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 029F
        gbc.setState(0xa1b7, 0x54c2, 0xccd0, 0x8e55, 0x15d, 0x7cdf, 0x0, 0x0);
        gbc.writeMem(0xa1b7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x54c2);
        EXPECT(gbc.pc(), 0xa1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b7), 0xcb);
        EXPECT(gbc.readMem(0xa1b8), 0x9d);
        // CB 9D 02A0
        gbc.setState(0x4587, 0x7482, 0x78e0, 0xd46c, 0x24e9, 0xe449, 0x0, 0x1);
        gbc.writeMem(0x4587, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7482);
        EXPECT(gbc.pc(), 0x4589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02A1
        gbc.setState(0xb930, 0x766d, 0x9aa0, 0x2d39, 0x832e, 0xda57, 0x0, 0x1);
        gbc.writeMem(0xb930, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x766d);
        EXPECT(gbc.pc(), 0xb932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb930), 0xcb);
        EXPECT(gbc.readMem(0xb931), 0x9d);
        // CB 9D 02A2
        gbc.setState(0x9c14, 0xda03, 0x7520, 0x31dd, 0x17c3, 0x54a2, 0x1, 0x0);
        gbc.writeMem(0x9c14, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xda03);
        EXPECT(gbc.pc(), 0x9c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c14), 0xcb);
        EXPECT(gbc.readMem(0x9c15), 0x9d);
        // CB 9D 02A3
        gbc.setState(0x38b0, 0xb57, 0xb180, 0x66c1, 0x82a7, 0x37fd, 0x1, 0x0);
        gbc.writeMem(0x38b0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb57);
        EXPECT(gbc.pc(), 0x38b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02A4
        gbc.setState(0x5e33, 0x210, 0xccb0, 0xc1f8, 0xce44, 0x736d, 0x1, 0x1);
        gbc.writeMem(0x5e33, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x210);
        EXPECT(gbc.pc(), 0x5e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02A5
        gbc.setState(0x9cc9, 0xa873, 0xd7c0, 0x8a3a, 0xc145, 0xa812, 0x0, 0x0);
        gbc.writeMem(0x9cc9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa873);
        EXPECT(gbc.pc(), 0x9ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc9), 0xcb);
        EXPECT(gbc.readMem(0x9cca), 0x9d);
        // CB 9D 02A6
        gbc.setState(0x72d6, 0xfd5d, 0x6c00, 0xbca7, 0x4035, 0x9db8, 0x1, 0x1);
        gbc.writeMem(0x72d6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfd5d);
        EXPECT(gbc.pc(), 0x72d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02A7
        gbc.setState(0x1d96, 0xccb9, 0x7c40, 0x8ef5, 0x22f7, 0x918, 0x1, 0x1);
        gbc.writeMem(0x1d96, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xccb9);
        EXPECT(gbc.pc(), 0x1d98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02A8
        gbc.setState(0x43ea, 0x59b7, 0xe700, 0xe092, 0xee32, 0x92ce, 0x0, 0x0);
        gbc.writeMem(0x43ea, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x59b7);
        EXPECT(gbc.pc(), 0x43ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02A9
        gbc.setState(0xce5a, 0x57f3, 0x69b0, 0x6cd6, 0x71f0, 0x6450, 0x0, 0x0);
        gbc.writeMem(0xce5a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x57f3);
        EXPECT(gbc.pc(), 0xce5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce5a), 0xcb);
        EXPECT(gbc.readMem(0xce5b), 0x9d);
        // CB 9D 02AA
        gbc.setState(0xb8dc, 0x465c, 0x3ff0, 0x4762, 0x30e7, 0x187a, 0x1, 0x1);
        gbc.writeMem(0xb8dc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x465c);
        EXPECT(gbc.pc(), 0xb8de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8dc), 0xcb);
        EXPECT(gbc.readMem(0xb8dd), 0x9d);
        // CB 9D 02AB
        gbc.setState(0xef1d, 0x474e, 0xc0d0, 0x3d92, 0x5d39, 0x23f2, 0x0, 0x0);
        gbc.writeMem(0xef1d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x474e);
        EXPECT(gbc.pc(), 0xef1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1d), 0xcb);
        EXPECT(gbc.readMem(0xef1e), 0x9d);
        // CB 9D 02AC
        gbc.setState(0xe96f, 0x1613, 0x59b0, 0x28ca, 0x443e, 0x5cbb, 0x0, 0x0);
        gbc.writeMem(0xe96f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1613);
        EXPECT(gbc.pc(), 0xe971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe96f), 0xcb);
        EXPECT(gbc.readMem(0xe970), 0x9d);
        // CB 9D 02AD
        gbc.setState(0x4c0b, 0x831b, 0x5c50, 0x25, 0x9cba, 0xee91, 0x1, 0x0);
        gbc.writeMem(0x4c0b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x831b);
        EXPECT(gbc.pc(), 0x4c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02AE
        gbc.setState(0xe582, 0x90e, 0x2e00, 0xa4f8, 0xfc04, 0x2cdd, 0x1, 0x1);
        gbc.writeMem(0xe582, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x90e);
        EXPECT(gbc.pc(), 0xe584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe582), 0xcb);
        EXPECT(gbc.readMem(0xe583), 0x9d);
        // CB 9D 02AF
        gbc.setState(0x4417, 0xecef, 0xb3b0, 0x6270, 0xa8c1, 0xd829, 0x0, 0x1);
        gbc.writeMem(0x4417, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xecef);
        EXPECT(gbc.pc(), 0x4419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02B0
        gbc.setState(0x3819, 0x7d4d, 0xffd0, 0x6d17, 0x9a8f, 0xfedf, 0x0, 0x0);
        gbc.writeMem(0x3819, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7d4d);
        EXPECT(gbc.pc(), 0x381b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02B1
        gbc.setState(0xfea, 0x5d37, 0xf920, 0xd12f, 0x53d8, 0xfe4, 0x1, 0x0);
        gbc.writeMem(0xfea, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5d37);
        EXPECT(gbc.pc(), 0xfec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02B2
        gbc.setState(0x140e, 0xb24, 0xf760, 0xef78, 0x1dde, 0x1c0c, 0x1, 0x0);
        gbc.writeMem(0x140e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb24);
        EXPECT(gbc.pc(), 0x1410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02B3
        gbc.setState(0xdce3, 0xcb73, 0xff30, 0x8d1b, 0xc189, 0x6e22, 0x1, 0x0);
        gbc.writeMem(0xdce3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xcb73);
        EXPECT(gbc.pc(), 0xdce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce3), 0xcb);
        EXPECT(gbc.readMem(0xdce4), 0x9d);
        // CB 9D 02B4
        gbc.setState(0x1d95, 0x3bb2, 0x84f0, 0x27c7, 0xf065, 0x4b94, 0x1, 0x1);
        gbc.writeMem(0x1d95, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3bb2);
        EXPECT(gbc.pc(), 0x1d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02B5
        gbc.setState(0xe619, 0xb580, 0x7700, 0x469c, 0x5073, 0x9a9e, 0x0, 0x1);
        gbc.writeMem(0xe619, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb580);
        EXPECT(gbc.pc(), 0xe61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe619), 0xcb);
        EXPECT(gbc.readMem(0xe61a), 0x9d);
        // CB 9D 02B6
        gbc.setState(0x55d9, 0xb566, 0xe5e0, 0xb3fd, 0x1812, 0xed8a, 0x1, 0x1);
        gbc.writeMem(0x55d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb566);
        EXPECT(gbc.pc(), 0x55db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02B7
        gbc.setState(0x1a10, 0x16c9, 0x22b0, 0x7f2b, 0xb21c, 0x99e6, 0x0, 0x0);
        gbc.writeMem(0x1a10, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x16c9);
        EXPECT(gbc.pc(), 0x1a12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02B8
        gbc.setState(0xa505, 0x652c, 0xfa90, 0x9336, 0x7712, 0x2644, 0x0, 0x0);
        gbc.writeMem(0xa505, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x652c);
        EXPECT(gbc.pc(), 0xa507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa505), 0xcb);
        EXPECT(gbc.readMem(0xa506), 0x9d);
        // CB 9D 02B9
        gbc.setState(0x1091, 0x1641, 0x7670, 0x9ea4, 0xbe1a, 0x91c1, 0x1, 0x0);
        gbc.writeMem(0x1091, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1641);
        EXPECT(gbc.pc(), 0x1093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02BA
        gbc.setState(0x7836, 0xad1, 0x2320, 0x5ed9, 0xfa50, 0x92b9, 0x1, 0x1);
        gbc.writeMem(0x7836, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xad1);
        EXPECT(gbc.pc(), 0x7838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02BB
        gbc.setState(0x849b, 0x83de, 0x7dd0, 0x374a, 0xfe7, 0x6a5c, 0x1, 0x0);
        gbc.writeMem(0x849b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x83de);
        EXPECT(gbc.pc(), 0x849d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849b), 0xcb);
        EXPECT(gbc.readMem(0x849c), 0x9d);
        // CB 9D 02BC
        gbc.setState(0x8ee7, 0xfe30, 0xedc0, 0xafc5, 0x81a7, 0xb676, 0x1, 0x0);
        gbc.writeMem(0x8ee7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfe30);
        EXPECT(gbc.pc(), 0x8ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee7), 0xcb);
        EXPECT(gbc.readMem(0x8ee8), 0x9d);
        // CB 9D 02BD
        gbc.setState(0x743f, 0xef01, 0xba0, 0x262e, 0xce71, 0x6a17, 0x0, 0x0);
        gbc.writeMem(0x743f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xef01);
        EXPECT(gbc.pc(), 0x7441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02BE
        gbc.setState(0x8a6c, 0x4b7e, 0x17f0, 0x1195, 0x4cb7, 0x12f4, 0x0, 0x0);
        gbc.writeMem(0x8a6c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4b7e);
        EXPECT(gbc.pc(), 0x8a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a6c), 0xcb);
        EXPECT(gbc.readMem(0x8a6d), 0x9d);
        // CB 9D 02BF
        gbc.setState(0x2d89, 0x6beb, 0xb180, 0xe4a5, 0x75da, 0xd76c, 0x1, 0x0);
        gbc.writeMem(0x2d89, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6beb);
        EXPECT(gbc.pc(), 0x2d8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02C0
        gbc.setState(0x39a7, 0xb69f, 0x5230, 0x5059, 0x8cb3, 0xedf6, 0x1, 0x1);
        gbc.writeMem(0x39a7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb69f);
        EXPECT(gbc.pc(), 0x39a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02C1
        gbc.setState(0xe7d0, 0x10f0, 0xca20, 0x3c49, 0xe354, 0x43ab, 0x1, 0x1);
        gbc.writeMem(0xe7d0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x10f0);
        EXPECT(gbc.pc(), 0xe7d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d0), 0xcb);
        EXPECT(gbc.readMem(0xe7d1), 0x9d);
        // CB 9D 02C2
        gbc.setState(0xded4, 0x9081, 0xd960, 0x73a7, 0x99e0, 0x5c59, 0x0, 0x1);
        gbc.writeMem(0xded4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9081);
        EXPECT(gbc.pc(), 0xded6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xded4), 0xcb);
        EXPECT(gbc.readMem(0xded5), 0x9d);
        // CB 9D 02C3
        gbc.setState(0xeaab, 0xd11, 0xff60, 0xb7a7, 0x57df, 0xe5eb, 0x1, 0x0);
        gbc.writeMem(0xeaab, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd11);
        EXPECT(gbc.pc(), 0xeaad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaab), 0xcb);
        EXPECT(gbc.readMem(0xeaac), 0x9d);
        // CB 9D 02C4
        gbc.setState(0x58f0, 0x8d82, 0x32d0, 0x8296, 0xfd67, 0x973b, 0x1, 0x0);
        gbc.writeMem(0x58f0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8d82);
        EXPECT(gbc.pc(), 0x58f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02C5
        gbc.setState(0x569b, 0x3e9f, 0x4550, 0xcb99, 0x31f8, 0xf324, 0x1, 0x0);
        gbc.writeMem(0x569b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3e9f);
        EXPECT(gbc.pc(), 0x569d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02C6
        gbc.setState(0x5c2d, 0xe681, 0x1ed0, 0x60ad, 0x1e5d, 0x6fe7, 0x1, 0x1);
        gbc.writeMem(0x5c2d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe681);
        EXPECT(gbc.pc(), 0x5c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02C7
        gbc.setState(0xee71, 0xcd39, 0x1c20, 0x5d89, 0x14c6, 0x4457, 0x1, 0x1);
        gbc.writeMem(0xee71, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcd39);
        EXPECT(gbc.pc(), 0xee73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee71), 0xcb);
        EXPECT(gbc.readMem(0xee72), 0x9d);
        // CB 9D 02C8
        gbc.setState(0xd4ca, 0x7033, 0x3370, 0xc4f3, 0xb62, 0x9675, 0x1, 0x1);
        gbc.writeMem(0xd4ca, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7033);
        EXPECT(gbc.pc(), 0xd4cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ca), 0xcb);
        EXPECT(gbc.readMem(0xd4cb), 0x9d);
        // CB 9D 02C9
        gbc.setState(0xc9e0, 0xc975, 0x6280, 0x9a98, 0x5e09, 0x255b, 0x1, 0x0);
        gbc.writeMem(0xc9e0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc975);
        EXPECT(gbc.pc(), 0xc9e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e0), 0xcb);
        EXPECT(gbc.readMem(0xc9e1), 0x9d);
        // CB 9D 02CA
        gbc.setState(0xd01, 0xfd4, 0xaa00, 0x45bb, 0xcb80, 0xde89, 0x0, 0x0);
        gbc.writeMem(0xd01, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfd4);
        EXPECT(gbc.pc(), 0xd03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02CB
        gbc.setState(0x22c5, 0xd719, 0xef90, 0xbf7f, 0x8760, 0xf10, 0x1, 0x1);
        gbc.writeMem(0x22c5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd719);
        EXPECT(gbc.pc(), 0x22c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02CC
        gbc.setState(0x1459, 0xe033, 0x8a10, 0x379f, 0xcb5c, 0x767a, 0x0, 0x1);
        gbc.writeMem(0x1459, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe033);
        EXPECT(gbc.pc(), 0x145b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02CD
        gbc.setState(0x1d45, 0x9e69, 0x5ba0, 0x456e, 0x43bc, 0x409a, 0x1, 0x1);
        gbc.writeMem(0x1d45, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9e69);
        EXPECT(gbc.pc(), 0x1d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02CE
        gbc.setState(0x8692, 0x7130, 0xd400, 0xff7f, 0xfc77, 0xa996, 0x0, 0x0);
        gbc.writeMem(0x8692, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7130);
        EXPECT(gbc.pc(), 0x8694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8692), 0xcb);
        EXPECT(gbc.readMem(0x8693), 0x9d);
        // CB 9D 02CF
        gbc.setState(0x1493, 0x2ced, 0x7a40, 0xd146, 0xfd15, 0x50e9, 0x0, 0x0);
        gbc.writeMem(0x1493, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2ced);
        EXPECT(gbc.pc(), 0x1495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02D0
        gbc.setState(0x40e5, 0x80f3, 0x29b0, 0x59c8, 0x9b7a, 0x45d4, 0x1, 0x0);
        gbc.writeMem(0x40e5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x80f3);
        EXPECT(gbc.pc(), 0x40e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02D1
        gbc.setState(0xa7a4, 0x684b, 0xe280, 0xf38f, 0xae7f, 0x63f5, 0x1, 0x0);
        gbc.writeMem(0xa7a4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x684b);
        EXPECT(gbc.pc(), 0xa7a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a4), 0xcb);
        EXPECT(gbc.readMem(0xa7a5), 0x9d);
        // CB 9D 02D2
        gbc.setState(0x20ca, 0x97c7, 0xb6d0, 0x426d, 0xd63e, 0x801e, 0x1, 0x1);
        gbc.writeMem(0x20ca, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x97c7);
        EXPECT(gbc.pc(), 0x20cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02D3
        gbc.setState(0xe187, 0xc53d, 0x6f90, 0xcba9, 0x45c2, 0xb0c0, 0x1, 0x1);
        gbc.writeMem(0xe187, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc53d);
        EXPECT(gbc.pc(), 0xe189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe187), 0xcb);
        EXPECT(gbc.readMem(0xe188), 0x9d);
        // CB 9D 02D4
        gbc.setState(0xb403, 0x8b64, 0x4a0, 0x93ef, 0xd573, 0x34a7, 0x0, 0x1);
        gbc.writeMem(0xb403, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8b64);
        EXPECT(gbc.pc(), 0xb405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb403), 0xcb);
        EXPECT(gbc.readMem(0xb404), 0x9d);
        // CB 9D 02D6
        gbc.setState(0x4111, 0x8fb, 0xda60, 0x4ceb, 0x20ef, 0xdfd, 0x1, 0x0);
        gbc.writeMem(0x4111, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8fb);
        EXPECT(gbc.pc(), 0x4113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02D7
        gbc.setState(0x694, 0x2008, 0x3ac0, 0x211c, 0x7f95, 0x2619, 0x0, 0x0);
        gbc.writeMem(0x694, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2008);
        EXPECT(gbc.pc(), 0x696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02D8
        gbc.setState(0x556d, 0x7466, 0xa160, 0x8640, 0x421c, 0xbeb1, 0x1, 0x0);
        gbc.writeMem(0x556d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7466);
        EXPECT(gbc.pc(), 0x556f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02D9
        gbc.setState(0xac4f, 0x2954, 0xf370, 0x5fb2, 0x42a3, 0x36f3, 0x1, 0x0);
        gbc.writeMem(0xac4f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2954);
        EXPECT(gbc.pc(), 0xac51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac4f), 0xcb);
        EXPECT(gbc.readMem(0xac50), 0x9d);
        // CB 9D 02DA
        gbc.setState(0xaf1c, 0x627, 0x2350, 0x94a2, 0x65d5, 0x6370, 0x0, 0x1);
        gbc.writeMem(0xaf1c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x627);
        EXPECT(gbc.pc(), 0xaf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1c), 0xcb);
        EXPECT(gbc.readMem(0xaf1d), 0x9d);
        // CB 9D 02DB
        gbc.setState(0x490b, 0xda62, 0xfbe0, 0x6428, 0x5cf9, 0x7362, 0x0, 0x1);
        gbc.writeMem(0x490b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xda62);
        EXPECT(gbc.pc(), 0x490d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02DC
        gbc.setState(0x593, 0x5a5a, 0xc160, 0x4e36, 0xb8da, 0x7f86, 0x1, 0x1);
        gbc.writeMem(0x593, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5a5a);
        EXPECT(gbc.pc(), 0x595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02DD
        gbc.setState(0x8cd2, 0xcfe9, 0xbcd0, 0x7065, 0x5122, 0xeb3e, 0x0, 0x1);
        gbc.writeMem(0x8cd2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xcfe9);
        EXPECT(gbc.pc(), 0x8cd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd2), 0xcb);
        EXPECT(gbc.readMem(0x8cd3), 0x9d);
        // CB 9D 02DE
        gbc.setState(0x2bb3, 0xd185, 0x5c10, 0xd145, 0xa2c1, 0x6a43, 0x1, 0x0);
        gbc.writeMem(0x2bb3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd185);
        EXPECT(gbc.pc(), 0x2bb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02DF
        gbc.setState(0x74be, 0xeb9b, 0x84e0, 0xeb09, 0xe7ec, 0x215c, 0x0, 0x0);
        gbc.writeMem(0x74be, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xeb9b);
        EXPECT(gbc.pc(), 0x74c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02E0
        gbc.setState(0x2bf0, 0xcc49, 0x9220, 0xd201, 0xd406, 0xff1e, 0x1, 0x0);
        gbc.writeMem(0x2bf0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xcc49);
        EXPECT(gbc.pc(), 0x2bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02E1
        gbc.setState(0xb3bc, 0x5dee, 0x2210, 0xf52d, 0x9d3c, 0xfcfe, 0x0, 0x0);
        gbc.writeMem(0xb3bc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5dee);
        EXPECT(gbc.pc(), 0xb3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3bc), 0xcb);
        EXPECT(gbc.readMem(0xb3bd), 0x9d);
        // CB 9D 02E2
        gbc.setState(0x2e2f, 0x907, 0x3a20, 0xdf1e, 0x770a, 0xcac0, 0x1, 0x1);
        gbc.writeMem(0x2e2f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x907);
        EXPECT(gbc.pc(), 0x2e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02E3
        gbc.setState(0x57d9, 0x3e34, 0x2210, 0x672, 0x7f0b, 0x3fb0, 0x1, 0x0);
        gbc.writeMem(0x57d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3e34);
        EXPECT(gbc.pc(), 0x57db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02E4
        gbc.setState(0xfbc, 0x2129, 0x1df0, 0xa7, 0x473f, 0x1bcd, 0x0, 0x0);
        gbc.writeMem(0xfbc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2129);
        EXPECT(gbc.pc(), 0xfbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02E5
        gbc.setState(0xce4d, 0xa8d1, 0xc070, 0x682b, 0x9ed5, 0xa48a, 0x1, 0x1);
        gbc.writeMem(0xce4d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa8d1);
        EXPECT(gbc.pc(), 0xce4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce4d), 0xcb);
        EXPECT(gbc.readMem(0xce4e), 0x9d);
        // CB 9D 02E6
        gbc.setState(0xda7c, 0xef0c, 0x7a80, 0x5099, 0x98f7, 0xad93, 0x0, 0x0);
        gbc.writeMem(0xda7c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xef0c);
        EXPECT(gbc.pc(), 0xda7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7c), 0xcb);
        EXPECT(gbc.readMem(0xda7d), 0x9d);
        // CB 9D 02E7
        gbc.setState(0x16e1, 0x9597, 0x3140, 0x89c9, 0xe313, 0x3da4, 0x0, 0x0);
        gbc.writeMem(0x16e1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9597);
        EXPECT(gbc.pc(), 0x16e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02E8
        gbc.setState(0xebf8, 0x61f7, 0x9190, 0x9002, 0x60ca, 0xb7ea, 0x1, 0x0);
        gbc.writeMem(0xebf8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x61f7);
        EXPECT(gbc.pc(), 0xebfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf8), 0xcb);
        EXPECT(gbc.readMem(0xebf9), 0x9d);
        // CB 9D 02E9
        gbc.setState(0x821, 0xe7c5, 0x9cb0, 0x227e, 0xf64e, 0x58cb, 0x1, 0x1);
        gbc.writeMem(0x821, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe7c5);
        EXPECT(gbc.pc(), 0x823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02EA
        gbc.setState(0x49d2, 0x3904, 0x5d40, 0x3854, 0xe064, 0x6760, 0x0, 0x0);
        gbc.writeMem(0x49d2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3904);
        EXPECT(gbc.pc(), 0x49d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02EB
        gbc.setState(0x13f5, 0xbf33, 0x5970, 0x9ac8, 0x5c3, 0xf8e8, 0x1, 0x1);
        gbc.writeMem(0x13f5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbf33);
        EXPECT(gbc.pc(), 0x13f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02EC
        gbc.setState(0x7a9, 0xc16f, 0x54e0, 0xd8d4, 0x4e46, 0x48c4, 0x0, 0x0);
        gbc.writeMem(0x7a9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc16f);
        EXPECT(gbc.pc(), 0x7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02ED
        gbc.setState(0x6e36, 0xff4e, 0xb10, 0xd658, 0xe992, 0xea3b, 0x1, 0x1);
        gbc.writeMem(0x6e36, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xff4e);
        EXPECT(gbc.pc(), 0x6e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02EE
        gbc.setState(0x4025, 0x2526, 0xd910, 0x1f96, 0x9f27, 0x1401, 0x0, 0x0);
        gbc.writeMem(0x4025, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2526);
        EXPECT(gbc.pc(), 0x4027);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02F0
        gbc.setState(0xef0b, 0xd2b8, 0x25d0, 0x1da8, 0xe8cf, 0x2d6e, 0x0, 0x1);
        gbc.writeMem(0xef0b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd2b8);
        EXPECT(gbc.pc(), 0xef0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef0b), 0xcb);
        EXPECT(gbc.readMem(0xef0c), 0x9d);
        // CB 9D 02F1
        gbc.setState(0xd0fb, 0xf480, 0xe3a0, 0x1aea, 0x7b16, 0xf274, 0x0, 0x0);
        gbc.writeMem(0xd0fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf480);
        EXPECT(gbc.pc(), 0xd0fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0fb), 0xcb);
        EXPECT(gbc.readMem(0xd0fc), 0x9d);
        // CB 9D 02F2
        gbc.setState(0x2493, 0x4c7f, 0x63f0, 0xba9d, 0x540e, 0xfba, 0x1, 0x1);
        gbc.writeMem(0x2493, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4c7f);
        EXPECT(gbc.pc(), 0x2495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02F3
        gbc.setState(0x5237, 0x5b1a, 0x9b70, 0x50b4, 0x764e, 0xe230, 0x0, 0x1);
        gbc.writeMem(0x5237, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5b1a);
        EXPECT(gbc.pc(), 0x5239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02F5
        gbc.setState(0xe16c, 0x9af9, 0x36c0, 0x7a46, 0xe990, 0x644d, 0x0, 0x1);
        gbc.writeMem(0xe16c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9af9);
        EXPECT(gbc.pc(), 0xe16e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16c), 0xcb);
        EXPECT(gbc.readMem(0xe16d), 0x9d);
        // CB 9D 02F6
        gbc.setState(0xd242, 0x4743, 0x1fc0, 0xc2c, 0x6c89, 0xaeb3, 0x1, 0x1);
        gbc.writeMem(0xd242, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4743);
        EXPECT(gbc.pc(), 0xd244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd242), 0xcb);
        EXPECT(gbc.readMem(0xd243), 0x9d);
        // CB 9D 02F7
        gbc.setState(0xe861, 0x7ff6, 0xd080, 0x66c3, 0x6792, 0xc5d0, 0x1, 0x1);
        gbc.writeMem(0xe861, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7ff6);
        EXPECT(gbc.pc(), 0xe863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe861), 0xcb);
        EXPECT(gbc.readMem(0xe862), 0x9d);
        // CB 9D 02F8
        gbc.setState(0xacf4, 0xb9e4, 0xef00, 0xc43c, 0xed91, 0xb660, 0x1, 0x1);
        gbc.writeMem(0xacf4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb9e4);
        EXPECT(gbc.pc(), 0xacf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf4), 0xcb);
        EXPECT(gbc.readMem(0xacf5), 0x9d);
        // CB 9D 02F9
        gbc.setState(0xa16b, 0xba39, 0xd50, 0xcc3a, 0x3c4, 0xab5b, 0x0, 0x0);
        gbc.writeMem(0xa16b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xba39);
        EXPECT(gbc.pc(), 0xa16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa16b), 0xcb);
        EXPECT(gbc.readMem(0xa16c), 0x9d);
        // CB 9D 02FA
        gbc.setState(0xb899, 0xe2ea, 0x9640, 0x4d75, 0x345f, 0x820f, 0x0, 0x0);
        gbc.writeMem(0xb899, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe2ea);
        EXPECT(gbc.pc(), 0xb89b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb899), 0xcb);
        EXPECT(gbc.readMem(0xb89a), 0x9d);
        // CB 9D 02FB
        gbc.setState(0x7dad, 0xff49, 0xe420, 0xbf31, 0x8d4c, 0x72a7, 0x0, 0x0);
        gbc.writeMem(0x7dad, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xff49);
        EXPECT(gbc.pc(), 0x7daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02FC
        gbc.setState(0x64eb, 0xbc5c, 0xbdf0, 0x63d9, 0xdcf8, 0x4735, 0x1, 0x0);
        gbc.writeMem(0x64eb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbc5c);
        EXPECT(gbc.pc(), 0x64ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 02FD
        gbc.setState(0x484f, 0x91a4, 0xc80, 0xf91a, 0x7e18, 0x6114, 0x1, 0x0);
        gbc.writeMem(0x484f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x91a4);
        EXPECT(gbc.pc(), 0x4851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 02FE
        gbc.setState(0xe112, 0xbb67, 0x8850, 0x1607, 0x6ac0, 0x4735, 0x0, 0x0);
        gbc.writeMem(0xe112, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbb67);
        EXPECT(gbc.pc(), 0xe114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe112), 0xcb);
        EXPECT(gbc.readMem(0xe113), 0x9d);
        // CB 9D 02FF
        gbc.setState(0x5642, 0xbb7b, 0x72e0, 0xd4a7, 0x9bfa, 0x3fb2, 0x1, 0x1);
        gbc.writeMem(0x5642, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbb7b);
        EXPECT(gbc.pc(), 0x5644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0300
        gbc.setState(0x73ff, 0xda02, 0xd7c0, 0x3065, 0xc668, 0xefe3, 0x0, 0x1);
        gbc.writeMem(0x73ff, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xda02);
        EXPECT(gbc.pc(), 0x7401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0301
        gbc.setState(0x7deb, 0x1070, 0x380, 0x6e4a, 0x40c6, 0xf413, 0x0, 0x0);
        gbc.writeMem(0x7deb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1070);
        EXPECT(gbc.pc(), 0x7ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0302
        gbc.setState(0x3358, 0xe404, 0x3b10, 0xff2d, 0x6fc0, 0xa316, 0x1, 0x0);
        gbc.writeMem(0x3358, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe404);
        EXPECT(gbc.pc(), 0x335a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0303
        gbc.setState(0x6e7, 0x3c30, 0xb610, 0x5260, 0x76a5, 0xee43, 0x1, 0x0);
        gbc.writeMem(0x6e7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3c30);
        EXPECT(gbc.pc(), 0x6e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0304
        gbc.setState(0x55b6, 0xb13, 0x8290, 0xe79c, 0x5c80, 0xbdc8, 0x0, 0x0);
        gbc.writeMem(0x55b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb13);
        EXPECT(gbc.pc(), 0x55b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0305
        gbc.setState(0xcf8f, 0x7ddf, 0x5650, 0xbbe7, 0x23f2, 0x2c48, 0x0, 0x0);
        gbc.writeMem(0xcf8f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7ddf);
        EXPECT(gbc.pc(), 0xcf91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf8f), 0xcb);
        EXPECT(gbc.readMem(0xcf90), 0x9d);
        // CB 9D 0306
        gbc.setState(0xefce, 0x71f3, 0x4b80, 0xd6ed, 0x32a9, 0x39d, 0x0, 0x0);
        gbc.writeMem(0xefce, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x71f3);
        EXPECT(gbc.pc(), 0xefd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefce), 0xcb);
        EXPECT(gbc.readMem(0xefcf), 0x9d);
        // CB 9D 0307
        gbc.setState(0x410d, 0x4a11, 0x2090, 0xdeb3, 0xe2b1, 0x6f75, 0x1, 0x0);
        gbc.writeMem(0x410d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4a11);
        EXPECT(gbc.pc(), 0x410f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0309
        gbc.setState(0x5fa9, 0xb0cf, 0x6cb0, 0xf2d6, 0xd9db, 0x7c75, 0x1, 0x0);
        gbc.writeMem(0x5fa9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb0cf);
        EXPECT(gbc.pc(), 0x5fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 030B
        gbc.setState(0xd901, 0xd6c9, 0xb490, 0x19d, 0xfdd9, 0x63ce, 0x1, 0x1);
        gbc.writeMem(0xd901, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd6c9);
        EXPECT(gbc.pc(), 0xd903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd901), 0xcb);
        EXPECT(gbc.readMem(0xd902), 0x9d);
        // CB 9D 030C
        gbc.setState(0x1f0d, 0xf449, 0x9660, 0x6de8, 0x6e8, 0x30b6, 0x0, 0x1);
        gbc.writeMem(0x1f0d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf449);
        EXPECT(gbc.pc(), 0x1f0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 030D
        gbc.setState(0x2f69, 0xa828, 0x94e0, 0x529f, 0x2ab5, 0x37cb, 0x0, 0x1);
        gbc.writeMem(0x2f69, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa828);
        EXPECT(gbc.pc(), 0x2f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 030E
        gbc.setState(0x96c6, 0x7a69, 0x31f0, 0x44a0, 0x54cb, 0x6de4, 0x0, 0x0);
        gbc.writeMem(0x96c6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7a69);
        EXPECT(gbc.pc(), 0x96c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c6), 0xcb);
        EXPECT(gbc.readMem(0x96c7), 0x9d);
        // CB 9D 030F
        gbc.setState(0x2007, 0x358a, 0x330, 0xf1be, 0x9a6e, 0x9190, 0x0, 0x1);
        gbc.writeMem(0x2007, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x358a);
        EXPECT(gbc.pc(), 0x2009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0310
        gbc.setState(0xee0d, 0xc821, 0xa390, 0x43fe, 0xf846, 0xc011, 0x0, 0x0);
        gbc.writeMem(0xee0d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc821);
        EXPECT(gbc.pc(), 0xee0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee0d), 0xcb);
        EXPECT(gbc.readMem(0xee0e), 0x9d);
        // CB 9D 0311
        gbc.setState(0x21f, 0xe4bf, 0x3ca0, 0x148e, 0x667e, 0x9b6f, 0x0, 0x1);
        gbc.writeMem(0x21f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe4bf);
        EXPECT(gbc.pc(), 0x221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0312
        gbc.setState(0xc412, 0x360f, 0x2000, 0x1307, 0x1046, 0xdfce, 0x1, 0x1);
        gbc.writeMem(0xc412, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x360f);
        EXPECT(gbc.pc(), 0xc414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc412), 0xcb);
        EXPECT(gbc.readMem(0xc413), 0x9d);
        // CB 9D 0313
        gbc.setState(0x2ef4, 0xde5e, 0x32c0, 0x86ef, 0xa0f5, 0x4064, 0x1, 0x1);
        gbc.writeMem(0x2ef4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xde5e);
        EXPECT(gbc.pc(), 0x2ef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0314
        gbc.setState(0x6c9d, 0x8d37, 0xef80, 0xb31b, 0xa217, 0x49cc, 0x1, 0x0);
        gbc.writeMem(0x6c9d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8d37);
        EXPECT(gbc.pc(), 0x6c9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0315
        gbc.setState(0x28a1, 0xc2d1, 0xa920, 0x8ae2, 0x765c, 0x8c48, 0x1, 0x0);
        gbc.writeMem(0x28a1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc2d1);
        EXPECT(gbc.pc(), 0x28a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0316
        gbc.setState(0xcb9e, 0x9211, 0x9f80, 0xbe2d, 0x4c6e, 0x4f2a, 0x0, 0x1);
        gbc.writeMem(0xcb9e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9211);
        EXPECT(gbc.pc(), 0xcba0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb9e), 0xcb);
        EXPECT(gbc.readMem(0xcb9f), 0x9d);
        // CB 9D 0317
        gbc.setState(0xb39c, 0xe737, 0x19d0, 0x499b, 0xb058, 0x370b, 0x1, 0x0);
        gbc.writeMem(0xb39c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe737);
        EXPECT(gbc.pc(), 0xb39e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb39c), 0xcb);
        EXPECT(gbc.readMem(0xb39d), 0x9d);
        // CB 9D 0318
        gbc.setState(0x2856, 0x17a0, 0xb30, 0x7c3e, 0x5c3, 0x3144, 0x0, 0x1);
        gbc.writeMem(0x2856, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x17a0);
        EXPECT(gbc.pc(), 0x2858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0319
        gbc.setState(0x7320, 0x4fe5, 0x33e0, 0x841f, 0x3754, 0xf278, 0x1, 0x0);
        gbc.writeMem(0x7320, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4fe5);
        EXPECT(gbc.pc(), 0x7322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 031A
        gbc.setState(0x43f2, 0x90ed, 0x6d40, 0xcaeb, 0xd058, 0x2d3a, 0x0, 0x0);
        gbc.writeMem(0x43f2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x90ed);
        EXPECT(gbc.pc(), 0x43f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 031B
        gbc.setState(0xc789, 0xab0d, 0xd800, 0x113d, 0x2810, 0xd52, 0x0, 0x0);
        gbc.writeMem(0xc789, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xab0d);
        EXPECT(gbc.pc(), 0xc78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc789), 0xcb);
        EXPECT(gbc.readMem(0xc78a), 0x9d);
        // CB 9D 031C
        gbc.setState(0x7f45, 0xf8c0, 0xea30, 0xc4ec, 0x5dfe, 0xf4fa, 0x1, 0x1);
        gbc.writeMem(0x7f45, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf8c0);
        EXPECT(gbc.pc(), 0x7f47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 031D
        gbc.setState(0x4723, 0x10c8, 0x38e0, 0x1c6b, 0xa85f, 0x2bae, 0x0, 0x1);
        gbc.writeMem(0x4723, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x10c8);
        EXPECT(gbc.pc(), 0x4725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 031E
        gbc.setState(0x895a, 0x9bc, 0xb830, 0x14ec, 0x9838, 0xe6e8, 0x1, 0x1);
        gbc.writeMem(0x895a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9bc);
        EXPECT(gbc.pc(), 0x895c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x895a), 0xcb);
        EXPECT(gbc.readMem(0x895b), 0x9d);
        // CB 9D 031F
        gbc.setState(0xe629, 0xf522, 0xff30, 0x6591, 0x7caf, 0xb9c7, 0x0, 0x1);
        gbc.writeMem(0xe629, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf522);
        EXPECT(gbc.pc(), 0xe62b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe629), 0xcb);
        EXPECT(gbc.readMem(0xe62a), 0x9d);
        // CB 9D 0320
        gbc.setState(0xd98e, 0xd285, 0xf470, 0xbe69, 0x86d4, 0x8b80, 0x1, 0x1);
        gbc.writeMem(0xd98e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd285);
        EXPECT(gbc.pc(), 0xd990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd98e), 0xcb);
        EXPECT(gbc.readMem(0xd98f), 0x9d);
        // CB 9D 0321
        gbc.setState(0x369b, 0x867c, 0x1540, 0xd823, 0xcfa1, 0x126e, 0x1, 0x1);
        gbc.writeMem(0x369b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x867c);
        EXPECT(gbc.pc(), 0x369d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0322
        gbc.setState(0xc1ed, 0xd0ab, 0x1040, 0x69ee, 0x475d, 0x2bdf, 0x1, 0x0);
        gbc.writeMem(0xc1ed, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd0ab);
        EXPECT(gbc.pc(), 0xc1ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ed), 0xcb);
        EXPECT(gbc.readMem(0xc1ee), 0x9d);
        // CB 9D 0323
        gbc.setState(0x7322, 0x484a, 0x3000, 0xff8d, 0x1c9b, 0xae65, 0x1, 0x1);
        gbc.writeMem(0x7322, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x484a);
        EXPECT(gbc.pc(), 0x7324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0324
        gbc.setState(0x4528, 0xf564, 0x42c0, 0xcdb6, 0xa2c9, 0xb0af, 0x0, 0x1);
        gbc.writeMem(0x4528, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf564);
        EXPECT(gbc.pc(), 0x452a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0325
        gbc.setState(0xdc4b, 0xcbf5, 0x3d80, 0xcb1a, 0xedf1, 0x2746, 0x0, 0x1);
        gbc.writeMem(0xdc4b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcbf5);
        EXPECT(gbc.pc(), 0xdc4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc4b), 0xcb);
        EXPECT(gbc.readMem(0xdc4c), 0x9d);
        // CB 9D 0326
        gbc.setState(0x724d, 0xe3f3, 0x74c0, 0x9456, 0x8f4b, 0xed27, 0x0, 0x1);
        gbc.writeMem(0x724d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe3f3);
        EXPECT(gbc.pc(), 0x724f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0327
        gbc.setState(0xd375, 0x2314, 0x8710, 0x7ab6, 0xf602, 0xfc19, 0x0, 0x0);
        gbc.writeMem(0xd375, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2314);
        EXPECT(gbc.pc(), 0xd377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd375), 0xcb);
        EXPECT(gbc.readMem(0xd376), 0x9d);
        // CB 9D 0328
        gbc.setState(0x44a6, 0x3264, 0x8c30, 0x651f, 0x974d, 0x3407, 0x0, 0x1);
        gbc.writeMem(0x44a6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3264);
        EXPECT(gbc.pc(), 0x44a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0329
        gbc.setState(0xa03b, 0x8b80, 0x4430, 0x50f3, 0xa278, 0x7dac, 0x1, 0x0);
        gbc.writeMem(0xa03b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8b80);
        EXPECT(gbc.pc(), 0xa03d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa03b), 0xcb);
        EXPECT(gbc.readMem(0xa03c), 0x9d);
        // CB 9D 032A
        gbc.setState(0x30bf, 0xde04, 0x66f0, 0x694, 0xade0, 0xbd05, 0x1, 0x1);
        gbc.writeMem(0x30bf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xde04);
        EXPECT(gbc.pc(), 0x30c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 032B
        gbc.setState(0x6c18, 0x92db, 0x7a40, 0xb448, 0x950d, 0xb79, 0x1, 0x1);
        gbc.writeMem(0x6c18, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x92db);
        EXPECT(gbc.pc(), 0x6c1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 032D
        gbc.setState(0x7c56, 0xe908, 0x6200, 0x4a9, 0x6c0, 0xd022, 0x0, 0x0);
        gbc.writeMem(0x7c56, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe908);
        EXPECT(gbc.pc(), 0x7c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 032E
        gbc.setState(0x555c, 0x18ba, 0xa260, 0x1abe, 0xbc6, 0x5554, 0x0, 0x0);
        gbc.writeMem(0x555c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x18ba);
        EXPECT(gbc.pc(), 0x555e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 032F
        gbc.setState(0xca4d, 0xaf59, 0xb0e0, 0xf8a, 0x49ad, 0x703b, 0x0, 0x0);
        gbc.writeMem(0xca4d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xaf59);
        EXPECT(gbc.pc(), 0xca4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca4d), 0xcb);
        EXPECT(gbc.readMem(0xca4e), 0x9d);
        // CB 9D 0330
        gbc.setState(0x4112, 0x10b2, 0xca20, 0xdb13, 0xaace, 0x69a8, 0x0, 0x0);
        gbc.writeMem(0x4112, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x10b2);
        EXPECT(gbc.pc(), 0x4114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0331
        gbc.setState(0x4bc2, 0xd30c, 0xf250, 0x6f2f, 0xd19f, 0xe534, 0x0, 0x0);
        gbc.writeMem(0x4bc2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd30c);
        EXPECT(gbc.pc(), 0x4bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0333
        gbc.setState(0xd25d, 0xc217, 0xab40, 0xf3d4, 0xc6f9, 0x171e, 0x1, 0x0);
        gbc.writeMem(0xd25d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc217);
        EXPECT(gbc.pc(), 0xd25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd25d), 0xcb);
        EXPECT(gbc.readMem(0xd25e), 0x9d);
        // CB 9D 0334
        gbc.setState(0x84f1, 0xa902, 0xbaf0, 0x978e, 0x2043, 0x16fb, 0x0, 0x0);
        gbc.writeMem(0x84f1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa902);
        EXPECT(gbc.pc(), 0x84f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f1), 0xcb);
        EXPECT(gbc.readMem(0x84f2), 0x9d);
        // CB 9D 0335
        gbc.setState(0x50b6, 0xdd77, 0x5310, 0xf866, 0xcc74, 0x7038, 0x1, 0x0);
        gbc.writeMem(0x50b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdd77);
        EXPECT(gbc.pc(), 0x50b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0336
        gbc.setState(0xd9d9, 0xc5b2, 0x34d0, 0x69a6, 0x917e, 0x1e0d, 0x1, 0x0);
        gbc.writeMem(0xd9d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc5b2);
        EXPECT(gbc.pc(), 0xd9db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d9), 0xcb);
        EXPECT(gbc.readMem(0xd9da), 0x9d);
        // CB 9D 0337
        gbc.setState(0xbbd, 0x1055, 0xa720, 0x98a6, 0xabb5, 0xb724, 0x0, 0x1);
        gbc.writeMem(0xbbd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1055);
        EXPECT(gbc.pc(), 0xbbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0338
        gbc.setState(0x7e64, 0xcc3b, 0xa130, 0x7f4d, 0xbe98, 0x812c, 0x1, 0x0);
        gbc.writeMem(0x7e64, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcc3b);
        EXPECT(gbc.pc(), 0x7e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0339
        gbc.setState(0xaded, 0x4b83, 0xcc0, 0x945d, 0x4825, 0x82e0, 0x1, 0x1);
        gbc.writeMem(0xaded, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4b83);
        EXPECT(gbc.pc(), 0xadef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaded), 0xcb);
        EXPECT(gbc.readMem(0xadee), 0x9d);
        // CB 9D 033A
        gbc.setState(0x7817, 0x7d98, 0x7730, 0x346c, 0x57a6, 0x5db2, 0x0, 0x1);
        gbc.writeMem(0x7817, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7d98);
        EXPECT(gbc.pc(), 0x7819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 033B
        gbc.setState(0x8ee3, 0x5633, 0xa400, 0x7d60, 0x9e45, 0x107c, 0x0, 0x1);
        gbc.writeMem(0x8ee3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5633);
        EXPECT(gbc.pc(), 0x8ee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee3), 0xcb);
        EXPECT(gbc.readMem(0x8ee4), 0x9d);
        // CB 9D 033C
        gbc.setState(0xd053, 0xfc48, 0xc280, 0x3520, 0xcf21, 0xd0c2, 0x1, 0x0);
        gbc.writeMem(0xd053, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xfc48);
        EXPECT(gbc.pc(), 0xd055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd053), 0xcb);
        EXPECT(gbc.readMem(0xd054), 0x9d);
        // CB 9D 033D
        gbc.setState(0xdde2, 0x1424, 0xc840, 0xccf1, 0xde71, 0xd074, 0x1, 0x0);
        gbc.writeMem(0xdde2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1424);
        EXPECT(gbc.pc(), 0xdde4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde2), 0xcb);
        EXPECT(gbc.readMem(0xdde3), 0x9d);
        // CB 9D 033E
        gbc.setState(0x9891, 0x6b55, 0xd9a0, 0x3b34, 0x6955, 0x9a23, 0x1, 0x0);
        gbc.writeMem(0x9891, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6b55);
        EXPECT(gbc.pc(), 0x9893);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9891), 0xcb);
        EXPECT(gbc.readMem(0x9892), 0x9d);
        // CB 9D 033F
        gbc.setState(0x76bd, 0xbe1, 0xfd10, 0xa775, 0x3d6f, 0xd71c, 0x1, 0x1);
        gbc.writeMem(0x76bd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xbe1);
        EXPECT(gbc.pc(), 0x76bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0340
        gbc.setState(0x341b, 0xb873, 0xd030, 0xb4df, 0x15f6, 0x7791, 0x1, 0x0);
        gbc.writeMem(0x341b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb873);
        EXPECT(gbc.pc(), 0x341d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0341
        gbc.setState(0xd18c, 0x9d45, 0xaaa0, 0xb673, 0x62a4, 0xb152, 0x1, 0x0);
        gbc.writeMem(0xd18c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9d45);
        EXPECT(gbc.pc(), 0xd18e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd18c), 0xcb);
        EXPECT(gbc.readMem(0xd18d), 0x9d);
        // CB 9D 0342
        gbc.setState(0x1174, 0x85e2, 0x1c80, 0x7246, 0xd1d7, 0x50e8, 0x0, 0x1);
        gbc.writeMem(0x1174, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x85e2);
        EXPECT(gbc.pc(), 0x1176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0344
        gbc.setState(0xa42a, 0x1aa0, 0xc060, 0x4e18, 0x3675, 0xb5c7, 0x1, 0x1);
        gbc.writeMem(0xa42a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1aa0);
        EXPECT(gbc.pc(), 0xa42c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa42a), 0xcb);
        EXPECT(gbc.readMem(0xa42b), 0x9d);
        // CB 9D 0345
        gbc.setState(0x2539, 0x4098, 0xfae0, 0xd53a, 0x9b25, 0xb216, 0x1, 0x0);
        gbc.writeMem(0x2539, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4098);
        EXPECT(gbc.pc(), 0x253b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0346
        gbc.setState(0x583c, 0x536f, 0xb790, 0x8585, 0x3868, 0x8d2e, 0x1, 0x0);
        gbc.writeMem(0x583c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x536f);
        EXPECT(gbc.pc(), 0x583e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0347
        gbc.setState(0xed14, 0x57e5, 0x8b60, 0x1394, 0x9e80, 0x1c2d, 0x0, 0x0);
        gbc.writeMem(0xed14, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x57e5);
        EXPECT(gbc.pc(), 0xed16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed14), 0xcb);
        EXPECT(gbc.readMem(0xed15), 0x9d);
        // CB 9D 0348
        gbc.setState(0x15f7, 0x32c1, 0xc300, 0xa786, 0xf7d7, 0x2b62, 0x1, 0x1);
        gbc.writeMem(0x15f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x32c1);
        EXPECT(gbc.pc(), 0x15f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0349
        gbc.setState(0xe539, 0x47a5, 0x4390, 0x1d60, 0x3e4c, 0x2abb, 0x0, 0x0);
        gbc.writeMem(0xe539, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x47a5);
        EXPECT(gbc.pc(), 0xe53b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe539), 0xcb);
        EXPECT(gbc.readMem(0xe53a), 0x9d);
        // CB 9D 034A
        gbc.setState(0xa7e7, 0x9f77, 0x2b0, 0xe7b1, 0x92d7, 0xc4f0, 0x1, 0x1);
        gbc.writeMem(0xa7e7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9f77);
        EXPECT(gbc.pc(), 0xa7e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e7), 0xcb);
        EXPECT(gbc.readMem(0xa7e8), 0x9d);
        // CB 9D 034B
        gbc.setState(0xb3d9, 0x8bd1, 0xb330, 0x8164, 0xdaee, 0xa5, 0x1, 0x1);
        gbc.writeMem(0xb3d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8bd1);
        EXPECT(gbc.pc(), 0xb3db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d9), 0xcb);
        EXPECT(gbc.readMem(0xb3da), 0x9d);
        // CB 9D 034C
        gbc.setState(0x10e7, 0x9244, 0x5620, 0xd0bb, 0x6b92, 0x2ae, 0x0, 0x0);
        gbc.writeMem(0x10e7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9244);
        EXPECT(gbc.pc(), 0x10e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 034D
        gbc.setState(0x8a2f, 0xe2e8, 0xbf40, 0xf273, 0x12dd, 0xb56d, 0x0, 0x1);
        gbc.writeMem(0x8a2f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe2e8);
        EXPECT(gbc.pc(), 0x8a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2f), 0xcb);
        EXPECT(gbc.readMem(0x8a30), 0x9d);
        // CB 9D 034E
        gbc.setState(0xc831, 0xc6fe, 0xbe00, 0xadd5, 0xc6a6, 0xee6f, 0x0, 0x0);
        gbc.writeMem(0xc831, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc6fe);
        EXPECT(gbc.pc(), 0xc833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc831), 0xcb);
        EXPECT(gbc.readMem(0xc832), 0x9d);
        // CB 9D 034F
        gbc.setState(0x4c71, 0x6d81, 0xe280, 0x8a28, 0xb475, 0x9b17, 0x1, 0x1);
        gbc.writeMem(0x4c71, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6d81);
        EXPECT(gbc.pc(), 0x4c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0350
        gbc.setState(0xb67b, 0xce2a, 0xc270, 0xa509, 0x53fe, 0x305a, 0x0, 0x1);
        gbc.writeMem(0xb67b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xce2a);
        EXPECT(gbc.pc(), 0xb67d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb67b), 0xcb);
        EXPECT(gbc.readMem(0xb67c), 0x9d);
        // CB 9D 0351
        gbc.setState(0x294e, 0x19d, 0xf0d0, 0x253b, 0x8e1c, 0x55c4, 0x0, 0x0);
        gbc.writeMem(0x294e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x19d);
        EXPECT(gbc.pc(), 0x2950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0352
        gbc.setState(0x6c0d, 0xad2b, 0x3a20, 0xb51f, 0xc677, 0x79a1, 0x0, 0x0);
        gbc.writeMem(0x6c0d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xad2b);
        EXPECT(gbc.pc(), 0x6c0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0353
        gbc.setState(0x443e, 0xd84d, 0xd2a0, 0xf542, 0xa7cf, 0x5e1b, 0x1, 0x0);
        gbc.writeMem(0x443e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd84d);
        EXPECT(gbc.pc(), 0x4440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0354
        gbc.setState(0x3240, 0x7963, 0x52c0, 0x2975, 0x6b9e, 0xdd82, 0x0, 0x1);
        gbc.writeMem(0x3240, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7963);
        EXPECT(gbc.pc(), 0x3242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0355
        gbc.setState(0x2293, 0xad50, 0x1250, 0xf52a, 0x5c77, 0xbc4a, 0x0, 0x1);
        gbc.writeMem(0x2293, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xad50);
        EXPECT(gbc.pc(), 0x2295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0356
        gbc.setState(0xd76c, 0x3e18, 0x9010, 0x1eeb, 0x68d8, 0x86b7, 0x1, 0x0);
        gbc.writeMem(0xd76c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3e18);
        EXPECT(gbc.pc(), 0xd76e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd76c), 0xcb);
        EXPECT(gbc.readMem(0xd76d), 0x9d);
        // CB 9D 0357
        gbc.setState(0x12a4, 0x765, 0x5f40, 0x173f, 0x4d13, 0x3251, 0x1, 0x1);
        gbc.writeMem(0x12a4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x765);
        EXPECT(gbc.pc(), 0x12a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0358
        gbc.setState(0x6fc, 0x8feb, 0x79a0, 0x1d29, 0x3dc8, 0xa5eb, 0x1, 0x0);
        gbc.writeMem(0x6fc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8feb);
        EXPECT(gbc.pc(), 0x6fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0359
        gbc.setState(0x2147, 0xe6a6, 0x6380, 0x246d, 0x907, 0x14b0, 0x1, 0x1);
        gbc.writeMem(0x2147, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe6a6);
        EXPECT(gbc.pc(), 0x2149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 035A
        gbc.setState(0xaf6f, 0x2da5, 0xc040, 0x156c, 0x4132, 0x7d94, 0x0, 0x0);
        gbc.writeMem(0xaf6f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2da5);
        EXPECT(gbc.pc(), 0xaf71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf6f), 0xcb);
        EXPECT(gbc.readMem(0xaf70), 0x9d);
        // CB 9D 035B
        gbc.setState(0xad06, 0x4388, 0xb2e0, 0xfc75, 0xfc3f, 0x9f5c, 0x1, 0x1);
        gbc.writeMem(0xad06, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4388);
        EXPECT(gbc.pc(), 0xad08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad06), 0xcb);
        EXPECT(gbc.readMem(0xad07), 0x9d);
        // CB 9D 035C
        gbc.setState(0xdcfb, 0x2a6b, 0x30f0, 0x8567, 0x4c51, 0x7575, 0x1, 0x0);
        gbc.writeMem(0xdcfb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2a6b);
        EXPECT(gbc.pc(), 0xdcfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcfb), 0xcb);
        EXPECT(gbc.readMem(0xdcfc), 0x9d);
        // CB 9D 035D
        gbc.setState(0x6386, 0x31b5, 0xbb0, 0xaf9e, 0xea0e, 0xc8e6, 0x0, 0x0);
        gbc.writeMem(0x6386, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x31b5);
        EXPECT(gbc.pc(), 0x6388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 035E
        gbc.setState(0xe8b2, 0xabf5, 0xdb20, 0xf4ab, 0xf509, 0x73d6, 0x0, 0x1);
        gbc.writeMem(0xe8b2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xabf5);
        EXPECT(gbc.pc(), 0xe8b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b2), 0xcb);
        EXPECT(gbc.readMem(0xe8b3), 0x9d);
        // CB 9D 0360
        gbc.setState(0x53dc, 0x19d5, 0x60b0, 0x83c5, 0x4508, 0x7fc2, 0x0, 0x1);
        gbc.writeMem(0x53dc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x19d5);
        EXPECT(gbc.pc(), 0x53de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0361
        gbc.setState(0x7b7a, 0x6503, 0x2900, 0xaaf9, 0xff6b, 0xccf7, 0x1, 0x0);
        gbc.writeMem(0x7b7a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6503);
        EXPECT(gbc.pc(), 0x7b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0362
        gbc.setState(0xe2c2, 0x6ada, 0x6020, 0x519e, 0xff56, 0x15de, 0x1, 0x0);
        gbc.writeMem(0xe2c2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6ada);
        EXPECT(gbc.pc(), 0xe2c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c2), 0xcb);
        EXPECT(gbc.readMem(0xe2c3), 0x9d);
        // CB 9D 0363
        gbc.setState(0x873, 0xf9bd, 0x49c0, 0x9c9f, 0x5b30, 0x4a0d, 0x0, 0x0);
        gbc.writeMem(0x873, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf9bd);
        EXPECT(gbc.pc(), 0x875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0364
        gbc.setState(0x5422, 0x1b33, 0x1f00, 0x148d, 0xb907, 0x26fb, 0x1, 0x1);
        gbc.writeMem(0x5422, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1b33);
        EXPECT(gbc.pc(), 0x5424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0365
        gbc.setState(0x77f7, 0x2334, 0xed50, 0x7c88, 0xc93f, 0xe5c3, 0x1, 0x0);
        gbc.writeMem(0x77f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2334);
        EXPECT(gbc.pc(), 0x77f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0366
        gbc.setState(0x9733, 0x5f1e, 0x2a10, 0x5c40, 0xc731, 0x56dc, 0x1, 0x1);
        gbc.writeMem(0x9733, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5f1e);
        EXPECT(gbc.pc(), 0x9735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9733), 0xcb);
        EXPECT(gbc.readMem(0x9734), 0x9d);
        // CB 9D 0367
        gbc.setState(0xb54, 0x2e13, 0x30, 0x423, 0xcddf, 0x2d78, 0x0, 0x0);
        gbc.writeMem(0xb54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2e13);
        EXPECT(gbc.pc(), 0xb56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0368
        gbc.setState(0xf07, 0x4258, 0xd9f0, 0xedd2, 0xb150, 0x2c1b, 0x0, 0x1);
        gbc.writeMem(0xf07, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4258);
        EXPECT(gbc.pc(), 0xf09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0369
        gbc.setState(0x7119, 0xadc8, 0xd390, 0xfe54, 0xfa3e, 0xf8, 0x1, 0x1);
        gbc.writeMem(0x7119, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xadc8);
        EXPECT(gbc.pc(), 0x711b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 036A
        gbc.setState(0x7b16, 0xd560, 0x6090, 0x9834, 0x22b5, 0xe1a8, 0x1, 0x1);
        gbc.writeMem(0x7b16, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd560);
        EXPECT(gbc.pc(), 0x7b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 036C
        gbc.setState(0x1fe7, 0x5645, 0xac70, 0x75ad, 0xe960, 0xf640, 0x0, 0x0);
        gbc.writeMem(0x1fe7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5645);
        EXPECT(gbc.pc(), 0x1fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 036D
        gbc.setState(0x7d92, 0xce7a, 0x55e0, 0x57c6, 0xa2e1, 0x128b, 0x0, 0x1);
        gbc.writeMem(0x7d92, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xce7a);
        EXPECT(gbc.pc(), 0x7d94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 036E
        gbc.setState(0xbb78, 0xb8e7, 0xd1f0, 0x104c, 0x1feb, 0xb02f, 0x1, 0x0);
        gbc.writeMem(0xbb78, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb8e7);
        EXPECT(gbc.pc(), 0xbb7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb78), 0xcb);
        EXPECT(gbc.readMem(0xbb79), 0x9d);
        // CB 9D 036F
        gbc.setState(0x5687, 0xc72d, 0x9b20, 0x5aa2, 0x1cd1, 0x3fe9, 0x0, 0x0);
        gbc.writeMem(0x5687, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc72d);
        EXPECT(gbc.pc(), 0x5689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0370
        gbc.setState(0x8b8b, 0x17ab, 0x8f70, 0x820, 0xaeba, 0x3eeb, 0x1, 0x0);
        gbc.writeMem(0x8b8b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x17ab);
        EXPECT(gbc.pc(), 0x8b8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b8b), 0xcb);
        EXPECT(gbc.readMem(0x8b8c), 0x9d);
        // CB 9D 0371
        gbc.setState(0x2b86, 0xf572, 0x76b0, 0x9b38, 0xfa2b, 0x17c4, 0x0, 0x0);
        gbc.writeMem(0x2b86, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf572);
        EXPECT(gbc.pc(), 0x2b88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0372
        gbc.setState(0xa3a4, 0xcd79, 0x9cd0, 0x6486, 0x65b, 0x492f, 0x1, 0x0);
        gbc.writeMem(0xa3a4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcd79);
        EXPECT(gbc.pc(), 0xa3a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3a4), 0xcb);
        EXPECT(gbc.readMem(0xa3a5), 0x9d);
        // CB 9D 0373
        gbc.setState(0xa655, 0xd4c6, 0x380, 0x548b, 0xab60, 0xd4c9, 0x0, 0x0);
        gbc.writeMem(0xa655, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd4c6);
        EXPECT(gbc.pc(), 0xa657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa655), 0xcb);
        EXPECT(gbc.readMem(0xa656), 0x9d);
        // CB 9D 0374
        gbc.setState(0xbf2, 0x43c2, 0x4180, 0x5d75, 0x65bf, 0x1654, 0x1, 0x0);
        gbc.writeMem(0xbf2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x43c2);
        EXPECT(gbc.pc(), 0xbf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0375
        gbc.setState(0xae46, 0x5c39, 0x4a90, 0xf81b, 0x21bd, 0xecf4, 0x0, 0x1);
        gbc.writeMem(0xae46, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5c39);
        EXPECT(gbc.pc(), 0xae48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae46), 0xcb);
        EXPECT(gbc.readMem(0xae47), 0x9d);
        // CB 9D 0376
        gbc.setState(0xc2de, 0xc737, 0x6240, 0x191e, 0x8974, 0x4874, 0x0, 0x0);
        gbc.writeMem(0xc2de, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc737);
        EXPECT(gbc.pc(), 0xc2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2de), 0xcb);
        EXPECT(gbc.readMem(0xc2df), 0x9d);
        // CB 9D 0377
        gbc.setState(0x2b90, 0x35a6, 0xd640, 0x2fbc, 0x6df2, 0xc276, 0x1, 0x0);
        gbc.writeMem(0x2b90, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x35a6);
        EXPECT(gbc.pc(), 0x2b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0378
        gbc.setState(0x88c6, 0x9809, 0xa800, 0x9619, 0x124c, 0x536c, 0x1, 0x0);
        gbc.writeMem(0x88c6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9809);
        EXPECT(gbc.pc(), 0x88c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c6), 0xcb);
        EXPECT(gbc.readMem(0x88c7), 0x9d);
        // CB 9D 0379
        gbc.setState(0xdeed, 0xf76a, 0xd120, 0xa1d6, 0x168b, 0xed25, 0x1, 0x1);
        gbc.writeMem(0xdeed, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf76a);
        EXPECT(gbc.pc(), 0xdeef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeed), 0xcb);
        EXPECT(gbc.readMem(0xdeee), 0x9d);
        // CB 9D 037A
        gbc.setState(0x53c2, 0x8a23, 0x26e0, 0x72fa, 0x5d9c, 0x2990, 0x1, 0x0);
        gbc.writeMem(0x53c2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8a23);
        EXPECT(gbc.pc(), 0x53c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 037B
        gbc.setState(0x5944, 0xf8e6, 0xcb40, 0x5c7e, 0x76f0, 0x767c, 0x0, 0x1);
        gbc.writeMem(0x5944, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf8e6);
        EXPECT(gbc.pc(), 0x5946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 037C
        gbc.setState(0x7e99, 0xf838, 0xc910, 0xe1c5, 0x71a9, 0xfe5, 0x0, 0x0);
        gbc.writeMem(0x7e99, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf838);
        EXPECT(gbc.pc(), 0x7e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 037E
        gbc.setState(0xde7, 0x7f10, 0xe190, 0xe5b7, 0x1a30, 0x2edb, 0x0, 0x1);
        gbc.writeMem(0xde7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7f10);
        EXPECT(gbc.pc(), 0xde9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 037F
        gbc.setState(0x32fb, 0xf5a5, 0xc850, 0xe460, 0x7830, 0x3eb4, 0x1, 0x1);
        gbc.writeMem(0x32fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf5a5);
        EXPECT(gbc.pc(), 0x32fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0380
        gbc.setState(0xb297, 0x397e, 0x9070, 0xd642, 0x8df3, 0x64b5, 0x1, 0x1);
        gbc.writeMem(0xb297, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x397e);
        EXPECT(gbc.pc(), 0xb299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb297), 0xcb);
        EXPECT(gbc.readMem(0xb298), 0x9d);
        // CB 9D 0381
        gbc.setState(0xb20, 0x9199, 0xc970, 0x9991, 0xa6db, 0x6a42, 0x1, 0x0);
        gbc.writeMem(0xb20, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9199);
        EXPECT(gbc.pc(), 0xb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0382
        gbc.setState(0xcd44, 0x7e26, 0xfab0, 0x724, 0xc027, 0x464a, 0x1, 0x0);
        gbc.writeMem(0xcd44, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7e26);
        EXPECT(gbc.pc(), 0xcd46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd44), 0xcb);
        EXPECT(gbc.readMem(0xcd45), 0x9d);
        // CB 9D 0383
        gbc.setState(0x475c, 0xffb, 0x92b0, 0x20df, 0xbbe3, 0xf177, 0x1, 0x0);
        gbc.writeMem(0x475c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xffb);
        EXPECT(gbc.pc(), 0x475e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0384
        gbc.setState(0xa841, 0x913e, 0xd410, 0x2851, 0xbb48, 0xe1c4, 0x1, 0x0);
        gbc.writeMem(0xa841, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x913e);
        EXPECT(gbc.pc(), 0xa843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa841), 0xcb);
        EXPECT(gbc.readMem(0xa842), 0x9d);
        // CB 9D 0385
        gbc.setState(0x8574, 0x8a54, 0xe2e0, 0x74a3, 0xadeb, 0xbd69, 0x1, 0x0);
        gbc.writeMem(0x8574, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8a54);
        EXPECT(gbc.pc(), 0x8576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8574), 0xcb);
        EXPECT(gbc.readMem(0x8575), 0x9d);
        // CB 9D 0387
        gbc.setState(0x2c0d, 0x2ca8, 0xed00, 0xd151, 0x5335, 0x5eca, 0x0, 0x0);
        gbc.writeMem(0x2c0d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2ca8);
        EXPECT(gbc.pc(), 0x2c0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0388
        gbc.setState(0x5708, 0x4cf3, 0xe570, 0xf0aa, 0x97f8, 0xfc7c, 0x1, 0x0);
        gbc.writeMem(0x5708, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4cf3);
        EXPECT(gbc.pc(), 0x570a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0389
        gbc.setState(0xcfca, 0x30ca, 0x5d60, 0xde0a, 0x3aa6, 0x4818, 0x0, 0x0);
        gbc.writeMem(0xcfca, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x30ca);
        EXPECT(gbc.pc(), 0xcfcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfca), 0xcb);
        EXPECT(gbc.readMem(0xcfcb), 0x9d);
        // CB 9D 038A
        gbc.setState(0xf42, 0x1aaf, 0xf130, 0x1a25, 0x129a, 0x4f9b, 0x1, 0x0);
        gbc.writeMem(0xf42, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1aaf);
        EXPECT(gbc.pc(), 0xf44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 038B
        gbc.setState(0x264d, 0xddc0, 0x5390, 0x55b, 0xe608, 0xdad3, 0x0, 0x0);
        gbc.writeMem(0x264d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xddc0);
        EXPECT(gbc.pc(), 0x264f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 038C
        gbc.setState(0x4df4, 0x633, 0x5f40, 0x8334, 0x8adf, 0x287c, 0x1, 0x1);
        gbc.writeMem(0x4df4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x633);
        EXPECT(gbc.pc(), 0x4df6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 038D
        gbc.setState(0x31ce, 0xecc4, 0xc830, 0x497f, 0x11e1, 0xe934, 0x0, 0x0);
        gbc.writeMem(0x31ce, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xecc4);
        EXPECT(gbc.pc(), 0x31d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 038E
        gbc.setState(0x591e, 0xf841, 0x40f0, 0xc10b, 0xb5c7, 0xdbaa, 0x1, 0x1);
        gbc.writeMem(0x591e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf841);
        EXPECT(gbc.pc(), 0x5920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 038F
        gbc.setState(0x5d07, 0xe445, 0xbfd0, 0x670d, 0xca2e, 0x217c, 0x0, 0x0);
        gbc.writeMem(0x5d07, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe445);
        EXPECT(gbc.pc(), 0x5d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0390
        gbc.setState(0x3387, 0x9e84, 0x2990, 0x9ba1, 0xcaaf, 0x5dc5, 0x0, 0x0);
        gbc.writeMem(0x3387, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9e84);
        EXPECT(gbc.pc(), 0x3389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0391
        gbc.setState(0x8e5d, 0x3108, 0x52d0, 0x316d, 0xaec6, 0xc608, 0x0, 0x0);
        gbc.writeMem(0x8e5d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3108);
        EXPECT(gbc.pc(), 0x8e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e5d), 0xcb);
        EXPECT(gbc.readMem(0x8e5e), 0x9d);
        // CB 9D 0392
        gbc.setState(0x2437, 0xc9b0, 0xef70, 0x1185, 0x6e69, 0x43f, 0x0, 0x1);
        gbc.writeMem(0x2437, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc9b0);
        EXPECT(gbc.pc(), 0x2439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0393
        gbc.setState(0x22eb, 0x10d6, 0x7a0, 0x3b5, 0x9ee4, 0x5706, 0x0, 0x0);
        gbc.writeMem(0x22eb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x10d6);
        EXPECT(gbc.pc(), 0x22ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0394
        gbc.setState(0xa427, 0x897c, 0x7d20, 0xb080, 0x2ad4, 0x1691, 0x0, 0x0);
        gbc.writeMem(0xa427, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x897c);
        EXPECT(gbc.pc(), 0xa429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa427), 0xcb);
        EXPECT(gbc.readMem(0xa428), 0x9d);
        // CB 9D 0395
        gbc.setState(0x4d6e, 0xfcd1, 0xa1e0, 0xde16, 0x46be, 0x8386, 0x1, 0x1);
        gbc.writeMem(0x4d6e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xfcd1);
        EXPECT(gbc.pc(), 0x4d70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 0396
        gbc.setState(0x7f19, 0x7ed, 0x5870, 0xc5ba, 0xab5, 0x78f3, 0x0, 0x0);
        gbc.writeMem(0x7f19, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7ed);
        EXPECT(gbc.pc(), 0x7f1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0397
        gbc.setState(0x42ff, 0xd374, 0x3a30, 0xcccc, 0xe7c9, 0x2687, 0x1, 0x1);
        gbc.writeMem(0x42ff, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd374);
        EXPECT(gbc.pc(), 0x4301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 0398
        gbc.setState(0xab60, 0xbc2c, 0x7c60, 0x1879, 0x56d9, 0xbaf3, 0x1, 0x1);
        gbc.writeMem(0xab60, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbc2c);
        EXPECT(gbc.pc(), 0xab62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab60), 0xcb);
        EXPECT(gbc.readMem(0xab61), 0x9d);
        // CB 9D 0399
        gbc.setState(0x932e, 0xc274, 0x3ec0, 0x87c, 0x9b1c, 0x4bff, 0x0, 0x1);
        gbc.writeMem(0x932e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc274);
        EXPECT(gbc.pc(), 0x9330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x932e), 0xcb);
        EXPECT(gbc.readMem(0x932f), 0x9d);
        // CB 9D 039A
        gbc.setState(0x8ede, 0x8eb3, 0x4f70, 0xf4c5, 0xff7, 0x11f, 0x1, 0x1);
        gbc.writeMem(0x8ede, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8eb3);
        EXPECT(gbc.pc(), 0x8ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ede), 0xcb);
        EXPECT(gbc.readMem(0x8edf), 0x9d);
        // CB 9D 039B
        gbc.setState(0xd489, 0x6b8f, 0x51d0, 0xb819, 0xbae5, 0x6df8, 0x0, 0x1);
        gbc.writeMem(0xd489, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6b8f);
        EXPECT(gbc.pc(), 0xd48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd489), 0xcb);
        EXPECT(gbc.readMem(0xd48a), 0x9d);
        // CB 9D 039C
        gbc.setState(0x4bcf, 0xcb8, 0x31d0, 0xe06e, 0x6b30, 0xc0a9, 0x0, 0x1);
        gbc.writeMem(0x4bcf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcb8);
        EXPECT(gbc.pc(), 0x4bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 039E
        gbc.setState(0xd339, 0x7da0, 0xd910, 0x2d24, 0x7c28, 0x7ecd, 0x1, 0x1);
        gbc.writeMem(0xd339, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7da0);
        EXPECT(gbc.pc(), 0xd33b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd339), 0xcb);
        EXPECT(gbc.readMem(0xd33a), 0x9d);
        // CB 9D 039F
        gbc.setState(0x7a51, 0x634e, 0x2f40, 0xf0fc, 0x7735, 0x5b11, 0x1, 0x0);
        gbc.writeMem(0x7a51, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x634e);
        EXPECT(gbc.pc(), 0x7a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03A0
        gbc.setState(0x747e, 0xa238, 0xddb0, 0xc40d, 0xa8f4, 0x5bb6, 0x0, 0x0);
        gbc.writeMem(0x747e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa238);
        EXPECT(gbc.pc(), 0x7480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03A1
        gbc.setState(0xae51, 0x9b97, 0x3f70, 0xe636, 0x8dfd, 0x5fd1, 0x1, 0x0);
        gbc.writeMem(0xae51, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9b97);
        EXPECT(gbc.pc(), 0xae53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae51), 0xcb);
        EXPECT(gbc.readMem(0xae52), 0x9d);
        // CB 9D 03A2
        gbc.setState(0x50f0, 0x1b7f, 0x46f0, 0x80f, 0x61cf, 0x6fcc, 0x1, 0x0);
        gbc.writeMem(0x50f0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1b7f);
        EXPECT(gbc.pc(), 0x50f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03A3
        gbc.setState(0x140e, 0xf38f, 0xa310, 0xd96b, 0xcc18, 0x6520, 0x0, 0x1);
        gbc.writeMem(0x140e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf38f);
        EXPECT(gbc.pc(), 0x1410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03A4
        gbc.setState(0x680b, 0x4a0a, 0x9b10, 0xfac9, 0x1d03, 0x69cf, 0x1, 0x0);
        gbc.writeMem(0x680b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4a0a);
        EXPECT(gbc.pc(), 0x680d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03A5
        gbc.setState(0xeda9, 0x2796, 0xc900, 0xd603, 0x807b, 0x2112, 0x0, 0x0);
        gbc.writeMem(0xeda9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2796);
        EXPECT(gbc.pc(), 0xedab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda9), 0xcb);
        EXPECT(gbc.readMem(0xedaa), 0x9d);
        // CB 9D 03A6
        gbc.setState(0x1405, 0x26ed, 0x1d0, 0xed1, 0x611c, 0xba5e, 0x0, 0x1);
        gbc.writeMem(0x1405, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x26ed);
        EXPECT(gbc.pc(), 0x1407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03A7
        gbc.setState(0xd94d, 0x2a29, 0xb220, 0xc653, 0x713e, 0x5522, 0x0, 0x1);
        gbc.writeMem(0xd94d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2a29);
        EXPECT(gbc.pc(), 0xd94f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd94d), 0xcb);
        EXPECT(gbc.readMem(0xd94e), 0x9d);
        // CB 9D 03A8
        gbc.setState(0x7186, 0x345d, 0x6940, 0x4c81, 0xbbec, 0x142c, 0x1, 0x1);
        gbc.writeMem(0x7186, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x345d);
        EXPECT(gbc.pc(), 0x7188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03A9
        gbc.setState(0xe0db, 0x6fb5, 0xd740, 0x6cba, 0x8fe5, 0xa316, 0x1, 0x1);
        gbc.writeMem(0xe0db, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6fb5);
        EXPECT(gbc.pc(), 0xe0dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0db), 0xcb);
        EXPECT(gbc.readMem(0xe0dc), 0x9d);
        // CB 9D 03AA
        gbc.setState(0xe424, 0x156c, 0x6660, 0x6ae1, 0x3de2, 0xf709, 0x0, 0x0);
        gbc.writeMem(0xe424, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x156c);
        EXPECT(gbc.pc(), 0xe426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe424), 0xcb);
        EXPECT(gbc.readMem(0xe425), 0x9d);
        // CB 9D 03AB
        gbc.setState(0x74a9, 0xb700, 0x8820, 0x711a, 0xadff, 0xabf4, 0x1, 0x0);
        gbc.writeMem(0x74a9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb700);
        EXPECT(gbc.pc(), 0x74ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03AD
        gbc.setState(0xedd6, 0xcd2b, 0x2fa0, 0x6a8e, 0xde6f, 0x49e5, 0x1, 0x1);
        gbc.writeMem(0xedd6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcd2b);
        EXPECT(gbc.pc(), 0xedd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd6), 0xcb);
        EXPECT(gbc.readMem(0xedd7), 0x9d);
        // CB 9D 03AE
        gbc.setState(0x687d, 0x7976, 0x2780, 0xe581, 0x2f9f, 0x34d4, 0x1, 0x0);
        gbc.writeMem(0x687d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7976);
        EXPECT(gbc.pc(), 0x687f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03AF
        gbc.setState(0xa99b, 0x5caf, 0xe260, 0x65bd, 0x7beb, 0xa8a, 0x1, 0x0);
        gbc.writeMem(0xa99b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5caf);
        EXPECT(gbc.pc(), 0xa99d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99b), 0xcb);
        EXPECT(gbc.readMem(0xa99c), 0x9d);
        // CB 9D 03B0
        gbc.setState(0x55cf, 0xabe2, 0xd560, 0xca4, 0x36e6, 0x2e38, 0x0, 0x1);
        gbc.writeMem(0x55cf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xabe2);
        EXPECT(gbc.pc(), 0x55d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03B1
        gbc.setState(0x5d00, 0x1df4, 0x9600, 0x884b, 0x4638, 0x46a, 0x1, 0x0);
        gbc.writeMem(0x5d00, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1df4);
        EXPECT(gbc.pc(), 0x5d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03B2
        gbc.setState(0xa38e, 0x1a76, 0x9cc0, 0x9afb, 0x5f91, 0xdd4b, 0x0, 0x0);
        gbc.writeMem(0xa38e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1a76);
        EXPECT(gbc.pc(), 0xa390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa38e), 0xcb);
        EXPECT(gbc.readMem(0xa38f), 0x9d);
        // CB 9D 03B4
        gbc.setState(0xaff1, 0x3371, 0xdda0, 0x5f7, 0xbcc5, 0xbf06, 0x1, 0x1);
        gbc.writeMem(0xaff1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3371);
        EXPECT(gbc.pc(), 0xaff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff1), 0xcb);
        EXPECT(gbc.readMem(0xaff2), 0x9d);
        // CB 9D 03B5
        gbc.setState(0x4550, 0xa96f, 0xc340, 0x5f3f, 0x72d0, 0x5414, 0x0, 0x1);
        gbc.writeMem(0x4550, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa96f);
        EXPECT(gbc.pc(), 0x4552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03B6
        gbc.setState(0x2251, 0x6834, 0x3680, 0x5a75, 0x7518, 0x6561, 0x1, 0x1);
        gbc.writeMem(0x2251, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6834);
        EXPECT(gbc.pc(), 0x2253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03B7
        gbc.setState(0x350f, 0x19d9, 0x59e0, 0x38c3, 0xae3, 0xadbb, 0x0, 0x1);
        gbc.writeMem(0x350f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x19d9);
        EXPECT(gbc.pc(), 0x3511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03B8
        gbc.setState(0x8bb0, 0x62a5, 0x7010, 0x1ef9, 0xc101, 0xd5a7, 0x0, 0x1);
        gbc.writeMem(0x8bb0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x62a5);
        EXPECT(gbc.pc(), 0x8bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb0), 0xcb);
        EXPECT(gbc.readMem(0x8bb1), 0x9d);
        // CB 9D 03B9
        gbc.setState(0x5481, 0xfb8, 0x490, 0x57a4, 0xe572, 0xaf2f, 0x0, 0x0);
        gbc.writeMem(0x5481, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfb8);
        EXPECT(gbc.pc(), 0x5483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03BA
        gbc.setState(0x75d2, 0x51f8, 0x380, 0x1f51, 0xa40d, 0x6f17, 0x0, 0x1);
        gbc.writeMem(0x75d2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x51f8);
        EXPECT(gbc.pc(), 0x75d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03BB
        gbc.setState(0x78d9, 0x7669, 0x3c50, 0x2ac3, 0x473b, 0xb5d6, 0x0, 0x1);
        gbc.writeMem(0x78d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7669);
        EXPECT(gbc.pc(), 0x78db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03BC
        gbc.setState(0x9de0, 0x52b5, 0xddf0, 0xbb67, 0xfb04, 0xda4a, 0x0, 0x1);
        gbc.writeMem(0x9de0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x52b5);
        EXPECT(gbc.pc(), 0x9de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de0), 0xcb);
        EXPECT(gbc.readMem(0x9de1), 0x9d);
        // CB 9D 03BD
        gbc.setState(0x2d0e, 0xc0b, 0x9b20, 0xfd1c, 0x12d5, 0x7926, 0x0, 0x0);
        gbc.writeMem(0x2d0e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc0b);
        EXPECT(gbc.pc(), 0x2d10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03BE
        gbc.setState(0x850e, 0xab6a, 0x380, 0x81f1, 0xa730, 0xabc8, 0x0, 0x0);
        gbc.writeMem(0x850e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xab6a);
        EXPECT(gbc.pc(), 0x8510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x850e), 0xcb);
        EXPECT(gbc.readMem(0x850f), 0x9d);
        // CB 9D 03BF
        gbc.setState(0x2a69, 0x8ac8, 0xedd0, 0xfb6c, 0xaf84, 0x9590, 0x1, 0x1);
        gbc.writeMem(0x2a69, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8ac8);
        EXPECT(gbc.pc(), 0x2a6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03C0
        gbc.setState(0x82d2, 0xb87f, 0x7c30, 0xb815, 0x3a2, 0x7f10, 0x1, 0x1);
        gbc.writeMem(0x82d2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb87f);
        EXPECT(gbc.pc(), 0x82d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d2), 0xcb);
        EXPECT(gbc.readMem(0x82d3), 0x9d);
        // CB 9D 03C1
        gbc.setState(0x8ae9, 0xe56e, 0xd890, 0xf730, 0x11ae, 0x35bd, 0x1, 0x1);
        gbc.writeMem(0x8ae9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe56e);
        EXPECT(gbc.pc(), 0x8aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae9), 0xcb);
        EXPECT(gbc.readMem(0x8aea), 0x9d);
        // CB 9D 03C2
        gbc.setState(0x81c0, 0x9fa, 0xc5f0, 0x4d14, 0x9a, 0xb4c4, 0x1, 0x0);
        gbc.writeMem(0x81c0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9fa);
        EXPECT(gbc.pc(), 0x81c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c0), 0xcb);
        EXPECT(gbc.readMem(0x81c1), 0x9d);
        // CB 9D 03C3
        gbc.setState(0x6c76, 0xc2d3, 0xbb70, 0x7982, 0xf0f2, 0x14db, 0x0, 0x0);
        gbc.writeMem(0x6c76, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc2d3);
        EXPECT(gbc.pc(), 0x6c78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03C4
        gbc.setState(0x939a, 0x6adf, 0x2700, 0x764d, 0x37b3, 0xc9a3, 0x1, 0x0);
        gbc.writeMem(0x939a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6adf);
        EXPECT(gbc.pc(), 0x939c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939a), 0xcb);
        EXPECT(gbc.readMem(0x939b), 0x9d);
        // CB 9D 03C5
        gbc.setState(0x9624, 0x47d2, 0x4cf0, 0x51ef, 0x6249, 0xc60e, 0x1, 0x0);
        gbc.writeMem(0x9624, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x47d2);
        EXPECT(gbc.pc(), 0x9626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9624), 0xcb);
        EXPECT(gbc.readMem(0x9625), 0x9d);
        // CB 9D 03C6
        gbc.setState(0x2b8c, 0xefd, 0x1610, 0x1306, 0x2eb, 0xbc4b, 0x0, 0x1);
        gbc.writeMem(0x2b8c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xefd);
        EXPECT(gbc.pc(), 0x2b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03C7
        gbc.setState(0x5ce9, 0x2ce5, 0xbe90, 0x6eb3, 0x6198, 0x6a89, 0x1, 0x0);
        gbc.writeMem(0x5ce9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2ce5);
        EXPECT(gbc.pc(), 0x5ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03C8
        gbc.setState(0x764f, 0x62fe, 0xeaf0, 0x7643, 0x8a35, 0x7e8b, 0x0, 0x0);
        gbc.writeMem(0x764f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x62fe);
        EXPECT(gbc.pc(), 0x7651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03C9
        gbc.setState(0xb858, 0x544, 0x7260, 0x43f, 0xf89f, 0x31e6, 0x0, 0x0);
        gbc.writeMem(0xb858, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x544);
        EXPECT(gbc.pc(), 0xb85a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb858), 0xcb);
        EXPECT(gbc.readMem(0xb859), 0x9d);
        // CB 9D 03CA
        gbc.setState(0x4102, 0x951c, 0x20d0, 0x83be, 0x8244, 0x24b4, 0x0, 0x1);
        gbc.writeMem(0x4102, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x951c);
        EXPECT(gbc.pc(), 0x4104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03CB
        gbc.setState(0xbba9, 0xfee9, 0x3f60, 0xaecd, 0xdda0, 0x81d5, 0x1, 0x0);
        gbc.writeMem(0xbba9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfee9);
        EXPECT(gbc.pc(), 0xbbab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba9), 0xcb);
        EXPECT(gbc.readMem(0xbbaa), 0x9d);
        // CB 9D 03CC
        gbc.setState(0xb7b3, 0xa42e, 0xf7b0, 0x53c7, 0x5b7, 0x145e, 0x1, 0x1);
        gbc.writeMem(0xb7b3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa42e);
        EXPECT(gbc.pc(), 0xb7b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b3), 0xcb);
        EXPECT(gbc.readMem(0xb7b4), 0x9d);
        // CB 9D 03CD
        gbc.setState(0x5ed5, 0x3bd8, 0x710, 0xcdd6, 0x9854, 0xcc8b, 0x0, 0x0);
        gbc.writeMem(0x5ed5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3bd8);
        EXPECT(gbc.pc(), 0x5ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03CE
        gbc.setState(0x2201, 0x1fff, 0x8d80, 0x99f6, 0x71dc, 0x1e38, 0x1, 0x0);
        gbc.writeMem(0x2201, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1fff);
        EXPECT(gbc.pc(), 0x2203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03CF
        gbc.setState(0x50ce, 0xd894, 0x7730, 0x9f20, 0x24fd, 0xad56, 0x0, 0x0);
        gbc.writeMem(0x50ce, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd894);
        EXPECT(gbc.pc(), 0x50d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03D0
        gbc.setState(0x7cf1, 0xea35, 0xa890, 0x2c8d, 0x2777, 0x89c3, 0x0, 0x0);
        gbc.writeMem(0x7cf1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xea35);
        EXPECT(gbc.pc(), 0x7cf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03D1
        gbc.setState(0x2e24, 0x3342, 0x4b90, 0x567, 0xbeb0, 0x5aa4, 0x0, 0x0);
        gbc.writeMem(0x2e24, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3342);
        EXPECT(gbc.pc(), 0x2e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03D2
        gbc.setState(0xc138, 0x149c, 0xb130, 0x91da, 0xa8e0, 0x2c89, 0x0, 0x1);
        gbc.writeMem(0xc138, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x149c);
        EXPECT(gbc.pc(), 0xc13a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc138), 0xcb);
        EXPECT(gbc.readMem(0xc139), 0x9d);
        // CB 9D 03D3
        gbc.setState(0x74c3, 0xee15, 0xd60, 0xa575, 0x7a9c, 0x2dc4, 0x0, 0x1);
        gbc.writeMem(0x74c3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xee15);
        EXPECT(gbc.pc(), 0x74c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03D4
        gbc.setState(0x3a11, 0x3cbf, 0xd230, 0xc6ce, 0x136c, 0xe11e, 0x1, 0x1);
        gbc.writeMem(0x3a11, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3cbf);
        EXPECT(gbc.pc(), 0x3a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03D5
        gbc.setState(0x9072, 0xb704, 0xfe00, 0x66e8, 0x341, 0xdd50, 0x1, 0x1);
        gbc.writeMem(0x9072, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb704);
        EXPECT(gbc.pc(), 0x9074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9072), 0xcb);
        EXPECT(gbc.readMem(0x9073), 0x9d);
        // CB 9D 03D7
        gbc.setState(0xb4e4, 0x570b, 0x27b0, 0x5da, 0x9b75, 0xf807, 0x0, 0x0);
        gbc.writeMem(0xb4e4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x570b);
        EXPECT(gbc.pc(), 0xb4e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e4), 0xcb);
        EXPECT(gbc.readMem(0xb4e5), 0x9d);
        // CB 9D 03D8
        gbc.setState(0xd5ac, 0x5072, 0xc2c0, 0x6f07, 0x9251, 0x1168, 0x1, 0x0);
        gbc.writeMem(0xd5ac, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5072);
        EXPECT(gbc.pc(), 0xd5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ac), 0xcb);
        EXPECT(gbc.readMem(0xd5ad), 0x9d);
        // CB 9D 03D9
        gbc.setState(0xc87b, 0xb1e5, 0xb630, 0xebc2, 0xb888, 0xcb15, 0x1, 0x1);
        gbc.writeMem(0xc87b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb1e5);
        EXPECT(gbc.pc(), 0xc87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87b), 0xcb);
        EXPECT(gbc.readMem(0xc87c), 0x9d);
        // CB 9D 03DA
        gbc.setState(0x812, 0xe6bf, 0xea40, 0x92bf, 0xb4e8, 0x2381, 0x0, 0x0);
        gbc.writeMem(0x812, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe6bf);
        EXPECT(gbc.pc(), 0x814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03DB
        gbc.setState(0x1443, 0xdba2, 0xed20, 0xb8f6, 0x2088, 0xeeeb, 0x0, 0x0);
        gbc.writeMem(0x1443, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xdba2);
        EXPECT(gbc.pc(), 0x1445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03DD
        gbc.setState(0xe72b, 0xc225, 0xd150, 0x7969, 0x2d9b, 0x9b2d, 0x0, 0x1);
        gbc.writeMem(0xe72b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc225);
        EXPECT(gbc.pc(), 0xe72d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe72b), 0xcb);
        EXPECT(gbc.readMem(0xe72c), 0x9d);
        // CB 9D 03DE
        gbc.setState(0x88b6, 0xa7ff, 0xae90, 0x76f6, 0x1c05, 0x443a, 0x1, 0x1);
        gbc.writeMem(0x88b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa7ff);
        EXPECT(gbc.pc(), 0x88b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b6), 0xcb);
        EXPECT(gbc.readMem(0x88b7), 0x9d);
        // CB 9D 03DF
        gbc.setState(0x521b, 0xad4c, 0x40c0, 0x9978, 0xc630, 0xe4cb, 0x1, 0x0);
        gbc.writeMem(0x521b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xad4c);
        EXPECT(gbc.pc(), 0x521d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03E0
        gbc.setState(0x8cd6, 0x3eaf, 0xae70, 0x8bdb, 0x2e15, 0xa0c4, 0x0, 0x0);
        gbc.writeMem(0x8cd6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3eaf);
        EXPECT(gbc.pc(), 0x8cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd6), 0xcb);
        EXPECT(gbc.readMem(0x8cd7), 0x9d);
        // CB 9D 03E1
        gbc.setState(0x33bb, 0x5cbb, 0xe380, 0x1abf, 0xbe79, 0xf4b5, 0x0, 0x0);
        gbc.writeMem(0x33bb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5cbb);
        EXPECT(gbc.pc(), 0x33bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03E2
        gbc.setState(0x4433, 0x43dd, 0xd5a0, 0x6bca, 0xa856, 0xcb7b, 0x1, 0x1);
        gbc.writeMem(0x4433, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x43dd);
        EXPECT(gbc.pc(), 0x4435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03E3
        gbc.setState(0x2619, 0x94bd, 0x2c90, 0xb83e, 0x45f5, 0x731c, 0x0, 0x0);
        gbc.writeMem(0x2619, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x94bd);
        EXPECT(gbc.pc(), 0x261b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9D 03E4
        gbc.setState(0xe83e, 0xc34e, 0x9dd0, 0x26c6, 0x6441, 0x754d, 0x1, 0x1);
        gbc.writeMem(0xe83e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc34e);
        EXPECT(gbc.pc(), 0xe840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe83e), 0xcb);
        EXPECT(gbc.readMem(0xe83f), 0x9d);
        // CB 9D 03E5
        gbc.setState(0x1d6d, 0xb81a, 0x3160, 0x9538, 0x980d, 0x3a67, 0x0, 0x1);
        gbc.writeMem(0x1d6d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb81a);
        EXPECT(gbc.pc(), 0x1d6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9D 03E6
        gbc.setState(0xeb80, 0x6f0d, 0xcc90, 0xe51d, 0x9909, 0x572b, 0x0, 0x1);
        gbc.writeMem(0xeb80, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6f0d);
        EXPECT(gbc.pc(), 0xeb82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb80), 0xcb);
        EXPECT(gbc.readMem(0xeb81), 0x9d);
        // CB 9D 03E7
        gbc.setState(0x66c3, 0x3011, 0x8540, 0x9305, 0xeefd, 0xe82d, 0x1, 0x0);
        gbc.writeMem(0x66c3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3011);
        EXPECT(gbc.pc(), 0x66c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
