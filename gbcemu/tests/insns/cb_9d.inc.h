    TEST(gbcemu, opcode_cb_9d) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 9D 0000
        gbc.setState(0x7944, 0x2373, 0x2fe0, 0x4a18, 0x83e6, 0xd117, 0x0, 0x0);
        gbc.writeMem(0x7944, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2373, gbc.sp());
        EXPECT(0x7946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0001
        gbc.setState(0xcf4b, 0x1fca, 0x9150, 0x5cb8, 0xce3f, 0xaec8, 0x1, 0x1);
        gbc.writeMem(0xcf4b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1fca, gbc.sp());
        EXPECT(0xcf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4b));
        EXPECT(0x9d, gbc.readMem(0xcf4c));
        // CB 9D 0002
        gbc.setState(0x74a0, 0xdbb6, 0xc150, 0x3356, 0x45eb, 0x67a0, 0x0, 0x0);
        gbc.writeMem(0x74a0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdbb6, gbc.sp());
        EXPECT(0x74a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0003
        gbc.setState(0x333c, 0x3b4b, 0x8380, 0x9468, 0xaf11, 0x8dc5, 0x0, 0x1);
        gbc.writeMem(0x333c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3b4b, gbc.sp());
        EXPECT(0x333e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0004
        gbc.setState(0xe7b1, 0xa53a, 0x5710, 0x3a01, 0xa285, 0x66c8, 0x1, 0x1);
        gbc.writeMem(0xe7b1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa53a, gbc.sp());
        EXPECT(0xe7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b1));
        EXPECT(0x9d, gbc.readMem(0xe7b2));
        // CB 9D 0005
        gbc.setState(0x1dba, 0x79ac, 0x49f0, 0x39c9, 0x9479, 0xdd3d, 0x1, 0x0);
        gbc.writeMem(0x1dba, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x79ac, gbc.sp());
        EXPECT(0x1dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0006
        gbc.setState(0xac3a, 0xa704, 0xbf50, 0x3ef0, 0x2315, 0xe6ee, 0x0, 0x1);
        gbc.writeMem(0xac3a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa704, gbc.sp());
        EXPECT(0xac3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3a));
        EXPECT(0x9d, gbc.readMem(0xac3b));
        // CB 9D 0007
        gbc.setState(0xe64d, 0xc10e, 0x42d0, 0xc4eb, 0x7500, 0xa012, 0x1, 0x1);
        gbc.writeMem(0xe64d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc10e, gbc.sp());
        EXPECT(0xe64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64d));
        EXPECT(0x9d, gbc.readMem(0xe64e));
        // CB 9D 0008
        gbc.setState(0x1bf6, 0x6412, 0x8290, 0x7a73, 0xa078, 0x4897, 0x1, 0x0);
        gbc.writeMem(0x1bf6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6412, gbc.sp());
        EXPECT(0x1bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0009
        gbc.setState(0xa9ca, 0x283b, 0x2f10, 0x571b, 0x1855, 0xfcc7, 0x0, 0x0);
        gbc.writeMem(0xa9ca, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x283b, gbc.sp());
        EXPECT(0xa9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ca));
        EXPECT(0x9d, gbc.readMem(0xa9cb));
        // CB 9D 000A
        gbc.setState(0xb22e, 0x9b61, 0x3d40, 0x10af, 0x3590, 0xeb79, 0x1, 0x1);
        gbc.writeMem(0xb22e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9b61, gbc.sp());
        EXPECT(0xb230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22e));
        EXPECT(0x9d, gbc.readMem(0xb22f));
        // CB 9D 000B
        gbc.setState(0x9de1, 0x2acb, 0x5510, 0x19ce, 0x97c2, 0xed33, 0x0, 0x1);
        gbc.writeMem(0x9de1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2acb, gbc.sp());
        EXPECT(0x9de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de1));
        EXPECT(0x9d, gbc.readMem(0x9de2));
        // CB 9D 000C
        gbc.setState(0x3b17, 0xf7d4, 0x7740, 0xa353, 0x2be8, 0xd8ed, 0x1, 0x0);
        gbc.writeMem(0x3b17, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf7d4, gbc.sp());
        EXPECT(0x3b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 000D
        gbc.setState(0x2e9e, 0x9228, 0x3e60, 0x175a, 0x4386, 0xdd7c, 0x1, 0x0);
        gbc.writeMem(0x2e9e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9228, gbc.sp());
        EXPECT(0x2ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 000E
        gbc.setState(0xe031, 0x76a9, 0x5020, 0xbdc7, 0x9f0c, 0x21ff, 0x1, 0x0);
        gbc.writeMem(0xe031, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x76a9, gbc.sp());
        EXPECT(0xe033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe031));
        EXPECT(0x9d, gbc.readMem(0xe032));
        // CB 9D 000F
        gbc.setState(0xc807, 0x1b3c, 0x6a10, 0xa219, 0xed98, 0xf52e, 0x0, 0x0);
        gbc.writeMem(0xc807, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1b3c, gbc.sp());
        EXPECT(0xc809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc807));
        EXPECT(0x9d, gbc.readMem(0xc808));
        // CB 9D 0011
        gbc.setState(0x3949, 0xa536, 0xd830, 0x6e39, 0xf862, 0x3073, 0x1, 0x1);
        gbc.writeMem(0x3949, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa536, gbc.sp());
        EXPECT(0x394b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0012
        gbc.setState(0x622a, 0x8420, 0xc490, 0x2cdc, 0x9f0e, 0xe3d0, 0x0, 0x1);
        gbc.writeMem(0x622a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8420, gbc.sp());
        EXPECT(0x622c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0013
        gbc.setState(0x6f2b, 0xeeec, 0x82a0, 0x7fec, 0x36f7, 0xb23b, 0x1, 0x0);
        gbc.writeMem(0x6f2b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xeeec, gbc.sp());
        EXPECT(0x6f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0014
        gbc.setState(0x2c3d, 0x1f39, 0x4000, 0xb9e1, 0xa9d1, 0x5c27, 0x1, 0x0);
        gbc.writeMem(0x2c3d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1f39, gbc.sp());
        EXPECT(0x2c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0015
        gbc.setState(0x291e, 0xf5a0, 0x21b0, 0x8f94, 0xb5e6, 0x4bb8, 0x1, 0x0);
        gbc.writeMem(0x291e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf5a0, gbc.sp());
        EXPECT(0x2920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0016
        gbc.setState(0xf5c, 0xffba, 0x650, 0x68c0, 0xc1ce, 0x69e2, 0x1, 0x1);
        gbc.writeMem(0xf5c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xffba, gbc.sp());
        EXPECT(0xf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0017
        gbc.setState(0xe1a6, 0x62c6, 0x8050, 0x888b, 0x5622, 0xabe1, 0x0, 0x1);
        gbc.writeMem(0xe1a6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x62c6, gbc.sp());
        EXPECT(0xe1a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a6));
        EXPECT(0x9d, gbc.readMem(0xe1a7));
        // CB 9D 0018
        gbc.setState(0xa86f, 0x1116, 0x5400, 0x5069, 0xea3e, 0xcac6, 0x0, 0x0);
        gbc.writeMem(0xa86f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1116, gbc.sp());
        EXPECT(0xa871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86f));
        EXPECT(0x9d, gbc.readMem(0xa870));
        // CB 9D 0019
        gbc.setState(0x2737, 0x4d47, 0x9210, 0xc57b, 0x497c, 0xc5a5, 0x1, 0x0);
        gbc.writeMem(0x2737, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4d47, gbc.sp());
        EXPECT(0x2739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 001B
        gbc.setState(0x5cbd, 0x3ca9, 0x6670, 0x8a6b, 0x64a0, 0x3698, 0x0, 0x0);
        gbc.writeMem(0x5cbd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3ca9, gbc.sp());
        EXPECT(0x5cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 001C
        gbc.setState(0xcf54, 0x36e0, 0x7880, 0xf8be, 0x7dc, 0xb73e, 0x0, 0x1);
        gbc.writeMem(0xcf54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x36e0, gbc.sp());
        EXPECT(0xcf56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf54));
        EXPECT(0x9d, gbc.readMem(0xcf55));
        // CB 9D 001D
        gbc.setState(0xbcd4, 0x1d45, 0x83d0, 0xd37, 0xd300, 0xf5f3, 0x0, 0x0);
        gbc.writeMem(0xbcd4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1d45, gbc.sp());
        EXPECT(0xbcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd4));
        EXPECT(0x9d, gbc.readMem(0xbcd5));
        // CB 9D 001E
        gbc.setState(0x990b, 0x8bd5, 0x5170, 0xb77e, 0xbba7, 0x4601, 0x0, 0x0);
        gbc.writeMem(0x990b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8bd5, gbc.sp());
        EXPECT(0x990d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990b));
        EXPECT(0x9d, gbc.readMem(0x990c));
        // CB 9D 001F
        gbc.setState(0xd80d, 0xf40e, 0x8590, 0x28df, 0x54c0, 0xff80, 0x0, 0x1);
        gbc.writeMem(0xd80d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf40e, gbc.sp());
        EXPECT(0xd80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80d));
        EXPECT(0x9d, gbc.readMem(0xd80e));
        // CB 9D 0020
        gbc.setState(0x97ac, 0x72e9, 0x1c60, 0x46d5, 0x266b, 0x2f44, 0x0, 0x0);
        gbc.writeMem(0x97ac, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x72e9, gbc.sp());
        EXPECT(0x97ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ac));
        EXPECT(0x9d, gbc.readMem(0x97ad));
        // CB 9D 0022
        gbc.setState(0xd8e9, 0x4400, 0x9750, 0x36fe, 0xbdc9, 0x8f07, 0x0, 0x0);
        gbc.writeMem(0xd8e9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4400, gbc.sp());
        EXPECT(0xd8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e9));
        EXPECT(0x9d, gbc.readMem(0xd8ea));
        // CB 9D 0023
        gbc.setState(0x3e41, 0xe1ed, 0x8150, 0xe681, 0x4b51, 0xdeed, 0x0, 0x1);
        gbc.writeMem(0x3e41, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe1ed, gbc.sp());
        EXPECT(0x3e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0024
        gbc.setState(0xeea6, 0xa29b, 0x50f0, 0x765b, 0xcd21, 0x2cf9, 0x1, 0x0);
        gbc.writeMem(0xeea6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa29b, gbc.sp());
        EXPECT(0xeea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea6));
        EXPECT(0x9d, gbc.readMem(0xeea7));
        // CB 9D 0025
        gbc.setState(0xb687, 0xf1ef, 0xe010, 0x10e0, 0xd2c3, 0xa30f, 0x0, 0x1);
        gbc.writeMem(0xb687, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf1ef, gbc.sp());
        EXPECT(0xb689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb687));
        EXPECT(0x9d, gbc.readMem(0xb688));
        // CB 9D 0026
        gbc.setState(0xff0, 0x531d, 0xd7a0, 0xa223, 0xb442, 0x2e39, 0x0, 0x0);
        gbc.writeMem(0xff0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x531d, gbc.sp());
        EXPECT(0xff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0027
        gbc.setState(0xa84c, 0xea26, 0xe5e0, 0x2208, 0xccfa, 0xf708, 0x0, 0x1);
        gbc.writeMem(0xa84c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xea26, gbc.sp());
        EXPECT(0xa84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa84c));
        EXPECT(0x9d, gbc.readMem(0xa84d));
        // CB 9D 0028
        gbc.setState(0xbd41, 0xc15c, 0xdef0, 0xd6fd, 0xd66b, 0x7e18, 0x0, 0x0);
        gbc.writeMem(0xbd41, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc15c, gbc.sp());
        EXPECT(0xbd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd41));
        EXPECT(0x9d, gbc.readMem(0xbd42));
        // CB 9D 0029
        gbc.setState(0x97d9, 0x1373, 0x8a0, 0x8f99, 0xa6d8, 0xb195, 0x0, 0x1);
        gbc.writeMem(0x97d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1373, gbc.sp());
        EXPECT(0x97db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d9));
        EXPECT(0x9d, gbc.readMem(0x97da));
        // CB 9D 002A
        gbc.setState(0xd878, 0x2d97, 0x4f50, 0xb5b4, 0x788f, 0xb0f, 0x0, 0x0);
        gbc.writeMem(0xd878, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2d97, gbc.sp());
        EXPECT(0xd87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd878));
        EXPECT(0x9d, gbc.readMem(0xd879));
        // CB 9D 002B
        gbc.setState(0xbc1d, 0x2c81, 0xf300, 0x6e2b, 0x5cd7, 0xc05a, 0x0, 0x0);
        gbc.writeMem(0xbc1d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2c81, gbc.sp());
        EXPECT(0xbc1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1d));
        EXPECT(0x9d, gbc.readMem(0xbc1e));
        // CB 9D 002C
        gbc.setState(0x1049, 0x52ee, 0x38c0, 0x4f8a, 0xb2d, 0x9e00, 0x0, 0x1);
        gbc.writeMem(0x1049, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x52ee, gbc.sp());
        EXPECT(0x104b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 002D
        gbc.setState(0xc387, 0x82a7, 0x7910, 0x478b, 0xce49, 0x1830, 0x0, 0x1);
        gbc.writeMem(0xc387, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x82a7, gbc.sp());
        EXPECT(0xc389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc387));
        EXPECT(0x9d, gbc.readMem(0xc388));
        // CB 9D 002E
        gbc.setState(0xf30, 0x1129, 0xbcc0, 0xadb1, 0xc956, 0xdbc8, 0x0, 0x0);
        gbc.writeMem(0xf30, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1129, gbc.sp());
        EXPECT(0xf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 002F
        gbc.setState(0x881a, 0x9322, 0x1600, 0x1f01, 0xbe7e, 0xd239, 0x0, 0x0);
        gbc.writeMem(0x881a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9322, gbc.sp());
        EXPECT(0x881c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881a));
        EXPECT(0x9d, gbc.readMem(0x881b));
        // CB 9D 0030
        gbc.setState(0xb95, 0x339f, 0x9420, 0xdbdf, 0xfdc6, 0x9dfa, 0x0, 0x0);
        gbc.writeMem(0xb95, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x339f, gbc.sp());
        EXPECT(0xb97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0031
        gbc.setState(0x736e, 0x5a7d, 0xe890, 0xec29, 0xc0da, 0xf93c, 0x1, 0x1);
        gbc.writeMem(0x736e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5a7d, gbc.sp());
        EXPECT(0x7370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0032
        gbc.setState(0x56b1, 0x75fa, 0x4530, 0x7baf, 0xccd5, 0x935c, 0x1, 0x0);
        gbc.writeMem(0x56b1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x75fa, gbc.sp());
        EXPECT(0x56b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0033
        gbc.setState(0x51f7, 0xe8cf, 0x6400, 0xc194, 0x453d, 0x3e21, 0x1, 0x1);
        gbc.writeMem(0x51f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe8cf, gbc.sp());
        EXPECT(0x51f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0034
        gbc.setState(0x9cbc, 0xc48, 0x6d10, 0xd9b3, 0xb85, 0x409e, 0x0, 0x1);
        gbc.writeMem(0x9cbc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc48, gbc.sp());
        EXPECT(0x9cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbc));
        EXPECT(0x9d, gbc.readMem(0x9cbd));
        // CB 9D 0035
        gbc.setState(0xd2c0, 0x40cb, 0x2a20, 0x1e2d, 0x4d6b, 0xf704, 0x0, 0x1);
        gbc.writeMem(0xd2c0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x40cb, gbc.sp());
        EXPECT(0xd2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c0));
        EXPECT(0x9d, gbc.readMem(0xd2c1));
        // CB 9D 0036
        gbc.setState(0x8ef0, 0xfc1e, 0x9150, 0xcec5, 0x8524, 0x127a, 0x1, 0x0);
        gbc.writeMem(0x8ef0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfc1e, gbc.sp());
        EXPECT(0x8ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef0));
        EXPECT(0x9d, gbc.readMem(0x8ef1));
        // CB 9D 0037
        gbc.setState(0x17ff, 0x55d6, 0x9280, 0xb66d, 0x730c, 0x78a4, 0x1, 0x1);
        gbc.writeMem(0x17ff, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x55d6, gbc.sp());
        EXPECT(0x1801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0038
        gbc.setState(0x539, 0x255, 0x1d90, 0x6f24, 0xd141, 0xe06f, 0x0, 0x0);
        gbc.writeMem(0x539, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x255, gbc.sp());
        EXPECT(0x53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0039
        gbc.setState(0x4857, 0x12d2, 0xa900, 0x8957, 0x8dc8, 0x9d37, 0x1, 0x0);
        gbc.writeMem(0x4857, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x12d2, gbc.sp());
        EXPECT(0x4859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 003A
        gbc.setState(0xcb31, 0xb76, 0xb960, 0xa3d0, 0x92d8, 0x1b6f, 0x1, 0x0);
        gbc.writeMem(0xcb31, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb76, gbc.sp());
        EXPECT(0xcb33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb31));
        EXPECT(0x9d, gbc.readMem(0xcb32));
        // CB 9D 003B
        gbc.setState(0xc64e, 0xe087, 0x1a50, 0xbc77, 0x1913, 0x5afe, 0x1, 0x0);
        gbc.writeMem(0xc64e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe087, gbc.sp());
        EXPECT(0xc650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64e));
        EXPECT(0x9d, gbc.readMem(0xc64f));
        // CB 9D 003C
        gbc.setState(0x23ee, 0xb940, 0x3940, 0x407b, 0x297f, 0x5cb0, 0x0, 0x0);
        gbc.writeMem(0x23ee, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb940, gbc.sp());
        EXPECT(0x23f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 003D
        gbc.setState(0xc87a, 0x1052, 0x10c0, 0xdeb6, 0xbcbb, 0x8d4a, 0x0, 0x1);
        gbc.writeMem(0xc87a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1052, gbc.sp());
        EXPECT(0xc87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87a));
        EXPECT(0x9d, gbc.readMem(0xc87b));
        // CB 9D 003E
        gbc.setState(0x31a, 0x4750, 0x4c0, 0x78ca, 0x398f, 0x1d06, 0x1, 0x1);
        gbc.writeMem(0x31a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4750, gbc.sp());
        EXPECT(0x31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 003F
        gbc.setState(0x6565, 0x7915, 0xd070, 0x525d, 0x3c7e, 0x8f45, 0x1, 0x1);
        gbc.writeMem(0x6565, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7915, gbc.sp());
        EXPECT(0x6567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0040
        gbc.setState(0x201c, 0x12c7, 0x3320, 0x7c2c, 0x9ce0, 0xbd32, 0x1, 0x1);
        gbc.writeMem(0x201c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x12c7, gbc.sp());
        EXPECT(0x201e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0042
        gbc.setState(0x41d1, 0xa70b, 0x1bb0, 0x5cc7, 0x66fe, 0x12ad, 0x0, 0x0);
        gbc.writeMem(0x41d1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa70b, gbc.sp());
        EXPECT(0x41d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0043
        gbc.setState(0x9581, 0x6f0c, 0x2a10, 0xd3e0, 0xc9ee, 0xab20, 0x0, 0x1);
        gbc.writeMem(0x9581, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6f0c, gbc.sp());
        EXPECT(0x9583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9581));
        EXPECT(0x9d, gbc.readMem(0x9582));
        // CB 9D 0044
        gbc.setState(0xcf63, 0x5d51, 0x7110, 0x6e5c, 0xa8aa, 0x25fa, 0x0, 0x0);
        gbc.writeMem(0xcf63, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5d51, gbc.sp());
        EXPECT(0xcf65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf63));
        EXPECT(0x9d, gbc.readMem(0xcf64));
        // CB 9D 0045
        gbc.setState(0xc8f3, 0xf688, 0xc4d0, 0x3bdb, 0xb1c2, 0xe70f, 0x0, 0x0);
        gbc.writeMem(0xc8f3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf688, gbc.sp());
        EXPECT(0xc8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f3));
        EXPECT(0x9d, gbc.readMem(0xc8f4));
        // CB 9D 0046
        gbc.setState(0xc68a, 0xce03, 0x43c0, 0x4b43, 0x6874, 0x96c8, 0x0, 0x1);
        gbc.writeMem(0xc68a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xce03, gbc.sp());
        EXPECT(0xc68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68a));
        EXPECT(0x9d, gbc.readMem(0xc68b));
        // CB 9D 0047
        gbc.setState(0xd04e, 0x6a77, 0x9220, 0x8186, 0xd7d9, 0x1631, 0x1, 0x1);
        gbc.writeMem(0xd04e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6a77, gbc.sp());
        EXPECT(0xd050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04e));
        EXPECT(0x9d, gbc.readMem(0xd04f));
        // CB 9D 0048
        gbc.setState(0x9367, 0xda29, 0x4c0, 0x9665, 0xe749, 0x7d6a, 0x0, 0x1);
        gbc.writeMem(0x9367, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xda29, gbc.sp());
        EXPECT(0x9369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9367));
        EXPECT(0x9d, gbc.readMem(0x9368));
        // CB 9D 0049
        gbc.setState(0x55bc, 0xd8, 0xa0, 0xc773, 0xbf94, 0x3b97, 0x0, 0x0);
        gbc.writeMem(0x55bc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd8, gbc.sp());
        EXPECT(0x55be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 004A
        gbc.setState(0x412c, 0x9ff6, 0xf9a0, 0x65d0, 0x2821, 0xb71b, 0x1, 0x0);
        gbc.writeMem(0x412c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9ff6, gbc.sp());
        EXPECT(0x412e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 004B
        gbc.setState(0x7104, 0xd06b, 0x3970, 0xb8dd, 0x6775, 0x7f67, 0x0, 0x1);
        gbc.writeMem(0x7104, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd06b, gbc.sp());
        EXPECT(0x7106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 004C
        gbc.setState(0x36f1, 0x4a28, 0xfbd0, 0x6537, 0x9959, 0x42c2, 0x0, 0x1);
        gbc.writeMem(0x36f1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4a28, gbc.sp());
        EXPECT(0x36f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 004D
        gbc.setState(0x6f68, 0xfb3c, 0xf200, 0x3b35, 0xf463, 0x9bb8, 0x1, 0x1);
        gbc.writeMem(0x6f68, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfb3c, gbc.sp());
        EXPECT(0x6f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 004F
        gbc.setState(0x59e7, 0x49f3, 0x7a10, 0x4bbc, 0x9414, 0x7b7, 0x1, 0x1);
        gbc.writeMem(0x59e7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x49f3, gbc.sp());
        EXPECT(0x59e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0050
        gbc.setState(0xcf22, 0xaff, 0x1d90, 0x4a96, 0xc71b, 0x5ce0, 0x0, 0x1);
        gbc.writeMem(0xcf22, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xaff, gbc.sp());
        EXPECT(0xcf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf22));
        EXPECT(0x9d, gbc.readMem(0xcf23));
        // CB 9D 0052
        gbc.setState(0xe793, 0xeac3, 0xb1d0, 0x970c, 0xd2d6, 0xdae, 0x0, 0x0);
        gbc.writeMem(0xe793, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xeac3, gbc.sp());
        EXPECT(0xe795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe793));
        EXPECT(0x9d, gbc.readMem(0xe794));
        // CB 9D 0054
        gbc.setState(0x1ab1, 0x50fb, 0x2290, 0x7ae, 0x87a3, 0x71fd, 0x1, 0x0);
        gbc.writeMem(0x1ab1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x50fb, gbc.sp());
        EXPECT(0x1ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0055
        gbc.setState(0x3167, 0xaae3, 0x46c0, 0xe866, 0xe021, 0x37a7, 0x1, 0x0);
        gbc.writeMem(0x3167, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xaae3, gbc.sp());
        EXPECT(0x3169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0056
        gbc.setState(0xb844, 0x40f8, 0x9e30, 0x42d5, 0x3110, 0xe496, 0x0, 0x1);
        gbc.writeMem(0xb844, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x40f8, gbc.sp());
        EXPECT(0xb846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb844));
        EXPECT(0x9d, gbc.readMem(0xb845));
        // CB 9D 0057
        gbc.setState(0x607b, 0xeaad, 0xc940, 0xdb61, 0x4651, 0xa861, 0x0, 0x0);
        gbc.writeMem(0x607b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xeaad, gbc.sp());
        EXPECT(0x607d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0058
        gbc.setState(0x82e9, 0x5377, 0xe80, 0x2907, 0x2aaf, 0xb138, 0x0, 0x1);
        gbc.writeMem(0x82e9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5377, gbc.sp());
        EXPECT(0x82eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e9));
        EXPECT(0x9d, gbc.readMem(0x82ea));
        // CB 9D 0059
        gbc.setState(0x920b, 0xa2ff, 0x6820, 0x353f, 0x480d, 0x1d3d, 0x1, 0x0);
        gbc.writeMem(0x920b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa2ff, gbc.sp());
        EXPECT(0x920d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x920b));
        EXPECT(0x9d, gbc.readMem(0x920c));
        // CB 9D 005A
        gbc.setState(0xaa0e, 0x62cc, 0x1cb0, 0x57a7, 0x3c76, 0xb569, 0x1, 0x0);
        gbc.writeMem(0xaa0e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x62cc, gbc.sp());
        EXPECT(0xaa10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0e));
        EXPECT(0x9d, gbc.readMem(0xaa0f));
        // CB 9D 005B
        gbc.setState(0x377d, 0xef67, 0x4f30, 0xc76f, 0xe3ab, 0x3156, 0x0, 0x0);
        gbc.writeMem(0x377d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xef67, gbc.sp());
        EXPECT(0x377f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 005C
        gbc.setState(0xa3f8, 0xaaa5, 0x0, 0x22cc, 0x8534, 0x589a, 0x1, 0x1);
        gbc.writeMem(0xa3f8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaaa5, gbc.sp());
        EXPECT(0xa3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f8));
        EXPECT(0x9d, gbc.readMem(0xa3f9));
        // CB 9D 005D
        gbc.setState(0x78f0, 0xb3b3, 0xb8e0, 0xa3aa, 0xee5f, 0x5d7e, 0x1, 0x0);
        gbc.writeMem(0x78f0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb3b3, gbc.sp());
        EXPECT(0x78f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 005E
        gbc.setState(0x1257, 0x9736, 0xfed0, 0x78e7, 0xf9c0, 0xdd39, 0x0, 0x0);
        gbc.writeMem(0x1257, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9736, gbc.sp());
        EXPECT(0x1259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 005F
        gbc.setState(0x87ab, 0x4a1c, 0xbb80, 0x88bd, 0xfda4, 0x95b4, 0x1, 0x1);
        gbc.writeMem(0x87ab, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4a1c, gbc.sp());
        EXPECT(0x87ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ab));
        EXPECT(0x9d, gbc.readMem(0x87ac));
        // CB 9D 0060
        gbc.setState(0x2e07, 0x6e71, 0x2140, 0xe677, 0xcdda, 0x6962, 0x0, 0x1);
        gbc.writeMem(0x2e07, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6e71, gbc.sp());
        EXPECT(0x2e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0062
        gbc.setState(0xb599, 0xf1af, 0x9810, 0x39ba, 0x9a2b, 0x8b96, 0x1, 0x0);
        gbc.writeMem(0xb599, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf1af, gbc.sp());
        EXPECT(0xb59b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb599));
        EXPECT(0x9d, gbc.readMem(0xb59a));
        // CB 9D 0063
        gbc.setState(0x4cd5, 0xd7b, 0xaf50, 0x59d4, 0xf72a, 0xdf69, 0x0, 0x1);
        gbc.writeMem(0x4cd5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd7b, gbc.sp());
        EXPECT(0x4cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0064
        gbc.setState(0xd5b5, 0x25e7, 0xb5f0, 0x863b, 0xedda, 0xc9bd, 0x1, 0x0);
        gbc.writeMem(0xd5b5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x25e7, gbc.sp());
        EXPECT(0xd5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b5));
        EXPECT(0x9d, gbc.readMem(0xd5b6));
        // CB 9D 0066
        gbc.setState(0x43bc, 0x63f0, 0x83a0, 0x4423, 0x1e05, 0x800a, 0x0, 0x1);
        gbc.writeMem(0x43bc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x63f0, gbc.sp());
        EXPECT(0x43be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0067
        gbc.setState(0x998c, 0x6c32, 0x1cf0, 0xcabf, 0xe337, 0xb911, 0x1, 0x0);
        gbc.writeMem(0x998c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6c32, gbc.sp());
        EXPECT(0x998e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998c));
        EXPECT(0x9d, gbc.readMem(0x998d));
        // CB 9D 0068
        gbc.setState(0x9d15, 0x7dea, 0x6300, 0xf8bc, 0x49a9, 0x9cb5, 0x1, 0x0);
        gbc.writeMem(0x9d15, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7dea, gbc.sp());
        EXPECT(0x9d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d15));
        EXPECT(0x9d, gbc.readMem(0x9d16));
        // CB 9D 006B
        gbc.setState(0x38ae, 0x4bcc, 0xb410, 0x89c9, 0x3e70, 0x57c1, 0x0, 0x0);
        gbc.writeMem(0x38ae, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4bcc, gbc.sp());
        EXPECT(0x38b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 006C
        gbc.setState(0xc7af, 0xa8c7, 0x55d0, 0x9129, 0xcdc9, 0x6624, 0x0, 0x0);
        gbc.writeMem(0xc7af, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa8c7, gbc.sp());
        EXPECT(0xc7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7af));
        EXPECT(0x9d, gbc.readMem(0xc7b0));
        // CB 9D 006D
        gbc.setState(0x7b80, 0xf842, 0x2e0, 0x719d, 0x4748, 0xd42d, 0x0, 0x0);
        gbc.writeMem(0x7b80, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf842, gbc.sp());
        EXPECT(0x7b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 006E
        gbc.setState(0x640e, 0xd58b, 0xb460, 0x4816, 0xd419, 0xcf60, 0x0, 0x1);
        gbc.writeMem(0x640e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd58b, gbc.sp());
        EXPECT(0x6410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 006F
        gbc.setState(0x22fb, 0x4914, 0xc550, 0xc118, 0xc709, 0xf837, 0x0, 0x0);
        gbc.writeMem(0x22fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4914, gbc.sp());
        EXPECT(0x22fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0070
        gbc.setState(0x734a, 0x25dc, 0x40d0, 0x3342, 0xa4c3, 0x949f, 0x1, 0x0);
        gbc.writeMem(0x734a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x25dc, gbc.sp());
        EXPECT(0x734c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0071
        gbc.setState(0x4e6b, 0x417b, 0xaf20, 0x91e0, 0x68a4, 0x420a, 0x1, 0x0);
        gbc.writeMem(0x4e6b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x417b, gbc.sp());
        EXPECT(0x4e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0072
        gbc.setState(0xbe96, 0xae0b, 0x9b60, 0xe1a5, 0x4b5f, 0xe471, 0x0, 0x1);
        gbc.writeMem(0xbe96, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xae0b, gbc.sp());
        EXPECT(0xbe98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe96));
        EXPECT(0x9d, gbc.readMem(0xbe97));
        // CB 9D 0073
        gbc.setState(0xa4b, 0x8a95, 0x8b90, 0xc90c, 0x13b2, 0xd2a4, 0x1, 0x0);
        gbc.writeMem(0xa4b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8a95, gbc.sp());
        EXPECT(0xa4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0074
        gbc.setState(0xdfa1, 0xff69, 0x91a0, 0xc61c, 0xcb32, 0xbae, 0x0, 0x0);
        gbc.writeMem(0xdfa1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xff69, gbc.sp());
        EXPECT(0xdfa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa1));
        EXPECT(0x9d, gbc.readMem(0xdfa2));
        // CB 9D 0075
        gbc.setState(0xb56b, 0xbcbd, 0x3890, 0xb643, 0x191d, 0x1bd8, 0x1, 0x0);
        gbc.writeMem(0xb56b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbcbd, gbc.sp());
        EXPECT(0xb56d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56b));
        EXPECT(0x9d, gbc.readMem(0xb56c));
        // CB 9D 0076
        gbc.setState(0x41ac, 0x83ad, 0xfc60, 0xdf1, 0x3220, 0x2677, 0x1, 0x1);
        gbc.writeMem(0x41ac, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x83ad, gbc.sp());
        EXPECT(0x41ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0077
        gbc.setState(0x7537, 0xf823, 0x720, 0xf049, 0xb88, 0xcb06, 0x1, 0x1);
        gbc.writeMem(0x7537, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf823, gbc.sp());
        EXPECT(0x7539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0078
        gbc.setState(0xef17, 0x86d5, 0x2840, 0x7abb, 0xcc12, 0xb43d, 0x0, 0x0);
        gbc.writeMem(0xef17, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x86d5, gbc.sp());
        EXPECT(0xef19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef17));
        EXPECT(0x9d, gbc.readMem(0xef18));
        // CB 9D 0079
        gbc.setState(0xbd65, 0x8ec6, 0xc9e0, 0xe19b, 0x434b, 0xa0ba, 0x0, 0x1);
        gbc.writeMem(0xbd65, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8ec6, gbc.sp());
        EXPECT(0xbd67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd65));
        EXPECT(0x9d, gbc.readMem(0xbd66));
        // CB 9D 007C
        gbc.setState(0x9317, 0x1f87, 0x320, 0x9e0c, 0x1696, 0x1236, 0x1, 0x0);
        gbc.writeMem(0x9317, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1f87, gbc.sp());
        EXPECT(0x9319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9317));
        EXPECT(0x9d, gbc.readMem(0x9318));
        // CB 9D 007D
        gbc.setState(0x72f, 0x7cdf, 0x1bf0, 0xa46f, 0x28a0, 0xfd50, 0x0, 0x0);
        gbc.writeMem(0x72f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7cdf, gbc.sp());
        EXPECT(0x731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 007E
        gbc.setState(0xe649, 0xcbe2, 0xb7f0, 0x496e, 0x1557, 0xc28, 0x1, 0x0);
        gbc.writeMem(0xe649, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcbe2, gbc.sp());
        EXPECT(0xe64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe649));
        EXPECT(0x9d, gbc.readMem(0xe64a));
        // CB 9D 007F
        gbc.setState(0x7c83, 0xcaa8, 0x2fd0, 0x152f, 0xc38b, 0x36aa, 0x0, 0x0);
        gbc.writeMem(0x7c83, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcaa8, gbc.sp());
        EXPECT(0x7c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0081
        gbc.setState(0xd459, 0x23b8, 0x1fb0, 0x6ac3, 0xb46c, 0x5e8d, 0x1, 0x0);
        gbc.writeMem(0xd459, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x23b8, gbc.sp());
        EXPECT(0xd45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd459));
        EXPECT(0x9d, gbc.readMem(0xd45a));
        // CB 9D 0082
        gbc.setState(0xca7e, 0x26ca, 0x1250, 0xa9bd, 0xc8bd, 0xcf48, 0x1, 0x1);
        gbc.writeMem(0xca7e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x26ca, gbc.sp());
        EXPECT(0xca80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7e));
        EXPECT(0x9d, gbc.readMem(0xca7f));
        // CB 9D 0083
        gbc.setState(0x871c, 0xd078, 0x21b0, 0x115c, 0x4098, 0x9643, 0x1, 0x0);
        gbc.writeMem(0x871c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd078, gbc.sp());
        EXPECT(0x871e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871c));
        EXPECT(0x9d, gbc.readMem(0x871d));
        // CB 9D 0084
        gbc.setState(0x458, 0x9bf1, 0x5150, 0x5bfc, 0x7c8d, 0xac53, 0x1, 0x0);
        gbc.writeMem(0x458, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9bf1, gbc.sp());
        EXPECT(0x45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0085
        gbc.setState(0x19b6, 0xbd11, 0x37b0, 0xff8f, 0x3f80, 0x58ed, 0x1, 0x1);
        gbc.writeMem(0x19b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbd11, gbc.sp());
        EXPECT(0x19b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0086
        gbc.setState(0x3bbe, 0x6ac9, 0xff30, 0x33b8, 0x1a1b, 0xebde, 0x1, 0x1);
        gbc.writeMem(0x3bbe, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0x3bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0087
        gbc.setState(0xe2b5, 0x4fb3, 0x6030, 0x4d7e, 0x9ba7, 0x14ca, 0x1, 0x0);
        gbc.writeMem(0xe2b5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4fb3, gbc.sp());
        EXPECT(0xe2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b5));
        EXPECT(0x9d, gbc.readMem(0xe2b6));
        // CB 9D 0088
        gbc.setState(0x2e07, 0x8edb, 0xf5e0, 0x4afc, 0x13e, 0xc6, 0x1, 0x0);
        gbc.writeMem(0x2e07, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8edb, gbc.sp());
        EXPECT(0x2e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0089
        gbc.setState(0x70d0, 0x9106, 0x4450, 0xbb38, 0x102b, 0x5bc7, 0x0, 0x0);
        gbc.writeMem(0x70d0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9106, gbc.sp());
        EXPECT(0x70d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 008A
        gbc.setState(0xd9e, 0x420d, 0x260, 0xdd46, 0x8614, 0x461e, 0x0, 0x1);
        gbc.writeMem(0xd9e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x420d, gbc.sp());
        EXPECT(0xda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 008B
        gbc.setState(0x9ff6, 0x4b8a, 0xd4d0, 0x3242, 0x9a6e, 0x33e2, 0x1, 0x1);
        gbc.writeMem(0x9ff6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4b8a, gbc.sp());
        EXPECT(0x9ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff6));
        EXPECT(0x9d, gbc.readMem(0x9ff7));
        // CB 9D 008C
        gbc.setState(0x2dcc, 0xc4a6, 0xffe0, 0xa004, 0x3956, 0x7b33, 0x0, 0x1);
        gbc.writeMem(0x2dcc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc4a6, gbc.sp());
        EXPECT(0x2dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 008D
        gbc.setState(0x9711, 0x564d, 0x41a0, 0x5d79, 0xad78, 0x7730, 0x1, 0x0);
        gbc.writeMem(0x9711, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x564d, gbc.sp());
        EXPECT(0x9713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9711));
        EXPECT(0x9d, gbc.readMem(0x9712));
        // CB 9D 008E
        gbc.setState(0x93b0, 0x381c, 0x4b40, 0xdbe5, 0xf1c7, 0x7936, 0x1, 0x1);
        gbc.writeMem(0x93b0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x381c, gbc.sp());
        EXPECT(0x93b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b0));
        EXPECT(0x9d, gbc.readMem(0x93b1));
        // CB 9D 008F
        gbc.setState(0x8ce, 0x764c, 0xe920, 0xbf6b, 0xcb62, 0x5f6a, 0x0, 0x1);
        gbc.writeMem(0x8ce, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x764c, gbc.sp());
        EXPECT(0x8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0090
        gbc.setState(0xd0b6, 0xfd4a, 0xfa20, 0xa3c7, 0x4bfb, 0x9a53, 0x0, 0x0);
        gbc.writeMem(0xd0b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfd4a, gbc.sp());
        EXPECT(0xd0b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b6));
        EXPECT(0x9d, gbc.readMem(0xd0b7));
        // CB 9D 0091
        gbc.setState(0xbd12, 0x82dd, 0xf380, 0xe3f2, 0xd01d, 0x431f, 0x0, 0x1);
        gbc.writeMem(0xbd12, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x82dd, gbc.sp());
        EXPECT(0xbd14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd12));
        EXPECT(0x9d, gbc.readMem(0xbd13));
        // CB 9D 0092
        gbc.setState(0x4694, 0x9b80, 0x27e0, 0xa404, 0xfb5, 0x25e, 0x0, 0x1);
        gbc.writeMem(0x4694, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9b80, gbc.sp());
        EXPECT(0x4696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0093
        gbc.setState(0xbaba, 0xf9f, 0x4430, 0xe932, 0x81d2, 0x720f, 0x1, 0x1);
        gbc.writeMem(0xbaba, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf9f, gbc.sp());
        EXPECT(0xbabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaba));
        EXPECT(0x9d, gbc.readMem(0xbabb));
        // CB 9D 0094
        gbc.setState(0x30d9, 0xf101, 0x5990, 0xbcdb, 0x9710, 0x216a, 0x1, 0x0);
        gbc.writeMem(0x30d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf101, gbc.sp());
        EXPECT(0x30db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0096
        gbc.setState(0x8be9, 0x2397, 0xfb60, 0x5aa9, 0xd3e8, 0x8d51, 0x1, 0x1);
        gbc.writeMem(0x8be9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2397, gbc.sp());
        EXPECT(0x8beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be9));
        EXPECT(0x9d, gbc.readMem(0x8bea));
        // CB 9D 0097
        gbc.setState(0x8cb3, 0xbed, 0x9d80, 0x91ef, 0x4ed2, 0xd507, 0x0, 0x1);
        gbc.writeMem(0x8cb3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbed, gbc.sp());
        EXPECT(0x8cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb3));
        EXPECT(0x9d, gbc.readMem(0x8cb4));
        // CB 9D 0098
        gbc.setState(0x4c2c, 0x37a5, 0x2f60, 0xb59a, 0x312, 0x1cac, 0x1, 0x1);
        gbc.writeMem(0x4c2c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x37a5, gbc.sp());
        EXPECT(0x4c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0099
        gbc.setState(0x57f7, 0x334c, 0x2150, 0xe749, 0x55d7, 0x4b5c, 0x0, 0x0);
        gbc.writeMem(0x57f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x334c, gbc.sp());
        EXPECT(0x57f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 009A
        gbc.setState(0x8bfb, 0x800f, 0x1320, 0xb6d1, 0x9a3d, 0xa751, 0x1, 0x0);
        gbc.writeMem(0x8bfb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x800f, gbc.sp());
        EXPECT(0x8bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfb));
        EXPECT(0x9d, gbc.readMem(0x8bfc));
        // CB 9D 009B
        gbc.setState(0x4600, 0xfdcd, 0xabc0, 0x10d8, 0xe347, 0xa187, 0x1, 0x0);
        gbc.writeMem(0x4600, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfdcd, gbc.sp());
        EXPECT(0x4602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 009C
        gbc.setState(0x25e3, 0x9eea, 0xe670, 0xd1d0, 0xf987, 0xe85, 0x1, 0x0);
        gbc.writeMem(0x25e3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9eea, gbc.sp());
        EXPECT(0x25e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 009D
        gbc.setState(0x4a90, 0xa06f, 0xe5c0, 0x2560, 0x3074, 0xb09a, 0x0, 0x0);
        gbc.writeMem(0x4a90, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa06f, gbc.sp());
        EXPECT(0x4a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 009E
        gbc.setState(0x79fc, 0xfacd, 0x7050, 0x7fba, 0x85b0, 0xb2f2, 0x0, 0x0);
        gbc.writeMem(0x79fc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfacd, gbc.sp());
        EXPECT(0x79fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 009F
        gbc.setState(0xbc73, 0xf13f, 0xdbf0, 0xcafb, 0xa2df, 0x10c5, 0x0, 0x1);
        gbc.writeMem(0xbc73, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf13f, gbc.sp());
        EXPECT(0xbc75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc73));
        EXPECT(0x9d, gbc.readMem(0xbc74));
        // CB 9D 00A0
        gbc.setState(0xcbec, 0xa93d, 0xf400, 0xecdf, 0x93d2, 0x4b2b, 0x1, 0x1);
        gbc.writeMem(0xcbec, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa93d, gbc.sp());
        EXPECT(0xcbee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbec));
        EXPECT(0x9d, gbc.readMem(0xcbed));
        // CB 9D 00A1
        gbc.setState(0x5e9b, 0x9129, 0xe500, 0x2cf2, 0x99b7, 0xed50, 0x1, 0x1);
        gbc.writeMem(0x5e9b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9129, gbc.sp());
        EXPECT(0x5e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00A2
        gbc.setState(0x3a0a, 0xbf67, 0xcbe0, 0x437d, 0xa549, 0x922, 0x1, 0x0);
        gbc.writeMem(0x3a0a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbf67, gbc.sp());
        EXPECT(0x3a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00A3
        gbc.setState(0x1cc1, 0x72df, 0xcf50, 0xf831, 0x6cdf, 0x7c14, 0x1, 0x1);
        gbc.writeMem(0x1cc1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x72df, gbc.sp());
        EXPECT(0x1cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00A4
        gbc.setState(0x3861, 0xdfa9, 0xb130, 0x3bfa, 0xa661, 0xca9f, 0x1, 0x1);
        gbc.writeMem(0x3861, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdfa9, gbc.sp());
        EXPECT(0x3863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00A5
        gbc.setState(0xa07c, 0x7748, 0xaf50, 0xa900, 0xfcc3, 0xec36, 0x0, 0x1);
        gbc.writeMem(0xa07c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7748, gbc.sp());
        EXPECT(0xa07e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa07c));
        EXPECT(0x9d, gbc.readMem(0xa07d));
        // CB 9D 00A6
        gbc.setState(0xb77a, 0x1d5c, 0x74d0, 0x5410, 0x49a1, 0xc866, 0x0, 0x0);
        gbc.writeMem(0xb77a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1d5c, gbc.sp());
        EXPECT(0xb77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77a));
        EXPECT(0x9d, gbc.readMem(0xb77b));
        // CB 9D 00A7
        gbc.setState(0x99a3, 0x1815, 0xe8e0, 0x72c0, 0x58af, 0xc69c, 0x0, 0x1);
        gbc.writeMem(0x99a3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1815, gbc.sp());
        EXPECT(0x99a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a3));
        EXPECT(0x9d, gbc.readMem(0x99a4));
        // CB 9D 00A8
        gbc.setState(0xcf0e, 0xe2da, 0x9650, 0x2061, 0xc962, 0xa471, 0x1, 0x0);
        gbc.writeMem(0xcf0e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe2da, gbc.sp());
        EXPECT(0xcf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf0e));
        EXPECT(0x9d, gbc.readMem(0xcf0f));
        // CB 9D 00A9
        gbc.setState(0xa257, 0x3219, 0x6240, 0x763, 0x242, 0x9693, 0x0, 0x0);
        gbc.writeMem(0xa257, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3219, gbc.sp());
        EXPECT(0xa259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa257));
        EXPECT(0x9d, gbc.readMem(0xa258));
        // CB 9D 00AA
        gbc.setState(0x62f0, 0x1865, 0xd10, 0x40d6, 0x9466, 0xa8d9, 0x1, 0x1);
        gbc.writeMem(0x62f0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1865, gbc.sp());
        EXPECT(0x62f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00AB
        gbc.setState(0x597b, 0x3fd5, 0xdf00, 0x87ca, 0xbc5a, 0xbef, 0x1, 0x0);
        gbc.writeMem(0x597b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3fd5, gbc.sp());
        EXPECT(0x597d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00AC
        gbc.setState(0xe9ff, 0xf4a, 0xf050, 0x13e4, 0xd794, 0x66c8, 0x0, 0x0);
        gbc.writeMem(0xe9ff, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf4a, gbc.sp());
        EXPECT(0xea01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ff));
        EXPECT(0x9d, gbc.readMem(0xea00));
        // CB 9D 00AD
        gbc.setState(0x47b7, 0x2ada, 0xcf70, 0x3446, 0x4ef6, 0x706b, 0x0, 0x1);
        gbc.writeMem(0x47b7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2ada, gbc.sp());
        EXPECT(0x47b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00AE
        gbc.setState(0x2330, 0x998b, 0x7850, 0x3a25, 0x3622, 0x438, 0x1, 0x1);
        gbc.writeMem(0x2330, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x998b, gbc.sp());
        EXPECT(0x2332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00AF
        gbc.setState(0x86c, 0xdf17, 0x1490, 0xadc6, 0xe3cb, 0x56d2, 0x0, 0x0);
        gbc.writeMem(0x86c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdf17, gbc.sp());
        EXPECT(0x86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00B0
        gbc.setState(0x3368, 0x6504, 0x4da0, 0xaccb, 0xa4c1, 0x836, 0x1, 0x1);
        gbc.writeMem(0x3368, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6504, gbc.sp());
        EXPECT(0x336a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00B1
        gbc.setState(0xcd28, 0xaed8, 0x8940, 0xa2c2, 0x3077, 0x5d0a, 0x1, 0x1);
        gbc.writeMem(0xcd28, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xaed8, gbc.sp());
        EXPECT(0xcd2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd28));
        EXPECT(0x9d, gbc.readMem(0xcd29));
        // CB 9D 00B2
        gbc.setState(0xc3cd, 0x7950, 0x6690, 0xb70f, 0xff98, 0x9263, 0x0, 0x0);
        gbc.writeMem(0xc3cd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7950, gbc.sp());
        EXPECT(0xc3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3cd));
        EXPECT(0x9d, gbc.readMem(0xc3ce));
        // CB 9D 00B3
        gbc.setState(0xb376, 0x25e1, 0xbb80, 0x135b, 0x49d7, 0xc8ba, 0x0, 0x1);
        gbc.writeMem(0xb376, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x25e1, gbc.sp());
        EXPECT(0xb378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb376));
        EXPECT(0x9d, gbc.readMem(0xb377));
        // CB 9D 00B4
        gbc.setState(0x15a9, 0x6d38, 0x1d30, 0x55a6, 0xb359, 0x3124, 0x1, 0x1);
        gbc.writeMem(0x15a9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6d38, gbc.sp());
        EXPECT(0x15ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00B5
        gbc.setState(0xc11b, 0xaa95, 0x3e70, 0xcea4, 0xb3eb, 0xcf1b, 0x1, 0x1);
        gbc.writeMem(0xc11b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaa95, gbc.sp());
        EXPECT(0xc11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11b));
        EXPECT(0x9d, gbc.readMem(0xc11c));
        // CB 9D 00B7
        gbc.setState(0xaf80, 0xd4b9, 0xebd0, 0xf4d7, 0x9c50, 0x4da9, 0x0, 0x1);
        gbc.writeMem(0xaf80, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd4b9, gbc.sp());
        EXPECT(0xaf82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf80));
        EXPECT(0x9d, gbc.readMem(0xaf81));
        // CB 9D 00B8
        gbc.setState(0x105, 0xc970, 0x53f0, 0x2125, 0x1a97, 0x48e0, 0x1, 0x1);
        gbc.writeMem(0x105, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc970, gbc.sp());
        EXPECT(0x107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00B9
        gbc.setState(0x741a, 0x8379, 0xe6e0, 0xa63, 0x9b0b, 0x2c8a, 0x1, 0x0);
        gbc.writeMem(0x741a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8379, gbc.sp());
        EXPECT(0x741c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00BA
        gbc.setState(0x7cf, 0xc219, 0x5eb0, 0x954e, 0x7b5f, 0x7936, 0x0, 0x1);
        gbc.writeMem(0x7cf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc219, gbc.sp());
        EXPECT(0x7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00BB
        gbc.setState(0xdfd0, 0xa59e, 0xd580, 0x200f, 0x5271, 0x25d5, 0x0, 0x1);
        gbc.writeMem(0xdfd0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa59e, gbc.sp());
        EXPECT(0xdfd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd0));
        EXPECT(0x9d, gbc.readMem(0xdfd1));
        // CB 9D 00BC
        gbc.setState(0xe549, 0xd74c, 0xd1c0, 0x38a0, 0x29bd, 0x407c, 0x0, 0x1);
        gbc.writeMem(0xe549, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd74c, gbc.sp());
        EXPECT(0xe54b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe549));
        EXPECT(0x9d, gbc.readMem(0xe54a));
        // CB 9D 00BE
        gbc.setState(0x37, 0xc803, 0x4a0, 0x8e3a, 0x4ccc, 0xb5cb, 0x0, 0x1);
        gbc.writeMem(0x37, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc803, gbc.sp());
        EXPECT(0x39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00BF
        gbc.setState(0x7662, 0x24ca, 0xc9b0, 0x6bb9, 0x7e0b, 0x2111, 0x1, 0x1);
        gbc.writeMem(0x7662, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x24ca, gbc.sp());
        EXPECT(0x7664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00C0
        gbc.setState(0xa703, 0x8ec4, 0xa010, 0x5279, 0x5bef, 0x7c44, 0x1, 0x0);
        gbc.writeMem(0xa703, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8ec4, gbc.sp());
        EXPECT(0xa705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa703));
        EXPECT(0x9d, gbc.readMem(0xa704));
        // CB 9D 00C2
        gbc.setState(0x4abb, 0xcd28, 0x61e0, 0x1343, 0x4b31, 0xa1b1, 0x1, 0x1);
        gbc.writeMem(0x4abb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcd28, gbc.sp());
        EXPECT(0x4abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00C3
        gbc.setState(0x545c, 0xac62, 0xf370, 0x3407, 0x2321, 0xdfa6, 0x1, 0x0);
        gbc.writeMem(0x545c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xac62, gbc.sp());
        EXPECT(0x545e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00C4
        gbc.setState(0x2842, 0xa1f3, 0x6ef0, 0x10a0, 0xff6e, 0x3814, 0x1, 0x0);
        gbc.writeMem(0x2842, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa1f3, gbc.sp());
        EXPECT(0x2844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00C5
        gbc.setState(0xe155, 0xa074, 0xebd0, 0xe2d1, 0x2db, 0x7fbc, 0x1, 0x1);
        gbc.writeMem(0xe155, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa074, gbc.sp());
        EXPECT(0xe157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe155));
        EXPECT(0x9d, gbc.readMem(0xe156));
        // CB 9D 00C7
        gbc.setState(0x8340, 0x2788, 0x4670, 0x2efc, 0xc937, 0xfecd, 0x0, 0x1);
        gbc.writeMem(0x8340, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2788, gbc.sp());
        EXPECT(0x8342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8340));
        EXPECT(0x9d, gbc.readMem(0x8341));
        // CB 9D 00C9
        gbc.setState(0x66b5, 0x58fb, 0x6050, 0xe68b, 0xaae, 0xe37e, 0x0, 0x0);
        gbc.writeMem(0x66b5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x58fb, gbc.sp());
        EXPECT(0x66b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00CA
        gbc.setState(0x4200, 0xa248, 0xe5d0, 0x4a07, 0x10b3, 0x1220, 0x0, 0x0);
        gbc.writeMem(0x4200, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa248, gbc.sp());
        EXPECT(0x4202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00CC
        gbc.setState(0xd5e6, 0xb96d, 0x3830, 0x2029, 0x5034, 0x3d7e, 0x1, 0x0);
        gbc.writeMem(0xd5e6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb96d, gbc.sp());
        EXPECT(0xd5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e6));
        EXPECT(0x9d, gbc.readMem(0xd5e7));
        // CB 9D 00CD
        gbc.setState(0x1b25, 0x10f3, 0x8d30, 0xf9dd, 0xdac1, 0xd29b, 0x0, 0x1);
        gbc.writeMem(0x1b25, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x10f3, gbc.sp());
        EXPECT(0x1b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00CE
        gbc.setState(0xa82c, 0xc866, 0x26c0, 0x119a, 0xb586, 0x7b25, 0x0, 0x1);
        gbc.writeMem(0xa82c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc866, gbc.sp());
        EXPECT(0xa82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82c));
        EXPECT(0x9d, gbc.readMem(0xa82d));
        // CB 9D 00D0
        gbc.setState(0xc391, 0x46a4, 0x9690, 0x4968, 0xb7f1, 0xbf98, 0x0, 0x1);
        gbc.writeMem(0xc391, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x46a4, gbc.sp());
        EXPECT(0xc393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc391));
        EXPECT(0x9d, gbc.readMem(0xc392));
        // CB 9D 00D1
        gbc.setState(0x5d87, 0x55a7, 0x2620, 0x9363, 0xbce8, 0xd386, 0x1, 0x0);
        gbc.writeMem(0x5d87, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x55a7, gbc.sp());
        EXPECT(0x5d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00D2
        gbc.setState(0xeb54, 0x8a1a, 0xff60, 0xae88, 0x533d, 0x4ef3, 0x0, 0x0);
        gbc.writeMem(0xeb54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8a1a, gbc.sp());
        EXPECT(0xeb56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb54));
        EXPECT(0x9d, gbc.readMem(0xeb55));
        // CB 9D 00D3
        gbc.setState(0xeb7e, 0x75b5, 0x8230, 0x48d6, 0x4965, 0x44d0, 0x1, 0x0);
        gbc.writeMem(0xeb7e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x75b5, gbc.sp());
        EXPECT(0xeb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7e));
        EXPECT(0x9d, gbc.readMem(0xeb7f));
        // CB 9D 00D4
        gbc.setState(0x1748, 0xb3ce, 0x6ed0, 0x27dc, 0xc808, 0x10f4, 0x0, 0x0);
        gbc.writeMem(0x1748, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb3ce, gbc.sp());
        EXPECT(0x174a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00D5
        gbc.setState(0x8333, 0x97e9, 0x6c90, 0x241, 0x8add, 0xb853, 0x1, 0x1);
        gbc.writeMem(0x8333, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x97e9, gbc.sp());
        EXPECT(0x8335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8333));
        EXPECT(0x9d, gbc.readMem(0x8334));
        // CB 9D 00D7
        gbc.setState(0xbbea, 0xbaf9, 0x67c0, 0x2ec7, 0xbee9, 0x1a12, 0x0, 0x0);
        gbc.writeMem(0xbbea, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbaf9, gbc.sp());
        EXPECT(0xbbec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbea));
        EXPECT(0x9d, gbc.readMem(0xbbeb));
        // CB 9D 00D8
        gbc.setState(0x2355, 0xfe07, 0x8690, 0x56e9, 0xfbed, 0xf4e2, 0x0, 0x0);
        gbc.writeMem(0x2355, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfe07, gbc.sp());
        EXPECT(0x2357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00D9
        gbc.setState(0x64e3, 0x5512, 0x8a30, 0x9156, 0xbb48, 0x3181, 0x0, 0x0);
        gbc.writeMem(0x64e3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5512, gbc.sp());
        EXPECT(0x64e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00DA
        gbc.setState(0xab07, 0x551, 0x85b0, 0x25ee, 0x6a56, 0x3bfa, 0x0, 0x0);
        gbc.writeMem(0xab07, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x551, gbc.sp());
        EXPECT(0xab09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab07));
        EXPECT(0x9d, gbc.readMem(0xab08));
        // CB 9D 00DB
        gbc.setState(0x5f52, 0xe0f5, 0xa310, 0xf98a, 0xda07, 0x3a51, 0x1, 0x0);
        gbc.writeMem(0x5f52, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe0f5, gbc.sp());
        EXPECT(0x5f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00DD
        gbc.setState(0xcc2d, 0xb5d6, 0xb8e0, 0x3fe5, 0xfbff, 0xace9, 0x0, 0x0);
        gbc.writeMem(0xcc2d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb5d6, gbc.sp());
        EXPECT(0xcc2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2d));
        EXPECT(0x9d, gbc.readMem(0xcc2e));
        // CB 9D 00DE
        gbc.setState(0x28f9, 0x76, 0xf2b0, 0x6c22, 0xf488, 0xba90, 0x0, 0x1);
        gbc.writeMem(0x28f9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x76, gbc.sp());
        EXPECT(0x28fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00DF
        gbc.setState(0xd370, 0xe3b6, 0x3170, 0x2547, 0x2fc9, 0xdf09, 0x0, 0x1);
        gbc.writeMem(0xd370, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe3b6, gbc.sp());
        EXPECT(0xd372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd370));
        EXPECT(0x9d, gbc.readMem(0xd371));
        // CB 9D 00E0
        gbc.setState(0x9c00, 0x1d26, 0x6140, 0x37b7, 0xd3cb, 0x4919, 0x1, 0x0);
        gbc.writeMem(0x9c00, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1d26, gbc.sp());
        EXPECT(0x9c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c00));
        EXPECT(0x9d, gbc.readMem(0x9c01));
        // CB 9D 00E1
        gbc.setState(0x4beb, 0x34cf, 0xfa80, 0x1955, 0x953f, 0xdf55, 0x1, 0x1);
        gbc.writeMem(0x4beb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x34cf, gbc.sp());
        EXPECT(0x4bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00E2
        gbc.setState(0xaaa7, 0x9a94, 0xaae0, 0xf1b8, 0xd32b, 0xac60, 0x0, 0x0);
        gbc.writeMem(0xaaa7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9a94, gbc.sp());
        EXPECT(0xaaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa7));
        EXPECT(0x9d, gbc.readMem(0xaaa8));
        // CB 9D 00E3
        gbc.setState(0xdc29, 0x6f80, 0xeb30, 0x1b82, 0x46d0, 0x25c4, 0x1, 0x1);
        gbc.writeMem(0xdc29, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6f80, gbc.sp());
        EXPECT(0xdc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc29));
        EXPECT(0x9d, gbc.readMem(0xdc2a));
        // CB 9D 00E4
        gbc.setState(0x7ffa, 0xfa1, 0x8ec0, 0x91d6, 0x59f8, 0x9562, 0x0, 0x0);
        gbc.writeMem(0x7ffa, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfa1, gbc.sp());
        EXPECT(0x7ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00E5
        gbc.setState(0xc46, 0xcc1f, 0x5490, 0x354e, 0x67ab, 0xe9dd, 0x1, 0x1);
        gbc.writeMem(0xc46, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcc1f, gbc.sp());
        EXPECT(0xc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00E6
        gbc.setState(0xbacc, 0x6e28, 0x9590, 0xb59f, 0x2450, 0x8e84, 0x0, 0x0);
        gbc.writeMem(0xbacc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6e28, gbc.sp());
        EXPECT(0xbace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbacc));
        EXPECT(0x9d, gbc.readMem(0xbacd));
        // CB 9D 00E8
        gbc.setState(0x682c, 0xf341, 0x2520, 0xa8c3, 0x29a4, 0x7118, 0x0, 0x1);
        gbc.writeMem(0x682c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf341, gbc.sp());
        EXPECT(0x682e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00E9
        gbc.setState(0xa308, 0x29f3, 0x5a40, 0x69b0, 0x3aaf, 0x3503, 0x1, 0x1);
        gbc.writeMem(0xa308, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x29f3, gbc.sp());
        EXPECT(0xa30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa308));
        EXPECT(0x9d, gbc.readMem(0xa309));
        // CB 9D 00EA
        gbc.setState(0xc0e6, 0x2e9, 0x80, 0x463, 0xab7e, 0x8bb7, 0x1, 0x0);
        gbc.writeMem(0xc0e6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2e9, gbc.sp());
        EXPECT(0xc0e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e6));
        EXPECT(0x9d, gbc.readMem(0xc0e7));
        // CB 9D 00EB
        gbc.setState(0x3ff5, 0x321d, 0x8660, 0x6123, 0xe1b3, 0x8dea, 0x0, 0x1);
        gbc.writeMem(0x3ff5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x321d, gbc.sp());
        EXPECT(0x3ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00EC
        gbc.setState(0x5c00, 0x1bc6, 0x7340, 0x6854, 0x98fc, 0xdf54, 0x0, 0x1);
        gbc.writeMem(0x5c00, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1bc6, gbc.sp());
        EXPECT(0x5c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00ED
        gbc.setState(0x4476, 0xf245, 0x1d10, 0x621b, 0x56c, 0xbf08, 0x0, 0x0);
        gbc.writeMem(0x4476, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf245, gbc.sp());
        EXPECT(0x4478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00EE
        gbc.setState(0x64cb, 0xafc6, 0x1970, 0x328, 0x3d32, 0xaf55, 0x1, 0x0);
        gbc.writeMem(0x64cb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xafc6, gbc.sp());
        EXPECT(0x64cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00EF
        gbc.setState(0xfe7, 0x3aa7, 0x6370, 0x3d79, 0xb1f6, 0x8999, 0x1, 0x1);
        gbc.writeMem(0xfe7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3aa7, gbc.sp());
        EXPECT(0xfe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00F0
        gbc.setState(0xc99f, 0xe73a, 0xba0, 0x5348, 0x84de, 0xc5c5, 0x1, 0x0);
        gbc.writeMem(0xc99f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe73a, gbc.sp());
        EXPECT(0xc9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99f));
        EXPECT(0x9d, gbc.readMem(0xc9a0));
        // CB 9D 00F2
        gbc.setState(0x8b0f, 0xf45f, 0xcf0, 0xa813, 0xd945, 0x2692, 0x1, 0x0);
        gbc.writeMem(0x8b0f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf45f, gbc.sp());
        EXPECT(0x8b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0f));
        EXPECT(0x9d, gbc.readMem(0x8b10));
        // CB 9D 00F3
        gbc.setState(0x4c11, 0x332b, 0x7680, 0xa662, 0xc725, 0xe9e5, 0x1, 0x0);
        gbc.writeMem(0x4c11, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x332b, gbc.sp());
        EXPECT(0x4c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00F4
        gbc.setState(0x2b65, 0x470e, 0xfaa0, 0xc945, 0xb632, 0x9d2b, 0x0, 0x1);
        gbc.writeMem(0x2b65, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x470e, gbc.sp());
        EXPECT(0x2b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00F5
        gbc.setState(0x458c, 0xbb37, 0xa190, 0x2948, 0x8515, 0xa012, 0x1, 0x0);
        gbc.writeMem(0x458c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbb37, gbc.sp());
        EXPECT(0x458e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00F6
        gbc.setState(0x4536, 0xd899, 0xd80, 0x4d02, 0xaca, 0xa33d, 0x0, 0x1);
        gbc.writeMem(0x4536, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd899, gbc.sp());
        EXPECT(0x4538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00F7
        gbc.setState(0x9363, 0xf7a0, 0x9ed0, 0xdbc4, 0xad84, 0x6721, 0x1, 0x1);
        gbc.writeMem(0x9363, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf7a0, gbc.sp());
        EXPECT(0x9365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9363));
        EXPECT(0x9d, gbc.readMem(0x9364));
        // CB 9D 00F8
        gbc.setState(0x27df, 0x2a1e, 0x8970, 0x9ae3, 0x1427, 0x73da, 0x0, 0x1);
        gbc.writeMem(0x27df, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2a1e, gbc.sp());
        EXPECT(0x27e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00F9
        gbc.setState(0xa4f4, 0xcd50, 0x5c20, 0x5489, 0xbae9, 0x60aa, 0x0, 0x0);
        gbc.writeMem(0xa4f4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcd50, gbc.sp());
        EXPECT(0xa4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f4));
        EXPECT(0x9d, gbc.readMem(0xa4f5));
        // CB 9D 00FA
        gbc.setState(0x2db4, 0xc38a, 0x20f0, 0x9e15, 0x3bb9, 0x404b, 0x0, 0x1);
        gbc.writeMem(0x2db4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc38a, gbc.sp());
        EXPECT(0x2db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00FB
        gbc.setState(0x4c93, 0xabde, 0x6a0, 0xdec9, 0x95b5, 0x300d, 0x1, 0x1);
        gbc.writeMem(0x4c93, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xabde, gbc.sp());
        EXPECT(0x4c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00FC
        gbc.setState(0x7d5c, 0xcaf0, 0xd070, 0xa975, 0x6eee, 0x6144, 0x1, 0x0);
        gbc.writeMem(0x7d5c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcaf0, gbc.sp());
        EXPECT(0x7d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 00FD
        gbc.setState(0x13ab, 0xedc0, 0x7800, 0x8859, 0xb685, 0x8fb5, 0x1, 0x0);
        gbc.writeMem(0x13ab, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xedc0, gbc.sp());
        EXPECT(0x13ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00FE
        gbc.setState(0x2df7, 0x6547, 0x5de0, 0x3e14, 0xae88, 0x9cad, 0x1, 0x0);
        gbc.writeMem(0x2df7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6547, gbc.sp());
        EXPECT(0x2df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 00FF
        gbc.setState(0x1d96, 0x4e4f, 0xeef0, 0x9b26, 0xd32, 0x42dc, 0x1, 0x1);
        gbc.writeMem(0x1d96, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4e4f, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0100
        gbc.setState(0xcf04, 0x4447, 0x6090, 0x4528, 0xbe3d, 0x412c, 0x0, 0x0);
        gbc.writeMem(0xcf04, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4447, gbc.sp());
        EXPECT(0xcf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf04));
        EXPECT(0x9d, gbc.readMem(0xcf05));
        // CB 9D 0101
        gbc.setState(0x6355, 0x3c57, 0xdf20, 0x4051, 0x8718, 0xa37c, 0x1, 0x1);
        gbc.writeMem(0x6355, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3c57, gbc.sp());
        EXPECT(0x6357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0102
        gbc.setState(0x8fe6, 0x26e0, 0x2020, 0x50da, 0xc154, 0x20c5, 0x1, 0x0);
        gbc.writeMem(0x8fe6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x26e0, gbc.sp());
        EXPECT(0x8fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe6));
        EXPECT(0x9d, gbc.readMem(0x8fe7));
        // CB 9D 0103
        gbc.setState(0x63b, 0xb64b, 0xe220, 0x95e3, 0x1fdf, 0x9bcb, 0x0, 0x1);
        gbc.writeMem(0x63b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb64b, gbc.sp());
        EXPECT(0x63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0104
        gbc.setState(0x1a0a, 0x6a6f, 0x69f0, 0x540a, 0xefb3, 0xeaf1, 0x1, 0x0);
        gbc.writeMem(0x1a0a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6a6f, gbc.sp());
        EXPECT(0x1a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0105
        gbc.setState(0xa83b, 0xf034, 0xcbd0, 0x36a8, 0xd8be, 0x8f0d, 0x1, 0x0);
        gbc.writeMem(0xa83b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf034, gbc.sp());
        EXPECT(0xa83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83b));
        EXPECT(0x9d, gbc.readMem(0xa83c));
        // CB 9D 0106
        gbc.setState(0x5c71, 0x662d, 0xa170, 0x89fb, 0xe6c9, 0x5ea8, 0x1, 0x1);
        gbc.writeMem(0x5c71, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x662d, gbc.sp());
        EXPECT(0x5c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0107
        gbc.setState(0xadec, 0x7ec6, 0x4270, 0xc636, 0x39fe, 0xb091, 0x0, 0x0);
        gbc.writeMem(0xadec, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7ec6, gbc.sp());
        EXPECT(0xadee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadec));
        EXPECT(0x9d, gbc.readMem(0xaded));
        // CB 9D 0108
        gbc.setState(0x12e, 0x762d, 0x9750, 0xe2ac, 0x8a6a, 0xefc1, 0x0, 0x0);
        gbc.writeMem(0x12e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x762d, gbc.sp());
        EXPECT(0x130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0109
        gbc.setState(0x1921, 0xce57, 0xc680, 0x2c1f, 0x8adc, 0x7e87, 0x1, 0x1);
        gbc.writeMem(0x1921, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xce57, gbc.sp());
        EXPECT(0x1923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 010A
        gbc.setState(0xb4eb, 0xb945, 0x7390, 0x8bfb, 0x9a27, 0x52c1, 0x1, 0x0);
        gbc.writeMem(0xb4eb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb945, gbc.sp());
        EXPECT(0xb4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4eb));
        EXPECT(0x9d, gbc.readMem(0xb4ec));
        // CB 9D 010B
        gbc.setState(0x6a5d, 0x9a02, 0x1fa0, 0x546d, 0x3a4b, 0x1712, 0x1, 0x0);
        gbc.writeMem(0x6a5d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9a02, gbc.sp());
        EXPECT(0x6a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 010C
        gbc.setState(0x84d3, 0xe92d, 0xd070, 0x9008, 0x387, 0xf96c, 0x1, 0x0);
        gbc.writeMem(0x84d3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe92d, gbc.sp());
        EXPECT(0x84d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d3));
        EXPECT(0x9d, gbc.readMem(0x84d4));
        // CB 9D 010D
        gbc.setState(0x8d69, 0xc8f3, 0x2e60, 0xf59b, 0x90ae, 0x7e32, 0x0, 0x1);
        gbc.writeMem(0x8d69, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc8f3, gbc.sp());
        EXPECT(0x8d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d69));
        EXPECT(0x9d, gbc.readMem(0x8d6a));
        // CB 9D 010E
        gbc.setState(0x55fe, 0x5075, 0x450, 0xeb6c, 0xb7ae, 0xd10e, 0x1, 0x0);
        gbc.writeMem(0x55fe, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5075, gbc.sp());
        EXPECT(0x5600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 010F
        gbc.setState(0x99e2, 0x50e, 0x3c0, 0xf35c, 0x22f8, 0xd836, 0x1, 0x1);
        gbc.writeMem(0x99e2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x50e, gbc.sp());
        EXPECT(0x99e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e2));
        EXPECT(0x9d, gbc.readMem(0x99e3));
        // CB 9D 0110
        gbc.setState(0x1e68, 0x63d, 0x6c20, 0x1995, 0x2f73, 0xe295, 0x1, 0x0);
        gbc.writeMem(0x1e68, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x63d, gbc.sp());
        EXPECT(0x1e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0111
        gbc.setState(0x8a54, 0x25bd, 0x4be0, 0x875, 0x5ec9, 0x691a, 0x0, 0x1);
        gbc.writeMem(0x8a54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x25bd, gbc.sp());
        EXPECT(0x8a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a54));
        EXPECT(0x9d, gbc.readMem(0x8a55));
        // CB 9D 0112
        gbc.setState(0xd4ac, 0xf31d, 0x48b0, 0xd8b6, 0x1a4c, 0x6ef, 0x0, 0x1);
        gbc.writeMem(0xd4ac, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf31d, gbc.sp());
        EXPECT(0xd4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ac));
        EXPECT(0x9d, gbc.readMem(0xd4ad));
        // CB 9D 0113
        gbc.setState(0xe39b, 0xb367, 0xe4c0, 0x72a6, 0xbdf3, 0xbadb, 0x0, 0x1);
        gbc.writeMem(0xe39b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb367, gbc.sp());
        EXPECT(0xe39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39b));
        EXPECT(0x9d, gbc.readMem(0xe39c));
        // CB 9D 0116
        gbc.setState(0x8940, 0x716, 0x72c0, 0x5500, 0x2d9b, 0x37e0, 0x0, 0x0);
        gbc.writeMem(0x8940, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x716, gbc.sp());
        EXPECT(0x8942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8940));
        EXPECT(0x9d, gbc.readMem(0x8941));
        // CB 9D 0117
        gbc.setState(0xc683, 0xd409, 0xcd40, 0x1156, 0x7d6, 0x5596, 0x1, 0x0);
        gbc.writeMem(0xc683, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd409, gbc.sp());
        EXPECT(0xc685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc683));
        EXPECT(0x9d, gbc.readMem(0xc684));
        // CB 9D 0118
        gbc.setState(0xcebc, 0x6da9, 0x62d0, 0xc5aa, 0xf424, 0xf041, 0x1, 0x0);
        gbc.writeMem(0xcebc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6da9, gbc.sp());
        EXPECT(0xcebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcebc));
        EXPECT(0x9d, gbc.readMem(0xcebd));
        // CB 9D 0119
        gbc.setState(0xb955, 0x7932, 0x95b0, 0x5422, 0x8883, 0x89dc, 0x0, 0x0);
        gbc.writeMem(0xb955, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7932, gbc.sp());
        EXPECT(0xb957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb955));
        EXPECT(0x9d, gbc.readMem(0xb956));
        // CB 9D 011B
        gbc.setState(0xcc98, 0x2895, 0xdbc0, 0xd202, 0x7f39, 0xb8d3, 0x0, 0x1);
        gbc.writeMem(0xcc98, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2895, gbc.sp());
        EXPECT(0xcc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc98));
        EXPECT(0x9d, gbc.readMem(0xcc99));
        // CB 9D 011C
        gbc.setState(0x19fb, 0x9e3b, 0xd2b0, 0x7e97, 0xfa97, 0x4639, 0x1, 0x0);
        gbc.writeMem(0x19fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9e3b, gbc.sp());
        EXPECT(0x19fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 011E
        gbc.setState(0x7673, 0xf659, 0x90f0, 0xa840, 0x8c04, 0x3cab, 0x1, 0x0);
        gbc.writeMem(0x7673, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf659, gbc.sp());
        EXPECT(0x7675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0120
        gbc.setState(0x130f, 0xe91d, 0x4420, 0x3c9f, 0xde50, 0x8d5c, 0x0, 0x0);
        gbc.writeMem(0x130f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe91d, gbc.sp());
        EXPECT(0x1311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0121
        gbc.setState(0x5f33, 0x450, 0x4720, 0x19f9, 0xe5dd, 0x7c1a, 0x1, 0x1);
        gbc.writeMem(0x5f33, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x450, gbc.sp());
        EXPECT(0x5f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0122
        gbc.setState(0x34bd, 0xd781, 0xbcd0, 0x1c4b, 0x1190, 0x67e, 0x0, 0x1);
        gbc.writeMem(0x34bd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd781, gbc.sp());
        EXPECT(0x34bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0123
        gbc.setState(0x104a, 0x4e59, 0xe120, 0x30d7, 0xdb54, 0x22e9, 0x1, 0x0);
        gbc.writeMem(0x104a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4e59, gbc.sp());
        EXPECT(0x104c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0124
        gbc.setState(0x9379, 0x4b6a, 0xcc10, 0xf183, 0x22cb, 0x9183, 0x0, 0x0);
        gbc.writeMem(0x9379, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4b6a, gbc.sp());
        EXPECT(0x937b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9379));
        EXPECT(0x9d, gbc.readMem(0x937a));
        // CB 9D 0125
        gbc.setState(0xc610, 0xd33b, 0x42e0, 0xae73, 0x1bd8, 0x70e9, 0x0, 0x1);
        gbc.writeMem(0xc610, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd33b, gbc.sp());
        EXPECT(0xc612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc610));
        EXPECT(0x9d, gbc.readMem(0xc611));
        // CB 9D 0126
        gbc.setState(0x2cf8, 0x57b9, 0x8e70, 0x225f, 0xca9d, 0xdad3, 0x0, 0x0);
        gbc.writeMem(0x2cf8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x57b9, gbc.sp());
        EXPECT(0x2cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0127
        gbc.setState(0x7424, 0xa498, 0xaa30, 0xe050, 0x63c6, 0xd375, 0x0, 0x1);
        gbc.writeMem(0x7424, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa498, gbc.sp());
        EXPECT(0x7426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0128
        gbc.setState(0x4ac2, 0xd64f, 0xaec0, 0xefc, 0xf240, 0x25b8, 0x0, 0x1);
        gbc.writeMem(0x4ac2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd64f, gbc.sp());
        EXPECT(0x4ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0129
        gbc.setState(0x45a5, 0xe641, 0xca80, 0x75b1, 0xc23d, 0xc937, 0x0, 0x1);
        gbc.writeMem(0x45a5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe641, gbc.sp());
        EXPECT(0x45a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 012A
        gbc.setState(0x26e8, 0xe767, 0x7c60, 0xc906, 0x710c, 0x33bc, 0x1, 0x1);
        gbc.writeMem(0x26e8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe767, gbc.sp());
        EXPECT(0x26ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 012B
        gbc.setState(0x5964, 0xdd07, 0x24c0, 0xc024, 0xb83f, 0x4833, 0x0, 0x0);
        gbc.writeMem(0x5964, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdd07, gbc.sp());
        EXPECT(0x5966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 012C
        gbc.setState(0x7d06, 0x2359, 0x80d0, 0x43aa, 0xa158, 0x8367, 0x0, 0x1);
        gbc.writeMem(0x7d06, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2359, gbc.sp());
        EXPECT(0x7d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 012D
        gbc.setState(0x4fec, 0x2871, 0xffc0, 0x4fad, 0xb3d8, 0xac69, 0x0, 0x1);
        gbc.writeMem(0x4fec, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2871, gbc.sp());
        EXPECT(0x4fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 012E
        gbc.setState(0x6521, 0xbb77, 0x4ec0, 0x53eb, 0x8239, 0x9987, 0x1, 0x1);
        gbc.writeMem(0x6521, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbb77, gbc.sp());
        EXPECT(0x6523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 012F
        gbc.setState(0x1f0a, 0x2f4c, 0x9840, 0x39b5, 0x3104, 0x35f0, 0x1, 0x0);
        gbc.writeMem(0x1f0a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2f4c, gbc.sp());
        EXPECT(0x1f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0131
        gbc.setState(0xbf3, 0x399a, 0xe340, 0x4306, 0x62df, 0x54e2, 0x1, 0x0);
        gbc.writeMem(0xbf3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x399a, gbc.sp());
        EXPECT(0xbf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0132
        gbc.setState(0xe619, 0xa5a3, 0x5470, 0x36d1, 0xbad4, 0x90b0, 0x0, 0x0);
        gbc.writeMem(0xe619, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa5a3, gbc.sp());
        EXPECT(0xe61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe619));
        EXPECT(0x9d, gbc.readMem(0xe61a));
        // CB 9D 0134
        gbc.setState(0x1809, 0x3d7d, 0x8680, 0x409e, 0x4ce0, 0x8683, 0x0, 0x0);
        gbc.writeMem(0x1809, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3d7d, gbc.sp());
        EXPECT(0x180b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0135
        gbc.setState(0x3b1b, 0x22d1, 0x5580, 0x5802, 0x1245, 0xe479, 0x1, 0x0);
        gbc.writeMem(0x3b1b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x22d1, gbc.sp());
        EXPECT(0x3b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0136
        gbc.setState(0x9413, 0xba94, 0xe410, 0x31a6, 0x3edc, 0x7e2f, 0x1, 0x0);
        gbc.writeMem(0x9413, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xba94, gbc.sp());
        EXPECT(0x9415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9413));
        EXPECT(0x9d, gbc.readMem(0x9414));
        // CB 9D 0137
        gbc.setState(0x4b53, 0x62a2, 0x7020, 0x6fb2, 0x4529, 0xa39e, 0x0, 0x1);
        gbc.writeMem(0x4b53, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x62a2, gbc.sp());
        EXPECT(0x4b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0138
        gbc.setState(0xe66f, 0xe33, 0xc330, 0x7276, 0x190f, 0x2683, 0x0, 0x1);
        gbc.writeMem(0xe66f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe33, gbc.sp());
        EXPECT(0xe671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66f));
        EXPECT(0x9d, gbc.readMem(0xe670));
        // CB 9D 0139
        gbc.setState(0x7b63, 0x1cb6, 0xf260, 0x81e2, 0xb29d, 0x3fa6, 0x1, 0x0);
        gbc.writeMem(0x7b63, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1cb6, gbc.sp());
        EXPECT(0x7b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 013A
        gbc.setState(0x4278, 0x2ea6, 0x7650, 0x8401, 0x33d3, 0x6916, 0x1, 0x0);
        gbc.writeMem(0x4278, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2ea6, gbc.sp());
        EXPECT(0x427a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 013B
        gbc.setState(0x5546, 0x7ca0, 0x66a0, 0x4819, 0x4318, 0xb9d6, 0x0, 0x0);
        gbc.writeMem(0x5546, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7ca0, gbc.sp());
        EXPECT(0x5548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 013C
        gbc.setState(0x8a6e, 0x7f9f, 0x9da0, 0xc2e4, 0xb1d2, 0xbe04, 0x1, 0x0);
        gbc.writeMem(0x8a6e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7f9f, gbc.sp());
        EXPECT(0x8a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6e));
        EXPECT(0x9d, gbc.readMem(0x8a6f));
        // CB 9D 013E
        gbc.setState(0x487e, 0xf149, 0x5700, 0x77a1, 0x360a, 0x6df3, 0x0, 0x0);
        gbc.writeMem(0x487e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf149, gbc.sp());
        EXPECT(0x4880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 013F
        gbc.setState(0x912, 0xdfb8, 0xdb90, 0xcf94, 0xb600, 0x52a, 0x0, 0x0);
        gbc.writeMem(0x912, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdfb8, gbc.sp());
        EXPECT(0x914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0140
        gbc.setState(0x9ca, 0xacd0, 0x3700, 0x6f79, 0xa34a, 0xe707, 0x1, 0x0);
        gbc.writeMem(0x9ca, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xacd0, gbc.sp());
        EXPECT(0x9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0141
        gbc.setState(0x90b0, 0x6999, 0x9a0, 0xfd5d, 0x2eb4, 0xd7e1, 0x0, 0x1);
        gbc.writeMem(0x90b0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6999, gbc.sp());
        EXPECT(0x90b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b0));
        EXPECT(0x9d, gbc.readMem(0x90b1));
        // CB 9D 0142
        gbc.setState(0x365f, 0xddb, 0x5c10, 0x7c52, 0x7f12, 0x4a4d, 0x1, 0x0);
        gbc.writeMem(0x365f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xddb, gbc.sp());
        EXPECT(0x3661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0143
        gbc.setState(0xdf32, 0xd622, 0xf800, 0x5a09, 0x5c08, 0x935e, 0x0, 0x0);
        gbc.writeMem(0xdf32, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd622, gbc.sp());
        EXPECT(0xdf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf32));
        EXPECT(0x9d, gbc.readMem(0xdf33));
        // CB 9D 0144
        gbc.setState(0x4faf, 0x635, 0xbbd0, 0x64cf, 0x3a66, 0x1da, 0x0, 0x1);
        gbc.writeMem(0x4faf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x635, gbc.sp());
        EXPECT(0x4fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0145
        gbc.setState(0x7c1f, 0x6f65, 0xb150, 0xd476, 0x9cf3, 0x4e2, 0x0, 0x0);
        gbc.writeMem(0x7c1f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6f65, gbc.sp());
        EXPECT(0x7c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0146
        gbc.setState(0xa8dd, 0x20db, 0x7d30, 0x6675, 0x228e, 0x34dc, 0x0, 0x1);
        gbc.writeMem(0xa8dd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x20db, gbc.sp());
        EXPECT(0xa8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8dd));
        EXPECT(0x9d, gbc.readMem(0xa8de));
        // CB 9D 0147
        gbc.setState(0x9c96, 0xcac8, 0x21e0, 0x228, 0x81d, 0x9d02, 0x0, 0x0);
        gbc.writeMem(0x9c96, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0x9c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c96));
        EXPECT(0x9d, gbc.readMem(0x9c97));
        // CB 9D 0148
        gbc.setState(0x3271, 0x9623, 0x5f40, 0x3c74, 0x53f4, 0x7d00, 0x0, 0x1);
        gbc.writeMem(0x3271, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9623, gbc.sp());
        EXPECT(0x3273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0149
        gbc.setState(0xed99, 0x696a, 0xfaf0, 0xbba6, 0xb6e8, 0xbcb3, 0x0, 0x0);
        gbc.writeMem(0xed99, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x696a, gbc.sp());
        EXPECT(0xed9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed99));
        EXPECT(0x9d, gbc.readMem(0xed9a));
        // CB 9D 014A
        gbc.setState(0x83e, 0xb3c7, 0xbef0, 0xc692, 0x692c, 0x6d3, 0x1, 0x0);
        gbc.writeMem(0x83e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb3c7, gbc.sp());
        EXPECT(0x840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 014B
        gbc.setState(0x13d0, 0x225d, 0xfea0, 0xd015, 0x9b5e, 0xfe1, 0x1, 0x1);
        gbc.writeMem(0x13d0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x225d, gbc.sp());
        EXPECT(0x13d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 014C
        gbc.setState(0x9cf7, 0x80c5, 0x3a20, 0x219e, 0xb1c, 0x3ae2, 0x0, 0x0);
        gbc.writeMem(0x9cf7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x80c5, gbc.sp());
        EXPECT(0x9cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf7));
        EXPECT(0x9d, gbc.readMem(0x9cf8));
        // CB 9D 014D
        gbc.setState(0x4797, 0xe2c0, 0x2ea0, 0xa6ad, 0x1c4b, 0xa7c, 0x0, 0x0);
        gbc.writeMem(0x4797, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe2c0, gbc.sp());
        EXPECT(0x4799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 014E
        gbc.setState(0x8ea0, 0xf7e2, 0xa850, 0x4bd4, 0xe2a9, 0xd54a, 0x1, 0x1);
        gbc.writeMem(0x8ea0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf7e2, gbc.sp());
        EXPECT(0x8ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea0));
        EXPECT(0x9d, gbc.readMem(0x8ea1));
        // CB 9D 014F
        gbc.setState(0xbc12, 0x4deb, 0x3a50, 0xf0c3, 0xd8f6, 0x777b, 0x0, 0x1);
        gbc.writeMem(0xbc12, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4deb, gbc.sp());
        EXPECT(0xbc14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc12));
        EXPECT(0x9d, gbc.readMem(0xbc13));
        // CB 9D 0150
        gbc.setState(0x2307, 0x5651, 0xb30, 0x4d27, 0xf1e, 0x6c47, 0x1, 0x1);
        gbc.writeMem(0x2307, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5651, gbc.sp());
        EXPECT(0x2309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0151
        gbc.setState(0x166, 0x23d7, 0x6ff0, 0xff3f, 0x329c, 0x1e26, 0x0, 0x1);
        gbc.writeMem(0x166, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x23d7, gbc.sp());
        EXPECT(0x168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0152
        gbc.setState(0xdcc8, 0xc951, 0x3490, 0xf600, 0x2b26, 0x837f, 0x1, 0x0);
        gbc.writeMem(0xdcc8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc951, gbc.sp());
        EXPECT(0xdcca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc8));
        EXPECT(0x9d, gbc.readMem(0xdcc9));
        // CB 9D 0153
        gbc.setState(0x9acd, 0xc317, 0x3ee0, 0x11f9, 0x92f6, 0xa2cb, 0x0, 0x1);
        gbc.writeMem(0x9acd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc317, gbc.sp());
        EXPECT(0x9acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9acd));
        EXPECT(0x9d, gbc.readMem(0x9ace));
        // CB 9D 0154
        gbc.setState(0x3f5d, 0x9f23, 0x97f0, 0xd5f1, 0x3eb4, 0x24a, 0x0, 0x1);
        gbc.writeMem(0x3f5d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9f23, gbc.sp());
        EXPECT(0x3f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0155
        gbc.setState(0x8ccf, 0x7689, 0x5c0, 0x4d26, 0x2c89, 0x234f, 0x1, 0x0);
        gbc.writeMem(0x8ccf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7689, gbc.sp());
        EXPECT(0x8cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccf));
        EXPECT(0x9d, gbc.readMem(0x8cd0));
        // CB 9D 0156
        gbc.setState(0xdebd, 0x4558, 0x4b20, 0x91c7, 0x8529, 0xf009, 0x1, 0x1);
        gbc.writeMem(0xdebd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4558, gbc.sp());
        EXPECT(0xdebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdebd));
        EXPECT(0x9d, gbc.readMem(0xdebe));
        // CB 9D 0157
        gbc.setState(0xea9c, 0xbd70, 0xbe00, 0x28f4, 0x1490, 0xeb4, 0x0, 0x0);
        gbc.writeMem(0xea9c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbd70, gbc.sp());
        EXPECT(0xea9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea9c));
        EXPECT(0x9d, gbc.readMem(0xea9d));
        // CB 9D 0158
        gbc.setState(0xddfe, 0x43bf, 0x4160, 0xffe8, 0xcc48, 0xbd41, 0x1, 0x1);
        gbc.writeMem(0xddfe, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x43bf, gbc.sp());
        EXPECT(0xde00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddfe));
        EXPECT(0x9d, gbc.readMem(0xddff));
        // CB 9D 0159
        gbc.setState(0xc09e, 0xc7f4, 0x6cb0, 0xb906, 0xe2, 0x4915, 0x0, 0x0);
        gbc.writeMem(0xc09e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc7f4, gbc.sp());
        EXPECT(0xc0a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09e));
        EXPECT(0x9d, gbc.readMem(0xc09f));
        // CB 9D 015A
        gbc.setState(0x1fe8, 0x4c2f, 0x4330, 0xd95d, 0xaa2b, 0x5d5a, 0x1, 0x1);
        gbc.writeMem(0x1fe8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4c2f, gbc.sp());
        EXPECT(0x1fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 015B
        gbc.setState(0x1258, 0xc57d, 0xd300, 0x4dc8, 0xfb85, 0xeb32, 0x0, 0x0);
        gbc.writeMem(0x1258, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc57d, gbc.sp());
        EXPECT(0x125a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 015C
        gbc.setState(0x8173, 0x3bbe, 0xf890, 0x4b1b, 0xe90b, 0x3ac, 0x0, 0x1);
        gbc.writeMem(0x8173, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3bbe, gbc.sp());
        EXPECT(0x8175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8173));
        EXPECT(0x9d, gbc.readMem(0x8174));
        // CB 9D 015D
        gbc.setState(0xd082, 0x8459, 0xde00, 0xf537, 0x69e0, 0xa898, 0x1, 0x1);
        gbc.writeMem(0xd082, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8459, gbc.sp());
        EXPECT(0xd084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd082));
        EXPECT(0x9d, gbc.readMem(0xd083));
        // CB 9D 015E
        gbc.setState(0x1faa, 0x74f5, 0xb960, 0x9cb4, 0x1da7, 0xc020, 0x1, 0x1);
        gbc.writeMem(0x1faa, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x74f5, gbc.sp());
        EXPECT(0x1fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 015F
        gbc.setState(0xacdd, 0xfdbb, 0xca00, 0x554e, 0xdec7, 0xb891, 0x0, 0x0);
        gbc.writeMem(0xacdd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfdbb, gbc.sp());
        EXPECT(0xacdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacdd));
        EXPECT(0x9d, gbc.readMem(0xacde));
        // CB 9D 0160
        gbc.setState(0x8130, 0x83f2, 0x3d90, 0xfc5e, 0xf86e, 0xc5d7, 0x1, 0x1);
        gbc.writeMem(0x8130, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x83f2, gbc.sp());
        EXPECT(0x8132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8130));
        EXPECT(0x9d, gbc.readMem(0x8131));
        // CB 9D 0161
        gbc.setState(0xed2b, 0x691d, 0x6eb0, 0x5144, 0x8973, 0x9507, 0x0, 0x0);
        gbc.writeMem(0xed2b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x691d, gbc.sp());
        EXPECT(0xed2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2b));
        EXPECT(0x9d, gbc.readMem(0xed2c));
        // CB 9D 0163
        gbc.setState(0xc24c, 0x7c2a, 0x6ed0, 0xc1b0, 0x1ffd, 0x4aeb, 0x0, 0x0);
        gbc.writeMem(0xc24c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7c2a, gbc.sp());
        EXPECT(0xc24e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24c));
        EXPECT(0x9d, gbc.readMem(0xc24d));
        // CB 9D 0164
        gbc.setState(0x5f95, 0x316, 0x6800, 0x48fe, 0x2d2d, 0x303f, 0x0, 0x1);
        gbc.writeMem(0x5f95, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x316, gbc.sp());
        EXPECT(0x5f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0165
        gbc.setState(0x164e, 0x15b9, 0xfe60, 0x7782, 0x5305, 0xbcfd, 0x1, 0x1);
        gbc.writeMem(0x164e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x15b9, gbc.sp());
        EXPECT(0x1650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0166
        gbc.setState(0x2e35, 0x5230, 0xe4d0, 0x6f38, 0x5f28, 0xf254, 0x0, 0x1);
        gbc.writeMem(0x2e35, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5230, gbc.sp());
        EXPECT(0x2e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0167
        gbc.setState(0xecfe, 0x84b4, 0x9220, 0x5c66, 0x9696, 0x8941, 0x1, 0x0);
        gbc.writeMem(0xecfe, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x84b4, gbc.sp());
        EXPECT(0xed00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecfe));
        EXPECT(0x9d, gbc.readMem(0xecff));
        // CB 9D 0168
        gbc.setState(0x5a50, 0xf6c6, 0x5810, 0x64fd, 0xa98e, 0xa6cf, 0x0, 0x0);
        gbc.writeMem(0x5a50, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf6c6, gbc.sp());
        EXPECT(0x5a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0169
        gbc.setState(0x8ef1, 0x20d, 0x5760, 0x3966, 0x6ff9, 0xb0fd, 0x1, 0x0);
        gbc.writeMem(0x8ef1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x20d, gbc.sp());
        EXPECT(0x8ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef1));
        EXPECT(0x9d, gbc.readMem(0x8ef2));
        // CB 9D 016A
        gbc.setState(0x73a2, 0x5263, 0x1430, 0x7eef, 0x5323, 0xf0ab, 0x0, 0x0);
        gbc.writeMem(0x73a2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5263, gbc.sp());
        EXPECT(0x73a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 016B
        gbc.setState(0xa9f7, 0x9a0d, 0xe00, 0x7099, 0x5780, 0xb8a9, 0x1, 0x0);
        gbc.writeMem(0xa9f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9a0d, gbc.sp());
        EXPECT(0xa9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f7));
        EXPECT(0x9d, gbc.readMem(0xa9f8));
        // CB 9D 016C
        gbc.setState(0xb29f, 0x9f66, 0xb540, 0x6e98, 0x20c, 0x9b6, 0x0, 0x1);
        gbc.writeMem(0xb29f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9f66, gbc.sp());
        EXPECT(0xb2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29f));
        EXPECT(0x9d, gbc.readMem(0xb2a0));
        // CB 9D 016D
        gbc.setState(0x9a3c, 0xca1f, 0xd3b0, 0x5004, 0xc64e, 0xfc52, 0x0, 0x0);
        gbc.writeMem(0x9a3c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xca1f, gbc.sp());
        EXPECT(0x9a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3c));
        EXPECT(0x9d, gbc.readMem(0x9a3d));
        // CB 9D 016F
        gbc.setState(0xbe33, 0x4065, 0x42e0, 0xb90b, 0xba43, 0x6b24, 0x0, 0x1);
        gbc.writeMem(0xbe33, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4065, gbc.sp());
        EXPECT(0xbe35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe33));
        EXPECT(0x9d, gbc.readMem(0xbe34));
        // CB 9D 0170
        gbc.setState(0x2869, 0x6619, 0xdc20, 0xa6a7, 0x72, 0x3fba, 0x1, 0x0);
        gbc.writeMem(0x2869, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6619, gbc.sp());
        EXPECT(0x286b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0171
        gbc.setState(0xa833, 0x318a, 0x4110, 0x6bd1, 0x913a, 0x3089, 0x1, 0x1);
        gbc.writeMem(0xa833, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x318a, gbc.sp());
        EXPECT(0xa835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa833));
        EXPECT(0x9d, gbc.readMem(0xa834));
        // CB 9D 0173
        gbc.setState(0x1266, 0x33c, 0xcc00, 0x171f, 0x44bc, 0x17d9, 0x0, 0x1);
        gbc.writeMem(0x1266, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x33c, gbc.sp());
        EXPECT(0x1268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0174
        gbc.setState(0x3614, 0x3da8, 0x4440, 0x6175, 0x7000, 0x696b, 0x1, 0x1);
        gbc.writeMem(0x3614, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3da8, gbc.sp());
        EXPECT(0x3616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0175
        gbc.setState(0x1142, 0x6b28, 0x2a90, 0xa550, 0xc6c5, 0xfff2, 0x1, 0x0);
        gbc.writeMem(0x1142, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6b28, gbc.sp());
        EXPECT(0x1144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0176
        gbc.setState(0xa6dd, 0x63bf, 0x3a50, 0x166, 0xecb0, 0x8b1e, 0x1, 0x0);
        gbc.writeMem(0xa6dd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x63bf, gbc.sp());
        EXPECT(0xa6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6dd));
        EXPECT(0x9d, gbc.readMem(0xa6de));
        // CB 9D 0177
        gbc.setState(0x8db7, 0xb1d2, 0x7840, 0x2c2a, 0x67e5, 0x6071, 0x1, 0x1);
        gbc.writeMem(0x8db7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb1d2, gbc.sp());
        EXPECT(0x8db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db7));
        EXPECT(0x9d, gbc.readMem(0x8db8));
        // CB 9D 0178
        gbc.setState(0xa800, 0x56ad, 0x5220, 0xc9d0, 0xd0b6, 0x818d, 0x1, 0x0);
        gbc.writeMem(0xa800, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x56ad, gbc.sp());
        EXPECT(0xa802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa800));
        EXPECT(0x9d, gbc.readMem(0xa801));
        // CB 9D 0179
        gbc.setState(0x7514, 0x60c5, 0x2d20, 0xfc63, 0xe688, 0x4cbd, 0x1, 0x1);
        gbc.writeMem(0x7514, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x60c5, gbc.sp());
        EXPECT(0x7516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 017A
        gbc.setState(0xa877, 0x7f53, 0x6df0, 0x66b0, 0x5a0c, 0x12e8, 0x0, 0x0);
        gbc.writeMem(0xa877, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7f53, gbc.sp());
        EXPECT(0xa879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa877));
        EXPECT(0x9d, gbc.readMem(0xa878));
        // CB 9D 017B
        gbc.setState(0xe08c, 0x526a, 0xbab0, 0x35b7, 0xc24b, 0x8d12, 0x1, 0x0);
        gbc.writeMem(0xe08c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x526a, gbc.sp());
        EXPECT(0xe08e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08c));
        EXPECT(0x9d, gbc.readMem(0xe08d));
        // CB 9D 017C
        gbc.setState(0x1dfe, 0x659e, 0x4690, 0x2597, 0x9e0c, 0x3167, 0x0, 0x1);
        gbc.writeMem(0x1dfe, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x659e, gbc.sp());
        EXPECT(0x1e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 017D
        gbc.setState(0x49d4, 0x3d6d, 0x8990, 0xf504, 0xf5e0, 0x686, 0x0, 0x0);
        gbc.writeMem(0x49d4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3d6d, gbc.sp());
        EXPECT(0x49d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 017E
        gbc.setState(0x47b9, 0x6f30, 0x1e60, 0xb28f, 0x2663, 0xd324, 0x1, 0x1);
        gbc.writeMem(0x47b9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6f30, gbc.sp());
        EXPECT(0x47bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 017F
        gbc.setState(0x8489, 0xc577, 0x3ae0, 0x6016, 0xced9, 0x31b6, 0x0, 0x0);
        gbc.writeMem(0x8489, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc577, gbc.sp());
        EXPECT(0x848b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8489));
        EXPECT(0x9d, gbc.readMem(0x848a));
        // CB 9D 0180
        gbc.setState(0xa29a, 0x22fe, 0x9b20, 0x3ce8, 0x40a0, 0x6f8d, 0x0, 0x0);
        gbc.writeMem(0xa29a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x22fe, gbc.sp());
        EXPECT(0xa29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29a));
        EXPECT(0x9d, gbc.readMem(0xa29b));
        // CB 9D 0181
        gbc.setState(0x79f7, 0xcc31, 0xa2d0, 0x7769, 0x350a, 0xbb60, 0x1, 0x0);
        gbc.writeMem(0x79f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcc31, gbc.sp());
        EXPECT(0x79f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0183
        gbc.setState(0x1448, 0x450f, 0x50c0, 0xfdb, 0xcd3f, 0xbd36, 0x0, 0x0);
        gbc.writeMem(0x1448, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x450f, gbc.sp());
        EXPECT(0x144a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0184
        gbc.setState(0x3e54, 0x9c42, 0x3800, 0xfeb6, 0x9d3b, 0x4eba, 0x1, 0x1);
        gbc.writeMem(0x3e54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9c42, gbc.sp());
        EXPECT(0x3e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0185
        gbc.setState(0x48d4, 0xa0eb, 0xe090, 0xe494, 0xcfaa, 0x56d8, 0x0, 0x0);
        gbc.writeMem(0x48d4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa0eb, gbc.sp());
        EXPECT(0x48d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0186
        gbc.setState(0x7548, 0xc76f, 0x82a0, 0xb1f5, 0x2ae1, 0x9413, 0x0, 0x0);
        gbc.writeMem(0x7548, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc76f, gbc.sp());
        EXPECT(0x754a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0187
        gbc.setState(0x6d0d, 0x6cb, 0x6e00, 0x15c3, 0x3952, 0xa714, 0x1, 0x0);
        gbc.writeMem(0x6d0d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6cb, gbc.sp());
        EXPECT(0x6d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0188
        gbc.setState(0x2a17, 0xdae2, 0xdbc0, 0x4de2, 0x5147, 0x87a5, 0x1, 0x0);
        gbc.writeMem(0x2a17, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdae2, gbc.sp());
        EXPECT(0x2a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0189
        gbc.setState(0xd485, 0xe4e5, 0xa310, 0x977d, 0x5af8, 0xe431, 0x0, 0x0);
        gbc.writeMem(0xd485, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe4e5, gbc.sp());
        EXPECT(0xd487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd485));
        EXPECT(0x9d, gbc.readMem(0xd486));
        // CB 9D 018A
        gbc.setState(0xd46f, 0xa5c6, 0xe250, 0x23ee, 0xbeec, 0x8ee3, 0x1, 0x1);
        gbc.writeMem(0xd46f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa5c6, gbc.sp());
        EXPECT(0xd471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46f));
        EXPECT(0x9d, gbc.readMem(0xd470));
        // CB 9D 018B
        gbc.setState(0x5d55, 0x3d44, 0x6850, 0x2abf, 0x4276, 0x2ab7, 0x1, 0x1);
        gbc.writeMem(0x5d55, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3d44, gbc.sp());
        EXPECT(0x5d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 018C
        gbc.setState(0x203b, 0x96f7, 0xd910, 0x2e83, 0x2255, 0x8392, 0x1, 0x1);
        gbc.writeMem(0x203b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x96f7, gbc.sp());
        EXPECT(0x203d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 018D
        gbc.setState(0x4afc, 0xc3d9, 0x4020, 0xa47a, 0x80f4, 0x34c7, 0x1, 0x1);
        gbc.writeMem(0x4afc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc3d9, gbc.sp());
        EXPECT(0x4afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 018E
        gbc.setState(0xc9b7, 0x16af, 0xe010, 0x419, 0xda5b, 0x5183, 0x1, 0x1);
        gbc.writeMem(0xc9b7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x16af, gbc.sp());
        EXPECT(0xc9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b7));
        EXPECT(0x9d, gbc.readMem(0xc9b8));
        // CB 9D 018F
        gbc.setState(0x1cf1, 0x4137, 0xb120, 0x7186, 0xb5c5, 0xc408, 0x0, 0x0);
        gbc.writeMem(0x1cf1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4137, gbc.sp());
        EXPECT(0x1cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0190
        gbc.setState(0x2b1b, 0xf7ef, 0xd6d0, 0x9b9d, 0x4f91, 0x7194, 0x1, 0x1);
        gbc.writeMem(0x2b1b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf7ef, gbc.sp());
        EXPECT(0x2b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0191
        gbc.setState(0xb1c6, 0xf9f8, 0xfe30, 0xff32, 0x3789, 0xf5e9, 0x0, 0x1);
        gbc.writeMem(0xb1c6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf9f8, gbc.sp());
        EXPECT(0xb1c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c6));
        EXPECT(0x9d, gbc.readMem(0xb1c7));
        // CB 9D 0192
        gbc.setState(0xef73, 0xd312, 0xcad0, 0x99bb, 0xa08d, 0x9bb0, 0x1, 0x0);
        gbc.writeMem(0xef73, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd312, gbc.sp());
        EXPECT(0xef75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef73));
        EXPECT(0x9d, gbc.readMem(0xef74));
        // CB 9D 0193
        gbc.setState(0x8357, 0xe0b3, 0x5890, 0xac58, 0x6b94, 0x269, 0x1, 0x1);
        gbc.writeMem(0x8357, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe0b3, gbc.sp());
        EXPECT(0x8359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8357));
        EXPECT(0x9d, gbc.readMem(0x8358));
        // CB 9D 0194
        gbc.setState(0x67f8, 0xa3fc, 0xe120, 0x6f82, 0xf3ca, 0x628a, 0x0, 0x0);
        gbc.writeMem(0x67f8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa3fc, gbc.sp());
        EXPECT(0x67fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0195
        gbc.setState(0x8d2e, 0x3cf5, 0xeb30, 0xe4ba, 0x24ad, 0xc0c9, 0x0, 0x0);
        gbc.writeMem(0x8d2e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3cf5, gbc.sp());
        EXPECT(0x8d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d2e));
        EXPECT(0x9d, gbc.readMem(0x8d2f));
        // CB 9D 0196
        gbc.setState(0xde9a, 0x2cf, 0x5cf0, 0xa702, 0xa4c4, 0x1322, 0x1, 0x0);
        gbc.writeMem(0xde9a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2cf, gbc.sp());
        EXPECT(0xde9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9a));
        EXPECT(0x9d, gbc.readMem(0xde9b));
        // CB 9D 0197
        gbc.setState(0xe2a3, 0xf13b, 0xdcf0, 0xe9e6, 0x48e4, 0x248b, 0x0, 0x0);
        gbc.writeMem(0xe2a3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf13b, gbc.sp());
        EXPECT(0xe2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a3));
        EXPECT(0x9d, gbc.readMem(0xe2a4));
        // CB 9D 0198
        gbc.setState(0x2e70, 0x64ca, 0x2f00, 0xb368, 0x3472, 0x7a60, 0x0, 0x0);
        gbc.writeMem(0x2e70, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x64ca, gbc.sp());
        EXPECT(0x2e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0199
        gbc.setState(0x5cd, 0xaca4, 0x94d0, 0xe724, 0x63ec, 0x599c, 0x0, 0x1);
        gbc.writeMem(0x5cd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaca4, gbc.sp());
        EXPECT(0x5cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 019A
        gbc.setState(0x9fb0, 0x2528, 0xcc60, 0x5970, 0xe082, 0x26d, 0x1, 0x0);
        gbc.writeMem(0x9fb0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2528, gbc.sp());
        EXPECT(0x9fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb0));
        EXPECT(0x9d, gbc.readMem(0x9fb1));
        // CB 9D 019B
        gbc.setState(0x74ed, 0x6b92, 0x6fa0, 0x86ed, 0xf5c7, 0xe3c1, 0x0, 0x1);
        gbc.writeMem(0x74ed, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6b92, gbc.sp());
        EXPECT(0x74ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 019C
        gbc.setState(0xd16, 0x43a9, 0xec10, 0x5be6, 0x7274, 0x95ab, 0x1, 0x0);
        gbc.writeMem(0xd16, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x43a9, gbc.sp());
        EXPECT(0xd18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 019E
        gbc.setState(0x8b78, 0xe080, 0xe7c0, 0x1749, 0x72e1, 0x751, 0x0, 0x0);
        gbc.writeMem(0x8b78, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe080, gbc.sp());
        EXPECT(0x8b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b78));
        EXPECT(0x9d, gbc.readMem(0x8b79));
        // CB 9D 019F
        gbc.setState(0x7d9d, 0xc918, 0xde00, 0xea76, 0xbf8c, 0x73da, 0x1, 0x0);
        gbc.writeMem(0x7d9d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc918, gbc.sp());
        EXPECT(0x7d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01A0
        gbc.setState(0x4c83, 0xf16, 0xea60, 0xef0, 0xb0bf, 0xd6ef, 0x0, 0x0);
        gbc.writeMem(0x4c83, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf16, gbc.sp());
        EXPECT(0x4c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01A1
        gbc.setState(0xdbfa, 0x2518, 0x890, 0x2cd, 0x164b, 0xf188, 0x1, 0x1);
        gbc.writeMem(0xdbfa, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2518, gbc.sp());
        EXPECT(0xdbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbfa));
        EXPECT(0x9d, gbc.readMem(0xdbfb));
        // CB 9D 01A2
        gbc.setState(0x3c74, 0xb91b, 0x4430, 0x1989, 0x1a01, 0xc6e8, 0x0, 0x0);
        gbc.writeMem(0x3c74, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb91b, gbc.sp());
        EXPECT(0x3c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01A3
        gbc.setState(0x53d8, 0xc1f8, 0x34c0, 0x8952, 0x9479, 0x7153, 0x0, 0x0);
        gbc.writeMem(0x53d8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc1f8, gbc.sp());
        EXPECT(0x53da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01A4
        gbc.setState(0x111d, 0xe57e, 0xf710, 0x258c, 0x347, 0x95db, 0x0, 0x1);
        gbc.writeMem(0x111d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe57e, gbc.sp());
        EXPECT(0x111f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01A5
        gbc.setState(0xd637, 0xe96c, 0xce20, 0x4e7f, 0xe04f, 0xc731, 0x0, 0x1);
        gbc.writeMem(0xd637, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe96c, gbc.sp());
        EXPECT(0xd639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd637));
        EXPECT(0x9d, gbc.readMem(0xd638));
        // CB 9D 01A6
        gbc.setState(0x198c, 0x314b, 0x7820, 0x844b, 0xde24, 0x25ad, 0x1, 0x0);
        gbc.writeMem(0x198c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x314b, gbc.sp());
        EXPECT(0x198e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01A7
        gbc.setState(0x3dea, 0xfc5c, 0x6e20, 0xe761, 0x54d, 0xedb2, 0x1, 0x1);
        gbc.writeMem(0x3dea, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfc5c, gbc.sp());
        EXPECT(0x3dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01A8
        gbc.setState(0x9ba5, 0xa152, 0xa360, 0xc486, 0x5d94, 0x49f3, 0x1, 0x1);
        gbc.writeMem(0x9ba5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa152, gbc.sp());
        EXPECT(0x9ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba5));
        EXPECT(0x9d, gbc.readMem(0x9ba6));
        // CB 9D 01AA
        gbc.setState(0x7004, 0x1409, 0xe230, 0xaa9d, 0xf11, 0x3d4d, 0x1, 0x1);
        gbc.writeMem(0x7004, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1409, gbc.sp());
        EXPECT(0x7006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01AB
        gbc.setState(0xe103, 0x9be2, 0x91c0, 0x71da, 0x67f2, 0x278b, 0x1, 0x1);
        gbc.writeMem(0xe103, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9be2, gbc.sp());
        EXPECT(0xe105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe103));
        EXPECT(0x9d, gbc.readMem(0xe104));
        // CB 9D 01AC
        gbc.setState(0x9793, 0xc9da, 0x73a0, 0x9d50, 0x38b1, 0xabe2, 0x1, 0x0);
        gbc.writeMem(0x9793, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc9da, gbc.sp());
        EXPECT(0x9795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9793));
        EXPECT(0x9d, gbc.readMem(0x9794));
        // CB 9D 01AD
        gbc.setState(0x5601, 0xe7d, 0x79e0, 0xe9ea, 0xe67c, 0x6839, 0x0, 0x1);
        gbc.writeMem(0x5601, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe7d, gbc.sp());
        EXPECT(0x5603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01AE
        gbc.setState(0x17f3, 0x90b7, 0xf250, 0xbb3b, 0x171d, 0xa4d0, 0x0, 0x1);
        gbc.writeMem(0x17f3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x90b7, gbc.sp());
        EXPECT(0x17f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01AF
        gbc.setState(0x650d, 0x92fd, 0xb340, 0xfb6a, 0x34bd, 0x67b2, 0x0, 0x1);
        gbc.writeMem(0x650d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x92fd, gbc.sp());
        EXPECT(0x650f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01B0
        gbc.setState(0xbe86, 0x619a, 0x58b0, 0x9eac, 0x44be, 0x97ec, 0x1, 0x0);
        gbc.writeMem(0xbe86, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x619a, gbc.sp());
        EXPECT(0xbe88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe86));
        EXPECT(0x9d, gbc.readMem(0xbe87));
        // CB 9D 01B1
        gbc.setState(0x175a, 0xcb90, 0xcae0, 0x288b, 0x1b54, 0x2333, 0x0, 0x1);
        gbc.writeMem(0x175a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcb90, gbc.sp());
        EXPECT(0x175c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01B2
        gbc.setState(0xcf58, 0x5ad2, 0x8f00, 0xb777, 0x4452, 0x8c90, 0x1, 0x0);
        gbc.writeMem(0xcf58, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5ad2, gbc.sp());
        EXPECT(0xcf5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf58));
        EXPECT(0x9d, gbc.readMem(0xcf59));
        // CB 9D 01B3
        gbc.setState(0x2872, 0x7630, 0xd040, 0xdd50, 0x45a3, 0x12e8, 0x0, 0x0);
        gbc.writeMem(0x2872, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7630, gbc.sp());
        EXPECT(0x2874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01B4
        gbc.setState(0xd206, 0xec79, 0x1690, 0x9e7d, 0xd00f, 0x3b5d, 0x1, 0x0);
        gbc.writeMem(0xd206, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xec79, gbc.sp());
        EXPECT(0xd208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd206));
        EXPECT(0x9d, gbc.readMem(0xd207));
        // CB 9D 01B5
        gbc.setState(0xbf6e, 0x8aae, 0x94a0, 0x81fb, 0x7084, 0x1175, 0x0, 0x1);
        gbc.writeMem(0xbf6e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8aae, gbc.sp());
        EXPECT(0xbf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6e));
        EXPECT(0x9d, gbc.readMem(0xbf6f));
        // CB 9D 01B6
        gbc.setState(0xb65c, 0x82ca, 0xcd70, 0x6f29, 0x2f5e, 0x8fd1, 0x1, 0x1);
        gbc.writeMem(0xb65c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x82ca, gbc.sp());
        EXPECT(0xb65e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65c));
        EXPECT(0x9d, gbc.readMem(0xb65d));
        // CB 9D 01B7
        gbc.setState(0x352, 0x58b3, 0xfb40, 0xeedc, 0x25ab, 0x769c, 0x1, 0x0);
        gbc.writeMem(0x352, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x58b3, gbc.sp());
        EXPECT(0x354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01B8
        gbc.setState(0x170b, 0xb37f, 0x4b20, 0xe242, 0xef06, 0xf53f, 0x1, 0x0);
        gbc.writeMem(0x170b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb37f, gbc.sp());
        EXPECT(0x170d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01B9
        gbc.setState(0xe1b, 0x9bd3, 0x4c0, 0xec1e, 0xc80a, 0x6bc2, 0x1, 0x1);
        gbc.writeMem(0xe1b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9bd3, gbc.sp());
        EXPECT(0xe1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01BA
        gbc.setState(0xcccf, 0x699d, 0xc920, 0x65b5, 0x54f6, 0xd136, 0x1, 0x0);
        gbc.writeMem(0xcccf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x699d, gbc.sp());
        EXPECT(0xccd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcccf));
        EXPECT(0x9d, gbc.readMem(0xccd0));
        // CB 9D 01BB
        gbc.setState(0x91d, 0x3377, 0xbb0, 0x42f0, 0x93bb, 0xeb39, 0x1, 0x1);
        gbc.writeMem(0x91d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3377, gbc.sp());
        EXPECT(0x91f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01BC
        gbc.setState(0x57d7, 0xe10b, 0xf6f0, 0xc75, 0x4dd2, 0xde25, 0x1, 0x0);
        gbc.writeMem(0x57d7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe10b, gbc.sp());
        EXPECT(0x57d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01BD
        gbc.setState(0x4b04, 0x61b3, 0x4ab0, 0x4a89, 0x9e32, 0x1dd2, 0x1, 0x0);
        gbc.writeMem(0x4b04, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x61b3, gbc.sp());
        EXPECT(0x4b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01BE
        gbc.setState(0x6c45, 0x5de0, 0xad90, 0xa526, 0xcc9f, 0x6369, 0x0, 0x0);
        gbc.writeMem(0x6c45, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5de0, gbc.sp());
        EXPECT(0x6c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01BF
        gbc.setState(0x650a, 0xdc7f, 0x3eb0, 0x96d9, 0xf6e8, 0xfc9a, 0x1, 0x1);
        gbc.writeMem(0x650a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdc7f, gbc.sp());
        EXPECT(0x650c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01C0
        gbc.setState(0xbafa, 0x9b9, 0xc270, 0x2e61, 0xe64e, 0xb829, 0x0, 0x0);
        gbc.writeMem(0xbafa, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9b9, gbc.sp());
        EXPECT(0xbafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafa));
        EXPECT(0x9d, gbc.readMem(0xbafb));
        // CB 9D 01C1
        gbc.setState(0x4df9, 0xca28, 0xcbe0, 0x8e4, 0x731d, 0x160a, 0x1, 0x1);
        gbc.writeMem(0x4df9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xca28, gbc.sp());
        EXPECT(0x4dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01C3
        gbc.setState(0x18b3, 0x8beb, 0x4110, 0x8d25, 0xb585, 0xda48, 0x0, 0x0);
        gbc.writeMem(0x18b3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8beb, gbc.sp());
        EXPECT(0x18b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01C4
        gbc.setState(0x9765, 0xd225, 0x35f0, 0xa06b, 0x20be, 0xb2d1, 0x0, 0x0);
        gbc.writeMem(0x9765, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd225, gbc.sp());
        EXPECT(0x9767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9765));
        EXPECT(0x9d, gbc.readMem(0x9766));
        // CB 9D 01C5
        gbc.setState(0x846, 0x192d, 0x9e70, 0xe0b6, 0x5e5, 0x2974, 0x1, 0x1);
        gbc.writeMem(0x846, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x192d, gbc.sp());
        EXPECT(0x848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01C6
        gbc.setState(0x37d2, 0x8477, 0xfc50, 0x7dd7, 0x11ea, 0x19cc, 0x0, 0x1);
        gbc.writeMem(0x37d2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8477, gbc.sp());
        EXPECT(0x37d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01C7
        gbc.setState(0x3911, 0xe152, 0x7090, 0x3088, 0xfa81, 0xc473, 0x0, 0x1);
        gbc.writeMem(0x3911, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe152, gbc.sp());
        EXPECT(0x3913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01C8
        gbc.setState(0x3edc, 0xee12, 0xde20, 0xdaf4, 0xaf8d, 0xf86b, 0x1, 0x0);
        gbc.writeMem(0x3edc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xee12, gbc.sp());
        EXPECT(0x3ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01C9
        gbc.setState(0x67c5, 0xa962, 0x9a20, 0x7f98, 0x4900, 0x690f, 0x1, 0x0);
        gbc.writeMem(0x67c5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa962, gbc.sp());
        EXPECT(0x67c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01CA
        gbc.setState(0xb818, 0x6da, 0x6850, 0xf573, 0x81cc, 0xcb78, 0x0, 0x0);
        gbc.writeMem(0xb818, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6da, gbc.sp());
        EXPECT(0xb81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb818));
        EXPECT(0x9d, gbc.readMem(0xb819));
        // CB 9D 01CB
        gbc.setState(0x570f, 0xd734, 0x7130, 0xb6a2, 0x17cd, 0x25e5, 0x0, 0x1);
        gbc.writeMem(0x570f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd734, gbc.sp());
        EXPECT(0x5711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01CC
        gbc.setState(0xcb5c, 0x45a2, 0x8a00, 0xef41, 0x9baf, 0xdee, 0x0, 0x1);
        gbc.writeMem(0xcb5c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x45a2, gbc.sp());
        EXPECT(0xcb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb5c));
        EXPECT(0x9d, gbc.readMem(0xcb5d));
        // CB 9D 01CD
        gbc.setState(0x244e, 0x64bb, 0xa910, 0xa835, 0x8def, 0x548f, 0x1, 0x1);
        gbc.writeMem(0x244e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x64bb, gbc.sp());
        EXPECT(0x2450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01CE
        gbc.setState(0x6566, 0xde9c, 0xddb0, 0x38ff, 0x1894, 0xd4f7, 0x1, 0x0);
        gbc.writeMem(0x6566, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xde9c, gbc.sp());
        EXPECT(0x6568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01CF
        gbc.setState(0x4967, 0x1937, 0x83a0, 0xfe53, 0x6f3c, 0xe0f1, 0x1, 0x1);
        gbc.writeMem(0x4967, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1937, gbc.sp());
        EXPECT(0x4969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01D0
        gbc.setState(0xbcff, 0xe673, 0xa280, 0x17a9, 0x70a0, 0x8975, 0x1, 0x0);
        gbc.writeMem(0xbcff, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe673, gbc.sp());
        EXPECT(0xbd01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcff));
        EXPECT(0x9d, gbc.readMem(0xbd00));
        // CB 9D 01D1
        gbc.setState(0x2124, 0xd232, 0xc320, 0x6f6e, 0xabee, 0x2f99, 0x0, 0x0);
        gbc.writeMem(0x2124, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd232, gbc.sp());
        EXPECT(0x2126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01D2
        gbc.setState(0xdfee, 0xa00, 0x3fc0, 0xb734, 0x6e3a, 0xfd79, 0x1, 0x1);
        gbc.writeMem(0xdfee, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa00, gbc.sp());
        EXPECT(0xdff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfee));
        EXPECT(0x9d, gbc.readMem(0xdfef));
        // CB 9D 01D3
        gbc.setState(0x9fc9, 0xba0d, 0xb970, 0xf7fa, 0x80d7, 0x417a, 0x0, 0x1);
        gbc.writeMem(0x9fc9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xba0d, gbc.sp());
        EXPECT(0x9fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc9));
        EXPECT(0x9d, gbc.readMem(0x9fca));
        // CB 9D 01D4
        gbc.setState(0xc22b, 0x5e90, 0x9740, 0xf208, 0x43d4, 0x1ab3, 0x1, 0x0);
        gbc.writeMem(0xc22b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5e90, gbc.sp());
        EXPECT(0xc22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22b));
        EXPECT(0x9d, gbc.readMem(0xc22c));
        // CB 9D 01D5
        gbc.setState(0xf83, 0x226a, 0xac50, 0xee5a, 0x5fc4, 0x4d9, 0x0, 0x1);
        gbc.writeMem(0xf83, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x226a, gbc.sp());
        EXPECT(0xf85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01D6
        gbc.setState(0xd384, 0x455e, 0xe290, 0x6041, 0xdcef, 0xb3e9, 0x0, 0x1);
        gbc.writeMem(0xd384, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x455e, gbc.sp());
        EXPECT(0xd386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd384));
        EXPECT(0x9d, gbc.readMem(0xd385));
        // CB 9D 01D7
        gbc.setState(0x4ce5, 0x6cac, 0xe300, 0xa7ba, 0xe2ac, 0xb63d, 0x0, 0x1);
        gbc.writeMem(0x4ce5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6cac, gbc.sp());
        EXPECT(0x4ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01D8
        gbc.setState(0xe7b6, 0xf838, 0xd270, 0xa90, 0x1c88, 0xe6d6, 0x1, 0x1);
        gbc.writeMem(0xe7b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf838, gbc.sp());
        EXPECT(0xe7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b6));
        EXPECT(0x9d, gbc.readMem(0xe7b7));
        // CB 9D 01D9
        gbc.setState(0x4f19, 0x8fd9, 0x4f90, 0x5979, 0xfe3d, 0xd0ea, 0x0, 0x0);
        gbc.writeMem(0x4f19, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8fd9, gbc.sp());
        EXPECT(0x4f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01DA
        gbc.setState(0x4766, 0xe7f1, 0xe660, 0x265f, 0xd321, 0x40c6, 0x1, 0x1);
        gbc.writeMem(0x4766, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe7f1, gbc.sp());
        EXPECT(0x4768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01DB
        gbc.setState(0xd28d, 0x1052, 0xe40, 0x5f2, 0x56fd, 0x45c4, 0x0, 0x0);
        gbc.writeMem(0xd28d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1052, gbc.sp());
        EXPECT(0xd28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28d));
        EXPECT(0x9d, gbc.readMem(0xd28e));
        // CB 9D 01DC
        gbc.setState(0xe670, 0x6f4e, 0xf410, 0x6bc9, 0x5be4, 0xbf9f, 0x1, 0x0);
        gbc.writeMem(0xe670, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6f4e, gbc.sp());
        EXPECT(0xe672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe670));
        EXPECT(0x9d, gbc.readMem(0xe671));
        // CB 9D 01DD
        gbc.setState(0x2097, 0x5d5c, 0xa690, 0x40a, 0x395d, 0x5e62, 0x0, 0x1);
        gbc.writeMem(0x2097, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5d5c, gbc.sp());
        EXPECT(0x2099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01DE
        gbc.setState(0x3d5b, 0xc818, 0xea10, 0x42b6, 0xe1f2, 0xb3bb, 0x1, 0x0);
        gbc.writeMem(0x3d5b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc818, gbc.sp());
        EXPECT(0x3d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01DF
        gbc.setState(0x4cae, 0x328b, 0x28b0, 0xa68c, 0x2d67, 0xf287, 0x0, 0x1);
        gbc.writeMem(0x4cae, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x328b, gbc.sp());
        EXPECT(0x4cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01E0
        gbc.setState(0x2e64, 0x6a52, 0xcbb0, 0xcf9a, 0x33d2, 0x62ad, 0x1, 0x1);
        gbc.writeMem(0x2e64, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6a52, gbc.sp());
        EXPECT(0x2e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01E1
        gbc.setState(0xe956, 0x5cca, 0x2310, 0x84ef, 0x50ae, 0xdfd6, 0x1, 0x1);
        gbc.writeMem(0xe956, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5cca, gbc.sp());
        EXPECT(0xe958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe956));
        EXPECT(0x9d, gbc.readMem(0xe957));
        // CB 9D 01E2
        gbc.setState(0xc453, 0x9b70, 0x9570, 0x52f4, 0x17c, 0x3f93, 0x1, 0x0);
        gbc.writeMem(0xc453, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9b70, gbc.sp());
        EXPECT(0xc455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc453));
        EXPECT(0x9d, gbc.readMem(0xc454));
        // CB 9D 01E3
        gbc.setState(0xbe6, 0x6f75, 0x50f0, 0xd5bf, 0x97c0, 0xc2f4, 0x0, 0x0);
        gbc.writeMem(0xbe6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6f75, gbc.sp());
        EXPECT(0xbe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01E4
        gbc.setState(0x6f33, 0x9700, 0x4f20, 0x16c2, 0xb7e7, 0x47ee, 0x1, 0x1);
        gbc.writeMem(0x6f33, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9700, gbc.sp());
        EXPECT(0x6f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01E5
        gbc.setState(0x314d, 0xd7f, 0xfc30, 0x1370, 0xcc9e, 0x6626, 0x0, 0x1);
        gbc.writeMem(0x314d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd7f, gbc.sp());
        EXPECT(0x314f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01E6
        gbc.setState(0xea67, 0x6c08, 0xc00, 0x1235, 0xd167, 0xebca, 0x1, 0x0);
        gbc.writeMem(0xea67, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6c08, gbc.sp());
        EXPECT(0xea69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea67));
        EXPECT(0x9d, gbc.readMem(0xea68));
        // CB 9D 01E7
        gbc.setState(0x3788, 0x11d0, 0x2820, 0xb972, 0x8a74, 0xc73b, 0x0, 0x1);
        gbc.writeMem(0x3788, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x11d0, gbc.sp());
        EXPECT(0x378a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01E8
        gbc.setState(0x567, 0x7380, 0x6dd0, 0xe1e7, 0x2fec, 0xcb68, 0x0, 0x0);
        gbc.writeMem(0x567, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7380, gbc.sp());
        EXPECT(0x569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01E9
        gbc.setState(0xe15c, 0x9e26, 0xcd70, 0x2286, 0x1b7a, 0x8dfc, 0x0, 0x0);
        gbc.writeMem(0xe15c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9e26, gbc.sp());
        EXPECT(0xe15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15c));
        EXPECT(0x9d, gbc.readMem(0xe15d));
        // CB 9D 01EA
        gbc.setState(0x1f23, 0xf85, 0x6920, 0x35db, 0x52c1, 0x81ef, 0x1, 0x1);
        gbc.writeMem(0x1f23, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf85, gbc.sp());
        EXPECT(0x1f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01EB
        gbc.setState(0xb64e, 0x956f, 0x9a10, 0x7473, 0x97a1, 0xae93, 0x0, 0x0);
        gbc.writeMem(0xb64e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x956f, gbc.sp());
        EXPECT(0xb650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb64e));
        EXPECT(0x9d, gbc.readMem(0xb64f));
        // CB 9D 01EC
        gbc.setState(0x9078, 0x471d, 0xb900, 0xca7e, 0xe0f9, 0x71f8, 0x0, 0x0);
        gbc.writeMem(0x9078, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x471d, gbc.sp());
        EXPECT(0x907a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9078));
        EXPECT(0x9d, gbc.readMem(0x9079));
        // CB 9D 01ED
        gbc.setState(0x2c66, 0x33c7, 0x6d00, 0xb4f9, 0x8990, 0xfbb8, 0x1, 0x0);
        gbc.writeMem(0x2c66, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x33c7, gbc.sp());
        EXPECT(0x2c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01EE
        gbc.setState(0x62d4, 0x7738, 0x9e20, 0x5120, 0x9dd8, 0x2ecc, 0x0, 0x0);
        gbc.writeMem(0x62d4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7738, gbc.sp());
        EXPECT(0x62d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01EF
        gbc.setState(0xd32f, 0x2921, 0xfb20, 0x3e13, 0x6c7b, 0x7158, 0x1, 0x1);
        gbc.writeMem(0xd32f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2921, gbc.sp());
        EXPECT(0xd331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32f));
        EXPECT(0x9d, gbc.readMem(0xd330));
        // CB 9D 01F0
        gbc.setState(0xa020, 0xa241, 0x5790, 0x6ef6, 0xf2fc, 0x4ba5, 0x1, 0x0);
        gbc.writeMem(0xa020, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa241, gbc.sp());
        EXPECT(0xa022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa020));
        EXPECT(0x9d, gbc.readMem(0xa021));
        // CB 9D 01F1
        gbc.setState(0x9f86, 0xca62, 0xa1c0, 0xe59d, 0x98a0, 0xf0d9, 0x0, 0x0);
        gbc.writeMem(0x9f86, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xca62, gbc.sp());
        EXPECT(0x9f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f86));
        EXPECT(0x9d, gbc.readMem(0x9f87));
        // CB 9D 01F2
        gbc.setState(0x687e, 0xe4e3, 0xa380, 0xc7f9, 0xb161, 0xadd0, 0x0, 0x1);
        gbc.writeMem(0x687e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe4e3, gbc.sp());
        EXPECT(0x6880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01F3
        gbc.setState(0x3b48, 0xc393, 0x4460, 0xbd7, 0x1fb4, 0x291d, 0x1, 0x1);
        gbc.writeMem(0x3b48, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc393, gbc.sp());
        EXPECT(0x3b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01F4
        gbc.setState(0x71fc, 0xe42b, 0x87b0, 0x9d4a, 0x652b, 0xc320, 0x1, 0x1);
        gbc.writeMem(0x71fc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe42b, gbc.sp());
        EXPECT(0x71fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01F5
        gbc.setState(0x8e47, 0x99a9, 0x49f0, 0x3b27, 0x3497, 0x6d6e, 0x0, 0x0);
        gbc.writeMem(0x8e47, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x99a9, gbc.sp());
        EXPECT(0x8e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e47));
        EXPECT(0x9d, gbc.readMem(0x8e48));
        // CB 9D 01F6
        gbc.setState(0xda96, 0x9860, 0xc760, 0x8d52, 0x6744, 0xf5b1, 0x0, 0x1);
        gbc.writeMem(0xda96, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9860, gbc.sp());
        EXPECT(0xda98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda96));
        EXPECT(0x9d, gbc.readMem(0xda97));
        // CB 9D 01F7
        gbc.setState(0xa991, 0x3466, 0xcd20, 0xef29, 0x993d, 0x6d81, 0x0, 0x0);
        gbc.writeMem(0xa991, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3466, gbc.sp());
        EXPECT(0xa993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa991));
        EXPECT(0x9d, gbc.readMem(0xa992));
        // CB 9D 01F8
        gbc.setState(0x1948, 0xbdf7, 0xecd0, 0xb8d3, 0xbfe4, 0xb8e9, 0x0, 0x0);
        gbc.writeMem(0x1948, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbdf7, gbc.sp());
        EXPECT(0x194a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01F9
        gbc.setState(0x74a6, 0x288, 0xd7c0, 0xaf1b, 0x3807, 0x65b0, 0x1, 0x1);
        gbc.writeMem(0x74a6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x288, gbc.sp());
        EXPECT(0x74a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 01FA
        gbc.setState(0xc648, 0xa612, 0xe950, 0x7fbc, 0x22ed, 0x743f, 0x0, 0x0);
        gbc.writeMem(0xc648, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa612, gbc.sp());
        EXPECT(0xc64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc648));
        EXPECT(0x9d, gbc.readMem(0xc649));
        // CB 9D 01FB
        gbc.setState(0x69bf, 0xd5e6, 0xed50, 0x9bcf, 0x8755, 0x9ada, 0x1, 0x1);
        gbc.writeMem(0x69bf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd5e6, gbc.sp());
        EXPECT(0x69c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01FC
        gbc.setState(0x698b, 0xedd5, 0xd0f0, 0xf452, 0xc5fe, 0x202f, 0x0, 0x0);
        gbc.writeMem(0x698b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xedd5, gbc.sp());
        EXPECT(0x698d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 01FD
        gbc.setState(0x9583, 0x3c5d, 0x610, 0x969f, 0x85ab, 0x9644, 0x0, 0x1);
        gbc.writeMem(0x9583, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3c5d, gbc.sp());
        EXPECT(0x9585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9583));
        EXPECT(0x9d, gbc.readMem(0x9584));
        // CB 9D 01FE
        gbc.setState(0x8760, 0x173f, 0xb340, 0x3ed3, 0xa62, 0xf1df, 0x1, 0x0);
        gbc.writeMem(0x8760, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x173f, gbc.sp());
        EXPECT(0x8762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8760));
        EXPECT(0x9d, gbc.readMem(0x8761));
        // CB 9D 01FF
        gbc.setState(0x9f98, 0x9a98, 0x32b0, 0x9f4, 0xf516, 0x4bc1, 0x1, 0x1);
        gbc.writeMem(0x9f98, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9a98, gbc.sp());
        EXPECT(0x9f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f98));
        EXPECT(0x9d, gbc.readMem(0x9f99));
        // CB 9D 0200
        gbc.setState(0x744c, 0xcecc, 0xf770, 0xd021, 0xd8b9, 0x6751, 0x1, 0x0);
        gbc.writeMem(0x744c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcecc, gbc.sp());
        EXPECT(0x744e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0201
        gbc.setState(0x1fb0, 0x183d, 0x5000, 0x472b, 0xdc07, 0x6bd2, 0x0, 0x1);
        gbc.writeMem(0x1fb0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x183d, gbc.sp());
        EXPECT(0x1fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0202
        gbc.setState(0xb4e2, 0x5982, 0x7ef0, 0x65cc, 0x170c, 0xdf6e, 0x0, 0x1);
        gbc.writeMem(0xb4e2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5982, gbc.sp());
        EXPECT(0xb4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e2));
        EXPECT(0x9d, gbc.readMem(0xb4e3));
        // CB 9D 0203
        gbc.setState(0xcbe5, 0x9fd4, 0x760, 0x414d, 0x3ecc, 0x3b9b, 0x1, 0x0);
        gbc.writeMem(0xcbe5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9fd4, gbc.sp());
        EXPECT(0xcbe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe5));
        EXPECT(0x9d, gbc.readMem(0xcbe6));
        // CB 9D 0204
        gbc.setState(0xb1e3, 0xebb7, 0x7a00, 0x476, 0xd8f, 0xa998, 0x0, 0x1);
        gbc.writeMem(0xb1e3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xebb7, gbc.sp());
        EXPECT(0xb1e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e3));
        EXPECT(0x9d, gbc.readMem(0xb1e4));
        // CB 9D 0205
        gbc.setState(0x263e, 0xe4a8, 0x85e0, 0x27f8, 0xa776, 0x70e9, 0x1, 0x1);
        gbc.writeMem(0x263e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe4a8, gbc.sp());
        EXPECT(0x2640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0206
        gbc.setState(0x55a3, 0x7843, 0x7fb0, 0xb5d4, 0x46c1, 0x156e, 0x1, 0x0);
        gbc.writeMem(0x55a3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7843, gbc.sp());
        EXPECT(0x55a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0207
        gbc.setState(0x2a34, 0x4e3c, 0x6050, 0xfd7c, 0xdf16, 0x5734, 0x1, 0x0);
        gbc.writeMem(0x2a34, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4e3c, gbc.sp());
        EXPECT(0x2a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0208
        gbc.setState(0x57c4, 0xf325, 0x9740, 0x11e6, 0x5393, 0x18bf, 0x1, 0x0);
        gbc.writeMem(0x57c4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf325, gbc.sp());
        EXPECT(0x57c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0209
        gbc.setState(0x8926, 0x2d20, 0x1c30, 0x9b74, 0xb59, 0x28bf, 0x1, 0x0);
        gbc.writeMem(0x8926, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2d20, gbc.sp());
        EXPECT(0x8928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8926));
        EXPECT(0x9d, gbc.readMem(0x8927));
        // CB 9D 020A
        gbc.setState(0xe8fd, 0x70f9, 0x450, 0xa1e6, 0x4583, 0xa92a, 0x0, 0x1);
        gbc.writeMem(0xe8fd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x70f9, gbc.sp());
        EXPECT(0xe8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8fd));
        EXPECT(0x9d, gbc.readMem(0xe8fe));
        // CB 9D 020B
        gbc.setState(0x79a9, 0x8877, 0xe500, 0x6da5, 0x165f, 0xb384, 0x1, 0x0);
        gbc.writeMem(0x79a9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8877, gbc.sp());
        EXPECT(0x79ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 020C
        gbc.setState(0xc542, 0xae3e, 0xfd00, 0x80d0, 0xbc8f, 0x8d6a, 0x0, 0x0);
        gbc.writeMem(0xc542, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xae3e, gbc.sp());
        EXPECT(0xc544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc542));
        EXPECT(0x9d, gbc.readMem(0xc543));
        // CB 9D 020D
        gbc.setState(0xbd54, 0xd294, 0x9520, 0x17c2, 0xba00, 0xe5e8, 0x0, 0x1);
        gbc.writeMem(0xbd54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd294, gbc.sp());
        EXPECT(0xbd56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd54));
        EXPECT(0x9d, gbc.readMem(0xbd55));
        // CB 9D 020E
        gbc.setState(0x84da, 0x6ee7, 0x5980, 0x39e2, 0xa6bd, 0x6eed, 0x1, 0x0);
        gbc.writeMem(0x84da, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6ee7, gbc.sp());
        EXPECT(0x84dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84da));
        EXPECT(0x9d, gbc.readMem(0x84db));
        // CB 9D 020F
        gbc.setState(0xaab3, 0xb91, 0x9610, 0x4d05, 0x5c88, 0xc695, 0x0, 0x1);
        gbc.writeMem(0xaab3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb91, gbc.sp());
        EXPECT(0xaab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab3));
        EXPECT(0x9d, gbc.readMem(0xaab4));
        // CB 9D 0210
        gbc.setState(0xeb3, 0x5dee, 0xe7a0, 0x6349, 0x28f8, 0x1421, 0x1, 0x1);
        gbc.writeMem(0xeb3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5dee, gbc.sp());
        EXPECT(0xeb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0211
        gbc.setState(0x1e46, 0xb501, 0xce0, 0x584d, 0xc760, 0xe593, 0x0, 0x1);
        gbc.writeMem(0x1e46, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb501, gbc.sp());
        EXPECT(0x1e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0212
        gbc.setState(0x5a7f, 0xdaf5, 0xf6f0, 0x7912, 0x5d5a, 0x3471, 0x1, 0x1);
        gbc.writeMem(0x5a7f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdaf5, gbc.sp());
        EXPECT(0x5a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0213
        gbc.setState(0x9a76, 0x300d, 0x1650, 0x2b8b, 0x6a2e, 0x958a, 0x1, 0x0);
        gbc.writeMem(0x9a76, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x300d, gbc.sp());
        EXPECT(0x9a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a76));
        EXPECT(0x9d, gbc.readMem(0x9a77));
        // CB 9D 0214
        gbc.setState(0xd471, 0x1dc5, 0xdbc0, 0x3b47, 0xf3d0, 0x327b, 0x0, 0x0);
        gbc.writeMem(0xd471, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1dc5, gbc.sp());
        EXPECT(0xd473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd471));
        EXPECT(0x9d, gbc.readMem(0xd472));
        // CB 9D 0216
        gbc.setState(0xe4dc, 0xab49, 0xb960, 0xe736, 0xef1a, 0xb41, 0x0, 0x0);
        gbc.writeMem(0xe4dc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xab49, gbc.sp());
        EXPECT(0xe4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4dc));
        EXPECT(0x9d, gbc.readMem(0xe4dd));
        // CB 9D 0217
        gbc.setState(0x3c3, 0x5b96, 0xf0, 0xf492, 0xeeb9, 0xae86, 0x0, 0x0);
        gbc.writeMem(0x3c3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5b96, gbc.sp());
        EXPECT(0x3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0218
        gbc.setState(0xbfb, 0x3141, 0x52c0, 0x24b8, 0xd9bf, 0x78d3, 0x1, 0x1);
        gbc.writeMem(0xbfb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3141, gbc.sp());
        EXPECT(0xbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0219
        gbc.setState(0x28d6, 0xa71, 0x84e0, 0x1809, 0x53b6, 0xab03, 0x1, 0x0);
        gbc.writeMem(0x28d6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa71, gbc.sp());
        EXPECT(0x28d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 021A
        gbc.setState(0x3f00, 0x7372, 0x6fd0, 0xd7d0, 0xcc4a, 0x87bc, 0x0, 0x1);
        gbc.writeMem(0x3f00, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7372, gbc.sp());
        EXPECT(0x3f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 021B
        gbc.setState(0xe584, 0x6e1, 0xa750, 0x684c, 0xda24, 0x6d31, 0x0, 0x1);
        gbc.writeMem(0xe584, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6e1, gbc.sp());
        EXPECT(0xe586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe584));
        EXPECT(0x9d, gbc.readMem(0xe585));
        // CB 9D 021C
        gbc.setState(0xe0f2, 0x6564, 0xcba0, 0xea93, 0x7dbd, 0x6c90, 0x0, 0x1);
        gbc.writeMem(0xe0f2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6564, gbc.sp());
        EXPECT(0xe0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f2));
        EXPECT(0x9d, gbc.readMem(0xe0f3));
        // CB 9D 021D
        gbc.setState(0xba02, 0xbdb2, 0xa940, 0x1e44, 0xb4a7, 0x9e29, 0x1, 0x0);
        gbc.writeMem(0xba02, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbdb2, gbc.sp());
        EXPECT(0xba04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba02));
        EXPECT(0x9d, gbc.readMem(0xba03));
        // CB 9D 021F
        gbc.setState(0xca32, 0xb657, 0xab60, 0xf244, 0x5265, 0xfadb, 0x0, 0x0);
        gbc.writeMem(0xca32, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb657, gbc.sp());
        EXPECT(0xca34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca32));
        EXPECT(0x9d, gbc.readMem(0xca33));
        // CB 9D 0221
        gbc.setState(0xcbec, 0x995, 0xc210, 0xcaa9, 0x43d6, 0x9885, 0x0, 0x0);
        gbc.writeMem(0xcbec, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x995, gbc.sp());
        EXPECT(0xcbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbec));
        EXPECT(0x9d, gbc.readMem(0xcbed));
        // CB 9D 0222
        gbc.setState(0x36f4, 0x2c07, 0x620, 0x32f8, 0xc452, 0x7d4d, 0x1, 0x0);
        gbc.writeMem(0x36f4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2c07, gbc.sp());
        EXPECT(0x36f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0223
        gbc.setState(0x10c7, 0x7043, 0x2d90, 0xe5e, 0xd2ee, 0xcbc6, 0x0, 0x1);
        gbc.writeMem(0x10c7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7043, gbc.sp());
        EXPECT(0x10c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0224
        gbc.setState(0xb38b, 0x96d5, 0xdd80, 0x8fc5, 0x1adc, 0xadc7, 0x1, 0x0);
        gbc.writeMem(0xb38b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x96d5, gbc.sp());
        EXPECT(0xb38d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38b));
        EXPECT(0x9d, gbc.readMem(0xb38c));
        // CB 9D 0225
        gbc.setState(0xd75d, 0x2340, 0x1360, 0x3fbd, 0xdaf2, 0x6f4a, 0x1, 0x1);
        gbc.writeMem(0xd75d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2340, gbc.sp());
        EXPECT(0xd75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75d));
        EXPECT(0x9d, gbc.readMem(0xd75e));
        // CB 9D 0226
        gbc.setState(0x5d24, 0x5239, 0xb770, 0x67ac, 0x59ad, 0xda5, 0x1, 0x1);
        gbc.writeMem(0x5d24, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5239, gbc.sp());
        EXPECT(0x5d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0227
        gbc.setState(0x912d, 0x6653, 0xb050, 0x292a, 0x15c9, 0x6cc9, 0x0, 0x1);
        gbc.writeMem(0x912d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6653, gbc.sp());
        EXPECT(0x912f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x912d));
        EXPECT(0x9d, gbc.readMem(0x912e));
        // CB 9D 0228
        gbc.setState(0x66d6, 0xa1, 0xb8d0, 0x9e9e, 0xfd71, 0x4f4, 0x0, 0x1);
        gbc.writeMem(0x66d6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa1, gbc.sp());
        EXPECT(0x66d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0229
        gbc.setState(0x1d99, 0x9004, 0xa0e0, 0xcdc, 0xd40c, 0x927e, 0x0, 0x1);
        gbc.writeMem(0x1d99, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9004, gbc.sp());
        EXPECT(0x1d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 022A
        gbc.setState(0xb06a, 0x1467, 0x3350, 0xeb57, 0xf930, 0xe08f, 0x0, 0x0);
        gbc.writeMem(0xb06a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1467, gbc.sp());
        EXPECT(0xb06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06a));
        EXPECT(0x9d, gbc.readMem(0xb06b));
        // CB 9D 022B
        gbc.setState(0xee63, 0xf88e, 0xed0, 0xa151, 0xf85a, 0x2338, 0x0, 0x0);
        gbc.writeMem(0xee63, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf88e, gbc.sp());
        EXPECT(0xee65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee63));
        EXPECT(0x9d, gbc.readMem(0xee64));
        // CB 9D 022C
        gbc.setState(0x7f2, 0xdcf6, 0xb0d0, 0x4025, 0xde75, 0x810f, 0x0, 0x1);
        gbc.writeMem(0x7f2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdcf6, gbc.sp());
        EXPECT(0x7f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 022D
        gbc.setState(0xcf7d, 0x2fab, 0xf5b0, 0xbc6b, 0x6256, 0x6feb, 0x1, 0x1);
        gbc.writeMem(0xcf7d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2fab, gbc.sp());
        EXPECT(0xcf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7d));
        EXPECT(0x9d, gbc.readMem(0xcf7e));
        // CB 9D 022E
        gbc.setState(0x9e04, 0xc5a3, 0xd830, 0xfad1, 0x7760, 0xbdcf, 0x0, 0x0);
        gbc.writeMem(0x9e04, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc5a3, gbc.sp());
        EXPECT(0x9e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e04));
        EXPECT(0x9d, gbc.readMem(0x9e05));
        // CB 9D 022F
        gbc.setState(0x414a, 0xf476, 0x3170, 0xe5e5, 0xa8fc, 0xce3c, 0x0, 0x0);
        gbc.writeMem(0x414a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf476, gbc.sp());
        EXPECT(0x414c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0230
        gbc.setState(0x7b72, 0x1318, 0x53a0, 0x4f49, 0xf89a, 0xb5cc, 0x0, 0x0);
        gbc.writeMem(0x7b72, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1318, gbc.sp());
        EXPECT(0x7b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0231
        gbc.setState(0xb8d7, 0x1eb2, 0x1ca0, 0x8d7a, 0x6915, 0xd59b, 0x1, 0x0);
        gbc.writeMem(0xb8d7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1eb2, gbc.sp());
        EXPECT(0xb8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d7));
        EXPECT(0x9d, gbc.readMem(0xb8d8));
        // CB 9D 0233
        gbc.setState(0xa34, 0x4b80, 0x2d90, 0xd5f8, 0x5e62, 0xb879, 0x0, 0x1);
        gbc.writeMem(0xa34, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4b80, gbc.sp());
        EXPECT(0xa36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0234
        gbc.setState(0x104b, 0xccb1, 0x41c0, 0xd7b0, 0x491c, 0x26e6, 0x1, 0x0);
        gbc.writeMem(0x104b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xccb1, gbc.sp());
        EXPECT(0x104d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0236
        gbc.setState(0xa8cb, 0x9c4e, 0x27a0, 0x15f4, 0x7a5c, 0x833c, 0x0, 0x1);
        gbc.writeMem(0xa8cb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9c4e, gbc.sp());
        EXPECT(0xa8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8cb));
        EXPECT(0x9d, gbc.readMem(0xa8cc));
        // CB 9D 0237
        gbc.setState(0xaa6f, 0xbe1c, 0x71c0, 0x4c28, 0x212e, 0x5165, 0x0, 0x1);
        gbc.writeMem(0xaa6f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbe1c, gbc.sp());
        EXPECT(0xaa71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa6f));
        EXPECT(0x9d, gbc.readMem(0xaa70));
        // CB 9D 0238
        gbc.setState(0x9bb8, 0xbe56, 0x940, 0x188c, 0xaf10, 0xb34e, 0x0, 0x1);
        gbc.writeMem(0x9bb8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbe56, gbc.sp());
        EXPECT(0x9bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb8));
        EXPECT(0x9d, gbc.readMem(0x9bb9));
        // CB 9D 0239
        gbc.setState(0x5904, 0x328c, 0xbe0, 0xf445, 0xb260, 0x9981, 0x0, 0x1);
        gbc.writeMem(0x5904, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x328c, gbc.sp());
        EXPECT(0x5906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 023A
        gbc.setState(0x161f, 0xfb51, 0xe0c0, 0x5d34, 0x210a, 0x7442, 0x1, 0x1);
        gbc.writeMem(0x161f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfb51, gbc.sp());
        EXPECT(0x1621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 023B
        gbc.setState(0xd5e2, 0x19d3, 0x4f10, 0x5444, 0x117f, 0xd1f2, 0x1, 0x0);
        gbc.writeMem(0xd5e2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x19d3, gbc.sp());
        EXPECT(0xd5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e2));
        EXPECT(0x9d, gbc.readMem(0xd5e3));
        // CB 9D 023D
        gbc.setState(0xc324, 0x401d, 0x7140, 0x307c, 0x56ee, 0x9677, 0x1, 0x1);
        gbc.writeMem(0xc324, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x401d, gbc.sp());
        EXPECT(0xc326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc324));
        EXPECT(0x9d, gbc.readMem(0xc325));
        // CB 9D 023E
        gbc.setState(0xc53b, 0x3a5e, 0x57d0, 0xa4e4, 0x435d, 0x83ab, 0x0, 0x1);
        gbc.writeMem(0xc53b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3a5e, gbc.sp());
        EXPECT(0xc53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53b));
        EXPECT(0x9d, gbc.readMem(0xc53c));
        // CB 9D 023F
        gbc.setState(0x7a5e, 0x2b92, 0x9d0, 0xd7ea, 0x2628, 0x42e5, 0x0, 0x0);
        gbc.writeMem(0x7a5e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2b92, gbc.sp());
        EXPECT(0x7a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0240
        gbc.setState(0x5dc1, 0xff8b, 0xd390, 0xf70e, 0xdb56, 0xa5eb, 0x0, 0x1);
        gbc.writeMem(0x5dc1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xff8b, gbc.sp());
        EXPECT(0x5dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0241
        gbc.setState(0x77dd, 0xebf, 0x7cc0, 0xf357, 0x947b, 0x61fd, 0x0, 0x1);
        gbc.writeMem(0x77dd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xebf, gbc.sp());
        EXPECT(0x77df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0242
        gbc.setState(0xbda8, 0x5362, 0xf80, 0xefa2, 0xb762, 0x5726, 0x1, 0x0);
        gbc.writeMem(0xbda8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5362, gbc.sp());
        EXPECT(0xbdaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda8));
        EXPECT(0x9d, gbc.readMem(0xbda9));
        // CB 9D 0243
        gbc.setState(0x8ac0, 0x2c28, 0x2a50, 0xc825, 0x7664, 0x4a0e, 0x0, 0x0);
        gbc.writeMem(0x8ac0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2c28, gbc.sp());
        EXPECT(0x8ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac0));
        EXPECT(0x9d, gbc.readMem(0x8ac1));
        // CB 9D 0245
        gbc.setState(0xa4ef, 0x92b0, 0x750, 0xb7ab, 0x5013, 0x1f7a, 0x1, 0x1);
        gbc.writeMem(0xa4ef, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x92b0, gbc.sp());
        EXPECT(0xa4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ef));
        EXPECT(0x9d, gbc.readMem(0xa4f0));
        // CB 9D 0246
        gbc.setState(0x8228, 0xce0c, 0xbac0, 0xf37d, 0xdda5, 0xe24d, 0x1, 0x0);
        gbc.writeMem(0x8228, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xce0c, gbc.sp());
        EXPECT(0x822a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8228));
        EXPECT(0x9d, gbc.readMem(0x8229));
        // CB 9D 0247
        gbc.setState(0x7ed7, 0xccf4, 0xfff0, 0x87ee, 0x1fed, 0x4fae, 0x0, 0x0);
        gbc.writeMem(0x7ed7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xccf4, gbc.sp());
        EXPECT(0x7ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0249
        gbc.setState(0x605a, 0x823, 0x6ca0, 0xa430, 0xe80a, 0x18e6, 0x1, 0x0);
        gbc.writeMem(0x605a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x823, gbc.sp());
        EXPECT(0x605c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 024A
        gbc.setState(0xd57b, 0x7c06, 0xf060, 0x9594, 0x8561, 0xdd13, 0x1, 0x1);
        gbc.writeMem(0xd57b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7c06, gbc.sp());
        EXPECT(0xd57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57b));
        EXPECT(0x9d, gbc.readMem(0xd57c));
        // CB 9D 024B
        gbc.setState(0xc85b, 0xf0af, 0x75b0, 0x4629, 0x27f3, 0x97fc, 0x0, 0x1);
        gbc.writeMem(0xc85b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf0af, gbc.sp());
        EXPECT(0xc85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85b));
        EXPECT(0x9d, gbc.readMem(0xc85c));
        // CB 9D 024C
        gbc.setState(0x6e86, 0x9313, 0x2f50, 0x5e57, 0x871b, 0xfd7a, 0x1, 0x0);
        gbc.writeMem(0x6e86, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9313, gbc.sp());
        EXPECT(0x6e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 024D
        gbc.setState(0x48e6, 0x2e8, 0xe8f0, 0xb8, 0x9944, 0x22b4, 0x1, 0x1);
        gbc.writeMem(0x48e6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2e8, gbc.sp());
        EXPECT(0x48e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 024E
        gbc.setState(0x3691, 0x9b51, 0x2b20, 0x525a, 0x27ca, 0x705a, 0x1, 0x1);
        gbc.writeMem(0x3691, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9b51, gbc.sp());
        EXPECT(0x3693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 024F
        gbc.setState(0x891d, 0xc486, 0x5700, 0xaa91, 0x5abf, 0xae96, 0x1, 0x1);
        gbc.writeMem(0x891d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc486, gbc.sp());
        EXPECT(0x891f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891d));
        EXPECT(0x9d, gbc.readMem(0x891e));
        // CB 9D 0250
        gbc.setState(0x83e9, 0xdaa6, 0x51d0, 0xcafe, 0x75de, 0x573c, 0x1, 0x1);
        gbc.writeMem(0x83e9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdaa6, gbc.sp());
        EXPECT(0x83eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e9));
        EXPECT(0x9d, gbc.readMem(0x83ea));
        // CB 9D 0251
        gbc.setState(0x25bb, 0xfbc1, 0x1660, 0xa681, 0xa683, 0x5c73, 0x0, 0x0);
        gbc.writeMem(0x25bb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfbc1, gbc.sp());
        EXPECT(0x25bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0252
        gbc.setState(0x3170, 0x488b, 0xaab0, 0xf93f, 0xbb03, 0x4ce9, 0x0, 0x1);
        gbc.writeMem(0x3170, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x488b, gbc.sp());
        EXPECT(0x3172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0253
        gbc.setState(0x318, 0x88f, 0x6d90, 0x672b, 0x5e45, 0x7830, 0x0, 0x0);
        gbc.writeMem(0x318, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x88f, gbc.sp());
        EXPECT(0x31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0254
        gbc.setState(0xbfb1, 0xfcde, 0x8030, 0xd86a, 0x80ae, 0x7e95, 0x1, 0x1);
        gbc.writeMem(0xbfb1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfcde, gbc.sp());
        EXPECT(0xbfb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb1));
        EXPECT(0x9d, gbc.readMem(0xbfb2));
        // CB 9D 0255
        gbc.setState(0xe2c, 0x27a7, 0x1630, 0xe239, 0x1c3e, 0xdf6e, 0x0, 0x0);
        gbc.writeMem(0xe2c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x27a7, gbc.sp());
        EXPECT(0xe2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0256
        gbc.setState(0x371a, 0x3caf, 0x23e0, 0xd3a6, 0xef9f, 0xe128, 0x0, 0x0);
        gbc.writeMem(0x371a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3caf, gbc.sp());
        EXPECT(0x371c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0258
        gbc.setState(0xdd67, 0xe597, 0x8a20, 0x764b, 0x42f8, 0xb42, 0x0, 0x1);
        gbc.writeMem(0xdd67, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe597, gbc.sp());
        EXPECT(0xdd69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd67));
        EXPECT(0x9d, gbc.readMem(0xdd68));
        // CB 9D 0259
        gbc.setState(0x9b1e, 0x69a3, 0xb9f0, 0xfa35, 0xe925, 0xeda8, 0x1, 0x0);
        gbc.writeMem(0x9b1e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x69a3, gbc.sp());
        EXPECT(0x9b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1e));
        EXPECT(0x9d, gbc.readMem(0x9b1f));
        // CB 9D 025A
        gbc.setState(0xe9a6, 0xbd7e, 0x9bc0, 0x1199, 0xd0d8, 0x9a29, 0x1, 0x0);
        gbc.writeMem(0xe9a6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbd7e, gbc.sp());
        EXPECT(0xe9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a6));
        EXPECT(0x9d, gbc.readMem(0xe9a7));
        // CB 9D 025B
        gbc.setState(0x9a12, 0x2892, 0x5650, 0x436e, 0xdb92, 0xb372, 0x1, 0x1);
        gbc.writeMem(0x9a12, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2892, gbc.sp());
        EXPECT(0x9a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a12));
        EXPECT(0x9d, gbc.readMem(0x9a13));
        // CB 9D 025C
        gbc.setState(0x914a, 0xbe8c, 0x4e30, 0x378d, 0x39c0, 0x440f, 0x0, 0x0);
        gbc.writeMem(0x914a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbe8c, gbc.sp());
        EXPECT(0x914c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x914a));
        EXPECT(0x9d, gbc.readMem(0x914b));
        // CB 9D 025D
        gbc.setState(0x37d5, 0x9f0d, 0x9f50, 0x237e, 0x50ea, 0xf31d, 0x1, 0x1);
        gbc.writeMem(0x37d5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9f0d, gbc.sp());
        EXPECT(0x37d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 025E
        gbc.setState(0x8664, 0x133e, 0xd5e0, 0xa53e, 0x9fe8, 0x5dd7, 0x0, 0x0);
        gbc.writeMem(0x8664, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x133e, gbc.sp());
        EXPECT(0x8666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8664));
        EXPECT(0x9d, gbc.readMem(0x8665));
        // CB 9D 025F
        gbc.setState(0x38e5, 0xeb79, 0xf210, 0xca73, 0xc65c, 0xd732, 0x1, 0x0);
        gbc.writeMem(0x38e5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xeb79, gbc.sp());
        EXPECT(0x38e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0260
        gbc.setState(0x9f3f, 0x1ef4, 0x7b20, 0xe4c8, 0xcbc3, 0xf78f, 0x0, 0x1);
        gbc.writeMem(0x9f3f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1ef4, gbc.sp());
        EXPECT(0x9f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f3f));
        EXPECT(0x9d, gbc.readMem(0x9f40));
        // CB 9D 0261
        gbc.setState(0x1eb3, 0xf18c, 0x6160, 0xf9cf, 0x3814, 0x3925, 0x1, 0x1);
        gbc.writeMem(0x1eb3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf18c, gbc.sp());
        EXPECT(0x1eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0262
        gbc.setState(0x7aea, 0x9b8e, 0xf450, 0xe345, 0xdb21, 0x580f, 0x0, 0x0);
        gbc.writeMem(0x7aea, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9b8e, gbc.sp());
        EXPECT(0x7aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0264
        gbc.setState(0x5, 0x9615, 0x6400, 0x8caa, 0x8f51, 0xb1a8, 0x0, 0x0);
        gbc.writeMem(0x5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9615, gbc.sp());
        EXPECT(0x7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0265
        gbc.setState(0x1214, 0x82d5, 0x1b50, 0x8f1e, 0x2ab6, 0x387c, 0x0, 0x1);
        gbc.writeMem(0x1214, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x82d5, gbc.sp());
        EXPECT(0x1216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0267
        gbc.setState(0xc455, 0xad47, 0x3f0, 0xf88, 0xd258, 0x108, 0x0, 0x0);
        gbc.writeMem(0xc455, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xad47, gbc.sp());
        EXPECT(0xc457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc455));
        EXPECT(0x9d, gbc.readMem(0xc456));
        // CB 9D 0268
        gbc.setState(0x9c56, 0xe9a4, 0x25f0, 0xa430, 0xad94, 0xf82f, 0x1, 0x1);
        gbc.writeMem(0x9c56, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe9a4, gbc.sp());
        EXPECT(0x9c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c56));
        EXPECT(0x9d, gbc.readMem(0x9c57));
        // CB 9D 0269
        gbc.setState(0xcef5, 0xffdd, 0xafe0, 0xa6ee, 0x74ed, 0x11ec, 0x1, 0x1);
        gbc.writeMem(0xcef5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xffdd, gbc.sp());
        EXPECT(0xcef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef5));
        EXPECT(0x9d, gbc.readMem(0xcef6));
        // CB 9D 026A
        gbc.setState(0x515b, 0xd327, 0xeb90, 0x4c3a, 0x904d, 0xc626, 0x0, 0x1);
        gbc.writeMem(0x515b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd327, gbc.sp());
        EXPECT(0x515d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 026B
        gbc.setState(0x3524, 0xa333, 0x6120, 0x758f, 0xf00, 0xb54c, 0x1, 0x0);
        gbc.writeMem(0x3524, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa333, gbc.sp());
        EXPECT(0x3526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 026C
        gbc.setState(0x7ba, 0x6242, 0x1a90, 0xd19c, 0xccd4, 0x1f88, 0x0, 0x1);
        gbc.writeMem(0x7ba, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6242, gbc.sp());
        EXPECT(0x7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 026D
        gbc.setState(0x40f2, 0x5651, 0x31e0, 0xa85f, 0xb3ab, 0xbd61, 0x1, 0x1);
        gbc.writeMem(0x40f2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5651, gbc.sp());
        EXPECT(0x40f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 026E
        gbc.setState(0x83a4, 0xc4bc, 0x5060, 0xf041, 0xd7ad, 0xa1b0, 0x1, 0x0);
        gbc.writeMem(0x83a4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc4bc, gbc.sp());
        EXPECT(0x83a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a4));
        EXPECT(0x9d, gbc.readMem(0x83a5));
        // CB 9D 026F
        gbc.setState(0x483c, 0x5f0, 0x8090, 0x6d02, 0x18bb, 0x90ee, 0x1, 0x1);
        gbc.writeMem(0x483c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5f0, gbc.sp());
        EXPECT(0x483e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0270
        gbc.setState(0x5251, 0xfa8e, 0xbe0, 0x80a, 0xdc74, 0x5dd8, 0x0, 0x1);
        gbc.writeMem(0x5251, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfa8e, gbc.sp());
        EXPECT(0x5253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0271
        gbc.setState(0xe14d, 0x43e9, 0x8e30, 0x1671, 0x582, 0x5852, 0x1, 0x0);
        gbc.writeMem(0xe14d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x43e9, gbc.sp());
        EXPECT(0xe14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14d));
        EXPECT(0x9d, gbc.readMem(0xe14e));
        // CB 9D 0272
        gbc.setState(0xa5dd, 0xbad2, 0x8710, 0xd30f, 0x7122, 0x6887, 0x1, 0x1);
        gbc.writeMem(0xa5dd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbad2, gbc.sp());
        EXPECT(0xa5df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5dd));
        EXPECT(0x9d, gbc.readMem(0xa5de));
        // CB 9D 0273
        gbc.setState(0xd3f, 0xb494, 0x9c50, 0xc1f1, 0x5bb9, 0x6803, 0x0, 0x0);
        gbc.writeMem(0xd3f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb494, gbc.sp());
        EXPECT(0xd41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0274
        gbc.setState(0xb6d9, 0x175b, 0xa530, 0x7bdf, 0xd7d, 0xb53, 0x1, 0x0);
        gbc.writeMem(0xb6d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x175b, gbc.sp());
        EXPECT(0xb6db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d9));
        EXPECT(0x9d, gbc.readMem(0xb6da));
        // CB 9D 0275
        gbc.setState(0x27f2, 0x8a32, 0x7b60, 0xb389, 0x70c9, 0xff87, 0x0, 0x1);
        gbc.writeMem(0x27f2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8a32, gbc.sp());
        EXPECT(0x27f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0276
        gbc.setState(0x6894, 0xc7ca, 0xc450, 0x97a4, 0x7d0, 0xe1cf, 0x0, 0x0);
        gbc.writeMem(0x6894, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc7ca, gbc.sp());
        EXPECT(0x6896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0277
        gbc.setState(0x821a, 0x9d1, 0xa3c0, 0xbc04, 0x406, 0x4eaa, 0x1, 0x1);
        gbc.writeMem(0x821a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9d1, gbc.sp());
        EXPECT(0x821c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821a));
        EXPECT(0x9d, gbc.readMem(0x821b));
        // CB 9D 0278
        gbc.setState(0xb704, 0xc29e, 0x4990, 0xe8c5, 0x39f8, 0x3451, 0x0, 0x1);
        gbc.writeMem(0xb704, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc29e, gbc.sp());
        EXPECT(0xb706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb704));
        EXPECT(0x9d, gbc.readMem(0xb705));
        // CB 9D 0279
        gbc.setState(0xd89e, 0x98ed, 0x5a30, 0x7373, 0x60ab, 0xb012, 0x0, 0x0);
        gbc.writeMem(0xd89e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x98ed, gbc.sp());
        EXPECT(0xd8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89e));
        EXPECT(0x9d, gbc.readMem(0xd89f));
        // CB 9D 027A
        gbc.setState(0xc4dc, 0x67d6, 0x8fd0, 0x5513, 0xcf54, 0x9440, 0x0, 0x0);
        gbc.writeMem(0xc4dc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x67d6, gbc.sp());
        EXPECT(0xc4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4dc));
        EXPECT(0x9d, gbc.readMem(0xc4dd));
        // CB 9D 027B
        gbc.setState(0x639d, 0x1da2, 0xd80, 0xd923, 0x3d5a, 0x9aec, 0x1, 0x0);
        gbc.writeMem(0x639d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1da2, gbc.sp());
        EXPECT(0x639f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 027C
        gbc.setState(0xd534, 0xd5d8, 0xa0a0, 0x8c68, 0xf6a5, 0xea3a, 0x1, 0x0);
        gbc.writeMem(0xd534, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd5d8, gbc.sp());
        EXPECT(0xd536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd534));
        EXPECT(0x9d, gbc.readMem(0xd535));
        // CB 9D 027D
        gbc.setState(0xbc86, 0x829c, 0x6690, 0xd202, 0x79fd, 0xcf7e, 0x0, 0x0);
        gbc.writeMem(0xbc86, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x829c, gbc.sp());
        EXPECT(0xbc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc86));
        EXPECT(0x9d, gbc.readMem(0xbc87));
        // CB 9D 027E
        gbc.setState(0x63fb, 0xfa3b, 0x9a10, 0x60c2, 0x8518, 0xec3a, 0x0, 0x0);
        gbc.writeMem(0x63fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfa3b, gbc.sp());
        EXPECT(0x63fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 027F
        gbc.setState(0xe713, 0x4bf2, 0xf790, 0x7294, 0xde78, 0x4a89, 0x0, 0x0);
        gbc.writeMem(0xe713, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4bf2, gbc.sp());
        EXPECT(0xe715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe713));
        EXPECT(0x9d, gbc.readMem(0xe714));
        // CB 9D 0280
        gbc.setState(0xb13f, 0x5733, 0xf6c0, 0x881a, 0x1def, 0x455, 0x0, 0x1);
        gbc.writeMem(0xb13f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5733, gbc.sp());
        EXPECT(0xb141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb13f));
        EXPECT(0x9d, gbc.readMem(0xb140));
        // CB 9D 0281
        gbc.setState(0x5609, 0xf362, 0xbe00, 0x4bb3, 0x339, 0x407b, 0x1, 0x1);
        gbc.writeMem(0x5609, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf362, gbc.sp());
        EXPECT(0x560b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0282
        gbc.setState(0xdc62, 0xd181, 0xf8c0, 0x1b28, 0x4cab, 0x1de0, 0x1, 0x1);
        gbc.writeMem(0xdc62, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd181, gbc.sp());
        EXPECT(0xdc64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc62));
        EXPECT(0x9d, gbc.readMem(0xdc63));
        // CB 9D 0283
        gbc.setState(0x5636, 0xcc90, 0x32b0, 0x3c03, 0x1c99, 0x9bee, 0x1, 0x0);
        gbc.writeMem(0x5636, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcc90, gbc.sp());
        EXPECT(0x5638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0284
        gbc.setState(0x97fd, 0x533, 0x2830, 0xaa21, 0x3faa, 0x6a84, 0x0, 0x0);
        gbc.writeMem(0x97fd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x533, gbc.sp());
        EXPECT(0x97ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97fd));
        EXPECT(0x9d, gbc.readMem(0x97fe));
        // CB 9D 0286
        gbc.setState(0xdcdb, 0xad1a, 0x380, 0xe17c, 0x8081, 0x52bc, 0x0, 0x0);
        gbc.writeMem(0xdcdb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xad1a, gbc.sp());
        EXPECT(0xdcdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcdb));
        EXPECT(0x9d, gbc.readMem(0xdcdc));
        // CB 9D 0287
        gbc.setState(0x34af, 0x8661, 0xdc60, 0xe21a, 0x8ee1, 0x97f2, 0x0, 0x1);
        gbc.writeMem(0x34af, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8661, gbc.sp());
        EXPECT(0x34b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0288
        gbc.setState(0x79dc, 0x88f6, 0xe830, 0x141b, 0x25b6, 0xcf9a, 0x0, 0x1);
        gbc.writeMem(0x79dc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x88f6, gbc.sp());
        EXPECT(0x79de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 028A
        gbc.setState(0x21e1, 0x43a9, 0x86d0, 0xd40f, 0x72da, 0x36dc, 0x0, 0x1);
        gbc.writeMem(0x21e1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x43a9, gbc.sp());
        EXPECT(0x21e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 028B
        gbc.setState(0x3812, 0x45c2, 0x5100, 0x16cb, 0x15e3, 0x22a9, 0x0, 0x0);
        gbc.writeMem(0x3812, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x45c2, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 028C
        gbc.setState(0x8609, 0xcd02, 0x67b0, 0xef1f, 0xab06, 0x4737, 0x1, 0x0);
        gbc.writeMem(0x8609, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcd02, gbc.sp());
        EXPECT(0x860b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8609));
        EXPECT(0x9d, gbc.readMem(0x860a));
        // CB 9D 028D
        gbc.setState(0x6437, 0xefe, 0x6e50, 0xbd07, 0xdce7, 0x6741, 0x0, 0x1);
        gbc.writeMem(0x6437, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xefe, gbc.sp());
        EXPECT(0x6439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 028E
        gbc.setState(0xdb70, 0x4d04, 0xe0f0, 0xe63c, 0xdbf8, 0x71eb, 0x0, 0x1);
        gbc.writeMem(0xdb70, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4d04, gbc.sp());
        EXPECT(0xdb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb70));
        EXPECT(0x9d, gbc.readMem(0xdb71));
        // CB 9D 028F
        gbc.setState(0x96e6, 0x632e, 0xc910, 0x30da, 0x38b0, 0xac42, 0x1, 0x0);
        gbc.writeMem(0x96e6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x632e, gbc.sp());
        EXPECT(0x96e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e6));
        EXPECT(0x9d, gbc.readMem(0x96e7));
        // CB 9D 0290
        gbc.setState(0x6cce, 0xd088, 0x1e80, 0xf714, 0x3240, 0x645a, 0x0, 0x1);
        gbc.writeMem(0x6cce, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd088, gbc.sp());
        EXPECT(0x6cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0291
        gbc.setState(0xc897, 0xf167, 0x4910, 0xa9ab, 0xe2ad, 0x8a28, 0x0, 0x0);
        gbc.writeMem(0xc897, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf167, gbc.sp());
        EXPECT(0xc899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc897));
        EXPECT(0x9d, gbc.readMem(0xc898));
        // CB 9D 0292
        gbc.setState(0x1974, 0x9f80, 0xe0d0, 0x9c13, 0xbaa9, 0x2a8c, 0x0, 0x0);
        gbc.writeMem(0x1974, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9f80, gbc.sp());
        EXPECT(0x1976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0293
        gbc.setState(0xc56b, 0xbf7d, 0xbed0, 0xba69, 0xce03, 0x28b1, 0x1, 0x0);
        gbc.writeMem(0xc56b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbf7d, gbc.sp());
        EXPECT(0xc56d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56b));
        EXPECT(0x9d, gbc.readMem(0xc56c));
        // CB 9D 0294
        gbc.setState(0x485, 0x76f9, 0x490, 0xe5a4, 0xeb38, 0xe6c3, 0x0, 0x0);
        gbc.writeMem(0x485, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x76f9, gbc.sp());
        EXPECT(0x487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0295
        gbc.setState(0x601b, 0x7b00, 0xf400, 0x6192, 0x5eac, 0x2eb4, 0x1, 0x0);
        gbc.writeMem(0x601b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7b00, gbc.sp());
        EXPECT(0x601d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0297
        gbc.setState(0x8669, 0xdd0a, 0xb730, 0x6aa3, 0x4b01, 0xbef4, 0x1, 0x1);
        gbc.writeMem(0x8669, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdd0a, gbc.sp());
        EXPECT(0x866b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8669));
        EXPECT(0x9d, gbc.readMem(0x866a));
        // CB 9D 0298
        gbc.setState(0x5c1b, 0x813b, 0x3fa0, 0x3b6d, 0xdf6b, 0xbb29, 0x1, 0x0);
        gbc.writeMem(0x5c1b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x813b, gbc.sp());
        EXPECT(0x5c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0299
        gbc.setState(0xb2b8, 0xd7b3, 0x180, 0x9418, 0x2039, 0xf4b1, 0x1, 0x1);
        gbc.writeMem(0xb2b8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd7b3, gbc.sp());
        EXPECT(0xb2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b8));
        EXPECT(0x9d, gbc.readMem(0xb2b9));
        // CB 9D 029A
        gbc.setState(0x75fb, 0xad38, 0x2290, 0xd2a3, 0x1d9a, 0x689, 0x0, 0x1);
        gbc.writeMem(0x75fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xad38, gbc.sp());
        EXPECT(0x75fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 029B
        gbc.setState(0x978c, 0xef6c, 0x9120, 0x5c40, 0x35d1, 0x1daa, 0x1, 0x1);
        gbc.writeMem(0x978c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xef6c, gbc.sp());
        EXPECT(0x978e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978c));
        EXPECT(0x9d, gbc.readMem(0x978d));
        // CB 9D 029C
        gbc.setState(0x34e7, 0xb024, 0x9e90, 0x7002, 0x615f, 0x869e, 0x1, 0x1);
        gbc.writeMem(0x34e7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb024, gbc.sp());
        EXPECT(0x34e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 029D
        gbc.setState(0x1596, 0xdefb, 0xa080, 0x7ce8, 0x6414, 0xb59f, 0x0, 0x1);
        gbc.writeMem(0x1596, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdefb, gbc.sp());
        EXPECT(0x1598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 029E
        gbc.setState(0x5650, 0x1d33, 0xfd80, 0x2b30, 0x9b3f, 0x796c, 0x0, 0x0);
        gbc.writeMem(0x5650, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1d33, gbc.sp());
        EXPECT(0x5652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 029F
        gbc.setState(0xa1b7, 0x54c2, 0xccd0, 0x8e55, 0x15d, 0x7cdf, 0x0, 0x0);
        gbc.writeMem(0xa1b7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x54c2, gbc.sp());
        EXPECT(0xa1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b7));
        EXPECT(0x9d, gbc.readMem(0xa1b8));
        // CB 9D 02A0
        gbc.setState(0x4587, 0x7482, 0x78e0, 0xd46c, 0x24e9, 0xe449, 0x0, 0x1);
        gbc.writeMem(0x4587, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7482, gbc.sp());
        EXPECT(0x4589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02A1
        gbc.setState(0xb930, 0x766d, 0x9aa0, 0x2d39, 0x832e, 0xda57, 0x0, 0x1);
        gbc.writeMem(0xb930, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x766d, gbc.sp());
        EXPECT(0xb932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb930));
        EXPECT(0x9d, gbc.readMem(0xb931));
        // CB 9D 02A2
        gbc.setState(0x9c14, 0xda03, 0x7520, 0x31dd, 0x17c3, 0x54a2, 0x1, 0x0);
        gbc.writeMem(0x9c14, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xda03, gbc.sp());
        EXPECT(0x9c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c14));
        EXPECT(0x9d, gbc.readMem(0x9c15));
        // CB 9D 02A3
        gbc.setState(0x38b0, 0xb57, 0xb180, 0x66c1, 0x82a7, 0x37fd, 0x1, 0x0);
        gbc.writeMem(0x38b0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb57, gbc.sp());
        EXPECT(0x38b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02A4
        gbc.setState(0x5e33, 0x210, 0xccb0, 0xc1f8, 0xce44, 0x736d, 0x1, 0x1);
        gbc.writeMem(0x5e33, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x210, gbc.sp());
        EXPECT(0x5e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02A5
        gbc.setState(0x9cc9, 0xa873, 0xd7c0, 0x8a3a, 0xc145, 0xa812, 0x0, 0x0);
        gbc.writeMem(0x9cc9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa873, gbc.sp());
        EXPECT(0x9ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc9));
        EXPECT(0x9d, gbc.readMem(0x9cca));
        // CB 9D 02A6
        gbc.setState(0x72d6, 0xfd5d, 0x6c00, 0xbca7, 0x4035, 0x9db8, 0x1, 0x1);
        gbc.writeMem(0x72d6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfd5d, gbc.sp());
        EXPECT(0x72d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02A7
        gbc.setState(0x1d96, 0xccb9, 0x7c40, 0x8ef5, 0x22f7, 0x918, 0x1, 0x1);
        gbc.writeMem(0x1d96, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xccb9, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02A8
        gbc.setState(0x43ea, 0x59b7, 0xe700, 0xe092, 0xee32, 0x92ce, 0x0, 0x0);
        gbc.writeMem(0x43ea, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x59b7, gbc.sp());
        EXPECT(0x43ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02A9
        gbc.setState(0xce5a, 0x57f3, 0x69b0, 0x6cd6, 0x71f0, 0x6450, 0x0, 0x0);
        gbc.writeMem(0xce5a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x57f3, gbc.sp());
        EXPECT(0xce5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5a));
        EXPECT(0x9d, gbc.readMem(0xce5b));
        // CB 9D 02AA
        gbc.setState(0xb8dc, 0x465c, 0x3ff0, 0x4762, 0x30e7, 0x187a, 0x1, 0x1);
        gbc.writeMem(0xb8dc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0xb8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8dc));
        EXPECT(0x9d, gbc.readMem(0xb8dd));
        // CB 9D 02AB
        gbc.setState(0xef1d, 0x474e, 0xc0d0, 0x3d92, 0x5d39, 0x23f2, 0x0, 0x0);
        gbc.writeMem(0xef1d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x474e, gbc.sp());
        EXPECT(0xef1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1d));
        EXPECT(0x9d, gbc.readMem(0xef1e));
        // CB 9D 02AC
        gbc.setState(0xe96f, 0x1613, 0x59b0, 0x28ca, 0x443e, 0x5cbb, 0x0, 0x0);
        gbc.writeMem(0xe96f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1613, gbc.sp());
        EXPECT(0xe971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96f));
        EXPECT(0x9d, gbc.readMem(0xe970));
        // CB 9D 02AD
        gbc.setState(0x4c0b, 0x831b, 0x5c50, 0x25, 0x9cba, 0xee91, 0x1, 0x0);
        gbc.writeMem(0x4c0b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x831b, gbc.sp());
        EXPECT(0x4c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02AE
        gbc.setState(0xe582, 0x90e, 0x2e00, 0xa4f8, 0xfc04, 0x2cdd, 0x1, 0x1);
        gbc.writeMem(0xe582, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x90e, gbc.sp());
        EXPECT(0xe584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe582));
        EXPECT(0x9d, gbc.readMem(0xe583));
        // CB 9D 02AF
        gbc.setState(0x4417, 0xecef, 0xb3b0, 0x6270, 0xa8c1, 0xd829, 0x0, 0x1);
        gbc.writeMem(0x4417, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xecef, gbc.sp());
        EXPECT(0x4419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02B0
        gbc.setState(0x3819, 0x7d4d, 0xffd0, 0x6d17, 0x9a8f, 0xfedf, 0x0, 0x0);
        gbc.writeMem(0x3819, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7d4d, gbc.sp());
        EXPECT(0x381b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02B1
        gbc.setState(0xfea, 0x5d37, 0xf920, 0xd12f, 0x53d8, 0xfe4, 0x1, 0x0);
        gbc.writeMem(0xfea, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5d37, gbc.sp());
        EXPECT(0xfec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02B2
        gbc.setState(0x140e, 0xb24, 0xf760, 0xef78, 0x1dde, 0x1c0c, 0x1, 0x0);
        gbc.writeMem(0x140e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb24, gbc.sp());
        EXPECT(0x1410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02B3
        gbc.setState(0xdce3, 0xcb73, 0xff30, 0x8d1b, 0xc189, 0x6e22, 0x1, 0x0);
        gbc.writeMem(0xdce3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcb73, gbc.sp());
        EXPECT(0xdce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce3));
        EXPECT(0x9d, gbc.readMem(0xdce4));
        // CB 9D 02B4
        gbc.setState(0x1d95, 0x3bb2, 0x84f0, 0x27c7, 0xf065, 0x4b94, 0x1, 0x1);
        gbc.writeMem(0x1d95, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3bb2, gbc.sp());
        EXPECT(0x1d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02B5
        gbc.setState(0xe619, 0xb580, 0x7700, 0x469c, 0x5073, 0x9a9e, 0x0, 0x1);
        gbc.writeMem(0xe619, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb580, gbc.sp());
        EXPECT(0xe61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe619));
        EXPECT(0x9d, gbc.readMem(0xe61a));
        // CB 9D 02B6
        gbc.setState(0x55d9, 0xb566, 0xe5e0, 0xb3fd, 0x1812, 0xed8a, 0x1, 0x1);
        gbc.writeMem(0x55d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb566, gbc.sp());
        EXPECT(0x55db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02B7
        gbc.setState(0x1a10, 0x16c9, 0x22b0, 0x7f2b, 0xb21c, 0x99e6, 0x0, 0x0);
        gbc.writeMem(0x1a10, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x16c9, gbc.sp());
        EXPECT(0x1a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02B8
        gbc.setState(0xa505, 0x652c, 0xfa90, 0x9336, 0x7712, 0x2644, 0x0, 0x0);
        gbc.writeMem(0xa505, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x652c, gbc.sp());
        EXPECT(0xa507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa505));
        EXPECT(0x9d, gbc.readMem(0xa506));
        // CB 9D 02B9
        gbc.setState(0x1091, 0x1641, 0x7670, 0x9ea4, 0xbe1a, 0x91c1, 0x1, 0x0);
        gbc.writeMem(0x1091, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1641, gbc.sp());
        EXPECT(0x1093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02BA
        gbc.setState(0x7836, 0xad1, 0x2320, 0x5ed9, 0xfa50, 0x92b9, 0x1, 0x1);
        gbc.writeMem(0x7836, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xad1, gbc.sp());
        EXPECT(0x7838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02BB
        gbc.setState(0x849b, 0x83de, 0x7dd0, 0x374a, 0xfe7, 0x6a5c, 0x1, 0x0);
        gbc.writeMem(0x849b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x83de, gbc.sp());
        EXPECT(0x849d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849b));
        EXPECT(0x9d, gbc.readMem(0x849c));
        // CB 9D 02BC
        gbc.setState(0x8ee7, 0xfe30, 0xedc0, 0xafc5, 0x81a7, 0xb676, 0x1, 0x0);
        gbc.writeMem(0x8ee7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfe30, gbc.sp());
        EXPECT(0x8ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee7));
        EXPECT(0x9d, gbc.readMem(0x8ee8));
        // CB 9D 02BD
        gbc.setState(0x743f, 0xef01, 0xba0, 0x262e, 0xce71, 0x6a17, 0x0, 0x0);
        gbc.writeMem(0x743f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xef01, gbc.sp());
        EXPECT(0x7441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02BE
        gbc.setState(0x8a6c, 0x4b7e, 0x17f0, 0x1195, 0x4cb7, 0x12f4, 0x0, 0x0);
        gbc.writeMem(0x8a6c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4b7e, gbc.sp());
        EXPECT(0x8a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6c));
        EXPECT(0x9d, gbc.readMem(0x8a6d));
        // CB 9D 02BF
        gbc.setState(0x2d89, 0x6beb, 0xb180, 0xe4a5, 0x75da, 0xd76c, 0x1, 0x0);
        gbc.writeMem(0x2d89, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6beb, gbc.sp());
        EXPECT(0x2d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02C0
        gbc.setState(0x39a7, 0xb69f, 0x5230, 0x5059, 0x8cb3, 0xedf6, 0x1, 0x1);
        gbc.writeMem(0x39a7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb69f, gbc.sp());
        EXPECT(0x39a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02C1
        gbc.setState(0xe7d0, 0x10f0, 0xca20, 0x3c49, 0xe354, 0x43ab, 0x1, 0x1);
        gbc.writeMem(0xe7d0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x10f0, gbc.sp());
        EXPECT(0xe7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d0));
        EXPECT(0x9d, gbc.readMem(0xe7d1));
        // CB 9D 02C2
        gbc.setState(0xded4, 0x9081, 0xd960, 0x73a7, 0x99e0, 0x5c59, 0x0, 0x1);
        gbc.writeMem(0xded4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9081, gbc.sp());
        EXPECT(0xded6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded4));
        EXPECT(0x9d, gbc.readMem(0xded5));
        // CB 9D 02C3
        gbc.setState(0xeaab, 0xd11, 0xff60, 0xb7a7, 0x57df, 0xe5eb, 0x1, 0x0);
        gbc.writeMem(0xeaab, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd11, gbc.sp());
        EXPECT(0xeaad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaab));
        EXPECT(0x9d, gbc.readMem(0xeaac));
        // CB 9D 02C4
        gbc.setState(0x58f0, 0x8d82, 0x32d0, 0x8296, 0xfd67, 0x973b, 0x1, 0x0);
        gbc.writeMem(0x58f0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8d82, gbc.sp());
        EXPECT(0x58f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02C5
        gbc.setState(0x569b, 0x3e9f, 0x4550, 0xcb99, 0x31f8, 0xf324, 0x1, 0x0);
        gbc.writeMem(0x569b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3e9f, gbc.sp());
        EXPECT(0x569d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02C6
        gbc.setState(0x5c2d, 0xe681, 0x1ed0, 0x60ad, 0x1e5d, 0x6fe7, 0x1, 0x1);
        gbc.writeMem(0x5c2d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe681, gbc.sp());
        EXPECT(0x5c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02C7
        gbc.setState(0xee71, 0xcd39, 0x1c20, 0x5d89, 0x14c6, 0x4457, 0x1, 0x1);
        gbc.writeMem(0xee71, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcd39, gbc.sp());
        EXPECT(0xee73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee71));
        EXPECT(0x9d, gbc.readMem(0xee72));
        // CB 9D 02C8
        gbc.setState(0xd4ca, 0x7033, 0x3370, 0xc4f3, 0xb62, 0x9675, 0x1, 0x1);
        gbc.writeMem(0xd4ca, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7033, gbc.sp());
        EXPECT(0xd4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ca));
        EXPECT(0x9d, gbc.readMem(0xd4cb));
        // CB 9D 02C9
        gbc.setState(0xc9e0, 0xc975, 0x6280, 0x9a98, 0x5e09, 0x255b, 0x1, 0x0);
        gbc.writeMem(0xc9e0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc975, gbc.sp());
        EXPECT(0xc9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e0));
        EXPECT(0x9d, gbc.readMem(0xc9e1));
        // CB 9D 02CA
        gbc.setState(0xd01, 0xfd4, 0xaa00, 0x45bb, 0xcb80, 0xde89, 0x0, 0x0);
        gbc.writeMem(0xd01, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfd4, gbc.sp());
        EXPECT(0xd03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02CB
        gbc.setState(0x22c5, 0xd719, 0xef90, 0xbf7f, 0x8760, 0xf10, 0x1, 0x1);
        gbc.writeMem(0x22c5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd719, gbc.sp());
        EXPECT(0x22c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02CC
        gbc.setState(0x1459, 0xe033, 0x8a10, 0x379f, 0xcb5c, 0x767a, 0x0, 0x1);
        gbc.writeMem(0x1459, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe033, gbc.sp());
        EXPECT(0x145b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02CD
        gbc.setState(0x1d45, 0x9e69, 0x5ba0, 0x456e, 0x43bc, 0x409a, 0x1, 0x1);
        gbc.writeMem(0x1d45, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9e69, gbc.sp());
        EXPECT(0x1d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02CE
        gbc.setState(0x8692, 0x7130, 0xd400, 0xff7f, 0xfc77, 0xa996, 0x0, 0x0);
        gbc.writeMem(0x8692, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7130, gbc.sp());
        EXPECT(0x8694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8692));
        EXPECT(0x9d, gbc.readMem(0x8693));
        // CB 9D 02CF
        gbc.setState(0x1493, 0x2ced, 0x7a40, 0xd146, 0xfd15, 0x50e9, 0x0, 0x0);
        gbc.writeMem(0x1493, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2ced, gbc.sp());
        EXPECT(0x1495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02D0
        gbc.setState(0x40e5, 0x80f3, 0x29b0, 0x59c8, 0x9b7a, 0x45d4, 0x1, 0x0);
        gbc.writeMem(0x40e5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x80f3, gbc.sp());
        EXPECT(0x40e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02D1
        gbc.setState(0xa7a4, 0x684b, 0xe280, 0xf38f, 0xae7f, 0x63f5, 0x1, 0x0);
        gbc.writeMem(0xa7a4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x684b, gbc.sp());
        EXPECT(0xa7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a4));
        EXPECT(0x9d, gbc.readMem(0xa7a5));
        // CB 9D 02D2
        gbc.setState(0x20ca, 0x97c7, 0xb6d0, 0x426d, 0xd63e, 0x801e, 0x1, 0x1);
        gbc.writeMem(0x20ca, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x97c7, gbc.sp());
        EXPECT(0x20cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02D3
        gbc.setState(0xe187, 0xc53d, 0x6f90, 0xcba9, 0x45c2, 0xb0c0, 0x1, 0x1);
        gbc.writeMem(0xe187, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc53d, gbc.sp());
        EXPECT(0xe189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe187));
        EXPECT(0x9d, gbc.readMem(0xe188));
        // CB 9D 02D4
        gbc.setState(0xb403, 0x8b64, 0x4a0, 0x93ef, 0xd573, 0x34a7, 0x0, 0x1);
        gbc.writeMem(0xb403, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8b64, gbc.sp());
        EXPECT(0xb405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb403));
        EXPECT(0x9d, gbc.readMem(0xb404));
        // CB 9D 02D6
        gbc.setState(0x4111, 0x8fb, 0xda60, 0x4ceb, 0x20ef, 0xdfd, 0x1, 0x0);
        gbc.writeMem(0x4111, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8fb, gbc.sp());
        EXPECT(0x4113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02D7
        gbc.setState(0x694, 0x2008, 0x3ac0, 0x211c, 0x7f95, 0x2619, 0x0, 0x0);
        gbc.writeMem(0x694, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2008, gbc.sp());
        EXPECT(0x696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02D8
        gbc.setState(0x556d, 0x7466, 0xa160, 0x8640, 0x421c, 0xbeb1, 0x1, 0x0);
        gbc.writeMem(0x556d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7466, gbc.sp());
        EXPECT(0x556f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02D9
        gbc.setState(0xac4f, 0x2954, 0xf370, 0x5fb2, 0x42a3, 0x36f3, 0x1, 0x0);
        gbc.writeMem(0xac4f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2954, gbc.sp());
        EXPECT(0xac51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4f));
        EXPECT(0x9d, gbc.readMem(0xac50));
        // CB 9D 02DA
        gbc.setState(0xaf1c, 0x627, 0x2350, 0x94a2, 0x65d5, 0x6370, 0x0, 0x1);
        gbc.writeMem(0xaf1c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x627, gbc.sp());
        EXPECT(0xaf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf1c));
        EXPECT(0x9d, gbc.readMem(0xaf1d));
        // CB 9D 02DB
        gbc.setState(0x490b, 0xda62, 0xfbe0, 0x6428, 0x5cf9, 0x7362, 0x0, 0x1);
        gbc.writeMem(0x490b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xda62, gbc.sp());
        EXPECT(0x490d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02DC
        gbc.setState(0x593, 0x5a5a, 0xc160, 0x4e36, 0xb8da, 0x7f86, 0x1, 0x1);
        gbc.writeMem(0x593, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5a5a, gbc.sp());
        EXPECT(0x595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02DD
        gbc.setState(0x8cd2, 0xcfe9, 0xbcd0, 0x7065, 0x5122, 0xeb3e, 0x0, 0x1);
        gbc.writeMem(0x8cd2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcfe9, gbc.sp());
        EXPECT(0x8cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd2));
        EXPECT(0x9d, gbc.readMem(0x8cd3));
        // CB 9D 02DE
        gbc.setState(0x2bb3, 0xd185, 0x5c10, 0xd145, 0xa2c1, 0x6a43, 0x1, 0x0);
        gbc.writeMem(0x2bb3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd185, gbc.sp());
        EXPECT(0x2bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02DF
        gbc.setState(0x74be, 0xeb9b, 0x84e0, 0xeb09, 0xe7ec, 0x215c, 0x0, 0x0);
        gbc.writeMem(0x74be, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeb9b, gbc.sp());
        EXPECT(0x74c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02E0
        gbc.setState(0x2bf0, 0xcc49, 0x9220, 0xd201, 0xd406, 0xff1e, 0x1, 0x0);
        gbc.writeMem(0x2bf0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcc49, gbc.sp());
        EXPECT(0x2bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02E1
        gbc.setState(0xb3bc, 0x5dee, 0x2210, 0xf52d, 0x9d3c, 0xfcfe, 0x0, 0x0);
        gbc.writeMem(0xb3bc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5dee, gbc.sp());
        EXPECT(0xb3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bc));
        EXPECT(0x9d, gbc.readMem(0xb3bd));
        // CB 9D 02E2
        gbc.setState(0x2e2f, 0x907, 0x3a20, 0xdf1e, 0x770a, 0xcac0, 0x1, 0x1);
        gbc.writeMem(0x2e2f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x907, gbc.sp());
        EXPECT(0x2e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02E3
        gbc.setState(0x57d9, 0x3e34, 0x2210, 0x672, 0x7f0b, 0x3fb0, 0x1, 0x0);
        gbc.writeMem(0x57d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3e34, gbc.sp());
        EXPECT(0x57db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02E4
        gbc.setState(0xfbc, 0x2129, 0x1df0, 0xa7, 0x473f, 0x1bcd, 0x0, 0x0);
        gbc.writeMem(0xfbc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2129, gbc.sp());
        EXPECT(0xfbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02E5
        gbc.setState(0xce4d, 0xa8d1, 0xc070, 0x682b, 0x9ed5, 0xa48a, 0x1, 0x1);
        gbc.writeMem(0xce4d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa8d1, gbc.sp());
        EXPECT(0xce4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4d));
        EXPECT(0x9d, gbc.readMem(0xce4e));
        // CB 9D 02E6
        gbc.setState(0xda7c, 0xef0c, 0x7a80, 0x5099, 0x98f7, 0xad93, 0x0, 0x0);
        gbc.writeMem(0xda7c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xef0c, gbc.sp());
        EXPECT(0xda7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7c));
        EXPECT(0x9d, gbc.readMem(0xda7d));
        // CB 9D 02E7
        gbc.setState(0x16e1, 0x9597, 0x3140, 0x89c9, 0xe313, 0x3da4, 0x0, 0x0);
        gbc.writeMem(0x16e1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9597, gbc.sp());
        EXPECT(0x16e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02E8
        gbc.setState(0xebf8, 0x61f7, 0x9190, 0x9002, 0x60ca, 0xb7ea, 0x1, 0x0);
        gbc.writeMem(0xebf8, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x61f7, gbc.sp());
        EXPECT(0xebfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf8));
        EXPECT(0x9d, gbc.readMem(0xebf9));
        // CB 9D 02E9
        gbc.setState(0x821, 0xe7c5, 0x9cb0, 0x227e, 0xf64e, 0x58cb, 0x1, 0x1);
        gbc.writeMem(0x821, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe7c5, gbc.sp());
        EXPECT(0x823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02EA
        gbc.setState(0x49d2, 0x3904, 0x5d40, 0x3854, 0xe064, 0x6760, 0x0, 0x0);
        gbc.writeMem(0x49d2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3904, gbc.sp());
        EXPECT(0x49d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02EB
        gbc.setState(0x13f5, 0xbf33, 0x5970, 0x9ac8, 0x5c3, 0xf8e8, 0x1, 0x1);
        gbc.writeMem(0x13f5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbf33, gbc.sp());
        EXPECT(0x13f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02EC
        gbc.setState(0x7a9, 0xc16f, 0x54e0, 0xd8d4, 0x4e46, 0x48c4, 0x0, 0x0);
        gbc.writeMem(0x7a9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc16f, gbc.sp());
        EXPECT(0x7ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02ED
        gbc.setState(0x6e36, 0xff4e, 0xb10, 0xd658, 0xe992, 0xea3b, 0x1, 0x1);
        gbc.writeMem(0x6e36, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xff4e, gbc.sp());
        EXPECT(0x6e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02EE
        gbc.setState(0x4025, 0x2526, 0xd910, 0x1f96, 0x9f27, 0x1401, 0x0, 0x0);
        gbc.writeMem(0x4025, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2526, gbc.sp());
        EXPECT(0x4027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02F0
        gbc.setState(0xef0b, 0xd2b8, 0x25d0, 0x1da8, 0xe8cf, 0x2d6e, 0x0, 0x1);
        gbc.writeMem(0xef0b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd2b8, gbc.sp());
        EXPECT(0xef0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef0b));
        EXPECT(0x9d, gbc.readMem(0xef0c));
        // CB 9D 02F1
        gbc.setState(0xd0fb, 0xf480, 0xe3a0, 0x1aea, 0x7b16, 0xf274, 0x0, 0x0);
        gbc.writeMem(0xd0fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf480, gbc.sp());
        EXPECT(0xd0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0fb));
        EXPECT(0x9d, gbc.readMem(0xd0fc));
        // CB 9D 02F2
        gbc.setState(0x2493, 0x4c7f, 0x63f0, 0xba9d, 0x540e, 0xfba, 0x1, 0x1);
        gbc.writeMem(0x2493, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4c7f, gbc.sp());
        EXPECT(0x2495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02F3
        gbc.setState(0x5237, 0x5b1a, 0x9b70, 0x50b4, 0x764e, 0xe230, 0x0, 0x1);
        gbc.writeMem(0x5237, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5b1a, gbc.sp());
        EXPECT(0x5239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02F5
        gbc.setState(0xe16c, 0x9af9, 0x36c0, 0x7a46, 0xe990, 0x644d, 0x0, 0x1);
        gbc.writeMem(0xe16c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9af9, gbc.sp());
        EXPECT(0xe16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16c));
        EXPECT(0x9d, gbc.readMem(0xe16d));
        // CB 9D 02F6
        gbc.setState(0xd242, 0x4743, 0x1fc0, 0xc2c, 0x6c89, 0xaeb3, 0x1, 0x1);
        gbc.writeMem(0xd242, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4743, gbc.sp());
        EXPECT(0xd244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd242));
        EXPECT(0x9d, gbc.readMem(0xd243));
        // CB 9D 02F7
        gbc.setState(0xe861, 0x7ff6, 0xd080, 0x66c3, 0x6792, 0xc5d0, 0x1, 0x1);
        gbc.writeMem(0xe861, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7ff6, gbc.sp());
        EXPECT(0xe863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe861));
        EXPECT(0x9d, gbc.readMem(0xe862));
        // CB 9D 02F8
        gbc.setState(0xacf4, 0xb9e4, 0xef00, 0xc43c, 0xed91, 0xb660, 0x1, 0x1);
        gbc.writeMem(0xacf4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb9e4, gbc.sp());
        EXPECT(0xacf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf4));
        EXPECT(0x9d, gbc.readMem(0xacf5));
        // CB 9D 02F9
        gbc.setState(0xa16b, 0xba39, 0xd50, 0xcc3a, 0x3c4, 0xab5b, 0x0, 0x0);
        gbc.writeMem(0xa16b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xba39, gbc.sp());
        EXPECT(0xa16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16b));
        EXPECT(0x9d, gbc.readMem(0xa16c));
        // CB 9D 02FA
        gbc.setState(0xb899, 0xe2ea, 0x9640, 0x4d75, 0x345f, 0x820f, 0x0, 0x0);
        gbc.writeMem(0xb899, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe2ea, gbc.sp());
        EXPECT(0xb89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb899));
        EXPECT(0x9d, gbc.readMem(0xb89a));
        // CB 9D 02FB
        gbc.setState(0x7dad, 0xff49, 0xe420, 0xbf31, 0x8d4c, 0x72a7, 0x0, 0x0);
        gbc.writeMem(0x7dad, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xff49, gbc.sp());
        EXPECT(0x7daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02FC
        gbc.setState(0x64eb, 0xbc5c, 0xbdf0, 0x63d9, 0xdcf8, 0x4735, 0x1, 0x0);
        gbc.writeMem(0x64eb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbc5c, gbc.sp());
        EXPECT(0x64ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 02FD
        gbc.setState(0x484f, 0x91a4, 0xc80, 0xf91a, 0x7e18, 0x6114, 0x1, 0x0);
        gbc.writeMem(0x484f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x91a4, gbc.sp());
        EXPECT(0x4851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 02FE
        gbc.setState(0xe112, 0xbb67, 0x8850, 0x1607, 0x6ac0, 0x4735, 0x0, 0x0);
        gbc.writeMem(0xe112, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbb67, gbc.sp());
        EXPECT(0xe114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe112));
        EXPECT(0x9d, gbc.readMem(0xe113));
        // CB 9D 02FF
        gbc.setState(0x5642, 0xbb7b, 0x72e0, 0xd4a7, 0x9bfa, 0x3fb2, 0x1, 0x1);
        gbc.writeMem(0x5642, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbb7b, gbc.sp());
        EXPECT(0x5644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0300
        gbc.setState(0x73ff, 0xda02, 0xd7c0, 0x3065, 0xc668, 0xefe3, 0x0, 0x1);
        gbc.writeMem(0x73ff, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xda02, gbc.sp());
        EXPECT(0x7401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0301
        gbc.setState(0x7deb, 0x1070, 0x380, 0x6e4a, 0x40c6, 0xf413, 0x0, 0x0);
        gbc.writeMem(0x7deb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1070, gbc.sp());
        EXPECT(0x7ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0302
        gbc.setState(0x3358, 0xe404, 0x3b10, 0xff2d, 0x6fc0, 0xa316, 0x1, 0x0);
        gbc.writeMem(0x3358, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe404, gbc.sp());
        EXPECT(0x335a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0303
        gbc.setState(0x6e7, 0x3c30, 0xb610, 0x5260, 0x76a5, 0xee43, 0x1, 0x0);
        gbc.writeMem(0x6e7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3c30, gbc.sp());
        EXPECT(0x6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0304
        gbc.setState(0x55b6, 0xb13, 0x8290, 0xe79c, 0x5c80, 0xbdc8, 0x0, 0x0);
        gbc.writeMem(0x55b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb13, gbc.sp());
        EXPECT(0x55b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0305
        gbc.setState(0xcf8f, 0x7ddf, 0x5650, 0xbbe7, 0x23f2, 0x2c48, 0x0, 0x0);
        gbc.writeMem(0xcf8f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7ddf, gbc.sp());
        EXPECT(0xcf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8f));
        EXPECT(0x9d, gbc.readMem(0xcf90));
        // CB 9D 0306
        gbc.setState(0xefce, 0x71f3, 0x4b80, 0xd6ed, 0x32a9, 0x39d, 0x0, 0x0);
        gbc.writeMem(0xefce, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x71f3, gbc.sp());
        EXPECT(0xefd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefce));
        EXPECT(0x9d, gbc.readMem(0xefcf));
        // CB 9D 0307
        gbc.setState(0x410d, 0x4a11, 0x2090, 0xdeb3, 0xe2b1, 0x6f75, 0x1, 0x0);
        gbc.writeMem(0x410d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4a11, gbc.sp());
        EXPECT(0x410f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0309
        gbc.setState(0x5fa9, 0xb0cf, 0x6cb0, 0xf2d6, 0xd9db, 0x7c75, 0x1, 0x0);
        gbc.writeMem(0x5fa9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb0cf, gbc.sp());
        EXPECT(0x5fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 030B
        gbc.setState(0xd901, 0xd6c9, 0xb490, 0x19d, 0xfdd9, 0x63ce, 0x1, 0x1);
        gbc.writeMem(0xd901, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd6c9, gbc.sp());
        EXPECT(0xd903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd901));
        EXPECT(0x9d, gbc.readMem(0xd902));
        // CB 9D 030C
        gbc.setState(0x1f0d, 0xf449, 0x9660, 0x6de8, 0x6e8, 0x30b6, 0x0, 0x1);
        gbc.writeMem(0x1f0d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf449, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 030D
        gbc.setState(0x2f69, 0xa828, 0x94e0, 0x529f, 0x2ab5, 0x37cb, 0x0, 0x1);
        gbc.writeMem(0x2f69, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa828, gbc.sp());
        EXPECT(0x2f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 030E
        gbc.setState(0x96c6, 0x7a69, 0x31f0, 0x44a0, 0x54cb, 0x6de4, 0x0, 0x0);
        gbc.writeMem(0x96c6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7a69, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c6));
        EXPECT(0x9d, gbc.readMem(0x96c7));
        // CB 9D 030F
        gbc.setState(0x2007, 0x358a, 0x330, 0xf1be, 0x9a6e, 0x9190, 0x0, 0x1);
        gbc.writeMem(0x2007, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x358a, gbc.sp());
        EXPECT(0x2009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0310
        gbc.setState(0xee0d, 0xc821, 0xa390, 0x43fe, 0xf846, 0xc011, 0x0, 0x0);
        gbc.writeMem(0xee0d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc821, gbc.sp());
        EXPECT(0xee0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0d));
        EXPECT(0x9d, gbc.readMem(0xee0e));
        // CB 9D 0311
        gbc.setState(0x21f, 0xe4bf, 0x3ca0, 0x148e, 0x667e, 0x9b6f, 0x0, 0x1);
        gbc.writeMem(0x21f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe4bf, gbc.sp());
        EXPECT(0x221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0312
        gbc.setState(0xc412, 0x360f, 0x2000, 0x1307, 0x1046, 0xdfce, 0x1, 0x1);
        gbc.writeMem(0xc412, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x360f, gbc.sp());
        EXPECT(0xc414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc412));
        EXPECT(0x9d, gbc.readMem(0xc413));
        // CB 9D 0313
        gbc.setState(0x2ef4, 0xde5e, 0x32c0, 0x86ef, 0xa0f5, 0x4064, 0x1, 0x1);
        gbc.writeMem(0x2ef4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xde5e, gbc.sp());
        EXPECT(0x2ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0314
        gbc.setState(0x6c9d, 0x8d37, 0xef80, 0xb31b, 0xa217, 0x49cc, 0x1, 0x0);
        gbc.writeMem(0x6c9d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8d37, gbc.sp());
        EXPECT(0x6c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0315
        gbc.setState(0x28a1, 0xc2d1, 0xa920, 0x8ae2, 0x765c, 0x8c48, 0x1, 0x0);
        gbc.writeMem(0x28a1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc2d1, gbc.sp());
        EXPECT(0x28a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0316
        gbc.setState(0xcb9e, 0x9211, 0x9f80, 0xbe2d, 0x4c6e, 0x4f2a, 0x0, 0x1);
        gbc.writeMem(0xcb9e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9211, gbc.sp());
        EXPECT(0xcba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9e));
        EXPECT(0x9d, gbc.readMem(0xcb9f));
        // CB 9D 0317
        gbc.setState(0xb39c, 0xe737, 0x19d0, 0x499b, 0xb058, 0x370b, 0x1, 0x0);
        gbc.writeMem(0xb39c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe737, gbc.sp());
        EXPECT(0xb39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39c));
        EXPECT(0x9d, gbc.readMem(0xb39d));
        // CB 9D 0318
        gbc.setState(0x2856, 0x17a0, 0xb30, 0x7c3e, 0x5c3, 0x3144, 0x0, 0x1);
        gbc.writeMem(0x2856, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x17a0, gbc.sp());
        EXPECT(0x2858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0319
        gbc.setState(0x7320, 0x4fe5, 0x33e0, 0x841f, 0x3754, 0xf278, 0x1, 0x0);
        gbc.writeMem(0x7320, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4fe5, gbc.sp());
        EXPECT(0x7322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 031A
        gbc.setState(0x43f2, 0x90ed, 0x6d40, 0xcaeb, 0xd058, 0x2d3a, 0x0, 0x0);
        gbc.writeMem(0x43f2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x90ed, gbc.sp());
        EXPECT(0x43f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 031B
        gbc.setState(0xc789, 0xab0d, 0xd800, 0x113d, 0x2810, 0xd52, 0x0, 0x0);
        gbc.writeMem(0xc789, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xab0d, gbc.sp());
        EXPECT(0xc78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc789));
        EXPECT(0x9d, gbc.readMem(0xc78a));
        // CB 9D 031C
        gbc.setState(0x7f45, 0xf8c0, 0xea30, 0xc4ec, 0x5dfe, 0xf4fa, 0x1, 0x1);
        gbc.writeMem(0x7f45, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf8c0, gbc.sp());
        EXPECT(0x7f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 031D
        gbc.setState(0x4723, 0x10c8, 0x38e0, 0x1c6b, 0xa85f, 0x2bae, 0x0, 0x1);
        gbc.writeMem(0x4723, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x10c8, gbc.sp());
        EXPECT(0x4725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 031E
        gbc.setState(0x895a, 0x9bc, 0xb830, 0x14ec, 0x9838, 0xe6e8, 0x1, 0x1);
        gbc.writeMem(0x895a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9bc, gbc.sp());
        EXPECT(0x895c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x895a));
        EXPECT(0x9d, gbc.readMem(0x895b));
        // CB 9D 031F
        gbc.setState(0xe629, 0xf522, 0xff30, 0x6591, 0x7caf, 0xb9c7, 0x0, 0x1);
        gbc.writeMem(0xe629, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf522, gbc.sp());
        EXPECT(0xe62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe629));
        EXPECT(0x9d, gbc.readMem(0xe62a));
        // CB 9D 0320
        gbc.setState(0xd98e, 0xd285, 0xf470, 0xbe69, 0x86d4, 0x8b80, 0x1, 0x1);
        gbc.writeMem(0xd98e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd285, gbc.sp());
        EXPECT(0xd990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd98e));
        EXPECT(0x9d, gbc.readMem(0xd98f));
        // CB 9D 0321
        gbc.setState(0x369b, 0x867c, 0x1540, 0xd823, 0xcfa1, 0x126e, 0x1, 0x1);
        gbc.writeMem(0x369b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x867c, gbc.sp());
        EXPECT(0x369d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0322
        gbc.setState(0xc1ed, 0xd0ab, 0x1040, 0x69ee, 0x475d, 0x2bdf, 0x1, 0x0);
        gbc.writeMem(0xc1ed, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd0ab, gbc.sp());
        EXPECT(0xc1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ed));
        EXPECT(0x9d, gbc.readMem(0xc1ee));
        // CB 9D 0323
        gbc.setState(0x7322, 0x484a, 0x3000, 0xff8d, 0x1c9b, 0xae65, 0x1, 0x1);
        gbc.writeMem(0x7322, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x484a, gbc.sp());
        EXPECT(0x7324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0324
        gbc.setState(0x4528, 0xf564, 0x42c0, 0xcdb6, 0xa2c9, 0xb0af, 0x0, 0x1);
        gbc.writeMem(0x4528, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf564, gbc.sp());
        EXPECT(0x452a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0325
        gbc.setState(0xdc4b, 0xcbf5, 0x3d80, 0xcb1a, 0xedf1, 0x2746, 0x0, 0x1);
        gbc.writeMem(0xdc4b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcbf5, gbc.sp());
        EXPECT(0xdc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4b));
        EXPECT(0x9d, gbc.readMem(0xdc4c));
        // CB 9D 0326
        gbc.setState(0x724d, 0xe3f3, 0x74c0, 0x9456, 0x8f4b, 0xed27, 0x0, 0x1);
        gbc.writeMem(0x724d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe3f3, gbc.sp());
        EXPECT(0x724f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0327
        gbc.setState(0xd375, 0x2314, 0x8710, 0x7ab6, 0xf602, 0xfc19, 0x0, 0x0);
        gbc.writeMem(0xd375, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2314, gbc.sp());
        EXPECT(0xd377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd375));
        EXPECT(0x9d, gbc.readMem(0xd376));
        // CB 9D 0328
        gbc.setState(0x44a6, 0x3264, 0x8c30, 0x651f, 0x974d, 0x3407, 0x0, 0x1);
        gbc.writeMem(0x44a6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3264, gbc.sp());
        EXPECT(0x44a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0329
        gbc.setState(0xa03b, 0x8b80, 0x4430, 0x50f3, 0xa278, 0x7dac, 0x1, 0x0);
        gbc.writeMem(0xa03b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8b80, gbc.sp());
        EXPECT(0xa03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03b));
        EXPECT(0x9d, gbc.readMem(0xa03c));
        // CB 9D 032A
        gbc.setState(0x30bf, 0xde04, 0x66f0, 0x694, 0xade0, 0xbd05, 0x1, 0x1);
        gbc.writeMem(0x30bf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xde04, gbc.sp());
        EXPECT(0x30c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 032B
        gbc.setState(0x6c18, 0x92db, 0x7a40, 0xb448, 0x950d, 0xb79, 0x1, 0x1);
        gbc.writeMem(0x6c18, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x92db, gbc.sp());
        EXPECT(0x6c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 032D
        gbc.setState(0x7c56, 0xe908, 0x6200, 0x4a9, 0x6c0, 0xd022, 0x0, 0x0);
        gbc.writeMem(0x7c56, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe908, gbc.sp());
        EXPECT(0x7c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 032E
        gbc.setState(0x555c, 0x18ba, 0xa260, 0x1abe, 0xbc6, 0x5554, 0x0, 0x0);
        gbc.writeMem(0x555c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x18ba, gbc.sp());
        EXPECT(0x555e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 032F
        gbc.setState(0xca4d, 0xaf59, 0xb0e0, 0xf8a, 0x49ad, 0x703b, 0x0, 0x0);
        gbc.writeMem(0xca4d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xaf59, gbc.sp());
        EXPECT(0xca4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4d));
        EXPECT(0x9d, gbc.readMem(0xca4e));
        // CB 9D 0330
        gbc.setState(0x4112, 0x10b2, 0xca20, 0xdb13, 0xaace, 0x69a8, 0x0, 0x0);
        gbc.writeMem(0x4112, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x10b2, gbc.sp());
        EXPECT(0x4114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0331
        gbc.setState(0x4bc2, 0xd30c, 0xf250, 0x6f2f, 0xd19f, 0xe534, 0x0, 0x0);
        gbc.writeMem(0x4bc2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd30c, gbc.sp());
        EXPECT(0x4bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0333
        gbc.setState(0xd25d, 0xc217, 0xab40, 0xf3d4, 0xc6f9, 0x171e, 0x1, 0x0);
        gbc.writeMem(0xd25d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc217, gbc.sp());
        EXPECT(0xd25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd25d));
        EXPECT(0x9d, gbc.readMem(0xd25e));
        // CB 9D 0334
        gbc.setState(0x84f1, 0xa902, 0xbaf0, 0x978e, 0x2043, 0x16fb, 0x0, 0x0);
        gbc.writeMem(0x84f1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa902, gbc.sp());
        EXPECT(0x84f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f1));
        EXPECT(0x9d, gbc.readMem(0x84f2));
        // CB 9D 0335
        gbc.setState(0x50b6, 0xdd77, 0x5310, 0xf866, 0xcc74, 0x7038, 0x1, 0x0);
        gbc.writeMem(0x50b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdd77, gbc.sp());
        EXPECT(0x50b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0336
        gbc.setState(0xd9d9, 0xc5b2, 0x34d0, 0x69a6, 0x917e, 0x1e0d, 0x1, 0x0);
        gbc.writeMem(0xd9d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc5b2, gbc.sp());
        EXPECT(0xd9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d9));
        EXPECT(0x9d, gbc.readMem(0xd9da));
        // CB 9D 0337
        gbc.setState(0xbbd, 0x1055, 0xa720, 0x98a6, 0xabb5, 0xb724, 0x0, 0x1);
        gbc.writeMem(0xbbd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1055, gbc.sp());
        EXPECT(0xbbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0338
        gbc.setState(0x7e64, 0xcc3b, 0xa130, 0x7f4d, 0xbe98, 0x812c, 0x1, 0x0);
        gbc.writeMem(0x7e64, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcc3b, gbc.sp());
        EXPECT(0x7e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0339
        gbc.setState(0xaded, 0x4b83, 0xcc0, 0x945d, 0x4825, 0x82e0, 0x1, 0x1);
        gbc.writeMem(0xaded, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4b83, gbc.sp());
        EXPECT(0xadef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaded));
        EXPECT(0x9d, gbc.readMem(0xadee));
        // CB 9D 033A
        gbc.setState(0x7817, 0x7d98, 0x7730, 0x346c, 0x57a6, 0x5db2, 0x0, 0x1);
        gbc.writeMem(0x7817, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7d98, gbc.sp());
        EXPECT(0x7819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 033B
        gbc.setState(0x8ee3, 0x5633, 0xa400, 0x7d60, 0x9e45, 0x107c, 0x0, 0x1);
        gbc.writeMem(0x8ee3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5633, gbc.sp());
        EXPECT(0x8ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee3));
        EXPECT(0x9d, gbc.readMem(0x8ee4));
        // CB 9D 033C
        gbc.setState(0xd053, 0xfc48, 0xc280, 0x3520, 0xcf21, 0xd0c2, 0x1, 0x0);
        gbc.writeMem(0xd053, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfc48, gbc.sp());
        EXPECT(0xd055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd053));
        EXPECT(0x9d, gbc.readMem(0xd054));
        // CB 9D 033D
        gbc.setState(0xdde2, 0x1424, 0xc840, 0xccf1, 0xde71, 0xd074, 0x1, 0x0);
        gbc.writeMem(0xdde2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1424, gbc.sp());
        EXPECT(0xdde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde2));
        EXPECT(0x9d, gbc.readMem(0xdde3));
        // CB 9D 033E
        gbc.setState(0x9891, 0x6b55, 0xd9a0, 0x3b34, 0x6955, 0x9a23, 0x1, 0x0);
        gbc.writeMem(0x9891, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6b55, gbc.sp());
        EXPECT(0x9893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9891));
        EXPECT(0x9d, gbc.readMem(0x9892));
        // CB 9D 033F
        gbc.setState(0x76bd, 0xbe1, 0xfd10, 0xa775, 0x3d6f, 0xd71c, 0x1, 0x1);
        gbc.writeMem(0x76bd, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbe1, gbc.sp());
        EXPECT(0x76bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0340
        gbc.setState(0x341b, 0xb873, 0xd030, 0xb4df, 0x15f6, 0x7791, 0x1, 0x0);
        gbc.writeMem(0x341b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb873, gbc.sp());
        EXPECT(0x341d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0341
        gbc.setState(0xd18c, 0x9d45, 0xaaa0, 0xb673, 0x62a4, 0xb152, 0x1, 0x0);
        gbc.writeMem(0xd18c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9d45, gbc.sp());
        EXPECT(0xd18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18c));
        EXPECT(0x9d, gbc.readMem(0xd18d));
        // CB 9D 0342
        gbc.setState(0x1174, 0x85e2, 0x1c80, 0x7246, 0xd1d7, 0x50e8, 0x0, 0x1);
        gbc.writeMem(0x1174, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x85e2, gbc.sp());
        EXPECT(0x1176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0344
        gbc.setState(0xa42a, 0x1aa0, 0xc060, 0x4e18, 0x3675, 0xb5c7, 0x1, 0x1);
        gbc.writeMem(0xa42a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1aa0, gbc.sp());
        EXPECT(0xa42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42a));
        EXPECT(0x9d, gbc.readMem(0xa42b));
        // CB 9D 0345
        gbc.setState(0x2539, 0x4098, 0xfae0, 0xd53a, 0x9b25, 0xb216, 0x1, 0x0);
        gbc.writeMem(0x2539, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4098, gbc.sp());
        EXPECT(0x253b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0346
        gbc.setState(0x583c, 0x536f, 0xb790, 0x8585, 0x3868, 0x8d2e, 0x1, 0x0);
        gbc.writeMem(0x583c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x536f, gbc.sp());
        EXPECT(0x583e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0347
        gbc.setState(0xed14, 0x57e5, 0x8b60, 0x1394, 0x9e80, 0x1c2d, 0x0, 0x0);
        gbc.writeMem(0xed14, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x57e5, gbc.sp());
        EXPECT(0xed16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed14));
        EXPECT(0x9d, gbc.readMem(0xed15));
        // CB 9D 0348
        gbc.setState(0x15f7, 0x32c1, 0xc300, 0xa786, 0xf7d7, 0x2b62, 0x1, 0x1);
        gbc.writeMem(0x15f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x32c1, gbc.sp());
        EXPECT(0x15f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0349
        gbc.setState(0xe539, 0x47a5, 0x4390, 0x1d60, 0x3e4c, 0x2abb, 0x0, 0x0);
        gbc.writeMem(0xe539, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x47a5, gbc.sp());
        EXPECT(0xe53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe539));
        EXPECT(0x9d, gbc.readMem(0xe53a));
        // CB 9D 034A
        gbc.setState(0xa7e7, 0x9f77, 0x2b0, 0xe7b1, 0x92d7, 0xc4f0, 0x1, 0x1);
        gbc.writeMem(0xa7e7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9f77, gbc.sp());
        EXPECT(0xa7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e7));
        EXPECT(0x9d, gbc.readMem(0xa7e8));
        // CB 9D 034B
        gbc.setState(0xb3d9, 0x8bd1, 0xb330, 0x8164, 0xdaee, 0xa5, 0x1, 0x1);
        gbc.writeMem(0xb3d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8bd1, gbc.sp());
        EXPECT(0xb3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d9));
        EXPECT(0x9d, gbc.readMem(0xb3da));
        // CB 9D 034C
        gbc.setState(0x10e7, 0x9244, 0x5620, 0xd0bb, 0x6b92, 0x2ae, 0x0, 0x0);
        gbc.writeMem(0x10e7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9244, gbc.sp());
        EXPECT(0x10e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 034D
        gbc.setState(0x8a2f, 0xe2e8, 0xbf40, 0xf273, 0x12dd, 0xb56d, 0x0, 0x1);
        gbc.writeMem(0x8a2f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe2e8, gbc.sp());
        EXPECT(0x8a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2f));
        EXPECT(0x9d, gbc.readMem(0x8a30));
        // CB 9D 034E
        gbc.setState(0xc831, 0xc6fe, 0xbe00, 0xadd5, 0xc6a6, 0xee6f, 0x0, 0x0);
        gbc.writeMem(0xc831, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc6fe, gbc.sp());
        EXPECT(0xc833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc831));
        EXPECT(0x9d, gbc.readMem(0xc832));
        // CB 9D 034F
        gbc.setState(0x4c71, 0x6d81, 0xe280, 0x8a28, 0xb475, 0x9b17, 0x1, 0x1);
        gbc.writeMem(0x4c71, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6d81, gbc.sp());
        EXPECT(0x4c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0350
        gbc.setState(0xb67b, 0xce2a, 0xc270, 0xa509, 0x53fe, 0x305a, 0x0, 0x1);
        gbc.writeMem(0xb67b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xce2a, gbc.sp());
        EXPECT(0xb67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67b));
        EXPECT(0x9d, gbc.readMem(0xb67c));
        // CB 9D 0351
        gbc.setState(0x294e, 0x19d, 0xf0d0, 0x253b, 0x8e1c, 0x55c4, 0x0, 0x0);
        gbc.writeMem(0x294e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x19d, gbc.sp());
        EXPECT(0x2950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0352
        gbc.setState(0x6c0d, 0xad2b, 0x3a20, 0xb51f, 0xc677, 0x79a1, 0x0, 0x0);
        gbc.writeMem(0x6c0d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xad2b, gbc.sp());
        EXPECT(0x6c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0353
        gbc.setState(0x443e, 0xd84d, 0xd2a0, 0xf542, 0xa7cf, 0x5e1b, 0x1, 0x0);
        gbc.writeMem(0x443e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd84d, gbc.sp());
        EXPECT(0x4440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0354
        gbc.setState(0x3240, 0x7963, 0x52c0, 0x2975, 0x6b9e, 0xdd82, 0x0, 0x1);
        gbc.writeMem(0x3240, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7963, gbc.sp());
        EXPECT(0x3242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0355
        gbc.setState(0x2293, 0xad50, 0x1250, 0xf52a, 0x5c77, 0xbc4a, 0x0, 0x1);
        gbc.writeMem(0x2293, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xad50, gbc.sp());
        EXPECT(0x2295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0356
        gbc.setState(0xd76c, 0x3e18, 0x9010, 0x1eeb, 0x68d8, 0x86b7, 0x1, 0x0);
        gbc.writeMem(0xd76c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3e18, gbc.sp());
        EXPECT(0xd76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76c));
        EXPECT(0x9d, gbc.readMem(0xd76d));
        // CB 9D 0357
        gbc.setState(0x12a4, 0x765, 0x5f40, 0x173f, 0x4d13, 0x3251, 0x1, 0x1);
        gbc.writeMem(0x12a4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x765, gbc.sp());
        EXPECT(0x12a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0358
        gbc.setState(0x6fc, 0x8feb, 0x79a0, 0x1d29, 0x3dc8, 0xa5eb, 0x1, 0x0);
        gbc.writeMem(0x6fc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8feb, gbc.sp());
        EXPECT(0x6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0359
        gbc.setState(0x2147, 0xe6a6, 0x6380, 0x246d, 0x907, 0x14b0, 0x1, 0x1);
        gbc.writeMem(0x2147, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe6a6, gbc.sp());
        EXPECT(0x2149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 035A
        gbc.setState(0xaf6f, 0x2da5, 0xc040, 0x156c, 0x4132, 0x7d94, 0x0, 0x0);
        gbc.writeMem(0xaf6f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2da5, gbc.sp());
        EXPECT(0xaf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6f));
        EXPECT(0x9d, gbc.readMem(0xaf70));
        // CB 9D 035B
        gbc.setState(0xad06, 0x4388, 0xb2e0, 0xfc75, 0xfc3f, 0x9f5c, 0x1, 0x1);
        gbc.writeMem(0xad06, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4388, gbc.sp());
        EXPECT(0xad08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad06));
        EXPECT(0x9d, gbc.readMem(0xad07));
        // CB 9D 035C
        gbc.setState(0xdcfb, 0x2a6b, 0x30f0, 0x8567, 0x4c51, 0x7575, 0x1, 0x0);
        gbc.writeMem(0xdcfb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2a6b, gbc.sp());
        EXPECT(0xdcfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfb));
        EXPECT(0x9d, gbc.readMem(0xdcfc));
        // CB 9D 035D
        gbc.setState(0x6386, 0x31b5, 0xbb0, 0xaf9e, 0xea0e, 0xc8e6, 0x0, 0x0);
        gbc.writeMem(0x6386, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x31b5, gbc.sp());
        EXPECT(0x6388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 035E
        gbc.setState(0xe8b2, 0xabf5, 0xdb20, 0xf4ab, 0xf509, 0x73d6, 0x0, 0x1);
        gbc.writeMem(0xe8b2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xabf5, gbc.sp());
        EXPECT(0xe8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b2));
        EXPECT(0x9d, gbc.readMem(0xe8b3));
        // CB 9D 0360
        gbc.setState(0x53dc, 0x19d5, 0x60b0, 0x83c5, 0x4508, 0x7fc2, 0x0, 0x1);
        gbc.writeMem(0x53dc, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x19d5, gbc.sp());
        EXPECT(0x53de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0361
        gbc.setState(0x7b7a, 0x6503, 0x2900, 0xaaf9, 0xff6b, 0xccf7, 0x1, 0x0);
        gbc.writeMem(0x7b7a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6503, gbc.sp());
        EXPECT(0x7b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0362
        gbc.setState(0xe2c2, 0x6ada, 0x6020, 0x519e, 0xff56, 0x15de, 0x1, 0x0);
        gbc.writeMem(0xe2c2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6ada, gbc.sp());
        EXPECT(0xe2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c2));
        EXPECT(0x9d, gbc.readMem(0xe2c3));
        // CB 9D 0363
        gbc.setState(0x873, 0xf9bd, 0x49c0, 0x9c9f, 0x5b30, 0x4a0d, 0x0, 0x0);
        gbc.writeMem(0x873, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf9bd, gbc.sp());
        EXPECT(0x875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0364
        gbc.setState(0x5422, 0x1b33, 0x1f00, 0x148d, 0xb907, 0x26fb, 0x1, 0x1);
        gbc.writeMem(0x5422, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1b33, gbc.sp());
        EXPECT(0x5424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0365
        gbc.setState(0x77f7, 0x2334, 0xed50, 0x7c88, 0xc93f, 0xe5c3, 0x1, 0x0);
        gbc.writeMem(0x77f7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2334, gbc.sp());
        EXPECT(0x77f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0366
        gbc.setState(0x9733, 0x5f1e, 0x2a10, 0x5c40, 0xc731, 0x56dc, 0x1, 0x1);
        gbc.writeMem(0x9733, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5f1e, gbc.sp());
        EXPECT(0x9735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9733));
        EXPECT(0x9d, gbc.readMem(0x9734));
        // CB 9D 0367
        gbc.setState(0xb54, 0x2e13, 0x30, 0x423, 0xcddf, 0x2d78, 0x0, 0x0);
        gbc.writeMem(0xb54, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2e13, gbc.sp());
        EXPECT(0xb56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0368
        gbc.setState(0xf07, 0x4258, 0xd9f0, 0xedd2, 0xb150, 0x2c1b, 0x0, 0x1);
        gbc.writeMem(0xf07, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4258, gbc.sp());
        EXPECT(0xf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0369
        gbc.setState(0x7119, 0xadc8, 0xd390, 0xfe54, 0xfa3e, 0xf8, 0x1, 0x1);
        gbc.writeMem(0x7119, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xadc8, gbc.sp());
        EXPECT(0x711b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 036A
        gbc.setState(0x7b16, 0xd560, 0x6090, 0x9834, 0x22b5, 0xe1a8, 0x1, 0x1);
        gbc.writeMem(0x7b16, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd560, gbc.sp());
        EXPECT(0x7b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 036C
        gbc.setState(0x1fe7, 0x5645, 0xac70, 0x75ad, 0xe960, 0xf640, 0x0, 0x0);
        gbc.writeMem(0x1fe7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5645, gbc.sp());
        EXPECT(0x1fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 036D
        gbc.setState(0x7d92, 0xce7a, 0x55e0, 0x57c6, 0xa2e1, 0x128b, 0x0, 0x1);
        gbc.writeMem(0x7d92, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xce7a, gbc.sp());
        EXPECT(0x7d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 036E
        gbc.setState(0xbb78, 0xb8e7, 0xd1f0, 0x104c, 0x1feb, 0xb02f, 0x1, 0x0);
        gbc.writeMem(0xbb78, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb8e7, gbc.sp());
        EXPECT(0xbb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb78));
        EXPECT(0x9d, gbc.readMem(0xbb79));
        // CB 9D 036F
        gbc.setState(0x5687, 0xc72d, 0x9b20, 0x5aa2, 0x1cd1, 0x3fe9, 0x0, 0x0);
        gbc.writeMem(0x5687, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc72d, gbc.sp());
        EXPECT(0x5689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0370
        gbc.setState(0x8b8b, 0x17ab, 0x8f70, 0x820, 0xaeba, 0x3eeb, 0x1, 0x0);
        gbc.writeMem(0x8b8b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x17ab, gbc.sp());
        EXPECT(0x8b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b8b));
        EXPECT(0x9d, gbc.readMem(0x8b8c));
        // CB 9D 0371
        gbc.setState(0x2b86, 0xf572, 0x76b0, 0x9b38, 0xfa2b, 0x17c4, 0x0, 0x0);
        gbc.writeMem(0x2b86, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf572, gbc.sp());
        EXPECT(0x2b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0372
        gbc.setState(0xa3a4, 0xcd79, 0x9cd0, 0x6486, 0x65b, 0x492f, 0x1, 0x0);
        gbc.writeMem(0xa3a4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcd79, gbc.sp());
        EXPECT(0xa3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a4));
        EXPECT(0x9d, gbc.readMem(0xa3a5));
        // CB 9D 0373
        gbc.setState(0xa655, 0xd4c6, 0x380, 0x548b, 0xab60, 0xd4c9, 0x0, 0x0);
        gbc.writeMem(0xa655, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd4c6, gbc.sp());
        EXPECT(0xa657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa655));
        EXPECT(0x9d, gbc.readMem(0xa656));
        // CB 9D 0374
        gbc.setState(0xbf2, 0x43c2, 0x4180, 0x5d75, 0x65bf, 0x1654, 0x1, 0x0);
        gbc.writeMem(0xbf2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x43c2, gbc.sp());
        EXPECT(0xbf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0375
        gbc.setState(0xae46, 0x5c39, 0x4a90, 0xf81b, 0x21bd, 0xecf4, 0x0, 0x1);
        gbc.writeMem(0xae46, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5c39, gbc.sp());
        EXPECT(0xae48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae46));
        EXPECT(0x9d, gbc.readMem(0xae47));
        // CB 9D 0376
        gbc.setState(0xc2de, 0xc737, 0x6240, 0x191e, 0x8974, 0x4874, 0x0, 0x0);
        gbc.writeMem(0xc2de, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc737, gbc.sp());
        EXPECT(0xc2e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2de));
        EXPECT(0x9d, gbc.readMem(0xc2df));
        // CB 9D 0377
        gbc.setState(0x2b90, 0x35a6, 0xd640, 0x2fbc, 0x6df2, 0xc276, 0x1, 0x0);
        gbc.writeMem(0x2b90, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x35a6, gbc.sp());
        EXPECT(0x2b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0378
        gbc.setState(0x88c6, 0x9809, 0xa800, 0x9619, 0x124c, 0x536c, 0x1, 0x0);
        gbc.writeMem(0x88c6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9809, gbc.sp());
        EXPECT(0x88c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c6));
        EXPECT(0x9d, gbc.readMem(0x88c7));
        // CB 9D 0379
        gbc.setState(0xdeed, 0xf76a, 0xd120, 0xa1d6, 0x168b, 0xed25, 0x1, 0x1);
        gbc.writeMem(0xdeed, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf76a, gbc.sp());
        EXPECT(0xdeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeed));
        EXPECT(0x9d, gbc.readMem(0xdeee));
        // CB 9D 037A
        gbc.setState(0x53c2, 0x8a23, 0x26e0, 0x72fa, 0x5d9c, 0x2990, 0x1, 0x0);
        gbc.writeMem(0x53c2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8a23, gbc.sp());
        EXPECT(0x53c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 037B
        gbc.setState(0x5944, 0xf8e6, 0xcb40, 0x5c7e, 0x76f0, 0x767c, 0x0, 0x1);
        gbc.writeMem(0x5944, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf8e6, gbc.sp());
        EXPECT(0x5946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 037C
        gbc.setState(0x7e99, 0xf838, 0xc910, 0xe1c5, 0x71a9, 0xfe5, 0x0, 0x0);
        gbc.writeMem(0x7e99, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf838, gbc.sp());
        EXPECT(0x7e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 037E
        gbc.setState(0xde7, 0x7f10, 0xe190, 0xe5b7, 0x1a30, 0x2edb, 0x0, 0x1);
        gbc.writeMem(0xde7, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7f10, gbc.sp());
        EXPECT(0xde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 037F
        gbc.setState(0x32fb, 0xf5a5, 0xc850, 0xe460, 0x7830, 0x3eb4, 0x1, 0x1);
        gbc.writeMem(0x32fb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf5a5, gbc.sp());
        EXPECT(0x32fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0380
        gbc.setState(0xb297, 0x397e, 0x9070, 0xd642, 0x8df3, 0x64b5, 0x1, 0x1);
        gbc.writeMem(0xb297, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x397e, gbc.sp());
        EXPECT(0xb299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb297));
        EXPECT(0x9d, gbc.readMem(0xb298));
        // CB 9D 0381
        gbc.setState(0xb20, 0x9199, 0xc970, 0x9991, 0xa6db, 0x6a42, 0x1, 0x0);
        gbc.writeMem(0xb20, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9199, gbc.sp());
        EXPECT(0xb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0382
        gbc.setState(0xcd44, 0x7e26, 0xfab0, 0x724, 0xc027, 0x464a, 0x1, 0x0);
        gbc.writeMem(0xcd44, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7e26, gbc.sp());
        EXPECT(0xcd46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd44));
        EXPECT(0x9d, gbc.readMem(0xcd45));
        // CB 9D 0383
        gbc.setState(0x475c, 0xffb, 0x92b0, 0x20df, 0xbbe3, 0xf177, 0x1, 0x0);
        gbc.writeMem(0x475c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xffb, gbc.sp());
        EXPECT(0x475e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0384
        gbc.setState(0xa841, 0x913e, 0xd410, 0x2851, 0xbb48, 0xe1c4, 0x1, 0x0);
        gbc.writeMem(0xa841, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x913e, gbc.sp());
        EXPECT(0xa843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa841));
        EXPECT(0x9d, gbc.readMem(0xa842));
        // CB 9D 0385
        gbc.setState(0x8574, 0x8a54, 0xe2e0, 0x74a3, 0xadeb, 0xbd69, 0x1, 0x0);
        gbc.writeMem(0x8574, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8a54, gbc.sp());
        EXPECT(0x8576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8574));
        EXPECT(0x9d, gbc.readMem(0x8575));
        // CB 9D 0387
        gbc.setState(0x2c0d, 0x2ca8, 0xed00, 0xd151, 0x5335, 0x5eca, 0x0, 0x0);
        gbc.writeMem(0x2c0d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2ca8, gbc.sp());
        EXPECT(0x2c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0388
        gbc.setState(0x5708, 0x4cf3, 0xe570, 0xf0aa, 0x97f8, 0xfc7c, 0x1, 0x0);
        gbc.writeMem(0x5708, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4cf3, gbc.sp());
        EXPECT(0x570a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0389
        gbc.setState(0xcfca, 0x30ca, 0x5d60, 0xde0a, 0x3aa6, 0x4818, 0x0, 0x0);
        gbc.writeMem(0xcfca, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x30ca, gbc.sp());
        EXPECT(0xcfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfca));
        EXPECT(0x9d, gbc.readMem(0xcfcb));
        // CB 9D 038A
        gbc.setState(0xf42, 0x1aaf, 0xf130, 0x1a25, 0x129a, 0x4f9b, 0x1, 0x0);
        gbc.writeMem(0xf42, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1aaf, gbc.sp());
        EXPECT(0xf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 038B
        gbc.setState(0x264d, 0xddc0, 0x5390, 0x55b, 0xe608, 0xdad3, 0x0, 0x0);
        gbc.writeMem(0x264d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xddc0, gbc.sp());
        EXPECT(0x264f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 038C
        gbc.setState(0x4df4, 0x633, 0x5f40, 0x8334, 0x8adf, 0x287c, 0x1, 0x1);
        gbc.writeMem(0x4df4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x633, gbc.sp());
        EXPECT(0x4df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 038D
        gbc.setState(0x31ce, 0xecc4, 0xc830, 0x497f, 0x11e1, 0xe934, 0x0, 0x0);
        gbc.writeMem(0x31ce, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xecc4, gbc.sp());
        EXPECT(0x31d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 038E
        gbc.setState(0x591e, 0xf841, 0x40f0, 0xc10b, 0xb5c7, 0xdbaa, 0x1, 0x1);
        gbc.writeMem(0x591e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf841, gbc.sp());
        EXPECT(0x5920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 038F
        gbc.setState(0x5d07, 0xe445, 0xbfd0, 0x670d, 0xca2e, 0x217c, 0x0, 0x0);
        gbc.writeMem(0x5d07, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe445, gbc.sp());
        EXPECT(0x5d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0390
        gbc.setState(0x3387, 0x9e84, 0x2990, 0x9ba1, 0xcaaf, 0x5dc5, 0x0, 0x0);
        gbc.writeMem(0x3387, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9e84, gbc.sp());
        EXPECT(0x3389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0391
        gbc.setState(0x8e5d, 0x3108, 0x52d0, 0x316d, 0xaec6, 0xc608, 0x0, 0x0);
        gbc.writeMem(0x8e5d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3108, gbc.sp());
        EXPECT(0x8e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5d));
        EXPECT(0x9d, gbc.readMem(0x8e5e));
        // CB 9D 0392
        gbc.setState(0x2437, 0xc9b0, 0xef70, 0x1185, 0x6e69, 0x43f, 0x0, 0x1);
        gbc.writeMem(0x2437, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc9b0, gbc.sp());
        EXPECT(0x2439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0393
        gbc.setState(0x22eb, 0x10d6, 0x7a0, 0x3b5, 0x9ee4, 0x5706, 0x0, 0x0);
        gbc.writeMem(0x22eb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x10d6, gbc.sp());
        EXPECT(0x22ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0394
        gbc.setState(0xa427, 0x897c, 0x7d20, 0xb080, 0x2ad4, 0x1691, 0x0, 0x0);
        gbc.writeMem(0xa427, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x897c, gbc.sp());
        EXPECT(0xa429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa427));
        EXPECT(0x9d, gbc.readMem(0xa428));
        // CB 9D 0395
        gbc.setState(0x4d6e, 0xfcd1, 0xa1e0, 0xde16, 0x46be, 0x8386, 0x1, 0x1);
        gbc.writeMem(0x4d6e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfcd1, gbc.sp());
        EXPECT(0x4d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 0396
        gbc.setState(0x7f19, 0x7ed, 0x5870, 0xc5ba, 0xab5, 0x78f3, 0x0, 0x0);
        gbc.writeMem(0x7f19, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7ed, gbc.sp());
        EXPECT(0x7f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0397
        gbc.setState(0x42ff, 0xd374, 0x3a30, 0xcccc, 0xe7c9, 0x2687, 0x1, 0x1);
        gbc.writeMem(0x42ff, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd374, gbc.sp());
        EXPECT(0x4301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 0398
        gbc.setState(0xab60, 0xbc2c, 0x7c60, 0x1879, 0x56d9, 0xbaf3, 0x1, 0x1);
        gbc.writeMem(0xab60, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbc2c, gbc.sp());
        EXPECT(0xab62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab60));
        EXPECT(0x9d, gbc.readMem(0xab61));
        // CB 9D 0399
        gbc.setState(0x932e, 0xc274, 0x3ec0, 0x87c, 0x9b1c, 0x4bff, 0x0, 0x1);
        gbc.writeMem(0x932e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc274, gbc.sp());
        EXPECT(0x9330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x932e));
        EXPECT(0x9d, gbc.readMem(0x932f));
        // CB 9D 039A
        gbc.setState(0x8ede, 0x8eb3, 0x4f70, 0xf4c5, 0xff7, 0x11f, 0x1, 0x1);
        gbc.writeMem(0x8ede, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8eb3, gbc.sp());
        EXPECT(0x8ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ede));
        EXPECT(0x9d, gbc.readMem(0x8edf));
        // CB 9D 039B
        gbc.setState(0xd489, 0x6b8f, 0x51d0, 0xb819, 0xbae5, 0x6df8, 0x0, 0x1);
        gbc.writeMem(0xd489, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6b8f, gbc.sp());
        EXPECT(0xd48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd489));
        EXPECT(0x9d, gbc.readMem(0xd48a));
        // CB 9D 039C
        gbc.setState(0x4bcf, 0xcb8, 0x31d0, 0xe06e, 0x6b30, 0xc0a9, 0x0, 0x1);
        gbc.writeMem(0x4bcf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcb8, gbc.sp());
        EXPECT(0x4bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 039E
        gbc.setState(0xd339, 0x7da0, 0xd910, 0x2d24, 0x7c28, 0x7ecd, 0x1, 0x1);
        gbc.writeMem(0xd339, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7da0, gbc.sp());
        EXPECT(0xd33b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd339));
        EXPECT(0x9d, gbc.readMem(0xd33a));
        // CB 9D 039F
        gbc.setState(0x7a51, 0x634e, 0x2f40, 0xf0fc, 0x7735, 0x5b11, 0x1, 0x0);
        gbc.writeMem(0x7a51, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x634e, gbc.sp());
        EXPECT(0x7a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03A0
        gbc.setState(0x747e, 0xa238, 0xddb0, 0xc40d, 0xa8f4, 0x5bb6, 0x0, 0x0);
        gbc.writeMem(0x747e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa238, gbc.sp());
        EXPECT(0x7480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03A1
        gbc.setState(0xae51, 0x9b97, 0x3f70, 0xe636, 0x8dfd, 0x5fd1, 0x1, 0x0);
        gbc.writeMem(0xae51, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9b97, gbc.sp());
        EXPECT(0xae53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae51));
        EXPECT(0x9d, gbc.readMem(0xae52));
        // CB 9D 03A2
        gbc.setState(0x50f0, 0x1b7f, 0x46f0, 0x80f, 0x61cf, 0x6fcc, 0x1, 0x0);
        gbc.writeMem(0x50f0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1b7f, gbc.sp());
        EXPECT(0x50f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03A3
        gbc.setState(0x140e, 0xf38f, 0xa310, 0xd96b, 0xcc18, 0x6520, 0x0, 0x1);
        gbc.writeMem(0x140e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf38f, gbc.sp());
        EXPECT(0x1410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03A4
        gbc.setState(0x680b, 0x4a0a, 0x9b10, 0xfac9, 0x1d03, 0x69cf, 0x1, 0x0);
        gbc.writeMem(0x680b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4a0a, gbc.sp());
        EXPECT(0x680d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03A5
        gbc.setState(0xeda9, 0x2796, 0xc900, 0xd603, 0x807b, 0x2112, 0x0, 0x0);
        gbc.writeMem(0xeda9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2796, gbc.sp());
        EXPECT(0xedab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda9));
        EXPECT(0x9d, gbc.readMem(0xedaa));
        // CB 9D 03A6
        gbc.setState(0x1405, 0x26ed, 0x1d0, 0xed1, 0x611c, 0xba5e, 0x0, 0x1);
        gbc.writeMem(0x1405, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x26ed, gbc.sp());
        EXPECT(0x1407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03A7
        gbc.setState(0xd94d, 0x2a29, 0xb220, 0xc653, 0x713e, 0x5522, 0x0, 0x1);
        gbc.writeMem(0xd94d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2a29, gbc.sp());
        EXPECT(0xd94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94d));
        EXPECT(0x9d, gbc.readMem(0xd94e));
        // CB 9D 03A8
        gbc.setState(0x7186, 0x345d, 0x6940, 0x4c81, 0xbbec, 0x142c, 0x1, 0x1);
        gbc.writeMem(0x7186, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x345d, gbc.sp());
        EXPECT(0x7188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03A9
        gbc.setState(0xe0db, 0x6fb5, 0xd740, 0x6cba, 0x8fe5, 0xa316, 0x1, 0x1);
        gbc.writeMem(0xe0db, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6fb5, gbc.sp());
        EXPECT(0xe0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0db));
        EXPECT(0x9d, gbc.readMem(0xe0dc));
        // CB 9D 03AA
        gbc.setState(0xe424, 0x156c, 0x6660, 0x6ae1, 0x3de2, 0xf709, 0x0, 0x0);
        gbc.writeMem(0xe424, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x156c, gbc.sp());
        EXPECT(0xe426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe424));
        EXPECT(0x9d, gbc.readMem(0xe425));
        // CB 9D 03AB
        gbc.setState(0x74a9, 0xb700, 0x8820, 0x711a, 0xadff, 0xabf4, 0x1, 0x0);
        gbc.writeMem(0x74a9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb700, gbc.sp());
        EXPECT(0x74ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03AD
        gbc.setState(0xedd6, 0xcd2b, 0x2fa0, 0x6a8e, 0xde6f, 0x49e5, 0x1, 0x1);
        gbc.writeMem(0xedd6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcd2b, gbc.sp());
        EXPECT(0xedd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd6));
        EXPECT(0x9d, gbc.readMem(0xedd7));
        // CB 9D 03AE
        gbc.setState(0x687d, 0x7976, 0x2780, 0xe581, 0x2f9f, 0x34d4, 0x1, 0x0);
        gbc.writeMem(0x687d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7976, gbc.sp());
        EXPECT(0x687f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03AF
        gbc.setState(0xa99b, 0x5caf, 0xe260, 0x65bd, 0x7beb, 0xa8a, 0x1, 0x0);
        gbc.writeMem(0xa99b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5caf, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99b));
        EXPECT(0x9d, gbc.readMem(0xa99c));
        // CB 9D 03B0
        gbc.setState(0x55cf, 0xabe2, 0xd560, 0xca4, 0x36e6, 0x2e38, 0x0, 0x1);
        gbc.writeMem(0x55cf, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xabe2, gbc.sp());
        EXPECT(0x55d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03B1
        gbc.setState(0x5d00, 0x1df4, 0x9600, 0x884b, 0x4638, 0x46a, 0x1, 0x0);
        gbc.writeMem(0x5d00, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1df4, gbc.sp());
        EXPECT(0x5d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03B2
        gbc.setState(0xa38e, 0x1a76, 0x9cc0, 0x9afb, 0x5f91, 0xdd4b, 0x0, 0x0);
        gbc.writeMem(0xa38e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1a76, gbc.sp());
        EXPECT(0xa390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38e));
        EXPECT(0x9d, gbc.readMem(0xa38f));
        // CB 9D 03B4
        gbc.setState(0xaff1, 0x3371, 0xdda0, 0x5f7, 0xbcc5, 0xbf06, 0x1, 0x1);
        gbc.writeMem(0xaff1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3371, gbc.sp());
        EXPECT(0xaff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff1));
        EXPECT(0x9d, gbc.readMem(0xaff2));
        // CB 9D 03B5
        gbc.setState(0x4550, 0xa96f, 0xc340, 0x5f3f, 0x72d0, 0x5414, 0x0, 0x1);
        gbc.writeMem(0x4550, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa96f, gbc.sp());
        EXPECT(0x4552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03B6
        gbc.setState(0x2251, 0x6834, 0x3680, 0x5a75, 0x7518, 0x6561, 0x1, 0x1);
        gbc.writeMem(0x2251, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6834, gbc.sp());
        EXPECT(0x2253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03B7
        gbc.setState(0x350f, 0x19d9, 0x59e0, 0x38c3, 0xae3, 0xadbb, 0x0, 0x1);
        gbc.writeMem(0x350f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x19d9, gbc.sp());
        EXPECT(0x3511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03B8
        gbc.setState(0x8bb0, 0x62a5, 0x7010, 0x1ef9, 0xc101, 0xd5a7, 0x0, 0x1);
        gbc.writeMem(0x8bb0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x62a5, gbc.sp());
        EXPECT(0x8bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb0));
        EXPECT(0x9d, gbc.readMem(0x8bb1));
        // CB 9D 03B9
        gbc.setState(0x5481, 0xfb8, 0x490, 0x57a4, 0xe572, 0xaf2f, 0x0, 0x0);
        gbc.writeMem(0x5481, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfb8, gbc.sp());
        EXPECT(0x5483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03BA
        gbc.setState(0x75d2, 0x51f8, 0x380, 0x1f51, 0xa40d, 0x6f17, 0x0, 0x1);
        gbc.writeMem(0x75d2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x51f8, gbc.sp());
        EXPECT(0x75d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03BB
        gbc.setState(0x78d9, 0x7669, 0x3c50, 0x2ac3, 0x473b, 0xb5d6, 0x0, 0x1);
        gbc.writeMem(0x78d9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7669, gbc.sp());
        EXPECT(0x78db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03BC
        gbc.setState(0x9de0, 0x52b5, 0xddf0, 0xbb67, 0xfb04, 0xda4a, 0x0, 0x1);
        gbc.writeMem(0x9de0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x52b5, gbc.sp());
        EXPECT(0x9de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de0));
        EXPECT(0x9d, gbc.readMem(0x9de1));
        // CB 9D 03BD
        gbc.setState(0x2d0e, 0xc0b, 0x9b20, 0xfd1c, 0x12d5, 0x7926, 0x0, 0x0);
        gbc.writeMem(0x2d0e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc0b, gbc.sp());
        EXPECT(0x2d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03BE
        gbc.setState(0x850e, 0xab6a, 0x380, 0x81f1, 0xa730, 0xabc8, 0x0, 0x0);
        gbc.writeMem(0x850e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xab6a, gbc.sp());
        EXPECT(0x8510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850e));
        EXPECT(0x9d, gbc.readMem(0x850f));
        // CB 9D 03BF
        gbc.setState(0x2a69, 0x8ac8, 0xedd0, 0xfb6c, 0xaf84, 0x9590, 0x1, 0x1);
        gbc.writeMem(0x2a69, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8ac8, gbc.sp());
        EXPECT(0x2a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03C0
        gbc.setState(0x82d2, 0xb87f, 0x7c30, 0xb815, 0x3a2, 0x7f10, 0x1, 0x1);
        gbc.writeMem(0x82d2, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb87f, gbc.sp());
        EXPECT(0x82d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d2));
        EXPECT(0x9d, gbc.readMem(0x82d3));
        // CB 9D 03C1
        gbc.setState(0x8ae9, 0xe56e, 0xd890, 0xf730, 0x11ae, 0x35bd, 0x1, 0x1);
        gbc.writeMem(0x8ae9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe56e, gbc.sp());
        EXPECT(0x8aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae9));
        EXPECT(0x9d, gbc.readMem(0x8aea));
        // CB 9D 03C2
        gbc.setState(0x81c0, 0x9fa, 0xc5f0, 0x4d14, 0x9a, 0xb4c4, 0x1, 0x0);
        gbc.writeMem(0x81c0, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9fa, gbc.sp());
        EXPECT(0x81c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c0));
        EXPECT(0x9d, gbc.readMem(0x81c1));
        // CB 9D 03C3
        gbc.setState(0x6c76, 0xc2d3, 0xbb70, 0x7982, 0xf0f2, 0x14db, 0x0, 0x0);
        gbc.writeMem(0x6c76, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc2d3, gbc.sp());
        EXPECT(0x6c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03C4
        gbc.setState(0x939a, 0x6adf, 0x2700, 0x764d, 0x37b3, 0xc9a3, 0x1, 0x0);
        gbc.writeMem(0x939a, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6adf, gbc.sp());
        EXPECT(0x939c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939a));
        EXPECT(0x9d, gbc.readMem(0x939b));
        // CB 9D 03C5
        gbc.setState(0x9624, 0x47d2, 0x4cf0, 0x51ef, 0x6249, 0xc60e, 0x1, 0x0);
        gbc.writeMem(0x9624, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x47d2, gbc.sp());
        EXPECT(0x9626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9624));
        EXPECT(0x9d, gbc.readMem(0x9625));
        // CB 9D 03C6
        gbc.setState(0x2b8c, 0xefd, 0x1610, 0x1306, 0x2eb, 0xbc4b, 0x0, 0x1);
        gbc.writeMem(0x2b8c, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xefd, gbc.sp());
        EXPECT(0x2b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03C7
        gbc.setState(0x5ce9, 0x2ce5, 0xbe90, 0x6eb3, 0x6198, 0x6a89, 0x1, 0x0);
        gbc.writeMem(0x5ce9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2ce5, gbc.sp());
        EXPECT(0x5ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03C8
        gbc.setState(0x764f, 0x62fe, 0xeaf0, 0x7643, 0x8a35, 0x7e8b, 0x0, 0x0);
        gbc.writeMem(0x764f, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x62fe, gbc.sp());
        EXPECT(0x7651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03C9
        gbc.setState(0xb858, 0x544, 0x7260, 0x43f, 0xf89f, 0x31e6, 0x0, 0x0);
        gbc.writeMem(0xb858, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x544, gbc.sp());
        EXPECT(0xb85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb858));
        EXPECT(0x9d, gbc.readMem(0xb859));
        // CB 9D 03CA
        gbc.setState(0x4102, 0x951c, 0x20d0, 0x83be, 0x8244, 0x24b4, 0x0, 0x1);
        gbc.writeMem(0x4102, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x951c, gbc.sp());
        EXPECT(0x4104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03CB
        gbc.setState(0xbba9, 0xfee9, 0x3f60, 0xaecd, 0xdda0, 0x81d5, 0x1, 0x0);
        gbc.writeMem(0xbba9, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfee9, gbc.sp());
        EXPECT(0xbbab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba9));
        EXPECT(0x9d, gbc.readMem(0xbbaa));
        // CB 9D 03CC
        gbc.setState(0xb7b3, 0xa42e, 0xf7b0, 0x53c7, 0x5b7, 0x145e, 0x1, 0x1);
        gbc.writeMem(0xb7b3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa42e, gbc.sp());
        EXPECT(0xb7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b3));
        EXPECT(0x9d, gbc.readMem(0xb7b4));
        // CB 9D 03CD
        gbc.setState(0x5ed5, 0x3bd8, 0x710, 0xcdd6, 0x9854, 0xcc8b, 0x0, 0x0);
        gbc.writeMem(0x5ed5, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3bd8, gbc.sp());
        EXPECT(0x5ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03CE
        gbc.setState(0x2201, 0x1fff, 0x8d80, 0x99f6, 0x71dc, 0x1e38, 0x1, 0x0);
        gbc.writeMem(0x2201, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1fff, gbc.sp());
        EXPECT(0x2203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03CF
        gbc.setState(0x50ce, 0xd894, 0x7730, 0x9f20, 0x24fd, 0xad56, 0x0, 0x0);
        gbc.writeMem(0x50ce, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd894, gbc.sp());
        EXPECT(0x50d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03D0
        gbc.setState(0x7cf1, 0xea35, 0xa890, 0x2c8d, 0x2777, 0x89c3, 0x0, 0x0);
        gbc.writeMem(0x7cf1, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xea35, gbc.sp());
        EXPECT(0x7cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03D1
        gbc.setState(0x2e24, 0x3342, 0x4b90, 0x567, 0xbeb0, 0x5aa4, 0x0, 0x0);
        gbc.writeMem(0x2e24, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3342, gbc.sp());
        EXPECT(0x2e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03D2
        gbc.setState(0xc138, 0x149c, 0xb130, 0x91da, 0xa8e0, 0x2c89, 0x0, 0x1);
        gbc.writeMem(0xc138, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x149c, gbc.sp());
        EXPECT(0xc13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc138));
        EXPECT(0x9d, gbc.readMem(0xc139));
        // CB 9D 03D3
        gbc.setState(0x74c3, 0xee15, 0xd60, 0xa575, 0x7a9c, 0x2dc4, 0x0, 0x1);
        gbc.writeMem(0x74c3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xee15, gbc.sp());
        EXPECT(0x74c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03D4
        gbc.setState(0x3a11, 0x3cbf, 0xd230, 0xc6ce, 0x136c, 0xe11e, 0x1, 0x1);
        gbc.writeMem(0x3a11, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3cbf, gbc.sp());
        EXPECT(0x3a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03D5
        gbc.setState(0x9072, 0xb704, 0xfe00, 0x66e8, 0x341, 0xdd50, 0x1, 0x1);
        gbc.writeMem(0x9072, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb704, gbc.sp());
        EXPECT(0x9074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9072));
        EXPECT(0x9d, gbc.readMem(0x9073));
        // CB 9D 03D7
        gbc.setState(0xb4e4, 0x570b, 0x27b0, 0x5da, 0x9b75, 0xf807, 0x0, 0x0);
        gbc.writeMem(0xb4e4, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x570b, gbc.sp());
        EXPECT(0xb4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e4));
        EXPECT(0x9d, gbc.readMem(0xb4e5));
        // CB 9D 03D8
        gbc.setState(0xd5ac, 0x5072, 0xc2c0, 0x6f07, 0x9251, 0x1168, 0x1, 0x0);
        gbc.writeMem(0xd5ac, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5072, gbc.sp());
        EXPECT(0xd5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ac));
        EXPECT(0x9d, gbc.readMem(0xd5ad));
        // CB 9D 03D9
        gbc.setState(0xc87b, 0xb1e5, 0xb630, 0xebc2, 0xb888, 0xcb15, 0x1, 0x1);
        gbc.writeMem(0xc87b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb1e5, gbc.sp());
        EXPECT(0xc87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87b));
        EXPECT(0x9d, gbc.readMem(0xc87c));
        // CB 9D 03DA
        gbc.setState(0x812, 0xe6bf, 0xea40, 0x92bf, 0xb4e8, 0x2381, 0x0, 0x0);
        gbc.writeMem(0x812, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe6bf, gbc.sp());
        EXPECT(0x814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03DB
        gbc.setState(0x1443, 0xdba2, 0xed20, 0xb8f6, 0x2088, 0xeeeb, 0x0, 0x0);
        gbc.writeMem(0x1443, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdba2, gbc.sp());
        EXPECT(0x1445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03DD
        gbc.setState(0xe72b, 0xc225, 0xd150, 0x7969, 0x2d9b, 0x9b2d, 0x0, 0x1);
        gbc.writeMem(0xe72b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc225, gbc.sp());
        EXPECT(0xe72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72b));
        EXPECT(0x9d, gbc.readMem(0xe72c));
        // CB 9D 03DE
        gbc.setState(0x88b6, 0xa7ff, 0xae90, 0x76f6, 0x1c05, 0x443a, 0x1, 0x1);
        gbc.writeMem(0x88b6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa7ff, gbc.sp());
        EXPECT(0x88b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b6));
        EXPECT(0x9d, gbc.readMem(0x88b7));
        // CB 9D 03DF
        gbc.setState(0x521b, 0xad4c, 0x40c0, 0x9978, 0xc630, 0xe4cb, 0x1, 0x0);
        gbc.writeMem(0x521b, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xad4c, gbc.sp());
        EXPECT(0x521d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03E0
        gbc.setState(0x8cd6, 0x3eaf, 0xae70, 0x8bdb, 0x2e15, 0xa0c4, 0x0, 0x0);
        gbc.writeMem(0x8cd6, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3eaf, gbc.sp());
        EXPECT(0x8cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd6));
        EXPECT(0x9d, gbc.readMem(0x8cd7));
        // CB 9D 03E1
        gbc.setState(0x33bb, 0x5cbb, 0xe380, 0x1abf, 0xbe79, 0xf4b5, 0x0, 0x0);
        gbc.writeMem(0x33bb, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5cbb, gbc.sp());
        EXPECT(0x33bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03E2
        gbc.setState(0x4433, 0x43dd, 0xd5a0, 0x6bca, 0xa856, 0xcb7b, 0x1, 0x1);
        gbc.writeMem(0x4433, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x43dd, gbc.sp());
        EXPECT(0x4435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03E3
        gbc.setState(0x2619, 0x94bd, 0x2c90, 0xb83e, 0x45f5, 0x731c, 0x0, 0x0);
        gbc.writeMem(0x2619, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x94bd, gbc.sp());
        EXPECT(0x261b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9D 03E4
        gbc.setState(0xe83e, 0xc34e, 0x9dd0, 0x26c6, 0x6441, 0x754d, 0x1, 0x1);
        gbc.writeMem(0xe83e, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc34e, gbc.sp());
        EXPECT(0xe840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83e));
        EXPECT(0x9d, gbc.readMem(0xe83f));
        // CB 9D 03E5
        gbc.setState(0x1d6d, 0xb81a, 0x3160, 0x9538, 0x980d, 0x3a67, 0x0, 0x1);
        gbc.writeMem(0x1d6d, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb81a, gbc.sp());
        EXPECT(0x1d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9D 03E6
        gbc.setState(0xeb80, 0x6f0d, 0xcc90, 0xe51d, 0x9909, 0x572b, 0x0, 0x1);
        gbc.writeMem(0xeb80, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6f0d, gbc.sp());
        EXPECT(0xeb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb80));
        EXPECT(0x9d, gbc.readMem(0xeb81));
        // CB 9D 03E7
        gbc.setState(0x66c3, 0x3011, 0x8540, 0x9305, 0xeefd, 0xe82d, 0x1, 0x0);
        gbc.writeMem(0x66c3, { 0xcb, 0x9d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3011, gbc.sp());
        EXPECT(0x66c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
