    TEST(gbcemu, opcode_cb_4c) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 4C 0001
        gbc.setState(0x9c3a, 0x46e5, 0xf9a0, 0x2c2d, 0xcd3c, 0x3a4d, 0x1, 0x1);
        gbc.writeMem(0x9c3a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x46e5);
        EXPECT(gbc.pc(), 0x9c3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c3a), 0xcb);
        EXPECT(gbc.readMem(0x9c3b), 0x4c);
        // CB 4C 0002
        gbc.setState(0xed32, 0x8aee, 0xc050, 0x9632, 0x9546, 0x152f, 0x1, 0x1);
        gbc.writeMem(0xed32, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8aee);
        EXPECT(gbc.pc(), 0xed34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed32), 0xcb);
        EXPECT(gbc.readMem(0xed33), 0x4c);
        // CB 4C 0003
        gbc.setState(0xac1b, 0x415c, 0x64f0, 0xfa77, 0x15a8, 0xeff3, 0x0, 0x0);
        gbc.writeMem(0xac1b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x415c);
        EXPECT(gbc.pc(), 0xac1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac1b), 0xcb);
        EXPECT(gbc.readMem(0xac1c), 0x4c);
        // CB 4C 0004
        gbc.setState(0xb053, 0x4ca8, 0x3970, 0x5fef, 0x6004, 0x3389, 0x1, 0x0);
        gbc.writeMem(0xb053, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4ca8);
        EXPECT(gbc.pc(), 0xb055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb053), 0xcb);
        EXPECT(gbc.readMem(0xb054), 0x4c);
        // CB 4C 0005
        gbc.setState(0x28df, 0xbd4a, 0xb020, 0x1024, 0x54b7, 0x2934, 0x0, 0x0);
        gbc.writeMem(0x28df, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbd4a);
        EXPECT(gbc.pc(), 0x28e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0006
        gbc.setState(0x5483, 0xad6, 0xfb40, 0x8423, 0x7a66, 0x4639, 0x1, 0x1);
        gbc.writeMem(0x5483, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xad6);
        EXPECT(gbc.pc(), 0x5485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0007
        gbc.setState(0xd79b, 0x32d0, 0x9e00, 0xd8b7, 0xc69d, 0x59d1, 0x0, 0x0);
        gbc.writeMem(0xd79b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x32d0);
        EXPECT(gbc.pc(), 0xd79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79b), 0xcb);
        EXPECT(gbc.readMem(0xd79c), 0x4c);
        // CB 4C 0008
        gbc.setState(0xa74b, 0x728c, 0x20, 0x93af, 0x26d0, 0x944b, 0x1, 0x0);
        gbc.writeMem(0xa74b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x728c);
        EXPECT(gbc.pc(), 0xa74d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa74b), 0xcb);
        EXPECT(gbc.readMem(0xa74c), 0x4c);
        // CB 4C 0009
        gbc.setState(0xa3ad, 0x9e66, 0xee0, 0x1243, 0xb52d, 0x472e, 0x1, 0x1);
        gbc.writeMem(0xa3ad, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9e66);
        EXPECT(gbc.pc(), 0xa3af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ad), 0xcb);
        EXPECT(gbc.readMem(0xa3ae), 0x4c);
        // CB 4C 000A
        gbc.setState(0x92cd, 0x9a8, 0xc450, 0xf37c, 0xb595, 0xc865, 0x1, 0x1);
        gbc.writeMem(0x92cd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9a8);
        EXPECT(gbc.pc(), 0x92cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92cd), 0xcb);
        EXPECT(gbc.readMem(0x92ce), 0x4c);
        // CB 4C 000B
        gbc.setState(0x690f, 0x3cb7, 0xa740, 0xe1e5, 0x3d53, 0x81f2, 0x1, 0x0);
        gbc.writeMem(0x690f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3cb7);
        EXPECT(gbc.pc(), 0x6911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 000C
        gbc.setState(0x1b71, 0xea22, 0x96c0, 0xb824, 0x90ae, 0x2aa9, 0x0, 0x0);
        gbc.writeMem(0x1b71, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xea22);
        EXPECT(gbc.pc(), 0x1b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 000D
        gbc.setState(0xcc8d, 0x8542, 0x8100, 0x23a5, 0x94a8, 0xf3c8, 0x0, 0x0);
        gbc.writeMem(0xcc8d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8542);
        EXPECT(gbc.pc(), 0xcc8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc8d), 0xcb);
        EXPECT(gbc.readMem(0xcc8e), 0x4c);
        // CB 4C 000E
        gbc.setState(0x5d9d, 0x43bb, 0x2da0, 0x199d, 0x7a5, 0xd102, 0x1, 0x0);
        gbc.writeMem(0x5d9d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x43bb);
        EXPECT(gbc.pc(), 0x5d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 000F
        gbc.setState(0xc7c8, 0xb0e, 0x770, 0x3cbe, 0x98ad, 0x80d0, 0x1, 0x0);
        gbc.writeMem(0xc7c8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb0e);
        EXPECT(gbc.pc(), 0xc7ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c8), 0xcb);
        EXPECT(gbc.readMem(0xc7c9), 0x4c);
        // CB 4C 0010
        gbc.setState(0xc2d6, 0x86b7, 0x9a0, 0x5b14, 0x2948, 0xf3d3, 0x0, 0x1);
        gbc.writeMem(0xc2d6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x86b7);
        EXPECT(gbc.pc(), 0xc2d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2d6), 0xcb);
        EXPECT(gbc.readMem(0xc2d7), 0x4c);
        // CB 4C 0011
        gbc.setState(0xd2e0, 0x2904, 0x3ee0, 0xfb0c, 0xfa1d, 0x1aee, 0x1, 0x1);
        gbc.writeMem(0xd2e0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2904);
        EXPECT(gbc.pc(), 0xd2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e0), 0xcb);
        EXPECT(gbc.readMem(0xd2e1), 0x4c);
        // CB 4C 0014
        gbc.setState(0xc683, 0x3e57, 0x8fd0, 0x6d8, 0x19ad, 0xaadc, 0x0, 0x1);
        gbc.writeMem(0xc683, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3e57);
        EXPECT(gbc.pc(), 0xc685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc683), 0xcb);
        EXPECT(gbc.readMem(0xc684), 0x4c);
        // CB 4C 0015
        gbc.setState(0x5e0a, 0x484c, 0xa6b0, 0x432, 0xf218, 0x5b30, 0x0, 0x0);
        gbc.writeMem(0x5e0a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x484c);
        EXPECT(gbc.pc(), 0x5e0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0016
        gbc.setState(0x2fb4, 0x6c7, 0x5440, 0x6f4d, 0x237, 0x282b, 0x1, 0x1);
        gbc.writeMem(0x2fb4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6c7);
        EXPECT(gbc.pc(), 0x2fb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0017
        gbc.setState(0x7f88, 0x9928, 0xf7d0, 0xc71a, 0x6ab7, 0x528d, 0x1, 0x0);
        gbc.writeMem(0x7f88, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9928);
        EXPECT(gbc.pc(), 0x7f8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0018
        gbc.setState(0xd9b3, 0x80e, 0xa560, 0x51bc, 0x5616, 0x4678, 0x1, 0x0);
        gbc.writeMem(0xd9b3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x80e);
        EXPECT(gbc.pc(), 0xd9b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b3), 0xcb);
        EXPECT(gbc.readMem(0xd9b4), 0x4c);
        // CB 4C 0019
        gbc.setState(0x1789, 0xec55, 0x47c0, 0xbe4a, 0xdc31, 0xdb87, 0x1, 0x1);
        gbc.writeMem(0x1789, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xec55);
        EXPECT(gbc.pc(), 0x178b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 001A
        gbc.setState(0xcbdf, 0x8ff9, 0x9610, 0x4c4b, 0x2c5d, 0xaba1, 0x0, 0x0);
        gbc.writeMem(0xcbdf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8ff9);
        EXPECT(gbc.pc(), 0xcbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbdf), 0xcb);
        EXPECT(gbc.readMem(0xcbe0), 0x4c);
        // CB 4C 001B
        gbc.setState(0x408b, 0xec28, 0x3390, 0xa041, 0x4cdb, 0xd132, 0x0, 0x0);
        gbc.writeMem(0x408b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xec28);
        EXPECT(gbc.pc(), 0x408d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 001C
        gbc.setState(0x9854, 0x7d88, 0xdc80, 0x4081, 0x6047, 0x10ac, 0x1, 0x0);
        gbc.writeMem(0x9854, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7d88);
        EXPECT(gbc.pc(), 0x9856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9854), 0xcb);
        EXPECT(gbc.readMem(0x9855), 0x4c);
        // CB 4C 001D
        gbc.setState(0xa978, 0x2073, 0x5120, 0x9d50, 0x8621, 0xf0a9, 0x0, 0x0);
        gbc.writeMem(0xa978, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2073);
        EXPECT(gbc.pc(), 0xa97a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa978), 0xcb);
        EXPECT(gbc.readMem(0xa979), 0x4c);
        // CB 4C 001E
        gbc.setState(0x98e4, 0xf799, 0x7230, 0x9a6, 0x29cb, 0x1fd5, 0x1, 0x1);
        gbc.writeMem(0x98e4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf799);
        EXPECT(gbc.pc(), 0x98e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e4), 0xcb);
        EXPECT(gbc.readMem(0x98e5), 0x4c);
        // CB 4C 001F
        gbc.setState(0x9756, 0x613b, 0x9b0, 0x5694, 0xbfb6, 0x93ee, 0x1, 0x1);
        gbc.writeMem(0x9756, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x613b);
        EXPECT(gbc.pc(), 0x9758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9756), 0xcb);
        EXPECT(gbc.readMem(0x9757), 0x4c);
        // CB 4C 0020
        gbc.setState(0x8012, 0x415f, 0x69e0, 0x1536, 0x3fad, 0x7c71, 0x0, 0x0);
        gbc.writeMem(0x8012, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x415f);
        EXPECT(gbc.pc(), 0x8014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8012), 0xcb);
        EXPECT(gbc.readMem(0x8013), 0x4c);
        // CB 4C 0021
        gbc.setState(0x3552, 0x2c90, 0xb8f0, 0xf5d9, 0x282c, 0x8f29, 0x0, 0x1);
        gbc.writeMem(0x3552, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2c90);
        EXPECT(gbc.pc(), 0x3554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0022
        gbc.setState(0x1601, 0x8bac, 0x6d30, 0x71da, 0x5704, 0xb0fd, 0x0, 0x0);
        gbc.writeMem(0x1601, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8bac);
        EXPECT(gbc.pc(), 0x1603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0023
        gbc.setState(0x2d9d, 0xcc16, 0x2360, 0x61a5, 0xed6f, 0xed56, 0x1, 0x1);
        gbc.writeMem(0x2d9d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xcc16);
        EXPECT(gbc.pc(), 0x2d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0024
        gbc.setState(0x2ff, 0x1a54, 0xc5f0, 0xdb2e, 0x619d, 0x45ce, 0x0, 0x1);
        gbc.writeMem(0x2ff, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1a54);
        EXPECT(gbc.pc(), 0x301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0025
        gbc.setState(0xa808, 0x2b92, 0x3720, 0xf143, 0xd68d, 0xdcf9, 0x1, 0x1);
        gbc.writeMem(0xa808, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2b92);
        EXPECT(gbc.pc(), 0xa80a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa808), 0xcb);
        EXPECT(gbc.readMem(0xa809), 0x4c);
        // CB 4C 0026
        gbc.setState(0x7e41, 0x362d, 0xe580, 0xee1b, 0xdbf2, 0xfe42, 0x0, 0x0);
        gbc.writeMem(0x7e41, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x362d);
        EXPECT(gbc.pc(), 0x7e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0027
        gbc.setState(0xba32, 0x7923, 0x6520, 0xe495, 0xb76f, 0x57f4, 0x0, 0x1);
        gbc.writeMem(0xba32, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7923);
        EXPECT(gbc.pc(), 0xba34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba32), 0xcb);
        EXPECT(gbc.readMem(0xba33), 0x4c);
        // CB 4C 0028
        gbc.setState(0xaef5, 0x4d63, 0x400, 0xef69, 0xbd0d, 0x7df7, 0x1, 0x1);
        gbc.writeMem(0xaef5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4d63);
        EXPECT(gbc.pc(), 0xaef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef5), 0xcb);
        EXPECT(gbc.readMem(0xaef6), 0x4c);
        // CB 4C 0029
        gbc.setState(0xbde8, 0x47a4, 0x5b90, 0x45c5, 0x7eff, 0xa783, 0x0, 0x1);
        gbc.writeMem(0xbde8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x47a4);
        EXPECT(gbc.pc(), 0xbdea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde8), 0xcb);
        EXPECT(gbc.readMem(0xbde9), 0x4c);
        // CB 4C 002A
        gbc.setState(0xab01, 0xe489, 0x8f60, 0xabe1, 0x2290, 0x4b4d, 0x0, 0x0);
        gbc.writeMem(0xab01, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe489);
        EXPECT(gbc.pc(), 0xab03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab01), 0xcb);
        EXPECT(gbc.readMem(0xab02), 0x4c);
        // CB 4C 002B
        gbc.setState(0xe79a, 0x6697, 0x5fc0, 0x18ba, 0x76bb, 0xdadc, 0x1, 0x1);
        gbc.writeMem(0xe79a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6697);
        EXPECT(gbc.pc(), 0xe79c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe79a), 0xcb);
        EXPECT(gbc.readMem(0xe79b), 0x4c);
        // CB 4C 002C
        gbc.setState(0x972a, 0x6042, 0x8e10, 0xd52, 0x1454, 0x919b, 0x1, 0x1);
        gbc.writeMem(0x972a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6042);
        EXPECT(gbc.pc(), 0x972c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x972a), 0xcb);
        EXPECT(gbc.readMem(0x972b), 0x4c);
        // CB 4C 002D
        gbc.setState(0x9a80, 0x78f6, 0xd460, 0x96aa, 0x5243, 0xddb8, 0x1, 0x0);
        gbc.writeMem(0x9a80, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x78f6);
        EXPECT(gbc.pc(), 0x9a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a80), 0xcb);
        EXPECT(gbc.readMem(0x9a81), 0x4c);
        // CB 4C 002E
        gbc.setState(0x9532, 0x4720, 0xc210, 0x94f1, 0x174e, 0x35c4, 0x0, 0x1);
        gbc.writeMem(0x9532, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4720);
        EXPECT(gbc.pc(), 0x9534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9532), 0xcb);
        EXPECT(gbc.readMem(0x9533), 0x4c);
        // CB 4C 002F
        gbc.setState(0x5e71, 0xc59a, 0x40, 0x3003, 0x5b5, 0xa663, 0x0, 0x0);
        gbc.writeMem(0x5e71, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc59a);
        EXPECT(gbc.pc(), 0x5e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0030
        gbc.setState(0xbdb0, 0x7603, 0x26c0, 0x4d56, 0x1c1d, 0x8708, 0x0, 0x1);
        gbc.writeMem(0xbdb0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7603);
        EXPECT(gbc.pc(), 0xbdb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb0), 0xcb);
        EXPECT(gbc.readMem(0xbdb1), 0x4c);
        // CB 4C 0031
        gbc.setState(0x2bab, 0x4015, 0x8890, 0x1485, 0x69bd, 0xf93f, 0x0, 0x0);
        gbc.writeMem(0x2bab, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4015);
        EXPECT(gbc.pc(), 0x2bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0032
        gbc.setState(0x2efb, 0x980f, 0xa1d0, 0xa257, 0xf4cc, 0x893b, 0x1, 0x1);
        gbc.writeMem(0x2efb, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x980f);
        EXPECT(gbc.pc(), 0x2efd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0033
        gbc.setState(0xefad, 0xee8a, 0xe650, 0x253f, 0xd25b, 0x1ce8, 0x0, 0x1);
        gbc.writeMem(0xefad, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xee8a);
        EXPECT(gbc.pc(), 0xefaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefad), 0xcb);
        EXPECT(gbc.readMem(0xefae), 0x4c);
        // CB 4C 0034
        gbc.setState(0x669b, 0xe9ad, 0x290, 0xb5f, 0x73f1, 0xb33c, 0x1, 0x0);
        gbc.writeMem(0x669b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe9ad);
        EXPECT(gbc.pc(), 0x669d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0035
        gbc.setState(0x7d60, 0xb29b, 0xcc30, 0x31d6, 0xd10d, 0xe7e, 0x1, 0x0);
        gbc.writeMem(0x7d60, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb29b);
        EXPECT(gbc.pc(), 0x7d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0036
        gbc.setState(0xd07a, 0x49af, 0x8630, 0x4dfa, 0x3a9d, 0x19b8, 0x0, 0x1);
        gbc.writeMem(0xd07a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x49af);
        EXPECT(gbc.pc(), 0xd07c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd07a), 0xcb);
        EXPECT(gbc.readMem(0xd07b), 0x4c);
        // CB 4C 0037
        gbc.setState(0xe5dd, 0xe82b, 0x9c90, 0xa63a, 0xd774, 0x9627, 0x1, 0x1);
        gbc.writeMem(0xe5dd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe82b);
        EXPECT(gbc.pc(), 0xe5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5dd), 0xcb);
        EXPECT(gbc.readMem(0xe5de), 0x4c);
        // CB 4C 0038
        gbc.setState(0x23c2, 0xe4b7, 0xb20, 0xf3b1, 0x5c6d, 0x297f, 0x0, 0x0);
        gbc.writeMem(0x23c2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe4b7);
        EXPECT(gbc.pc(), 0x23c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0039
        gbc.setState(0x8829, 0xc82d, 0xc00, 0xb484, 0x4bfb, 0x6aef, 0x0, 0x1);
        gbc.writeMem(0x8829, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc82d);
        EXPECT(gbc.pc(), 0x882b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8829), 0xcb);
        EXPECT(gbc.readMem(0x882a), 0x4c);
        // CB 4C 003A
        gbc.setState(0x1613, 0x28a7, 0x3690, 0x4bea, 0x55b3, 0xb2f0, 0x1, 0x1);
        gbc.writeMem(0x1613, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x28a7);
        EXPECT(gbc.pc(), 0x1615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 003B
        gbc.setState(0x4ac4, 0x3d06, 0x6240, 0x17ca, 0xb97f, 0x302f, 0x0, 0x0);
        gbc.writeMem(0x4ac4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3d06);
        EXPECT(gbc.pc(), 0x4ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 003C
        gbc.setState(0xd179, 0x7f1, 0x6af0, 0xfa71, 0x2c88, 0x876e, 0x1, 0x1);
        gbc.writeMem(0xd179, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7f1);
        EXPECT(gbc.pc(), 0xd17b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd179), 0xcb);
        EXPECT(gbc.readMem(0xd17a), 0x4c);
        // CB 4C 003D
        gbc.setState(0x413f, 0xa09c, 0xcd30, 0x3e9c, 0xa055, 0x5e7, 0x0, 0x0);
        gbc.writeMem(0x413f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa09c);
        EXPECT(gbc.pc(), 0x4141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 003E
        gbc.setState(0xd7e8, 0x8823, 0x2750, 0xddb6, 0x52b3, 0x27a0, 0x1, 0x1);
        gbc.writeMem(0xd7e8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8823);
        EXPECT(gbc.pc(), 0xd7ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e8), 0xcb);
        EXPECT(gbc.readMem(0xd7e9), 0x4c);
        // CB 4C 003F
        gbc.setState(0x462e, 0x4fe1, 0xb2f0, 0x92a0, 0xbc66, 0x1303, 0x0, 0x1);
        gbc.writeMem(0x462e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4fe1);
        EXPECT(gbc.pc(), 0x4630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0040
        gbc.setState(0x2916, 0xef4, 0xa1b0, 0x805d, 0x5526, 0x5e6e, 0x0, 0x1);
        gbc.writeMem(0x2916, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xef4);
        EXPECT(gbc.pc(), 0x2918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0041
        gbc.setState(0xcac6, 0xec91, 0x8450, 0x53ef, 0xa5b2, 0xdfd6, 0x0, 0x0);
        gbc.writeMem(0xcac6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xec91);
        EXPECT(gbc.pc(), 0xcac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac6), 0xcb);
        EXPECT(gbc.readMem(0xcac7), 0x4c);
        // CB 4C 0043
        gbc.setState(0xee96, 0xacaf, 0x2500, 0xc0e6, 0xa6c7, 0x8dff, 0x1, 0x1);
        gbc.writeMem(0xee96, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xacaf);
        EXPECT(gbc.pc(), 0xee98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee96), 0xcb);
        EXPECT(gbc.readMem(0xee97), 0x4c);
        // CB 4C 0044
        gbc.setState(0x4209, 0xee5d, 0xd220, 0xe687, 0xf561, 0x3e1b, 0x0, 0x0);
        gbc.writeMem(0x4209, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xee5d);
        EXPECT(gbc.pc(), 0x420b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0045
        gbc.setState(0xd22f, 0xa3cd, 0x1f40, 0x1bb3, 0x80e1, 0xc720, 0x1, 0x1);
        gbc.writeMem(0xd22f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa3cd);
        EXPECT(gbc.pc(), 0xd231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22f), 0xcb);
        EXPECT(gbc.readMem(0xd230), 0x4c);
        // CB 4C 0047
        gbc.setState(0xdd0f, 0xfe1c, 0x650, 0xef81, 0x8f4c, 0x8214, 0x1, 0x1);
        gbc.writeMem(0xdd0f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfe1c);
        EXPECT(gbc.pc(), 0xdd11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd0f), 0xcb);
        EXPECT(gbc.readMem(0xdd10), 0x4c);
        // CB 4C 0048
        gbc.setState(0xa63f, 0xb955, 0xbd10, 0x6cef, 0xb745, 0x887c, 0x0, 0x1);
        gbc.writeMem(0xa63f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb955);
        EXPECT(gbc.pc(), 0xa641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63f), 0xcb);
        EXPECT(gbc.readMem(0xa640), 0x4c);
        // CB 4C 0049
        gbc.setState(0xb8f, 0x79e9, 0xba10, 0xee14, 0xf5eb, 0x66cf, 0x0, 0x1);
        gbc.writeMem(0xb8f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x79e9);
        EXPECT(gbc.pc(), 0xb91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 004A
        gbc.setState(0xa93a, 0x7bbe, 0x7450, 0x585b, 0xb33a, 0x3910, 0x1, 0x0);
        gbc.writeMem(0xa93a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7bbe);
        EXPECT(gbc.pc(), 0xa93c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa93a), 0xcb);
        EXPECT(gbc.readMem(0xa93b), 0x4c);
        // CB 4C 004B
        gbc.setState(0x1dbb, 0xb131, 0x43b0, 0x5285, 0x88, 0x4fcb, 0x1, 0x1);
        gbc.writeMem(0x1dbb, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb131);
        EXPECT(gbc.pc(), 0x1dbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 004C
        gbc.setState(0x2722, 0x8a39, 0xe880, 0xa0ed, 0xac41, 0x833, 0x0, 0x0);
        gbc.writeMem(0x2722, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8a39);
        EXPECT(gbc.pc(), 0x2724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 004D
        gbc.setState(0xd06e, 0x5f38, 0xf630, 0x1cae, 0xdc82, 0x314b, 0x0, 0x0);
        gbc.writeMem(0xd06e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5f38);
        EXPECT(gbc.pc(), 0xd070);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd06e), 0xcb);
        EXPECT(gbc.readMem(0xd06f), 0x4c);
        // CB 4C 004E
        gbc.setState(0x4da5, 0xd0ef, 0xc070, 0x89d4, 0x157d, 0xef03, 0x1, 0x1);
        gbc.writeMem(0x4da5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd0ef);
        EXPECT(gbc.pc(), 0x4da7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 004F
        gbc.setState(0x2e50, 0xfab7, 0xddc0, 0x465c, 0xe11a, 0x27cf, 0x1, 0x0);
        gbc.writeMem(0x2e50, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfab7);
        EXPECT(gbc.pc(), 0x2e52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0050
        gbc.setState(0x6143, 0xa15b, 0x7310, 0xfeae, 0xa3fc, 0x7cdd, 0x0, 0x1);
        gbc.writeMem(0x6143, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa15b);
        EXPECT(gbc.pc(), 0x6145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0051
        gbc.setState(0x567, 0xe125, 0xce30, 0x612f, 0x46c5, 0xe2b9, 0x0, 0x1);
        gbc.writeMem(0x567, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe125);
        EXPECT(gbc.pc(), 0x569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0052
        gbc.setState(0x2475, 0x3c69, 0x9d20, 0xc49b, 0x8792, 0xbcc9, 0x0, 0x1);
        gbc.writeMem(0x2475, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3c69);
        EXPECT(gbc.pc(), 0x2477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0053
        gbc.setState(0x21e, 0x10b9, 0xbb50, 0xe3dd, 0xac38, 0xe973, 0x1, 0x0);
        gbc.writeMem(0x21e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x10b9);
        EXPECT(gbc.pc(), 0x220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0054
        gbc.setState(0x6326, 0x88c7, 0x7c70, 0xee5f, 0x2b1e, 0x2261, 0x0, 0x0);
        gbc.writeMem(0x6326, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x88c7);
        EXPECT(gbc.pc(), 0x6328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0055
        gbc.setState(0xebb6, 0x164b, 0x9c0, 0x9d64, 0x8853, 0x4cea, 0x1, 0x1);
        gbc.writeMem(0xebb6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x164b);
        EXPECT(gbc.pc(), 0xebb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebb6), 0xcb);
        EXPECT(gbc.readMem(0xebb7), 0x4c);
        // CB 4C 0056
        gbc.setState(0x909c, 0x6556, 0xaaa0, 0x3254, 0x5d5c, 0xd2e6, 0x0, 0x0);
        gbc.writeMem(0x909c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6556);
        EXPECT(gbc.pc(), 0x909e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909c), 0xcb);
        EXPECT(gbc.readMem(0x909d), 0x4c);
        // CB 4C 0057
        gbc.setState(0x639a, 0xd3ed, 0x3310, 0x58a3, 0x34c9, 0x20d8, 0x1, 0x1);
        gbc.writeMem(0x639a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd3ed);
        EXPECT(gbc.pc(), 0x639c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0058
        gbc.setState(0x9788, 0xdd81, 0x95d0, 0x34f5, 0xa941, 0xaf18, 0x0, 0x0);
        gbc.writeMem(0x9788, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xdd81);
        EXPECT(gbc.pc(), 0x978a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9788), 0xcb);
        EXPECT(gbc.readMem(0x9789), 0x4c);
        // CB 4C 0059
        gbc.setState(0x1e20, 0x90ba, 0x3ec0, 0x669f, 0xc3bc, 0xfb1d, 0x0, 0x1);
        gbc.writeMem(0x1e20, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x90ba);
        EXPECT(gbc.pc(), 0x1e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 005A
        gbc.setState(0x2833, 0xf6c9, 0xe40, 0xeed6, 0xcda, 0xcaf2, 0x0, 0x1);
        gbc.writeMem(0x2833, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf6c9);
        EXPECT(gbc.pc(), 0x2835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 005B
        gbc.setState(0x38cb, 0x382f, 0xb030, 0x2d41, 0xe3b0, 0xb9de, 0x1, 0x1);
        gbc.writeMem(0x38cb, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x382f);
        EXPECT(gbc.pc(), 0x38cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 005C
        gbc.setState(0x527, 0xe7e3, 0x43f0, 0xba1f, 0xa120, 0x2673, 0x1, 0x0);
        gbc.writeMem(0x527, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe7e3);
        EXPECT(gbc.pc(), 0x529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 005D
        gbc.setState(0x617, 0x9ef4, 0x2700, 0xe734, 0xbc66, 0xcdc2, 0x1, 0x0);
        gbc.writeMem(0x617, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9ef4);
        EXPECT(gbc.pc(), 0x619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 005E
        gbc.setState(0xb63b, 0xaed2, 0x2d30, 0x91e8, 0x48a9, 0x4a3b, 0x1, 0x0);
        gbc.writeMem(0xb63b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xaed2);
        EXPECT(gbc.pc(), 0xb63d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb63b), 0xcb);
        EXPECT(gbc.readMem(0xb63c), 0x4c);
        // CB 4C 005F
        gbc.setState(0x7cb0, 0x4cd6, 0xf810, 0x9be7, 0xc784, 0x34a6, 0x0, 0x0);
        gbc.writeMem(0x7cb0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4cd6);
        EXPECT(gbc.pc(), 0x7cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0060
        gbc.setState(0x3082, 0x3c1d, 0x6fd0, 0xc2d2, 0x6da1, 0xb823, 0x0, 0x0);
        gbc.writeMem(0x3082, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3c1d);
        EXPECT(gbc.pc(), 0x3084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0061
        gbc.setState(0x6692, 0x44d3, 0x69b0, 0xb973, 0xe498, 0xa355, 0x0, 0x1);
        gbc.writeMem(0x6692, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x44d3);
        EXPECT(gbc.pc(), 0x6694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0062
        gbc.setState(0xbd0b, 0xccb2, 0x4e00, 0x8211, 0x1128, 0x8e61, 0x0, 0x1);
        gbc.writeMem(0xbd0b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xccb2);
        EXPECT(gbc.pc(), 0xbd0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd0b), 0xcb);
        EXPECT(gbc.readMem(0xbd0c), 0x4c);
        // CB 4C 0063
        gbc.setState(0xaee8, 0xaba3, 0x4ac0, 0x41ac, 0xc547, 0x95a4, 0x1, 0x1);
        gbc.writeMem(0xaee8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xaba3);
        EXPECT(gbc.pc(), 0xaeea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee8), 0xcb);
        EXPECT(gbc.readMem(0xaee9), 0x4c);
        // CB 4C 0064
        gbc.setState(0x20f1, 0x126d, 0x3410, 0xe333, 0xe5bd, 0x157c, 0x1, 0x1);
        gbc.writeMem(0x20f1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x126d);
        EXPECT(gbc.pc(), 0x20f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0066
        gbc.setState(0x8737, 0x2bed, 0xd180, 0xea55, 0x3547, 0xfa1, 0x1, 0x0);
        gbc.writeMem(0x8737, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2bed);
        EXPECT(gbc.pc(), 0x8739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8737), 0xcb);
        EXPECT(gbc.readMem(0x8738), 0x4c);
        // CB 4C 0067
        gbc.setState(0x7377, 0x3fb, 0xdef0, 0x7622, 0x3c8c, 0x8380, 0x1, 0x0);
        gbc.writeMem(0x7377, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3fb);
        EXPECT(gbc.pc(), 0x7379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0068
        gbc.setState(0x2089, 0xc1b5, 0x8410, 0x225a, 0x7724, 0x4307, 0x1, 0x1);
        gbc.writeMem(0x2089, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc1b5);
        EXPECT(gbc.pc(), 0x208b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0069
        gbc.setState(0x4d2f, 0x32b9, 0x1890, 0x98da, 0xcdc6, 0xde6e, 0x0, 0x0);
        gbc.writeMem(0x4d2f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x32b9);
        EXPECT(gbc.pc(), 0x4d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 006A
        gbc.setState(0x479e, 0x5bfc, 0xcdb0, 0x3da1, 0x14e8, 0xf8e9, 0x0, 0x0);
        gbc.writeMem(0x479e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5bfc);
        EXPECT(gbc.pc(), 0x47a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 006B
        gbc.setState(0xbcc4, 0xd514, 0x55c0, 0xfc53, 0xe926, 0x4070, 0x0, 0x0);
        gbc.writeMem(0xbcc4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd514);
        EXPECT(gbc.pc(), 0xbcc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc4), 0xcb);
        EXPECT(gbc.readMem(0xbcc5), 0x4c);
        // CB 4C 006C
        gbc.setState(0x7c2c, 0x48f2, 0xcea0, 0x47b, 0xcb3, 0xe638, 0x0, 0x0);
        gbc.writeMem(0x7c2c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x48f2);
        EXPECT(gbc.pc(), 0x7c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 006D
        gbc.setState(0x9c64, 0x4c47, 0x8b80, 0x5f01, 0x9be9, 0x97e4, 0x1, 0x0);
        gbc.writeMem(0x9c64, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4c47);
        EXPECT(gbc.pc(), 0x9c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c64), 0xcb);
        EXPECT(gbc.readMem(0x9c65), 0x4c);
        // CB 4C 006E
        gbc.setState(0xafd5, 0x9f7f, 0x8cc0, 0x2cc7, 0xe258, 0x1a2, 0x1, 0x1);
        gbc.writeMem(0xafd5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9f7f);
        EXPECT(gbc.pc(), 0xafd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd5), 0xcb);
        EXPECT(gbc.readMem(0xafd6), 0x4c);
        // CB 4C 006F
        gbc.setState(0xe162, 0xb4b8, 0xad20, 0xdb77, 0x7cc7, 0x8041, 0x1, 0x0);
        gbc.writeMem(0xe162, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb4b8);
        EXPECT(gbc.pc(), 0xe164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe162), 0xcb);
        EXPECT(gbc.readMem(0xe163), 0x4c);
        // CB 4C 0070
        gbc.setState(0x24a3, 0xbf8b, 0xe200, 0x3705, 0xbcf1, 0xeafd, 0x1, 0x0);
        gbc.writeMem(0x24a3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbf8b);
        EXPECT(gbc.pc(), 0x24a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0071
        gbc.setState(0x77c, 0x6108, 0x4800, 0xc295, 0x2628, 0xfee4, 0x1, 0x0);
        gbc.writeMem(0x77c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6108);
        EXPECT(gbc.pc(), 0x77e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0072
        gbc.setState(0x93a, 0xd226, 0xc0b0, 0xf6bf, 0xa4de, 0xb769, 0x1, 0x0);
        gbc.writeMem(0x93a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd226);
        EXPECT(gbc.pc(), 0x93c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0073
        gbc.setState(0xbe88, 0xfe5e, 0x5ef0, 0x8334, 0x4bec, 0x2f7b, 0x0, 0x0);
        gbc.writeMem(0xbe88, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xfe5e);
        EXPECT(gbc.pc(), 0xbe8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe88), 0xcb);
        EXPECT(gbc.readMem(0xbe89), 0x4c);
        // CB 4C 0074
        gbc.setState(0xa156, 0x4903, 0xfe50, 0x9412, 0x6a46, 0xfa0f, 0x1, 0x0);
        gbc.writeMem(0xa156, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4903);
        EXPECT(gbc.pc(), 0xa158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa156), 0xcb);
        EXPECT(gbc.readMem(0xa157), 0x4c);
        // CB 4C 0075
        gbc.setState(0xa6c4, 0x4a91, 0xd3d0, 0x31dd, 0xf4a1, 0x863e, 0x0, 0x0);
        gbc.writeMem(0xa6c4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4a91);
        EXPECT(gbc.pc(), 0xa6c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c4), 0xcb);
        EXPECT(gbc.readMem(0xa6c5), 0x4c);
        // CB 4C 0076
        gbc.setState(0x834, 0x6cce, 0xcfc0, 0x8aa8, 0xd512, 0x3e08, 0x0, 0x0);
        gbc.writeMem(0x834, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6cce);
        EXPECT(gbc.pc(), 0x836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0077
        gbc.setState(0xde3b, 0x638c, 0xaad0, 0x2ec0, 0xdc3d, 0x233d, 0x0, 0x1);
        gbc.writeMem(0xde3b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x638c);
        EXPECT(gbc.pc(), 0xde3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde3b), 0xcb);
        EXPECT(gbc.readMem(0xde3c), 0x4c);
        // CB 4C 0078
        gbc.setState(0xea1e, 0x891a, 0x3800, 0xa4d8, 0xc3a1, 0x7f26, 0x1, 0x1);
        gbc.writeMem(0xea1e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x891a);
        EXPECT(gbc.pc(), 0xea20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea1e), 0xcb);
        EXPECT(gbc.readMem(0xea1f), 0x4c);
        // CB 4C 0079
        gbc.setState(0x55a, 0x2406, 0x6410, 0xde7a, 0xa256, 0x5595, 0x1, 0x1);
        gbc.writeMem(0x55a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2406);
        EXPECT(gbc.pc(), 0x55c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 007A
        gbc.setState(0xb587, 0x329, 0x5c30, 0x5ed9, 0x7a5b, 0xf9df, 0x1, 0x1);
        gbc.writeMem(0xb587, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x329);
        EXPECT(gbc.pc(), 0xb589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb587), 0xcb);
        EXPECT(gbc.readMem(0xb588), 0x4c);
        // CB 4C 007D
        gbc.setState(0x29d8, 0x7070, 0x4570, 0xd255, 0xb4cb, 0xad0c, 0x0, 0x1);
        gbc.writeMem(0x29d8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7070);
        EXPECT(gbc.pc(), 0x29da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 007E
        gbc.setState(0x6e5d, 0x720a, 0xa170, 0x9552, 0x92bb, 0x3481, 0x1, 0x1);
        gbc.writeMem(0x6e5d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x720a);
        EXPECT(gbc.pc(), 0x6e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 007F
        gbc.setState(0x7de4, 0xeca2, 0xa800, 0x467a, 0x3a41, 0x58fd, 0x0, 0x0);
        gbc.writeMem(0x7de4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xeca2);
        EXPECT(gbc.pc(), 0x7de6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0080
        gbc.setState(0x6ece, 0x37d2, 0x5200, 0x8bc9, 0xadb8, 0xe2c7, 0x0, 0x1);
        gbc.writeMem(0x6ece, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x37d2);
        EXPECT(gbc.pc(), 0x6ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0081
        gbc.setState(0x90f5, 0x8756, 0x14d0, 0xa25, 0xa2f8, 0x6be8, 0x1, 0x1);
        gbc.writeMem(0x90f5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8756);
        EXPECT(gbc.pc(), 0x90f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f5), 0xcb);
        EXPECT(gbc.readMem(0x90f6), 0x4c);
        // CB 4C 0082
        gbc.setState(0xe0a9, 0x9f5f, 0x6f70, 0xba4c, 0x9f6f, 0x5672, 0x1, 0x1);
        gbc.writeMem(0xe0a9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9f5f);
        EXPECT(gbc.pc(), 0xe0ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0a9), 0xcb);
        EXPECT(gbc.readMem(0xe0aa), 0x4c);
        // CB 4C 0083
        gbc.setState(0x32fd, 0x97d, 0x5440, 0x739c, 0x3e64, 0xf3c0, 0x0, 0x1);
        gbc.writeMem(0x32fd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x97d);
        EXPECT(gbc.pc(), 0x32ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0084
        gbc.setState(0x9ce9, 0x19ee, 0xd820, 0xc994, 0x255d, 0x1156, 0x0, 0x0);
        gbc.writeMem(0x9ce9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x19ee);
        EXPECT(gbc.pc(), 0x9ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ce9), 0xcb);
        EXPECT(gbc.readMem(0x9cea), 0x4c);
        // CB 4C 0085
        gbc.setState(0x5c25, 0x278e, 0xd660, 0xcab5, 0xff85, 0x8aac, 0x0, 0x0);
        gbc.writeMem(0x5c25, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x278e);
        EXPECT(gbc.pc(), 0x5c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0086
        gbc.setState(0xa78a, 0x62a1, 0xe830, 0xb163, 0xfce, 0xe7b6, 0x0, 0x0);
        gbc.writeMem(0xa78a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x62a1);
        EXPECT(gbc.pc(), 0xa78c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78a), 0xcb);
        EXPECT(gbc.readMem(0xa78b), 0x4c);
        // CB 4C 0087
        gbc.setState(0x81e5, 0x5183, 0x85c0, 0x32d1, 0xe627, 0xaf22, 0x0, 0x1);
        gbc.writeMem(0x81e5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5183);
        EXPECT(gbc.pc(), 0x81e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e5), 0xcb);
        EXPECT(gbc.readMem(0x81e6), 0x4c);
        // CB 4C 0088
        gbc.setState(0x92e9, 0xc3f6, 0x4030, 0x545a, 0x2289, 0xede, 0x0, 0x0);
        gbc.writeMem(0x92e9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc3f6);
        EXPECT(gbc.pc(), 0x92eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e9), 0xcb);
        EXPECT(gbc.readMem(0x92ea), 0x4c);
        // CB 4C 0089
        gbc.setState(0x2fa5, 0x8c55, 0x5810, 0xc8d, 0xf181, 0x20d6, 0x1, 0x1);
        gbc.writeMem(0x2fa5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8c55);
        EXPECT(gbc.pc(), 0x2fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 008A
        gbc.setState(0x9b01, 0xdf1d, 0xf080, 0x7555, 0x722d, 0xf783, 0x0, 0x0);
        gbc.writeMem(0x9b01, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdf1d);
        EXPECT(gbc.pc(), 0x9b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b01), 0xcb);
        EXPECT(gbc.readMem(0x9b02), 0x4c);
        // CB 4C 008B
        gbc.setState(0x16b5, 0x84cf, 0xdae0, 0x9fb9, 0x5700, 0xa646, 0x0, 0x0);
        gbc.writeMem(0x16b5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x84cf);
        EXPECT(gbc.pc(), 0x16b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 008C
        gbc.setState(0xb443, 0xe7c, 0x2a0, 0x7b68, 0xb9ac, 0x9a86, 0x0, 0x0);
        gbc.writeMem(0xb443, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe7c);
        EXPECT(gbc.pc(), 0xb445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb443), 0xcb);
        EXPECT(gbc.readMem(0xb444), 0x4c);
        // CB 4C 008D
        gbc.setState(0x783c, 0x533e, 0x240, 0xc49, 0x7983, 0xbe67, 0x0, 0x0);
        gbc.writeMem(0x783c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x533e);
        EXPECT(gbc.pc(), 0x783e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 008E
        gbc.setState(0xaeb8, 0x20e8, 0xf2f0, 0x9197, 0x677e, 0x2c0b, 0x1, 0x0);
        gbc.writeMem(0xaeb8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x20e8);
        EXPECT(gbc.pc(), 0xaeba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb8), 0xcb);
        EXPECT(gbc.readMem(0xaeb9), 0x4c);
        // CB 4C 008F
        gbc.setState(0xc5f9, 0xda55, 0xe770, 0xb3b4, 0x2d45, 0xdea6, 0x0, 0x1);
        gbc.writeMem(0xc5f9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xda55);
        EXPECT(gbc.pc(), 0xc5fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f9), 0xcb);
        EXPECT(gbc.readMem(0xc5fa), 0x4c);
        // CB 4C 0090
        gbc.setState(0x1a8a, 0x31c3, 0x9620, 0xb51d, 0x2c43, 0x432b, 0x0, 0x0);
        gbc.writeMem(0x1a8a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x31c3);
        EXPECT(gbc.pc(), 0x1a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0091
        gbc.setState(0xd3c1, 0xc88e, 0x8d10, 0xdddd, 0xb562, 0xce8, 0x0, 0x1);
        gbc.writeMem(0xd3c1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc88e);
        EXPECT(gbc.pc(), 0xd3c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c1), 0xcb);
        EXPECT(gbc.readMem(0xd3c2), 0x4c);
        // CB 4C 0092
        gbc.setState(0xcba2, 0xa77f, 0xcca0, 0xdbc2, 0x4838, 0x9376, 0x1, 0x0);
        gbc.writeMem(0xcba2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa77f);
        EXPECT(gbc.pc(), 0xcba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcba2), 0xcb);
        EXPECT(gbc.readMem(0xcba3), 0x4c);
        // CB 4C 0093
        gbc.setState(0x7085, 0x9945, 0x6580, 0x97bf, 0x81c9, 0xee2b, 0x0, 0x1);
        gbc.writeMem(0x7085, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9945);
        EXPECT(gbc.pc(), 0x7087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0094
        gbc.setState(0x7a1b, 0x7777, 0x680, 0xc02c, 0x8413, 0xcf30, 0x0, 0x0);
        gbc.writeMem(0x7a1b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7777);
        EXPECT(gbc.pc(), 0x7a1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0095
        gbc.setState(0x9802, 0xf461, 0xe000, 0x3bda, 0xe2ec, 0x8e78, 0x0, 0x1);
        gbc.writeMem(0x9802, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf461);
        EXPECT(gbc.pc(), 0x9804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9802), 0xcb);
        EXPECT(gbc.readMem(0x9803), 0x4c);
        // CB 4C 0096
        gbc.setState(0xeec9, 0xf404, 0x52a0, 0x2749, 0x32b2, 0x6cc8, 0x1, 0x0);
        gbc.writeMem(0xeec9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf404);
        EXPECT(gbc.pc(), 0xeecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeec9), 0xcb);
        EXPECT(gbc.readMem(0xeeca), 0x4c);
        // CB 4C 0098
        gbc.setState(0xbe00, 0x1917, 0x630, 0x9fb6, 0x61c4, 0x94fb, 0x0, 0x0);
        gbc.writeMem(0xbe00, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1917);
        EXPECT(gbc.pc(), 0xbe02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe00), 0xcb);
        EXPECT(gbc.readMem(0xbe01), 0x4c);
        // CB 4C 0099
        gbc.setState(0x50e7, 0x7ee7, 0xf500, 0xf064, 0x6594, 0xe537, 0x0, 0x1);
        gbc.writeMem(0x50e7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7ee7);
        EXPECT(gbc.pc(), 0x50e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 009A
        gbc.setState(0x8a19, 0x601e, 0xdc50, 0x6453, 0xa261, 0xde20, 0x1, 0x1);
        gbc.writeMem(0x8a19, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x601e);
        EXPECT(gbc.pc(), 0x8a1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a19), 0xcb);
        EXPECT(gbc.readMem(0x8a1a), 0x4c);
        // CB 4C 009B
        gbc.setState(0x8941, 0xc9a0, 0x36e0, 0xea64, 0x6e28, 0xec9f, 0x1, 0x0);
        gbc.writeMem(0x8941, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc9a0);
        EXPECT(gbc.pc(), 0x8943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8941), 0xcb);
        EXPECT(gbc.readMem(0x8942), 0x4c);
        // CB 4C 009D
        gbc.setState(0xa6c4, 0x4bf6, 0x4320, 0xd49d, 0x6ae, 0xac35, 0x1, 0x0);
        gbc.writeMem(0xa6c4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4bf6);
        EXPECT(gbc.pc(), 0xa6c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c4), 0xcb);
        EXPECT(gbc.readMem(0xa6c5), 0x4c);
        // CB 4C 009E
        gbc.setState(0xb2ca, 0xa84f, 0xee90, 0x602b, 0xf86f, 0x58ba, 0x1, 0x1);
        gbc.writeMem(0xb2ca, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa84f);
        EXPECT(gbc.pc(), 0xb2cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ca), 0xcb);
        EXPECT(gbc.readMem(0xb2cb), 0x4c);
        // CB 4C 009F
        gbc.setState(0x4518, 0xc33a, 0x6190, 0x3ea9, 0x3cde, 0x7560, 0x0, 0x1);
        gbc.writeMem(0x4518, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc33a);
        EXPECT(gbc.pc(), 0x451a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00A0
        gbc.setState(0xd68f, 0xb022, 0xa290, 0x91b4, 0xf864, 0x9653, 0x1, 0x0);
        gbc.writeMem(0xd68f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb022);
        EXPECT(gbc.pc(), 0xd691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd68f), 0xcb);
        EXPECT(gbc.readMem(0xd690), 0x4c);
        // CB 4C 00A1
        gbc.setState(0x9e79, 0xfc4a, 0x4820, 0x33d8, 0x83d5, 0x5de3, 0x0, 0x1);
        gbc.writeMem(0x9e79, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfc4a);
        EXPECT(gbc.pc(), 0x9e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e79), 0xcb);
        EXPECT(gbc.readMem(0x9e7a), 0x4c);
        // CB 4C 00A2
        gbc.setState(0xc56e, 0x8a62, 0xccf0, 0x5db7, 0x9c58, 0x729c, 0x1, 0x1);
        gbc.writeMem(0xc56e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8a62);
        EXPECT(gbc.pc(), 0xc570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc56e), 0xcb);
        EXPECT(gbc.readMem(0xc56f), 0x4c);
        // CB 4C 00A3
        gbc.setState(0x75e7, 0x962f, 0xc0f0, 0x8f18, 0xa832, 0xf405, 0x1, 0x1);
        gbc.writeMem(0x75e7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x962f);
        EXPECT(gbc.pc(), 0x75e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00A4
        gbc.setState(0xa3d3, 0xbef4, 0x2720, 0xffa5, 0xb933, 0x3788, 0x0, 0x0);
        gbc.writeMem(0xa3d3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbef4);
        EXPECT(gbc.pc(), 0xa3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d3), 0xcb);
        EXPECT(gbc.readMem(0xa3d4), 0x4c);
        // CB 4C 00A6
        gbc.setState(0xcbc3, 0x6bdb, 0xd220, 0x1043, 0xfe53, 0x6b95, 0x0, 0x0);
        gbc.writeMem(0xcbc3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6bdb);
        EXPECT(gbc.pc(), 0xcbc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc3), 0xcb);
        EXPECT(gbc.readMem(0xcbc4), 0x4c);
        // CB 4C 00A7
        gbc.setState(0x3bc8, 0x140c, 0x73a0, 0xc2a, 0xb47e, 0x6896, 0x0, 0x0);
        gbc.writeMem(0x3bc8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x140c);
        EXPECT(gbc.pc(), 0x3bca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00A8
        gbc.setState(0xe3c, 0xb516, 0x7db0, 0xf9fa, 0xb208, 0x27ea, 0x0, 0x1);
        gbc.writeMem(0xe3c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb516);
        EXPECT(gbc.pc(), 0xe3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00A9
        gbc.setState(0xd236, 0x86c6, 0x6980, 0x8284, 0x4547, 0x2397, 0x0, 0x0);
        gbc.writeMem(0xd236, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x86c6);
        EXPECT(gbc.pc(), 0xd238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd236), 0xcb);
        EXPECT(gbc.readMem(0xd237), 0x4c);
        // CB 4C 00AA
        gbc.setState(0x654c, 0x1aac, 0xf770, 0x2c19, 0x8d45, 0x1f85, 0x0, 0x1);
        gbc.writeMem(0x654c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1aac);
        EXPECT(gbc.pc(), 0x654e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00AB
        gbc.setState(0xe9b9, 0x5330, 0x8a80, 0xbcb9, 0xad7c, 0x656c, 0x1, 0x1);
        gbc.writeMem(0xe9b9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5330);
        EXPECT(gbc.pc(), 0xe9bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b9), 0xcb);
        EXPECT(gbc.readMem(0xe9ba), 0x4c);
        // CB 4C 00AC
        gbc.setState(0xb3a6, 0x744b, 0xf3b0, 0x8696, 0x9f91, 0xf248, 0x0, 0x1);
        gbc.writeMem(0xb3a6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x744b);
        EXPECT(gbc.pc(), 0xb3a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a6), 0xcb);
        EXPECT(gbc.readMem(0xb3a7), 0x4c);
        // CB 4C 00AD
        gbc.setState(0x378c, 0x1fd6, 0xc430, 0x4b56, 0xaa1d, 0x7363, 0x0, 0x0);
        gbc.writeMem(0x378c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1fd6);
        EXPECT(gbc.pc(), 0x378e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00AE
        gbc.setState(0xe69d, 0x535, 0xc400, 0xc900, 0x2b59, 0x807a, 0x0, 0x1);
        gbc.writeMem(0xe69d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x535);
        EXPECT(gbc.pc(), 0xe69f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe69d), 0xcb);
        EXPECT(gbc.readMem(0xe69e), 0x4c);
        // CB 4C 00AF
        gbc.setState(0xafc1, 0x3793, 0xd200, 0x3267, 0xca0f, 0xc6e0, 0x1, 0x1);
        gbc.writeMem(0xafc1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3793);
        EXPECT(gbc.pc(), 0xafc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc1), 0xcb);
        EXPECT(gbc.readMem(0xafc2), 0x4c);
        // CB 4C 00B0
        gbc.setState(0x85dd, 0xf445, 0x96c0, 0xa39c, 0xed32, 0xd225, 0x0, 0x0);
        gbc.writeMem(0x85dd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf445);
        EXPECT(gbc.pc(), 0x85df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85dd), 0xcb);
        EXPECT(gbc.readMem(0x85de), 0x4c);
        // CB 4C 00B1
        gbc.setState(0x9bca, 0x7b39, 0x4a0, 0x13f8, 0xc6e9, 0x7fb1, 0x1, 0x1);
        gbc.writeMem(0x9bca, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7b39);
        EXPECT(gbc.pc(), 0x9bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bca), 0xcb);
        EXPECT(gbc.readMem(0x9bcb), 0x4c);
        // CB 4C 00B2
        gbc.setState(0xe127, 0xb784, 0xb050, 0x3b8c, 0x3712, 0x93a8, 0x1, 0x0);
        gbc.writeMem(0xe127, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb784);
        EXPECT(gbc.pc(), 0xe129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe127), 0xcb);
        EXPECT(gbc.readMem(0xe128), 0x4c);
        // CB 4C 00B3
        gbc.setState(0x6fe2, 0xb556, 0x1080, 0x16c0, 0xb942, 0xc5e9, 0x1, 0x1);
        gbc.writeMem(0x6fe2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb556);
        EXPECT(gbc.pc(), 0x6fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00B4
        gbc.setState(0xc29f, 0xd858, 0x5060, 0xa8a6, 0xd6, 0x2461, 0x1, 0x1);
        gbc.writeMem(0xc29f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd858);
        EXPECT(gbc.pc(), 0xc2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc29f), 0xcb);
        EXPECT(gbc.readMem(0xc2a0), 0x4c);
        // CB 4C 00B5
        gbc.setState(0x27a6, 0x9b09, 0xdcf0, 0xaec9, 0xdc53, 0x10d9, 0x0, 0x1);
        gbc.writeMem(0x27a6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9b09);
        EXPECT(gbc.pc(), 0x27a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00B6
        gbc.setState(0x2f0a, 0x71ce, 0x7f60, 0xfb50, 0x5758, 0x9a43, 0x1, 0x1);
        gbc.writeMem(0x2f0a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x71ce);
        EXPECT(gbc.pc(), 0x2f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00B7
        gbc.setState(0x836c, 0x9b55, 0x5fe0, 0xba2a, 0xfe05, 0xd986, 0x1, 0x1);
        gbc.writeMem(0x836c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9b55);
        EXPECT(gbc.pc(), 0x836e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x836c), 0xcb);
        EXPECT(gbc.readMem(0x836d), 0x4c);
        // CB 4C 00B8
        gbc.setState(0x4863, 0xb09, 0xa4d0, 0x8458, 0xb47, 0xbc78, 0x1, 0x0);
        gbc.writeMem(0x4863, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb09);
        EXPECT(gbc.pc(), 0x4865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00B9
        gbc.setState(0x44b7, 0xdcc2, 0x1720, 0x6f61, 0x9dcb, 0xb5b2, 0x1, 0x0);
        gbc.writeMem(0x44b7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdcc2);
        EXPECT(gbc.pc(), 0x44b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00BA
        gbc.setState(0xada9, 0x2ba6, 0x14a0, 0x6e1c, 0x2171, 0xf248, 0x0, 0x1);
        gbc.writeMem(0xada9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2ba6);
        EXPECT(gbc.pc(), 0xadab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada9), 0xcb);
        EXPECT(gbc.readMem(0xadaa), 0x4c);
        // CB 4C 00BB
        gbc.setState(0x8909, 0x4ea4, 0x6e50, 0x8be4, 0x54a4, 0xd70e, 0x0, 0x0);
        gbc.writeMem(0x8909, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4ea4);
        EXPECT(gbc.pc(), 0x890b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8909), 0xcb);
        EXPECT(gbc.readMem(0x890a), 0x4c);
        // CB 4C 00BC
        gbc.setState(0xb23e, 0xd322, 0xa890, 0x7860, 0x56f2, 0xc738, 0x0, 0x0);
        gbc.writeMem(0xb23e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd322);
        EXPECT(gbc.pc(), 0xb240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb23e), 0xcb);
        EXPECT(gbc.readMem(0xb23f), 0x4c);
        // CB 4C 00BD
        gbc.setState(0x235d, 0x498c, 0xaef0, 0x6120, 0x27b1, 0x2df4, 0x0, 0x0);
        gbc.writeMem(0x235d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x498c);
        EXPECT(gbc.pc(), 0x235f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00BE
        gbc.setState(0xf93, 0xca64, 0xfc0, 0xfb63, 0x62f, 0x7759, 0x0, 0x1);
        gbc.writeMem(0xf93, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xca64);
        EXPECT(gbc.pc(), 0xf95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00BF
        gbc.setState(0x890a, 0x8cfd, 0xd720, 0x85ef, 0x22e5, 0x6ebc, 0x1, 0x0);
        gbc.writeMem(0x890a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8cfd);
        EXPECT(gbc.pc(), 0x890c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890a), 0xcb);
        EXPECT(gbc.readMem(0x890b), 0x4c);
        // CB 4C 00C0
        gbc.setState(0xcfe9, 0xd9d5, 0x6b50, 0x7aa0, 0x425c, 0xa0b1, 0x0, 0x1);
        gbc.writeMem(0xcfe9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd9d5);
        EXPECT(gbc.pc(), 0xcfeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe9), 0xcb);
        EXPECT(gbc.readMem(0xcfea), 0x4c);
        // CB 4C 00C1
        gbc.setState(0xc837, 0x26c7, 0xb080, 0x8032, 0xc9b9, 0x2843, 0x0, 0x1);
        gbc.writeMem(0xc837, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x26c7);
        EXPECT(gbc.pc(), 0xc839);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc837), 0xcb);
        EXPECT(gbc.readMem(0xc838), 0x4c);
        // CB 4C 00C2
        gbc.setState(0x9c3b, 0x172, 0x4e80, 0xc024, 0x9ad7, 0x9f49, 0x0, 0x1);
        gbc.writeMem(0x9c3b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x172);
        EXPECT(gbc.pc(), 0x9c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c3b), 0xcb);
        EXPECT(gbc.readMem(0x9c3c), 0x4c);
        // CB 4C 00C3
        gbc.setState(0x249e, 0xbc1b, 0xb3c0, 0x4d79, 0x67ca, 0x1e8f, 0x0, 0x0);
        gbc.writeMem(0x249e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xbc1b);
        EXPECT(gbc.pc(), 0x24a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00C4
        gbc.setState(0x6c92, 0xcadc, 0x38e0, 0x50d1, 0x4270, 0x40d8, 0x1, 0x1);
        gbc.writeMem(0x6c92, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcadc);
        EXPECT(gbc.pc(), 0x6c94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00C5
        gbc.setState(0x39f9, 0xce8a, 0x3000, 0x59e1, 0xc4aa, 0x8ece, 0x1, 0x1);
        gbc.writeMem(0x39f9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xce8a);
        EXPECT(gbc.pc(), 0x39fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00C6
        gbc.setState(0x659a, 0x3040, 0xb3f0, 0x12e8, 0x902b, 0x476, 0x1, 0x1);
        gbc.writeMem(0x659a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3040);
        EXPECT(gbc.pc(), 0x659c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00C7
        gbc.setState(0x5e70, 0x879f, 0xe70, 0x68fd, 0x9a8d, 0x2eb6, 0x0, 0x0);
        gbc.writeMem(0x5e70, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x879f);
        EXPECT(gbc.pc(), 0x5e72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00C8
        gbc.setState(0x3ec4, 0x7274, 0x6ac0, 0x3c1d, 0x418a, 0x963f, 0x0, 0x1);
        gbc.writeMem(0x3ec4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7274);
        EXPECT(gbc.pc(), 0x3ec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00C9
        gbc.setState(0xdc54, 0x2099, 0x7770, 0x6636, 0x9788, 0xbbf4, 0x1, 0x1);
        gbc.writeMem(0xdc54, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2099);
        EXPECT(gbc.pc(), 0xdc56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc54), 0xcb);
        EXPECT(gbc.readMem(0xdc55), 0x4c);
        // CB 4C 00CA
        gbc.setState(0x1209, 0xe3cb, 0x4180, 0x8cd0, 0x7fc2, 0x312c, 0x0, 0x1);
        gbc.writeMem(0x1209, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe3cb);
        EXPECT(gbc.pc(), 0x120b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00CB
        gbc.setState(0xcd94, 0x7840, 0x5b0, 0xaf9b, 0x660c, 0x711e, 0x1, 0x1);
        gbc.writeMem(0xcd94, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7840);
        EXPECT(gbc.pc(), 0xcd96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd94), 0xcb);
        EXPECT(gbc.readMem(0xcd95), 0x4c);
        // CB 4C 00CC
        gbc.setState(0x482, 0x2b9c, 0x2550, 0x2d07, 0x5234, 0xc502, 0x0, 0x1);
        gbc.writeMem(0x482, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2b9c);
        EXPECT(gbc.pc(), 0x484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00CD
        gbc.setState(0xba86, 0x33d1, 0x9880, 0xb97c, 0x9d42, 0xf1ba, 0x1, 0x1);
        gbc.writeMem(0xba86, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x33d1);
        EXPECT(gbc.pc(), 0xba88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba86), 0xcb);
        EXPECT(gbc.readMem(0xba87), 0x4c);
        // CB 4C 00CE
        gbc.setState(0xaecb, 0xe5f5, 0x1ec0, 0x2423, 0xacc3, 0x8517, 0x1, 0x1);
        gbc.writeMem(0xaecb, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe5f5);
        EXPECT(gbc.pc(), 0xaecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaecb), 0xcb);
        EXPECT(gbc.readMem(0xaecc), 0x4c);
        // CB 4C 00CF
        gbc.setState(0x531b, 0x7cb8, 0xb220, 0x7072, 0x58de, 0x1a1b, 0x1, 0x1);
        gbc.writeMem(0x531b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7cb8);
        EXPECT(gbc.pc(), 0x531d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00D0
        gbc.setState(0x378f, 0x6bb0, 0x5390, 0xa0ba, 0xd056, 0xfb96, 0x1, 0x1);
        gbc.writeMem(0x378f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6bb0);
        EXPECT(gbc.pc(), 0x3791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00D1
        gbc.setState(0x9445, 0xb334, 0x1550, 0x7a17, 0x8e51, 0x3f8b, 0x0, 0x0);
        gbc.writeMem(0x9445, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb334);
        EXPECT(gbc.pc(), 0x9447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9445), 0xcb);
        EXPECT(gbc.readMem(0x9446), 0x4c);
        // CB 4C 00D2
        gbc.setState(0x50e4, 0x70b, 0x36d0, 0x77c7, 0x3950, 0x4cf0, 0x0, 0x0);
        gbc.writeMem(0x50e4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x70b);
        EXPECT(gbc.pc(), 0x50e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00D3
        gbc.setState(0xcb72, 0x6d34, 0x6a0, 0x3a31, 0xf570, 0x8b34, 0x0, 0x0);
        gbc.writeMem(0xcb72, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6d34);
        EXPECT(gbc.pc(), 0xcb74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb72), 0xcb);
        EXPECT(gbc.readMem(0xcb73), 0x4c);
        // CB 4C 00D4
        gbc.setState(0x82e5, 0x919a, 0x10c0, 0x6ca5, 0x8b5e, 0x15e6, 0x1, 0x1);
        gbc.writeMem(0x82e5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x919a);
        EXPECT(gbc.pc(), 0x82e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e5), 0xcb);
        EXPECT(gbc.readMem(0x82e6), 0x4c);
        // CB 4C 00D5
        gbc.setState(0x6ce3, 0xcbff, 0x5090, 0x500b, 0x48a6, 0xaa2a, 0x1, 0x0);
        gbc.writeMem(0x6ce3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xcbff);
        EXPECT(gbc.pc(), 0x6ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00D6
        gbc.setState(0xee18, 0x4d8, 0xc2c0, 0x9696, 0xc23a, 0x79ac, 0x0, 0x0);
        gbc.writeMem(0xee18, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4d8);
        EXPECT(gbc.pc(), 0xee1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee18), 0xcb);
        EXPECT(gbc.readMem(0xee19), 0x4c);
        // CB 4C 00D7
        gbc.setState(0x5ae4, 0x752, 0xff00, 0x9b3e, 0x2099, 0xedf9, 0x1, 0x0);
        gbc.writeMem(0x5ae4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x752);
        EXPECT(gbc.pc(), 0x5ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00D8
        gbc.setState(0xa011, 0x8ca1, 0x4d50, 0x3a21, 0xeb54, 0xaa1, 0x0, 0x0);
        gbc.writeMem(0xa011, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8ca1);
        EXPECT(gbc.pc(), 0xa013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa011), 0xcb);
        EXPECT(gbc.readMem(0xa012), 0x4c);
        // CB 4C 00D9
        gbc.setState(0xb2ee, 0xada8, 0xe7a0, 0xec74, 0x291c, 0x8775, 0x0, 0x1);
        gbc.writeMem(0xb2ee, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xada8);
        EXPECT(gbc.pc(), 0xb2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ee), 0xcb);
        EXPECT(gbc.readMem(0xb2ef), 0x4c);
        // CB 4C 00DA
        gbc.setState(0x57fb, 0x7269, 0x4f00, 0xbc06, 0x951c, 0xc9e9, 0x1, 0x1);
        gbc.writeMem(0x57fb, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7269);
        EXPECT(gbc.pc(), 0x57fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00DB
        gbc.setState(0x644a, 0xc2a2, 0x5d0, 0x599, 0x5a8c, 0x945a, 0x0, 0x1);
        gbc.writeMem(0x644a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc2a2);
        EXPECT(gbc.pc(), 0x644c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00DC
        gbc.setState(0xccd4, 0x437a, 0x3e00, 0x78a3, 0xcbc6, 0xfee4, 0x0, 0x0);
        gbc.writeMem(0xccd4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x437a);
        EXPECT(gbc.pc(), 0xccd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd4), 0xcb);
        EXPECT(gbc.readMem(0xccd5), 0x4c);
        // CB 4C 00DD
        gbc.setState(0x833, 0x3024, 0x49f0, 0xb67e, 0xecd0, 0x9f87, 0x1, 0x1);
        gbc.writeMem(0x833, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3024);
        EXPECT(gbc.pc(), 0x835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00DE
        gbc.setState(0x8be, 0x7b9f, 0xdf30, 0x62b0, 0x4e84, 0x98dc, 0x1, 0x0);
        gbc.writeMem(0x8be, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7b9f);
        EXPECT(gbc.pc(), 0x8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00DF
        gbc.setState(0xcb96, 0x5df6, 0x6b20, 0xd3ed, 0xa7e, 0x1731, 0x1, 0x1);
        gbc.writeMem(0xcb96, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5df6);
        EXPECT(gbc.pc(), 0xcb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb96), 0xcb);
        EXPECT(gbc.readMem(0xcb97), 0x4c);
        // CB 4C 00E0
        gbc.setState(0x7e66, 0xd6fa, 0x38e0, 0x7717, 0x1d88, 0x59f4, 0x1, 0x1);
        gbc.writeMem(0x7e66, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd6fa);
        EXPECT(gbc.pc(), 0x7e68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00E1
        gbc.setState(0x9af2, 0xc1c5, 0xb420, 0xa513, 0xf9bd, 0x15e8, 0x0, 0x1);
        gbc.writeMem(0x9af2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc1c5);
        EXPECT(gbc.pc(), 0x9af4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af2), 0xcb);
        EXPECT(gbc.readMem(0x9af3), 0x4c);
        // CB 4C 00E2
        gbc.setState(0x2a04, 0xceee, 0xa340, 0x6fdb, 0x2bcd, 0xc31f, 0x0, 0x0);
        gbc.writeMem(0x2a04, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xceee);
        EXPECT(gbc.pc(), 0x2a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00E3
        gbc.setState(0x2bbc, 0xf34d, 0xd190, 0x4c23, 0x49d, 0x4929, 0x0, 0x1);
        gbc.writeMem(0x2bbc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf34d);
        EXPECT(gbc.pc(), 0x2bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00E4
        gbc.setState(0x60ef, 0x2126, 0xd7d0, 0xd8ab, 0xb079, 0xee2f, 0x0, 0x1);
        gbc.writeMem(0x60ef, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2126);
        EXPECT(gbc.pc(), 0x60f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00E5
        gbc.setState(0xa18e, 0x1427, 0x5cd0, 0xc8a2, 0x9503, 0x8e21, 0x1, 0x1);
        gbc.writeMem(0xa18e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1427);
        EXPECT(gbc.pc(), 0xa190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa18e), 0xcb);
        EXPECT(gbc.readMem(0xa18f), 0x4c);
        // CB 4C 00E6
        gbc.setState(0x8d90, 0xa40f, 0x3e70, 0x854f, 0x6343, 0x57cb, 0x1, 0x0);
        gbc.writeMem(0x8d90, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa40f);
        EXPECT(gbc.pc(), 0x8d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d90), 0xcb);
        EXPECT(gbc.readMem(0x8d91), 0x4c);
        // CB 4C 00E7
        gbc.setState(0x9aba, 0xd2b3, 0x9530, 0x31f4, 0x6a76, 0xf56b, 0x0, 0x1);
        gbc.writeMem(0x9aba, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd2b3);
        EXPECT(gbc.pc(), 0x9abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aba), 0xcb);
        EXPECT(gbc.readMem(0x9abb), 0x4c);
        // CB 4C 00E8
        gbc.setState(0x3162, 0x3886, 0xabe0, 0xca24, 0x2d98, 0xecc5, 0x1, 0x1);
        gbc.writeMem(0x3162, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3886);
        EXPECT(gbc.pc(), 0x3164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00E9
        gbc.setState(0x210, 0xa038, 0xba20, 0xdac1, 0x4c82, 0x5e16, 0x1, 0x0);
        gbc.writeMem(0x210, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa038);
        EXPECT(gbc.pc(), 0x212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00EA
        gbc.setState(0x6618, 0x1772, 0x2710, 0x3c02, 0x5193, 0x5c4c, 0x1, 0x1);
        gbc.writeMem(0x6618, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1772);
        EXPECT(gbc.pc(), 0x661a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00EB
        gbc.setState(0x7030, 0x531e, 0x3200, 0x1baf, 0x145a, 0xd17e, 0x0, 0x1);
        gbc.writeMem(0x7030, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x531e);
        EXPECT(gbc.pc(), 0x7032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00EC
        gbc.setState(0x90fa, 0xf5ee, 0x9140, 0xa177, 0x85e7, 0x41f5, 0x1, 0x1);
        gbc.writeMem(0x90fa, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf5ee);
        EXPECT(gbc.pc(), 0x90fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90fa), 0xcb);
        EXPECT(gbc.readMem(0x90fb), 0x4c);
        // CB 4C 00ED
        gbc.setState(0x7a3a, 0xb5a6, 0xdf40, 0x1212, 0xc60c, 0xe816, 0x1, 0x0);
        gbc.writeMem(0x7a3a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb5a6);
        EXPECT(gbc.pc(), 0x7a3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00EE
        gbc.setState(0x4817, 0xf225, 0x1aa0, 0x5138, 0x895d, 0xe234, 0x1, 0x0);
        gbc.writeMem(0x4817, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf225);
        EXPECT(gbc.pc(), 0x4819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00EF
        gbc.setState(0x307, 0x81e3, 0x6270, 0x8c01, 0x8651, 0x7fd8, 0x0, 0x0);
        gbc.writeMem(0x307, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x81e3);
        EXPECT(gbc.pc(), 0x309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00F0
        gbc.setState(0xae52, 0xcf80, 0xf3d0, 0xf445, 0xcdcb, 0x5996, 0x0, 0x1);
        gbc.writeMem(0xae52, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xcf80);
        EXPECT(gbc.pc(), 0xae54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae52), 0xcb);
        EXPECT(gbc.readMem(0xae53), 0x4c);
        // CB 4C 00F1
        gbc.setState(0x3f5, 0x1105, 0x2bb0, 0x7b7c, 0x6fce, 0xdfd7, 0x1, 0x1);
        gbc.writeMem(0x3f5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1105);
        EXPECT(gbc.pc(), 0x3f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00F2
        gbc.setState(0xef95, 0xa0a8, 0x4390, 0x2e5b, 0x7ac1, 0xc036, 0x1, 0x0);
        gbc.writeMem(0xef95, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa0a8);
        EXPECT(gbc.pc(), 0xef97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef95), 0xcb);
        EXPECT(gbc.readMem(0xef96), 0x4c);
        // CB 4C 00F3
        gbc.setState(0x2ab, 0x165, 0xe850, 0x1eeb, 0xaaf5, 0x60e8, 0x0, 0x1);
        gbc.writeMem(0x2ab, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x165);
        EXPECT(gbc.pc(), 0x2ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00F4
        gbc.setState(0x86c2, 0xebc, 0x5690, 0x8080, 0x125f, 0x54e1, 0x1, 0x0);
        gbc.writeMem(0x86c2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xebc);
        EXPECT(gbc.pc(), 0x86c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c2), 0xcb);
        EXPECT(gbc.readMem(0x86c3), 0x4c);
        // CB 4C 00F5
        gbc.setState(0x3e49, 0x757d, 0x510, 0x982a, 0x9942, 0xd990, 0x0, 0x0);
        gbc.writeMem(0x3e49, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x757d);
        EXPECT(gbc.pc(), 0x3e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00F6
        gbc.setState(0xaa9d, 0x7ad0, 0x6b30, 0x6069, 0x7bff, 0x5e90, 0x1, 0x0);
        gbc.writeMem(0xaa9d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7ad0);
        EXPECT(gbc.pc(), 0xaa9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9d), 0xcb);
        EXPECT(gbc.readMem(0xaa9e), 0x4c);
        // CB 4C 00F7
        gbc.setState(0x10f4, 0xc956, 0x9e70, 0xde8, 0x69d5, 0x522a, 0x0, 0x1);
        gbc.writeMem(0x10f4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc956);
        EXPECT(gbc.pc(), 0x10f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00F8
        gbc.setState(0xce90, 0xb88, 0x88e0, 0xba04, 0x5eb, 0xab06, 0x1, 0x1);
        gbc.writeMem(0xce90, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb88);
        EXPECT(gbc.pc(), 0xce92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce90), 0xcb);
        EXPECT(gbc.readMem(0xce91), 0x4c);
        // CB 4C 00F9
        gbc.setState(0xc2ab, 0x74b5, 0xf980, 0xc102, 0xb5ce, 0x3825, 0x1, 0x1);
        gbc.writeMem(0xc2ab, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x74b5);
        EXPECT(gbc.pc(), 0xc2ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ab), 0xcb);
        EXPECT(gbc.readMem(0xc2ac), 0x4c);
        // CB 4C 00FA
        gbc.setState(0x1d13, 0xd21e, 0xb5c0, 0x2621, 0x2dc2, 0xb51e, 0x1, 0x1);
        gbc.writeMem(0x1d13, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd21e);
        EXPECT(gbc.pc(), 0x1d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00FB
        gbc.setState(0xaf9e, 0xc959, 0xe520, 0xa4ee, 0x22c, 0x934f, 0x0, 0x1);
        gbc.writeMem(0xaf9e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc959);
        EXPECT(gbc.pc(), 0xafa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf9e), 0xcb);
        EXPECT(gbc.readMem(0xaf9f), 0x4c);
        // CB 4C 00FC
        gbc.setState(0x4a5b, 0xa891, 0x7e20, 0xe1cd, 0x5974, 0xad6b, 0x1, 0x1);
        gbc.writeMem(0x4a5b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa891);
        EXPECT(gbc.pc(), 0x4a5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 00FD
        gbc.setState(0x2887, 0x3057, 0x3e30, 0xbe1b, 0x4f25, 0x1b49, 0x1, 0x0);
        gbc.writeMem(0x2887, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3057);
        EXPECT(gbc.pc(), 0x2889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00FE
        gbc.setState(0x7036, 0xf31f, 0xc750, 0x69b5, 0x9f8b, 0xa57e, 0x0, 0x1);
        gbc.writeMem(0x7036, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf31f);
        EXPECT(gbc.pc(), 0x7038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 00FF
        gbc.setState(0xe61e, 0xe87c, 0xeac0, 0x20a, 0x8a0c, 0xc457, 0x0, 0x0);
        gbc.writeMem(0xe61e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe87c);
        EXPECT(gbc.pc(), 0xe620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe61e), 0xcb);
        EXPECT(gbc.readMem(0xe61f), 0x4c);
        // CB 4C 0100
        gbc.setState(0x7f0, 0x139b, 0xcde0, 0xdade, 0xb60e, 0xda2, 0x1, 0x0);
        gbc.writeMem(0x7f0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x139b);
        EXPECT(gbc.pc(), 0x7f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0101
        gbc.setState(0x185e, 0xd9b4, 0xf880, 0x1ee7, 0x383e, 0x634f, 0x0, 0x0);
        gbc.writeMem(0x185e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd9b4);
        EXPECT(gbc.pc(), 0x1860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0102
        gbc.setState(0xd30f, 0x9085, 0x7b60, 0xb885, 0x7a6a, 0x3ea0, 0x0, 0x1);
        gbc.writeMem(0xd30f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9085);
        EXPECT(gbc.pc(), 0xd311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd30f), 0xcb);
        EXPECT(gbc.readMem(0xd310), 0x4c);
        // CB 4C 0103
        gbc.setState(0xb3df, 0xfc32, 0x1fa0, 0x3bf, 0xcf79, 0xdbc0, 0x1, 0x1);
        gbc.writeMem(0xb3df, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfc32);
        EXPECT(gbc.pc(), 0xb3e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3df), 0xcb);
        EXPECT(gbc.readMem(0xb3e0), 0x4c);
        // CB 4C 0104
        gbc.setState(0xa03f, 0x1638, 0x30f0, 0xb4f9, 0xee7c, 0x3102, 0x1, 0x0);
        gbc.writeMem(0xa03f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1638);
        EXPECT(gbc.pc(), 0xa041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa03f), 0xcb);
        EXPECT(gbc.readMem(0xa040), 0x4c);
        // CB 4C 0106
        gbc.setState(0x6e3d, 0xcce8, 0x4c10, 0x791e, 0xb88a, 0xc276, 0x0, 0x1);
        gbc.writeMem(0x6e3d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcce8);
        EXPECT(gbc.pc(), 0x6e3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0107
        gbc.setState(0x6ed6, 0x599d, 0x71e0, 0xe4f, 0x8e5c, 0x3331, 0x1, 0x1);
        gbc.writeMem(0x6ed6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x599d);
        EXPECT(gbc.pc(), 0x6ed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0108
        gbc.setState(0x2359, 0xef6e, 0x3380, 0x7eae, 0xf7ee, 0xc93f, 0x0, 0x1);
        gbc.writeMem(0x2359, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xef6e);
        EXPECT(gbc.pc(), 0x235b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0109
        gbc.setState(0xc94f, 0xa902, 0x3260, 0x3be0, 0xd5d3, 0x5a19, 0x0, 0x1);
        gbc.writeMem(0xc94f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa902);
        EXPECT(gbc.pc(), 0xc951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc94f), 0xcb);
        EXPECT(gbc.readMem(0xc950), 0x4c);
        // CB 4C 010A
        gbc.setState(0x2b88, 0xd560, 0x230, 0x1d07, 0x2bd8, 0xfbe, 0x0, 0x1);
        gbc.writeMem(0x2b88, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd560);
        EXPECT(gbc.pc(), 0x2b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 010B
        gbc.setState(0x87e2, 0xc67, 0x2190, 0x4a98, 0x864a, 0xc8df, 0x1, 0x0);
        gbc.writeMem(0x87e2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc67);
        EXPECT(gbc.pc(), 0x87e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e2), 0xcb);
        EXPECT(gbc.readMem(0x87e3), 0x4c);
        // CB 4C 010C
        gbc.setState(0xd8c9, 0xa278, 0x6d30, 0x8c7f, 0x56a5, 0xbb3e, 0x0, 0x1);
        gbc.writeMem(0xd8c9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa278);
        EXPECT(gbc.pc(), 0xd8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8c9), 0xcb);
        EXPECT(gbc.readMem(0xd8ca), 0x4c);
        // CB 4C 010D
        gbc.setState(0x3e0b, 0xc8b7, 0x3c40, 0xe5b7, 0x4f6c, 0x724c, 0x0, 0x0);
        gbc.writeMem(0x3e0b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc8b7);
        EXPECT(gbc.pc(), 0x3e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 010E
        gbc.setState(0x89, 0x4b81, 0x6420, 0x24c7, 0xa7d5, 0x5bd2, 0x0, 0x1);
        gbc.writeMem(0x89, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4b81);
        EXPECT(gbc.pc(), 0x8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0110
        gbc.setState(0x6d8, 0x3221, 0xe3d0, 0xd4af, 0xa914, 0xc0d0, 0x1, 0x0);
        gbc.writeMem(0x6d8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3221);
        EXPECT(gbc.pc(), 0x6da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0111
        gbc.setState(0x80a6, 0x6152, 0xb810, 0x7998, 0xaee2, 0x4895, 0x0, 0x0);
        gbc.writeMem(0x80a6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6152);
        EXPECT(gbc.pc(), 0x80a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80a6), 0xcb);
        EXPECT(gbc.readMem(0x80a7), 0x4c);
        // CB 4C 0112
        gbc.setState(0x69c7, 0x842f, 0x610, 0xc5ab, 0x3831, 0xd8a8, 0x0, 0x1);
        gbc.writeMem(0x69c7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x842f);
        EXPECT(gbc.pc(), 0x69c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0114
        gbc.setState(0x473e, 0x26ac, 0xf510, 0xa3e0, 0x7a1f, 0x1c17, 0x1, 0x1);
        gbc.writeMem(0x473e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x26ac);
        EXPECT(gbc.pc(), 0x4740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0115
        gbc.setState(0x6ca1, 0x82ab, 0xa5b0, 0x376f, 0x7e1b, 0x4dda, 0x1, 0x1);
        gbc.writeMem(0x6ca1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x82ab);
        EXPECT(gbc.pc(), 0x6ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0116
        gbc.setState(0x8321, 0x22b4, 0x35b0, 0xc3b4, 0xcd49, 0xfb16, 0x0, 0x0);
        gbc.writeMem(0x8321, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x22b4);
        EXPECT(gbc.pc(), 0x8323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8321), 0xcb);
        EXPECT(gbc.readMem(0x8322), 0x4c);
        // CB 4C 0117
        gbc.setState(0xdd48, 0x7d15, 0x210, 0x3d2b, 0xf236, 0x3d27, 0x1, 0x1);
        gbc.writeMem(0xdd48, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7d15);
        EXPECT(gbc.pc(), 0xdd4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd48), 0xcb);
        EXPECT(gbc.readMem(0xdd49), 0x4c);
        // CB 4C 0118
        gbc.setState(0x98e2, 0x6a28, 0xd630, 0x2294, 0x14d5, 0xf7f5, 0x1, 0x1);
        gbc.writeMem(0x98e2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6a28);
        EXPECT(gbc.pc(), 0x98e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e2), 0xcb);
        EXPECT(gbc.readMem(0x98e3), 0x4c);
        // CB 4C 0119
        gbc.setState(0x7339, 0x7db7, 0x3650, 0xd6b1, 0x56a7, 0x4a0c, 0x1, 0x1);
        gbc.writeMem(0x7339, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7db7);
        EXPECT(gbc.pc(), 0x733b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 011B
        gbc.setState(0x2ef3, 0x63d0, 0x5920, 0x7f06, 0xc878, 0xe400, 0x1, 0x1);
        gbc.writeMem(0x2ef3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x63d0);
        EXPECT(gbc.pc(), 0x2ef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 011C
        gbc.setState(0xaeea, 0xb381, 0xa7e0, 0x14a0, 0xeed9, 0x8184, 0x1, 0x0);
        gbc.writeMem(0xaeea, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb381);
        EXPECT(gbc.pc(), 0xaeec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeea), 0xcb);
        EXPECT(gbc.readMem(0xaeeb), 0x4c);
        // CB 4C 011D
        gbc.setState(0x9461, 0x846d, 0x7f60, 0xa8c8, 0xf2b3, 0x21e8, 0x1, 0x0);
        gbc.writeMem(0x9461, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x846d);
        EXPECT(gbc.pc(), 0x9463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9461), 0xcb);
        EXPECT(gbc.readMem(0x9462), 0x4c);
        // CB 4C 011E
        gbc.setState(0xe095, 0x951a, 0x2970, 0xfe90, 0x8cae, 0xec4f, 0x0, 0x1);
        gbc.writeMem(0xe095, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x951a);
        EXPECT(gbc.pc(), 0xe097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe095), 0xcb);
        EXPECT(gbc.readMem(0xe096), 0x4c);
        // CB 4C 011F
        gbc.setState(0x3a7e, 0xaefb, 0x7ea0, 0x2b76, 0x4643, 0xbab1, 0x1, 0x1);
        gbc.writeMem(0x3a7e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xaefb);
        EXPECT(gbc.pc(), 0x3a80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0120
        gbc.setState(0x2831, 0x9ddc, 0x6140, 0x5196, 0x5c43, 0xfc21, 0x1, 0x1);
        gbc.writeMem(0x2831, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9ddc);
        EXPECT(gbc.pc(), 0x2833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0121
        gbc.setState(0xf10, 0x4ba5, 0x3a50, 0x1845, 0x72bc, 0x650d, 0x0, 0x1);
        gbc.writeMem(0xf10, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4ba5);
        EXPECT(gbc.pc(), 0xf12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0122
        gbc.setState(0xdb93, 0x2899, 0x8720, 0x1ba5, 0x33af, 0x402b, 0x0, 0x1);
        gbc.writeMem(0xdb93, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2899);
        EXPECT(gbc.pc(), 0xdb95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb93), 0xcb);
        EXPECT(gbc.readMem(0xdb94), 0x4c);
        // CB 4C 0123
        gbc.setState(0xe2db, 0xe73e, 0x9040, 0xf731, 0x4317, 0x240f, 0x1, 0x0);
        gbc.writeMem(0xe2db, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe73e);
        EXPECT(gbc.pc(), 0xe2dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2db), 0xcb);
        EXPECT(gbc.readMem(0xe2dc), 0x4c);
        // CB 4C 0124
        gbc.setState(0x59c9, 0xeb98, 0x6df0, 0xd905, 0xd1e6, 0x585b, 0x0, 0x1);
        gbc.writeMem(0x59c9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xeb98);
        EXPECT(gbc.pc(), 0x59cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0125
        gbc.setState(0x6e01, 0x1792, 0x5900, 0xf1df, 0xa0b8, 0x6318, 0x1, 0x1);
        gbc.writeMem(0x6e01, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1792);
        EXPECT(gbc.pc(), 0x6e03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0126
        gbc.setState(0xe85c, 0x2b1b, 0x6580, 0x7dff, 0x76a5, 0x7c71, 0x0, 0x1);
        gbc.writeMem(0xe85c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2b1b);
        EXPECT(gbc.pc(), 0xe85e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe85c), 0xcb);
        EXPECT(gbc.readMem(0xe85d), 0x4c);
        // CB 4C 0127
        gbc.setState(0x4021, 0xc090, 0xe430, 0xa7e6, 0x7cc7, 0x9279, 0x0, 0x0);
        gbc.writeMem(0x4021, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc090);
        EXPECT(gbc.pc(), 0x4023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 012A
        gbc.setState(0x6dce, 0x9c1, 0x3550, 0xb97a, 0xd1f6, 0x36e5, 0x1, 0x0);
        gbc.writeMem(0x6dce, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9c1);
        EXPECT(gbc.pc(), 0x6dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 012B
        gbc.setState(0xa49a, 0xa667, 0x2370, 0xe9b7, 0x88c3, 0xcbfa, 0x1, 0x1);
        gbc.writeMem(0xa49a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa667);
        EXPECT(gbc.pc(), 0xa49c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49a), 0xcb);
        EXPECT(gbc.readMem(0xa49b), 0x4c);
        // CB 4C 012C
        gbc.setState(0x82d9, 0x15fe, 0x7390, 0x6527, 0x3b4a, 0x69fe, 0x1, 0x0);
        gbc.writeMem(0x82d9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x15fe);
        EXPECT(gbc.pc(), 0x82db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d9), 0xcb);
        EXPECT(gbc.readMem(0x82da), 0x4c);
        // CB 4C 012E
        gbc.setState(0x7eaa, 0xbfef, 0x4410, 0xa2eb, 0x3ba2, 0x9ff8, 0x1, 0x0);
        gbc.writeMem(0x7eaa, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbfef);
        EXPECT(gbc.pc(), 0x7eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 012F
        gbc.setState(0x66fd, 0x1f46, 0x1250, 0xb6a1, 0xefe8, 0x5307, 0x0, 0x1);
        gbc.writeMem(0x66fd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1f46);
        EXPECT(gbc.pc(), 0x66ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0130
        gbc.setState(0xe70d, 0x39bf, 0xc6a0, 0xeb58, 0xbd38, 0x8756, 0x1, 0x0);
        gbc.writeMem(0xe70d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x39bf);
        EXPECT(gbc.pc(), 0xe70f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe70d), 0xcb);
        EXPECT(gbc.readMem(0xe70e), 0x4c);
        // CB 4C 0131
        gbc.setState(0x8866, 0xa5ba, 0x4da0, 0xdf86, 0x2c21, 0x81e2, 0x0, 0x1);
        gbc.writeMem(0x8866, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa5ba);
        EXPECT(gbc.pc(), 0x8868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8866), 0xcb);
        EXPECT(gbc.readMem(0x8867), 0x4c);
        // CB 4C 0132
        gbc.setState(0x963d, 0xf9d2, 0xec40, 0x45, 0x68f3, 0xefd4, 0x1, 0x0);
        gbc.writeMem(0x963d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf9d2);
        EXPECT(gbc.pc(), 0x963f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x963d), 0xcb);
        EXPECT(gbc.readMem(0x963e), 0x4c);
        // CB 4C 0133
        gbc.setState(0x489a, 0x51ad, 0x4550, 0xd0c8, 0xc6bd, 0x1001, 0x0, 0x1);
        gbc.writeMem(0x489a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x51ad);
        EXPECT(gbc.pc(), 0x489c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0134
        gbc.setState(0xf34, 0xc50a, 0x3830, 0x5b86, 0x7c72, 0xc98d, 0x0, 0x1);
        gbc.writeMem(0xf34, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc50a);
        EXPECT(gbc.pc(), 0xf36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0135
        gbc.setState(0xdaf, 0x3992, 0xc6e0, 0xb7da, 0x605d, 0x74c7, 0x0, 0x1);
        gbc.writeMem(0xdaf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3992);
        EXPECT(gbc.pc(), 0xdb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0136
        gbc.setState(0x25b, 0x12e2, 0xbfc0, 0x72f4, 0x4039, 0x6a20, 0x1, 0x1);
        gbc.writeMem(0x25b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x12e2);
        EXPECT(gbc.pc(), 0x25d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0137
        gbc.setState(0x9485, 0xa3f2, 0xc150, 0x49a9, 0xac3d, 0xf1f8, 0x0, 0x0);
        gbc.writeMem(0x9485, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa3f2);
        EXPECT(gbc.pc(), 0x9487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9485), 0xcb);
        EXPECT(gbc.readMem(0x9486), 0x4c);
        // CB 4C 0138
        gbc.setState(0xb9cf, 0xcb3d, 0xed20, 0x6af7, 0x9abe, 0x9173, 0x1, 0x0);
        gbc.writeMem(0xb9cf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xcb3d);
        EXPECT(gbc.pc(), 0xb9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9cf), 0xcb);
        EXPECT(gbc.readMem(0xb9d0), 0x4c);
        // CB 4C 0139
        gbc.setState(0x2cb6, 0xfaf9, 0x27f0, 0xc904, 0xd523, 0xf82d, 0x0, 0x1);
        gbc.writeMem(0x2cb6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfaf9);
        EXPECT(gbc.pc(), 0x2cb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 013A
        gbc.setState(0x9ae2, 0xc6b4, 0xee20, 0xe8f5, 0xbd2a, 0x797, 0x0, 0x0);
        gbc.writeMem(0x9ae2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc6b4);
        EXPECT(gbc.pc(), 0x9ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae2), 0xcb);
        EXPECT(gbc.readMem(0x9ae3), 0x4c);
        // CB 4C 013B
        gbc.setState(0xbc27, 0x90ed, 0xae20, 0x87d8, 0x1bb, 0x858f, 0x0, 0x0);
        gbc.writeMem(0xbc27, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x90ed);
        EXPECT(gbc.pc(), 0xbc29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc27), 0xcb);
        EXPECT(gbc.readMem(0xbc28), 0x4c);
        // CB 4C 013D
        gbc.setState(0xe81f, 0xd4a5, 0x5940, 0xb825, 0x1876, 0x6313, 0x0, 0x1);
        gbc.writeMem(0xe81f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd4a5);
        EXPECT(gbc.pc(), 0xe821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe81f), 0xcb);
        EXPECT(gbc.readMem(0xe820), 0x4c);
        // CB 4C 013E
        gbc.setState(0x11e1, 0x8039, 0x4590, 0x3d29, 0x68d0, 0x4802, 0x0, 0x1);
        gbc.writeMem(0x11e1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8039);
        EXPECT(gbc.pc(), 0x11e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 013F
        gbc.setState(0x8951, 0x2f9f, 0x2da0, 0x399, 0x6f7a, 0x8b07, 0x1, 0x0);
        gbc.writeMem(0x8951, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2f9f);
        EXPECT(gbc.pc(), 0x8953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8951), 0xcb);
        EXPECT(gbc.readMem(0x8952), 0x4c);
        // CB 4C 0140
        gbc.setState(0x3b97, 0x40f5, 0xe4b0, 0x520, 0x636a, 0x29d1, 0x1, 0x0);
        gbc.writeMem(0x3b97, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x40f5);
        EXPECT(gbc.pc(), 0x3b99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0141
        gbc.setState(0x2444, 0xa185, 0x45c0, 0x125b, 0x14cd, 0x338f, 0x0, 0x0);
        gbc.writeMem(0x2444, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa185);
        EXPECT(gbc.pc(), 0x2446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0142
        gbc.setState(0x5b55, 0x929c, 0x5a50, 0xf39b, 0x85ae, 0x8348, 0x0, 0x1);
        gbc.writeMem(0x5b55, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x929c);
        EXPECT(gbc.pc(), 0x5b57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0143
        gbc.setState(0xd591, 0x4d7d, 0x6420, 0x1ea3, 0xb4ce, 0x4381, 0x1, 0x0);
        gbc.writeMem(0xd591, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4d7d);
        EXPECT(gbc.pc(), 0xd593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd591), 0xcb);
        EXPECT(gbc.readMem(0xd592), 0x4c);
        // CB 4C 0144
        gbc.setState(0x8b53, 0xdd9c, 0x9730, 0x3653, 0x5bd3, 0x1e34, 0x0, 0x0);
        gbc.writeMem(0x8b53, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdd9c);
        EXPECT(gbc.pc(), 0x8b55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b53), 0xcb);
        EXPECT(gbc.readMem(0x8b54), 0x4c);
        // CB 4C 0145
        gbc.setState(0x4ee0, 0x7354, 0x5920, 0xc948, 0x1900, 0xad94, 0x1, 0x0);
        gbc.writeMem(0x4ee0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7354);
        EXPECT(gbc.pc(), 0x4ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0146
        gbc.setState(0xb0a9, 0xe2e, 0xc0a0, 0x30, 0x1db1, 0x7520, 0x1, 0x1);
        gbc.writeMem(0xb0a9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe2e);
        EXPECT(gbc.pc(), 0xb0ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a9), 0xcb);
        EXPECT(gbc.readMem(0xb0aa), 0x4c);
        // CB 4C 0147
        gbc.setState(0x1fe5, 0xc61a, 0x93e0, 0x9634, 0xff7d, 0xa82e, 0x1, 0x0);
        gbc.writeMem(0x1fe5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc61a);
        EXPECT(gbc.pc(), 0x1fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0148
        gbc.setState(0xbbdb, 0x592b, 0x13d0, 0xcf1e, 0x3f43, 0xe111, 0x0, 0x1);
        gbc.writeMem(0xbbdb, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x592b);
        EXPECT(gbc.pc(), 0xbbdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbdb), 0xcb);
        EXPECT(gbc.readMem(0xbbdc), 0x4c);
        // CB 4C 0149
        gbc.setState(0xee77, 0x9dcc, 0xa0, 0x4658, 0xf360, 0x155a, 0x1, 0x1);
        gbc.writeMem(0xee77, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9dcc);
        EXPECT(gbc.pc(), 0xee79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee77), 0xcb);
        EXPECT(gbc.readMem(0xee78), 0x4c);
        // CB 4C 014A
        gbc.setState(0xa4c4, 0x8feb, 0xbfb0, 0x8e4a, 0x739f, 0xeb85, 0x0, 0x0);
        gbc.writeMem(0xa4c4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8feb);
        EXPECT(gbc.pc(), 0xa4c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c4), 0xcb);
        EXPECT(gbc.readMem(0xa4c5), 0x4c);
        // CB 4C 014B
        gbc.setState(0xc014, 0x6fbc, 0xba10, 0xd16f, 0x43dc, 0x11e1, 0x0, 0x0);
        gbc.writeMem(0xc014, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6fbc);
        EXPECT(gbc.pc(), 0xc016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc014), 0xcb);
        EXPECT(gbc.readMem(0xc015), 0x4c);
        // CB 4C 014C
        gbc.setState(0x4567, 0xc3fd, 0x7d10, 0xe4df, 0xab76, 0x197b, 0x0, 0x0);
        gbc.writeMem(0x4567, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc3fd);
        EXPECT(gbc.pc(), 0x4569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 014D
        gbc.setState(0x7084, 0xcf06, 0x6dc0, 0xb5f1, 0x95ee, 0x3c05, 0x1, 0x0);
        gbc.writeMem(0x7084, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xcf06);
        EXPECT(gbc.pc(), 0x7086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 014E
        gbc.setState(0xb4e, 0x4879, 0xa5e0, 0xb103, 0xa5c4, 0x5e90, 0x0, 0x0);
        gbc.writeMem(0xb4e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4879);
        EXPECT(gbc.pc(), 0xb50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 014F
        gbc.setState(0x31e1, 0x8024, 0x3e70, 0x7879, 0xb1f9, 0x6299, 0x0, 0x1);
        gbc.writeMem(0x31e1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8024);
        EXPECT(gbc.pc(), 0x31e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0150
        gbc.setState(0xfd3, 0x5003, 0x2ff0, 0x5f44, 0xb84, 0xfa63, 0x0, 0x1);
        gbc.writeMem(0xfd3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5003);
        EXPECT(gbc.pc(), 0xfd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0151
        gbc.setState(0xec75, 0xcc04, 0x5900, 0xe3bc, 0x1396, 0x9b33, 0x1, 0x1);
        gbc.writeMem(0xec75, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcc04);
        EXPECT(gbc.pc(), 0xec77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec75), 0xcb);
        EXPECT(gbc.readMem(0xec76), 0x4c);
        // CB 4C 0152
        gbc.setState(0x442b, 0x38f7, 0x8510, 0xb617, 0x2d1a, 0x4c48, 0x1, 0x1);
        gbc.writeMem(0x442b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x38f7);
        EXPECT(gbc.pc(), 0x442d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0153
        gbc.setState(0x1cbf, 0x1691, 0xd640, 0xae6f, 0x2ee5, 0xc9da, 0x0, 0x0);
        gbc.writeMem(0x1cbf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1691);
        EXPECT(gbc.pc(), 0x1cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0154
        gbc.setState(0xde26, 0xa18f, 0x9e40, 0xbcc6, 0x486a, 0xc0d3, 0x1, 0x0);
        gbc.writeMem(0xde26, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa18f);
        EXPECT(gbc.pc(), 0xde28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde26), 0xcb);
        EXPECT(gbc.readMem(0xde27), 0x4c);
        // CB 4C 0155
        gbc.setState(0x3733, 0x49c5, 0xcf20, 0x3b7b, 0xf472, 0x676f, 0x0, 0x0);
        gbc.writeMem(0x3733, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x49c5);
        EXPECT(gbc.pc(), 0x3735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0156
        gbc.setState(0xa726, 0x621b, 0x9120, 0x37e0, 0x5ad1, 0xbfe9, 0x0, 0x0);
        gbc.writeMem(0xa726, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x621b);
        EXPECT(gbc.pc(), 0xa728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa726), 0xcb);
        EXPECT(gbc.readMem(0xa727), 0x4c);
        // CB 4C 0157
        gbc.setState(0x4c70, 0xe8d5, 0x68f0, 0x9b64, 0xc20d, 0x86d2, 0x0, 0x1);
        gbc.writeMem(0x4c70, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe8d5);
        EXPECT(gbc.pc(), 0x4c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0158
        gbc.setState(0x226c, 0xf33, 0xbca0, 0xbb8c, 0xde08, 0x100f, 0x1, 0x0);
        gbc.writeMem(0x226c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf33);
        EXPECT(gbc.pc(), 0x226e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0159
        gbc.setState(0x6072, 0x8af9, 0xd150, 0x1aac, 0xc471, 0xae3c, 0x0, 0x1);
        gbc.writeMem(0x6072, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8af9);
        EXPECT(gbc.pc(), 0x6074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 015A
        gbc.setState(0xd7bd, 0x6a46, 0xb0b0, 0x476e, 0x72ef, 0x6e2b, 0x0, 0x0);
        gbc.writeMem(0xd7bd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6a46);
        EXPECT(gbc.pc(), 0xd7bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7bd), 0xcb);
        EXPECT(gbc.readMem(0xd7be), 0x4c);
        // CB 4C 015B
        gbc.setState(0x79ae, 0xe562, 0x41a0, 0x8637, 0x6804, 0xd85e, 0x1, 0x1);
        gbc.writeMem(0x79ae, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe562);
        EXPECT(gbc.pc(), 0x79b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 015C
        gbc.setState(0x1549, 0x6d73, 0xd2c0, 0x39a4, 0xd5d2, 0x5ab7, 0x1, 0x1);
        gbc.writeMem(0x1549, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6d73);
        EXPECT(gbc.pc(), 0x154b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 015E
        gbc.setState(0x93fd, 0x35f5, 0xb2d0, 0xe607, 0xd958, 0xae0e, 0x0, 0x0);
        gbc.writeMem(0x93fd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x35f5);
        EXPECT(gbc.pc(), 0x93ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93fd), 0xcb);
        EXPECT(gbc.readMem(0x93fe), 0x4c);
        // CB 4C 015F
        gbc.setState(0x7f1f, 0x7348, 0xf190, 0x2ea1, 0xac17, 0x377c, 0x0, 0x1);
        gbc.writeMem(0x7f1f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7348);
        EXPECT(gbc.pc(), 0x7f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0160
        gbc.setState(0x4be8, 0x973b, 0xb4b0, 0x3d6d, 0xd16e, 0x2ec5, 0x1, 0x0);
        gbc.writeMem(0x4be8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x973b);
        EXPECT(gbc.pc(), 0x4bea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0161
        gbc.setState(0xc204, 0xa364, 0x57f0, 0xb5f9, 0x6829, 0xc446, 0x1, 0x0);
        gbc.writeMem(0xc204, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa364);
        EXPECT(gbc.pc(), 0xc206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc204), 0xcb);
        EXPECT(gbc.readMem(0xc205), 0x4c);
        // CB 4C 0162
        gbc.setState(0xc82e, 0xa207, 0x5a20, 0x9761, 0x413c, 0x470c, 0x0, 0x1);
        gbc.writeMem(0xc82e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa207);
        EXPECT(gbc.pc(), 0xc830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc82e), 0xcb);
        EXPECT(gbc.readMem(0xc82f), 0x4c);
        // CB 4C 0163
        gbc.setState(0xc8f2, 0xd4c0, 0x9660, 0x4644, 0x326c, 0xee1d, 0x0, 0x1);
        gbc.writeMem(0xc8f2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd4c0);
        EXPECT(gbc.pc(), 0xc8f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f2), 0xcb);
        EXPECT(gbc.readMem(0xc8f3), 0x4c);
        // CB 4C 0164
        gbc.setState(0xb04e, 0xe728, 0x88a0, 0x8b45, 0x89a3, 0x4116, 0x0, 0x1);
        gbc.writeMem(0xb04e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe728);
        EXPECT(gbc.pc(), 0xb050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb04e), 0xcb);
        EXPECT(gbc.readMem(0xb04f), 0x4c);
        // CB 4C 0165
        gbc.setState(0xee36, 0x797a, 0xbf0, 0x27d0, 0x1f98, 0xf83d, 0x1, 0x0);
        gbc.writeMem(0xee36, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x797a);
        EXPECT(gbc.pc(), 0xee38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee36), 0xcb);
        EXPECT(gbc.readMem(0xee37), 0x4c);
        // CB 4C 0166
        gbc.setState(0x4b4c, 0x206d, 0x23f0, 0x306a, 0x2de2, 0xe356, 0x1, 0x1);
        gbc.writeMem(0x4b4c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x206d);
        EXPECT(gbc.pc(), 0x4b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0167
        gbc.setState(0xd697, 0xd91c, 0x1020, 0x887d, 0xf662, 0xa640, 0x1, 0x1);
        gbc.writeMem(0xd697, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd91c);
        EXPECT(gbc.pc(), 0xd699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd697), 0xcb);
        EXPECT(gbc.readMem(0xd698), 0x4c);
        // CB 4C 0168
        gbc.setState(0x7186, 0xaa75, 0x3b80, 0x10fe, 0x899a, 0x98b6, 0x1, 0x1);
        gbc.writeMem(0x7186, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xaa75);
        EXPECT(gbc.pc(), 0x7188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0169
        gbc.setState(0x2dc8, 0x14c1, 0x1b20, 0x3976, 0x4910, 0x51c7, 0x1, 0x0);
        gbc.writeMem(0x2dc8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x14c1);
        EXPECT(gbc.pc(), 0x2dca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 016A
        gbc.setState(0x5e58, 0xe358, 0x6520, 0x342c, 0x3502, 0x5a0b, 0x0, 0x1);
        gbc.writeMem(0x5e58, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe358);
        EXPECT(gbc.pc(), 0x5e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 016B
        gbc.setState(0x7103, 0x81e8, 0x1920, 0x88a, 0x6a70, 0xbbc5, 0x0, 0x1);
        gbc.writeMem(0x7103, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x81e8);
        EXPECT(gbc.pc(), 0x7105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 016C
        gbc.setState(0x121a, 0xed55, 0x32f0, 0x7d61, 0x7f73, 0x87f5, 0x0, 0x0);
        gbc.writeMem(0x121a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xed55);
        EXPECT(gbc.pc(), 0x121c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 016D
        gbc.setState(0x5900, 0xf88f, 0x2500, 0xaeda, 0x2c69, 0xa92, 0x1, 0x0);
        gbc.writeMem(0x5900, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf88f);
        EXPECT(gbc.pc(), 0x5902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 016E
        gbc.setState(0x8068, 0x7da6, 0x2b70, 0x7487, 0x46ee, 0xa230, 0x1, 0x0);
        gbc.writeMem(0x8068, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7da6);
        EXPECT(gbc.pc(), 0x806a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8068), 0xcb);
        EXPECT(gbc.readMem(0x8069), 0x4c);
        // CB 4C 016F
        gbc.setState(0xaea, 0xff98, 0x9940, 0xe398, 0xf8b8, 0x7830, 0x0, 0x1);
        gbc.writeMem(0xaea, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xff98);
        EXPECT(gbc.pc(), 0xaec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0170
        gbc.setState(0x8018, 0x445, 0x3c00, 0xb410, 0x677f, 0x728a, 0x1, 0x1);
        gbc.writeMem(0x8018, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x445);
        EXPECT(gbc.pc(), 0x801a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8018), 0xcb);
        EXPECT(gbc.readMem(0x8019), 0x4c);
        // CB 4C 0171
        gbc.setState(0xbc72, 0xbc20, 0xc070, 0x10e4, 0x2187, 0xce24, 0x0, 0x1);
        gbc.writeMem(0xbc72, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbc20);
        EXPECT(gbc.pc(), 0xbc74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc72), 0xcb);
        EXPECT(gbc.readMem(0xbc73), 0x4c);
        // CB 4C 0172
        gbc.setState(0x6bf1, 0x4ed1, 0x9830, 0xfdf6, 0x3b1b, 0x3228, 0x1, 0x1);
        gbc.writeMem(0x6bf1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4ed1);
        EXPECT(gbc.pc(), 0x6bf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0173
        gbc.setState(0x227c, 0xe5e5, 0x4b60, 0xd237, 0xdf04, 0x5593, 0x0, 0x1);
        gbc.writeMem(0x227c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe5e5);
        EXPECT(gbc.pc(), 0x227e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0174
        gbc.setState(0x6eed, 0x32f1, 0x4100, 0x364e, 0xd74c, 0x6097, 0x1, 0x0);
        gbc.writeMem(0x6eed, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x32f1);
        EXPECT(gbc.pc(), 0x6eef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0175
        gbc.setState(0x5c6f, 0x632f, 0x60f0, 0x929, 0x29d6, 0x6d33, 0x0, 0x0);
        gbc.writeMem(0x5c6f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x632f);
        EXPECT(gbc.pc(), 0x5c71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0176
        gbc.setState(0x4282, 0x8b9f, 0xfe00, 0xddb5, 0xc3d6, 0xa2ab, 0x1, 0x1);
        gbc.writeMem(0x4282, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8b9f);
        EXPECT(gbc.pc(), 0x4284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0177
        gbc.setState(0x9857, 0x784f, 0x1420, 0x980d, 0x769d, 0x31b0, 0x0, 0x0);
        gbc.writeMem(0x9857, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x784f);
        EXPECT(gbc.pc(), 0x9859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9857), 0xcb);
        EXPECT(gbc.readMem(0x9858), 0x4c);
        // CB 4C 0178
        gbc.setState(0x7896, 0x74aa, 0x41e0, 0xe41b, 0xae79, 0x3376, 0x0, 0x1);
        gbc.writeMem(0x7896, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x74aa);
        EXPECT(gbc.pc(), 0x7898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0179
        gbc.setState(0x409d, 0x4ee5, 0xa6b0, 0x80aa, 0xa943, 0xbc1e, 0x1, 0x0);
        gbc.writeMem(0x409d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4ee5);
        EXPECT(gbc.pc(), 0x409f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 017A
        gbc.setState(0xdad7, 0xf728, 0xcbe0, 0x1a87, 0xfcb2, 0x2585, 0x1, 0x1);
        gbc.writeMem(0xdad7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf728);
        EXPECT(gbc.pc(), 0xdad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad7), 0xcb);
        EXPECT(gbc.readMem(0xdad8), 0x4c);
        // CB 4C 017B
        gbc.setState(0x83a0, 0x67b0, 0x9430, 0x5b17, 0x7c52, 0x1495, 0x1, 0x1);
        gbc.writeMem(0x83a0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x67b0);
        EXPECT(gbc.pc(), 0x83a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a0), 0xcb);
        EXPECT(gbc.readMem(0x83a1), 0x4c);
        // CB 4C 017D
        gbc.setState(0x9337, 0xe4c7, 0xb140, 0xf657, 0xed29, 0x95f3, 0x0, 0x1);
        gbc.writeMem(0x9337, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe4c7);
        EXPECT(gbc.pc(), 0x9339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9337), 0xcb);
        EXPECT(gbc.readMem(0x9338), 0x4c);
        // CB 4C 017E
        gbc.setState(0x3205, 0xb539, 0x4e00, 0xba50, 0x1549, 0x28e1, 0x0, 0x0);
        gbc.writeMem(0x3205, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb539);
        EXPECT(gbc.pc(), 0x3207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 017F
        gbc.setState(0x6611, 0x20de, 0x89e0, 0x604d, 0x73a4, 0x85bf, 0x0, 0x1);
        gbc.writeMem(0x6611, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x20de);
        EXPECT(gbc.pc(), 0x6613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0180
        gbc.setState(0x21e6, 0xb722, 0x4980, 0x8d92, 0x4f74, 0x159c, 0x0, 0x1);
        gbc.writeMem(0x21e6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb722);
        EXPECT(gbc.pc(), 0x21e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0181
        gbc.setState(0x90f3, 0x4110, 0x37b0, 0x2907, 0x1fe7, 0xbc5c, 0x0, 0x0);
        gbc.writeMem(0x90f3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4110);
        EXPECT(gbc.pc(), 0x90f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f3), 0xcb);
        EXPECT(gbc.readMem(0x90f4), 0x4c);
        // CB 4C 0182
        gbc.setState(0x33e9, 0xc93b, 0x4d0, 0x2a34, 0x725c, 0x5161, 0x1, 0x1);
        gbc.writeMem(0x33e9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc93b);
        EXPECT(gbc.pc(), 0x33eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0183
        gbc.setState(0x3020, 0x77b9, 0x6520, 0x63d, 0xe3cf, 0xfff7, 0x1, 0x1);
        gbc.writeMem(0x3020, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x77b9);
        EXPECT(gbc.pc(), 0x3022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0184
        gbc.setState(0xea62, 0x732a, 0xc280, 0x1cfc, 0x12f8, 0xbead, 0x0, 0x0);
        gbc.writeMem(0xea62, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x732a);
        EXPECT(gbc.pc(), 0xea64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea62), 0xcb);
        EXPECT(gbc.readMem(0xea63), 0x4c);
        // CB 4C 0185
        gbc.setState(0x4b63, 0x7c0a, 0x2560, 0x32ee, 0xea80, 0x426c, 0x1, 0x1);
        gbc.writeMem(0x4b63, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7c0a);
        EXPECT(gbc.pc(), 0x4b65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0186
        gbc.setState(0x158b, 0x2bd1, 0xbf30, 0x7a76, 0x6d9, 0x955d, 0x0, 0x0);
        gbc.writeMem(0x158b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2bd1);
        EXPECT(gbc.pc(), 0x158d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0187
        gbc.setState(0x68f7, 0x7008, 0x7390, 0xae64, 0x25c6, 0x84c3, 0x1, 0x1);
        gbc.writeMem(0x68f7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7008);
        EXPECT(gbc.pc(), 0x68f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0188
        gbc.setState(0xce1a, 0x2529, 0xc510, 0xa6c0, 0x2fac, 0x7d, 0x0, 0x0);
        gbc.writeMem(0xce1a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2529);
        EXPECT(gbc.pc(), 0xce1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1a), 0xcb);
        EXPECT(gbc.readMem(0xce1b), 0x4c);
        // CB 4C 0189
        gbc.setState(0xc5df, 0x6df4, 0x4280, 0x7717, 0x598d, 0x3a9b, 0x0, 0x0);
        gbc.writeMem(0xc5df, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6df4);
        EXPECT(gbc.pc(), 0xc5e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5df), 0xcb);
        EXPECT(gbc.readMem(0xc5e0), 0x4c);
        // CB 4C 018A
        gbc.setState(0x92da, 0x10e1, 0x8fd0, 0xbc85, 0xf097, 0xa03, 0x1, 0x1);
        gbc.writeMem(0x92da, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x10e1);
        EXPECT(gbc.pc(), 0x92dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92da), 0xcb);
        EXPECT(gbc.readMem(0x92db), 0x4c);
        // CB 4C 018B
        gbc.setState(0x25b1, 0x47a0, 0x8ff0, 0x9329, 0x7d72, 0xf94, 0x0, 0x0);
        gbc.writeMem(0x25b1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x47a0);
        EXPECT(gbc.pc(), 0x25b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 018C
        gbc.setState(0x1967, 0xf71b, 0x27a0, 0x8cb3, 0x225b, 0x46de, 0x1, 0x1);
        gbc.writeMem(0x1967, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf71b);
        EXPECT(gbc.pc(), 0x1969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 018E
        gbc.setState(0x747d, 0xc35b, 0x7bc0, 0x3cae, 0x3a8e, 0xd186, 0x0, 0x0);
        gbc.writeMem(0x747d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc35b);
        EXPECT(gbc.pc(), 0x747f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 018F
        gbc.setState(0x3b84, 0x5b0, 0x630, 0xe6a, 0xf9fd, 0x8130, 0x1, 0x1);
        gbc.writeMem(0x3b84, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5b0);
        EXPECT(gbc.pc(), 0x3b86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0190
        gbc.setState(0x6c5c, 0x6e8b, 0x1160, 0x2993, 0x89d7, 0x31e, 0x1, 0x0);
        gbc.writeMem(0x6c5c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6e8b);
        EXPECT(gbc.pc(), 0x6c5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0191
        gbc.setState(0x6632, 0x93d7, 0x760, 0x1a63, 0xf56a, 0x3618, 0x1, 0x0);
        gbc.writeMem(0x6632, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x93d7);
        EXPECT(gbc.pc(), 0x6634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0192
        gbc.setState(0x6783, 0x85d, 0xc650, 0xd932, 0x7852, 0x161d, 0x0, 0x0);
        gbc.writeMem(0x6783, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x85d);
        EXPECT(gbc.pc(), 0x6785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0193
        gbc.setState(0xd30e, 0xcf1b, 0x3980, 0xd45f, 0xf8f4, 0xdc3d, 0x1, 0x1);
        gbc.writeMem(0xd30e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xcf1b);
        EXPECT(gbc.pc(), 0xd310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd30e), 0xcb);
        EXPECT(gbc.readMem(0xd30f), 0x4c);
        // CB 4C 0195
        gbc.setState(0x4ac1, 0xf84c, 0xfa60, 0x63e2, 0x6fe0, 0x5fb9, 0x1, 0x1);
        gbc.writeMem(0x4ac1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf84c);
        EXPECT(gbc.pc(), 0x4ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0196
        gbc.setState(0x1f54, 0x7a6a, 0x99b0, 0xfe10, 0x60c8, 0x24c1, 0x0, 0x1);
        gbc.writeMem(0x1f54, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7a6a);
        EXPECT(gbc.pc(), 0x1f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0197
        gbc.setState(0xd786, 0x7bab, 0x7a90, 0xca36, 0xfbec, 0x27aa, 0x0, 0x1);
        gbc.writeMem(0xd786, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7bab);
        EXPECT(gbc.pc(), 0xd788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd786), 0xcb);
        EXPECT(gbc.readMem(0xd787), 0x4c);
        // CB 4C 0198
        gbc.setState(0x9428, 0xc40c, 0xa570, 0xc358, 0xbc38, 0xfc39, 0x1, 0x1);
        gbc.writeMem(0x9428, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc40c);
        EXPECT(gbc.pc(), 0x942a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9428), 0xcb);
        EXPECT(gbc.readMem(0x9429), 0x4c);
        // CB 4C 0199
        gbc.setState(0x5329, 0xbfbf, 0xfcf0, 0xb035, 0x466f, 0x8410, 0x0, 0x1);
        gbc.writeMem(0x5329, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbfbf);
        EXPECT(gbc.pc(), 0x532b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 019A
        gbc.setState(0xefdc, 0x1387, 0x950, 0x2142, 0x4e0c, 0x1bf3, 0x1, 0x1);
        gbc.writeMem(0xefdc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1387);
        EXPECT(gbc.pc(), 0xefde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefdc), 0xcb);
        EXPECT(gbc.readMem(0xefdd), 0x4c);
        // CB 4C 019B
        gbc.setState(0x3f11, 0x38d4, 0xd3b0, 0x4c, 0x6709, 0x1609, 0x0, 0x1);
        gbc.writeMem(0x3f11, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x38d4);
        EXPECT(gbc.pc(), 0x3f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 019C
        gbc.setState(0x8193, 0x64b3, 0x5220, 0x56db, 0x4a12, 0x70e3, 0x1, 0x0);
        gbc.writeMem(0x8193, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x64b3);
        EXPECT(gbc.pc(), 0x8195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8193), 0xcb);
        EXPECT(gbc.readMem(0x8194), 0x4c);
        // CB 4C 019D
        gbc.setState(0x8398, 0xde7c, 0xe8e0, 0xe2f9, 0xb55e, 0x22c9, 0x1, 0x0);
        gbc.writeMem(0x8398, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xde7c);
        EXPECT(gbc.pc(), 0x839a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8398), 0xcb);
        EXPECT(gbc.readMem(0x8399), 0x4c);
        // CB 4C 019E
        gbc.setState(0x2860, 0xf7d6, 0xee60, 0x30f6, 0x958e, 0x582b, 0x0, 0x1);
        gbc.writeMem(0x2860, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf7d6);
        EXPECT(gbc.pc(), 0x2862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 019F
        gbc.setState(0x51d2, 0x2668, 0x5380, 0x3230, 0x35c6, 0xdd67, 0x0, 0x0);
        gbc.writeMem(0x51d2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2668);
        EXPECT(gbc.pc(), 0x51d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01A0
        gbc.setState(0x2740, 0xd647, 0xeb30, 0x6f64, 0x94dc, 0x836b, 0x0, 0x1);
        gbc.writeMem(0x2740, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd647);
        EXPECT(gbc.pc(), 0x2742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01A1
        gbc.setState(0x6d39, 0x8ca3, 0x4620, 0x1c94, 0xb8d5, 0x2f57, 0x1, 0x1);
        gbc.writeMem(0x6d39, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8ca3);
        EXPECT(gbc.pc(), 0x6d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01A2
        gbc.setState(0xbd10, 0x4181, 0xf4d0, 0xa75, 0xfe13, 0x47e3, 0x0, 0x1);
        gbc.writeMem(0xbd10, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4181);
        EXPECT(gbc.pc(), 0xbd12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd10), 0xcb);
        EXPECT(gbc.readMem(0xbd11), 0x4c);
        // CB 4C 01A3
        gbc.setState(0x7d7f, 0xba97, 0x4b70, 0xed89, 0x6daf, 0x3d8e, 0x0, 0x1);
        gbc.writeMem(0x7d7f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xba97);
        EXPECT(gbc.pc(), 0x7d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01A4
        gbc.setState(0x336f, 0xdbe8, 0x5790, 0xefe2, 0x5362, 0xf2e1, 0x1, 0x1);
        gbc.writeMem(0x336f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdbe8);
        EXPECT(gbc.pc(), 0x3371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01A5
        gbc.setState(0xce00, 0xa620, 0x7480, 0xa645, 0x5b42, 0xa1e4, 0x1, 0x1);
        gbc.writeMem(0xce00, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa620);
        EXPECT(gbc.pc(), 0xce02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce00), 0xcb);
        EXPECT(gbc.readMem(0xce01), 0x4c);
        // CB 4C 01A6
        gbc.setState(0x52a9, 0xdd1c, 0x9480, 0x88a0, 0x587c, 0x401e, 0x0, 0x0);
        gbc.writeMem(0x52a9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdd1c);
        EXPECT(gbc.pc(), 0x52ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01A7
        gbc.setState(0x26d, 0x61b5, 0x6860, 0x9d00, 0x1916, 0xfdaf, 0x0, 0x0);
        gbc.writeMem(0x26d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x61b5);
        EXPECT(gbc.pc(), 0x26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01A8
        gbc.setState(0x51a4, 0xff24, 0x5390, 0xfaf, 0x5a3a, 0x50bc, 0x0, 0x0);
        gbc.writeMem(0x51a4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xff24);
        EXPECT(gbc.pc(), 0x51a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01A9
        gbc.setState(0xc95a, 0x266a, 0xd8f0, 0x43e5, 0x3aab, 0x2ede, 0x1, 0x0);
        gbc.writeMem(0xc95a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x266a);
        EXPECT(gbc.pc(), 0xc95c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc95a), 0xcb);
        EXPECT(gbc.readMem(0xc95b), 0x4c);
        // CB 4C 01AA
        gbc.setState(0x27ba, 0xcb0a, 0x120, 0x748d, 0xf8a9, 0x90f4, 0x1, 0x1);
        gbc.writeMem(0x27ba, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xcb0a);
        EXPECT(gbc.pc(), 0x27bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01AB
        gbc.setState(0x225c, 0x8f79, 0x7770, 0xabc, 0x5503, 0x4ef1, 0x1, 0x0);
        gbc.writeMem(0x225c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8f79);
        EXPECT(gbc.pc(), 0x225e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01AC
        gbc.setState(0xc092, 0x837f, 0xb4d0, 0x5bb1, 0xc6ed, 0x524c, 0x1, 0x0);
        gbc.writeMem(0xc092, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x837f);
        EXPECT(gbc.pc(), 0xc094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc092), 0xcb);
        EXPECT(gbc.readMem(0xc093), 0x4c);
        // CB 4C 01AD
        gbc.setState(0x1977, 0xa7d9, 0xdfb0, 0xcae2, 0xbb15, 0xc53d, 0x0, 0x0);
        gbc.writeMem(0x1977, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa7d9);
        EXPECT(gbc.pc(), 0x1979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01AE
        gbc.setState(0x22dc, 0x2bea, 0xa5d0, 0x14a4, 0xc27a, 0x359, 0x0, 0x0);
        gbc.writeMem(0x22dc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2bea);
        EXPECT(gbc.pc(), 0x22de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01AF
        gbc.setState(0x1da0, 0xff9d, 0x1390, 0xa7dd, 0xfaaa, 0xfc71, 0x1, 0x0);
        gbc.writeMem(0x1da0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xff9d);
        EXPECT(gbc.pc(), 0x1da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01B0
        gbc.setState(0x3b72, 0xdeb5, 0xa300, 0x5768, 0x7fd7, 0x56d7, 0x0, 0x0);
        gbc.writeMem(0x3b72, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdeb5);
        EXPECT(gbc.pc(), 0x3b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01B1
        gbc.setState(0xd1da, 0xef49, 0x4840, 0xe05c, 0xba2f, 0x780a, 0x0, 0x1);
        gbc.writeMem(0xd1da, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xef49);
        EXPECT(gbc.pc(), 0xd1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1da), 0xcb);
        EXPECT(gbc.readMem(0xd1db), 0x4c);
        // CB 4C 01B2
        gbc.setState(0xefcf, 0x2b70, 0xed40, 0xb883, 0x5f6, 0x79ea, 0x0, 0x1);
        gbc.writeMem(0xefcf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2b70);
        EXPECT(gbc.pc(), 0xefd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefcf), 0xcb);
        EXPECT(gbc.readMem(0xefd0), 0x4c);
        // CB 4C 01B3
        gbc.setState(0xcd84, 0x766, 0xacf0, 0x98d9, 0x1560, 0x2d00, 0x0, 0x0);
        gbc.writeMem(0xcd84, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x766);
        EXPECT(gbc.pc(), 0xcd86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd84), 0xcb);
        EXPECT(gbc.readMem(0xcd85), 0x4c);
        // CB 4C 01B4
        gbc.setState(0x20b2, 0x7ba3, 0xb540, 0x1443, 0x8f13, 0xf081, 0x0, 0x0);
        gbc.writeMem(0x20b2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7ba3);
        EXPECT(gbc.pc(), 0x20b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01B5
        gbc.setState(0x5468, 0xdc84, 0x19f0, 0x55c8, 0x5d83, 0xd34a, 0x1, 0x0);
        gbc.writeMem(0x5468, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xdc84);
        EXPECT(gbc.pc(), 0x546a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01B6
        gbc.setState(0xff5, 0xecfe, 0x5390, 0x8647, 0x48df, 0x94e6, 0x1, 0x0);
        gbc.writeMem(0xff5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xecfe);
        EXPECT(gbc.pc(), 0xff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01B7
        gbc.setState(0x2bb8, 0xac66, 0xe390, 0x34c8, 0xeaf2, 0xd74c, 0x0, 0x0);
        gbc.writeMem(0x2bb8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xac66);
        EXPECT(gbc.pc(), 0x2bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01B8
        gbc.setState(0x2a7e, 0xa7df, 0x8680, 0x118, 0xc678, 0xb581, 0x0, 0x1);
        gbc.writeMem(0x2a7e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa7df);
        EXPECT(gbc.pc(), 0x2a80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01B9
        gbc.setState(0x36c4, 0x6bd3, 0x490, 0xa22a, 0x83ef, 0x3320, 0x0, 0x1);
        gbc.writeMem(0x36c4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6bd3);
        EXPECT(gbc.pc(), 0x36c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01BB
        gbc.setState(0x11cc, 0x63d9, 0x1680, 0xf2e5, 0xea9f, 0xf794, 0x0, 0x1);
        gbc.writeMem(0x11cc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x63d9);
        EXPECT(gbc.pc(), 0x11ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01BC
        gbc.setState(0xd333, 0x81a5, 0xe7f0, 0x9552, 0xf5c4, 0x8d79, 0x1, 0x0);
        gbc.writeMem(0xd333, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x81a5);
        EXPECT(gbc.pc(), 0xd335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd333), 0xcb);
        EXPECT(gbc.readMem(0xd334), 0x4c);
        // CB 4C 01BD
        gbc.setState(0x44e4, 0x1ce6, 0xbf80, 0x8b14, 0xfd04, 0xd2e6, 0x1, 0x1);
        gbc.writeMem(0x44e4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1ce6);
        EXPECT(gbc.pc(), 0x44e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01BE
        gbc.setState(0x3e58, 0x3d3b, 0x1c00, 0x5452, 0x5e0e, 0x4728, 0x0, 0x1);
        gbc.writeMem(0x3e58, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3d3b);
        EXPECT(gbc.pc(), 0x3e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01BF
        gbc.setState(0x4a5c, 0x5546, 0x6510, 0x7a58, 0x136f, 0x6c68, 0x0, 0x0);
        gbc.writeMem(0x4a5c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5546);
        EXPECT(gbc.pc(), 0x4a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01C0
        gbc.setState(0x9c0e, 0xc895, 0x1f60, 0x6fc3, 0x47cb, 0x3706, 0x1, 0x1);
        gbc.writeMem(0x9c0e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc895);
        EXPECT(gbc.pc(), 0x9c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0e), 0xcb);
        EXPECT(gbc.readMem(0x9c0f), 0x4c);
        // CB 4C 01C1
        gbc.setState(0x9685, 0xb574, 0x65d0, 0x414, 0x9756, 0x14a3, 0x0, 0x1);
        gbc.writeMem(0x9685, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb574);
        EXPECT(gbc.pc(), 0x9687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9685), 0xcb);
        EXPECT(gbc.readMem(0x9686), 0x4c);
        // CB 4C 01C2
        gbc.setState(0x8649, 0x9017, 0xe00, 0xe7fb, 0x4c18, 0x2b43, 0x0, 0x0);
        gbc.writeMem(0x8649, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9017);
        EXPECT(gbc.pc(), 0x864b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8649), 0xcb);
        EXPECT(gbc.readMem(0x864a), 0x4c);
        // CB 4C 01C3
        gbc.setState(0xeec4, 0x2197, 0xd7f0, 0x333b, 0xc189, 0x412d, 0x0, 0x1);
        gbc.writeMem(0xeec4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2197);
        EXPECT(gbc.pc(), 0xeec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec4), 0xcb);
        EXPECT(gbc.readMem(0xeec5), 0x4c);
        // CB 4C 01C4
        gbc.setState(0xa9bf, 0x8ff8, 0x90e0, 0xd7e, 0xe082, 0xfd74, 0x1, 0x1);
        gbc.writeMem(0xa9bf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8ff8);
        EXPECT(gbc.pc(), 0xa9c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9bf), 0xcb);
        EXPECT(gbc.readMem(0xa9c0), 0x4c);
        // CB 4C 01C6
        gbc.setState(0xc7da, 0x5781, 0xd0c0, 0x48e1, 0x2210, 0xfcba, 0x1, 0x1);
        gbc.writeMem(0xc7da, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5781);
        EXPECT(gbc.pc(), 0xc7dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7da), 0xcb);
        EXPECT(gbc.readMem(0xc7db), 0x4c);
        // CB 4C 01C7
        gbc.setState(0xb792, 0xbf39, 0x8260, 0x34fa, 0xe10, 0x5691, 0x1, 0x1);
        gbc.writeMem(0xb792, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbf39);
        EXPECT(gbc.pc(), 0xb794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb792), 0xcb);
        EXPECT(gbc.readMem(0xb793), 0x4c);
        // CB 4C 01C8
        gbc.setState(0x802c, 0xae81, 0x26c0, 0xada, 0xcd14, 0xc860, 0x1, 0x1);
        gbc.writeMem(0x802c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xae81);
        EXPECT(gbc.pc(), 0x802e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802c), 0xcb);
        EXPECT(gbc.readMem(0x802d), 0x4c);
        // CB 4C 01C9
        gbc.setState(0xcad3, 0x3cee, 0xea80, 0xdb9c, 0x8f1b, 0xe542, 0x1, 0x0);
        gbc.writeMem(0xcad3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3cee);
        EXPECT(gbc.pc(), 0xcad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcad3), 0xcb);
        EXPECT(gbc.readMem(0xcad4), 0x4c);
        // CB 4C 01CA
        gbc.setState(0x29c7, 0xddd6, 0x8120, 0xa676, 0x1850, 0xf262, 0x1, 0x1);
        gbc.writeMem(0x29c7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xddd6);
        EXPECT(gbc.pc(), 0x29c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01CB
        gbc.setState(0x3646, 0x3e8, 0xf980, 0xaccb, 0xa9d9, 0x295d, 0x1, 0x1);
        gbc.writeMem(0x3646, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3e8);
        EXPECT(gbc.pc(), 0x3648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01CC
        gbc.setState(0x2fc, 0x250b, 0x8c0, 0x48fc, 0x24e3, 0x56f, 0x1, 0x0);
        gbc.writeMem(0x2fc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x250b);
        EXPECT(gbc.pc(), 0x2fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01CD
        gbc.setState(0x9044, 0x7276, 0x1fc0, 0xbf83, 0x3853, 0xc17b, 0x1, 0x1);
        gbc.writeMem(0x9044, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7276);
        EXPECT(gbc.pc(), 0x9046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9044), 0xcb);
        EXPECT(gbc.readMem(0x9045), 0x4c);
        // CB 4C 01CE
        gbc.setState(0x841e, 0xb8d0, 0x710, 0x21a2, 0xdb96, 0x44e6, 0x0, 0x1);
        gbc.writeMem(0x841e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb8d0);
        EXPECT(gbc.pc(), 0x8420);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841e), 0xcb);
        EXPECT(gbc.readMem(0x841f), 0x4c);
        // CB 4C 01CF
        gbc.setState(0x8bb5, 0x17e8, 0xf480, 0xcc2a, 0x3e2c, 0x31c5, 0x0, 0x0);
        gbc.writeMem(0x8bb5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x17e8);
        EXPECT(gbc.pc(), 0x8bb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb5), 0xcb);
        EXPECT(gbc.readMem(0x8bb6), 0x4c);
        // CB 4C 01D0
        gbc.setState(0x4c17, 0xb63d, 0xe630, 0x1a2c, 0x673a, 0xedd9, 0x0, 0x1);
        gbc.writeMem(0x4c17, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb63d);
        EXPECT(gbc.pc(), 0x4c19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01D3
        gbc.setState(0x7f50, 0x968f, 0x2ee0, 0xf3ed, 0x590d, 0x5be0, 0x1, 0x1);
        gbc.writeMem(0x7f50, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x968f);
        EXPECT(gbc.pc(), 0x7f52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01D4
        gbc.setState(0x9b6b, 0x6290, 0xaa30, 0xcf4f, 0xb46e, 0xd6cd, 0x0, 0x0);
        gbc.writeMem(0x9b6b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6290);
        EXPECT(gbc.pc(), 0x9b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6b), 0xcb);
        EXPECT(gbc.readMem(0x9b6c), 0x4c);
        // CB 4C 01D5
        gbc.setState(0x6596, 0xd523, 0xa4d0, 0x7e1, 0xfa2, 0xb820, 0x1, 0x0);
        gbc.writeMem(0x6596, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd523);
        EXPECT(gbc.pc(), 0x6598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01D6
        gbc.setState(0x5b8e, 0xa1c4, 0xaa0, 0x288e, 0xe24e, 0xe0fc, 0x1, 0x0);
        gbc.writeMem(0x5b8e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa1c4);
        EXPECT(gbc.pc(), 0x5b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01D7
        gbc.setState(0x1ab2, 0xe09e, 0x5860, 0x9e48, 0x8228, 0xd50f, 0x0, 0x0);
        gbc.writeMem(0x1ab2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe09e);
        EXPECT(gbc.pc(), 0x1ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01D8
        gbc.setState(0x2359, 0x5edf, 0x7c40, 0xd17c, 0x7643, 0xec4, 0x0, 0x1);
        gbc.writeMem(0x2359, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5edf);
        EXPECT(gbc.pc(), 0x235b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01D9
        gbc.setState(0x2a0, 0xcca7, 0xa4b0, 0x9097, 0x781d, 0x9763, 0x0, 0x1);
        gbc.writeMem(0x2a0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcca7);
        EXPECT(gbc.pc(), 0x2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01DA
        gbc.setState(0x6935, 0xb682, 0x9440, 0x20f5, 0x4c1d, 0x42d, 0x0, 0x1);
        gbc.writeMem(0x6935, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb682);
        EXPECT(gbc.pc(), 0x6937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01DB
        gbc.setState(0x83a9, 0x629e, 0xeb90, 0xa24f, 0xe4a2, 0xae56, 0x1, 0x1);
        gbc.writeMem(0x83a9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x629e);
        EXPECT(gbc.pc(), 0x83ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a9), 0xcb);
        EXPECT(gbc.readMem(0x83aa), 0x4c);
        // CB 4C 01DC
        gbc.setState(0x572d, 0xfe46, 0xb620, 0xa883, 0xe6d4, 0xbd9, 0x0, 0x0);
        gbc.writeMem(0x572d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfe46);
        EXPECT(gbc.pc(), 0x572f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01DD
        gbc.setState(0x60f5, 0x5c4d, 0xbb00, 0xc935, 0xeb, 0xbf3f, 0x0, 0x0);
        gbc.writeMem(0x60f5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5c4d);
        EXPECT(gbc.pc(), 0x60f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01DE
        gbc.setState(0x39c9, 0xe564, 0x1e70, 0xd595, 0x1d03, 0x766a, 0x1, 0x1);
        gbc.writeMem(0x39c9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe564);
        EXPECT(gbc.pc(), 0x39cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01DF
        gbc.setState(0xde11, 0xca55, 0x2450, 0x2eb2, 0xb7a4, 0x6776, 0x0, 0x0);
        gbc.writeMem(0xde11, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xca55);
        EXPECT(gbc.pc(), 0xde13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde11), 0xcb);
        EXPECT(gbc.readMem(0xde12), 0x4c);
        // CB 4C 01E1
        gbc.setState(0xea23, 0xf430, 0xa1d0, 0xfb6a, 0xab4a, 0x4f75, 0x1, 0x0);
        gbc.writeMem(0xea23, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf430);
        EXPECT(gbc.pc(), 0xea25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea23), 0xcb);
        EXPECT(gbc.readMem(0xea24), 0x4c);
        // CB 4C 01E2
        gbc.setState(0x512d, 0x890a, 0xa620, 0x42c3, 0x6454, 0x1a15, 0x1, 0x1);
        gbc.writeMem(0x512d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x890a);
        EXPECT(gbc.pc(), 0x512f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01E3
        gbc.setState(0x1ce8, 0x8294, 0x1e40, 0xfdb8, 0xcb67, 0x1828, 0x0, 0x1);
        gbc.writeMem(0x1ce8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8294);
        EXPECT(gbc.pc(), 0x1cea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01E4
        gbc.setState(0x4af0, 0x1d92, 0x5500, 0x8988, 0xf4c8, 0x3a3, 0x0, 0x1);
        gbc.writeMem(0x4af0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1d92);
        EXPECT(gbc.pc(), 0x4af2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01E5
        gbc.setState(0x1793, 0xb43e, 0x1140, 0xf0f8, 0x8e13, 0x9ab0, 0x0, 0x1);
        gbc.writeMem(0x1793, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb43e);
        EXPECT(gbc.pc(), 0x1795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01E6
        gbc.setState(0xe63b, 0x4a6a, 0x10b0, 0x761c, 0x8386, 0x7bb2, 0x0, 0x1);
        gbc.writeMem(0xe63b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4a6a);
        EXPECT(gbc.pc(), 0xe63d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe63b), 0xcb);
        EXPECT(gbc.readMem(0xe63c), 0x4c);
        // CB 4C 01E7
        gbc.setState(0x47f3, 0xea54, 0xb540, 0x6065, 0x187b, 0xa2da, 0x1, 0x1);
        gbc.writeMem(0x47f3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xea54);
        EXPECT(gbc.pc(), 0x47f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01E8
        gbc.setState(0x4209, 0x6fb9, 0xf250, 0x9215, 0x8, 0xca02, 0x1, 0x1);
        gbc.writeMem(0x4209, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6fb9);
        EXPECT(gbc.pc(), 0x420b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01E9
        gbc.setState(0x2c15, 0xf8af, 0x6290, 0xa05, 0xbf80, 0x710e, 0x0, 0x0);
        gbc.writeMem(0x2c15, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf8af);
        EXPECT(gbc.pc(), 0x2c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01EA
        gbc.setState(0x30bd, 0x8f6, 0x89e0, 0x10cd, 0xe9f9, 0xe9c3, 0x1, 0x0);
        gbc.writeMem(0x30bd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8f6);
        EXPECT(gbc.pc(), 0x30bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01EB
        gbc.setState(0xe28, 0x57bf, 0x5870, 0x4363, 0xecff, 0xe0e3, 0x1, 0x0);
        gbc.writeMem(0xe28, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x57bf);
        EXPECT(gbc.pc(), 0xe2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01EC
        gbc.setState(0x6323, 0x5b4, 0xfe00, 0x4231, 0x4831, 0xc6d0, 0x0, 0x0);
        gbc.writeMem(0x6323, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5b4);
        EXPECT(gbc.pc(), 0x6325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01ED
        gbc.setState(0xe350, 0x2157, 0xf980, 0x1725, 0x113e, 0x2681, 0x1, 0x1);
        gbc.writeMem(0xe350, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2157);
        EXPECT(gbc.pc(), 0xe352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe350), 0xcb);
        EXPECT(gbc.readMem(0xe351), 0x4c);
        // CB 4C 01EE
        gbc.setState(0xec3c, 0xcedb, 0x4310, 0xe2d6, 0xa133, 0xa45d, 0x0, 0x1);
        gbc.writeMem(0xec3c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xcedb);
        EXPECT(gbc.pc(), 0xec3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec3c), 0xcb);
        EXPECT(gbc.readMem(0xec3d), 0x4c);
        // CB 4C 01F0
        gbc.setState(0x9ef7, 0xa2e1, 0x520, 0x20b8, 0x66c3, 0x9736, 0x0, 0x1);
        gbc.writeMem(0x9ef7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa2e1);
        EXPECT(gbc.pc(), 0x9ef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef7), 0xcb);
        EXPECT(gbc.readMem(0x9ef8), 0x4c);
        // CB 4C 01F1
        gbc.setState(0x33e, 0x6d51, 0xff10, 0xd442, 0xff1, 0x8f3a, 0x1, 0x1);
        gbc.writeMem(0x33e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6d51);
        EXPECT(gbc.pc(), 0x340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01F2
        gbc.setState(0xa532, 0xbc9e, 0x7920, 0x250, 0xae65, 0x70ed, 0x1, 0x1);
        gbc.writeMem(0xa532, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbc9e);
        EXPECT(gbc.pc(), 0xa534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa532), 0xcb);
        EXPECT(gbc.readMem(0xa533), 0x4c);
        // CB 4C 01F3
        gbc.setState(0x2f49, 0x2e02, 0x3410, 0x92b1, 0xf758, 0x30fc, 0x0, 0x1);
        gbc.writeMem(0x2f49, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2e02);
        EXPECT(gbc.pc(), 0x2f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01F4
        gbc.setState(0x7b27, 0x2e7, 0xf8c0, 0xd3a5, 0x137c, 0xc66b, 0x1, 0x1);
        gbc.writeMem(0x7b27, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2e7);
        EXPECT(gbc.pc(), 0x7b29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01F5
        gbc.setState(0xeb97, 0xac62, 0x200, 0x574c, 0x4167, 0x3289, 0x1, 0x0);
        gbc.writeMem(0xeb97, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xac62);
        EXPECT(gbc.pc(), 0xeb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb97), 0xcb);
        EXPECT(gbc.readMem(0xeb98), 0x4c);
        // CB 4C 01F6
        gbc.setState(0x6730, 0x3ae8, 0x9080, 0xd813, 0x284, 0x8ef3, 0x1, 0x0);
        gbc.writeMem(0x6730, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3ae8);
        EXPECT(gbc.pc(), 0x6732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01F7
        gbc.setState(0x7e5c, 0xb1b0, 0xdfd0, 0x7565, 0x7f78, 0x91a0, 0x1, 0x1);
        gbc.writeMem(0x7e5c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb1b0);
        EXPECT(gbc.pc(), 0x7e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01F8
        gbc.setState(0x5e28, 0xb2a8, 0x44e0, 0xa5a5, 0x1d82, 0x3f58, 0x1, 0x1);
        gbc.writeMem(0x5e28, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb2a8);
        EXPECT(gbc.pc(), 0x5e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01FA
        gbc.setState(0x3fb4, 0x1453, 0x8b50, 0xafa, 0xe406, 0x260a, 0x1, 0x0);
        gbc.writeMem(0x3fb4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1453);
        EXPECT(gbc.pc(), 0x3fb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01FB
        gbc.setState(0x744c, 0xae19, 0xe3d0, 0x9338, 0x78c6, 0x9d5c, 0x1, 0x1);
        gbc.writeMem(0x744c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xae19);
        EXPECT(gbc.pc(), 0x744e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01FC
        gbc.setState(0xb05b, 0x1e3e, 0xa9f0, 0x664f, 0x5ee0, 0x621a, 0x1, 0x0);
        gbc.writeMem(0xb05b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1e3e);
        EXPECT(gbc.pc(), 0xb05d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05b), 0xcb);
        EXPECT(gbc.readMem(0xb05c), 0x4c);
        // CB 4C 01FD
        gbc.setState(0x4f78, 0x654e, 0x98a0, 0xadbf, 0x8241, 0xd5b7, 0x1, 0x0);
        gbc.writeMem(0x4f78, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x654e);
        EXPECT(gbc.pc(), 0x4f7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 01FE
        gbc.setState(0x6050, 0xdc09, 0xe1d0, 0x7a6f, 0x67e9, 0xb4d0, 0x1, 0x0);
        gbc.writeMem(0x6050, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdc09);
        EXPECT(gbc.pc(), 0x6052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 01FF
        gbc.setState(0xdd53, 0xdb9a, 0xd500, 0xb747, 0x16e, 0x94f0, 0x0, 0x1);
        gbc.writeMem(0xdd53, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xdb9a);
        EXPECT(gbc.pc(), 0xdd55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd53), 0xcb);
        EXPECT(gbc.readMem(0xdd54), 0x4c);
        // CB 4C 0200
        gbc.setState(0xaf74, 0x3af6, 0x2940, 0xacb4, 0x1940, 0x86cd, 0x1, 0x0);
        gbc.writeMem(0xaf74, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3af6);
        EXPECT(gbc.pc(), 0xaf76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf74), 0xcb);
        EXPECT(gbc.readMem(0xaf75), 0x4c);
        // CB 4C 0201
        gbc.setState(0x7d6a, 0xc126, 0x7910, 0x45af, 0xa52f, 0x1ef3, 0x0, 0x1);
        gbc.writeMem(0x7d6a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc126);
        EXPECT(gbc.pc(), 0x7d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0203
        gbc.setState(0x5e0a, 0x8641, 0xcd60, 0x7c9a, 0x8604, 0x7929, 0x0, 0x1);
        gbc.writeMem(0x5e0a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8641);
        EXPECT(gbc.pc(), 0x5e0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0204
        gbc.setState(0x2418, 0xeb35, 0xd5f0, 0xc68d, 0x15e3, 0xc93, 0x1, 0x1);
        gbc.writeMem(0x2418, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xeb35);
        EXPECT(gbc.pc(), 0x241a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0205
        gbc.setState(0x7205, 0x1dc, 0x1f60, 0x8657, 0x66bd, 0x644f, 0x0, 0x0);
        gbc.writeMem(0x7205, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1dc);
        EXPECT(gbc.pc(), 0x7207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0206
        gbc.setState(0x1106, 0xe9ea, 0x5800, 0xa529, 0x57b0, 0xe857, 0x1, 0x1);
        gbc.writeMem(0x1106, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe9ea);
        EXPECT(gbc.pc(), 0x1108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0207
        gbc.setState(0x5e6a, 0x9f30, 0x6090, 0xd88a, 0x1ca7, 0x914b, 0x0, 0x0);
        gbc.writeMem(0x5e6a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9f30);
        EXPECT(gbc.pc(), 0x5e6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0208
        gbc.setState(0x634c, 0x8d64, 0x5240, 0x2880, 0xed18, 0xd86c, 0x0, 0x0);
        gbc.writeMem(0x634c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8d64);
        EXPECT(gbc.pc(), 0x634e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0209
        gbc.setState(0x2ed8, 0x5c0f, 0x9910, 0x41be, 0xe7fa, 0x4b00, 0x0, 0x1);
        gbc.writeMem(0x2ed8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5c0f);
        EXPECT(gbc.pc(), 0x2eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 020A
        gbc.setState(0xce88, 0x5068, 0x42e0, 0x5af9, 0xf6e9, 0x9baf, 0x1, 0x0);
        gbc.writeMem(0xce88, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5068);
        EXPECT(gbc.pc(), 0xce8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce88), 0xcb);
        EXPECT(gbc.readMem(0xce89), 0x4c);
        // CB 4C 020B
        gbc.setState(0x5c41, 0x2890, 0xc8f0, 0xf903, 0x40b0, 0x176c, 0x0, 0x0);
        gbc.writeMem(0x5c41, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2890);
        EXPECT(gbc.pc(), 0x5c43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 020C
        gbc.setState(0x47f4, 0xe547, 0x14d0, 0xa3a6, 0xfc5b, 0xeb6b, 0x0, 0x0);
        gbc.writeMem(0x47f4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe547);
        EXPECT(gbc.pc(), 0x47f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 020D
        gbc.setState(0x955b, 0x460d, 0x1090, 0x2021, 0xb49c, 0xb4b4, 0x0, 0x0);
        gbc.writeMem(0x955b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x460d);
        EXPECT(gbc.pc(), 0x955d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955b), 0xcb);
        EXPECT(gbc.readMem(0x955c), 0x4c);
        // CB 4C 020E
        gbc.setState(0xa5be, 0xb92a, 0xfa80, 0xddf5, 0x6302, 0x4b89, 0x0, 0x0);
        gbc.writeMem(0xa5be, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb92a);
        EXPECT(gbc.pc(), 0xa5c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5be), 0xcb);
        EXPECT(gbc.readMem(0xa5bf), 0x4c);
        // CB 4C 020F
        gbc.setState(0x4245, 0xbe59, 0xf870, 0xbf2b, 0x890f, 0xfaea, 0x1, 0x0);
        gbc.writeMem(0x4245, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbe59);
        EXPECT(gbc.pc(), 0x4247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0210
        gbc.setState(0x19e0, 0x3972, 0xeed0, 0xb64, 0x9dd7, 0x5431, 0x1, 0x0);
        gbc.writeMem(0x19e0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3972);
        EXPECT(gbc.pc(), 0x19e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0211
        gbc.setState(0x4cf5, 0x6b02, 0x5820, 0x47b4, 0xde73, 0x2660, 0x0, 0x1);
        gbc.writeMem(0x4cf5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6b02);
        EXPECT(gbc.pc(), 0x4cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0212
        gbc.setState(0x1095, 0xa4db, 0x47c0, 0xc09e, 0x87bb, 0x6ee4, 0x1, 0x1);
        gbc.writeMem(0x1095, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa4db);
        EXPECT(gbc.pc(), 0x1097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0213
        gbc.setState(0xb071, 0xb00e, 0xd3a0, 0xba68, 0xc823, 0x9bff, 0x1, 0x0);
        gbc.writeMem(0xb071, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb00e);
        EXPECT(gbc.pc(), 0xb073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb071), 0xcb);
        EXPECT(gbc.readMem(0xb072), 0x4c);
        // CB 4C 0214
        gbc.setState(0x36f0, 0xaf26, 0x4990, 0xe4b1, 0xcec6, 0x7963, 0x1, 0x0);
        gbc.writeMem(0x36f0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xaf26);
        EXPECT(gbc.pc(), 0x36f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0215
        gbc.setState(0x2404, 0x8bd, 0xc700, 0xedc9, 0xcd8b, 0x6162, 0x1, 0x0);
        gbc.writeMem(0x2404, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8bd);
        EXPECT(gbc.pc(), 0x2406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0216
        gbc.setState(0x8c76, 0xb4aa, 0x71c0, 0xaad0, 0xdcc1, 0x4745, 0x1, 0x0);
        gbc.writeMem(0x8c76, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb4aa);
        EXPECT(gbc.pc(), 0x8c78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c76), 0xcb);
        EXPECT(gbc.readMem(0x8c77), 0x4c);
        // CB 4C 0217
        gbc.setState(0xa5e5, 0xc4f8, 0x2ea0, 0xa03a, 0x984f, 0x6fc2, 0x0, 0x0);
        gbc.writeMem(0xa5e5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc4f8);
        EXPECT(gbc.pc(), 0xa5e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e5), 0xcb);
        EXPECT(gbc.readMem(0xa5e6), 0x4c);
        // CB 4C 0219
        gbc.setState(0x73e2, 0x2e1c, 0xa630, 0x1b82, 0x1df1, 0x875a, 0x0, 0x1);
        gbc.writeMem(0x73e2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2e1c);
        EXPECT(gbc.pc(), 0x73e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 021A
        gbc.setState(0xbd4b, 0xbdae, 0x22c0, 0x3835, 0x5a75, 0xeb48, 0x0, 0x1);
        gbc.writeMem(0xbd4b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbdae);
        EXPECT(gbc.pc(), 0xbd4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4b), 0xcb);
        EXPECT(gbc.readMem(0xbd4c), 0x4c);
        // CB 4C 021B
        gbc.setState(0x4f11, 0x94c, 0xfda0, 0x9b87, 0x577f, 0x5cbd, 0x1, 0x0);
        gbc.writeMem(0x4f11, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x94c);
        EXPECT(gbc.pc(), 0x4f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 021C
        gbc.setState(0x2fcf, 0xd62e, 0x86e0, 0xd76c, 0xc18c, 0xfcea, 0x0, 0x1);
        gbc.writeMem(0x2fcf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd62e);
        EXPECT(gbc.pc(), 0x2fd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 021D
        gbc.setState(0x354, 0xdf87, 0xd370, 0x180, 0x1609, 0x3e, 0x0, 0x0);
        gbc.writeMem(0x354, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdf87);
        EXPECT(gbc.pc(), 0x356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 021E
        gbc.setState(0x99de, 0x5c00, 0xa040, 0xc88f, 0x9bf5, 0x7430, 0x1, 0x0);
        gbc.writeMem(0x99de, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5c00);
        EXPECT(gbc.pc(), 0x99e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99de), 0xcb);
        EXPECT(gbc.readMem(0x99df), 0x4c);
        // CB 4C 021F
        gbc.setState(0xd9d6, 0x5561, 0xe9e0, 0xbf58, 0x20b5, 0x3d8a, 0x0, 0x1);
        gbc.writeMem(0xd9d6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5561);
        EXPECT(gbc.pc(), 0xd9d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d6), 0xcb);
        EXPECT(gbc.readMem(0xd9d7), 0x4c);
        // CB 4C 0220
        gbc.setState(0x1050, 0x22b8, 0x5ba0, 0x9eb1, 0x1122, 0x2f09, 0x0, 0x0);
        gbc.writeMem(0x1050, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x22b8);
        EXPECT(gbc.pc(), 0x1052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0221
        gbc.setState(0xea52, 0xcd1b, 0x9870, 0xccf4, 0xd671, 0x5ea2, 0x1, 0x1);
        gbc.writeMem(0xea52, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcd1b);
        EXPECT(gbc.pc(), 0xea54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea52), 0xcb);
        EXPECT(gbc.readMem(0xea53), 0x4c);
        // CB 4C 0222
        gbc.setState(0x35d6, 0x15e7, 0xf590, 0x858f, 0x9ff7, 0xd6df, 0x1, 0x0);
        gbc.writeMem(0x35d6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x15e7);
        EXPECT(gbc.pc(), 0x35d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0223
        gbc.setState(0x654c, 0x38a7, 0xeb60, 0xf28b, 0x198, 0x13bf, 0x1, 0x0);
        gbc.writeMem(0x654c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x38a7);
        EXPECT(gbc.pc(), 0x654e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0225
        gbc.setState(0xd8fc, 0x34ec, 0xb1e0, 0x5aeb, 0xc2fc, 0x83bc, 0x0, 0x0);
        gbc.writeMem(0xd8fc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x34ec);
        EXPECT(gbc.pc(), 0xd8fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8fc), 0xcb);
        EXPECT(gbc.readMem(0xd8fd), 0x4c);
        // CB 4C 0226
        gbc.setState(0x451, 0x8365, 0xd570, 0x4740, 0x7b62, 0x6f71, 0x1, 0x1);
        gbc.writeMem(0x451, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8365);
        EXPECT(gbc.pc(), 0x453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0227
        gbc.setState(0x8abb, 0xd0d0, 0x4bd0, 0x8338, 0xbee3, 0xdfaa, 0x1, 0x0);
        gbc.writeMem(0x8abb, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd0d0);
        EXPECT(gbc.pc(), 0x8abd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8abb), 0xcb);
        EXPECT(gbc.readMem(0x8abc), 0x4c);
        // CB 4C 0228
        gbc.setState(0x4a01, 0x54c0, 0xd000, 0x771c, 0x2469, 0xd87b, 0x0, 0x1);
        gbc.writeMem(0x4a01, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x54c0);
        EXPECT(gbc.pc(), 0x4a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0229
        gbc.setState(0x9d10, 0xfda8, 0x40, 0x656a, 0x4d66, 0x6a6, 0x0, 0x1);
        gbc.writeMem(0x9d10, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfda8);
        EXPECT(gbc.pc(), 0x9d12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d10), 0xcb);
        EXPECT(gbc.readMem(0x9d11), 0x4c);
        // CB 4C 022A
        gbc.setState(0x458f, 0x5bd9, 0x9810, 0x6910, 0xe92e, 0x43f2, 0x1, 0x1);
        gbc.writeMem(0x458f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5bd9);
        EXPECT(gbc.pc(), 0x4591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 022B
        gbc.setState(0x4a85, 0xb486, 0x9220, 0x579b, 0x2809, 0x76db, 0x1, 0x0);
        gbc.writeMem(0x4a85, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb486);
        EXPECT(gbc.pc(), 0x4a87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 022C
        gbc.setState(0xc29d, 0xfe26, 0xe040, 0xd659, 0x584f, 0x7949, 0x0, 0x1);
        gbc.writeMem(0xc29d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfe26);
        EXPECT(gbc.pc(), 0xc29f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc29d), 0xcb);
        EXPECT(gbc.readMem(0xc29e), 0x4c);
        // CB 4C 022D
        gbc.setState(0x86ce, 0x73ce, 0x1e60, 0x7d02, 0xb5c0, 0x7d9f, 0x1, 0x1);
        gbc.writeMem(0x86ce, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x73ce);
        EXPECT(gbc.pc(), 0x86d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ce), 0xcb);
        EXPECT(gbc.readMem(0x86cf), 0x4c);
        // CB 4C 022E
        gbc.setState(0x71bd, 0x41fd, 0x72c0, 0xf520, 0xcbc5, 0x434c, 0x1, 0x0);
        gbc.writeMem(0x71bd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x41fd);
        EXPECT(gbc.pc(), 0x71bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 022F
        gbc.setState(0xa7b9, 0xde7f, 0xe7a0, 0xfff6, 0xf3d, 0xd988, 0x1, 0x1);
        gbc.writeMem(0xa7b9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xde7f);
        EXPECT(gbc.pc(), 0xa7bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b9), 0xcb);
        EXPECT(gbc.readMem(0xa7ba), 0x4c);
        // CB 4C 0230
        gbc.setState(0xf2f, 0x4938, 0xb840, 0x1899, 0x2376, 0x8071, 0x0, 0x0);
        gbc.writeMem(0xf2f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4938);
        EXPECT(gbc.pc(), 0xf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0231
        gbc.setState(0xce15, 0x32a0, 0xbda0, 0xbd14, 0xed57, 0x8eef, 0x1, 0x0);
        gbc.writeMem(0xce15, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x32a0);
        EXPECT(gbc.pc(), 0xce17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce15), 0xcb);
        EXPECT(gbc.readMem(0xce16), 0x4c);
        // CB 4C 0232
        gbc.setState(0xc71c, 0x8eb3, 0xac70, 0xee6c, 0x372b, 0x6977, 0x1, 0x1);
        gbc.writeMem(0xc71c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8eb3);
        EXPECT(gbc.pc(), 0xc71e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc71c), 0xcb);
        EXPECT(gbc.readMem(0xc71d), 0x4c);
        // CB 4C 0233
        gbc.setState(0x81fc, 0x5c1c, 0xcdb0, 0xd18d, 0xd570, 0x4844, 0x0, 0x0);
        gbc.writeMem(0x81fc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5c1c);
        EXPECT(gbc.pc(), 0x81fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81fc), 0xcb);
        EXPECT(gbc.readMem(0x81fd), 0x4c);
        // CB 4C 0234
        gbc.setState(0xcf28, 0xc60d, 0xc2a0, 0x8d76, 0x3a66, 0x3e98, 0x1, 0x1);
        gbc.writeMem(0xcf28, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc60d);
        EXPECT(gbc.pc(), 0xcf2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf28), 0xcb);
        EXPECT(gbc.readMem(0xcf29), 0x4c);
        // CB 4C 0235
        gbc.setState(0x8de, 0x6a4c, 0xb820, 0x69c5, 0x135c, 0xd944, 0x0, 0x1);
        gbc.writeMem(0x8de, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6a4c);
        EXPECT(gbc.pc(), 0x8e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0236
        gbc.setState(0x2bc1, 0x6be9, 0x6800, 0xe73a, 0x4ddf, 0x7b15, 0x0, 0x1);
        gbc.writeMem(0x2bc1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6be9);
        EXPECT(gbc.pc(), 0x2bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0237
        gbc.setState(0x7b82, 0x808b, 0x7d40, 0x6b88, 0xe71f, 0x6fc7, 0x0, 0x1);
        gbc.writeMem(0x7b82, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x808b);
        EXPECT(gbc.pc(), 0x7b84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0238
        gbc.setState(0xeffa, 0x9beb, 0x4c10, 0x3f97, 0x5914, 0xdc06, 0x0, 0x1);
        gbc.writeMem(0xeffa, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9beb);
        EXPECT(gbc.pc(), 0xeffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeffa), 0xcb);
        EXPECT(gbc.readMem(0xeffb), 0x4c);
        // CB 4C 0239
        gbc.setState(0x1a42, 0x6bab, 0xbee0, 0x8546, 0x1ef4, 0xc02, 0x0, 0x1);
        gbc.writeMem(0x1a42, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6bab);
        EXPECT(gbc.pc(), 0x1a44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 023A
        gbc.setState(0xa64b, 0x2847, 0xdde0, 0x51b6, 0x93cc, 0xed0d, 0x0, 0x0);
        gbc.writeMem(0xa64b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2847);
        EXPECT(gbc.pc(), 0xa64d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa64b), 0xcb);
        EXPECT(gbc.readMem(0xa64c), 0x4c);
        // CB 4C 023B
        gbc.setState(0xb018, 0x601a, 0xf700, 0x1880, 0x32b9, 0x3446, 0x1, 0x1);
        gbc.writeMem(0xb018, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x601a);
        EXPECT(gbc.pc(), 0xb01a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb018), 0xcb);
        EXPECT(gbc.readMem(0xb019), 0x4c);
        // CB 4C 023C
        gbc.setState(0xaca3, 0xdff9, 0xc6c0, 0xa13d, 0xf90f, 0xc753, 0x1, 0x1);
        gbc.writeMem(0xaca3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdff9);
        EXPECT(gbc.pc(), 0xaca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca3), 0xcb);
        EXPECT(gbc.readMem(0xaca4), 0x4c);
        // CB 4C 023D
        gbc.setState(0x840c, 0xe619, 0xafc0, 0x26c9, 0x662d, 0xf8e7, 0x1, 0x0);
        gbc.writeMem(0x840c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe619);
        EXPECT(gbc.pc(), 0x840e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840c), 0xcb);
        EXPECT(gbc.readMem(0x840d), 0x4c);
        // CB 4C 023E
        gbc.setState(0x46e6, 0xca6b, 0xcc50, 0x6f3e, 0x8432, 0xdf7d, 0x1, 0x0);
        gbc.writeMem(0x46e6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xca6b);
        EXPECT(gbc.pc(), 0x46e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 023F
        gbc.setState(0x7dee, 0xdfb3, 0x2f00, 0xfc00, 0x8547, 0x4373, 0x0, 0x0);
        gbc.writeMem(0x7dee, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xdfb3);
        EXPECT(gbc.pc(), 0x7df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0240
        gbc.setState(0x2bce, 0xdc7c, 0xf760, 0x7dd8, 0xbe6f, 0x17c0, 0x0, 0x1);
        gbc.writeMem(0x2bce, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xdc7c);
        EXPECT(gbc.pc(), 0x2bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0241
        gbc.setState(0x6deb, 0xd0ea, 0xa840, 0xf132, 0x9dd8, 0x1cda, 0x0, 0x0);
        gbc.writeMem(0x6deb, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd0ea);
        EXPECT(gbc.pc(), 0x6ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0242
        gbc.setState(0x22cd, 0x269f, 0xca30, 0x859c, 0x8d05, 0xfe6d, 0x1, 0x0);
        gbc.writeMem(0x22cd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x269f);
        EXPECT(gbc.pc(), 0x22cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0243
        gbc.setState(0xe759, 0xe78e, 0x66a0, 0x8625, 0xed2a, 0xedd0, 0x1, 0x0);
        gbc.writeMem(0xe759, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe78e);
        EXPECT(gbc.pc(), 0xe75b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe759), 0xcb);
        EXPECT(gbc.readMem(0xe75a), 0x4c);
        // CB 4C 0244
        gbc.setState(0x5954, 0xf563, 0x2d20, 0xfa9d, 0x74fa, 0xf562, 0x0, 0x1);
        gbc.writeMem(0x5954, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf563);
        EXPECT(gbc.pc(), 0x5956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0245
        gbc.setState(0x5e11, 0x6b39, 0xfc40, 0xdd55, 0xdb2a, 0x88f6, 0x0, 0x0);
        gbc.writeMem(0x5e11, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6b39);
        EXPECT(gbc.pc(), 0x5e13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0246
        gbc.setState(0x7598, 0x4965, 0xd4b0, 0xb733, 0x5b0d, 0xb808, 0x1, 0x0);
        gbc.writeMem(0x7598, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4965);
        EXPECT(gbc.pc(), 0x759a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0247
        gbc.setState(0xcc0, 0xff35, 0xc490, 0x12f6, 0xfcf7, 0x7222, 0x1, 0x0);
        gbc.writeMem(0xcc0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xff35);
        EXPECT(gbc.pc(), 0xcc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0248
        gbc.setState(0x9eac, 0xf0d4, 0x1f40, 0xd627, 0x5afe, 0xd4f6, 0x1, 0x1);
        gbc.writeMem(0x9eac, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf0d4);
        EXPECT(gbc.pc(), 0x9eae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eac), 0xcb);
        EXPECT(gbc.readMem(0x9ead), 0x4c);
        // CB 4C 0249
        gbc.setState(0x2035, 0xa8a3, 0xa230, 0x8a21, 0xed7a, 0xa26c, 0x1, 0x1);
        gbc.writeMem(0x2035, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa8a3);
        EXPECT(gbc.pc(), 0x2037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 024A
        gbc.setState(0x22b7, 0x6ba6, 0xaa90, 0xee11, 0x2852, 0xb2ad, 0x0, 0x0);
        gbc.writeMem(0x22b7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6ba6);
        EXPECT(gbc.pc(), 0x22b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 024B
        gbc.setState(0x8141, 0xd0be, 0x12e0, 0xb440, 0xf84f, 0xde0a, 0x0, 0x0);
        gbc.writeMem(0x8141, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd0be);
        EXPECT(gbc.pc(), 0x8143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8141), 0xcb);
        EXPECT(gbc.readMem(0x8142), 0x4c);
        // CB 4C 024D
        gbc.setState(0x2d85, 0xb6c4, 0x3290, 0x696f, 0xe3f7, 0xcc34, 0x0, 0x0);
        gbc.writeMem(0x2d85, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb6c4);
        EXPECT(gbc.pc(), 0x2d87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0250
        gbc.setState(0x8ff5, 0xffda, 0x5350, 0xb4b9, 0x5078, 0xb415, 0x1, 0x0);
        gbc.writeMem(0x8ff5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xffda);
        EXPECT(gbc.pc(), 0x8ff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff5), 0xcb);
        EXPECT(gbc.readMem(0x8ff6), 0x4c);
        // CB 4C 0251
        gbc.setState(0xe7c4, 0xd7ac, 0xa5f0, 0xbf40, 0xfee5, 0xe61f, 0x1, 0x0);
        gbc.writeMem(0xe7c4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd7ac);
        EXPECT(gbc.pc(), 0xe7c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c4), 0xcb);
        EXPECT(gbc.readMem(0xe7c5), 0x4c);
        // CB 4C 0252
        gbc.setState(0xc0ff, 0xbb8b, 0x9a00, 0x2980, 0x80e9, 0xf642, 0x1, 0x0);
        gbc.writeMem(0xc0ff, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xbb8b);
        EXPECT(gbc.pc(), 0xc101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ff), 0xcb);
        EXPECT(gbc.readMem(0xc100), 0x4c);
        // CB 4C 0253
        gbc.setState(0x8727, 0xb36d, 0x65d0, 0xd912, 0xab04, 0x7b8d, 0x1, 0x0);
        gbc.writeMem(0x8727, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb36d);
        EXPECT(gbc.pc(), 0x8729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8727), 0xcb);
        EXPECT(gbc.readMem(0x8728), 0x4c);
        // CB 4C 0254
        gbc.setState(0xdaf1, 0xc1c, 0x80c0, 0x2d5d, 0xce25, 0xb8dc, 0x0, 0x0);
        gbc.writeMem(0xdaf1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc1c);
        EXPECT(gbc.pc(), 0xdaf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf1), 0xcb);
        EXPECT(gbc.readMem(0xdaf2), 0x4c);
        // CB 4C 0255
        gbc.setState(0x7f3a, 0x4369, 0x9470, 0x35fe, 0x284a, 0xe6c3, 0x1, 0x0);
        gbc.writeMem(0x7f3a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4369);
        EXPECT(gbc.pc(), 0x7f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0256
        gbc.setState(0x18b2, 0x94f0, 0xbf30, 0x6754, 0xa83e, 0x3365, 0x1, 0x0);
        gbc.writeMem(0x18b2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x94f0);
        EXPECT(gbc.pc(), 0x18b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0257
        gbc.setState(0xd307, 0x9569, 0x75b0, 0x4bb1, 0x7e4, 0x9848, 0x1, 0x1);
        gbc.writeMem(0xd307, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9569);
        EXPECT(gbc.pc(), 0xd309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd307), 0xcb);
        EXPECT(gbc.readMem(0xd308), 0x4c);
        // CB 4C 0258
        gbc.setState(0xdc9e, 0x8a8, 0x3ee0, 0x9e90, 0xcd03, 0xc589, 0x1, 0x0);
        gbc.writeMem(0xdc9e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8a8);
        EXPECT(gbc.pc(), 0xdca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc9e), 0xcb);
        EXPECT(gbc.readMem(0xdc9f), 0x4c);
        // CB 4C 0259
        gbc.setState(0x4e5c, 0xd489, 0xf9b0, 0x605d, 0x247f, 0x5e86, 0x0, 0x0);
        gbc.writeMem(0x4e5c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd489);
        EXPECT(gbc.pc(), 0x4e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 025A
        gbc.setState(0x44fe, 0x28b1, 0x63d0, 0xa62, 0x3c48, 0x4341, 0x1, 0x1);
        gbc.writeMem(0x44fe, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x28b1);
        EXPECT(gbc.pc(), 0x4500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 025B
        gbc.setState(0x1745, 0x1f07, 0xa1c0, 0xaf90, 0xb2cb, 0x877d, 0x1, 0x0);
        gbc.writeMem(0x1745, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1f07);
        EXPECT(gbc.pc(), 0x1747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 025C
        gbc.setState(0x912a, 0xde05, 0x19b0, 0x292c, 0x8225, 0xa1b6, 0x1, 0x1);
        gbc.writeMem(0x912a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xde05);
        EXPECT(gbc.pc(), 0x912c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912a), 0xcb);
        EXPECT(gbc.readMem(0x912b), 0x4c);
        // CB 4C 025D
        gbc.setState(0x7911, 0x5821, 0xf430, 0xe0fd, 0xb56c, 0x424b, 0x0, 0x1);
        gbc.writeMem(0x7911, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5821);
        EXPECT(gbc.pc(), 0x7913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 025F
        gbc.setState(0xd5b, 0xcbce, 0x7f30, 0x980b, 0x78ec, 0xfa98, 0x1, 0x0);
        gbc.writeMem(0xd5b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcbce);
        EXPECT(gbc.pc(), 0xd5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0260
        gbc.setState(0x43df, 0x82c8, 0xd190, 0x33f2, 0x6756, 0xc250, 0x0, 0x1);
        gbc.writeMem(0x43df, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x82c8);
        EXPECT(gbc.pc(), 0x43e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0261
        gbc.setState(0xc1bd, 0xa7e5, 0xd830, 0x80a1, 0xe4d, 0x1cfe, 0x0, 0x0);
        gbc.writeMem(0xc1bd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa7e5);
        EXPECT(gbc.pc(), 0xc1bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1bd), 0xcb);
        EXPECT(gbc.readMem(0xc1be), 0x4c);
        // CB 4C 0262
        gbc.setState(0x4492, 0xa133, 0x53a0, 0x8ae5, 0xef2d, 0xcf70, 0x0, 0x0);
        gbc.writeMem(0x4492, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa133);
        EXPECT(gbc.pc(), 0x4494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0263
        gbc.setState(0x2519, 0xb877, 0x5590, 0x273d, 0xb436, 0x7e12, 0x1, 0x1);
        gbc.writeMem(0x2519, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb877);
        EXPECT(gbc.pc(), 0x251b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0264
        gbc.setState(0xe01b, 0xecad, 0x13c0, 0x4a52, 0x2f52, 0x1ee9, 0x1, 0x1);
        gbc.writeMem(0xe01b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xecad);
        EXPECT(gbc.pc(), 0xe01d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01b), 0xcb);
        EXPECT(gbc.readMem(0xe01c), 0x4c);
        // CB 4C 0265
        gbc.setState(0xa804, 0xf7a1, 0xbc40, 0x403b, 0x3578, 0xf4e5, 0x0, 0x0);
        gbc.writeMem(0xa804, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf7a1);
        EXPECT(gbc.pc(), 0xa806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa804), 0xcb);
        EXPECT(gbc.readMem(0xa805), 0x4c);
        // CB 4C 0266
        gbc.setState(0xac1e, 0x2545, 0xe920, 0x1247, 0xe53b, 0x940c, 0x0, 0x1);
        gbc.writeMem(0xac1e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2545);
        EXPECT(gbc.pc(), 0xac20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac1e), 0xcb);
        EXPECT(gbc.readMem(0xac1f), 0x4c);
        // CB 4C 0267
        gbc.setState(0x32ce, 0x29bc, 0xc710, 0xd054, 0x9b9, 0xfdb3, 0x0, 0x0);
        gbc.writeMem(0x32ce, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x29bc);
        EXPECT(gbc.pc(), 0x32d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0268
        gbc.setState(0x1ca2, 0xebb, 0x3a50, 0xe671, 0xef55, 0x738b, 0x0, 0x1);
        gbc.writeMem(0x1ca2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xebb);
        EXPECT(gbc.pc(), 0x1ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0269
        gbc.setState(0x7a32, 0x38e, 0x38f0, 0x7a8f, 0x3f7b, 0x8894, 0x0, 0x1);
        gbc.writeMem(0x7a32, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x38e);
        EXPECT(gbc.pc(), 0x7a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 026A
        gbc.setState(0x1a1c, 0xc55e, 0x7900, 0x1442, 0x9541, 0xdfc8, 0x0, 0x1);
        gbc.writeMem(0x1a1c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc55e);
        EXPECT(gbc.pc(), 0x1a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 026B
        gbc.setState(0x3f4b, 0x865d, 0x6c80, 0xef5a, 0x70a6, 0xdfe4, 0x0, 0x0);
        gbc.writeMem(0x3f4b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x865d);
        EXPECT(gbc.pc(), 0x3f4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 026C
        gbc.setState(0x116c, 0x832c, 0x9cc0, 0xc0c4, 0x55e1, 0x8db0, 0x1, 0x0);
        gbc.writeMem(0x116c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x832c);
        EXPECT(gbc.pc(), 0x116e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 026D
        gbc.setState(0x30ff, 0x2d43, 0x9130, 0x547, 0x9566, 0xc4ea, 0x0, 0x1);
        gbc.writeMem(0x30ff, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2d43);
        EXPECT(gbc.pc(), 0x3101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 026E
        gbc.setState(0x4fc9, 0x1e2f, 0x6430, 0x57a4, 0x4456, 0xead4, 0x1, 0x1);
        gbc.writeMem(0x4fc9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1e2f);
        EXPECT(gbc.pc(), 0x4fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 026F
        gbc.setState(0x99b6, 0x926f, 0x5ae0, 0xc07f, 0xafe6, 0x2dc8, 0x0, 0x0);
        gbc.writeMem(0x99b6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x926f);
        EXPECT(gbc.pc(), 0x99b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b6), 0xcb);
        EXPECT(gbc.readMem(0x99b7), 0x4c);
        // CB 4C 0271
        gbc.setState(0x23bf, 0x5f57, 0xb930, 0xfda6, 0x2aca, 0xcaf4, 0x1, 0x0);
        gbc.writeMem(0x23bf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5f57);
        EXPECT(gbc.pc(), 0x23c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0272
        gbc.setState(0x12d7, 0x40c8, 0xd4c0, 0x99f1, 0xb9e5, 0xab41, 0x1, 0x0);
        gbc.writeMem(0x12d7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x40c8);
        EXPECT(gbc.pc(), 0x12d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0273
        gbc.setState(0x84de, 0x9424, 0x9050, 0x1e47, 0x31a4, 0x59be, 0x0, 0x1);
        gbc.writeMem(0x84de, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9424);
        EXPECT(gbc.pc(), 0x84e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84de), 0xcb);
        EXPECT(gbc.readMem(0x84df), 0x4c);
        // CB 4C 0274
        gbc.setState(0xe3da, 0x5e93, 0x67c0, 0xf63c, 0xb476, 0xef33, 0x1, 0x0);
        gbc.writeMem(0xe3da, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5e93);
        EXPECT(gbc.pc(), 0xe3dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3da), 0xcb);
        EXPECT(gbc.readMem(0xe3db), 0x4c);
        // CB 4C 0275
        gbc.setState(0x9c69, 0x8b13, 0x27a0, 0x8167, 0x7948, 0x7b4, 0x1, 0x0);
        gbc.writeMem(0x9c69, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8b13);
        EXPECT(gbc.pc(), 0x9c6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c69), 0xcb);
        EXPECT(gbc.readMem(0x9c6a), 0x4c);
        // CB 4C 0276
        gbc.setState(0x1385, 0xa246, 0x7df0, 0x578, 0x740e, 0x3a9b, 0x0, 0x0);
        gbc.writeMem(0x1385, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa246);
        EXPECT(gbc.pc(), 0x1387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0277
        gbc.setState(0x456f, 0xc746, 0x22b0, 0xf936, 0xbf2d, 0x4c55, 0x1, 0x1);
        gbc.writeMem(0x456f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc746);
        EXPECT(gbc.pc(), 0x4571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0278
        gbc.setState(0x1104, 0x8d43, 0xa4e0, 0x4c74, 0xbbfb, 0x7a9e, 0x0, 0x0);
        gbc.writeMem(0x1104, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8d43);
        EXPECT(gbc.pc(), 0x1106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0279
        gbc.setState(0x7780, 0x8184, 0xe4e0, 0xa2e, 0x334d, 0x2fb0, 0x1, 0x0);
        gbc.writeMem(0x7780, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8184);
        EXPECT(gbc.pc(), 0x7782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 027A
        gbc.setState(0x5917, 0x3f3c, 0xc6f0, 0x3ce5, 0x8232, 0x75ca, 0x0, 0x1);
        gbc.writeMem(0x5917, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3f3c);
        EXPECT(gbc.pc(), 0x5919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 027B
        gbc.setState(0x1f1f, 0x8c37, 0xc030, 0x6a6, 0x7994, 0x78bc, 0x0, 0x0);
        gbc.writeMem(0x1f1f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8c37);
        EXPECT(gbc.pc(), 0x1f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 027C
        gbc.setState(0x817d, 0xa533, 0x3970, 0xb3da, 0xd996, 0x9244, 0x1, 0x0);
        gbc.writeMem(0x817d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa533);
        EXPECT(gbc.pc(), 0x817f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x817d), 0xcb);
        EXPECT(gbc.readMem(0x817e), 0x4c);
        // CB 4C 027D
        gbc.setState(0x4252, 0x7b43, 0x4d0, 0x9ff4, 0x9b5f, 0x23f1, 0x0, 0x0);
        gbc.writeMem(0x4252, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7b43);
        EXPECT(gbc.pc(), 0x4254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 027E
        gbc.setState(0x83ee, 0x7539, 0x320, 0xf8b2, 0x5c46, 0x84cf, 0x0, 0x1);
        gbc.writeMem(0x83ee, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7539);
        EXPECT(gbc.pc(), 0x83f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ee), 0xcb);
        EXPECT(gbc.readMem(0x83ef), 0x4c);
        // CB 4C 027F
        gbc.setState(0x3aa2, 0x2180, 0xf2e0, 0xb5e2, 0xed0b, 0xe90b, 0x1, 0x0);
        gbc.writeMem(0x3aa2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2180);
        EXPECT(gbc.pc(), 0x3aa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0280
        gbc.setState(0x4a44, 0x3cb, 0x1650, 0xd47e, 0x2e2f, 0xf76a, 0x0, 0x0);
        gbc.writeMem(0x4a44, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3cb);
        EXPECT(gbc.pc(), 0x4a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0281
        gbc.setState(0xda7e, 0xea6f, 0xa450, 0xf90a, 0x1c10, 0xea81, 0x1, 0x0);
        gbc.writeMem(0xda7e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xea6f);
        EXPECT(gbc.pc(), 0xda80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda7e), 0xcb);
        EXPECT(gbc.readMem(0xda7f), 0x4c);
        // CB 4C 0282
        gbc.setState(0x9a16, 0xd085, 0x68a0, 0xaaff, 0x6467, 0x7468, 0x0, 0x1);
        gbc.writeMem(0x9a16, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd085);
        EXPECT(gbc.pc(), 0x9a18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a16), 0xcb);
        EXPECT(gbc.readMem(0x9a17), 0x4c);
        // CB 4C 0283
        gbc.setState(0xeaee, 0x3309, 0x7850, 0x3f7b, 0x80f8, 0x2748, 0x1, 0x1);
        gbc.writeMem(0xeaee, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3309);
        EXPECT(gbc.pc(), 0xeaf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaee), 0xcb);
        EXPECT(gbc.readMem(0xeaef), 0x4c);
        // CB 4C 0284
        gbc.setState(0x9f4d, 0xf3f5, 0x3260, 0xb004, 0x7b86, 0xaa5a, 0x1, 0x1);
        gbc.writeMem(0x9f4d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf3f5);
        EXPECT(gbc.pc(), 0x9f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f4d), 0xcb);
        EXPECT(gbc.readMem(0x9f4e), 0x4c);
        // CB 4C 0285
        gbc.setState(0xd42e, 0xfc4a, 0xf540, 0xe6f5, 0xac4f, 0x8795, 0x1, 0x1);
        gbc.writeMem(0xd42e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfc4a);
        EXPECT(gbc.pc(), 0xd430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd42e), 0xcb);
        EXPECT(gbc.readMem(0xd42f), 0x4c);
        // CB 4C 0286
        gbc.setState(0x263, 0x25b0, 0x6a00, 0xfe30, 0x57ca, 0x93f2, 0x1, 0x0);
        gbc.writeMem(0x263, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x25b0);
        EXPECT(gbc.pc(), 0x265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0287
        gbc.setState(0x4d5d, 0xab9c, 0x8860, 0xd3b1, 0x6a94, 0x6864, 0x1, 0x0);
        gbc.writeMem(0x4d5d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xab9c);
        EXPECT(gbc.pc(), 0x4d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0289
        gbc.setState(0x117c, 0x7aff, 0x7c10, 0x52d2, 0xae93, 0x9e34, 0x0, 0x1);
        gbc.writeMem(0x117c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7aff);
        EXPECT(gbc.pc(), 0x117e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 028A
        gbc.setState(0xcd4f, 0xb209, 0x4670, 0x5bac, 0x77ff, 0xb3de, 0x0, 0x1);
        gbc.writeMem(0xcd4f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb209);
        EXPECT(gbc.pc(), 0xcd51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4f), 0xcb);
        EXPECT(gbc.readMem(0xcd50), 0x4c);
        // CB 4C 028B
        gbc.setState(0x505, 0xe8e7, 0x6230, 0x18de, 0xb525, 0x8993, 0x1, 0x1);
        gbc.writeMem(0x505, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe8e7);
        EXPECT(gbc.pc(), 0x507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 028C
        gbc.setState(0x7b2a, 0xce76, 0xa330, 0x660c, 0xfa11, 0xcee4, 0x1, 0x1);
        gbc.writeMem(0x7b2a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xce76);
        EXPECT(gbc.pc(), 0x7b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 028D
        gbc.setState(0x677a, 0xd6ed, 0x8490, 0x1e9c, 0xc6c1, 0x3be7, 0x1, 0x1);
        gbc.writeMem(0x677a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd6ed);
        EXPECT(gbc.pc(), 0x677c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 028E
        gbc.setState(0xa535, 0xb8c7, 0x3930, 0xba64, 0x10af, 0xa75f, 0x0, 0x0);
        gbc.writeMem(0xa535, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb8c7);
        EXPECT(gbc.pc(), 0xa537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa535), 0xcb);
        EXPECT(gbc.readMem(0xa536), 0x4c);
        // CB 4C 028F
        gbc.setState(0x8174, 0x836e, 0xe0c0, 0xd73e, 0x790e, 0x7b70, 0x1, 0x1);
        gbc.writeMem(0x8174, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x836e);
        EXPECT(gbc.pc(), 0x8176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8174), 0xcb);
        EXPECT(gbc.readMem(0x8175), 0x4c);
        // CB 4C 0290
        gbc.setState(0x9fe1, 0xaa09, 0xea20, 0xaf7, 0x8d16, 0xe8be, 0x1, 0x0);
        gbc.writeMem(0x9fe1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xaa09);
        EXPECT(gbc.pc(), 0x9fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe1), 0xcb);
        EXPECT(gbc.readMem(0x9fe2), 0x4c);
        // CB 4C 0291
        gbc.setState(0xa77d, 0x4dcc, 0xdc20, 0x1171, 0xe426, 0xbea7, 0x0, 0x0);
        gbc.writeMem(0xa77d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4dcc);
        EXPECT(gbc.pc(), 0xa77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa77d), 0xcb);
        EXPECT(gbc.readMem(0xa77e), 0x4c);
        // CB 4C 0292
        gbc.setState(0x61ad, 0x510f, 0x8780, 0x64b, 0x1586, 0xb373, 0x1, 0x0);
        gbc.writeMem(0x61ad, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x510f);
        EXPECT(gbc.pc(), 0x61af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0293
        gbc.setState(0x21e7, 0xe491, 0xe820, 0x42ee, 0x5f11, 0x8a7f, 0x1, 0x1);
        gbc.writeMem(0x21e7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe491);
        EXPECT(gbc.pc(), 0x21e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0294
        gbc.setState(0x55ad, 0xde0e, 0x6a20, 0x135d, 0xa9a0, 0x47ff, 0x0, 0x0);
        gbc.writeMem(0x55ad, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xde0e);
        EXPECT(gbc.pc(), 0x55af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0295
        gbc.setState(0x7e50, 0x2ee4, 0x540, 0xe23c, 0x573e, 0x731e, 0x0, 0x0);
        gbc.writeMem(0x7e50, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2ee4);
        EXPECT(gbc.pc(), 0x7e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0296
        gbc.setState(0x5479, 0xbe23, 0x78c0, 0xae24, 0x553c, 0x4640, 0x1, 0x0);
        gbc.writeMem(0x5479, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbe23);
        EXPECT(gbc.pc(), 0x547b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0297
        gbc.setState(0x4757, 0x7b1e, 0x6130, 0x6011, 0xf395, 0x6dbd, 0x1, 0x1);
        gbc.writeMem(0x4757, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7b1e);
        EXPECT(gbc.pc(), 0x4759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0298
        gbc.setState(0xc793, 0xad5, 0xd170, 0x54b3, 0x50c8, 0x6a, 0x0, 0x1);
        gbc.writeMem(0xc793, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xad5);
        EXPECT(gbc.pc(), 0xc795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc793), 0xcb);
        EXPECT(gbc.readMem(0xc794), 0x4c);
        // CB 4C 0299
        gbc.setState(0x3e4e, 0x992c, 0xd7d0, 0xacc5, 0x3334, 0xeb1c, 0x0, 0x1);
        gbc.writeMem(0x3e4e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x992c);
        EXPECT(gbc.pc(), 0x3e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 029A
        gbc.setState(0x25cc, 0x480f, 0x96f0, 0xd7be, 0x4c07, 0x2b78, 0x0, 0x1);
        gbc.writeMem(0x25cc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x480f);
        EXPECT(gbc.pc(), 0x25ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 029B
        gbc.setState(0x20c8, 0xe573, 0x11f0, 0x437a, 0xed46, 0x5113, 0x0, 0x0);
        gbc.writeMem(0x20c8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe573);
        EXPECT(gbc.pc(), 0x20ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 029C
        gbc.setState(0xadee, 0x9912, 0xe740, 0x167c, 0x2979, 0x884b, 0x1, 0x1);
        gbc.writeMem(0xadee, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9912);
        EXPECT(gbc.pc(), 0xadf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadee), 0xcb);
        EXPECT(gbc.readMem(0xadef), 0x4c);
        // CB 4C 029D
        gbc.setState(0x44d2, 0x24e9, 0x280, 0x967b, 0x59e1, 0xe6eb, 0x1, 0x1);
        gbc.writeMem(0x44d2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x24e9);
        EXPECT(gbc.pc(), 0x44d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 029F
        gbc.setState(0xa80d, 0xa9b9, 0x7700, 0x64e6, 0xc142, 0x94c6, 0x0, 0x1);
        gbc.writeMem(0xa80d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa9b9);
        EXPECT(gbc.pc(), 0xa80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa80d), 0xcb);
        EXPECT(gbc.readMem(0xa80e), 0x4c);
        // CB 4C 02A0
        gbc.setState(0xa9f5, 0xa77e, 0xf040, 0x13c, 0x955a, 0xb25d, 0x0, 0x0);
        gbc.writeMem(0xa9f5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa77e);
        EXPECT(gbc.pc(), 0xa9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f5), 0xcb);
        EXPECT(gbc.readMem(0xa9f6), 0x4c);
        // CB 4C 02A1
        gbc.setState(0xa938, 0x4cdb, 0x40c0, 0x6cc6, 0xf9f2, 0xc60d, 0x0, 0x0);
        gbc.writeMem(0xa938, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4cdb);
        EXPECT(gbc.pc(), 0xa93a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa938), 0xcb);
        EXPECT(gbc.readMem(0xa939), 0x4c);
        // CB 4C 02A2
        gbc.setState(0x324, 0x33d4, 0xaba0, 0x2db9, 0x81f2, 0x84a3, 0x1, 0x1);
        gbc.writeMem(0x324, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x33d4);
        EXPECT(gbc.pc(), 0x326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02A3
        gbc.setState(0x7a8c, 0xc00b, 0xd250, 0x8af1, 0x2d52, 0xd5bd, 0x0, 0x0);
        gbc.writeMem(0x7a8c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc00b);
        EXPECT(gbc.pc(), 0x7a8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02A4
        gbc.setState(0x3560, 0x934c, 0x32d0, 0x82d3, 0xc36, 0xc326, 0x0, 0x0);
        gbc.writeMem(0x3560, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x934c);
        EXPECT(gbc.pc(), 0x3562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02A5
        gbc.setState(0xd559, 0x98be, 0x1ea0, 0x78de, 0x9daf, 0xe515, 0x1, 0x1);
        gbc.writeMem(0xd559, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x98be);
        EXPECT(gbc.pc(), 0xd55b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd559), 0xcb);
        EXPECT(gbc.readMem(0xd55a), 0x4c);
        // CB 4C 02A6
        gbc.setState(0x6bf, 0xc121, 0x1940, 0xc0dc, 0x86e9, 0x8baa, 0x0, 0x0);
        gbc.writeMem(0x6bf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc121);
        EXPECT(gbc.pc(), 0x6c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02A7
        gbc.setState(0x9f33, 0xc36, 0x9aa0, 0x535c, 0x8bdb, 0x685, 0x1, 0x0);
        gbc.writeMem(0x9f33, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc36);
        EXPECT(gbc.pc(), 0x9f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f33), 0xcb);
        EXPECT(gbc.readMem(0x9f34), 0x4c);
        // CB 4C 02A8
        gbc.setState(0x1749, 0xf163, 0x8010, 0xef8a, 0xf55, 0x9796, 0x0, 0x0);
        gbc.writeMem(0x1749, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf163);
        EXPECT(gbc.pc(), 0x174b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02A9
        gbc.setState(0x564b, 0x9c7e, 0xd1d0, 0x7c06, 0x581d, 0x3d52, 0x1, 0x1);
        gbc.writeMem(0x564b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9c7e);
        EXPECT(gbc.pc(), 0x564d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02AA
        gbc.setState(0x8400, 0x2f2a, 0xd070, 0x7787, 0x6fca, 0x35cc, 0x0, 0x1);
        gbc.writeMem(0x8400, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2f2a);
        EXPECT(gbc.pc(), 0x8402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8400), 0xcb);
        EXPECT(gbc.readMem(0x8401), 0x4c);
        // CB 4C 02AB
        gbc.setState(0x3d29, 0x2a05, 0x1310, 0x4026, 0x1fad, 0x432c, 0x1, 0x0);
        gbc.writeMem(0x3d29, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2a05);
        EXPECT(gbc.pc(), 0x3d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02AC
        gbc.setState(0xe1d, 0x8e4d, 0xb510, 0x9b5c, 0x6b42, 0xa70d, 0x1, 0x1);
        gbc.writeMem(0xe1d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8e4d);
        EXPECT(gbc.pc(), 0xe1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02AD
        gbc.setState(0x67ec, 0x9df5, 0x5970, 0xfb3e, 0x7931, 0x1bce, 0x1, 0x0);
        gbc.writeMem(0x67ec, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9df5);
        EXPECT(gbc.pc(), 0x67ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02AE
        gbc.setState(0x47d6, 0x9b11, 0x6e20, 0x806f, 0x1a2d, 0x16cb, 0x0, 0x0);
        gbc.writeMem(0x47d6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9b11);
        EXPECT(gbc.pc(), 0x47d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02AF
        gbc.setState(0xabc0, 0x3833, 0xed40, 0xe74a, 0x939b, 0x78d8, 0x0, 0x1);
        gbc.writeMem(0xabc0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3833);
        EXPECT(gbc.pc(), 0xabc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc0), 0xcb);
        EXPECT(gbc.readMem(0xabc1), 0x4c);
        // CB 4C 02B0
        gbc.setState(0x9587, 0x93ff, 0x9e00, 0xf3fc, 0x50dd, 0x3189, 0x1, 0x0);
        gbc.writeMem(0x9587, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x93ff);
        EXPECT(gbc.pc(), 0x9589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9587), 0xcb);
        EXPECT(gbc.readMem(0x9588), 0x4c);
        // CB 4C 02B1
        gbc.setState(0xb016, 0x1fb1, 0x2580, 0xbecb, 0xf645, 0x2b54, 0x0, 0x0);
        gbc.writeMem(0xb016, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1fb1);
        EXPECT(gbc.pc(), 0xb018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb016), 0xcb);
        EXPECT(gbc.readMem(0xb017), 0x4c);
        // CB 4C 02B2
        gbc.setState(0xb4a3, 0x76a2, 0xbf0, 0xf1cf, 0xe829, 0x18f7, 0x0, 0x0);
        gbc.writeMem(0xb4a3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x76a2);
        EXPECT(gbc.pc(), 0xb4a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a3), 0xcb);
        EXPECT(gbc.readMem(0xb4a4), 0x4c);
        // CB 4C 02B4
        gbc.setState(0x7240, 0x83f5, 0xcb20, 0x7b, 0x52ad, 0x805e, 0x0, 0x0);
        gbc.writeMem(0x7240, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x83f5);
        EXPECT(gbc.pc(), 0x7242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02B5
        gbc.setState(0xd47e, 0x20cb, 0x2e70, 0x770f, 0xc18a, 0x289b, 0x0, 0x1);
        gbc.writeMem(0xd47e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x20cb);
        EXPECT(gbc.pc(), 0xd480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47e), 0xcb);
        EXPECT(gbc.readMem(0xd47f), 0x4c);
        // CB 4C 02B6
        gbc.setState(0xd2d8, 0x95d4, 0xe070, 0x4fe5, 0x6c6a, 0xea4, 0x0, 0x0);
        gbc.writeMem(0xd2d8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x95d4);
        EXPECT(gbc.pc(), 0xd2da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2d8), 0xcb);
        EXPECT(gbc.readMem(0xd2d9), 0x4c);
        // CB 4C 02B8
        gbc.setState(0x499c, 0xe624, 0x1170, 0x17c2, 0xa00a, 0x7758, 0x0, 0x0);
        gbc.writeMem(0x499c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe624);
        EXPECT(gbc.pc(), 0x499e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02B9
        gbc.setState(0x4ffe, 0xad56, 0x9940, 0xa7aa, 0x9a96, 0x384c, 0x0, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xad56);
        EXPECT(gbc.pc(), 0x5000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02BA
        gbc.setState(0xec4b, 0xe4a0, 0x8bd0, 0x31e0, 0xb08c, 0x8238, 0x1, 0x0);
        gbc.writeMem(0xec4b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe4a0);
        EXPECT(gbc.pc(), 0xec4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec4b), 0xcb);
        EXPECT(gbc.readMem(0xec4c), 0x4c);
        // CB 4C 02BB
        gbc.setState(0x81f5, 0xfef2, 0x3520, 0x1f49, 0xf043, 0x22c0, 0x1, 0x0);
        gbc.writeMem(0x81f5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfef2);
        EXPECT(gbc.pc(), 0x81f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f5), 0xcb);
        EXPECT(gbc.readMem(0x81f6), 0x4c);
        // CB 4C 02BC
        gbc.setState(0x21da, 0x81da, 0xd9e0, 0xcbf1, 0xc621, 0x4c88, 0x0, 0x0);
        gbc.writeMem(0x21da, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x81da);
        EXPECT(gbc.pc(), 0x21dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02BD
        gbc.setState(0x3f10, 0xe7fa, 0x6e0, 0x9e20, 0xee5d, 0x8110, 0x0, 0x0);
        gbc.writeMem(0x3f10, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe7fa);
        EXPECT(gbc.pc(), 0x3f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02BE
        gbc.setState(0xaaa2, 0x359d, 0x850, 0x6716, 0xb033, 0x3846, 0x0, 0x0);
        gbc.writeMem(0xaaa2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x359d);
        EXPECT(gbc.pc(), 0xaaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa2), 0xcb);
        EXPECT(gbc.readMem(0xaaa3), 0x4c);
        // CB 4C 02C0
        gbc.setState(0x21ae, 0x2296, 0x2150, 0x590a, 0x7cf6, 0x5f2a, 0x0, 0x0);
        gbc.writeMem(0x21ae, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2296);
        EXPECT(gbc.pc(), 0x21b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02C1
        gbc.setState(0xad9d, 0x1f88, 0xac80, 0x2c30, 0x740c, 0x9728, 0x1, 0x0);
        gbc.writeMem(0xad9d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1f88);
        EXPECT(gbc.pc(), 0xad9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad9d), 0xcb);
        EXPECT(gbc.readMem(0xad9e), 0x4c);
        // CB 4C 02C2
        gbc.setState(0xd427, 0x11c7, 0xb2d0, 0x94f9, 0x2952, 0xd272, 0x0, 0x1);
        gbc.writeMem(0xd427, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x11c7);
        EXPECT(gbc.pc(), 0xd429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd427), 0xcb);
        EXPECT(gbc.readMem(0xd428), 0x4c);
        // CB 4C 02C3
        gbc.setState(0x6750, 0xccf8, 0x1fa0, 0x6790, 0x9d9c, 0x8d83, 0x1, 0x1);
        gbc.writeMem(0x6750, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xccf8);
        EXPECT(gbc.pc(), 0x6752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02C4
        gbc.setState(0x2506, 0x7fa2, 0x91f0, 0xde02, 0x5508, 0x8ce2, 0x1, 0x0);
        gbc.writeMem(0x2506, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7fa2);
        EXPECT(gbc.pc(), 0x2508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02C5
        gbc.setState(0xc710, 0x1353, 0x6b80, 0x20a3, 0x9d83, 0xb699, 0x0, 0x0);
        gbc.writeMem(0xc710, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1353);
        EXPECT(gbc.pc(), 0xc712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc710), 0xcb);
        EXPECT(gbc.readMem(0xc711), 0x4c);
        // CB 4C 02C6
        gbc.setState(0x9e18, 0x3fdd, 0x7ce0, 0x3cc1, 0x7f80, 0xd4b4, 0x0, 0x1);
        gbc.writeMem(0x9e18, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3fdd);
        EXPECT(gbc.pc(), 0x9e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e18), 0xcb);
        EXPECT(gbc.readMem(0x9e19), 0x4c);
        // CB 4C 02C7
        gbc.setState(0x6952, 0xaa0c, 0x9300, 0x1c46, 0xc142, 0x82d5, 0x0, 0x0);
        gbc.writeMem(0x6952, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xaa0c);
        EXPECT(gbc.pc(), 0x6954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02C8
        gbc.setState(0x51a6, 0xd59f, 0x6e0, 0x3306, 0x23cc, 0xf9ff, 0x0, 0x0);
        gbc.writeMem(0x51a6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd59f);
        EXPECT(gbc.pc(), 0x51a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02C9
        gbc.setState(0x6bdf, 0x9427, 0xbea0, 0x4b21, 0xf017, 0x84d0, 0x0, 0x1);
        gbc.writeMem(0x6bdf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9427);
        EXPECT(gbc.pc(), 0x6be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02CA
        gbc.setState(0x943b, 0x490d, 0x6ac0, 0xa40b, 0x1b58, 0xd6cf, 0x0, 0x0);
        gbc.writeMem(0x943b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x490d);
        EXPECT(gbc.pc(), 0x943d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943b), 0xcb);
        EXPECT(gbc.readMem(0x943c), 0x4c);
        // CB 4C 02CB
        gbc.setState(0xecd1, 0x88f3, 0x82a0, 0x578d, 0x6b22, 0x694, 0x1, 0x1);
        gbc.writeMem(0xecd1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x88f3);
        EXPECT(gbc.pc(), 0xecd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd1), 0xcb);
        EXPECT(gbc.readMem(0xecd2), 0x4c);
        // CB 4C 02CC
        gbc.setState(0xd2cd, 0x4edb, 0x6270, 0x2031, 0x4977, 0xf77c, 0x0, 0x0);
        gbc.writeMem(0xd2cd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4edb);
        EXPECT(gbc.pc(), 0xd2cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2cd), 0xcb);
        EXPECT(gbc.readMem(0xd2ce), 0x4c);
        // CB 4C 02CD
        gbc.setState(0x7c74, 0x66d3, 0xec10, 0x6602, 0x1c0c, 0x15d5, 0x1, 0x1);
        gbc.writeMem(0x7c74, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x66d3);
        EXPECT(gbc.pc(), 0x7c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02CE
        gbc.setState(0xe86e, 0xaa21, 0x2520, 0xad04, 0xa520, 0xf6b, 0x1, 0x1);
        gbc.writeMem(0xe86e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xaa21);
        EXPECT(gbc.pc(), 0xe870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86e), 0xcb);
        EXPECT(gbc.readMem(0xe86f), 0x4c);
        // CB 4C 02CF
        gbc.setState(0x8fc0, 0x6800, 0xfc60, 0x8dbc, 0xc275, 0x2de1, 0x1, 0x1);
        gbc.writeMem(0x8fc0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6800);
        EXPECT(gbc.pc(), 0x8fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc0), 0xcb);
        EXPECT(gbc.readMem(0x8fc1), 0x4c);
        // CB 4C 02D0
        gbc.setState(0x8b48, 0xad6e, 0xf3d0, 0xbe3e, 0xfd49, 0x165a, 0x1, 0x1);
        gbc.writeMem(0x8b48, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xad6e);
        EXPECT(gbc.pc(), 0x8b4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b48), 0xcb);
        EXPECT(gbc.readMem(0x8b49), 0x4c);
        // CB 4C 02D1
        gbc.setState(0x7450, 0x291e, 0x2860, 0xbc8e, 0x96ba, 0x8ed3, 0x0, 0x0);
        gbc.writeMem(0x7450, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x291e);
        EXPECT(gbc.pc(), 0x7452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02D2
        gbc.setState(0x2bf0, 0x18e3, 0xe740, 0xe05a, 0xad0f, 0x31d6, 0x0, 0x0);
        gbc.writeMem(0x2bf0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x18e3);
        EXPECT(gbc.pc(), 0x2bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02D3
        gbc.setState(0x9ac1, 0x75bd, 0xf680, 0x31bd, 0xfd98, 0x75aa, 0x0, 0x1);
        gbc.writeMem(0x9ac1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x75bd);
        EXPECT(gbc.pc(), 0x9ac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac1), 0xcb);
        EXPECT(gbc.readMem(0x9ac2), 0x4c);
        // CB 4C 02D4
        gbc.setState(0xb61c, 0x201, 0xf480, 0x83ba, 0xaefd, 0x9bee, 0x0, 0x0);
        gbc.writeMem(0xb61c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x201);
        EXPECT(gbc.pc(), 0xb61e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb61c), 0xcb);
        EXPECT(gbc.readMem(0xb61d), 0x4c);
        // CB 4C 02D5
        gbc.setState(0xe5c2, 0x23d8, 0xefd0, 0xc1a9, 0x7634, 0x6313, 0x0, 0x0);
        gbc.writeMem(0xe5c2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x23d8);
        EXPECT(gbc.pc(), 0xe5c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c2), 0xcb);
        EXPECT(gbc.readMem(0xe5c3), 0x4c);
        // CB 4C 02D6
        gbc.setState(0x3f4c, 0x6603, 0xfd60, 0x96f6, 0xae43, 0x38bb, 0x0, 0x0);
        gbc.writeMem(0x3f4c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6603);
        EXPECT(gbc.pc(), 0x3f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02D7
        gbc.setState(0x2e37, 0x5db7, 0x3fd0, 0xe016, 0x56a7, 0x2915, 0x1, 0x0);
        gbc.writeMem(0x2e37, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5db7);
        EXPECT(gbc.pc(), 0x2e39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02D8
        gbc.setState(0x29c7, 0xf2a3, 0xdc40, 0xf714, 0xe029, 0x9217, 0x1, 0x1);
        gbc.writeMem(0x29c7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf2a3);
        EXPECT(gbc.pc(), 0x29c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02D9
        gbc.setState(0x1205, 0x5986, 0xea20, 0x4851, 0xf04e, 0xf8ee, 0x1, 0x1);
        gbc.writeMem(0x1205, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5986);
        EXPECT(gbc.pc(), 0x1207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02DB
        gbc.setState(0x5888, 0x6743, 0xc870, 0xba26, 0x4fea, 0xa71a, 0x0, 0x0);
        gbc.writeMem(0x5888, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6743);
        EXPECT(gbc.pc(), 0x588a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02DC
        gbc.setState(0xaf6f, 0xe85, 0xadf0, 0xc129, 0xbc6f, 0x7fa2, 0x0, 0x1);
        gbc.writeMem(0xaf6f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe85);
        EXPECT(gbc.pc(), 0xaf71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf6f), 0xcb);
        EXPECT(gbc.readMem(0xaf70), 0x4c);
        // CB 4C 02DD
        gbc.setState(0x52f4, 0xcb6e, 0x60e0, 0xf85c, 0x43b4, 0x4f0b, 0x1, 0x1);
        gbc.writeMem(0x52f4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcb6e);
        EXPECT(gbc.pc(), 0x52f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02DE
        gbc.setState(0xec66, 0x2261, 0xbee0, 0x54e7, 0x93c3, 0xcb3b, 0x1, 0x0);
        gbc.writeMem(0xec66, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2261);
        EXPECT(gbc.pc(), 0xec68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec66), 0xcb);
        EXPECT(gbc.readMem(0xec67), 0x4c);
        // CB 4C 02DF
        gbc.setState(0x84e, 0xe4f6, 0xe130, 0x5b5, 0x626f, 0xea9e, 0x0, 0x0);
        gbc.writeMem(0x84e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe4f6);
        EXPECT(gbc.pc(), 0x850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02E0
        gbc.setState(0xac47, 0x34e9, 0x2960, 0xbd89, 0x27ab, 0xf139, 0x0, 0x0);
        gbc.writeMem(0xac47, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x34e9);
        EXPECT(gbc.pc(), 0xac49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac47), 0xcb);
        EXPECT(gbc.readMem(0xac48), 0x4c);
        // CB 4C 02E1
        gbc.setState(0x64c0, 0xdc16, 0xb90, 0xd69c, 0x35b6, 0xd074, 0x1, 0x0);
        gbc.writeMem(0x64c0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xdc16);
        EXPECT(gbc.pc(), 0x64c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02E2
        gbc.setState(0x9393, 0x6e17, 0xa860, 0x3798, 0x975e, 0x8978, 0x1, 0x1);
        gbc.writeMem(0x9393, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6e17);
        EXPECT(gbc.pc(), 0x9395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9393), 0xcb);
        EXPECT(gbc.readMem(0x9394), 0x4c);
        // CB 4C 02E3
        gbc.setState(0xa241, 0x7db2, 0xf370, 0x35fb, 0x930d, 0xc151, 0x1, 0x1);
        gbc.writeMem(0xa241, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7db2);
        EXPECT(gbc.pc(), 0xa243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa241), 0xcb);
        EXPECT(gbc.readMem(0xa242), 0x4c);
        // CB 4C 02E4
        gbc.setState(0x7180, 0x2066, 0xac60, 0x5b03, 0xdbbe, 0x1312, 0x1, 0x0);
        gbc.writeMem(0x7180, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2066);
        EXPECT(gbc.pc(), 0x7182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02E5
        gbc.setState(0x29ac, 0xd9d4, 0x4e00, 0xc376, 0xa0d6, 0xa362, 0x0, 0x0);
        gbc.writeMem(0x29ac, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd9d4);
        EXPECT(gbc.pc(), 0x29ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02E6
        gbc.setState(0x16ac, 0x17bf, 0xd1c0, 0x6e20, 0xffbe, 0xef65, 0x0, 0x1);
        gbc.writeMem(0x16ac, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x17bf);
        EXPECT(gbc.pc(), 0x16ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02E7
        gbc.setState(0x3506, 0x9238, 0xce40, 0xb88d, 0x37ae, 0xeea0, 0x1, 0x0);
        gbc.writeMem(0x3506, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9238);
        EXPECT(gbc.pc(), 0x3508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02E8
        gbc.setState(0xe9ed, 0xdc39, 0x34e0, 0x71e6, 0x1de0, 0x17ae, 0x0, 0x0);
        gbc.writeMem(0xe9ed, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xdc39);
        EXPECT(gbc.pc(), 0xe9ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ed), 0xcb);
        EXPECT(gbc.readMem(0xe9ee), 0x4c);
        // CB 4C 02E9
        gbc.setState(0x8016, 0xd403, 0x2d00, 0x6e2a, 0x1287, 0xac87, 0x1, 0x0);
        gbc.writeMem(0x8016, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd403);
        EXPECT(gbc.pc(), 0x8018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8016), 0xcb);
        EXPECT(gbc.readMem(0x8017), 0x4c);
        // CB 4C 02EA
        gbc.setState(0xd8e, 0x108c, 0x970, 0xa710, 0x786f, 0x3efd, 0x1, 0x0);
        gbc.writeMem(0xd8e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x108c);
        EXPECT(gbc.pc(), 0xd90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02EB
        gbc.setState(0xd51e, 0xd38c, 0xa480, 0xe329, 0xc899, 0xb1df, 0x0, 0x1);
        gbc.writeMem(0xd51e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd38c);
        EXPECT(gbc.pc(), 0xd520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd51e), 0xcb);
        EXPECT(gbc.readMem(0xd51f), 0x4c);
        // CB 4C 02EC
        gbc.setState(0x800b, 0xb6f9, 0x48f0, 0xb33f, 0x7c74, 0x9787, 0x1, 0x1);
        gbc.writeMem(0x800b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb6f9);
        EXPECT(gbc.pc(), 0x800d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x800b), 0xcb);
        EXPECT(gbc.readMem(0x800c), 0x4c);
        // CB 4C 02ED
        gbc.setState(0x6823, 0xf74d, 0x3450, 0x20bb, 0x67e5, 0xdb05, 0x0, 0x0);
        gbc.writeMem(0x6823, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf74d);
        EXPECT(gbc.pc(), 0x6825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02EE
        gbc.setState(0xcaec, 0x29d, 0x5030, 0xf2a9, 0xce2, 0xdb31, 0x1, 0x1);
        gbc.writeMem(0xcaec, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x29d);
        EXPECT(gbc.pc(), 0xcaee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaec), 0xcb);
        EXPECT(gbc.readMem(0xcaed), 0x4c);
        // CB 4C 02EF
        gbc.setState(0x4f8f, 0x2d72, 0x92b0, 0x820e, 0x1674, 0xcb7b, 0x0, 0x1);
        gbc.writeMem(0x4f8f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2d72);
        EXPECT(gbc.pc(), 0x4f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02F0
        gbc.setState(0x1faf, 0xe098, 0x2ec0, 0x90cf, 0x702a, 0x7b8c, 0x0, 0x0);
        gbc.writeMem(0x1faf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe098);
        EXPECT(gbc.pc(), 0x1fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02F1
        gbc.setState(0x88a6, 0x6102, 0x7000, 0x2ba3, 0x665, 0xa3b1, 0x0, 0x1);
        gbc.writeMem(0x88a6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6102);
        EXPECT(gbc.pc(), 0x88a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a6), 0xcb);
        EXPECT(gbc.readMem(0x88a7), 0x4c);
        // CB 4C 02F2
        gbc.setState(0xd474, 0xfd96, 0x54f0, 0x3c8e, 0x6fc9, 0x5f6a, 0x1, 0x0);
        gbc.writeMem(0xd474, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfd96);
        EXPECT(gbc.pc(), 0xd476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd474), 0xcb);
        EXPECT(gbc.readMem(0xd475), 0x4c);
        // CB 4C 02F3
        gbc.setState(0xcb66, 0x699, 0x6aa0, 0xe04a, 0x5ef4, 0x8492, 0x0, 0x1);
        gbc.writeMem(0xcb66, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x699);
        EXPECT(gbc.pc(), 0xcb68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb66), 0xcb);
        EXPECT(gbc.readMem(0xcb67), 0x4c);
        // CB 4C 02F4
        gbc.setState(0x821, 0x634b, 0x4700, 0xa451, 0x84de, 0xb3f6, 0x0, 0x1);
        gbc.writeMem(0x821, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x634b);
        EXPECT(gbc.pc(), 0x823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02F5
        gbc.setState(0x72a5, 0xefab, 0x7dc0, 0x8bae, 0x2f52, 0x7d73, 0x0, 0x1);
        gbc.writeMem(0x72a5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xefab);
        EXPECT(gbc.pc(), 0x72a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02F6
        gbc.setState(0xd9f2, 0xa62e, 0x15b0, 0xe0df, 0x1862, 0x4fe3, 0x0, 0x1);
        gbc.writeMem(0xd9f2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa62e);
        EXPECT(gbc.pc(), 0xd9f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f2), 0xcb);
        EXPECT(gbc.readMem(0xd9f3), 0x4c);
        // CB 4C 02F7
        gbc.setState(0x102b, 0xd80d, 0x38c0, 0xbc06, 0xf27, 0x9a62, 0x1, 0x1);
        gbc.writeMem(0x102b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd80d);
        EXPECT(gbc.pc(), 0x102d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02F8
        gbc.setState(0x1c01, 0x6a97, 0xcdc0, 0xec03, 0x3724, 0xcb0b, 0x0, 0x1);
        gbc.writeMem(0x1c01, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6a97);
        EXPECT(gbc.pc(), 0x1c03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02F9
        gbc.setState(0xc9aa, 0x51c8, 0x480, 0x1210, 0x5c2f, 0xe43f, 0x1, 0x0);
        gbc.writeMem(0xc9aa, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x51c8);
        EXPECT(gbc.pc(), 0xc9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9aa), 0xcb);
        EXPECT(gbc.readMem(0xc9ab), 0x4c);
        // CB 4C 02FA
        gbc.setState(0xdd4f, 0x4e09, 0xc1e0, 0xfe2, 0xdd9c, 0x51d4, 0x1, 0x0);
        gbc.writeMem(0xdd4f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4e09);
        EXPECT(gbc.pc(), 0xdd51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd4f), 0xcb);
        EXPECT(gbc.readMem(0xdd50), 0x4c);
        // CB 4C 02FB
        gbc.setState(0xc3e3, 0xf2ff, 0xc510, 0x2c46, 0x8b6d, 0xd02e, 0x1, 0x1);
        gbc.writeMem(0xc3e3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf2ff);
        EXPECT(gbc.pc(), 0xc3e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e3), 0xcb);
        EXPECT(gbc.readMem(0xc3e4), 0x4c);
        // CB 4C 02FC
        gbc.setState(0x1da9, 0x5471, 0xa590, 0x31a5, 0xd92c, 0x5ff2, 0x1, 0x1);
        gbc.writeMem(0x1da9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5471);
        EXPECT(gbc.pc(), 0x1dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 02FD
        gbc.setState(0x3d65, 0xbed5, 0x8da0, 0x6747, 0x4311, 0xe4e4, 0x0, 0x0);
        gbc.writeMem(0x3d65, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbed5);
        EXPECT(gbc.pc(), 0x3d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 02FE
        gbc.setState(0xd418, 0x88c1, 0xeb0, 0x95f0, 0xff9c, 0xa54d, 0x1, 0x0);
        gbc.writeMem(0xd418, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x88c1);
        EXPECT(gbc.pc(), 0xd41a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd418), 0xcb);
        EXPECT(gbc.readMem(0xd419), 0x4c);
        // CB 4C 02FF
        gbc.setState(0x2fc1, 0x88eb, 0xa450, 0xe0d5, 0x7c4, 0x84fa, 0x1, 0x0);
        gbc.writeMem(0x2fc1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x88eb);
        EXPECT(gbc.pc(), 0x2fc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0300
        gbc.setState(0x814, 0xf8c1, 0x2500, 0x8aa1, 0x8c81, 0x99b, 0x0, 0x1);
        gbc.writeMem(0x814, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf8c1);
        EXPECT(gbc.pc(), 0x816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0301
        gbc.setState(0x9b0d, 0x5dc1, 0x6f60, 0x20a3, 0xde96, 0x11ca, 0x0, 0x1);
        gbc.writeMem(0x9b0d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5dc1);
        EXPECT(gbc.pc(), 0x9b0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b0d), 0xcb);
        EXPECT(gbc.readMem(0x9b0e), 0x4c);
        // CB 4C 0302
        gbc.setState(0x7a78, 0x26d7, 0x9b50, 0xe05c, 0xf99, 0x483d, 0x0, 0x1);
        gbc.writeMem(0x7a78, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x26d7);
        EXPECT(gbc.pc(), 0x7a7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0303
        gbc.setState(0x389f, 0xe1a7, 0x71e0, 0x1f6e, 0xecee, 0x833f, 0x1, 0x1);
        gbc.writeMem(0x389f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe1a7);
        EXPECT(gbc.pc(), 0x38a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0304
        gbc.setState(0x500d, 0x2748, 0x2bc0, 0xc20e, 0xefbf, 0xae6b, 0x1, 0x1);
        gbc.writeMem(0x500d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2748);
        EXPECT(gbc.pc(), 0x500f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0305
        gbc.setState(0x8785, 0x993b, 0x4970, 0x264a, 0x9c20, 0xbdde, 0x1, 0x1);
        gbc.writeMem(0x8785, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x993b);
        EXPECT(gbc.pc(), 0x8787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8785), 0xcb);
        EXPECT(gbc.readMem(0x8786), 0x4c);
        // CB 4C 0306
        gbc.setState(0x6e02, 0x3e67, 0x7520, 0xa05d, 0x9784, 0x6332, 0x0, 0x0);
        gbc.writeMem(0x6e02, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3e67);
        EXPECT(gbc.pc(), 0x6e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0307
        gbc.setState(0x5f81, 0x40c5, 0x82d0, 0x69f4, 0x365b, 0xf6e9, 0x0, 0x0);
        gbc.writeMem(0x5f81, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x40c5);
        EXPECT(gbc.pc(), 0x5f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0308
        gbc.setState(0xd5e1, 0xb8c2, 0x4f80, 0x65a9, 0x25b8, 0xff6c, 0x1, 0x0);
        gbc.writeMem(0xd5e1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb8c2);
        EXPECT(gbc.pc(), 0xd5e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e1), 0xcb);
        EXPECT(gbc.readMem(0xd5e2), 0x4c);
        // CB 4C 0309
        gbc.setState(0x5997, 0xd60e, 0x56b0, 0xb4e8, 0x55c7, 0x37ec, 0x0, 0x1);
        gbc.writeMem(0x5997, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd60e);
        EXPECT(gbc.pc(), 0x5999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 030A
        gbc.setState(0x48af, 0x4297, 0x5100, 0xfb79, 0x120c, 0xc3fd, 0x1, 0x1);
        gbc.writeMem(0x48af, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4297);
        EXPECT(gbc.pc(), 0x48b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 030B
        gbc.setState(0xe9c6, 0xce39, 0xfee0, 0x59c8, 0x3229, 0x76a8, 0x1, 0x0);
        gbc.writeMem(0xe9c6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xce39);
        EXPECT(gbc.pc(), 0xe9c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c6), 0xcb);
        EXPECT(gbc.readMem(0xe9c7), 0x4c);
        // CB 4C 030C
        gbc.setState(0x845e, 0x9abc, 0xcec0, 0xbd00, 0x5539, 0x5f17, 0x0, 0x1);
        gbc.writeMem(0x845e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9abc);
        EXPECT(gbc.pc(), 0x8460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x845e), 0xcb);
        EXPECT(gbc.readMem(0x845f), 0x4c);
        // CB 4C 030E
        gbc.setState(0x274, 0x84b9, 0x42a0, 0xb7b4, 0xb095, 0x112, 0x0, 0x0);
        gbc.writeMem(0x274, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x84b9);
        EXPECT(gbc.pc(), 0x276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 030F
        gbc.setState(0x21cd, 0x7623, 0xac80, 0x5c59, 0x4cea, 0xbd8b, 0x1, 0x1);
        gbc.writeMem(0x21cd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7623);
        EXPECT(gbc.pc(), 0x21cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0310
        gbc.setState(0xd5c8, 0x513c, 0xd8e0, 0x3dc3, 0x7f13, 0x4a95, 0x1, 0x0);
        gbc.writeMem(0xd5c8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x513c);
        EXPECT(gbc.pc(), 0xd5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5c8), 0xcb);
        EXPECT(gbc.readMem(0xd5c9), 0x4c);
        // CB 4C 0311
        gbc.setState(0x30d2, 0x1260, 0x9df0, 0xd639, 0x5eb8, 0xa168, 0x1, 0x0);
        gbc.writeMem(0x30d2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1260);
        EXPECT(gbc.pc(), 0x30d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0312
        gbc.setState(0x8d8a, 0x3863, 0x2ee0, 0x1d1d, 0xd3c4, 0xdeb4, 0x1, 0x1);
        gbc.writeMem(0x8d8a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3863);
        EXPECT(gbc.pc(), 0x8d8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8a), 0xcb);
        EXPECT(gbc.readMem(0x8d8b), 0x4c);
        // CB 4C 0313
        gbc.setState(0x6e83, 0x711b, 0x5550, 0x90ec, 0x4ab7, 0x9207, 0x1, 0x0);
        gbc.writeMem(0x6e83, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x711b);
        EXPECT(gbc.pc(), 0x6e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0314
        gbc.setState(0xe26d, 0x57dd, 0xb980, 0xaf38, 0x6920, 0x84ad, 0x1, 0x1);
        gbc.writeMem(0xe26d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x57dd);
        EXPECT(gbc.pc(), 0xe26f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26d), 0xcb);
        EXPECT(gbc.readMem(0xe26e), 0x4c);
        // CB 4C 0315
        gbc.setState(0x57a6, 0x8de9, 0xc230, 0xb0d1, 0x5011, 0x42f0, 0x0, 0x0);
        gbc.writeMem(0x57a6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8de9);
        EXPECT(gbc.pc(), 0x57a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0316
        gbc.setState(0x890a, 0x4ae6, 0x39d0, 0x2326, 0xe800, 0x26db, 0x1, 0x1);
        gbc.writeMem(0x890a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4ae6);
        EXPECT(gbc.pc(), 0x890c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x890a), 0xcb);
        EXPECT(gbc.readMem(0x890b), 0x4c);
        // CB 4C 0317
        gbc.setState(0x9dfd, 0xc4f1, 0x42a0, 0x10c0, 0xb9b4, 0x7bff, 0x0, 0x1);
        gbc.writeMem(0x9dfd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc4f1);
        EXPECT(gbc.pc(), 0x9dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfd), 0xcb);
        EXPECT(gbc.readMem(0x9dfe), 0x4c);
        // CB 4C 0318
        gbc.setState(0xb482, 0x528f, 0x23d0, 0x8ae7, 0x5418, 0x691f, 0x0, 0x0);
        gbc.writeMem(0xb482, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x528f);
        EXPECT(gbc.pc(), 0xb484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb482), 0xcb);
        EXPECT(gbc.readMem(0xb483), 0x4c);
        // CB 4C 0319
        gbc.setState(0xe50e, 0xbfa4, 0x6520, 0x32db, 0xd383, 0x5720, 0x0, 0x1);
        gbc.writeMem(0xe50e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xbfa4);
        EXPECT(gbc.pc(), 0xe510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe50e), 0xcb);
        EXPECT(gbc.readMem(0xe50f), 0x4c);
        // CB 4C 031A
        gbc.setState(0x3d08, 0x65d, 0x92f0, 0xbdf9, 0x4bc1, 0xb278, 0x1, 0x0);
        gbc.writeMem(0x3d08, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x65d);
        EXPECT(gbc.pc(), 0x3d0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 031B
        gbc.setState(0xfdf, 0x365a, 0x280, 0xd96f, 0x60dd, 0x5561, 0x0, 0x0);
        gbc.writeMem(0xfdf, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x365a);
        EXPECT(gbc.pc(), 0xfe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 031C
        gbc.setState(0x7ae7, 0x558c, 0xbd00, 0xbea6, 0xff67, 0x9ef3, 0x0, 0x0);
        gbc.writeMem(0x7ae7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x558c);
        EXPECT(gbc.pc(), 0x7ae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 031D
        gbc.setState(0xe8db, 0xea92, 0xb780, 0xefc7, 0xf435, 0x9ffb, 0x1, 0x1);
        gbc.writeMem(0xe8db, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xea92);
        EXPECT(gbc.pc(), 0xe8dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8db), 0xcb);
        EXPECT(gbc.readMem(0xe8dc), 0x4c);
        // CB 4C 031E
        gbc.setState(0x2afe, 0xc85b, 0x1410, 0xda74, 0xe381, 0x5494, 0x1, 0x0);
        gbc.writeMem(0x2afe, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc85b);
        EXPECT(gbc.pc(), 0x2b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 031F
        gbc.setState(0x1eb5, 0x5228, 0xad60, 0xa2b1, 0xb158, 0xf03a, 0x0, 0x0);
        gbc.writeMem(0x1eb5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5228);
        EXPECT(gbc.pc(), 0x1eb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0320
        gbc.setState(0xad14, 0x5137, 0x2f30, 0x22bb, 0xe0c4, 0x72ae, 0x1, 0x0);
        gbc.writeMem(0xad14, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5137);
        EXPECT(gbc.pc(), 0xad16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad14), 0xcb);
        EXPECT(gbc.readMem(0xad15), 0x4c);
        // CB 4C 0321
        gbc.setState(0x4249, 0xbf00, 0x620, 0xe7ea, 0x9bee, 0x54ff, 0x1, 0x0);
        gbc.writeMem(0x4249, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbf00);
        EXPECT(gbc.pc(), 0x424b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0322
        gbc.setState(0x61ce, 0x16b, 0xe3c0, 0xd56d, 0x3383, 0xee8c, 0x1, 0x1);
        gbc.writeMem(0x61ce, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x16b);
        EXPECT(gbc.pc(), 0x61d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0323
        gbc.setState(0x9a3f, 0x8038, 0xf7d0, 0xf0a1, 0xf50a, 0x6815, 0x0, 0x0);
        gbc.writeMem(0x9a3f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8038);
        EXPECT(gbc.pc(), 0x9a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a3f), 0xcb);
        EXPECT(gbc.readMem(0x9a40), 0x4c);
        // CB 4C 0324
        gbc.setState(0x1cce, 0x36bf, 0x3c30, 0xcd5e, 0x31a8, 0x8c2, 0x1, 0x1);
        gbc.writeMem(0x1cce, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x36bf);
        EXPECT(gbc.pc(), 0x1cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0325
        gbc.setState(0xb267, 0xfeb4, 0x77d0, 0x690f, 0x22f4, 0x2fb1, 0x1, 0x1);
        gbc.writeMem(0xb267, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xfeb4);
        EXPECT(gbc.pc(), 0xb269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb267), 0xcb);
        EXPECT(gbc.readMem(0xb268), 0x4c);
        // CB 4C 0326
        gbc.setState(0x5a60, 0x6365, 0x22f0, 0x8c7d, 0x98a0, 0x8430, 0x0, 0x0);
        gbc.writeMem(0x5a60, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6365);
        EXPECT(gbc.pc(), 0x5a62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0327
        gbc.setState(0x44c3, 0xc8af, 0x2440, 0x2ac0, 0xce74, 0xd6ac, 0x0, 0x0);
        gbc.writeMem(0x44c3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc8af);
        EXPECT(gbc.pc(), 0x44c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0328
        gbc.setState(0x953, 0xe7d2, 0x96e0, 0x76a1, 0xa5ee, 0x816c, 0x0, 0x1);
        gbc.writeMem(0x953, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe7d2);
        EXPECT(gbc.pc(), 0x955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0329
        gbc.setState(0x83ad, 0xdcbb, 0x88d0, 0xb12e, 0x6287, 0x30ef, 0x0, 0x0);
        gbc.writeMem(0x83ad, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdcbb);
        EXPECT(gbc.pc(), 0x83af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ad), 0xcb);
        EXPECT(gbc.readMem(0x83ae), 0x4c);
        // CB 4C 032A
        gbc.setState(0x1413, 0xd5a0, 0xf930, 0x4fca, 0x98fb, 0xc21, 0x0, 0x0);
        gbc.writeMem(0x1413, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd5a0);
        EXPECT(gbc.pc(), 0x1415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 032B
        gbc.setState(0x266a, 0x629, 0x4b60, 0xadd9, 0xc66, 0x6b22, 0x1, 0x1);
        gbc.writeMem(0x266a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x629);
        EXPECT(gbc.pc(), 0x266c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 032C
        gbc.setState(0x3053, 0xf4bf, 0x970, 0x6bf6, 0x258f, 0x1c2c, 0x1, 0x0);
        gbc.writeMem(0x3053, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf4bf);
        EXPECT(gbc.pc(), 0x3055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 032D
        gbc.setState(0x6eb3, 0xc8c9, 0xf7a0, 0xf96c, 0x9777, 0x26e4, 0x0, 0x0);
        gbc.writeMem(0x6eb3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc8c9);
        EXPECT(gbc.pc(), 0x6eb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 032E
        gbc.setState(0x974d, 0xb200, 0x55b0, 0xc9a7, 0x2d52, 0x8c8f, 0x0, 0x0);
        gbc.writeMem(0x974d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb200);
        EXPECT(gbc.pc(), 0x974f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x974d), 0xcb);
        EXPECT(gbc.readMem(0x974e), 0x4c);
        // CB 4C 032F
        gbc.setState(0x2b58, 0x8c69, 0x9030, 0x3b87, 0x684d, 0xf72d, 0x1, 0x0);
        gbc.writeMem(0x2b58, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8c69);
        EXPECT(gbc.pc(), 0x2b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0330
        gbc.setState(0x5831, 0x39fe, 0x44e0, 0x607b, 0xda21, 0xf2a0, 0x0, 0x0);
        gbc.writeMem(0x5831, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x39fe);
        EXPECT(gbc.pc(), 0x5833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0331
        gbc.setState(0x3879, 0x3038, 0x7390, 0x674e, 0xe808, 0xfb3e, 0x1, 0x1);
        gbc.writeMem(0x3879, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3038);
        EXPECT(gbc.pc(), 0x387b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0332
        gbc.setState(0x8049, 0x5e62, 0x6b40, 0x7494, 0xae8, 0xe809, 0x0, 0x1);
        gbc.writeMem(0x8049, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5e62);
        EXPECT(gbc.pc(), 0x804b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8049), 0xcb);
        EXPECT(gbc.readMem(0x804a), 0x4c);
        // CB 4C 0333
        gbc.setState(0xef3c, 0x8451, 0x17f0, 0x8cea, 0x67d6, 0xf841, 0x0, 0x1);
        gbc.writeMem(0xef3c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8451);
        EXPECT(gbc.pc(), 0xef3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef3c), 0xcb);
        EXPECT(gbc.readMem(0xef3d), 0x4c);
        // CB 4C 0334
        gbc.setState(0x5a7e, 0xd9ce, 0xcda0, 0xc3f2, 0x49d4, 0x708e, 0x0, 0x1);
        gbc.writeMem(0x5a7e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd9ce);
        EXPECT(gbc.pc(), 0x5a80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0335
        gbc.setState(0xae5e, 0x278, 0x80b0, 0x9604, 0x1e22, 0x3237, 0x1, 0x0);
        gbc.writeMem(0xae5e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x278);
        EXPECT(gbc.pc(), 0xae60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5e), 0xcb);
        EXPECT(gbc.readMem(0xae5f), 0x4c);
        // CB 4C 0336
        gbc.setState(0x91cd, 0x54, 0x84d0, 0x5699, 0xa538, 0xcdf1, 0x1, 0x0);
        gbc.writeMem(0x91cd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x54);
        EXPECT(gbc.pc(), 0x91cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91cd), 0xcb);
        EXPECT(gbc.readMem(0x91ce), 0x4c);
        // CB 4C 0338
        gbc.setState(0x9e3f, 0xfb5e, 0xae20, 0xac60, 0xb854, 0x4589, 0x1, 0x0);
        gbc.writeMem(0x9e3f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfb5e);
        EXPECT(gbc.pc(), 0x9e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e3f), 0xcb);
        EXPECT(gbc.readMem(0x9e40), 0x4c);
        // CB 4C 0339
        gbc.setState(0xbdee, 0x23d6, 0x42d0, 0x9bb8, 0x2b83, 0xcd3d, 0x1, 0x1);
        gbc.writeMem(0xbdee, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x23d6);
        EXPECT(gbc.pc(), 0xbdf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdee), 0xcb);
        EXPECT(gbc.readMem(0xbdef), 0x4c);
        // CB 4C 033A
        gbc.setState(0x4931, 0x9d20, 0x6990, 0x270, 0x78c2, 0x5a41, 0x0, 0x1);
        gbc.writeMem(0x4931, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9d20);
        EXPECT(gbc.pc(), 0x4933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 033B
        gbc.setState(0xc32, 0x16f3, 0x33c0, 0x5b7d, 0xb398, 0xfa2b, 0x0, 0x1);
        gbc.writeMem(0xc32, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x16f3);
        EXPECT(gbc.pc(), 0xc34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 033C
        gbc.setState(0x1c1e, 0x11b2, 0xab30, 0x4dfa, 0x4080, 0x4103, 0x1, 0x0);
        gbc.writeMem(0x1c1e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x11b2);
        EXPECT(gbc.pc(), 0x1c20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 033D
        gbc.setState(0xcbbc, 0x518, 0x1450, 0xd4e0, 0xe46b, 0xb837, 0x0, 0x0);
        gbc.writeMem(0xcbbc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x518);
        EXPECT(gbc.pc(), 0xcbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbbc), 0xcb);
        EXPECT(gbc.readMem(0xcbbd), 0x4c);
        // CB 4C 033E
        gbc.setState(0x11ba, 0xe1e, 0xd8a0, 0x934a, 0xdae5, 0xf306, 0x1, 0x0);
        gbc.writeMem(0x11ba, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe1e);
        EXPECT(gbc.pc(), 0x11bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 033F
        gbc.setState(0x8320, 0x3f51, 0x91e0, 0xe8bd, 0x85c9, 0x5b11, 0x0, 0x0);
        gbc.writeMem(0x8320, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3f51);
        EXPECT(gbc.pc(), 0x8322);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8320), 0xcb);
        EXPECT(gbc.readMem(0x8321), 0x4c);
        // CB 4C 0341
        gbc.setState(0x2137, 0xcd4, 0xdf20, 0x2a91, 0x6c3d, 0x406e, 0x0, 0x1);
        gbc.writeMem(0x2137, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcd4);
        EXPECT(gbc.pc(), 0x2139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0342
        gbc.setState(0x8e8f, 0x5eda, 0x830, 0x1d0f, 0xd690, 0xa6d0, 0x1, 0x0);
        gbc.writeMem(0x8e8f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5eda);
        EXPECT(gbc.pc(), 0x8e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e8f), 0xcb);
        EXPECT(gbc.readMem(0x8e90), 0x4c);
        // CB 4C 0343
        gbc.setState(0x7920, 0x4a4e, 0x1e00, 0x3d2d, 0xa18e, 0xb79e, 0x0, 0x1);
        gbc.writeMem(0x7920, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4a4e);
        EXPECT(gbc.pc(), 0x7922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0344
        gbc.setState(0x35ca, 0xc67, 0x8410, 0xcd7f, 0x4c5b, 0x8093, 0x1, 0x1);
        gbc.writeMem(0x35ca, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc67);
        EXPECT(gbc.pc(), 0x35cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0345
        gbc.setState(0xcd3, 0xbe13, 0x93b0, 0x531, 0x7a3e, 0x21eb, 0x0, 0x0);
        gbc.writeMem(0xcd3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbe13);
        EXPECT(gbc.pc(), 0xcd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0346
        gbc.setState(0x5438, 0x7140, 0x32b0, 0xe0bb, 0xc98d, 0x9b3f, 0x0, 0x1);
        gbc.writeMem(0x5438, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7140);
        EXPECT(gbc.pc(), 0x543a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0347
        gbc.setState(0x62f2, 0xa0db, 0xea40, 0xb631, 0xa7c4, 0xfc57, 0x0, 0x1);
        gbc.writeMem(0x62f2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa0db);
        EXPECT(gbc.pc(), 0x62f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0348
        gbc.setState(0xcc82, 0x1782, 0x2130, 0x49d7, 0xe2c4, 0x9b36, 0x0, 0x0);
        gbc.writeMem(0xcc82, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1782);
        EXPECT(gbc.pc(), 0xcc84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc82), 0xcb);
        EXPECT(gbc.readMem(0xcc83), 0x4c);
        // CB 4C 0349
        gbc.setState(0x73b0, 0x4713, 0x8b20, 0x5384, 0xf9db, 0x5d98, 0x1, 0x1);
        gbc.writeMem(0x73b0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4713);
        EXPECT(gbc.pc(), 0x73b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 034A
        gbc.setState(0x9e0b, 0x600d, 0x7f00, 0x23f3, 0xae23, 0x3b0c, 0x0, 0x1);
        gbc.writeMem(0x9e0b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x600d);
        EXPECT(gbc.pc(), 0x9e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e0b), 0xcb);
        EXPECT(gbc.readMem(0x9e0c), 0x4c);
        // CB 4C 034B
        gbc.setState(0x2f70, 0xab6c, 0x42b0, 0xaae6, 0x32f0, 0x7d4b, 0x0, 0x0);
        gbc.writeMem(0x2f70, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xab6c);
        EXPECT(gbc.pc(), 0x2f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 034C
        gbc.setState(0x80ae, 0x66d, 0x7f80, 0x54f4, 0xfeb, 0x28db, 0x1, 0x0);
        gbc.writeMem(0x80ae, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x66d);
        EXPECT(gbc.pc(), 0x80b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ae), 0xcb);
        EXPECT(gbc.readMem(0x80af), 0x4c);
        // CB 4C 034D
        gbc.setState(0xb099, 0x7bea, 0xc80, 0xaece, 0xa5e0, 0xbb1c, 0x1, 0x1);
        gbc.writeMem(0xb099, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7bea);
        EXPECT(gbc.pc(), 0xb09b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb099), 0xcb);
        EXPECT(gbc.readMem(0xb09a), 0x4c);
        // CB 4C 034E
        gbc.setState(0xe1de, 0x73fa, 0x9c0, 0xb6dc, 0xd75c, 0xecb1, 0x0, 0x0);
        gbc.writeMem(0xe1de, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x73fa);
        EXPECT(gbc.pc(), 0xe1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1de), 0xcb);
        EXPECT(gbc.readMem(0xe1df), 0x4c);
        // CB 4C 034F
        gbc.setState(0x16b3, 0x4f77, 0x4370, 0xaff4, 0xa60d, 0x7c8, 0x1, 0x0);
        gbc.writeMem(0x16b3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4f77);
        EXPECT(gbc.pc(), 0x16b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0350
        gbc.setState(0xa464, 0xdf3, 0x8b80, 0x701a, 0x574c, 0xb90, 0x1, 0x1);
        gbc.writeMem(0xa464, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdf3);
        EXPECT(gbc.pc(), 0xa466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa464), 0xcb);
        EXPECT(gbc.readMem(0xa465), 0x4c);
        // CB 4C 0351
        gbc.setState(0x4770, 0x2592, 0x7ef0, 0x4a90, 0x538d, 0x5746, 0x0, 0x0);
        gbc.writeMem(0x4770, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2592);
        EXPECT(gbc.pc(), 0x4772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0352
        gbc.setState(0x613f, 0x89c4, 0x7e40, 0x2855, 0xb3c2, 0x3bcc, 0x1, 0x0);
        gbc.writeMem(0x613f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x89c4);
        EXPECT(gbc.pc(), 0x6141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0353
        gbc.setState(0x92f5, 0x7160, 0xdb70, 0x9435, 0x575, 0xbc31, 0x0, 0x0);
        gbc.writeMem(0x92f5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7160);
        EXPECT(gbc.pc(), 0x92f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f5), 0xcb);
        EXPECT(gbc.readMem(0x92f6), 0x4c);
        // CB 4C 0354
        gbc.setState(0xb4ba, 0x7ef9, 0x8260, 0xd8d3, 0x116b, 0xded3, 0x1, 0x0);
        gbc.writeMem(0xb4ba, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7ef9);
        EXPECT(gbc.pc(), 0xb4bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ba), 0xcb);
        EXPECT(gbc.readMem(0xb4bb), 0x4c);
        // CB 4C 0355
        gbc.setState(0xc6c4, 0x2f85, 0x1c50, 0x241f, 0x836e, 0x40d8, 0x0, 0x0);
        gbc.writeMem(0xc6c4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2f85);
        EXPECT(gbc.pc(), 0xc6c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c4), 0xcb);
        EXPECT(gbc.readMem(0xc6c5), 0x4c);
        // CB 4C 0356
        gbc.setState(0xe6a1, 0xa29a, 0x39c0, 0x9f12, 0xfce4, 0xd9de, 0x0, 0x1);
        gbc.writeMem(0xe6a1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa29a);
        EXPECT(gbc.pc(), 0xe6a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6a1), 0xcb);
        EXPECT(gbc.readMem(0xe6a2), 0x4c);
        // CB 4C 0357
        gbc.setState(0x9687, 0x7c45, 0xd820, 0x6b00, 0xf891, 0x21e6, 0x1, 0x0);
        gbc.writeMem(0x9687, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7c45);
        EXPECT(gbc.pc(), 0x9689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9687), 0xcb);
        EXPECT(gbc.readMem(0x9688), 0x4c);
        // CB 4C 0358
        gbc.setState(0x8263, 0xb15, 0x38c0, 0x9324, 0xfc4e, 0xc8a6, 0x0, 0x0);
        gbc.writeMem(0x8263, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb15);
        EXPECT(gbc.pc(), 0x8265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8263), 0xcb);
        EXPECT(gbc.readMem(0x8264), 0x4c);
        // CB 4C 0359
        gbc.setState(0xce51, 0xf5ed, 0x8500, 0xa01e, 0xeaaf, 0x3bea, 0x0, 0x0);
        gbc.writeMem(0xce51, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf5ed);
        EXPECT(gbc.pc(), 0xce53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce51), 0xcb);
        EXPECT(gbc.readMem(0xce52), 0x4c);
        // CB 4C 035A
        gbc.setState(0x48d4, 0x7a51, 0xe4a0, 0x2186, 0x86eb, 0x322e, 0x1, 0x1);
        gbc.writeMem(0x48d4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7a51);
        EXPECT(gbc.pc(), 0x48d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 035C
        gbc.setState(0x7ea1, 0xdff2, 0xc890, 0xe09d, 0x5813, 0x46e9, 0x1, 0x1);
        gbc.writeMem(0x7ea1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdff2);
        EXPECT(gbc.pc(), 0x7ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 035D
        gbc.setState(0x97e1, 0x4c3e, 0x2840, 0xd40a, 0xdd8a, 0x8278, 0x0, 0x1);
        gbc.writeMem(0x97e1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4c3e);
        EXPECT(gbc.pc(), 0x97e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e1), 0xcb);
        EXPECT(gbc.readMem(0x97e2), 0x4c);
        // CB 4C 035E
        gbc.setState(0xe35f, 0x5f2d, 0x2d20, 0x44dd, 0x915e, 0x2a43, 0x0, 0x1);
        gbc.writeMem(0xe35f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5f2d);
        EXPECT(gbc.pc(), 0xe361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35f), 0xcb);
        EXPECT(gbc.readMem(0xe360), 0x4c);
        // CB 4C 035F
        gbc.setState(0xabc1, 0xdb00, 0xae80, 0x6008, 0x834, 0x4fb7, 0x1, 0x1);
        gbc.writeMem(0xabc1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdb00);
        EXPECT(gbc.pc(), 0xabc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc1), 0xcb);
        EXPECT(gbc.readMem(0xabc2), 0x4c);
        // CB 4C 0360
        gbc.setState(0xca53, 0x8b1f, 0x45f0, 0x41a9, 0xa154, 0xbd7, 0x1, 0x0);
        gbc.writeMem(0xca53, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8b1f);
        EXPECT(gbc.pc(), 0xca55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca53), 0xcb);
        EXPECT(gbc.readMem(0xca54), 0x4c);
        // CB 4C 0361
        gbc.setState(0x6775, 0x52aa, 0x71f0, 0x604f, 0x9421, 0xe09c, 0x0, 0x1);
        gbc.writeMem(0x6775, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x52aa);
        EXPECT(gbc.pc(), 0x6777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0362
        gbc.setState(0xc440, 0xc358, 0xe720, 0x261e, 0x61a3, 0x23c3, 0x1, 0x1);
        gbc.writeMem(0xc440, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc358);
        EXPECT(gbc.pc(), 0xc442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc440), 0xcb);
        EXPECT(gbc.readMem(0xc441), 0x4c);
        // CB 4C 0363
        gbc.setState(0x2ec, 0x8910, 0x6570, 0xa460, 0x27a0, 0x4a20, 0x1, 0x1);
        gbc.writeMem(0x2ec, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8910);
        EXPECT(gbc.pc(), 0x2ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0364
        gbc.setState(0x1c6c, 0xe8fb, 0x82f0, 0x2d1d, 0x2b4b, 0x7d97, 0x0, 0x1);
        gbc.writeMem(0x1c6c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe8fb);
        EXPECT(gbc.pc(), 0x1c6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0365
        gbc.setState(0xdecd, 0x7661, 0x7650, 0x7445, 0x353d, 0x8a1b, 0x1, 0x0);
        gbc.writeMem(0xdecd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7661);
        EXPECT(gbc.pc(), 0xdecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdecd), 0xcb);
        EXPECT(gbc.readMem(0xdece), 0x4c);
        // CB 4C 0366
        gbc.setState(0xad6f, 0x8acd, 0x5670, 0x63c4, 0xb6f, 0xfe28, 0x0, 0x1);
        gbc.writeMem(0xad6f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8acd);
        EXPECT(gbc.pc(), 0xad71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6f), 0xcb);
        EXPECT(gbc.readMem(0xad70), 0x4c);
        // CB 4C 0367
        gbc.setState(0x5eb, 0x5929, 0x5470, 0x4bfc, 0xbb45, 0xd396, 0x1, 0x0);
        gbc.writeMem(0x5eb, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5929);
        EXPECT(gbc.pc(), 0x5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0368
        gbc.setState(0x2a30, 0x7317, 0x56c0, 0xe6b2, 0xc474, 0xae8c, 0x0, 0x1);
        gbc.writeMem(0x2a30, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7317);
        EXPECT(gbc.pc(), 0x2a32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0369
        gbc.setState(0xdb2a, 0xd488, 0xf6b0, 0x77a, 0x6f5e, 0x13f4, 0x1, 0x1);
        gbc.writeMem(0xdb2a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd488);
        EXPECT(gbc.pc(), 0xdb2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb2a), 0xcb);
        EXPECT(gbc.readMem(0xdb2b), 0x4c);
        // CB 4C 036A
        gbc.setState(0xb10f, 0xc83c, 0xba20, 0xa592, 0x78c4, 0xa90c, 0x0, 0x1);
        gbc.writeMem(0xb10f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc83c);
        EXPECT(gbc.pc(), 0xb111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb10f), 0xcb);
        EXPECT(gbc.readMem(0xb110), 0x4c);
        // CB 4C 036B
        gbc.setState(0xdc2c, 0xd040, 0x42e0, 0xea84, 0xc587, 0xc7c4, 0x1, 0x1);
        gbc.writeMem(0xdc2c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd040);
        EXPECT(gbc.pc(), 0xdc2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc2c), 0xcb);
        EXPECT(gbc.readMem(0xdc2d), 0x4c);
        // CB 4C 036C
        gbc.setState(0x9a8e, 0x6fca, 0x71b0, 0xa8e9, 0x1b0, 0xf63f, 0x0, 0x1);
        gbc.writeMem(0x9a8e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6fca);
        EXPECT(gbc.pc(), 0x9a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a8e), 0xcb);
        EXPECT(gbc.readMem(0x9a8f), 0x4c);
        // CB 4C 036D
        gbc.setState(0x23ff, 0xaae3, 0x64f0, 0x6c3b, 0x9a95, 0x7ecc, 0x1, 0x0);
        gbc.writeMem(0x23ff, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xaae3);
        EXPECT(gbc.pc(), 0x2401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 036E
        gbc.setState(0x5f9d, 0x3ba2, 0x8430, 0x407d, 0x6556, 0x8ddd, 0x0, 0x0);
        gbc.writeMem(0x5f9d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3ba2);
        EXPECT(gbc.pc(), 0x5f9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 036F
        gbc.setState(0x1d79, 0x629d, 0x76d0, 0x1b43, 0x2a29, 0x35e3, 0x1, 0x1);
        gbc.writeMem(0x1d79, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x629d);
        EXPECT(gbc.pc(), 0x1d7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0370
        gbc.setState(0xdf8c, 0x5c1b, 0x30d0, 0xcb69, 0xc1ad, 0x632a, 0x1, 0x0);
        gbc.writeMem(0xdf8c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5c1b);
        EXPECT(gbc.pc(), 0xdf8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf8c), 0xcb);
        EXPECT(gbc.readMem(0xdf8d), 0x4c);
        // CB 4C 0371
        gbc.setState(0x7a92, 0x3606, 0x7c60, 0xf5a2, 0xd9fe, 0x7753, 0x1, 0x0);
        gbc.writeMem(0x7a92, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3606);
        EXPECT(gbc.pc(), 0x7a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0372
        gbc.setState(0x8371, 0xa8cb, 0x690, 0x7f40, 0xfe54, 0xedb6, 0x1, 0x1);
        gbc.writeMem(0x8371, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa8cb);
        EXPECT(gbc.pc(), 0x8373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8371), 0xcb);
        EXPECT(gbc.readMem(0x8372), 0x4c);
        // CB 4C 0373
        gbc.setState(0x786, 0xf8b5, 0xb180, 0xbc23, 0x63b6, 0xfe70, 0x1, 0x0);
        gbc.writeMem(0x786, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf8b5);
        EXPECT(gbc.pc(), 0x788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0374
        gbc.setState(0x1f0e, 0x38c9, 0xb020, 0xc74d, 0xc197, 0x1673, 0x0, 0x1);
        gbc.writeMem(0x1f0e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x38c9);
        EXPECT(gbc.pc(), 0x1f10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0376
        gbc.setState(0x6f46, 0x4859, 0x54e0, 0x4505, 0xed2f, 0xdd09, 0x0, 0x1);
        gbc.writeMem(0x6f46, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4859);
        EXPECT(gbc.pc(), 0x6f48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0377
        gbc.setState(0x696a, 0xc55b, 0x9cf0, 0x9864, 0x8bc2, 0xbd1c, 0x0, 0x0);
        gbc.writeMem(0x696a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc55b);
        EXPECT(gbc.pc(), 0x696c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0378
        gbc.setState(0xe9e7, 0x23df, 0x6a10, 0x9a04, 0xd862, 0x5a, 0x1, 0x0);
        gbc.writeMem(0xe9e7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x23df);
        EXPECT(gbc.pc(), 0xe9e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e7), 0xcb);
        EXPECT(gbc.readMem(0xe9e8), 0x4c);
        // CB 4C 0379
        gbc.setState(0xcc13, 0x2141, 0x5f70, 0xa841, 0xe73d, 0x36ce, 0x0, 0x1);
        gbc.writeMem(0xcc13, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2141);
        EXPECT(gbc.pc(), 0xcc15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc13), 0xcb);
        EXPECT(gbc.readMem(0xcc14), 0x4c);
        // CB 4C 037A
        gbc.setState(0x1fbe, 0xefe0, 0xe130, 0x667f, 0x510e, 0xf48f, 0x0, 0x0);
        gbc.writeMem(0x1fbe, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xefe0);
        EXPECT(gbc.pc(), 0x1fc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 037B
        gbc.setState(0x30e3, 0x71c5, 0xe070, 0xb6bd, 0xa42e, 0x5404, 0x0, 0x0);
        gbc.writeMem(0x30e3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x71c5);
        EXPECT(gbc.pc(), 0x30e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 037C
        gbc.setState(0x229, 0xb39d, 0x4da0, 0x7960, 0x1c9e, 0xec47, 0x0, 0x0);
        gbc.writeMem(0x229, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb39d);
        EXPECT(gbc.pc(), 0x22b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 037D
        gbc.setState(0x3b19, 0x8d60, 0x1b0, 0xd32a, 0x90f4, 0x8f29, 0x0, 0x0);
        gbc.writeMem(0x3b19, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8d60);
        EXPECT(gbc.pc(), 0x3b1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 037E
        gbc.setState(0x204f, 0xe0ca, 0xc670, 0xa393, 0x5b8f, 0xdece, 0x1, 0x1);
        gbc.writeMem(0x204f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe0ca);
        EXPECT(gbc.pc(), 0x2051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0380
        gbc.setState(0x1450, 0xa39, 0x4ab0, 0xb2b, 0x9c7f, 0xb70e, 0x1, 0x0);
        gbc.writeMem(0x1450, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa39);
        EXPECT(gbc.pc(), 0x1452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0381
        gbc.setState(0xb976, 0x44b1, 0x1610, 0x4028, 0x340b, 0x7100, 0x1, 0x1);
        gbc.writeMem(0xb976, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x44b1);
        EXPECT(gbc.pc(), 0xb978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb976), 0xcb);
        EXPECT(gbc.readMem(0xb977), 0x4c);
        // CB 4C 0382
        gbc.setState(0xdc81, 0x8e, 0xd600, 0x53c6, 0xdfa7, 0xddb7, 0x0, 0x0);
        gbc.writeMem(0xdc81, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8e);
        EXPECT(gbc.pc(), 0xdc83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc81), 0xcb);
        EXPECT(gbc.readMem(0xdc82), 0x4c);
        // CB 4C 0383
        gbc.setState(0xdc08, 0xadd7, 0x54e0, 0xfc26, 0x4ff2, 0xfbae, 0x1, 0x1);
        gbc.writeMem(0xdc08, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xadd7);
        EXPECT(gbc.pc(), 0xdc0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc08), 0xcb);
        EXPECT(gbc.readMem(0xdc09), 0x4c);
        // CB 4C 0384
        gbc.setState(0x5a08, 0x6c89, 0x8f10, 0xf08c, 0xeef0, 0x2e64, 0x0, 0x0);
        gbc.writeMem(0x5a08, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6c89);
        EXPECT(gbc.pc(), 0x5a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0385
        gbc.setState(0x186b, 0xa0ec, 0x4ca0, 0xb6e6, 0x5450, 0xe3fd, 0x0, 0x0);
        gbc.writeMem(0x186b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa0ec);
        EXPECT(gbc.pc(), 0x186d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0386
        gbc.setState(0xb881, 0x3ed8, 0xc220, 0xd73d, 0x497a, 0x1670, 0x1, 0x1);
        gbc.writeMem(0xb881, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3ed8);
        EXPECT(gbc.pc(), 0xb883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb881), 0xcb);
        EXPECT(gbc.readMem(0xb882), 0x4c);
        // CB 4C 0387
        gbc.setState(0xe0e8, 0xbaec, 0x230, 0x8173, 0xd00b, 0x4bbd, 0x1, 0x0);
        gbc.writeMem(0xe0e8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xbaec);
        EXPECT(gbc.pc(), 0xe0ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e8), 0xcb);
        EXPECT(gbc.readMem(0xe0e9), 0x4c);
        // CB 4C 0388
        gbc.setState(0xa323, 0x7c5, 0x67a0, 0x6d32, 0x61ce, 0xca94, 0x0, 0x0);
        gbc.writeMem(0xa323, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7c5);
        EXPECT(gbc.pc(), 0xa325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa323), 0xcb);
        EXPECT(gbc.readMem(0xa324), 0x4c);
        // CB 4C 0389
        gbc.setState(0xa3f2, 0x4f10, 0xbda0, 0x4f1, 0x6a56, 0x8ccd, 0x1, 0x1);
        gbc.writeMem(0xa3f2, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4f10);
        EXPECT(gbc.pc(), 0xa3f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f2), 0xcb);
        EXPECT(gbc.readMem(0xa3f3), 0x4c);
        // CB 4C 038A
        gbc.setState(0x2571, 0x90bc, 0xe300, 0x874a, 0x414e, 0xfa82, 0x0, 0x0);
        gbc.writeMem(0x2571, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x90bc);
        EXPECT(gbc.pc(), 0x2573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 038B
        gbc.setState(0x8e83, 0x2162, 0xd5d0, 0x48ac, 0x2767, 0xf14b, 0x0, 0x1);
        gbc.writeMem(0x8e83, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2162);
        EXPECT(gbc.pc(), 0x8e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e83), 0xcb);
        EXPECT(gbc.readMem(0x8e84), 0x4c);
        // CB 4C 038C
        gbc.setState(0x4601, 0x4509, 0xb850, 0x1a71, 0xb49, 0xf873, 0x0, 0x1);
        gbc.writeMem(0x4601, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4509);
        EXPECT(gbc.pc(), 0x4603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 038D
        gbc.setState(0xcdab, 0xb112, 0xef00, 0x8492, 0xf0b2, 0x7f96, 0x0, 0x0);
        gbc.writeMem(0xcdab, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb112);
        EXPECT(gbc.pc(), 0xcdad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdab), 0xcb);
        EXPECT(gbc.readMem(0xcdac), 0x4c);
        // CB 4C 038F
        gbc.setState(0x29ad, 0x2924, 0x5dd0, 0xa47f, 0x442b, 0x97b6, 0x1, 0x1);
        gbc.writeMem(0x29ad, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2924);
        EXPECT(gbc.pc(), 0x29af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0390
        gbc.setState(0x29c9, 0x7524, 0x1780, 0xb069, 0xf6ba, 0x2314, 0x1, 0x1);
        gbc.writeMem(0x29c9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7524);
        EXPECT(gbc.pc(), 0x29cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 0391
        gbc.setState(0xa2f7, 0x93a7, 0x2670, 0xf65c, 0x872f, 0xdc01, 0x0, 0x1);
        gbc.writeMem(0xa2f7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x93a7);
        EXPECT(gbc.pc(), 0xa2f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2f7), 0xcb);
        EXPECT(gbc.readMem(0xa2f8), 0x4c);
        // CB 4C 0392
        gbc.setState(0xc5cd, 0xf744, 0xbd80, 0x9b38, 0x697, 0x6f37, 0x0, 0x1);
        gbc.writeMem(0xc5cd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf744);
        EXPECT(gbc.pc(), 0xc5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5cd), 0xcb);
        EXPECT(gbc.readMem(0xc5ce), 0x4c);
        // CB 4C 0393
        gbc.setState(0x792e, 0x2014, 0x7210, 0x91be, 0x9ecb, 0xd59e, 0x1, 0x0);
        gbc.writeMem(0x792e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2014);
        EXPECT(gbc.pc(), 0x7930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0394
        gbc.setState(0x9491, 0xcfdf, 0x3ac0, 0xb6df, 0x309d, 0x9b86, 0x1, 0x0);
        gbc.writeMem(0x9491, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcfdf);
        EXPECT(gbc.pc(), 0x9493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9491), 0xcb);
        EXPECT(gbc.readMem(0x9492), 0x4c);
        // CB 4C 0395
        gbc.setState(0x95ee, 0x5332, 0x6a80, 0xed83, 0xe6fe, 0x3398, 0x0, 0x1);
        gbc.writeMem(0x95ee, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5332);
        EXPECT(gbc.pc(), 0x95f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ee), 0xcb);
        EXPECT(gbc.readMem(0x95ef), 0x4c);
        // CB 4C 0396
        gbc.setState(0x2722, 0x65a0, 0x7f90, 0x4360, 0xbf62, 0x34e2, 0x0, 0x0);
        gbc.writeMem(0x2722, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x65a0);
        EXPECT(gbc.pc(), 0x2724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0397
        gbc.setState(0x6be6, 0x6806, 0x4d70, 0x71dd, 0x62d4, 0xefb4, 0x0, 0x1);
        gbc.writeMem(0x6be6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6806);
        EXPECT(gbc.pc(), 0x6be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0398
        gbc.setState(0x2866, 0x5c65, 0x9930, 0xe0dd, 0xd211, 0x773c, 0x0, 0x1);
        gbc.writeMem(0x2866, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5c65);
        EXPECT(gbc.pc(), 0x2868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 0399
        gbc.setState(0x2dfc, 0xc357, 0x5280, 0xc169, 0xe0d4, 0x4792, 0x0, 0x1);
        gbc.writeMem(0x2dfc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc357);
        EXPECT(gbc.pc(), 0x2dfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 039A
        gbc.setState(0x1102, 0x9e56, 0x88c0, 0x5b73, 0x3386, 0x4874, 0x0, 0x0);
        gbc.writeMem(0x1102, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9e56);
        EXPECT(gbc.pc(), 0x1104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 039B
        gbc.setState(0x5c9d, 0x7cc8, 0xb7e0, 0xdeaa, 0x45ec, 0x2b4, 0x1, 0x1);
        gbc.writeMem(0x5c9d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7cc8);
        EXPECT(gbc.pc(), 0x5c9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 039C
        gbc.setState(0x9408, 0x2282, 0x3390, 0x77c9, 0xd289, 0x5a2c, 0x1, 0x0);
        gbc.writeMem(0x9408, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2282);
        EXPECT(gbc.pc(), 0x940a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9408), 0xcb);
        EXPECT(gbc.readMem(0x9409), 0x4c);
        // CB 4C 039D
        gbc.setState(0x9cd1, 0x21, 0xef60, 0x8ebf, 0x57ee, 0xaf76, 0x1, 0x0);
        gbc.writeMem(0x9cd1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x21);
        EXPECT(gbc.pc(), 0x9cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd1), 0xcb);
        EXPECT(gbc.readMem(0x9cd2), 0x4c);
        // CB 4C 039E
        gbc.setState(0x2e81, 0x8251, 0xe340, 0x3d04, 0x6227, 0x5ac0, 0x1, 0x0);
        gbc.writeMem(0x2e81, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8251);
        EXPECT(gbc.pc(), 0x2e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 039F
        gbc.setState(0xe518, 0x15f3, 0xf50, 0x1bea, 0x4433, 0x530a, 0x0, 0x1);
        gbc.writeMem(0xe518, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x15f3);
        EXPECT(gbc.pc(), 0xe51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe518), 0xcb);
        EXPECT(gbc.readMem(0xe519), 0x4c);
        // CB 4C 03A0
        gbc.setState(0x4704, 0xe31e, 0x7b20, 0x49d, 0x2384, 0xd28a, 0x1, 0x0);
        gbc.writeMem(0x4704, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe31e);
        EXPECT(gbc.pc(), 0x4706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03A1
        gbc.setState(0x5ac1, 0x605, 0x5210, 0xd83f, 0xd580, 0x5f1d, 0x1, 0x0);
        gbc.writeMem(0x5ac1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x605);
        EXPECT(gbc.pc(), 0x5ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03A2
        gbc.setState(0x54ab, 0xa63f, 0x48c0, 0xbe00, 0xcd74, 0xbc42, 0x0, 0x0);
        gbc.writeMem(0x54ab, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa63f);
        EXPECT(gbc.pc(), 0x54ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03A3
        gbc.setState(0xdada, 0x6a24, 0x6210, 0xe94, 0xea01, 0xbc69, 0x0, 0x1);
        gbc.writeMem(0xdada, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6a24);
        EXPECT(gbc.pc(), 0xdadc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdada), 0xcb);
        EXPECT(gbc.readMem(0xdadb), 0x4c);
        // CB 4C 03A4
        gbc.setState(0x28ba, 0xac54, 0xdf20, 0xac95, 0xc59e, 0xa9e9, 0x1, 0x0);
        gbc.writeMem(0x28ba, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xac54);
        EXPECT(gbc.pc(), 0x28bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03A5
        gbc.setState(0x984d, 0xc964, 0x1160, 0x8b01, 0x9711, 0xc5e, 0x0, 0x0);
        gbc.writeMem(0x984d, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc964);
        EXPECT(gbc.pc(), 0x984f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x984d), 0xcb);
        EXPECT(gbc.readMem(0x984e), 0x4c);
        // CB 4C 03A6
        gbc.setState(0x7f3, 0x89b, 0x6da0, 0xd491, 0x5abc, 0xe313, 0x0, 0x1);
        gbc.writeMem(0x7f3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x89b);
        EXPECT(gbc.pc(), 0x7f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03A7
        gbc.setState(0xd785, 0x30d0, 0x43b0, 0x7d01, 0xe421, 0xe693, 0x0, 0x0);
        gbc.writeMem(0xd785, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x30d0);
        EXPECT(gbc.pc(), 0xd787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd785), 0xcb);
        EXPECT(gbc.readMem(0xd786), 0x4c);
        // CB 4C 03A8
        gbc.setState(0xb60e, 0xafd2, 0xc4d0, 0xb751, 0xf7ba, 0xab45, 0x0, 0x0);
        gbc.writeMem(0xb60e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xafd2);
        EXPECT(gbc.pc(), 0xb610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb60e), 0xcb);
        EXPECT(gbc.readMem(0xb60f), 0x4c);
        // CB 4C 03A9
        gbc.setState(0x3332, 0x9164, 0xce00, 0x3ad0, 0x2dc, 0xf93f, 0x0, 0x0);
        gbc.writeMem(0x3332, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9164);
        EXPECT(gbc.pc(), 0x3334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03AA
        gbc.setState(0x18f8, 0x88ba, 0xc710, 0xa743, 0xa684, 0x238, 0x0, 0x1);
        gbc.writeMem(0x18f8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x88ba);
        EXPECT(gbc.pc(), 0x18fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03AB
        gbc.setState(0xc382, 0xb1af, 0x3b10, 0x8b0d, 0xa07a, 0xc57c, 0x1, 0x1);
        gbc.writeMem(0xc382, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb1af);
        EXPECT(gbc.pc(), 0xc384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc382), 0xcb);
        EXPECT(gbc.readMem(0xc383), 0x4c);
        // CB 4C 03AC
        gbc.setState(0xa4e9, 0xf659, 0x47f0, 0x93a3, 0xa766, 0x5ec2, 0x1, 0x1);
        gbc.writeMem(0xa4e9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf659);
        EXPECT(gbc.pc(), 0xa4eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e9), 0xcb);
        EXPECT(gbc.readMem(0xa4ea), 0x4c);
        // CB 4C 03AD
        gbc.setState(0x6b97, 0xb80b, 0xec50, 0xc31a, 0xb79b, 0x1856, 0x0, 0x1);
        gbc.writeMem(0x6b97, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb80b);
        EXPECT(gbc.pc(), 0x6b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03AE
        gbc.setState(0x19f4, 0xa630, 0x3dd0, 0xfa24, 0x2f22, 0xb6cd, 0x0, 0x0);
        gbc.writeMem(0x19f4, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa630);
        EXPECT(gbc.pc(), 0x19f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03AF
        gbc.setState(0x9108, 0xe8f8, 0x5050, 0xfc37, 0x9549, 0xa66a, 0x0, 0x0);
        gbc.writeMem(0x9108, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe8f8);
        EXPECT(gbc.pc(), 0x910a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9108), 0xcb);
        EXPECT(gbc.readMem(0x9109), 0x4c);
        // CB 4C 03B0
        gbc.setState(0x655e, 0x4f52, 0xbe60, 0x5fd1, 0xba05, 0xa0b9, 0x0, 0x0);
        gbc.writeMem(0x655e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4f52);
        EXPECT(gbc.pc(), 0x6560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03B1
        gbc.setState(0x235f, 0x7f0b, 0x7450, 0xef8a, 0x12fe, 0xb479, 0x0, 0x0);
        gbc.writeMem(0x235f, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7f0b);
        EXPECT(gbc.pc(), 0x2361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03B2
        gbc.setState(0xd9fc, 0x5db2, 0x27d0, 0x3366, 0xb3b1, 0x86ce, 0x0, 0x0);
        gbc.writeMem(0xd9fc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5db2);
        EXPECT(gbc.pc(), 0xd9fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9fc), 0xcb);
        EXPECT(gbc.readMem(0xd9fd), 0x4c);
        // CB 4C 03B3
        gbc.setState(0xb6db, 0x8de0, 0x8b00, 0xe077, 0xea35, 0x8b2, 0x0, 0x1);
        gbc.writeMem(0xb6db, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8de0);
        EXPECT(gbc.pc(), 0xb6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6db), 0xcb);
        EXPECT(gbc.readMem(0xb6dc), 0x4c);
        // CB 4C 03B4
        gbc.setState(0x67b9, 0x7d94, 0xd470, 0x234e, 0x9cc9, 0xf9b9, 0x0, 0x0);
        gbc.writeMem(0x67b9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7d94);
        EXPECT(gbc.pc(), 0x67bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03B5
        gbc.setState(0xb65b, 0xfccd, 0x7220, 0x8945, 0xd25, 0x1226, 0x0, 0x0);
        gbc.writeMem(0xb65b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xfccd);
        EXPECT(gbc.pc(), 0xb65d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb65b), 0xcb);
        EXPECT(gbc.readMem(0xb65c), 0x4c);
        // CB 4C 03B6
        gbc.setState(0x4b59, 0x6f4b, 0x7f10, 0xedbc, 0x290f, 0xaee5, 0x1, 0x0);
        gbc.writeMem(0x4b59, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6f4b);
        EXPECT(gbc.pc(), 0x4b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03B7
        gbc.setState(0x3685, 0x5d9e, 0x750, 0x58d9, 0x67c6, 0x7fd1, 0x0, 0x0);
        gbc.writeMem(0x3685, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5d9e);
        EXPECT(gbc.pc(), 0x3687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03B8
        gbc.setState(0x9296, 0x8cef, 0x6ba0, 0x3d7d, 0x3439, 0x163b, 0x1, 0x0);
        gbc.writeMem(0x9296, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8cef);
        EXPECT(gbc.pc(), 0x9298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9296), 0xcb);
        EXPECT(gbc.readMem(0x9297), 0x4c);
        // CB 4C 03B9
        gbc.setState(0xab0e, 0x2e67, 0x6c50, 0x3510, 0x99e4, 0x79d3, 0x1, 0x1);
        gbc.writeMem(0xab0e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2e67);
        EXPECT(gbc.pc(), 0xab10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab0e), 0xcb);
        EXPECT(gbc.readMem(0xab0f), 0x4c);
        // CB 4C 03BA
        gbc.setState(0x633b, 0x6fbf, 0xa00, 0xf287, 0x51c7, 0xe822, 0x0, 0x0);
        gbc.writeMem(0x633b, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6fbf);
        EXPECT(gbc.pc(), 0x633d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03BB
        gbc.setState(0xaf30, 0x27b7, 0xd870, 0x7591, 0xa6bf, 0xd49b, 0x0, 0x1);
        gbc.writeMem(0xaf30, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x27b7);
        EXPECT(gbc.pc(), 0xaf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf30), 0xcb);
        EXPECT(gbc.readMem(0xaf31), 0x4c);
        // CB 4C 03BC
        gbc.setState(0xca0, 0xae37, 0x4840, 0x5d4e, 0x1504, 0xb7e8, 0x1, 0x0);
        gbc.writeMem(0xca0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xae37);
        EXPECT(gbc.pc(), 0xca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03BD
        gbc.setState(0xeb4a, 0x4c2e, 0x77f0, 0x9fb4, 0x50b0, 0xb2c2, 0x1, 0x1);
        gbc.writeMem(0xeb4a, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4c2e);
        EXPECT(gbc.pc(), 0xeb4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb4a), 0xcb);
        EXPECT(gbc.readMem(0xeb4b), 0x4c);
        // CB 4C 03BE
        gbc.setState(0x671, 0xe62c, 0xb010, 0x456, 0x9adc, 0x4cd6, 0x0, 0x1);
        gbc.writeMem(0x671, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe62c);
        EXPECT(gbc.pc(), 0x673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03BF
        gbc.setState(0xd925, 0x3a5, 0x10e0, 0x43d7, 0xb72a, 0x415c, 0x1, 0x0);
        gbc.writeMem(0xd925, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3a5);
        EXPECT(gbc.pc(), 0xd927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd925), 0xcb);
        EXPECT(gbc.readMem(0xd926), 0x4c);
        // CB 4C 03C0
        gbc.setState(0x4965, 0xe2d8, 0xfed0, 0xcd05, 0xb628, 0xdc78, 0x0, 0x1);
        gbc.writeMem(0x4965, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe2d8);
        EXPECT(gbc.pc(), 0x4967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03C1
        gbc.setState(0x3aee, 0x7351, 0x6440, 0xa9e, 0x547d, 0x93dd, 0x1, 0x1);
        gbc.writeMem(0x3aee, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7351);
        EXPECT(gbc.pc(), 0x3af0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03C2
        gbc.setState(0x222, 0x8b6c, 0xf0d0, 0x7be0, 0x7452, 0xdcca, 0x1, 0x0);
        gbc.writeMem(0x222, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8b6c);
        EXPECT(gbc.pc(), 0x224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03C3
        gbc.setState(0xa2cd, 0x3015, 0xa0d0, 0x9b3e, 0xad4b, 0x312c, 0x1, 0x0);
        gbc.writeMem(0xa2cd, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3015);
        EXPECT(gbc.pc(), 0xa2cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2cd), 0xcb);
        EXPECT(gbc.readMem(0xa2ce), 0x4c);
        // CB 4C 03C4
        gbc.setState(0xc05e, 0x8232, 0x4aa0, 0xd43, 0x28da, 0x5fca, 0x0, 0x0);
        gbc.writeMem(0xc05e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8232);
        EXPECT(gbc.pc(), 0xc060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc05e), 0xcb);
        EXPECT(gbc.readMem(0xc05f), 0x4c);
        // CB 4C 03C5
        gbc.setState(0xe803, 0xe5b4, 0x4fa0, 0xe7e4, 0xbe13, 0x6022, 0x1, 0x1);
        gbc.writeMem(0xe803, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe5b4);
        EXPECT(gbc.pc(), 0xe805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe803), 0xcb);
        EXPECT(gbc.readMem(0xe804), 0x4c);
        // CB 4C 03C6
        gbc.setState(0x7ce0, 0xf96e, 0x5b0, 0xd8bb, 0x5485, 0xec37, 0x0, 0x1);
        gbc.writeMem(0x7ce0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf96e);
        EXPECT(gbc.pc(), 0x7ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03C8
        gbc.setState(0x6a1c, 0x86cb, 0x86f0, 0x2f55, 0x48, 0x6c51, 0x1, 0x0);
        gbc.writeMem(0x6a1c, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x86cb);
        EXPECT(gbc.pc(), 0x6a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03C9
        gbc.setState(0x1a94, 0x780d, 0x8bb0, 0xa2a, 0x2256, 0x4964, 0x1, 0x1);
        gbc.writeMem(0x1a94, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x780d);
        EXPECT(gbc.pc(), 0x1a96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03CB
        gbc.setState(0x13c6, 0x7765, 0x1180, 0x551f, 0xd192, 0x6d84, 0x0, 0x0);
        gbc.writeMem(0x13c6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7765);
        EXPECT(gbc.pc(), 0x13c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03CC
        gbc.setState(0x3cd6, 0xa6f8, 0xc690, 0xc5a8, 0xe012, 0x5ab1, 0x0, 0x1);
        gbc.writeMem(0x3cd6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa6f8);
        EXPECT(gbc.pc(), 0x3cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03CD
        gbc.setState(0xc391, 0xb70d, 0x6a10, 0xaf89, 0x863f, 0xdcd0, 0x1, 0x1);
        gbc.writeMem(0xc391, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb70d);
        EXPECT(gbc.pc(), 0xc393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc391), 0xcb);
        EXPECT(gbc.readMem(0xc392), 0x4c);
        // CB 4C 03CE
        gbc.setState(0x46dc, 0xdee5, 0xd630, 0x307a, 0x5fbb, 0x1248, 0x0, 0x1);
        gbc.writeMem(0x46dc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdee5);
        EXPECT(gbc.pc(), 0x46de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03CF
        gbc.setState(0xd7f0, 0x18d6, 0x72c0, 0x9831, 0x693b, 0x7201, 0x0, 0x0);
        gbc.writeMem(0xd7f0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x18d6);
        EXPECT(gbc.pc(), 0xd7f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f0), 0xcb);
        EXPECT(gbc.readMem(0xd7f1), 0x4c);
        // CB 4C 03D0
        gbc.setState(0x2ab3, 0x1e0e, 0x5c20, 0xe729, 0x91b0, 0xec22, 0x0, 0x0);
        gbc.writeMem(0x2ab3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1e0e);
        EXPECT(gbc.pc(), 0x2ab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03D1
        gbc.setState(0x1bf0, 0xca07, 0xccf0, 0x7f2, 0xa417, 0x5b71, 0x1, 0x0);
        gbc.writeMem(0x1bf0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xca07);
        EXPECT(gbc.pc(), 0x1bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03D2
        gbc.setState(0xb63, 0x29ab, 0x8f10, 0x1eb6, 0xcbe0, 0x4eb9, 0x0, 0x0);
        gbc.writeMem(0xb63, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x29ab);
        EXPECT(gbc.pc(), 0xb65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03D3
        gbc.setState(0x47a1, 0xd6fe, 0xa380, 0xd1c9, 0xe62d, 0x63b6, 0x0, 0x0);
        gbc.writeMem(0x47a1, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd6fe);
        EXPECT(gbc.pc(), 0x47a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03D4
        gbc.setState(0xd963, 0x800b, 0x4860, 0xd556, 0x59ca, 0xdf66, 0x0, 0x0);
        gbc.writeMem(0xd963, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x800b);
        EXPECT(gbc.pc(), 0xd965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd963), 0xcb);
        EXPECT(gbc.readMem(0xd964), 0x4c);
        // CB 4C 03D5
        gbc.setState(0x90b5, 0x4d1d, 0x86b0, 0x6588, 0xa9c1, 0x40d8, 0x1, 0x1);
        gbc.writeMem(0x90b5, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4d1d);
        EXPECT(gbc.pc(), 0x90b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b5), 0xcb);
        EXPECT(gbc.readMem(0x90b6), 0x4c);
        // CB 4C 03D6
        gbc.setState(0xaef3, 0x58e, 0x8b00, 0xa359, 0xb81f, 0x956f, 0x0, 0x1);
        gbc.writeMem(0xaef3, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x58e);
        EXPECT(gbc.pc(), 0xaef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef3), 0xcb);
        EXPECT(gbc.readMem(0xaef4), 0x4c);
        // CB 4C 03D7
        gbc.setState(0x4724, 0xe2c0, 0xe2e0, 0x32a3, 0x75b4, 0xd898, 0x0, 0x1);
        gbc.writeMem(0x4724, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe2c0);
        EXPECT(gbc.pc(), 0x4726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03D8
        gbc.setState(0x2e4e, 0x20b3, 0x75f0, 0xaa1c, 0x1bc9, 0xb906, 0x1, 0x0);
        gbc.writeMem(0x2e4e, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x20b3);
        EXPECT(gbc.pc(), 0x2e50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03D9
        gbc.setState(0x8ed7, 0x34e6, 0x1080, 0xe98a, 0xc3f0, 0xa2db, 0x0, 0x0);
        gbc.writeMem(0x8ed7, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x34e6);
        EXPECT(gbc.pc(), 0x8ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed7), 0xcb);
        EXPECT(gbc.readMem(0x8ed8), 0x4c);
        // CB 4C 03DA
        gbc.setState(0x9a6, 0x7cac, 0x6dd0, 0xdec7, 0x6e8d, 0x88ca, 0x1, 0x1);
        gbc.writeMem(0x9a6, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7cac);
        EXPECT(gbc.pc(), 0x9a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03DB
        gbc.setState(0x71fc, 0x7a0b, 0x9540, 0x79a8, 0x4668, 0x7121, 0x1, 0x0);
        gbc.writeMem(0x71fc, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7a0b);
        EXPECT(gbc.pc(), 0x71fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03DC
        gbc.setState(0x8910, 0x2dd1, 0x6d00, 0x8671, 0xf0da, 0x2105, 0x1, 0x1);
        gbc.writeMem(0x8910, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2dd1);
        EXPECT(gbc.pc(), 0x8912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8910), 0xcb);
        EXPECT(gbc.readMem(0x8911), 0x4c);
        // CB 4C 03DD
        gbc.setState(0x2732, 0x7522, 0xf9a0, 0xd5a6, 0x77d7, 0x1c3a, 0x0, 0x1);
        gbc.writeMem(0x2732, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7522);
        EXPECT(gbc.pc(), 0x2734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03DE
        gbc.setState(0x2cae, 0x2860, 0x5160, 0xf1d0, 0xdd2f, 0x167e, 0x0, 0x1);
        gbc.writeMem(0x2cae, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2860);
        EXPECT(gbc.pc(), 0x2cb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03DF
        gbc.setState(0xa552, 0x24db, 0xe8e0, 0x134f, 0x3149, 0x9a9e, 0x0, 0x1);
        gbc.writeMem(0xa552, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x24db);
        EXPECT(gbc.pc(), 0xa554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa552), 0xcb);
        EXPECT(gbc.readMem(0xa553), 0x4c);
        // CB 4C 03E0
        gbc.setState(0x2315, 0x5e97, 0xa850, 0xdc04, 0xd96, 0x47a8, 0x0, 0x0);
        gbc.writeMem(0x2315, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5e97);
        EXPECT(gbc.pc(), 0x2317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03E1
        gbc.setState(0xe2db, 0xffd3, 0x7080, 0xd0c9, 0x2352, 0x7f23, 0x0, 0x0);
        gbc.writeMem(0xe2db, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xffd3);
        EXPECT(gbc.pc(), 0xe2dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2db), 0xcb);
        EXPECT(gbc.readMem(0xe2dc), 0x4c);
        // CB 4C 03E2
        gbc.setState(0x3579, 0x57f9, 0x2a80, 0xf849, 0x32d5, 0x1fd9, 0x0, 0x1);
        gbc.writeMem(0x3579, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x57f9);
        EXPECT(gbc.pc(), 0x357b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03E3
        gbc.setState(0x8268, 0x5d55, 0x2430, 0x645b, 0x73b2, 0x341f, 0x1, 0x0);
        gbc.writeMem(0x8268, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5d55);
        EXPECT(gbc.pc(), 0x826a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8268), 0xcb);
        EXPECT(gbc.readMem(0x8269), 0x4c);
        // CB 4C 03E4
        gbc.setState(0x5b0, 0x8c8d, 0x9940, 0x313, 0xf2a7, 0x8d5c, 0x0, 0x0);
        gbc.writeMem(0x5b0, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8c8d);
        EXPECT(gbc.pc(), 0x5b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4C 03E6
        gbc.setState(0xeb9, 0xf26b, 0xaaf0, 0xd0bc, 0xc9a8, 0x7057, 0x1, 0x0);
        gbc.writeMem(0xeb9, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf26b);
        EXPECT(gbc.pc(), 0xebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4C 03E7
        gbc.setState(0x5da8, 0xf551, 0xd920, 0xaeb4, 0x8078, 0x465e, 0x0, 0x0);
        gbc.writeMem(0x5da8, { 0xcb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf551);
        EXPECT(gbc.pc(), 0x5daa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
