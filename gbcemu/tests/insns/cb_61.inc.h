    TEST(gbcemu, opcode_cb_61) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 61 0000
        gbc.setState(0xbf19, 0x10f0, 0xd490, 0x8470, 0x490b, 0x6082, 0x0, 0x1);
        gbc.writeMem(0xbf19, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x10f0, gbc.sp());
        EXPECT(0xbf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf19));
        EXPECT(0x61, gbc.readMem(0xbf1a));
        // CB 61 0001
        gbc.setState(0x8789, 0xb81b, 0x8830, 0xa8b7, 0xb2ae, 0x1aba, 0x0, 0x0);
        gbc.writeMem(0x8789, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb81b, gbc.sp());
        EXPECT(0x878b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8789));
        EXPECT(0x61, gbc.readMem(0x878a));
        // CB 61 0002
        gbc.setState(0xc96e, 0xa598, 0x22c0, 0x523c, 0x670c, 0x1f6d, 0x1, 0x1);
        gbc.writeMem(0xc96e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa598, gbc.sp());
        EXPECT(0xc970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96e));
        EXPECT(0x61, gbc.readMem(0xc96f));
        // CB 61 0003
        gbc.setState(0x4431, 0xcef9, 0xf750, 0xbd90, 0xe7b6, 0xa82e, 0x1, 0x1);
        gbc.writeMem(0x4431, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcef9, gbc.sp());
        EXPECT(0x4433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0004
        gbc.setState(0x9cf8, 0xa7b4, 0xa340, 0xf26c, 0x8a6d, 0xc68c, 0x0, 0x0);
        gbc.writeMem(0x9cf8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa7b4, gbc.sp());
        EXPECT(0x9cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf8));
        EXPECT(0x61, gbc.readMem(0x9cf9));
        // CB 61 0007
        gbc.setState(0xcd80, 0x6898, 0x5070, 0x7d2c, 0x25f9, 0x8f83, 0x0, 0x1);
        gbc.writeMem(0xcd80, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6898, gbc.sp());
        EXPECT(0xcd82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd80));
        EXPECT(0x61, gbc.readMem(0xcd81));
        // CB 61 0008
        gbc.setState(0x301, 0x3260, 0xf440, 0xb4da, 0x6099, 0x27f8, 0x1, 0x0);
        gbc.writeMem(0x301, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0x303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0009
        gbc.setState(0xee16, 0xcaeb, 0xf50, 0x23c7, 0x81ba, 0xa313, 0x1, 0x0);
        gbc.writeMem(0xee16, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcaeb, gbc.sp());
        EXPECT(0xee18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee16));
        EXPECT(0x61, gbc.readMem(0xee17));
        // CB 61 000A
        gbc.setState(0x3a, 0xe4d0, 0xd010, 0x80e7, 0xfc7b, 0x9236, 0x0, 0x1);
        gbc.writeMem(0x3a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe4d0, gbc.sp());
        EXPECT(0x3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 000B
        gbc.setState(0x8f39, 0x72ec, 0x8a80, 0xf952, 0xfa8f, 0x38aa, 0x0, 0x0);
        gbc.writeMem(0x8f39, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x72ec, gbc.sp());
        EXPECT(0x8f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f39));
        EXPECT(0x61, gbc.readMem(0x8f3a));
        // CB 61 000C
        gbc.setState(0x224, 0x9bae, 0x5530, 0x8405, 0x8609, 0x70de, 0x1, 0x1);
        gbc.writeMem(0x224, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9bae, gbc.sp());
        EXPECT(0x226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 000D
        gbc.setState(0xcd9a, 0xf370, 0x6350, 0x71d7, 0xf923, 0x5e74, 0x0, 0x0);
        gbc.writeMem(0xcd9a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf370, gbc.sp());
        EXPECT(0xcd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9a));
        EXPECT(0x61, gbc.readMem(0xcd9b));
        // CB 61 000E
        gbc.setState(0x7257, 0x7050, 0x38a0, 0xa3b6, 0x2396, 0x2c11, 0x1, 0x0);
        gbc.writeMem(0x7257, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7050, gbc.sp());
        EXPECT(0x7259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 000F
        gbc.setState(0xd895, 0x49c9, 0x6330, 0x7fb0, 0x561a, 0x1c5f, 0x0, 0x1);
        gbc.writeMem(0xd895, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x49c9, gbc.sp());
        EXPECT(0xd897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd895));
        EXPECT(0x61, gbc.readMem(0xd896));
        // CB 61 0010
        gbc.setState(0xcd9c, 0xfafc, 0xa1f0, 0x6b70, 0x62b8, 0x9a67, 0x0, 0x0);
        gbc.writeMem(0xcd9c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfafc, gbc.sp());
        EXPECT(0xcd9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9c));
        EXPECT(0x61, gbc.readMem(0xcd9d));
        // CB 61 0011
        gbc.setState(0x40bf, 0xf6f7, 0x63a0, 0xd9c5, 0x47e2, 0x9876, 0x0, 0x0);
        gbc.writeMem(0x40bf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf6f7, gbc.sp());
        EXPECT(0x40c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0012
        gbc.setState(0x5625, 0xefbe, 0xc5d0, 0xf3d5, 0xc393, 0x2f85, 0x0, 0x1);
        gbc.writeMem(0x5625, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xefbe, gbc.sp());
        EXPECT(0x5627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0013
        gbc.setState(0x5363, 0x8a0d, 0xcd0, 0x904, 0xf31b, 0x7256, 0x1, 0x0);
        gbc.writeMem(0x5363, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8a0d, gbc.sp());
        EXPECT(0x5365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0014
        gbc.setState(0xc47c, 0x3b28, 0xbc0, 0xc94f, 0x34b3, 0x9fc, 0x1, 0x1);
        gbc.writeMem(0xc47c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3b28, gbc.sp());
        EXPECT(0xc47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47c));
        EXPECT(0x61, gbc.readMem(0xc47d));
        // CB 61 0015
        gbc.setState(0x5cb, 0xdf39, 0x8460, 0xe69c, 0xde0b, 0x662e, 0x0, 0x1);
        gbc.writeMem(0x5cb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdf39, gbc.sp());
        EXPECT(0x5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0016
        gbc.setState(0x7478, 0xe680, 0x3a00, 0x7959, 0xf857, 0xa6b4, 0x0, 0x1);
        gbc.writeMem(0x7478, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe680, gbc.sp());
        EXPECT(0x747a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0017
        gbc.setState(0xd7b4, 0x1a34, 0x1b0, 0x58e, 0xfa7, 0x7a35, 0x0, 0x0);
        gbc.writeMem(0xd7b4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1a34, gbc.sp());
        EXPECT(0xd7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b4));
        EXPECT(0x61, gbc.readMem(0xd7b5));
        // CB 61 0018
        gbc.setState(0x7e6d, 0xce28, 0x390, 0xa61b, 0xed47, 0x4de, 0x0, 0x0);
        gbc.writeMem(0x7e6d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xce28, gbc.sp());
        EXPECT(0x7e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0019
        gbc.setState(0x1382, 0x9b63, 0xd8b0, 0x4e67, 0xd185, 0xec32, 0x1, 0x0);
        gbc.writeMem(0x1382, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9b63, gbc.sp());
        EXPECT(0x1384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 001A
        gbc.setState(0xcb8b, 0xad0d, 0x3c50, 0x54e4, 0xb7b1, 0x6fcd, 0x0, 0x0);
        gbc.writeMem(0xcb8b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xad0d, gbc.sp());
        EXPECT(0xcb8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8b));
        EXPECT(0x61, gbc.readMem(0xcb8c));
        // CB 61 001B
        gbc.setState(0x91d8, 0xb37c, 0xe520, 0x568d, 0xb3ae, 0xde50, 0x0, 0x1);
        gbc.writeMem(0x91d8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb37c, gbc.sp());
        EXPECT(0x91da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d8));
        EXPECT(0x61, gbc.readMem(0x91d9));
        // CB 61 001C
        gbc.setState(0x4733, 0x6566, 0x1d90, 0xf5d4, 0x297e, 0xe362, 0x0, 0x0);
        gbc.writeMem(0x4733, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6566, gbc.sp());
        EXPECT(0x4735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 001E
        gbc.setState(0x2e81, 0x1f9b, 0x5a80, 0x97fa, 0xc985, 0x2fe2, 0x1, 0x1);
        gbc.writeMem(0x2e81, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1f9b, gbc.sp());
        EXPECT(0x2e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 001F
        gbc.setState(0xab4, 0x2b62, 0xa0, 0xb9b8, 0x5675, 0x72b7, 0x1, 0x1);
        gbc.writeMem(0xab4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2b62, gbc.sp());
        EXPECT(0xab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0020
        gbc.setState(0x6b10, 0xc01d, 0x78f0, 0xd3e9, 0x71d, 0x2515, 0x1, 0x0);
        gbc.writeMem(0x6b10, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc01d, gbc.sp());
        EXPECT(0x6b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0021
        gbc.setState(0x107b, 0x127, 0x9c20, 0xdfc5, 0x46b7, 0x99f2, 0x1, 0x1);
        gbc.writeMem(0x107b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x127, gbc.sp());
        EXPECT(0x107d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0022
        gbc.setState(0x653e, 0xbebc, 0xb160, 0x96a6, 0x9ea, 0x68b7, 0x1, 0x1);
        gbc.writeMem(0x653e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbebc, gbc.sp());
        EXPECT(0x6540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0023
        gbc.setState(0x5bd8, 0x36bf, 0xe030, 0xa4b0, 0x937a, 0xf89a, 0x0, 0x1);
        gbc.writeMem(0x5bd8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x36bf, gbc.sp());
        EXPECT(0x5bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0024
        gbc.setState(0xd912, 0xb650, 0x4f10, 0xaa7b, 0x8651, 0x3a69, 0x0, 0x1);
        gbc.writeMem(0xd912, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb650, gbc.sp());
        EXPECT(0xd914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd912));
        EXPECT(0x61, gbc.readMem(0xd913));
        // CB 61 0025
        gbc.setState(0x9c24, 0xd7a8, 0x2eb0, 0xf174, 0x1924, 0x6170, 0x1, 0x0);
        gbc.writeMem(0x9c24, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd7a8, gbc.sp());
        EXPECT(0x9c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c24));
        EXPECT(0x61, gbc.readMem(0x9c25));
        // CB 61 0026
        gbc.setState(0xb9c3, 0x9265, 0x6f50, 0x1704, 0xca4f, 0x4b3f, 0x1, 0x1);
        gbc.writeMem(0xb9c3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9265, gbc.sp());
        EXPECT(0xb9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c3));
        EXPECT(0x61, gbc.readMem(0xb9c4));
        // CB 61 0027
        gbc.setState(0xb8a6, 0xe116, 0x69e0, 0x84e9, 0x3881, 0x1eb6, 0x0, 0x1);
        gbc.writeMem(0xb8a6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe116, gbc.sp());
        EXPECT(0xb8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a6));
        EXPECT(0x61, gbc.readMem(0xb8a7));
        // CB 61 0028
        gbc.setState(0xcf02, 0x4d8c, 0x47c0, 0xbc4f, 0xd37d, 0xea, 0x0, 0x1);
        gbc.writeMem(0xcf02, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4d8c, gbc.sp());
        EXPECT(0xcf04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf02));
        EXPECT(0x61, gbc.readMem(0xcf03));
        // CB 61 0029
        gbc.setState(0x9a6f, 0x614c, 0x15a0, 0x48c4, 0xe07, 0x5795, 0x1, 0x1);
        gbc.writeMem(0x9a6f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x614c, gbc.sp());
        EXPECT(0x9a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6f));
        EXPECT(0x61, gbc.readMem(0x9a70));
        // CB 61 002A
        gbc.setState(0x2ff8, 0x45d0, 0x6ad0, 0xb0b1, 0x4675, 0x7548, 0x1, 0x0);
        gbc.writeMem(0x2ff8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x45d0, gbc.sp());
        EXPECT(0x2ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 002B
        gbc.setState(0x1440, 0xea82, 0xa300, 0x5f41, 0x47d9, 0xa46d, 0x0, 0x1);
        gbc.writeMem(0x1440, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xea82, gbc.sp());
        EXPECT(0x1442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 002C
        gbc.setState(0xeccf, 0x1f3, 0x2df0, 0x86d5, 0x1918, 0x80f, 0x1, 0x1);
        gbc.writeMem(0xeccf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1f3, gbc.sp());
        EXPECT(0xecd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeccf));
        EXPECT(0x61, gbc.readMem(0xecd0));
        // CB 61 002D
        gbc.setState(0xbf49, 0x8195, 0xe320, 0x4b15, 0x3fce, 0x6568, 0x1, 0x1);
        gbc.writeMem(0xbf49, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8195, gbc.sp());
        EXPECT(0xbf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf49));
        EXPECT(0x61, gbc.readMem(0xbf4a));
        // CB 61 002E
        gbc.setState(0x117, 0x8b9a, 0xc0, 0x9e56, 0x63d8, 0xf009, 0x1, 0x1);
        gbc.writeMem(0x117, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8b9a, gbc.sp());
        EXPECT(0x119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 002F
        gbc.setState(0xc709, 0xbe43, 0x6c80, 0xd467, 0x45b8, 0x4896, 0x1, 0x1);
        gbc.writeMem(0xc709, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbe43, gbc.sp());
        EXPECT(0xc70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc709));
        EXPECT(0x61, gbc.readMem(0xc70a));
        // CB 61 0030
        gbc.setState(0x27c2, 0x3d2c, 0x77c0, 0xdf50, 0xad54, 0xcad7, 0x1, 0x1);
        gbc.writeMem(0x27c2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3d2c, gbc.sp());
        EXPECT(0x27c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0031
        gbc.setState(0x5573, 0x7b55, 0xa060, 0x807f, 0x8ebb, 0x580a, 0x1, 0x0);
        gbc.writeMem(0x5573, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7b55, gbc.sp());
        EXPECT(0x5575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0032
        gbc.setState(0x3549, 0x33ea, 0x8a90, 0x4d2f, 0xa88e, 0x63ed, 0x1, 0x0);
        gbc.writeMem(0x3549, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x33ea, gbc.sp());
        EXPECT(0x354b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0033
        gbc.setState(0xa72e, 0xb706, 0x8420, 0xa650, 0x8938, 0x7803, 0x0, 0x1);
        gbc.writeMem(0xa72e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb706, gbc.sp());
        EXPECT(0xa730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72e));
        EXPECT(0x61, gbc.readMem(0xa72f));
        // CB 61 0034
        gbc.setState(0x9ead, 0x806a, 0x1d50, 0x6ad6, 0xf3dc, 0xc4eb, 0x1, 0x0);
        gbc.writeMem(0x9ead, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x806a, gbc.sp());
        EXPECT(0x9eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ead));
        EXPECT(0x61, gbc.readMem(0x9eae));
        // CB 61 0035
        gbc.setState(0x6db, 0xefa8, 0x1760, 0x508, 0xdeef, 0x62bc, 0x1, 0x0);
        gbc.writeMem(0x6db, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xefa8, gbc.sp());
        EXPECT(0x6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0037
        gbc.setState(0x60fd, 0xdec0, 0x5e30, 0x687c, 0x784f, 0xd37c, 0x1, 0x1);
        gbc.writeMem(0x60fd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdec0, gbc.sp());
        EXPECT(0x60ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0038
        gbc.setState(0x3ad7, 0x29dc, 0x1560, 0x9392, 0xbf83, 0xc1ed, 0x0, 0x1);
        gbc.writeMem(0x3ad7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x29dc, gbc.sp());
        EXPECT(0x3ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0039
        gbc.setState(0xc58d, 0x2e2a, 0xc0d0, 0xe072, 0xf9d8, 0xb90c, 0x1, 0x0);
        gbc.writeMem(0xc58d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2e2a, gbc.sp());
        EXPECT(0xc58f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58d));
        EXPECT(0x61, gbc.readMem(0xc58e));
        // CB 61 003A
        gbc.setState(0x3f44, 0xb45c, 0xf90, 0xbc42, 0x6b94, 0xe216, 0x0, 0x1);
        gbc.writeMem(0x3f44, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb45c, gbc.sp());
        EXPECT(0x3f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 003B
        gbc.setState(0xa065, 0xd5ec, 0x9590, 0xda91, 0xb1aa, 0x316c, 0x1, 0x1);
        gbc.writeMem(0xa065, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd5ec, gbc.sp());
        EXPECT(0xa067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa065));
        EXPECT(0x61, gbc.readMem(0xa066));
        // CB 61 003C
        gbc.setState(0x4582, 0xd1fd, 0x4fa0, 0x7a42, 0x266c, 0xf1f0, 0x1, 0x0);
        gbc.writeMem(0x4582, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd1fd, gbc.sp());
        EXPECT(0x4584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 003D
        gbc.setState(0x6b81, 0xfc05, 0xfc50, 0xec9c, 0x12a6, 0x7212, 0x0, 0x0);
        gbc.writeMem(0x6b81, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfc05, gbc.sp());
        EXPECT(0x6b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 003E
        gbc.setState(0x46ba, 0x6e17, 0x12f0, 0x39fc, 0xcaf5, 0xf854, 0x0, 0x1);
        gbc.writeMem(0x46ba, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6e17, gbc.sp());
        EXPECT(0x46bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 003F
        gbc.setState(0x32e8, 0xf787, 0x7f30, 0xc81c, 0x5d13, 0xf9e6, 0x0, 0x0);
        gbc.writeMem(0x32e8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf787, gbc.sp());
        EXPECT(0x32ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0040
        gbc.setState(0x7dbc, 0x67ed, 0x75a0, 0xaeda, 0x40dd, 0xb10, 0x1, 0x1);
        gbc.writeMem(0x7dbc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x67ed, gbc.sp());
        EXPECT(0x7dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0041
        gbc.setState(0x6b99, 0xd198, 0xc980, 0x6d6b, 0x73e8, 0xc66b, 0x1, 0x1);
        gbc.writeMem(0x6b99, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd198, gbc.sp());
        EXPECT(0x6b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0042
        gbc.setState(0x9fe8, 0xd7fd, 0xaf80, 0xa8d7, 0x344f, 0x941f, 0x1, 0x0);
        gbc.writeMem(0x9fe8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd7fd, gbc.sp());
        EXPECT(0x9fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe8));
        EXPECT(0x61, gbc.readMem(0x9fe9));
        // CB 61 0043
        gbc.setState(0x452a, 0xce19, 0xa000, 0x4d6b, 0x669f, 0xf717, 0x0, 0x0);
        gbc.writeMem(0x452a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xce19, gbc.sp());
        EXPECT(0x452c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0044
        gbc.setState(0xb26c, 0x8592, 0xba0, 0xd5a, 0x4efa, 0x373e, 0x1, 0x1);
        gbc.writeMem(0xb26c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8592, gbc.sp());
        EXPECT(0xb26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26c));
        EXPECT(0x61, gbc.readMem(0xb26d));
        // CB 61 0045
        gbc.setState(0xba2f, 0x4dd4, 0x9580, 0x5e77, 0x458f, 0xef3, 0x1, 0x0);
        gbc.writeMem(0xba2f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4dd4, gbc.sp());
        EXPECT(0xba31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2f));
        EXPECT(0x61, gbc.readMem(0xba30));
        // CB 61 0046
        gbc.setState(0x1e35, 0x6e5b, 0x490, 0x5442, 0x6257, 0x502d, 0x0, 0x0);
        gbc.writeMem(0x1e35, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6e5b, gbc.sp());
        EXPECT(0x1e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0047
        gbc.setState(0x60b5, 0x1335, 0x44e0, 0x5021, 0x36e9, 0x5976, 0x1, 0x0);
        gbc.writeMem(0x60b5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1335, gbc.sp());
        EXPECT(0x60b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0048
        gbc.setState(0x96af, 0x9f8d, 0x3310, 0x57c8, 0xea54, 0x2d11, 0x0, 0x0);
        gbc.writeMem(0x96af, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9f8d, gbc.sp());
        EXPECT(0x96b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96af));
        EXPECT(0x61, gbc.readMem(0x96b0));
        // CB 61 0049
        gbc.setState(0x2ca3, 0xb1ec, 0xc340, 0xf619, 0xb0f, 0xb86f, 0x1, 0x0);
        gbc.writeMem(0x2ca3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb1ec, gbc.sp());
        EXPECT(0x2ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 004A
        gbc.setState(0xde96, 0x4609, 0x8d40, 0x56c7, 0x3ee7, 0xd38e, 0x0, 0x0);
        gbc.writeMem(0xde96, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4609, gbc.sp());
        EXPECT(0xde98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde96));
        EXPECT(0x61, gbc.readMem(0xde97));
        // CB 61 004B
        gbc.setState(0x89f0, 0x5da0, 0x3bc0, 0x714, 0xea47, 0xa50a, 0x0, 0x0);
        gbc.writeMem(0x89f0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5da0, gbc.sp());
        EXPECT(0x89f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f0));
        EXPECT(0x61, gbc.readMem(0x89f1));
        // CB 61 004C
        gbc.setState(0x79ce, 0x4a0f, 0x39e0, 0xfb8e, 0x5c48, 0x2e9f, 0x0, 0x1);
        gbc.writeMem(0x79ce, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4a0f, gbc.sp());
        EXPECT(0x79d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 004D
        gbc.setState(0x9a3f, 0x8668, 0x7c30, 0x49bf, 0x65e5, 0xa06b, 0x1, 0x0);
        gbc.writeMem(0x9a3f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8668, gbc.sp());
        EXPECT(0x9a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3f));
        EXPECT(0x61, gbc.readMem(0x9a40));
        // CB 61 004E
        gbc.setState(0x2787, 0xe0f, 0x5c20, 0xa71a, 0xf682, 0x4965, 0x0, 0x1);
        gbc.writeMem(0x2787, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe0f, gbc.sp());
        EXPECT(0x2789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 004F
        gbc.setState(0x2d1, 0x866a, 0x7bb0, 0x929c, 0xd965, 0xe284, 0x0, 0x1);
        gbc.writeMem(0x2d1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x866a, gbc.sp());
        EXPECT(0x2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0050
        gbc.setState(0x2374, 0x1d09, 0xa40, 0x8a78, 0x5e5b, 0x62e7, 0x0, 0x0);
        gbc.writeMem(0x2374, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1d09, gbc.sp());
        EXPECT(0x2376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0052
        gbc.setState(0x959a, 0xdec6, 0x1a00, 0x85d3, 0xa18d, 0xc5f6, 0x1, 0x0);
        gbc.writeMem(0x959a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdec6, gbc.sp());
        EXPECT(0x959c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959a));
        EXPECT(0x61, gbc.readMem(0x959b));
        // CB 61 0053
        gbc.setState(0xd5fd, 0xf1e8, 0x5390, 0x3e96, 0x173a, 0x306f, 0x0, 0x0);
        gbc.writeMem(0xd5fd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf1e8, gbc.sp());
        EXPECT(0xd5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5fd));
        EXPECT(0x61, gbc.readMem(0xd5fe));
        // CB 61 0054
        gbc.setState(0x6c29, 0x4a9d, 0x5730, 0x5cb2, 0x5c0, 0x1598, 0x0, 0x1);
        gbc.writeMem(0x6c29, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4a9d, gbc.sp());
        EXPECT(0x6c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0055
        gbc.setState(0x9d36, 0xd57e, 0x57f0, 0xc576, 0xea23, 0x6c82, 0x1, 0x0);
        gbc.writeMem(0x9d36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd57e, gbc.sp());
        EXPECT(0x9d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d36));
        EXPECT(0x61, gbc.readMem(0x9d37));
        // CB 61 0056
        gbc.setState(0x991, 0x4ac6, 0x8c60, 0xef11, 0x7311, 0xd234, 0x1, 0x1);
        gbc.writeMem(0x991, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4ac6, gbc.sp());
        EXPECT(0x993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0057
        gbc.setState(0xc2a7, 0x26f7, 0xa060, 0x75a8, 0x82e, 0xcd8f, 0x0, 0x0);
        gbc.writeMem(0xc2a7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x26f7, gbc.sp());
        EXPECT(0xc2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a7));
        EXPECT(0x61, gbc.readMem(0xc2a8));
        // CB 61 0058
        gbc.setState(0x86ca, 0xf412, 0xbbb0, 0xc8bc, 0xf279, 0xbc97, 0x0, 0x1);
        gbc.writeMem(0x86ca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf412, gbc.sp());
        EXPECT(0x86cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ca));
        EXPECT(0x61, gbc.readMem(0x86cb));
        // CB 61 0059
        gbc.setState(0x68e7, 0xa09f, 0x6ff0, 0x92b4, 0xf4b8, 0x19f9, 0x0, 0x1);
        gbc.writeMem(0x68e7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa09f, gbc.sp());
        EXPECT(0x68e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 005A
        gbc.setState(0xbdde, 0x7734, 0x3810, 0x5db, 0x7334, 0xffb2, 0x0, 0x0);
        gbc.writeMem(0xbdde, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7734, gbc.sp());
        EXPECT(0xbde0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdde));
        EXPECT(0x61, gbc.readMem(0xbddf));
        // CB 61 005B
        gbc.setState(0x107e, 0x85ef, 0x4a0, 0x66e5, 0x2c3f, 0xbd10, 0x0, 0x1);
        gbc.writeMem(0x107e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x85ef, gbc.sp());
        EXPECT(0x1080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 005D
        gbc.setState(0x8776, 0xc0a8, 0x93e0, 0xd707, 0x7794, 0x7d2f, 0x1, 0x0);
        gbc.writeMem(0x8776, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc0a8, gbc.sp());
        EXPECT(0x8778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8776));
        EXPECT(0x61, gbc.readMem(0x8777));
        // CB 61 005E
        gbc.setState(0x79a5, 0x3ee9, 0xd9a0, 0xdcb8, 0xbb34, 0x3dcf, 0x1, 0x1);
        gbc.writeMem(0x79a5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3ee9, gbc.sp());
        EXPECT(0x79a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 005F
        gbc.setState(0xe750, 0x55c7, 0x36b0, 0xd890, 0x535d, 0x472, 0x1, 0x0);
        gbc.writeMem(0xe750, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x55c7, gbc.sp());
        EXPECT(0xe752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe750));
        EXPECT(0x61, gbc.readMem(0xe751));
        // CB 61 0060
        gbc.setState(0xcf73, 0xd687, 0x10a0, 0x1464, 0xa24e, 0xe59e, 0x0, 0x0);
        gbc.writeMem(0xcf73, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd687, gbc.sp());
        EXPECT(0xcf75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf73));
        EXPECT(0x61, gbc.readMem(0xcf74));
        // CB 61 0061
        gbc.setState(0xb173, 0xa19b, 0xf450, 0x24c2, 0xe460, 0x7260, 0x1, 0x0);
        gbc.writeMem(0xb173, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa19b, gbc.sp());
        EXPECT(0xb175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb173));
        EXPECT(0x61, gbc.readMem(0xb174));
        // CB 61 0062
        gbc.setState(0xa52b, 0x1111, 0xa750, 0x7059, 0xcfca, 0x4c7e, 0x0, 0x0);
        gbc.writeMem(0xa52b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1111, gbc.sp());
        EXPECT(0xa52d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52b));
        EXPECT(0x61, gbc.readMem(0xa52c));
        // CB 61 0063
        gbc.setState(0x3555, 0xefe8, 0xf610, 0xa66d, 0xc13, 0x37ab, 0x1, 0x1);
        gbc.writeMem(0x3555, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xefe8, gbc.sp());
        EXPECT(0x3557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0064
        gbc.setState(0x24ed, 0x10da, 0x3e20, 0xcf58, 0x11c5, 0x8b83, 0x1, 0x1);
        gbc.writeMem(0x24ed, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x10da, gbc.sp());
        EXPECT(0x24ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0065
        gbc.setState(0xcab2, 0xf928, 0xbe00, 0x8e5d, 0xa756, 0xcedb, 0x1, 0x0);
        gbc.writeMem(0xcab2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf928, gbc.sp());
        EXPECT(0xcab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab2));
        EXPECT(0x61, gbc.readMem(0xcab3));
        // CB 61 0066
        gbc.setState(0x6582, 0xaf6b, 0x63c0, 0x8c68, 0x2ee7, 0xb3e0, 0x0, 0x0);
        gbc.writeMem(0x6582, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xaf6b, gbc.sp());
        EXPECT(0x6584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0068
        gbc.setState(0x23ec, 0xe506, 0x1f20, 0xe26d, 0x9b43, 0xcf37, 0x0, 0x1);
        gbc.writeMem(0x23ec, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe506, gbc.sp());
        EXPECT(0x23ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0069
        gbc.setState(0x9c80, 0x828, 0xcc40, 0xd030, 0x2bca, 0x7e0a, 0x0, 0x1);
        gbc.writeMem(0x9c80, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x828, gbc.sp());
        EXPECT(0x9c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c80));
        EXPECT(0x61, gbc.readMem(0x9c81));
        // CB 61 006A
        gbc.setState(0xb696, 0x43f0, 0x2480, 0xb3bc, 0x2804, 0xe0ff, 0x0, 0x1);
        gbc.writeMem(0xb696, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x43f0, gbc.sp());
        EXPECT(0xb698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb696));
        EXPECT(0x61, gbc.readMem(0xb697));
        // CB 61 006B
        gbc.setState(0xa98c, 0x7f1a, 0xb4c0, 0x198c, 0xaa, 0xafab, 0x1, 0x1);
        gbc.writeMem(0xa98c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7f1a, gbc.sp());
        EXPECT(0xa98e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98c));
        EXPECT(0x61, gbc.readMem(0xa98d));
        // CB 61 006C
        gbc.setState(0x84d5, 0x4b9c, 0xf300, 0x4f64, 0x1556, 0xeaef, 0x1, 0x1);
        gbc.writeMem(0x84d5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4b9c, gbc.sp());
        EXPECT(0x84d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d5));
        EXPECT(0x61, gbc.readMem(0x84d6));
        // CB 61 006D
        gbc.setState(0x7f10, 0xa9c7, 0x8a10, 0x7301, 0xc4be, 0x3271, 0x0, 0x0);
        gbc.writeMem(0x7f10, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa9c7, gbc.sp());
        EXPECT(0x7f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 006E
        gbc.setState(0x4ddb, 0xfc5b, 0x95a0, 0x4a81, 0xade9, 0x6eef, 0x0, 0x0);
        gbc.writeMem(0x4ddb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfc5b, gbc.sp());
        EXPECT(0x4ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 006F
        gbc.setState(0x2e36, 0x515b, 0xc130, 0x1974, 0x7e4b, 0x58bd, 0x0, 0x0);
        gbc.writeMem(0x2e36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x515b, gbc.sp());
        EXPECT(0x2e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0070
        gbc.setState(0x41da, 0x5c50, 0xf720, 0x229e, 0x81e6, 0x7e62, 0x0, 0x0);
        gbc.writeMem(0x41da, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5c50, gbc.sp());
        EXPECT(0x41dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0071
        gbc.setState(0x4e, 0x11a7, 0xafb0, 0xb071, 0x170f, 0x6e0c, 0x0, 0x1);
        gbc.writeMem(0x4e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x11a7, gbc.sp());
        EXPECT(0x50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0072
        gbc.setState(0x7aa1, 0x24f4, 0x53f0, 0x1ad8, 0xf6aa, 0x9da6, 0x1, 0x0);
        gbc.writeMem(0x7aa1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x24f4, gbc.sp());
        EXPECT(0x7aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0073
        gbc.setState(0x169c, 0x2a8c, 0x60e0, 0xca47, 0xa67b, 0x402a, 0x1, 0x1);
        gbc.writeMem(0x169c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2a8c, gbc.sp());
        EXPECT(0x169e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0074
        gbc.setState(0xb0f, 0x92e0, 0x1180, 0x3d24, 0x197a, 0x624, 0x1, 0x1);
        gbc.writeMem(0xb0f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x92e0, gbc.sp());
        EXPECT(0xb11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0075
        gbc.setState(0x1689, 0xd759, 0xff70, 0x76fe, 0xfbd, 0x589a, 0x0, 0x0);
        gbc.writeMem(0x1689, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd759, gbc.sp());
        EXPECT(0x168b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0076
        gbc.setState(0x2add, 0x84c4, 0x1af0, 0x9179, 0x4024, 0x7402, 0x0, 0x1);
        gbc.writeMem(0x2add, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x84c4, gbc.sp());
        EXPECT(0x2adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0077
        gbc.setState(0x450b, 0x7670, 0xbcc0, 0x32de, 0xd7de, 0x571e, 0x1, 0x1);
        gbc.writeMem(0x450b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7670, gbc.sp());
        EXPECT(0x450d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0078
        gbc.setState(0x3a01, 0xa7cc, 0xa060, 0xf689, 0x404, 0xc007, 0x0, 0x1);
        gbc.writeMem(0x3a01, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa7cc, gbc.sp());
        EXPECT(0x3a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0079
        gbc.setState(0x1add, 0x8e91, 0xc2f0, 0x5f23, 0xdcdc, 0x34fb, 0x0, 0x1);
        gbc.writeMem(0x1add, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8e91, gbc.sp());
        EXPECT(0x1adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 007A
        gbc.setState(0x5f4, 0x689b, 0xb030, 0xb19b, 0x9278, 0x1f84, 0x0, 0x0);
        gbc.writeMem(0x5f4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x689b, gbc.sp());
        EXPECT(0x5f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 007B
        gbc.setState(0xa0dc, 0x4caa, 0x4d50, 0x7361, 0x96b4, 0x19a9, 0x1, 0x1);
        gbc.writeMem(0xa0dc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4caa, gbc.sp());
        EXPECT(0xa0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0dc));
        EXPECT(0x61, gbc.readMem(0xa0dd));
        // CB 61 007C
        gbc.setState(0xc6fc, 0x9c5c, 0x64a0, 0xc6fc, 0xb3ec, 0x8480, 0x1, 0x1);
        gbc.writeMem(0xc6fc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9c5c, gbc.sp());
        EXPECT(0xc6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6fc));
        EXPECT(0x61, gbc.readMem(0xc6fd));
        // CB 61 007D
        gbc.setState(0x4fd6, 0x4410, 0xd900, 0x5aed, 0x4c7c, 0x850b, 0x0, 0x1);
        gbc.writeMem(0x4fd6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4410, gbc.sp());
        EXPECT(0x4fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 007E
        gbc.setState(0xa797, 0xaa1b, 0x1db0, 0x2175, 0x52e8, 0x5ef8, 0x1, 0x1);
        gbc.writeMem(0xa797, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xaa1b, gbc.sp());
        EXPECT(0xa799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa797));
        EXPECT(0x61, gbc.readMem(0xa798));
        // CB 61 0080
        gbc.setState(0x98de, 0x7d6f, 0x2b60, 0xa83, 0xed7f, 0x93b3, 0x1, 0x0);
        gbc.writeMem(0x98de, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7d6f, gbc.sp());
        EXPECT(0x98e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98de));
        EXPECT(0x61, gbc.readMem(0x98df));
        // CB 61 0081
        gbc.setState(0x510, 0xdb5e, 0x76d0, 0x5b0c, 0xe45d, 0x8c0a, 0x0, 0x0);
        gbc.writeMem(0x510, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdb5e, gbc.sp());
        EXPECT(0x512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0082
        gbc.setState(0xbd2f, 0x1693, 0x2350, 0xe7a5, 0x74e2, 0xab13, 0x1, 0x1);
        gbc.writeMem(0xbd2f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1693, gbc.sp());
        EXPECT(0xbd31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2f));
        EXPECT(0x61, gbc.readMem(0xbd30));
        // CB 61 0083
        gbc.setState(0x41d2, 0xc45f, 0xeb0, 0x7d05, 0x1347, 0x1a37, 0x1, 0x1);
        gbc.writeMem(0x41d2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc45f, gbc.sp());
        EXPECT(0x41d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0084
        gbc.setState(0xa039, 0x451e, 0x7290, 0x3800, 0x7e76, 0x726d, 0x1, 0x0);
        gbc.writeMem(0xa039, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x451e, gbc.sp());
        EXPECT(0xa03b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa039));
        EXPECT(0x61, gbc.readMem(0xa03a));
        // CB 61 0085
        gbc.setState(0x45cb, 0x62c, 0x9b00, 0xa9f7, 0xf405, 0x6479, 0x1, 0x1);
        gbc.writeMem(0x45cb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x62c, gbc.sp());
        EXPECT(0x45cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0086
        gbc.setState(0x5dac, 0x4778, 0x9e30, 0xc375, 0x5a16, 0x60f1, 0x1, 0x0);
        gbc.writeMem(0x5dac, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4778, gbc.sp());
        EXPECT(0x5dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0087
        gbc.setState(0xa701, 0x4f22, 0x8860, 0xbf6a, 0xd53c, 0x129, 0x1, 0x0);
        gbc.writeMem(0xa701, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4f22, gbc.sp());
        EXPECT(0xa703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa701));
        EXPECT(0x61, gbc.readMem(0xa702));
        // CB 61 0088
        gbc.setState(0xbfe, 0x9c4c, 0x8bb0, 0xf282, 0x31b7, 0xfeb7, 0x0, 0x0);
        gbc.writeMem(0xbfe, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9c4c, gbc.sp());
        EXPECT(0xc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0089
        gbc.setState(0xa959, 0x7968, 0x39d0, 0x35b6, 0xbf5b, 0xc992, 0x1, 0x0);
        gbc.writeMem(0xa959, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7968, gbc.sp());
        EXPECT(0xa95b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa959));
        EXPECT(0x61, gbc.readMem(0xa95a));
        // CB 61 008A
        gbc.setState(0xbeb1, 0x28d0, 0x5c80, 0xd4b9, 0xdaaf, 0x3866, 0x1, 0x0);
        gbc.writeMem(0xbeb1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x28d0, gbc.sp());
        EXPECT(0xbeb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb1));
        EXPECT(0x61, gbc.readMem(0xbeb2));
        // CB 61 008B
        gbc.setState(0x180c, 0xc6d8, 0xed60, 0x80a3, 0xd1a7, 0x787, 0x1, 0x0);
        gbc.writeMem(0x180c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc6d8, gbc.sp());
        EXPECT(0x180e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 008C
        gbc.setState(0x6771, 0xc7ac, 0x7b20, 0xe41d, 0xf24a, 0x2885, 0x0, 0x1);
        gbc.writeMem(0x6771, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc7ac, gbc.sp());
        EXPECT(0x6773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 008D
        gbc.setState(0x618, 0x7853, 0x4b20, 0xecf2, 0x5bd4, 0xe53, 0x1, 0x1);
        gbc.writeMem(0x618, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7853, gbc.sp());
        EXPECT(0x61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 008E
        gbc.setState(0x6806, 0xe715, 0xd190, 0xfa52, 0x5d21, 0x9e69, 0x0, 0x1);
        gbc.writeMem(0x6806, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe715, gbc.sp());
        EXPECT(0x6808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 008F
        gbc.setState(0xd75a, 0xbb94, 0xbd0, 0x8e07, 0x5da5, 0x661f, 0x0, 0x0);
        gbc.writeMem(0xd75a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbb94, gbc.sp());
        EXPECT(0xd75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75a));
        EXPECT(0x61, gbc.readMem(0xd75b));
        // CB 61 0090
        gbc.setState(0x7d9f, 0xb3be, 0x31b0, 0x6b78, 0x482, 0xd7a6, 0x1, 0x0);
        gbc.writeMem(0x7d9f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb3be, gbc.sp());
        EXPECT(0x7da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0091
        gbc.setState(0x719a, 0x9952, 0x83f0, 0x7d15, 0x7f56, 0x2d3b, 0x0, 0x0);
        gbc.writeMem(0x719a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9952, gbc.sp());
        EXPECT(0x719c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0092
        gbc.setState(0x7f0c, 0x2789, 0xb930, 0xdf26, 0xd8f6, 0xcc68, 0x1, 0x0);
        gbc.writeMem(0x7f0c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2789, gbc.sp());
        EXPECT(0x7f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0093
        gbc.setState(0x5802, 0xa994, 0x5520, 0xeaee, 0xbf63, 0xccdc, 0x1, 0x1);
        gbc.writeMem(0x5802, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa994, gbc.sp());
        EXPECT(0x5804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0094
        gbc.setState(0x1ced, 0x6d95, 0x9650, 0xa4eb, 0xfa79, 0xda9c, 0x1, 0x0);
        gbc.writeMem(0x1ced, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6d95, gbc.sp());
        EXPECT(0x1cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0095
        gbc.setState(0x1cd5, 0x6a05, 0xf690, 0xfedd, 0x6c03, 0x9c1f, 0x1, 0x1);
        gbc.writeMem(0x1cd5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6a05, gbc.sp());
        EXPECT(0x1cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0097
        gbc.setState(0x305d, 0x4d5c, 0xa520, 0x29a5, 0x6cf1, 0xdccd, 0x0, 0x1);
        gbc.writeMem(0x305d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4d5c, gbc.sp());
        EXPECT(0x305f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0098
        gbc.setState(0xb06f, 0xf083, 0xa80, 0x38bf, 0x1a0f, 0xfbbc, 0x0, 0x1);
        gbc.writeMem(0xb06f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf083, gbc.sp());
        EXPECT(0xb071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06f));
        EXPECT(0x61, gbc.readMem(0xb070));
        // CB 61 0099
        gbc.setState(0x679d, 0x6490, 0x1730, 0x4e8a, 0xd8a4, 0xeb7a, 0x0, 0x0);
        gbc.writeMem(0x679d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6490, gbc.sp());
        EXPECT(0x679f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 009A
        gbc.setState(0x487, 0xd70, 0x1690, 0x9599, 0xd76b, 0xeb43, 0x0, 0x0);
        gbc.writeMem(0x487, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd70, gbc.sp());
        EXPECT(0x489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 009B
        gbc.setState(0x9d93, 0x207f, 0xe570, 0x5e69, 0x211b, 0x8cb3, 0x0, 0x1);
        gbc.writeMem(0x9d93, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x207f, gbc.sp());
        EXPECT(0x9d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d93));
        EXPECT(0x61, gbc.readMem(0x9d94));
        // CB 61 009C
        gbc.setState(0x457c, 0xe483, 0xf610, 0x9590, 0xcd58, 0xe61e, 0x0, 0x1);
        gbc.writeMem(0x457c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe483, gbc.sp());
        EXPECT(0x457e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 009D
        gbc.setState(0xd9d4, 0xc27d, 0xa0f0, 0x164d, 0xbde7, 0x9f7c, 0x1, 0x0);
        gbc.writeMem(0xd9d4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc27d, gbc.sp());
        EXPECT(0xd9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d4));
        EXPECT(0x61, gbc.readMem(0xd9d5));
        // CB 61 009E
        gbc.setState(0x6b2b, 0xb026, 0x32b0, 0x9b11, 0x2313, 0x654b, 0x0, 0x0);
        gbc.writeMem(0x6b2b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb026, gbc.sp());
        EXPECT(0x6b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 009F
        gbc.setState(0x6653, 0xef81, 0xb390, 0x6ee8, 0x7e4a, 0x22d5, 0x1, 0x1);
        gbc.writeMem(0x6653, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xef81, gbc.sp());
        EXPECT(0x6655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00A0
        gbc.setState(0xc7e1, 0x796a, 0x26c0, 0x74ac, 0x7f04, 0x6713, 0x1, 0x0);
        gbc.writeMem(0xc7e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x796a, gbc.sp());
        EXPECT(0xc7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e1));
        EXPECT(0x61, gbc.readMem(0xc7e2));
        // CB 61 00A2
        gbc.setState(0x8839, 0x8705, 0x31b0, 0xfdf9, 0x1920, 0xee1f, 0x0, 0x1);
        gbc.writeMem(0x8839, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8705, gbc.sp());
        EXPECT(0x883b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8839));
        EXPECT(0x61, gbc.readMem(0x883a));
        // CB 61 00A3
        gbc.setState(0x1dfc, 0x3c0c, 0xcf40, 0xbe0d, 0x1be8, 0xfd08, 0x1, 0x0);
        gbc.writeMem(0x1dfc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3c0c, gbc.sp());
        EXPECT(0x1dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00A4
        gbc.setState(0x3f69, 0x64a2, 0x6bb0, 0x14f4, 0x6da5, 0x9897, 0x1, 0x0);
        gbc.writeMem(0x3f69, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x64a2, gbc.sp());
        EXPECT(0x3f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00A5
        gbc.setState(0x6170, 0xecf0, 0x7cf0, 0x9372, 0xddb, 0x1acc, 0x1, 0x1);
        gbc.writeMem(0x6170, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xecf0, gbc.sp());
        EXPECT(0x6172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00A6
        gbc.setState(0x1386, 0x567a, 0xde80, 0x6bb5, 0x9cd2, 0xbba5, 0x1, 0x0);
        gbc.writeMem(0x1386, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x567a, gbc.sp());
        EXPECT(0x1388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00A7
        gbc.setState(0xa1df, 0xb41c, 0x6060, 0x9e6c, 0x6684, 0xcbe0, 0x0, 0x1);
        gbc.writeMem(0xa1df, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb41c, gbc.sp());
        EXPECT(0xa1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1df));
        EXPECT(0x61, gbc.readMem(0xa1e0));
        // CB 61 00A8
        gbc.setState(0xbe32, 0xaa6, 0x9810, 0x50fd, 0xcdf6, 0x7f3f, 0x1, 0x0);
        gbc.writeMem(0xbe32, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaa6, gbc.sp());
        EXPECT(0xbe34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe32));
        EXPECT(0x61, gbc.readMem(0xbe33));
        // CB 61 00A9
        gbc.setState(0x9f1e, 0xdaec, 0x90b0, 0x16c, 0x3a73, 0xb749, 0x1, 0x1);
        gbc.writeMem(0x9f1e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdaec, gbc.sp());
        EXPECT(0x9f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f1e));
        EXPECT(0x61, gbc.readMem(0x9f1f));
        // CB 61 00AA
        gbc.setState(0x8ea0, 0x1b77, 0xe160, 0xc3fd, 0xdae7, 0xf56e, 0x1, 0x1);
        gbc.writeMem(0x8ea0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1b77, gbc.sp());
        EXPECT(0x8ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea0));
        EXPECT(0x61, gbc.readMem(0x8ea1));
        // CB 61 00AB
        gbc.setState(0xa191, 0x1570, 0xecc0, 0x65fc, 0x6b19, 0x8a9c, 0x1, 0x0);
        gbc.writeMem(0xa191, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1570, gbc.sp());
        EXPECT(0xa193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa191));
        EXPECT(0x61, gbc.readMem(0xa192));
        // CB 61 00AC
        gbc.setState(0x2475, 0x9c0, 0x89a0, 0xc185, 0x5aad, 0x4561, 0x1, 0x1);
        gbc.writeMem(0x2475, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9c0, gbc.sp());
        EXPECT(0x2477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00AD
        gbc.setState(0x7bfa, 0x8f00, 0x5460, 0xc637, 0xe91d, 0x23d4, 0x1, 0x1);
        gbc.writeMem(0x7bfa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8f00, gbc.sp());
        EXPECT(0x7bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00AE
        gbc.setState(0x60dd, 0x860d, 0x7110, 0x4015, 0x23c, 0xe88, 0x1, 0x0);
        gbc.writeMem(0x60dd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x860d, gbc.sp());
        EXPECT(0x60df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00AF
        gbc.setState(0x6900, 0x4473, 0x7f00, 0xc15, 0x13c, 0xd3e, 0x0, 0x0);
        gbc.writeMem(0x6900, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4473, gbc.sp());
        EXPECT(0x6902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00B0
        gbc.setState(0xe9e5, 0xdee2, 0xd4c0, 0x94ca, 0xb231, 0x7512, 0x1, 0x1);
        gbc.writeMem(0xe9e5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdee2, gbc.sp());
        EXPECT(0xe9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e5));
        EXPECT(0x61, gbc.readMem(0xe9e6));
        // CB 61 00B1
        gbc.setState(0x20e, 0x2095, 0xd6a0, 0x9117, 0x486e, 0x803a, 0x0, 0x1);
        gbc.writeMem(0x20e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2095, gbc.sp());
        EXPECT(0x210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00B2
        gbc.setState(0xe3ab, 0x2402, 0xdb0, 0x88c2, 0xe1, 0x4f7, 0x0, 0x1);
        gbc.writeMem(0xe3ab, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2402, gbc.sp());
        EXPECT(0xe3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ab));
        EXPECT(0x61, gbc.readMem(0xe3ac));
        // CB 61 00B3
        gbc.setState(0xa459, 0x917b, 0xb450, 0x10ef, 0xc810, 0xfa60, 0x1, 0x1);
        gbc.writeMem(0xa459, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x917b, gbc.sp());
        EXPECT(0xa45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa459));
        EXPECT(0x61, gbc.readMem(0xa45a));
        // CB 61 00B4
        gbc.setState(0x5b5c, 0xdc3e, 0xe660, 0x48dc, 0x46df, 0xb177, 0x1, 0x1);
        gbc.writeMem(0x5b5c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdc3e, gbc.sp());
        EXPECT(0x5b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00B5
        gbc.setState(0x1fe6, 0x40a3, 0x8f20, 0x5655, 0x7973, 0x4561, 0x0, 0x1);
        gbc.writeMem(0x1fe6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x40a3, gbc.sp());
        EXPECT(0x1fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00B6
        gbc.setState(0x71c3, 0xb0a6, 0x6440, 0x511c, 0xc431, 0x2858, 0x1, 0x1);
        gbc.writeMem(0x71c3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb0a6, gbc.sp());
        EXPECT(0x71c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00B7
        gbc.setState(0x72b9, 0xde66, 0xa5b0, 0x6c2a, 0x8387, 0xe56, 0x1, 0x0);
        gbc.writeMem(0x72b9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xde66, gbc.sp());
        EXPECT(0x72bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00B8
        gbc.setState(0xd32f, 0x77b7, 0x43c0, 0xb929, 0x36e5, 0x48c, 0x0, 0x0);
        gbc.writeMem(0xd32f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x77b7, gbc.sp());
        EXPECT(0xd331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32f));
        EXPECT(0x61, gbc.readMem(0xd330));
        // CB 61 00B9
        gbc.setState(0xd2c2, 0xa4cf, 0x7f0, 0x6e00, 0x78d8, 0xcc30, 0x1, 0x1);
        gbc.writeMem(0xd2c2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa4cf, gbc.sp());
        EXPECT(0xd2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c2));
        EXPECT(0x61, gbc.readMem(0xd2c3));
        // CB 61 00BA
        gbc.setState(0x8969, 0x24d1, 0x5810, 0xedbd, 0xc7f5, 0x9e58, 0x0, 0x0);
        gbc.writeMem(0x8969, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x24d1, gbc.sp());
        EXPECT(0x896b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8969));
        EXPECT(0x61, gbc.readMem(0x896a));
        // CB 61 00BB
        gbc.setState(0x61db, 0x882c, 0x4780, 0xb01c, 0x7645, 0x24a4, 0x0, 0x1);
        gbc.writeMem(0x61db, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x882c, gbc.sp());
        EXPECT(0x61dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00BC
        gbc.setState(0xad50, 0xa614, 0x40f0, 0xda52, 0x8ba3, 0xac45, 0x0, 0x1);
        gbc.writeMem(0xad50, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa614, gbc.sp());
        EXPECT(0xad52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad50));
        EXPECT(0x61, gbc.readMem(0xad51));
        // CB 61 00BD
        gbc.setState(0xa97a, 0xbe2a, 0x55e0, 0xecdb, 0xee7b, 0x3563, 0x0, 0x0);
        gbc.writeMem(0xa97a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbe2a, gbc.sp());
        EXPECT(0xa97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97a));
        EXPECT(0x61, gbc.readMem(0xa97b));
        // CB 61 00BE
        gbc.setState(0xabcb, 0xf417, 0xc720, 0x978b, 0xabff, 0x9d35, 0x0, 0x0);
        gbc.writeMem(0xabcb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf417, gbc.sp());
        EXPECT(0xabcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcb));
        EXPECT(0x61, gbc.readMem(0xabcc));
        // CB 61 00C0
        gbc.setState(0xb78e, 0x6cbb, 0x3b00, 0x8c35, 0xeff0, 0x466, 0x1, 0x0);
        gbc.writeMem(0xb78e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6cbb, gbc.sp());
        EXPECT(0xb790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78e));
        EXPECT(0x61, gbc.readMem(0xb78f));
        // CB 61 00C1
        gbc.setState(0x3855, 0x79f8, 0x4f80, 0xdaeb, 0x31e9, 0x4f97, 0x0, 0x1);
        gbc.writeMem(0x3855, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x79f8, gbc.sp());
        EXPECT(0x3857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00C2
        gbc.setState(0x69ca, 0x514f, 0x1a10, 0xcbf7, 0x9f78, 0x7be4, 0x1, 0x0);
        gbc.writeMem(0x69ca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x514f, gbc.sp());
        EXPECT(0x69cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00C3
        gbc.setState(0x5cd5, 0x931f, 0x5520, 0x58ad, 0xd1e8, 0x2555, 0x0, 0x1);
        gbc.writeMem(0x5cd5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x931f, gbc.sp());
        EXPECT(0x5cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00C5
        gbc.setState(0x1a2, 0x6f79, 0x53f0, 0xc7f0, 0x2f3a, 0x5f2a, 0x1, 0x0);
        gbc.writeMem(0x1a2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6f79, gbc.sp());
        EXPECT(0x1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00C6
        gbc.setState(0xe25, 0x968f, 0xc5f0, 0xe56f, 0xf68f, 0xd04, 0x1, 0x0);
        gbc.writeMem(0xe25, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x968f, gbc.sp());
        EXPECT(0xe27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00C7
        gbc.setState(0xaed1, 0x9ed1, 0x9630, 0x336c, 0xe5b8, 0xda18, 0x0, 0x1);
        gbc.writeMem(0xaed1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9ed1, gbc.sp());
        EXPECT(0xaed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed1));
        EXPECT(0x61, gbc.readMem(0xaed2));
        // CB 61 00C9
        gbc.setState(0xa42c, 0x3fa9, 0x20, 0xd927, 0xa53c, 0x61f, 0x0, 0x0);
        gbc.writeMem(0xa42c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3fa9, gbc.sp());
        EXPECT(0xa42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42c));
        EXPECT(0x61, gbc.readMem(0xa42d));
        // CB 61 00CA
        gbc.setState(0x990c, 0x2e19, 0xb180, 0x1cc2, 0x149d, 0x8f06, 0x0, 0x1);
        gbc.writeMem(0x990c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2e19, gbc.sp());
        EXPECT(0x990e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990c));
        EXPECT(0x61, gbc.readMem(0x990d));
        // CB 61 00CB
        gbc.setState(0xdab2, 0x3058, 0x7c70, 0xdbbc, 0xa96b, 0xda90, 0x1, 0x0);
        gbc.writeMem(0xdab2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3058, gbc.sp());
        EXPECT(0xdab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab2));
        EXPECT(0x61, gbc.readMem(0xdab3));
        // CB 61 00CC
        gbc.setState(0xbbb7, 0x4ef7, 0x6090, 0xbbdf, 0xd994, 0x3289, 0x1, 0x0);
        gbc.writeMem(0xbbb7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4ef7, gbc.sp());
        EXPECT(0xbbb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbb7));
        EXPECT(0x61, gbc.readMem(0xbbb8));
        // CB 61 00CD
        gbc.setState(0xb6b4, 0xd0e7, 0x6de0, 0xc1da, 0x3400, 0xe860, 0x0, 0x1);
        gbc.writeMem(0xb6b4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd0e7, gbc.sp());
        EXPECT(0xb6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b4));
        EXPECT(0x61, gbc.readMem(0xb6b5));
        // CB 61 00CE
        gbc.setState(0x6bb1, 0x20a6, 0xe050, 0x1e23, 0x8c15, 0x6662, 0x1, 0x0);
        gbc.writeMem(0x6bb1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x20a6, gbc.sp());
        EXPECT(0x6bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00CF
        gbc.setState(0x7e24, 0x716c, 0xfd10, 0xce03, 0xe28c, 0x3037, 0x0, 0x0);
        gbc.writeMem(0x7e24, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x716c, gbc.sp());
        EXPECT(0x7e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00D0
        gbc.setState(0xc50d, 0xb8ba, 0x2b20, 0xc543, 0x5905, 0x57cc, 0x1, 0x1);
        gbc.writeMem(0xc50d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb8ba, gbc.sp());
        EXPECT(0xc50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50d));
        EXPECT(0x61, gbc.readMem(0xc50e));
        // CB 61 00D1
        gbc.setState(0xd758, 0xb27b, 0x7380, 0x7fc6, 0x2815, 0x6007, 0x1, 0x0);
        gbc.writeMem(0xd758, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb27b, gbc.sp());
        EXPECT(0xd75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd758));
        EXPECT(0x61, gbc.readMem(0xd759));
        // CB 61 00D2
        gbc.setState(0x4668, 0x2f4c, 0xfa00, 0xc130, 0xb5e1, 0xa05, 0x1, 0x1);
        gbc.writeMem(0x4668, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2f4c, gbc.sp());
        EXPECT(0x466a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00D3
        gbc.setState(0x14c4, 0xc062, 0xd8c0, 0xb507, 0xc2e0, 0x8492, 0x0, 0x1);
        gbc.writeMem(0x14c4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc062, gbc.sp());
        EXPECT(0x14c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00D4
        gbc.setState(0x7a96, 0x246f, 0x390, 0xfa2f, 0x3830, 0xb122, 0x1, 0x0);
        gbc.writeMem(0x7a96, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x246f, gbc.sp());
        EXPECT(0x7a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00D5
        gbc.setState(0x95a3, 0x85bb, 0x47c0, 0x740f, 0x762b, 0x7148, 0x0, 0x1);
        gbc.writeMem(0x95a3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x85bb, gbc.sp());
        EXPECT(0x95a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a3));
        EXPECT(0x61, gbc.readMem(0x95a4));
        // CB 61 00D6
        gbc.setState(0x21e1, 0xfdcc, 0xc980, 0x1919, 0xd051, 0xc641, 0x0, 0x0);
        gbc.writeMem(0x21e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfdcc, gbc.sp());
        EXPECT(0x21e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00D8
        gbc.setState(0x8d6, 0xc947, 0xe810, 0x9e47, 0x642d, 0x2483, 0x0, 0x1);
        gbc.writeMem(0x8d6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc947, gbc.sp());
        EXPECT(0x8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00D9
        gbc.setState(0x9b77, 0xf7f1, 0x7c90, 0x95b6, 0x81ce, 0xa838, 0x1, 0x1);
        gbc.writeMem(0x9b77, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf7f1, gbc.sp());
        EXPECT(0x9b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b77));
        EXPECT(0x61, gbc.readMem(0x9b78));
        // CB 61 00DA
        gbc.setState(0x28a8, 0xf2a5, 0x8220, 0x18cb, 0x6b43, 0x9b68, 0x1, 0x1);
        gbc.writeMem(0x28a8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf2a5, gbc.sp());
        EXPECT(0x28aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00DC
        gbc.setState(0x8a36, 0xf22, 0x770, 0xdc2f, 0x6dc1, 0x2ff3, 0x0, 0x0);
        gbc.writeMem(0x8a36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf22, gbc.sp());
        EXPECT(0x8a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a36));
        EXPECT(0x61, gbc.readMem(0x8a37));
        // CB 61 00DD
        gbc.setState(0x3d36, 0xa21c, 0x3880, 0x64dd, 0x2204, 0x82b0, 0x1, 0x1);
        gbc.writeMem(0x3d36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa21c, gbc.sp());
        EXPECT(0x3d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00DE
        gbc.setState(0x86ad, 0x4ad8, 0x9970, 0xf766, 0xd4ee, 0x2a6a, 0x1, 0x1);
        gbc.writeMem(0x86ad, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4ad8, gbc.sp());
        EXPECT(0x86af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ad));
        EXPECT(0x61, gbc.readMem(0x86ae));
        // CB 61 00E0
        gbc.setState(0x6d7b, 0x3ab8, 0xb060, 0x89b2, 0x622, 0x77e4, 0x0, 0x0);
        gbc.writeMem(0x6d7b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3ab8, gbc.sp());
        EXPECT(0x6d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00E1
        gbc.setState(0x49a9, 0x4317, 0x8d0, 0xbe5d, 0xb247, 0xca86, 0x0, 0x1);
        gbc.writeMem(0x49a9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4317, gbc.sp());
        EXPECT(0x49ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00E2
        gbc.setState(0xaa14, 0x5d0a, 0xdae0, 0xdce9, 0x56a1, 0x7bc6, 0x1, 0x1);
        gbc.writeMem(0xaa14, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5d0a, gbc.sp());
        EXPECT(0xaa16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa14));
        EXPECT(0x61, gbc.readMem(0xaa15));
        // CB 61 00E3
        gbc.setState(0x5f8a, 0x5dad, 0x1d50, 0x9913, 0xb4fa, 0xb5aa, 0x0, 0x0);
        gbc.writeMem(0x5f8a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5dad, gbc.sp());
        EXPECT(0x5f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00E4
        gbc.setState(0x795, 0xff59, 0xbd60, 0x114f, 0x297f, 0x4f18, 0x0, 0x1);
        gbc.writeMem(0x795, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xff59, gbc.sp());
        EXPECT(0x797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00E5
        gbc.setState(0xc882, 0xf8f, 0x5920, 0xedd, 0x79fa, 0x85ca, 0x1, 0x1);
        gbc.writeMem(0xc882, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf8f, gbc.sp());
        EXPECT(0xc884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc882));
        EXPECT(0x61, gbc.readMem(0xc883));
        // CB 61 00E6
        gbc.setState(0xb97c, 0xedf8, 0xcac0, 0x3006, 0x1ce2, 0x8983, 0x0, 0x1);
        gbc.writeMem(0xb97c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xedf8, gbc.sp());
        EXPECT(0xb97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97c));
        EXPECT(0x61, gbc.readMem(0xb97d));
        // CB 61 00E8
        gbc.setState(0x15bb, 0x8d98, 0x4360, 0xf0a8, 0xbcb2, 0x19c4, 0x0, 0x0);
        gbc.writeMem(0x15bb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8d98, gbc.sp());
        EXPECT(0x15bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00E9
        gbc.setState(0xb10b, 0xc38d, 0xa2c0, 0xa204, 0x7529, 0x2ce1, 0x1, 0x0);
        gbc.writeMem(0xb10b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc38d, gbc.sp());
        EXPECT(0xb10d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10b));
        EXPECT(0x61, gbc.readMem(0xb10c));
        // CB 61 00EA
        gbc.setState(0x6603, 0xff8c, 0x4f40, 0xdfd8, 0x76ea, 0x6deb, 0x0, 0x1);
        gbc.writeMem(0x6603, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xff8c, gbc.sp());
        EXPECT(0x6605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00EB
        gbc.setState(0x692, 0xae2a, 0x8d00, 0x391b, 0x7de3, 0xa86b, 0x0, 0x0);
        gbc.writeMem(0x692, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xae2a, gbc.sp());
        EXPECT(0x694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00EC
        gbc.setState(0x868, 0x7767, 0x51e0, 0x4c46, 0x7b9e, 0x5296, 0x0, 0x0);
        gbc.writeMem(0x868, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7767, gbc.sp());
        EXPECT(0x86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00ED
        gbc.setState(0x4599, 0xb3d1, 0xb370, 0xeff7, 0x3cc5, 0x4c11, 0x0, 0x0);
        gbc.writeMem(0x4599, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb3d1, gbc.sp());
        EXPECT(0x459b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00EE
        gbc.setState(0xb11d, 0x5b62, 0x8d40, 0x6f61, 0x4191, 0x7ca2, 0x1, 0x1);
        gbc.writeMem(0xb11d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5b62, gbc.sp());
        EXPECT(0xb11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11d));
        EXPECT(0x61, gbc.readMem(0xb11e));
        // CB 61 00EF
        gbc.setState(0x7b22, 0x3cce, 0xd760, 0x8458, 0xd46d, 0x71fb, 0x1, 0x0);
        gbc.writeMem(0x7b22, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3cce, gbc.sp());
        EXPECT(0x7b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00F0
        gbc.setState(0xce6c, 0xf14b, 0x5010, 0xe2de, 0xd1d8, 0x2419, 0x1, 0x0);
        gbc.writeMem(0xce6c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf14b, gbc.sp());
        EXPECT(0xce6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6c));
        EXPECT(0x61, gbc.readMem(0xce6d));
        // CB 61 00F1
        gbc.setState(0x93d7, 0xd7a6, 0x14b0, 0x8022, 0x1a7e, 0x9e74, 0x1, 0x0);
        gbc.writeMem(0x93d7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd7a6, gbc.sp());
        EXPECT(0x93d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d7));
        EXPECT(0x61, gbc.readMem(0x93d8));
        // CB 61 00F2
        gbc.setState(0x5730, 0x35de, 0x7580, 0xc9e6, 0xf7a7, 0x4997, 0x0, 0x0);
        gbc.writeMem(0x5730, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x35de, gbc.sp());
        EXPECT(0x5732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00F3
        gbc.setState(0x706, 0x3a8f, 0xb110, 0x4b91, 0xca6c, 0x69cc, 0x1, 0x1);
        gbc.writeMem(0x706, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3a8f, gbc.sp());
        EXPECT(0x708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00F4
        gbc.setState(0xdde0, 0x3699, 0x1030, 0x612b, 0x6d84, 0xd310, 0x0, 0x0);
        gbc.writeMem(0xdde0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3699, gbc.sp());
        EXPECT(0xdde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde0));
        EXPECT(0x61, gbc.readMem(0xdde1));
        // CB 61 00F5
        gbc.setState(0xabf5, 0x1a17, 0x5ad0, 0xa780, 0xe86, 0x729e, 0x1, 0x0);
        gbc.writeMem(0xabf5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1a17, gbc.sp());
        EXPECT(0xabf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf5));
        EXPECT(0x61, gbc.readMem(0xabf6));
        // CB 61 00F6
        gbc.setState(0x610e, 0xee7e, 0xa5c0, 0xc170, 0x545c, 0xffb5, 0x0, 0x1);
        gbc.writeMem(0x610e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xee7e, gbc.sp());
        EXPECT(0x6110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00F7
        gbc.setState(0x164c, 0xca47, 0xbb50, 0x898, 0x185f, 0x933c, 0x1, 0x1);
        gbc.writeMem(0x164c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xca47, gbc.sp());
        EXPECT(0x164e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00F8
        gbc.setState(0x6d27, 0x3457, 0xf0a0, 0xb62c, 0xf1b0, 0x4383, 0x1, 0x0);
        gbc.writeMem(0x6d27, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3457, gbc.sp());
        EXPECT(0x6d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 00F9
        gbc.setState(0xef7c, 0x2728, 0xa7f0, 0x7585, 0x4d62, 0x8215, 0x1, 0x1);
        gbc.writeMem(0xef7c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2728, gbc.sp());
        EXPECT(0xef7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7c));
        EXPECT(0x61, gbc.readMem(0xef7d));
        // CB 61 00FA
        gbc.setState(0x83ba, 0x8686, 0xe120, 0xfb34, 0x2eb0, 0xecfe, 0x1, 0x1);
        gbc.writeMem(0x83ba, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8686, gbc.sp());
        EXPECT(0x83bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ba));
        EXPECT(0x61, gbc.readMem(0x83bb));
        // CB 61 00FB
        gbc.setState(0x8f3b, 0x3344, 0xbb70, 0xa710, 0x1226, 0xacac, 0x0, 0x1);
        gbc.writeMem(0x8f3b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3344, gbc.sp());
        EXPECT(0x8f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f3b));
        EXPECT(0x61, gbc.readMem(0x8f3c));
        // CB 61 00FC
        gbc.setState(0x6434, 0xfd86, 0x6f0, 0x8872, 0x2250, 0x1ee5, 0x1, 0x1);
        gbc.writeMem(0x6434, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfd86, gbc.sp());
        EXPECT(0x6436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00FD
        gbc.setState(0x6dad, 0x917c, 0xeef0, 0x6591, 0x10b6, 0xed92, 0x1, 0x0);
        gbc.writeMem(0x6dad, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x917c, gbc.sp());
        EXPECT(0x6daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00FE
        gbc.setState(0x1e28, 0xed41, 0x98d0, 0xe5f7, 0x612a, 0xc37a, 0x1, 0x1);
        gbc.writeMem(0x1e28, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xed41, gbc.sp());
        EXPECT(0x1e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 00FF
        gbc.setState(0x1bd6, 0xc1ec, 0xf090, 0x4dbf, 0x3e50, 0x2eb8, 0x0, 0x1);
        gbc.writeMem(0x1bd6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc1ec, gbc.sp());
        EXPECT(0x1bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0100
        gbc.setState(0xa783, 0x2a2a, 0x59a0, 0x54f2, 0x75de, 0x8e20, 0x0, 0x0);
        gbc.writeMem(0xa783, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2a2a, gbc.sp());
        EXPECT(0xa785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa783));
        EXPECT(0x61, gbc.readMem(0xa784));
        // CB 61 0101
        gbc.setState(0xc6b2, 0xff8, 0xd0f0, 0x3460, 0xa871, 0xce6, 0x0, 0x0);
        gbc.writeMem(0xc6b2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xff8, gbc.sp());
        EXPECT(0xc6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b2));
        EXPECT(0x61, gbc.readMem(0xc6b3));
        // CB 61 0102
        gbc.setState(0xce2d, 0x3590, 0xfe40, 0x5f58, 0xca31, 0x9c7d, 0x1, 0x1);
        gbc.writeMem(0xce2d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3590, gbc.sp());
        EXPECT(0xce2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce2d));
        EXPECT(0x61, gbc.readMem(0xce2e));
        // CB 61 0103
        gbc.setState(0x5b56, 0xe044, 0x7e30, 0x325, 0x93a2, 0x161f, 0x1, 0x0);
        gbc.writeMem(0x5b56, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe044, gbc.sp());
        EXPECT(0x5b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0104
        gbc.setState(0x4db7, 0x2995, 0x770, 0xb867, 0xf2e5, 0x7642, 0x0, 0x0);
        gbc.writeMem(0x4db7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2995, gbc.sp());
        EXPECT(0x4db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0105
        gbc.setState(0xae7c, 0x730b, 0xfdf0, 0x86c3, 0x44b7, 0xb18e, 0x1, 0x1);
        gbc.writeMem(0xae7c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x730b, gbc.sp());
        EXPECT(0xae7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7c));
        EXPECT(0x61, gbc.readMem(0xae7d));
        // CB 61 0106
        gbc.setState(0x427f, 0x652, 0x7310, 0x8515, 0xba03, 0xb93d, 0x1, 0x1);
        gbc.writeMem(0x427f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x652, gbc.sp());
        EXPECT(0x4281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0107
        gbc.setState(0xdd69, 0x4da8, 0x6290, 0xb9ce, 0xc7f5, 0x887d, 0x1, 0x0);
        gbc.writeMem(0xdd69, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4da8, gbc.sp());
        EXPECT(0xdd6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd69));
        EXPECT(0x61, gbc.readMem(0xdd6a));
        // CB 61 0108
        gbc.setState(0x62be, 0xe43, 0xa260, 0xf3ba, 0xba94, 0x7333, 0x0, 0x1);
        gbc.writeMem(0x62be, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe43, gbc.sp());
        EXPECT(0x62c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0109
        gbc.setState(0x5d1c, 0x61bc, 0x7980, 0x527d, 0x2f, 0xee6, 0x1, 0x0);
        gbc.writeMem(0x5d1c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x61bc, gbc.sp());
        EXPECT(0x5d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 010A
        gbc.setState(0x5b95, 0x2c66, 0xfb10, 0xf0ae, 0xa99b, 0xc3cb, 0x0, 0x0);
        gbc.writeMem(0x5b95, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2c66, gbc.sp());
        EXPECT(0x5b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 010B
        gbc.setState(0x32c2, 0xc56e, 0x56c0, 0x6e50, 0x9d0d, 0x60bd, 0x0, 0x1);
        gbc.writeMem(0x32c2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc56e, gbc.sp());
        EXPECT(0x32c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 010C
        gbc.setState(0xac41, 0x912b, 0x2b70, 0xafe, 0x9c6b, 0x19b3, 0x1, 0x1);
        gbc.writeMem(0xac41, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x912b, gbc.sp());
        EXPECT(0xac43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac41));
        EXPECT(0x61, gbc.readMem(0xac42));
        // CB 61 010E
        gbc.setState(0x3d4c, 0xf943, 0xec30, 0x88b3, 0x54b, 0xcdcc, 0x1, 0x1);
        gbc.writeMem(0x3d4c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf943, gbc.sp());
        EXPECT(0x3d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 010F
        gbc.setState(0x1ea, 0x4b67, 0x1da0, 0x8d25, 0xbbc0, 0x7303, 0x0, 0x1);
        gbc.writeMem(0x1ea, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4b67, gbc.sp());
        EXPECT(0x1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0110
        gbc.setState(0x2f0e, 0xa570, 0x9f80, 0xf516, 0x3595, 0x229a, 0x0, 0x1);
        gbc.writeMem(0x2f0e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa570, gbc.sp());
        EXPECT(0x2f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0111
        gbc.setState(0xb2f, 0x976c, 0x1470, 0x9dd, 0xa34f, 0xf683, 0x1, 0x0);
        gbc.writeMem(0xb2f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x976c, gbc.sp());
        EXPECT(0xb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0112
        gbc.setState(0xab16, 0x6e2e, 0xbec0, 0xb9bc, 0x61e3, 0xf908, 0x0, 0x0);
        gbc.writeMem(0xab16, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6e2e, gbc.sp());
        EXPECT(0xab18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab16));
        EXPECT(0x61, gbc.readMem(0xab17));
        // CB 61 0113
        gbc.setState(0x5176, 0xb908, 0xac80, 0x882f, 0x9f81, 0x6185, 0x1, 0x0);
        gbc.writeMem(0x5176, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb908, gbc.sp());
        EXPECT(0x5178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0114
        gbc.setState(0x5f94, 0x9a05, 0x8cf0, 0x55eb, 0x2ddc, 0x9892, 0x1, 0x0);
        gbc.writeMem(0x5f94, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9a05, gbc.sp());
        EXPECT(0x5f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0115
        gbc.setState(0x7cc6, 0xe225, 0xc1e0, 0x81a5, 0x3102, 0x540f, 0x0, 0x0);
        gbc.writeMem(0x7cc6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe225, gbc.sp());
        EXPECT(0x7cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0116
        gbc.setState(0x5252, 0xdf69, 0xabc0, 0x6d8c, 0xa99e, 0x5f4c, 0x0, 0x0);
        gbc.writeMem(0x5252, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdf69, gbc.sp());
        EXPECT(0x5254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0117
        gbc.setState(0x4b49, 0xfafa, 0x2200, 0x1f99, 0x88be, 0x16d8, 0x1, 0x0);
        gbc.writeMem(0x4b49, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfafa, gbc.sp());
        EXPECT(0x4b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0118
        gbc.setState(0x7174, 0x13a, 0x2cc0, 0xa7e, 0xaa1d, 0x3e5d, 0x1, 0x0);
        gbc.writeMem(0x7174, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x13a, gbc.sp());
        EXPECT(0x7176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0119
        gbc.setState(0x4131, 0x7bf2, 0x1920, 0x632e, 0x4253, 0x3a47, 0x1, 0x1);
        gbc.writeMem(0x4131, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7bf2, gbc.sp());
        EXPECT(0x4133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 011A
        gbc.setState(0x69d4, 0x942e, 0xcaf0, 0x7020, 0x6f99, 0xbdfd, 0x0, 0x0);
        gbc.writeMem(0x69d4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x942e, gbc.sp());
        EXPECT(0x69d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 011B
        gbc.setState(0xdee4, 0x3e3c, 0x12a0, 0x93c6, 0xc6fa, 0x3a7a, 0x0, 0x1);
        gbc.writeMem(0xdee4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3e3c, gbc.sp());
        EXPECT(0xdee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee4));
        EXPECT(0x61, gbc.readMem(0xdee5));
        // CB 61 011C
        gbc.setState(0x9223, 0x51a6, 0x51b0, 0x1fbc, 0x6f5a, 0x66ef, 0x1, 0x0);
        gbc.writeMem(0x9223, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x51a6, gbc.sp());
        EXPECT(0x9225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9223));
        EXPECT(0x61, gbc.readMem(0x9224));
        // CB 61 011D
        gbc.setState(0x5086, 0xede1, 0x2b70, 0x3de2, 0x9346, 0xfd5d, 0x1, 0x1);
        gbc.writeMem(0x5086, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xede1, gbc.sp());
        EXPECT(0x5088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 011E
        gbc.setState(0x7d0f, 0x26d4, 0x74d0, 0xf82e, 0xb45d, 0x72aa, 0x1, 0x1);
        gbc.writeMem(0x7d0f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x26d4, gbc.sp());
        EXPECT(0x7d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 011F
        gbc.setState(0xbf32, 0xba7d, 0x85b0, 0x20da, 0x1326, 0xe436, 0x1, 0x0);
        gbc.writeMem(0xbf32, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xba7d, gbc.sp());
        EXPECT(0xbf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf32));
        EXPECT(0x61, gbc.readMem(0xbf33));
        // CB 61 0120
        gbc.setState(0x41bb, 0xc1a6, 0xc6f0, 0xc997, 0xc4f2, 0x41d4, 0x1, 0x1);
        gbc.writeMem(0x41bb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc1a6, gbc.sp());
        EXPECT(0x41bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0121
        gbc.setState(0x306, 0x3a81, 0x8a80, 0xf70e, 0xdf2b, 0x6567, 0x0, 0x0);
        gbc.writeMem(0x306, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3a81, gbc.sp());
        EXPECT(0x308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0122
        gbc.setState(0x46d0, 0xca40, 0x3210, 0xf3e0, 0x7993, 0xb16d, 0x0, 0x1);
        gbc.writeMem(0x46d0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xca40, gbc.sp());
        EXPECT(0x46d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0123
        gbc.setState(0xe55e, 0x38bb, 0xf280, 0x3076, 0x2c95, 0x97e, 0x1, 0x0);
        gbc.writeMem(0xe55e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x38bb, gbc.sp());
        EXPECT(0xe560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55e));
        EXPECT(0x61, gbc.readMem(0xe55f));
        // CB 61 0124
        gbc.setState(0xdcad, 0xa860, 0x2c90, 0x50ca, 0xc7f6, 0x1ea1, 0x1, 0x0);
        gbc.writeMem(0xdcad, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa860, gbc.sp());
        EXPECT(0xdcaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcad));
        EXPECT(0x61, gbc.readMem(0xdcae));
        // CB 61 0126
        gbc.setState(0x44c9, 0x4df7, 0x3940, 0x2b4c, 0x48c, 0x4c22, 0x1, 0x0);
        gbc.writeMem(0x44c9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4df7, gbc.sp());
        EXPECT(0x44cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0127
        gbc.setState(0x1552, 0x10af, 0x4dd0, 0xa4fc, 0x3100, 0x5e24, 0x0, 0x0);
        gbc.writeMem(0x1552, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x10af, gbc.sp());
        EXPECT(0x1554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0128
        gbc.setState(0xb708, 0x4129, 0xb150, 0xe266, 0xdeea, 0x68da, 0x0, 0x0);
        gbc.writeMem(0xb708, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4129, gbc.sp());
        EXPECT(0xb70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb708));
        EXPECT(0x61, gbc.readMem(0xb709));
        // CB 61 012A
        gbc.setState(0x5ed7, 0x470f, 0xf440, 0xf903, 0x78ef, 0x3db7, 0x1, 0x1);
        gbc.writeMem(0x5ed7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x470f, gbc.sp());
        EXPECT(0x5ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 012B
        gbc.setState(0xe4dc, 0xd9ca, 0x3570, 0xede3, 0xa85a, 0x568a, 0x1, 0x1);
        gbc.writeMem(0xe4dc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd9ca, gbc.sp());
        EXPECT(0xe4de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4dc));
        EXPECT(0x61, gbc.readMem(0xe4dd));
        // CB 61 012C
        gbc.setState(0x3bb5, 0xb950, 0xbbd0, 0x396b, 0x2e22, 0x13b, 0x1, 0x1);
        gbc.writeMem(0x3bb5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb950, gbc.sp());
        EXPECT(0x3bb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 012D
        gbc.setState(0xc7a, 0x9165, 0x99b0, 0x2b4, 0xba9d, 0xfc07, 0x0, 0x1);
        gbc.writeMem(0xc7a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9165, gbc.sp());
        EXPECT(0xc7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 012E
        gbc.setState(0xe955, 0x4ddf, 0xd3c0, 0x61d0, 0x25a9, 0x2c88, 0x1, 0x1);
        gbc.writeMem(0xe955, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4ddf, gbc.sp());
        EXPECT(0xe957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe955));
        EXPECT(0x61, gbc.readMem(0xe956));
        // CB 61 012F
        gbc.setState(0x888e, 0x5af7, 0xafa0, 0x5ad5, 0xc599, 0x2884, 0x1, 0x0);
        gbc.writeMem(0x888e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5af7, gbc.sp());
        EXPECT(0x8890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888e));
        EXPECT(0x61, gbc.readMem(0x888f));
        // CB 61 0130
        gbc.setState(0x3193, 0xf4b7, 0xfc30, 0x1a03, 0x3d15, 0x3a61, 0x0, 0x0);
        gbc.writeMem(0x3193, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf4b7, gbc.sp());
        EXPECT(0x3195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0131
        gbc.setState(0xeeb6, 0x390f, 0x56c0, 0x308a, 0x7bb4, 0xb474, 0x0, 0x1);
        gbc.writeMem(0xeeb6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x390f, gbc.sp());
        EXPECT(0xeeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb6));
        EXPECT(0x61, gbc.readMem(0xeeb7));
        // CB 61 0132
        gbc.setState(0x9d64, 0x9640, 0x8280, 0xda3, 0xf099, 0x76d1, 0x1, 0x0);
        gbc.writeMem(0x9d64, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9640, gbc.sp());
        EXPECT(0x9d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d64));
        EXPECT(0x61, gbc.readMem(0x9d65));
        // CB 61 0133
        gbc.setState(0xcffc, 0xa0a5, 0x3910, 0xbc61, 0x355, 0xd8c3, 0x1, 0x0);
        gbc.writeMem(0xcffc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa0a5, gbc.sp());
        EXPECT(0xcffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcffc));
        EXPECT(0x61, gbc.readMem(0xcffd));
        // CB 61 0134
        gbc.setState(0x6478, 0x7240, 0x280, 0x759c, 0x1c9b, 0x9e98, 0x1, 0x1);
        gbc.writeMem(0x6478, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7240, gbc.sp());
        EXPECT(0x647a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0135
        gbc.setState(0x1847, 0xf697, 0x1d60, 0xf8a, 0x4dbc, 0xb45f, 0x1, 0x1);
        gbc.writeMem(0x1847, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf697, gbc.sp());
        EXPECT(0x1849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0136
        gbc.setState(0xd7e4, 0xe678, 0xbe00, 0x192b, 0x7ce, 0x2017, 0x0, 0x1);
        gbc.writeMem(0xd7e4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe678, gbc.sp());
        EXPECT(0xd7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e4));
        EXPECT(0x61, gbc.readMem(0xd7e5));
        // CB 61 0137
        gbc.setState(0xa3a8, 0x7ecc, 0xa2c0, 0xeff2, 0xc4d4, 0x715d, 0x1, 0x1);
        gbc.writeMem(0xa3a8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7ecc, gbc.sp());
        EXPECT(0xa3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a8));
        EXPECT(0x61, gbc.readMem(0xa3a9));
        // CB 61 0138
        gbc.setState(0x9e26, 0x2df6, 0x9f90, 0x4652, 0x74e, 0xff5b, 0x1, 0x0);
        gbc.writeMem(0x9e26, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2df6, gbc.sp());
        EXPECT(0x9e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e26));
        EXPECT(0x61, gbc.readMem(0x9e27));
        // CB 61 0139
        gbc.setState(0x426a, 0x8361, 0xe400, 0x15a9, 0xb5b3, 0x5125, 0x1, 0x0);
        gbc.writeMem(0x426a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8361, gbc.sp());
        EXPECT(0x426c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 013A
        gbc.setState(0xb404, 0x2689, 0x9470, 0x235a, 0xd9c5, 0xd9c7, 0x1, 0x0);
        gbc.writeMem(0xb404, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2689, gbc.sp());
        EXPECT(0xb406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb404));
        EXPECT(0x61, gbc.readMem(0xb405));
        // CB 61 013B
        gbc.setState(0x2ef3, 0x99f5, 0xd400, 0x5c73, 0xc66b, 0x6935, 0x0, 0x1);
        gbc.writeMem(0x2ef3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x99f5, gbc.sp());
        EXPECT(0x2ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 013C
        gbc.setState(0xde13, 0xcbc9, 0x9790, 0xa6cb, 0xcd66, 0x9e88, 0x0, 0x1);
        gbc.writeMem(0xde13, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcbc9, gbc.sp());
        EXPECT(0xde15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde13));
        EXPECT(0x61, gbc.readMem(0xde14));
        // CB 61 013D
        gbc.setState(0x810b, 0xd735, 0x3530, 0xad52, 0x7083, 0x96a9, 0x0, 0x1);
        gbc.writeMem(0x810b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd735, gbc.sp());
        EXPECT(0x810d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810b));
        EXPECT(0x61, gbc.readMem(0x810c));
        // CB 61 013E
        gbc.setState(0x4758, 0xb388, 0x77f0, 0x5625, 0x29f4, 0x2b87, 0x0, 0x0);
        gbc.writeMem(0x4758, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb388, gbc.sp());
        EXPECT(0x475a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 013F
        gbc.setState(0x947d, 0xe2c1, 0x3830, 0xb807, 0x15d5, 0x38ec, 0x1, 0x1);
        gbc.writeMem(0x947d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe2c1, gbc.sp());
        EXPECT(0x947f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947d));
        EXPECT(0x61, gbc.readMem(0x947e));
        // CB 61 0140
        gbc.setState(0x35ab, 0x66b0, 0xf410, 0xd509, 0x221d, 0x6b70, 0x1, 0x1);
        gbc.writeMem(0x35ab, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x66b0, gbc.sp());
        EXPECT(0x35ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0141
        gbc.setState(0xdeb6, 0x66e5, 0x7dd0, 0x4c45, 0x234c, 0xc50b, 0x0, 0x0);
        gbc.writeMem(0xdeb6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x66e5, gbc.sp());
        EXPECT(0xdeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb6));
        EXPECT(0x61, gbc.readMem(0xdeb7));
        // CB 61 0142
        gbc.setState(0xd11a, 0xf8e0, 0x5150, 0xd45f, 0x2c9e, 0x30f8, 0x0, 0x1);
        gbc.writeMem(0xd11a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf8e0, gbc.sp());
        EXPECT(0xd11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11a));
        EXPECT(0x61, gbc.readMem(0xd11b));
        // CB 61 0143
        gbc.setState(0xb846, 0x395e, 0xf980, 0x15b1, 0xb213, 0x3750, 0x1, 0x0);
        gbc.writeMem(0xb846, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x395e, gbc.sp());
        EXPECT(0xb848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb846));
        EXPECT(0x61, gbc.readMem(0xb847));
        // CB 61 0144
        gbc.setState(0x4094, 0x7c78, 0x9290, 0xb3e2, 0xaadd, 0xb7f1, 0x0, 0x1);
        gbc.writeMem(0x4094, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7c78, gbc.sp());
        EXPECT(0x4096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0145
        gbc.setState(0x65c, 0x4a57, 0x990, 0x5414, 0xe9e, 0x552b, 0x1, 0x0);
        gbc.writeMem(0x65c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4a57, gbc.sp());
        EXPECT(0x65e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0146
        gbc.setState(0xd5ae, 0xb83e, 0xf2b0, 0xb27a, 0x62fc, 0xd496, 0x1, 0x0);
        gbc.writeMem(0xd5ae, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb83e, gbc.sp());
        EXPECT(0xd5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ae));
        EXPECT(0x61, gbc.readMem(0xd5af));
        // CB 61 0147
        gbc.setState(0x2c85, 0xd4dd, 0x9160, 0x6d22, 0xd722, 0x95a3, 0x1, 0x0);
        gbc.writeMem(0x2c85, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd4dd, gbc.sp());
        EXPECT(0x2c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0148
        gbc.setState(0xf8e, 0xcd44, 0x7950, 0x369b, 0xf734, 0xc, 0x1, 0x0);
        gbc.writeMem(0xf8e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcd44, gbc.sp());
        EXPECT(0xf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0149
        gbc.setState(0xc1af, 0x7551, 0xa820, 0xec81, 0x9e02, 0xa9d5, 0x1, 0x0);
        gbc.writeMem(0xc1af, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7551, gbc.sp());
        EXPECT(0xc1b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1af));
        EXPECT(0x61, gbc.readMem(0xc1b0));
        // CB 61 014A
        gbc.setState(0x9a76, 0x6df2, 0x2600, 0xbc7d, 0xc332, 0xf994, 0x0, 0x0);
        gbc.writeMem(0x9a76, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6df2, gbc.sp());
        EXPECT(0x9a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a76));
        EXPECT(0x61, gbc.readMem(0x9a77));
        // CB 61 014B
        gbc.setState(0x2f9c, 0xd685, 0x9040, 0xc899, 0xcc38, 0xefc5, 0x0, 0x1);
        gbc.writeMem(0x2f9c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd685, gbc.sp());
        EXPECT(0x2f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 014C
        gbc.setState(0x621f, 0xfba2, 0xd710, 0x3f28, 0x55c, 0x237d, 0x0, 0x0);
        gbc.writeMem(0x621f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfba2, gbc.sp());
        EXPECT(0x6221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 014D
        gbc.setState(0x534a, 0xe3a, 0xa700, 0x7ac4, 0x6603, 0xf04d, 0x1, 0x1);
        gbc.writeMem(0x534a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe3a, gbc.sp());
        EXPECT(0x534c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 014E
        gbc.setState(0xa110, 0x902b, 0x1b30, 0x1db2, 0xf11b, 0x1343, 0x1, 0x1);
        gbc.writeMem(0xa110, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x902b, gbc.sp());
        EXPECT(0xa112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa110));
        EXPECT(0x61, gbc.readMem(0xa111));
        // CB 61 014F
        gbc.setState(0xbb9, 0x2d, 0xe960, 0x2052, 0x9ee3, 0x3222, 0x0, 0x0);
        gbc.writeMem(0xbb9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2d, gbc.sp());
        EXPECT(0xbbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0150
        gbc.setState(0x6112, 0xc667, 0x7cd0, 0x2dcf, 0x90a7, 0xcc2f, 0x0, 0x0);
        gbc.writeMem(0x6112, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc667, gbc.sp());
        EXPECT(0x6114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0151
        gbc.setState(0x9c13, 0xa98b, 0x9910, 0x45c9, 0x5d96, 0x8671, 0x1, 0x0);
        gbc.writeMem(0x9c13, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa98b, gbc.sp());
        EXPECT(0x9c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c13));
        EXPECT(0x61, gbc.readMem(0x9c14));
        // CB 61 0152
        gbc.setState(0x39e1, 0x33cb, 0x630, 0x473f, 0x5202, 0x52e4, 0x0, 0x1);
        gbc.writeMem(0x39e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x33cb, gbc.sp());
        EXPECT(0x39e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0153
        gbc.setState(0x535f, 0xa929, 0xc570, 0x6ecb, 0x8a1b, 0x76cf, 0x0, 0x1);
        gbc.writeMem(0x535f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa929, gbc.sp());
        EXPECT(0x5361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0154
        gbc.setState(0x7b65, 0xbf1, 0x2740, 0x9451, 0xdeed, 0x1c08, 0x0, 0x1);
        gbc.writeMem(0x7b65, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbf1, gbc.sp());
        EXPECT(0x7b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0155
        gbc.setState(0x34a0, 0x9354, 0x3ad0, 0x5e2c, 0xb7b0, 0x5775, 0x0, 0x1);
        gbc.writeMem(0x34a0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9354, gbc.sp());
        EXPECT(0x34a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0156
        gbc.setState(0x40c4, 0xd103, 0x2a20, 0x13e6, 0x7fc0, 0xeafd, 0x1, 0x0);
        gbc.writeMem(0x40c4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd103, gbc.sp());
        EXPECT(0x40c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0157
        gbc.setState(0x6ec, 0xfc1e, 0x7ab0, 0xf6a4, 0x998a, 0x2d92, 0x0, 0x1);
        gbc.writeMem(0x6ec, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfc1e, gbc.sp());
        EXPECT(0x6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0158
        gbc.setState(0x1a99, 0x20d6, 0xffb0, 0x9cfe, 0x3176, 0xcffa, 0x1, 0x0);
        gbc.writeMem(0x1a99, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x20d6, gbc.sp());
        EXPECT(0x1a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0159
        gbc.setState(0x9a10, 0xcbae, 0xa560, 0x244e, 0x1125, 0x6cd3, 0x0, 0x0);
        gbc.writeMem(0x9a10, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcbae, gbc.sp());
        EXPECT(0x9a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a10));
        EXPECT(0x61, gbc.readMem(0x9a11));
        // CB 61 015A
        gbc.setState(0x8482, 0xd3, 0x2e80, 0xb280, 0x480a, 0x6a40, 0x1, 0x1);
        gbc.writeMem(0x8482, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd3, gbc.sp());
        EXPECT(0x8484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8482));
        EXPECT(0x61, gbc.readMem(0x8483));
        // CB 61 015B
        gbc.setState(0x6c93, 0x2137, 0xd270, 0x3e67, 0xbb62, 0xcf41, 0x0, 0x1);
        gbc.writeMem(0x6c93, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2137, gbc.sp());
        EXPECT(0x6c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 015C
        gbc.setState(0x1ee, 0x8cfa, 0x2a10, 0xa87a, 0x7c03, 0x3d78, 0x0, 0x1);
        gbc.writeMem(0x1ee, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8cfa, gbc.sp());
        EXPECT(0x1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 015D
        gbc.setState(0x76cd, 0x5a37, 0x1f10, 0xd2ec, 0xca9d, 0x232c, 0x1, 0x0);
        gbc.writeMem(0x76cd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5a37, gbc.sp());
        EXPECT(0x76cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 015E
        gbc.setState(0x65e3, 0x8d84, 0x4680, 0xec75, 0xa4fa, 0x89b3, 0x0, 0x1);
        gbc.writeMem(0x65e3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8d84, gbc.sp());
        EXPECT(0x65e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 015F
        gbc.setState(0x6b60, 0x4f73, 0x2e40, 0x4516, 0xd671, 0x835, 0x0, 0x1);
        gbc.writeMem(0x6b60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4f73, gbc.sp());
        EXPECT(0x6b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0160
        gbc.setState(0xba6b, 0x80c1, 0xdd50, 0x387b, 0xf8eb, 0x1236, 0x1, 0x0);
        gbc.writeMem(0xba6b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x80c1, gbc.sp());
        EXPECT(0xba6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6b));
        EXPECT(0x61, gbc.readMem(0xba6c));
        // CB 61 0161
        gbc.setState(0x2040, 0xd1a4, 0x9e70, 0xc0e1, 0x7611, 0x83bc, 0x0, 0x1);
        gbc.writeMem(0x2040, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd1a4, gbc.sp());
        EXPECT(0x2042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0162
        gbc.setState(0x342b, 0x4c80, 0x9970, 0x777a, 0xc37b, 0x4ba, 0x0, 0x1);
        gbc.writeMem(0x342b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4c80, gbc.sp());
        EXPECT(0x342d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0163
        gbc.setState(0x3b5e, 0xfdf6, 0x2cf0, 0x73e, 0x1b07, 0x21f, 0x1, 0x0);
        gbc.writeMem(0x3b5e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfdf6, gbc.sp());
        EXPECT(0x3b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0164
        gbc.setState(0xe395, 0xdac3, 0x6800, 0xbded, 0xd8b9, 0x2b40, 0x1, 0x1);
        gbc.writeMem(0xe395, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdac3, gbc.sp());
        EXPECT(0xe397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe395));
        EXPECT(0x61, gbc.readMem(0xe396));
        // CB 61 0165
        gbc.setState(0x230d, 0xc8cf, 0xf770, 0x895c, 0x709a, 0x9cb3, 0x1, 0x0);
        gbc.writeMem(0x230d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc8cf, gbc.sp());
        EXPECT(0x230f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0166
        gbc.setState(0x97d8, 0xee0a, 0x8b0, 0x2cb0, 0xc4c1, 0xc541, 0x0, 0x1);
        gbc.writeMem(0x97d8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xee0a, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d8));
        EXPECT(0x61, gbc.readMem(0x97d9));
        // CB 61 0167
        gbc.setState(0xcc6f, 0x537e, 0x5520, 0x77f4, 0xd153, 0x4f21, 0x1, 0x1);
        gbc.writeMem(0xcc6f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x537e, gbc.sp());
        EXPECT(0xcc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc6f));
        EXPECT(0x61, gbc.readMem(0xcc70));
        // CB 61 0168
        gbc.setState(0x2801, 0x2d7e, 0x71b0, 0x2ab2, 0x7de0, 0x9ed5, 0x1, 0x0);
        gbc.writeMem(0x2801, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2d7e, gbc.sp());
        EXPECT(0x2803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0169
        gbc.setState(0x41d2, 0x3d52, 0xacb0, 0xaca7, 0xf369, 0x42c1, 0x1, 0x1);
        gbc.writeMem(0x41d2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3d52, gbc.sp());
        EXPECT(0x41d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 016A
        gbc.setState(0x8eb4, 0xfbb1, 0xff0, 0xe8f3, 0x9eaa, 0xdaa, 0x1, 0x1);
        gbc.writeMem(0x8eb4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfbb1, gbc.sp());
        EXPECT(0x8eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb4));
        EXPECT(0x61, gbc.readMem(0x8eb5));
        // CB 61 016B
        gbc.setState(0xda13, 0xd565, 0xc500, 0x4012, 0xc1af, 0xfbfc, 0x1, 0x0);
        gbc.writeMem(0xda13, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd565, gbc.sp());
        EXPECT(0xda15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda13));
        EXPECT(0x61, gbc.readMem(0xda14));
        // CB 61 016C
        gbc.setState(0x71c4, 0x2ae5, 0x57f0, 0x325, 0xe539, 0xc532, 0x1, 0x1);
        gbc.writeMem(0x71c4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2ae5, gbc.sp());
        EXPECT(0x71c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 016D
        gbc.setState(0x9c60, 0x2aaf, 0x3260, 0x1fc1, 0xc637, 0x3dc2, 0x1, 0x1);
        gbc.writeMem(0x9c60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2aaf, gbc.sp());
        EXPECT(0x9c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c60));
        EXPECT(0x61, gbc.readMem(0x9c61));
        // CB 61 016E
        gbc.setState(0x5173, 0xa38b, 0xcd90, 0x20e7, 0x2e25, 0x9182, 0x1, 0x0);
        gbc.writeMem(0x5173, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa38b, gbc.sp());
        EXPECT(0x5175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 016F
        gbc.setState(0xb9c3, 0x3577, 0xd000, 0xf380, 0x5379, 0x4a75, 0x0, 0x1);
        gbc.writeMem(0xb9c3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3577, gbc.sp());
        EXPECT(0xb9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c3));
        EXPECT(0x61, gbc.readMem(0xb9c4));
        // CB 61 0170
        gbc.setState(0xc7a7, 0xd0ff, 0x8820, 0x9a00, 0x49d9, 0x4461, 0x0, 0x0);
        gbc.writeMem(0xc7a7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd0ff, gbc.sp());
        EXPECT(0xc7a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a7));
        EXPECT(0x61, gbc.readMem(0xc7a8));
        // CB 61 0171
        gbc.setState(0xdda7, 0x6844, 0xe520, 0x6970, 0x1077, 0x2c2c, 0x0, 0x1);
        gbc.writeMem(0xdda7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6844, gbc.sp());
        EXPECT(0xdda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda7));
        EXPECT(0x61, gbc.readMem(0xdda8));
        // CB 61 0173
        gbc.setState(0x4cff, 0x512b, 0x7050, 0xbeff, 0xd242, 0x654a, 0x0, 0x0);
        gbc.writeMem(0x4cff, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x512b, gbc.sp());
        EXPECT(0x4d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0174
        gbc.setState(0xa223, 0x6973, 0x1f40, 0x6335, 0xf0b4, 0xf905, 0x1, 0x0);
        gbc.writeMem(0xa223, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6973, gbc.sp());
        EXPECT(0xa225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa223));
        EXPECT(0x61, gbc.readMem(0xa224));
        // CB 61 0176
        gbc.setState(0x4497, 0x2fd9, 0x7a0, 0x7399, 0x5d4f, 0xcd8a, 0x0, 0x0);
        gbc.writeMem(0x4497, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2fd9, gbc.sp());
        EXPECT(0x4499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0177
        gbc.setState(0x948c, 0x269e, 0xaba0, 0x248f, 0x40f9, 0xd2eb, 0x1, 0x0);
        gbc.writeMem(0x948c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x269e, gbc.sp());
        EXPECT(0x948e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948c));
        EXPECT(0x61, gbc.readMem(0x948d));
        // CB 61 0178
        gbc.setState(0x6895, 0x8e36, 0x95a0, 0x78c3, 0xef47, 0xf0ce, 0x0, 0x0);
        gbc.writeMem(0x6895, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8e36, gbc.sp());
        EXPECT(0x6897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0179
        gbc.setState(0x4ea7, 0x78bd, 0x4320, 0xf229, 0xcb8a, 0x5fb0, 0x1, 0x1);
        gbc.writeMem(0x4ea7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x78bd, gbc.sp());
        EXPECT(0x4ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 017A
        gbc.setState(0x7e5e, 0xf633, 0x32e0, 0x32b, 0x9c19, 0x81c4, 0x0, 0x0);
        gbc.writeMem(0x7e5e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf633, gbc.sp());
        EXPECT(0x7e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 017B
        gbc.setState(0x64e4, 0x66ea, 0xce30, 0x131c, 0xc22b, 0xf9fd, 0x0, 0x1);
        gbc.writeMem(0x64e4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x66ea, gbc.sp());
        EXPECT(0x64e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 017C
        gbc.setState(0x1203, 0x2186, 0x1320, 0xcf43, 0x465e, 0x67b0, 0x1, 0x1);
        gbc.writeMem(0x1203, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2186, gbc.sp());
        EXPECT(0x1205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 017D
        gbc.setState(0x39e1, 0x7a52, 0x54f0, 0x2981, 0x3e48, 0xb1c, 0x0, 0x0);
        gbc.writeMem(0x39e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7a52, gbc.sp());
        EXPECT(0x39e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 017E
        gbc.setState(0xa112, 0x7b81, 0xe200, 0x854b, 0x5960, 0x9d6c, 0x0, 0x1);
        gbc.writeMem(0xa112, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7b81, gbc.sp());
        EXPECT(0xa114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa112));
        EXPECT(0x61, gbc.readMem(0xa113));
        // CB 61 0180
        gbc.setState(0xec26, 0xc683, 0x4a50, 0x1a97, 0x76f9, 0x6296, 0x0, 0x1);
        gbc.writeMem(0xec26, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc683, gbc.sp());
        EXPECT(0xec28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec26));
        EXPECT(0x61, gbc.readMem(0xec27));
        // CB 61 0181
        gbc.setState(0x3230, 0xde9c, 0xd4c0, 0x6f9d, 0x8f9e, 0x9333, 0x1, 0x0);
        gbc.writeMem(0x3230, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xde9c, gbc.sp());
        EXPECT(0x3232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0182
        gbc.setState(0x6678, 0xb41a, 0x3bb0, 0xb26d, 0xf8d0, 0x2ea9, 0x0, 0x1);
        gbc.writeMem(0x6678, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb41a, gbc.sp());
        EXPECT(0x667a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0183
        gbc.setState(0xb702, 0xb7a6, 0xa810, 0x85aa, 0x67ce, 0x1b44, 0x1, 0x1);
        gbc.writeMem(0xb702, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb7a6, gbc.sp());
        EXPECT(0xb704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb702));
        EXPECT(0x61, gbc.readMem(0xb703));
        // CB 61 0184
        gbc.setState(0x3a00, 0x6f48, 0x67b0, 0x77b6, 0x22c6, 0xe539, 0x0, 0x1);
        gbc.writeMem(0x3a00, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6f48, gbc.sp());
        EXPECT(0x3a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0185
        gbc.setState(0x4440, 0x3047, 0x1b80, 0x9f52, 0x2490, 0x9204, 0x0, 0x1);
        gbc.writeMem(0x4440, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3047, gbc.sp());
        EXPECT(0x4442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0186
        gbc.setState(0xad82, 0x89e2, 0x2200, 0x2f5f, 0x3680, 0xf875, 0x1, 0x0);
        gbc.writeMem(0xad82, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x89e2, gbc.sp());
        EXPECT(0xad84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad82));
        EXPECT(0x61, gbc.readMem(0xad83));
        // CB 61 0187
        gbc.setState(0x999e, 0x685a, 0xac0, 0xe017, 0x47f5, 0x7245, 0x1, 0x0);
        gbc.writeMem(0x999e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x685a, gbc.sp());
        EXPECT(0x99a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x999e));
        EXPECT(0x61, gbc.readMem(0x999f));
        // CB 61 0188
        gbc.setState(0x1dc0, 0x1d5d, 0xbb10, 0x1bbe, 0x5126, 0x2286, 0x0, 0x0);
        gbc.writeMem(0x1dc0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1d5d, gbc.sp());
        EXPECT(0x1dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0189
        gbc.setState(0xd500, 0x6e55, 0x9b60, 0xdf48, 0xc07c, 0x518f, 0x0, 0x0);
        gbc.writeMem(0xd500, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6e55, gbc.sp());
        EXPECT(0xd502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd500));
        EXPECT(0x61, gbc.readMem(0xd501));
        // CB 61 018A
        gbc.setState(0x81d, 0x2517, 0xf900, 0x3809, 0xbe43, 0x2495, 0x0, 0x0);
        gbc.writeMem(0x81d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2517, gbc.sp());
        EXPECT(0x81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 018B
        gbc.setState(0x117e, 0xad33, 0xae70, 0xd02b, 0x7599, 0xbad6, 0x1, 0x0);
        gbc.writeMem(0x117e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xad33, gbc.sp());
        EXPECT(0x1180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 018C
        gbc.setState(0xaa5e, 0xea4, 0xf370, 0x4c91, 0x2ed0, 0xb7d7, 0x0, 0x0);
        gbc.writeMem(0xaa5e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xea4, gbc.sp());
        EXPECT(0xaa60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa5e));
        EXPECT(0x61, gbc.readMem(0xaa5f));
        // CB 61 018D
        gbc.setState(0xa222, 0xdcf5, 0x1ee0, 0x12ac, 0x8c46, 0x858a, 0x0, 0x1);
        gbc.writeMem(0xa222, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdcf5, gbc.sp());
        EXPECT(0xa224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa222));
        EXPECT(0x61, gbc.readMem(0xa223));
        // CB 61 018E
        gbc.setState(0x3aa0, 0x2716, 0xa8a0, 0xabd5, 0xb1fb, 0x94e9, 0x0, 0x1);
        gbc.writeMem(0x3aa0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2716, gbc.sp());
        EXPECT(0x3aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 018F
        gbc.setState(0x5e6a, 0x4a18, 0x65f0, 0x6251, 0x109, 0x6dfa, 0x1, 0x1);
        gbc.writeMem(0x5e6a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4a18, gbc.sp());
        EXPECT(0x5e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0190
        gbc.setState(0x8b1f, 0xdecc, 0x76f0, 0xf033, 0x30c8, 0x694c, 0x0, 0x0);
        gbc.writeMem(0x8b1f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdecc, gbc.sp());
        EXPECT(0x8b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1f));
        EXPECT(0x61, gbc.readMem(0x8b20));
        // CB 61 0191
        gbc.setState(0x3d16, 0x827a, 0xe330, 0x7e2a, 0xda, 0x4528, 0x0, 0x0);
        gbc.writeMem(0x3d16, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x827a, gbc.sp());
        EXPECT(0x3d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0192
        gbc.setState(0x62b4, 0x802b, 0xaf30, 0x69d6, 0xcdce, 0xe7f8, 0x1, 0x0);
        gbc.writeMem(0x62b4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x802b, gbc.sp());
        EXPECT(0x62b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0193
        gbc.setState(0xaaad, 0x9721, 0x8520, 0x2c2, 0x61d1, 0x5ac6, 0x1, 0x0);
        gbc.writeMem(0xaaad, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9721, gbc.sp());
        EXPECT(0xaaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaad));
        EXPECT(0x61, gbc.readMem(0xaaae));
        // CB 61 0194
        gbc.setState(0x2e95, 0x42c8, 0x66b0, 0x82a, 0x497b, 0x658d, 0x0, 0x0);
        gbc.writeMem(0x2e95, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x42c8, gbc.sp());
        EXPECT(0x2e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0195
        gbc.setState(0xa85e, 0x3b07, 0xb880, 0x2d46, 0x1e8a, 0xd802, 0x1, 0x1);
        gbc.writeMem(0xa85e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3b07, gbc.sp());
        EXPECT(0xa860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85e));
        EXPECT(0x61, gbc.readMem(0xa85f));
        // CB 61 0196
        gbc.setState(0x71bf, 0x153c, 0x42c0, 0x1d62, 0x999, 0xbcc4, 0x0, 0x1);
        gbc.writeMem(0x71bf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x153c, gbc.sp());
        EXPECT(0x71c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0197
        gbc.setState(0x39a9, 0xa9d1, 0x46d0, 0x7929, 0x1d76, 0xb96e, 0x1, 0x1);
        gbc.writeMem(0x39a9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa9d1, gbc.sp());
        EXPECT(0x39ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0198
        gbc.setState(0xd0b, 0xe790, 0xe0, 0x8844, 0xe812, 0xb95d, 0x0, 0x0);
        gbc.writeMem(0xd0b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe790, gbc.sp());
        EXPECT(0xd0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0199
        gbc.setState(0xa796, 0x198f, 0x2490, 0xe63f, 0x5989, 0xd173, 0x0, 0x1);
        gbc.writeMem(0xa796, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x198f, gbc.sp());
        EXPECT(0xa798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa796));
        EXPECT(0x61, gbc.readMem(0xa797));
        // CB 61 019A
        gbc.setState(0x7ca1, 0xddd0, 0xebc0, 0xb627, 0x430d, 0xd11f, 0x1, 0x0);
        gbc.writeMem(0x7ca1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xddd0, gbc.sp());
        EXPECT(0x7ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 019B
        gbc.setState(0x8c0e, 0x9078, 0x3260, 0x5f27, 0xdae4, 0x4645, 0x0, 0x0);
        gbc.writeMem(0x8c0e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9078, gbc.sp());
        EXPECT(0x8c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c0e));
        EXPECT(0x61, gbc.readMem(0x8c0f));
        // CB 61 019C
        gbc.setState(0x65d5, 0x234b, 0x7d70, 0xd523, 0x4bd0, 0x4f9b, 0x0, 0x0);
        gbc.writeMem(0x65d5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x234b, gbc.sp());
        EXPECT(0x65d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 019D
        gbc.setState(0x833a, 0xbe73, 0x3400, 0x169f, 0xd463, 0xf7c9, 0x1, 0x0);
        gbc.writeMem(0x833a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbe73, gbc.sp());
        EXPECT(0x833c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833a));
        EXPECT(0x61, gbc.readMem(0x833b));
        // CB 61 019E
        gbc.setState(0xe15c, 0x5b11, 0x6580, 0x9ec7, 0x99dd, 0xe415, 0x0, 0x1);
        gbc.writeMem(0xe15c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5b11, gbc.sp());
        EXPECT(0xe15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15c));
        EXPECT(0x61, gbc.readMem(0xe15d));
        // CB 61 019F
        gbc.setState(0x8750, 0x59d5, 0xe350, 0x1c57, 0x7a8b, 0xd3fa, 0x0, 0x0);
        gbc.writeMem(0x8750, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x59d5, gbc.sp());
        EXPECT(0x8752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8750));
        EXPECT(0x61, gbc.readMem(0x8751));
        // CB 61 01A2
        gbc.setState(0x480e, 0x393a, 0x4f80, 0x3433, 0x3552, 0x8683, 0x1, 0x0);
        gbc.writeMem(0x480e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x393a, gbc.sp());
        EXPECT(0x4810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01A3
        gbc.setState(0xb841, 0xdcda, 0x2860, 0x8e05, 0xa241, 0x5de1, 0x1, 0x1);
        gbc.writeMem(0xb841, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdcda, gbc.sp());
        EXPECT(0xb843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb841));
        EXPECT(0x61, gbc.readMem(0xb842));
        // CB 61 01A4
        gbc.setState(0xabef, 0x4a8e, 0x4fb0, 0xe1ee, 0xc4d5, 0x4a6d, 0x0, 0x0);
        gbc.writeMem(0xabef, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4a8e, gbc.sp());
        EXPECT(0xabf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabef));
        EXPECT(0x61, gbc.readMem(0xabf0));
        // CB 61 01A5
        gbc.setState(0x28a1, 0xb7c0, 0x8000, 0x2993, 0x8b33, 0xba68, 0x1, 0x1);
        gbc.writeMem(0x28a1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb7c0, gbc.sp());
        EXPECT(0x28a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01A7
        gbc.setState(0x51c, 0x59d6, 0x580, 0x81b2, 0x29a1, 0xf7ce, 0x1, 0x0);
        gbc.writeMem(0x51c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x59d6, gbc.sp());
        EXPECT(0x51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01A8
        gbc.setState(0x665d, 0x668, 0x69d0, 0x29f2, 0x3c3f, 0x25db, 0x0, 0x0);
        gbc.writeMem(0x665d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x668, gbc.sp());
        EXPECT(0x665f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01A9
        gbc.setState(0x50e5, 0x2d40, 0x6540, 0xf6b5, 0x44bb, 0x280c, 0x1, 0x0);
        gbc.writeMem(0x50e5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2d40, gbc.sp());
        EXPECT(0x50e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01AB
        gbc.setState(0xe8ef, 0x5167, 0x4ae0, 0x44d4, 0x3c3b, 0x94d8, 0x0, 0x0);
        gbc.writeMem(0xe8ef, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5167, gbc.sp());
        EXPECT(0xe8f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ef));
        EXPECT(0x61, gbc.readMem(0xe8f0));
        // CB 61 01AC
        gbc.setState(0x53e3, 0x72cc, 0xbd20, 0x73db, 0xfee7, 0x8e88, 0x1, 0x1);
        gbc.writeMem(0x53e3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x72cc, gbc.sp());
        EXPECT(0x53e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01AD
        gbc.setState(0x8870, 0x3013, 0xd6b0, 0xa020, 0x4fe3, 0xe9b2, 0x0, 0x1);
        gbc.writeMem(0x8870, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3013, gbc.sp());
        EXPECT(0x8872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8870));
        EXPECT(0x61, gbc.readMem(0x8871));
        // CB 61 01AE
        gbc.setState(0x790, 0xa42a, 0xad40, 0x723e, 0xb0c, 0xd161, 0x1, 0x1);
        gbc.writeMem(0x790, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa42a, gbc.sp());
        EXPECT(0x792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01AF
        gbc.setState(0xc22c, 0xac49, 0x6820, 0xb186, 0x201e, 0x879f, 0x1, 0x0);
        gbc.writeMem(0xc22c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xac49, gbc.sp());
        EXPECT(0xc22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22c));
        EXPECT(0x61, gbc.readMem(0xc22d));
        // CB 61 01B0
        gbc.setState(0xaf13, 0x638a, 0x7ba0, 0xed22, 0x25dc, 0x4d3d, 0x0, 0x0);
        gbc.writeMem(0xaf13, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x638a, gbc.sp());
        EXPECT(0xaf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf13));
        EXPECT(0x61, gbc.readMem(0xaf14));
        // CB 61 01B1
        gbc.setState(0x27e9, 0x5c65, 0x7a30, 0x6a40, 0x27bc, 0x88a6, 0x1, 0x0);
        gbc.writeMem(0x27e9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5c65, gbc.sp());
        EXPECT(0x27eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01B2
        gbc.setState(0xc9af, 0xd7f1, 0xc9e0, 0x7831, 0xfe59, 0x692d, 0x1, 0x0);
        gbc.writeMem(0xc9af, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd7f1, gbc.sp());
        EXPECT(0xc9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9af));
        EXPECT(0x61, gbc.readMem(0xc9b0));
        // CB 61 01B3
        gbc.setState(0xe894, 0xf910, 0xcb00, 0x972d, 0x1491, 0xda60, 0x0, 0x0);
        gbc.writeMem(0xe894, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf910, gbc.sp());
        EXPECT(0xe896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe894));
        EXPECT(0x61, gbc.readMem(0xe895));
        // CB 61 01B4
        gbc.setState(0x655, 0xa3a9, 0x8fc0, 0xa723, 0x8a7d, 0xc7f2, 0x1, 0x0);
        gbc.writeMem(0x655, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa3a9, gbc.sp());
        EXPECT(0x657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01B5
        gbc.setState(0xd9cf, 0x3527, 0x5f0, 0x206a, 0xd3fe, 0x6b23, 0x1, 0x1);
        gbc.writeMem(0xd9cf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3527, gbc.sp());
        EXPECT(0xd9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9cf));
        EXPECT(0x61, gbc.readMem(0xd9d0));
        // CB 61 01B6
        gbc.setState(0x887b, 0x2ba9, 0x7ce0, 0xb772, 0x124b, 0x4e22, 0x1, 0x1);
        gbc.writeMem(0x887b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2ba9, gbc.sp());
        EXPECT(0x887d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887b));
        EXPECT(0x61, gbc.readMem(0x887c));
        // CB 61 01B7
        gbc.setState(0xba07, 0x22e1, 0x1f40, 0x856c, 0x359e, 0xff4d, 0x1, 0x0);
        gbc.writeMem(0xba07, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x22e1, gbc.sp());
        EXPECT(0xba09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba07));
        EXPECT(0x61, gbc.readMem(0xba08));
        // CB 61 01B8
        gbc.setState(0x4b34, 0xf32b, 0x1850, 0x5ae2, 0x6b97, 0xbb51, 0x0, 0x1);
        gbc.writeMem(0x4b34, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf32b, gbc.sp());
        EXPECT(0x4b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01B9
        gbc.setState(0xe8f1, 0x66d2, 0xf740, 0xcc6a, 0x73f3, 0x99ce, 0x1, 0x1);
        gbc.writeMem(0xe8f1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x66d2, gbc.sp());
        EXPECT(0xe8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f1));
        EXPECT(0x61, gbc.readMem(0xe8f2));
        // CB 61 01BA
        gbc.setState(0x7bda, 0xd002, 0xf980, 0x5abe, 0x42c6, 0x10f4, 0x0, 0x0);
        gbc.writeMem(0x7bda, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd002, gbc.sp());
        EXPECT(0x7bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01BB
        gbc.setState(0xbb80, 0x4509, 0xb600, 0xb900, 0x71f9, 0x2f5, 0x1, 0x0);
        gbc.writeMem(0xbb80, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4509, gbc.sp());
        EXPECT(0xbb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb80));
        EXPECT(0x61, gbc.readMem(0xbb81));
        // CB 61 01BC
        gbc.setState(0xe05d, 0x1c13, 0x3a40, 0x7144, 0x5a01, 0xcd33, 0x0, 0x0);
        gbc.writeMem(0xe05d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1c13, gbc.sp());
        EXPECT(0xe05f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05d));
        EXPECT(0x61, gbc.readMem(0xe05e));
        // CB 61 01BD
        gbc.setState(0x5cba, 0xe515, 0x51d0, 0xabe0, 0x98ae, 0xd360, 0x0, 0x0);
        gbc.writeMem(0x5cba, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe515, gbc.sp());
        EXPECT(0x5cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01BE
        gbc.setState(0xb2ae, 0x4454, 0x2b20, 0x1bb6, 0x4430, 0x21ca, 0x1, 0x0);
        gbc.writeMem(0xb2ae, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4454, gbc.sp());
        EXPECT(0xb2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ae));
        EXPECT(0x61, gbc.readMem(0xb2af));
        // CB 61 01BF
        gbc.setState(0x4227, 0xfafc, 0xa980, 0xe9ad, 0xb0f7, 0x23f6, 0x0, 0x1);
        gbc.writeMem(0x4227, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfafc, gbc.sp());
        EXPECT(0x4229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01C0
        gbc.setState(0x6073, 0x5d2e, 0x33b0, 0x943b, 0xe767, 0xfe97, 0x1, 0x1);
        gbc.writeMem(0x6073, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5d2e, gbc.sp());
        EXPECT(0x6075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01C1
        gbc.setState(0x2b62, 0x205a, 0x1110, 0x3971, 0xf2d5, 0x63a3, 0x1, 0x0);
        gbc.writeMem(0x2b62, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x205a, gbc.sp());
        EXPECT(0x2b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01C2
        gbc.setState(0x83fd, 0x9d37, 0x33d0, 0xe4ab, 0x78e0, 0xf7fd, 0x0, 0x1);
        gbc.writeMem(0x83fd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9d37, gbc.sp());
        EXPECT(0x83ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fd));
        EXPECT(0x61, gbc.readMem(0x83fe));
        // CB 61 01C3
        gbc.setState(0x2e4f, 0x73bf, 0x15b0, 0xd479, 0xdb83, 0x4a28, 0x1, 0x1);
        gbc.writeMem(0x2e4f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x73bf, gbc.sp());
        EXPECT(0x2e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01C5
        gbc.setState(0x3c5, 0x25fe, 0xa130, 0x8aca, 0xb0ea, 0xe959, 0x0, 0x1);
        gbc.writeMem(0x3c5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x25fe, gbc.sp());
        EXPECT(0x3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01C6
        gbc.setState(0xf1b, 0x3a48, 0xaac0, 0xcaa5, 0xde65, 0xa51b, 0x1, 0x0);
        gbc.writeMem(0xf1b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3a48, gbc.sp());
        EXPECT(0xf1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01C7
        gbc.setState(0x7018, 0x2753, 0x18d0, 0x12cd, 0x1a6a, 0x5de1, 0x0, 0x1);
        gbc.writeMem(0x7018, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2753, gbc.sp());
        EXPECT(0x701a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01C8
        gbc.setState(0x5583, 0xa259, 0x6c70, 0xa229, 0x3121, 0x8331, 0x1, 0x0);
        gbc.writeMem(0x5583, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa259, gbc.sp());
        EXPECT(0x5585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01C9
        gbc.setState(0xede5, 0xf605, 0x1980, 0x4fd, 0x9dea, 0x95a5, 0x1, 0x1);
        gbc.writeMem(0xede5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf605, gbc.sp());
        EXPECT(0xede7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede5));
        EXPECT(0x61, gbc.readMem(0xede6));
        // CB 61 01CA
        gbc.setState(0x4439, 0x6fd5, 0x2f70, 0x2f34, 0x772f, 0xa189, 0x1, 0x0);
        gbc.writeMem(0x4439, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6fd5, gbc.sp());
        EXPECT(0x443b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01CB
        gbc.setState(0xb3cf, 0x8496, 0xa230, 0xe2bd, 0xe014, 0x8408, 0x1, 0x1);
        gbc.writeMem(0xb3cf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8496, gbc.sp());
        EXPECT(0xb3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cf));
        EXPECT(0x61, gbc.readMem(0xb3d0));
        // CB 61 01CC
        gbc.setState(0x27d, 0xb5de, 0x51f0, 0x4185, 0xfa7a, 0xe9e7, 0x0, 0x1);
        gbc.writeMem(0x27d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb5de, gbc.sp());
        EXPECT(0x27f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01CD
        gbc.setState(0x17c7, 0x63d3, 0x2820, 0x2186, 0x1c86, 0x8a86, 0x0, 0x1);
        gbc.writeMem(0x17c7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x63d3, gbc.sp());
        EXPECT(0x17c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01CE
        gbc.setState(0xe311, 0x66c1, 0x79e0, 0xe282, 0x320, 0x5986, 0x0, 0x1);
        gbc.writeMem(0xe311, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x66c1, gbc.sp());
        EXPECT(0xe313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe311));
        EXPECT(0x61, gbc.readMem(0xe312));
        // CB 61 01CF
        gbc.setState(0xa7b8, 0xf8a5, 0x450, 0x6626, 0x6f1f, 0x12e4, 0x0, 0x1);
        gbc.writeMem(0xa7b8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf8a5, gbc.sp());
        EXPECT(0xa7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b8));
        EXPECT(0x61, gbc.readMem(0xa7b9));
        // CB 61 01D0
        gbc.setState(0x9852, 0x74ba, 0xeb80, 0x4bd0, 0xd977, 0x46f5, 0x1, 0x1);
        gbc.writeMem(0x9852, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x74ba, gbc.sp());
        EXPECT(0x9854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9852));
        EXPECT(0x61, gbc.readMem(0x9853));
        // CB 61 01D1
        gbc.setState(0x3059, 0x952d, 0x4d80, 0x4a21, 0xcd5d, 0x84bb, 0x1, 0x1);
        gbc.writeMem(0x3059, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x952d, gbc.sp());
        EXPECT(0x305b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01D2
        gbc.setState(0x536, 0x4084, 0xbbc0, 0xc3a8, 0x1c41, 0x93a0, 0x0, 0x1);
        gbc.writeMem(0x536, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4084, gbc.sp());
        EXPECT(0x538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01D3
        gbc.setState(0x768f, 0xccd1, 0x3490, 0xe68a, 0x77c0, 0x5b04, 0x1, 0x0);
        gbc.writeMem(0x768f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xccd1, gbc.sp());
        EXPECT(0x7691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01D4
        gbc.setState(0x36d, 0xbff7, 0x3000, 0xdcc6, 0xa99, 0xabc7, 0x0, 0x0);
        gbc.writeMem(0x36d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbff7, gbc.sp());
        EXPECT(0x36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01D5
        gbc.setState(0x6674, 0x855, 0x63d0, 0x29f5, 0x87d, 0xcfc9, 0x0, 0x0);
        gbc.writeMem(0x6674, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x855, gbc.sp());
        EXPECT(0x6676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01D6
        gbc.setState(0xdfe6, 0xdfd, 0xa00, 0xa2c1, 0x4e, 0xc1a1, 0x0, 0x0);
        gbc.writeMem(0xdfe6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdfd, gbc.sp());
        EXPECT(0xdfe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe6));
        EXPECT(0x61, gbc.readMem(0xdfe7));
        // CB 61 01D7
        gbc.setState(0x4b94, 0x90cd, 0x3870, 0x1a8, 0x7c7b, 0xdb13, 0x1, 0x1);
        gbc.writeMem(0x4b94, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x90cd, gbc.sp());
        EXPECT(0x4b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01D8
        gbc.setState(0x6ce1, 0x49c6, 0xccb0, 0xe7db, 0xcc0d, 0x1183, 0x0, 0x1);
        gbc.writeMem(0x6ce1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x49c6, gbc.sp());
        EXPECT(0x6ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01D9
        gbc.setState(0x8cef, 0xe4, 0x7450, 0x2c81, 0x9d28, 0xa5c5, 0x0, 0x1);
        gbc.writeMem(0x8cef, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe4, gbc.sp());
        EXPECT(0x8cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cef));
        EXPECT(0x61, gbc.readMem(0x8cf0));
        // CB 61 01DA
        gbc.setState(0xe16b, 0x23f6, 0x5990, 0xc07d, 0x85c6, 0x6eab, 0x0, 0x1);
        gbc.writeMem(0xe16b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x23f6, gbc.sp());
        EXPECT(0xe16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16b));
        EXPECT(0x61, gbc.readMem(0xe16c));
        // CB 61 01DB
        gbc.setState(0x6e8e, 0x810a, 0x1300, 0x61b8, 0x60e0, 0x9200, 0x1, 0x0);
        gbc.writeMem(0x6e8e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x810a, gbc.sp());
        EXPECT(0x6e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01DC
        gbc.setState(0x8981, 0x468b, 0x52a0, 0x5807, 0xc772, 0x1515, 0x0, 0x1);
        gbc.writeMem(0x8981, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x468b, gbc.sp());
        EXPECT(0x8983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8981));
        EXPECT(0x61, gbc.readMem(0x8982));
        // CB 61 01DE
        gbc.setState(0x214a, 0xd645, 0xbb40, 0xaf6f, 0x41c5, 0x45d1, 0x1, 0x0);
        gbc.writeMem(0x214a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd645, gbc.sp());
        EXPECT(0x214c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01DF
        gbc.setState(0x10a5, 0xef64, 0x3830, 0xdacf, 0x9293, 0x8c32, 0x0, 0x1);
        gbc.writeMem(0x10a5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xef64, gbc.sp());
        EXPECT(0x10a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01E0
        gbc.setState(0xb240, 0x1084, 0x4620, 0x87f2, 0x4beb, 0x18e9, 0x0, 0x0);
        gbc.writeMem(0xb240, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1084, gbc.sp());
        EXPECT(0xb242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb240));
        EXPECT(0x61, gbc.readMem(0xb241));
        // CB 61 01E1
        gbc.setState(0x7ce9, 0x5b99, 0x9a80, 0x3529, 0x637a, 0x26, 0x0, 0x1);
        gbc.writeMem(0x7ce9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5b99, gbc.sp());
        EXPECT(0x7ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01E2
        gbc.setState(0x4d9, 0xd9a5, 0x3dd0, 0xe29d, 0xdd45, 0x6e34, 0x1, 0x0);
        gbc.writeMem(0x4d9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd9a5, gbc.sp());
        EXPECT(0x4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01E3
        gbc.setState(0x577f, 0xa32e, 0x3860, 0xa542, 0x3452, 0x1287, 0x0, 0x1);
        gbc.writeMem(0x577f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa32e, gbc.sp());
        EXPECT(0x5781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01E4
        gbc.setState(0x9de, 0x2f7c, 0xaad0, 0xc0f0, 0x4d44, 0x9193, 0x0, 0x0);
        gbc.writeMem(0x9de, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2f7c, gbc.sp());
        EXPECT(0x9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01E5
        gbc.setState(0x6df6, 0x5e3f, 0x3f10, 0x2f39, 0x2b31, 0x9e01, 0x1, 0x1);
        gbc.writeMem(0x6df6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5e3f, gbc.sp());
        EXPECT(0x6df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01E6
        gbc.setState(0xc2c9, 0x8be1, 0xab60, 0xb27a, 0x9ba1, 0x10e, 0x0, 0x1);
        gbc.writeMem(0xc2c9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8be1, gbc.sp());
        EXPECT(0xc2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c9));
        EXPECT(0x61, gbc.readMem(0xc2ca));
        // CB 61 01E7
        gbc.setState(0xc62b, 0xd4fb, 0xa7d0, 0x5021, 0xe58a, 0xbd61, 0x1, 0x1);
        gbc.writeMem(0xc62b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd4fb, gbc.sp());
        EXPECT(0xc62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62b));
        EXPECT(0x61, gbc.readMem(0xc62c));
        // CB 61 01E8
        gbc.setState(0xebab, 0xd65d, 0x3d60, 0xf70c, 0x3e23, 0xfda0, 0x0, 0x1);
        gbc.writeMem(0xebab, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd65d, gbc.sp());
        EXPECT(0xebad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebab));
        EXPECT(0x61, gbc.readMem(0xebac));
        // CB 61 01E9
        gbc.setState(0xb576, 0x787d, 0xaea0, 0xfa20, 0xd3c8, 0xba36, 0x1, 0x0);
        gbc.writeMem(0xb576, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x787d, gbc.sp());
        EXPECT(0xb578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb576));
        EXPECT(0x61, gbc.readMem(0xb577));
        // CB 61 01EA
        gbc.setState(0x1e18, 0x6aa, 0xd870, 0x5da3, 0xab25, 0xb941, 0x0, 0x1);
        gbc.writeMem(0x1e18, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6aa, gbc.sp());
        EXPECT(0x1e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01EB
        gbc.setState(0x7076, 0x148a, 0x7380, 0x9ee9, 0xbb48, 0xc543, 0x1, 0x0);
        gbc.writeMem(0x7076, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x148a, gbc.sp());
        EXPECT(0x7078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01EC
        gbc.setState(0x536e, 0x386e, 0xfd00, 0xefcb, 0x66, 0xc8b3, 0x0, 0x1);
        gbc.writeMem(0x536e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x386e, gbc.sp());
        EXPECT(0x5370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01ED
        gbc.setState(0xe59b, 0x60f1, 0x4e20, 0x56d0, 0x240c, 0xac80, 0x0, 0x1);
        gbc.writeMem(0xe59b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x60f1, gbc.sp());
        EXPECT(0xe59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59b));
        EXPECT(0x61, gbc.readMem(0xe59c));
        // CB 61 01EE
        gbc.setState(0xd258, 0xdc1a, 0x1ca0, 0x6bb6, 0xb013, 0x561a, 0x0, 0x0);
        gbc.writeMem(0xd258, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdc1a, gbc.sp());
        EXPECT(0xd25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd258));
        EXPECT(0x61, gbc.readMem(0xd259));
        // CB 61 01EF
        gbc.setState(0x3399, 0x8595, 0x3300, 0x3b54, 0x78ae, 0x5ab1, 0x1, 0x1);
        gbc.writeMem(0x3399, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8595, gbc.sp());
        EXPECT(0x339b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01F0
        gbc.setState(0x6580, 0xa8be, 0x8410, 0x420c, 0x96ea, 0x564c, 0x1, 0x1);
        gbc.writeMem(0x6580, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa8be, gbc.sp());
        EXPECT(0x6582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01F1
        gbc.setState(0xd725, 0x42e4, 0xc6e0, 0x2364, 0xb333, 0xb791, 0x1, 0x0);
        gbc.writeMem(0xd725, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x42e4, gbc.sp());
        EXPECT(0xd727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd725));
        EXPECT(0x61, gbc.readMem(0xd726));
        // CB 61 01F2
        gbc.setState(0xf72, 0xc732, 0x4500, 0xbf0b, 0x257, 0x42e7, 0x1, 0x0);
        gbc.writeMem(0xf72, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc732, gbc.sp());
        EXPECT(0xf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01F3
        gbc.setState(0x623b, 0x42e0, 0x2870, 0x640c, 0x81c8, 0x48da, 0x1, 0x1);
        gbc.writeMem(0x623b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x42e0, gbc.sp());
        EXPECT(0x623d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01F4
        gbc.setState(0xe9dd, 0x657f, 0x2020, 0x1d57, 0x74de, 0xb4c7, 0x0, 0x0);
        gbc.writeMem(0xe9dd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x657f, gbc.sp());
        EXPECT(0xe9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9dd));
        EXPECT(0x61, gbc.readMem(0xe9de));
        // CB 61 01F5
        gbc.setState(0x4f16, 0x6dfe, 0xd650, 0xec9b, 0x198f, 0xe75, 0x1, 0x1);
        gbc.writeMem(0x4f16, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6dfe, gbc.sp());
        EXPECT(0x4f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 01F7
        gbc.setState(0xe7a8, 0xa0e8, 0xea80, 0x3f6c, 0xddf7, 0x30af, 0x0, 0x1);
        gbc.writeMem(0xe7a8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa0e8, gbc.sp());
        EXPECT(0xe7aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a8));
        EXPECT(0x61, gbc.readMem(0xe7a9));
        // CB 61 01F8
        gbc.setState(0x7c64, 0x7f9d, 0xd220, 0x1e92, 0xcbcb, 0x54e4, 0x1, 0x0);
        gbc.writeMem(0x7c64, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7f9d, gbc.sp());
        EXPECT(0x7c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 01F9
        gbc.setState(0x86b1, 0xab35, 0xd5a0, 0xf494, 0x37b6, 0x91be, 0x1, 0x0);
        gbc.writeMem(0x86b1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xab35, gbc.sp());
        EXPECT(0x86b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b1));
        EXPECT(0x61, gbc.readMem(0x86b2));
        // CB 61 01FA
        gbc.setState(0xe43e, 0x65e4, 0x4700, 0x3d66, 0x2c81, 0x9ec6, 0x1, 0x0);
        gbc.writeMem(0xe43e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x65e4, gbc.sp());
        EXPECT(0xe440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43e));
        EXPECT(0x61, gbc.readMem(0xe43f));
        // CB 61 01FB
        gbc.setState(0xb46c, 0x7f3a, 0x8670, 0xcab1, 0x2f92, 0x68d0, 0x0, 0x0);
        gbc.writeMem(0xb46c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7f3a, gbc.sp());
        EXPECT(0xb46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46c));
        EXPECT(0x61, gbc.readMem(0xb46d));
        // CB 61 01FC
        gbc.setState(0xc5c8, 0x166d, 0xcab0, 0x8875, 0xc578, 0xd22e, 0x1, 0x1);
        gbc.writeMem(0xc5c8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x166d, gbc.sp());
        EXPECT(0xc5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c8));
        EXPECT(0x61, gbc.readMem(0xc5c9));
        // CB 61 01FD
        gbc.setState(0xe0e1, 0xa16, 0x2070, 0xddab, 0xc1d1, 0x6bc2, 0x0, 0x1);
        gbc.writeMem(0xe0e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa16, gbc.sp());
        EXPECT(0xe0e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e1));
        EXPECT(0x61, gbc.readMem(0xe0e2));
        // CB 61 01FE
        gbc.setState(0xad94, 0x107, 0x88f0, 0xd803, 0x7307, 0x5c8d, 0x1, 0x0);
        gbc.writeMem(0xad94, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x107, gbc.sp());
        EXPECT(0xad96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad94));
        EXPECT(0x61, gbc.readMem(0xad95));
        // CB 61 01FF
        gbc.setState(0x9e1e, 0x370e, 0x3d20, 0xc099, 0x6668, 0x55d7, 0x1, 0x0);
        gbc.writeMem(0x9e1e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x370e, gbc.sp());
        EXPECT(0x9e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e1e));
        EXPECT(0x61, gbc.readMem(0x9e1f));
        // CB 61 0200
        gbc.setState(0x4009, 0xce3c, 0xcff0, 0x7dd8, 0xd516, 0x6e84, 0x1, 0x1);
        gbc.writeMem(0x4009, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xce3c, gbc.sp());
        EXPECT(0x400b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0201
        gbc.setState(0x7cf3, 0x42b9, 0xf590, 0x55c5, 0xf119, 0xff1e, 0x0, 0x1);
        gbc.writeMem(0x7cf3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x42b9, gbc.sp());
        EXPECT(0x7cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0202
        gbc.setState(0xea29, 0x593a, 0x95f0, 0xc2a5, 0x855f, 0x5e87, 0x1, 0x0);
        gbc.writeMem(0xea29, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x593a, gbc.sp());
        EXPECT(0xea2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea29));
        EXPECT(0x61, gbc.readMem(0xea2a));
        // CB 61 0203
        gbc.setState(0x1115, 0xfdfe, 0xe0a0, 0x9659, 0x691c, 0x2d71, 0x1, 0x1);
        gbc.writeMem(0x1115, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfdfe, gbc.sp());
        EXPECT(0x1117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0204
        gbc.setState(0x1066, 0x69ae, 0x5b0, 0x6021, 0xf526, 0xd64e, 0x0, 0x1);
        gbc.writeMem(0x1066, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x69ae, gbc.sp());
        EXPECT(0x1068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0205
        gbc.setState(0x193b, 0x15d8, 0xe510, 0xe15e, 0x923c, 0xbba9, 0x0, 0x1);
        gbc.writeMem(0x193b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x15d8, gbc.sp());
        EXPECT(0x193d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0206
        gbc.setState(0xa534, 0xcd0e, 0x96c0, 0x2709, 0xbe4, 0xe06e, 0x1, 0x0);
        gbc.writeMem(0xa534, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcd0e, gbc.sp());
        EXPECT(0xa536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa534));
        EXPECT(0x61, gbc.readMem(0xa535));
        // CB 61 0207
        gbc.setState(0x30cc, 0x2cc4, 0x2160, 0xe76d, 0x3951, 0xc39a, 0x1, 0x1);
        gbc.writeMem(0x30cc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2cc4, gbc.sp());
        EXPECT(0x30ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0208
        gbc.setState(0x64, 0x819, 0xdf60, 0x2941, 0x181a, 0x5c8f, 0x0, 0x0);
        gbc.writeMem(0x64, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x819, gbc.sp());
        EXPECT(0x66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0209
        gbc.setState(0x1c66, 0x3526, 0xbea0, 0x9090, 0x2bcf, 0xe1b9, 0x0, 0x1);
        gbc.writeMem(0x1c66, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3526, gbc.sp());
        EXPECT(0x1c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 020A
        gbc.setState(0x39ad, 0x955a, 0xb800, 0x4a19, 0x41cc, 0xcf5c, 0x1, 0x0);
        gbc.writeMem(0x39ad, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x955a, gbc.sp());
        EXPECT(0x39af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 020B
        gbc.setState(0x158d, 0x78a9, 0xd8b0, 0x673f, 0xd844, 0xbad, 0x1, 0x0);
        gbc.writeMem(0x158d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x78a9, gbc.sp());
        EXPECT(0x158f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 020C
        gbc.setState(0xd91a, 0x8606, 0x9790, 0xd4c9, 0x86d3, 0xfcb1, 0x0, 0x1);
        gbc.writeMem(0xd91a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8606, gbc.sp());
        EXPECT(0xd91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91a));
        EXPECT(0x61, gbc.readMem(0xd91b));
        // CB 61 020D
        gbc.setState(0x296f, 0x6c16, 0x32d0, 0xf9b0, 0x2ad1, 0xc4ec, 0x0, 0x1);
        gbc.writeMem(0x296f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6c16, gbc.sp());
        EXPECT(0x2971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 020F
        gbc.setState(0x50cb, 0xc25a, 0x55f0, 0x809, 0xc259, 0xc0c2, 0x0, 0x0);
        gbc.writeMem(0x50cb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc25a, gbc.sp());
        EXPECT(0x50cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0210
        gbc.setState(0x5b36, 0x557e, 0xcba0, 0x7a37, 0xb848, 0xd6dd, 0x0, 0x1);
        gbc.writeMem(0x5b36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x557e, gbc.sp());
        EXPECT(0x5b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0211
        gbc.setState(0x8d49, 0xc3fe, 0x50, 0x460e, 0x891d, 0x1e44, 0x0, 0x0);
        gbc.writeMem(0x8d49, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc3fe, gbc.sp());
        EXPECT(0x8d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d49));
        EXPECT(0x61, gbc.readMem(0x8d4a));
        // CB 61 0212
        gbc.setState(0xee10, 0xee6d, 0xbf00, 0xcbe6, 0xbb2a, 0x7325, 0x0, 0x1);
        gbc.writeMem(0xee10, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xee6d, gbc.sp());
        EXPECT(0xee12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee10));
        EXPECT(0x61, gbc.readMem(0xee11));
        // CB 61 0213
        gbc.setState(0x2a7, 0x9c72, 0x490, 0x7176, 0x6626, 0xf552, 0x0, 0x1);
        gbc.writeMem(0x2a7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9c72, gbc.sp());
        EXPECT(0x2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0214
        gbc.setState(0x2a60, 0x5576, 0x6590, 0x21f0, 0xb265, 0x8f0c, 0x0, 0x0);
        gbc.writeMem(0x2a60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5576, gbc.sp());
        EXPECT(0x2a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0215
        gbc.setState(0x9105, 0x4abd, 0x3f0, 0xf4b6, 0x66ac, 0x2e07, 0x0, 0x1);
        gbc.writeMem(0x9105, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4abd, gbc.sp());
        EXPECT(0x9107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9105));
        EXPECT(0x61, gbc.readMem(0x9106));
        // CB 61 0216
        gbc.setState(0x69d4, 0x1ec8, 0xeb30, 0x14d, 0x74f6, 0xa986, 0x1, 0x0);
        gbc.writeMem(0x69d4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1ec8, gbc.sp());
        EXPECT(0x69d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0217
        gbc.setState(0x3ee0, 0x248e, 0xf020, 0x4480, 0x4017, 0x6dfe, 0x1, 0x1);
        gbc.writeMem(0x3ee0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x248e, gbc.sp());
        EXPECT(0x3ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0218
        gbc.setState(0x2e89, 0x624c, 0x7840, 0xa1b6, 0x2b45, 0x4c67, 0x1, 0x0);
        gbc.writeMem(0x2e89, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x624c, gbc.sp());
        EXPECT(0x2e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0219
        gbc.setState(0x15bc, 0xd89c, 0xf1c0, 0x66c3, 0xcf0e, 0xe393, 0x1, 0x0);
        gbc.writeMem(0x15bc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd89c, gbc.sp());
        EXPECT(0x15be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 021B
        gbc.setState(0x54e1, 0x29ad, 0x8420, 0xf2e8, 0x5fa3, 0xbab, 0x1, 0x1);
        gbc.writeMem(0x54e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x29ad, gbc.sp());
        EXPECT(0x54e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 021C
        gbc.setState(0x4c8c, 0xbf97, 0x38b0, 0x45f1, 0x2866, 0x518e, 0x1, 0x1);
        gbc.writeMem(0x4c8c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbf97, gbc.sp());
        EXPECT(0x4c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 021D
        gbc.setState(0xca0c, 0xe576, 0x72c0, 0xd5e3, 0x11fe, 0xd12e, 0x1, 0x1);
        gbc.writeMem(0xca0c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe576, gbc.sp());
        EXPECT(0xca0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0c));
        EXPECT(0x61, gbc.readMem(0xca0d));
        // CB 61 021E
        gbc.setState(0x7c2d, 0xfe05, 0x8b30, 0xeaba, 0x4a4c, 0xbac0, 0x0, 0x1);
        gbc.writeMem(0x7c2d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfe05, gbc.sp());
        EXPECT(0x7c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 021F
        gbc.setState(0xcaf4, 0xceb5, 0x40b0, 0x5f2a, 0xa3e4, 0xde3b, 0x1, 0x1);
        gbc.writeMem(0xcaf4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xceb5, gbc.sp());
        EXPECT(0xcaf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf4));
        EXPECT(0x61, gbc.readMem(0xcaf5));
        // CB 61 0220
        gbc.setState(0x4ab6, 0xb739, 0x4100, 0x2f9a, 0x9025, 0x7a65, 0x1, 0x0);
        gbc.writeMem(0x4ab6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb739, gbc.sp());
        EXPECT(0x4ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0221
        gbc.setState(0xee47, 0x7c82, 0x1490, 0x33b8, 0xf000, 0x48cc, 0x0, 0x1);
        gbc.writeMem(0xee47, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7c82, gbc.sp());
        EXPECT(0xee49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee47));
        EXPECT(0x61, gbc.readMem(0xee48));
        // CB 61 0222
        gbc.setState(0xcd1d, 0xbbea, 0x6f90, 0x2c3b, 0xb465, 0x7cf6, 0x0, 0x0);
        gbc.writeMem(0xcd1d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbbea, gbc.sp());
        EXPECT(0xcd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1d));
        EXPECT(0x61, gbc.readMem(0xcd1e));
        // CB 61 0223
        gbc.setState(0x235d, 0x44, 0x97f0, 0xa878, 0x4d8e, 0x9cd1, 0x1, 0x1);
        gbc.writeMem(0x235d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x44, gbc.sp());
        EXPECT(0x235f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0224
        gbc.setState(0xec53, 0xcd1e, 0x9420, 0x764b, 0x2895, 0x528a, 0x0, 0x1);
        gbc.writeMem(0xec53, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcd1e, gbc.sp());
        EXPECT(0xec55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec53));
        EXPECT(0x61, gbc.readMem(0xec54));
        // CB 61 0225
        gbc.setState(0xa298, 0xfa4, 0x81b0, 0xaaa7, 0xf597, 0x9d5f, 0x1, 0x0);
        gbc.writeMem(0xa298, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfa4, gbc.sp());
        EXPECT(0xa29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa298));
        EXPECT(0x61, gbc.readMem(0xa299));
        // CB 61 0226
        gbc.setState(0xd638, 0xca5d, 0x4e70, 0x639e, 0x83da, 0x5d46, 0x0, 0x1);
        gbc.writeMem(0xd638, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xca5d, gbc.sp());
        EXPECT(0xd63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd638));
        EXPECT(0x61, gbc.readMem(0xd639));
        // CB 61 0228
        gbc.setState(0x9af6, 0xecf2, 0xb0c0, 0x4702, 0x931d, 0xe7e3, 0x0, 0x0);
        gbc.writeMem(0x9af6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xecf2, gbc.sp());
        EXPECT(0x9af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af6));
        EXPECT(0x61, gbc.readMem(0x9af7));
        // CB 61 0229
        gbc.setState(0x801c, 0x59f6, 0x7000, 0x4519, 0x9085, 0x5df4, 0x0, 0x0);
        gbc.writeMem(0x801c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x59f6, gbc.sp());
        EXPECT(0x801e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801c));
        EXPECT(0x61, gbc.readMem(0x801d));
        // CB 61 022A
        gbc.setState(0x6308, 0xd35f, 0xa450, 0x88f3, 0xa2fe, 0xaa51, 0x1, 0x0);
        gbc.writeMem(0x6308, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd35f, gbc.sp());
        EXPECT(0x630a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 022C
        gbc.setState(0x4bf0, 0x71d5, 0x6850, 0x908e, 0xe9b6, 0xc932, 0x0, 0x1);
        gbc.writeMem(0x4bf0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x71d5, gbc.sp());
        EXPECT(0x4bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 022D
        gbc.setState(0xacaf, 0xc288, 0xb430, 0x639, 0x99af, 0xd208, 0x1, 0x0);
        gbc.writeMem(0xacaf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc288, gbc.sp());
        EXPECT(0xacb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacaf));
        EXPECT(0x61, gbc.readMem(0xacb0));
        // CB 61 022E
        gbc.setState(0xe219, 0x84d0, 0x4eb0, 0x9286, 0x3b60, 0xa4db, 0x1, 0x1);
        gbc.writeMem(0xe219, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x84d0, gbc.sp());
        EXPECT(0xe21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe219));
        EXPECT(0x61, gbc.readMem(0xe21a));
        // CB 61 022F
        gbc.setState(0xa1e1, 0x8db6, 0xafb0, 0x345d, 0xb76b, 0x96b9, 0x0, 0x1);
        gbc.writeMem(0xa1e1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8db6, gbc.sp());
        EXPECT(0xa1e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e1));
        EXPECT(0x61, gbc.readMem(0xa1e2));
        // CB 61 0230
        gbc.setState(0x4781, 0x2972, 0xf270, 0x36a, 0xa4b6, 0x292d, 0x0, 0x0);
        gbc.writeMem(0x4781, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2972, gbc.sp());
        EXPECT(0x4783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0231
        gbc.setState(0xa4ab, 0x8530, 0xacc0, 0x8765, 0x284, 0x3e7a, 0x0, 0x0);
        gbc.writeMem(0xa4ab, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8530, gbc.sp());
        EXPECT(0xa4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ab));
        EXPECT(0x61, gbc.readMem(0xa4ac));
        // CB 61 0232
        gbc.setState(0x5df9, 0x9604, 0xe2b0, 0x65a4, 0x19ed, 0x9cb, 0x1, 0x1);
        gbc.writeMem(0x5df9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9604, gbc.sp());
        EXPECT(0x5dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0234
        gbc.setState(0xd522, 0x81f7, 0xd6b0, 0x239e, 0xa260, 0x8b96, 0x1, 0x1);
        gbc.writeMem(0xd522, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x81f7, gbc.sp());
        EXPECT(0xd524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd522));
        EXPECT(0x61, gbc.readMem(0xd523));
        // CB 61 0235
        gbc.setState(0x7c36, 0xaee4, 0x9160, 0x2250, 0x20c, 0x2733, 0x1, 0x1);
        gbc.writeMem(0x7c36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xaee4, gbc.sp());
        EXPECT(0x7c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0236
        gbc.setState(0x2569, 0xa1d3, 0xa280, 0x2a75, 0x851b, 0x7109, 0x0, 0x0);
        gbc.writeMem(0x2569, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa1d3, gbc.sp());
        EXPECT(0x256b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0238
        gbc.setState(0x6637, 0xabca, 0x54e0, 0xb9dc, 0x3d8c, 0x756e, 0x0, 0x1);
        gbc.writeMem(0x6637, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xabca, gbc.sp());
        EXPECT(0x6639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0239
        gbc.setState(0xc371, 0xac88, 0x68d0, 0x3ade, 0x764f, 0x9a4a, 0x1, 0x0);
        gbc.writeMem(0xc371, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xac88, gbc.sp());
        EXPECT(0xc373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc371));
        EXPECT(0x61, gbc.readMem(0xc372));
        // CB 61 023A
        gbc.setState(0x7ff7, 0xbe5f, 0x920, 0x1726, 0xb9d1, 0xc127, 0x0, 0x0);
        gbc.writeMem(0x7ff7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbe5f, gbc.sp());
        EXPECT(0x7ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 023B
        gbc.setState(0x867b, 0x6861, 0xcf60, 0x7e29, 0xddc, 0x1dea, 0x1, 0x0);
        gbc.writeMem(0x867b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6861, gbc.sp());
        EXPECT(0x867d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x867b));
        EXPECT(0x61, gbc.readMem(0x867c));
        // CB 61 023C
        gbc.setState(0x2bc0, 0xefd2, 0x3860, 0xe641, 0x39b4, 0xd01a, 0x0, 0x0);
        gbc.writeMem(0x2bc0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xefd2, gbc.sp());
        EXPECT(0x2bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 023D
        gbc.setState(0x596b, 0x740b, 0x9ad0, 0xeb0a, 0x534c, 0x241f, 0x1, 0x0);
        gbc.writeMem(0x596b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x740b, gbc.sp());
        EXPECT(0x596d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 023E
        gbc.setState(0x918c, 0x97f7, 0x1720, 0x4bd1, 0xdc2f, 0x572b, 0x0, 0x0);
        gbc.writeMem(0x918c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x97f7, gbc.sp());
        EXPECT(0x918e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918c));
        EXPECT(0x61, gbc.readMem(0x918d));
        // CB 61 023F
        gbc.setState(0x8b20, 0xef1d, 0xab30, 0x8260, 0x7458, 0x758f, 0x0, 0x0);
        gbc.writeMem(0x8b20, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xef1d, gbc.sp());
        EXPECT(0x8b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b20));
        EXPECT(0x61, gbc.readMem(0x8b21));
        // CB 61 0241
        gbc.setState(0x94ca, 0xe708, 0x5540, 0x7792, 0x1360, 0x3363, 0x1, 0x1);
        gbc.writeMem(0x94ca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe708, gbc.sp());
        EXPECT(0x94cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ca));
        EXPECT(0x61, gbc.readMem(0x94cb));
        // CB 61 0242
        gbc.setState(0xd9fa, 0xff1d, 0x6290, 0xba63, 0xb4b8, 0xd55d, 0x0, 0x0);
        gbc.writeMem(0xd9fa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xff1d, gbc.sp());
        EXPECT(0xd9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fa));
        EXPECT(0x61, gbc.readMem(0xd9fb));
        // CB 61 0243
        gbc.setState(0x42aa, 0x1689, 0x9b10, 0x59a8, 0x886, 0xa95d, 0x1, 0x0);
        gbc.writeMem(0x42aa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1689, gbc.sp());
        EXPECT(0x42ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0244
        gbc.setState(0x1725, 0x60c7, 0x1540, 0x5622, 0x3c5c, 0x1e29, 0x1, 0x0);
        gbc.writeMem(0x1725, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x60c7, gbc.sp());
        EXPECT(0x1727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0247
        gbc.setState(0xd332, 0xd24d, 0x5d90, 0xf17b, 0x1aff, 0x2c22, 0x1, 0x1);
        gbc.writeMem(0xd332, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd24d, gbc.sp());
        EXPECT(0xd334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd332));
        EXPECT(0x61, gbc.readMem(0xd333));
        // CB 61 0248
        gbc.setState(0xd4d8, 0xa3ff, 0x8670, 0xe771, 0xc4c6, 0x7f99, 0x0, 0x0);
        gbc.writeMem(0xd4d8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa3ff, gbc.sp());
        EXPECT(0xd4da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d8));
        EXPECT(0x61, gbc.readMem(0xd4d9));
        // CB 61 0249
        gbc.setState(0x2b3b, 0x3035, 0xbbd0, 0xbbcc, 0xa7d9, 0x7337, 0x0, 0x1);
        gbc.writeMem(0x2b3b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3035, gbc.sp());
        EXPECT(0x2b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 024A
        gbc.setState(0x973d, 0x5342, 0x1fe0, 0x425, 0x859c, 0x43cc, 0x0, 0x0);
        gbc.writeMem(0x973d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5342, gbc.sp());
        EXPECT(0x973f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973d));
        EXPECT(0x61, gbc.readMem(0x973e));
        // CB 61 024B
        gbc.setState(0x5b40, 0xb2fb, 0xc050, 0xe2a5, 0x35d4, 0x7580, 0x1, 0x0);
        gbc.writeMem(0x5b40, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb2fb, gbc.sp());
        EXPECT(0x5b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 024C
        gbc.setState(0xbb04, 0xd43c, 0x4f0, 0x9d08, 0xb6e9, 0x6bf4, 0x1, 0x0);
        gbc.writeMem(0xbb04, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd43c, gbc.sp());
        EXPECT(0xbb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb04));
        EXPECT(0x61, gbc.readMem(0xbb05));
        // CB 61 024D
        gbc.setState(0xea72, 0xba0b, 0xf430, 0xd7e0, 0x9014, 0x925e, 0x1, 0x0);
        gbc.writeMem(0xea72, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xba0b, gbc.sp());
        EXPECT(0xea74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea72));
        EXPECT(0x61, gbc.readMem(0xea73));
        // CB 61 024E
        gbc.setState(0x84de, 0xf30f, 0x5b80, 0xe94d, 0x2a73, 0xe10f, 0x1, 0x1);
        gbc.writeMem(0x84de, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf30f, gbc.sp());
        EXPECT(0x84e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84de));
        EXPECT(0x61, gbc.readMem(0x84df));
        // CB 61 024F
        gbc.setState(0xbfab, 0x1eae, 0x1210, 0x4fac, 0x36aa, 0xf273, 0x0, 0x1);
        gbc.writeMem(0xbfab, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1eae, gbc.sp());
        EXPECT(0xbfad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfab));
        EXPECT(0x61, gbc.readMem(0xbfac));
        // CB 61 0250
        gbc.setState(0x323, 0x885, 0x5330, 0xcdbf, 0xc2d8, 0x1ea3, 0x1, 0x1);
        gbc.writeMem(0x323, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x885, gbc.sp());
        EXPECT(0x325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0252
        gbc.setState(0x3a1d, 0x85f5, 0x3a30, 0xe38b, 0x9435, 0xb8ac, 0x0, 0x0);
        gbc.writeMem(0x3a1d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x85f5, gbc.sp());
        EXPECT(0x3a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0253
        gbc.setState(0x7b59, 0xbc2f, 0x8000, 0x3ea9, 0x34a5, 0x76de, 0x0, 0x0);
        gbc.writeMem(0x7b59, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbc2f, gbc.sp());
        EXPECT(0x7b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0255
        gbc.setState(0x4759, 0x1278, 0xbd20, 0x4702, 0xc821, 0x4955, 0x0, 0x0);
        gbc.writeMem(0x4759, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1278, gbc.sp());
        EXPECT(0x475b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0256
        gbc.setState(0xcbde, 0x5bbf, 0xaf10, 0xd78d, 0x8f80, 0xca66, 0x1, 0x0);
        gbc.writeMem(0xcbde, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5bbf, gbc.sp());
        EXPECT(0xcbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbde));
        EXPECT(0x61, gbc.readMem(0xcbdf));
        // CB 61 0257
        gbc.setState(0xd79e, 0x7f00, 0xa840, 0x8043, 0x3177, 0x6d62, 0x0, 0x0);
        gbc.writeMem(0xd79e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7f00, gbc.sp());
        EXPECT(0xd7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd79e));
        EXPECT(0x61, gbc.readMem(0xd79f));
        // CB 61 0258
        gbc.setState(0x1cc5, 0x7026, 0x320, 0x3367, 0x60eb, 0xa09a, 0x0, 0x0);
        gbc.writeMem(0x1cc5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7026, gbc.sp());
        EXPECT(0x1cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0259
        gbc.setState(0x9eea, 0x6d33, 0xa30, 0xe8d6, 0xc3b, 0x3262, 0x1, 0x1);
        gbc.writeMem(0x9eea, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6d33, gbc.sp());
        EXPECT(0x9eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eea));
        EXPECT(0x61, gbc.readMem(0x9eeb));
        // CB 61 025A
        gbc.setState(0x9378, 0x6561, 0x3b30, 0x9605, 0xc1aa, 0xc1d, 0x1, 0x0);
        gbc.writeMem(0x9378, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6561, gbc.sp());
        EXPECT(0x937a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9378));
        EXPECT(0x61, gbc.readMem(0x9379));
        // CB 61 025B
        gbc.setState(0xc477, 0xa05a, 0xa060, 0xc349, 0x4168, 0x735a, 0x0, 0x0);
        gbc.writeMem(0xc477, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa05a, gbc.sp());
        EXPECT(0xc479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc477));
        EXPECT(0x61, gbc.readMem(0xc478));
        // CB 61 025C
        gbc.setState(0xc85b, 0x38f1, 0xfbc0, 0x2b3a, 0x9fa7, 0x2461, 0x0, 0x0);
        gbc.writeMem(0xc85b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x38f1, gbc.sp());
        EXPECT(0xc85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85b));
        EXPECT(0x61, gbc.readMem(0xc85c));
        // CB 61 025D
        gbc.setState(0xcafd, 0x4971, 0x74a0, 0xb972, 0x1b95, 0x3b54, 0x0, 0x0);
        gbc.writeMem(0xcafd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4971, gbc.sp());
        EXPECT(0xcaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcafd));
        EXPECT(0x61, gbc.readMem(0xcafe));
        // CB 61 025F
        gbc.setState(0xa242, 0xc55, 0x6a0, 0x3dd0, 0x7bf8, 0x8d5, 0x0, 0x0);
        gbc.writeMem(0xa242, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc55, gbc.sp());
        EXPECT(0xa244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa242));
        EXPECT(0x61, gbc.readMem(0xa243));
        // CB 61 0261
        gbc.setState(0x4571, 0xa60, 0xcb60, 0x7348, 0x4c58, 0x5084, 0x1, 0x0);
        gbc.writeMem(0x4571, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa60, gbc.sp());
        EXPECT(0x4573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0262
        gbc.setState(0xae74, 0x4e0a, 0x9b60, 0x4269, 0xe44e, 0xbf82, 0x0, 0x0);
        gbc.writeMem(0xae74, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4e0a, gbc.sp());
        EXPECT(0xae76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae74));
        EXPECT(0x61, gbc.readMem(0xae75));
        // CB 61 0263
        gbc.setState(0x8cc6, 0xea7c, 0x2380, 0xc37c, 0xddd0, 0x301d, 0x0, 0x1);
        gbc.writeMem(0x8cc6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xea7c, gbc.sp());
        EXPECT(0x8cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc6));
        EXPECT(0x61, gbc.readMem(0x8cc7));
        // CB 61 0264
        gbc.setState(0xeff7, 0x7253, 0xe6a0, 0xa473, 0x78a5, 0x27b0, 0x0, 0x0);
        gbc.writeMem(0xeff7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7253, gbc.sp());
        EXPECT(0xeff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff7));
        EXPECT(0x61, gbc.readMem(0xeff8));
        // CB 61 0265
        gbc.setState(0xcb31, 0xd42d, 0x4e10, 0xa468, 0xc800, 0xe9c0, 0x0, 0x1);
        gbc.writeMem(0xcb31, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd42d, gbc.sp());
        EXPECT(0xcb33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb31));
        EXPECT(0x61, gbc.readMem(0xcb32));
        // CB 61 0266
        gbc.setState(0x652e, 0xa217, 0xb8e0, 0x4412, 0xbd2, 0x5dfa, 0x1, 0x0);
        gbc.writeMem(0x652e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa217, gbc.sp());
        EXPECT(0x6530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0267
        gbc.setState(0xe199, 0x8b00, 0xa250, 0x721c, 0x4a98, 0x1f62, 0x0, 0x1);
        gbc.writeMem(0xe199, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8b00, gbc.sp());
        EXPECT(0xe19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe199));
        EXPECT(0x61, gbc.readMem(0xe19a));
        // CB 61 0268
        gbc.setState(0xca86, 0x476e, 0xa790, 0xb55d, 0x922c, 0x493, 0x1, 0x1);
        gbc.writeMem(0xca86, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x476e, gbc.sp());
        EXPECT(0xca88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca86));
        EXPECT(0x61, gbc.readMem(0xca87));
        // CB 61 0269
        gbc.setState(0x2c3b, 0x8608, 0x69f0, 0xc4a2, 0x3203, 0xd9fb, 0x1, 0x1);
        gbc.writeMem(0x2c3b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8608, gbc.sp());
        EXPECT(0x2c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 026A
        gbc.setState(0x5c7f, 0x4532, 0x8d80, 0x14a6, 0xcd5d, 0x4631, 0x0, 0x0);
        gbc.writeMem(0x5c7f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4532, gbc.sp());
        EXPECT(0x5c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 026B
        gbc.setState(0x6bf2, 0x22b, 0x2a80, 0x15b4, 0x6b33, 0xd8db, 0x1, 0x1);
        gbc.writeMem(0x6bf2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x22b, gbc.sp());
        EXPECT(0x6bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 026D
        gbc.setState(0xbb46, 0xaf9d, 0xf60, 0x299a, 0xb59d, 0x120a, 0x0, 0x0);
        gbc.writeMem(0xbb46, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xaf9d, gbc.sp());
        EXPECT(0xbb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb46));
        EXPECT(0x61, gbc.readMem(0xbb47));
        // CB 61 026E
        gbc.setState(0x6599, 0xad4e, 0xd120, 0x2ba9, 0x7bd5, 0x8241, 0x0, 0x0);
        gbc.writeMem(0x6599, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xad4e, gbc.sp());
        EXPECT(0x659b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 026F
        gbc.setState(0x1ca, 0xb1e8, 0xe510, 0x57e0, 0x6c0a, 0x8c03, 0x0, 0x1);
        gbc.writeMem(0x1ca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb1e8, gbc.sp());
        EXPECT(0x1cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0270
        gbc.setState(0x5b0f, 0x9f9, 0xbdb0, 0x873d, 0xc668, 0x6ca6, 0x0, 0x1);
        gbc.writeMem(0x5b0f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9f9, gbc.sp());
        EXPECT(0x5b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0271
        gbc.setState(0xa8f2, 0x9175, 0x9e10, 0x4b6, 0x2c2a, 0x8fb4, 0x0, 0x1);
        gbc.writeMem(0xa8f2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9175, gbc.sp());
        EXPECT(0xa8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f2));
        EXPECT(0x61, gbc.readMem(0xa8f3));
        // CB 61 0272
        gbc.setState(0x2fdc, 0x717a, 0xf3d0, 0x8770, 0x88f, 0x3912, 0x1, 0x1);
        gbc.writeMem(0x2fdc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x717a, gbc.sp());
        EXPECT(0x2fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0273
        gbc.setState(0x5b68, 0xa126, 0x1230, 0xa15e, 0x2336, 0x7a5a, 0x1, 0x1);
        gbc.writeMem(0x5b68, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa126, gbc.sp());
        EXPECT(0x5b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0274
        gbc.setState(0x9719, 0x479, 0x1f40, 0xcd09, 0x5e39, 0xc821, 0x0, 0x1);
        gbc.writeMem(0x9719, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x479, gbc.sp());
        EXPECT(0x971b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9719));
        EXPECT(0x61, gbc.readMem(0x971a));
        // CB 61 0275
        gbc.setState(0x4aba, 0x6fd4, 0xe520, 0x35c6, 0x2ff, 0x4f07, 0x0, 0x1);
        gbc.writeMem(0x4aba, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6fd4, gbc.sp());
        EXPECT(0x4abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0276
        gbc.setState(0x3f99, 0x23f1, 0xe690, 0x5b9, 0x3c3, 0x2d8f, 0x1, 0x0);
        gbc.writeMem(0x3f99, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x23f1, gbc.sp());
        EXPECT(0x3f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0277
        gbc.setState(0x4775, 0x5eff, 0xc60, 0xefff, 0x52ce, 0x20f6, 0x0, 0x1);
        gbc.writeMem(0x4775, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5eff, gbc.sp());
        EXPECT(0x4777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0278
        gbc.setState(0x4c03, 0x7991, 0x43e0, 0xac86, 0x5d55, 0x1d25, 0x0, 0x0);
        gbc.writeMem(0x4c03, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7991, gbc.sp());
        EXPECT(0x4c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0279
        gbc.setState(0x4001, 0x5c3a, 0x3990, 0x504, 0x1e08, 0xd09b, 0x0, 0x1);
        gbc.writeMem(0x4001, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5c3a, gbc.sp());
        EXPECT(0x4003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 027A
        gbc.setState(0x769a, 0x9b96, 0x5c30, 0x6de2, 0x4f07, 0xbcc2, 0x1, 0x1);
        gbc.writeMem(0x769a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9b96, gbc.sp());
        EXPECT(0x769c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 027B
        gbc.setState(0x4216, 0x35fc, 0xe560, 0x4149, 0x7ce9, 0x538b, 0x0, 0x0);
        gbc.writeMem(0x4216, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x35fc, gbc.sp());
        EXPECT(0x4218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 027C
        gbc.setState(0x140b, 0xae6, 0xecd0, 0x397b, 0x95dc, 0x1a95, 0x1, 0x0);
        gbc.writeMem(0x140b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xae6, gbc.sp());
        EXPECT(0x140d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 027D
        gbc.setState(0x758e, 0x5d24, 0x4d0, 0x6d43, 0xdf13, 0x8e09, 0x1, 0x1);
        gbc.writeMem(0x758e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5d24, gbc.sp());
        EXPECT(0x7590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 027E
        gbc.setState(0x4a29, 0x720e, 0x4b50, 0xd5fc, 0x9b9e, 0x3a70, 0x1, 0x1);
        gbc.writeMem(0x4a29, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x720e, gbc.sp());
        EXPECT(0x4a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 027F
        gbc.setState(0x5e95, 0xb5b4, 0xee40, 0x3a8e, 0x6f0f, 0xf517, 0x1, 0x0);
        gbc.writeMem(0x5e95, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb5b4, gbc.sp());
        EXPECT(0x5e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0280
        gbc.setState(0xd449, 0x3bcf, 0xe720, 0xf834, 0xa5c2, 0xd444, 0x1, 0x1);
        gbc.writeMem(0xd449, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3bcf, gbc.sp());
        EXPECT(0xd44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd449));
        EXPECT(0x61, gbc.readMem(0xd44a));
        // CB 61 0281
        gbc.setState(0x23b8, 0x1e77, 0x79b0, 0xdefd, 0x882, 0xb0d7, 0x0, 0x1);
        gbc.writeMem(0x23b8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1e77, gbc.sp());
        EXPECT(0x23ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0283
        gbc.setState(0x4957, 0xae29, 0x7690, 0x7143, 0xf9e9, 0xa003, 0x1, 0x0);
        gbc.writeMem(0x4957, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xae29, gbc.sp());
        EXPECT(0x4959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0284
        gbc.setState(0xfcb, 0x7402, 0xf640, 0x237f, 0x85d0, 0x360c, 0x1, 0x0);
        gbc.writeMem(0xfcb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7402, gbc.sp());
        EXPECT(0xfcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0286
        gbc.setState(0xdfdf, 0x4fc8, 0xbf90, 0x9769, 0xbb0f, 0xe987, 0x0, 0x1);
        gbc.writeMem(0xdfdf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4fc8, gbc.sp());
        EXPECT(0xdfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfdf));
        EXPECT(0x61, gbc.readMem(0xdfe0));
        // CB 61 0287
        gbc.setState(0x9459, 0x8a98, 0xd230, 0xf25d, 0x2bac, 0xe91d, 0x0, 0x1);
        gbc.writeMem(0x9459, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8a98, gbc.sp());
        EXPECT(0x945b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9459));
        EXPECT(0x61, gbc.readMem(0x945a));
        // CB 61 0288
        gbc.setState(0x6780, 0x1852, 0xd790, 0x8d9c, 0xb15e, 0xee5f, 0x1, 0x1);
        gbc.writeMem(0x6780, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1852, gbc.sp());
        EXPECT(0x6782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0289
        gbc.setState(0x2aa3, 0xd137, 0x8080, 0x95a2, 0xf095, 0x35c9, 0x1, 0x0);
        gbc.writeMem(0x2aa3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd137, gbc.sp());
        EXPECT(0x2aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 028A
        gbc.setState(0x3eaf, 0x9595, 0x8510, 0xa0b5, 0xfc9f, 0x6b21, 0x1, 0x0);
        gbc.writeMem(0x3eaf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9595, gbc.sp());
        EXPECT(0x3eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 028B
        gbc.setState(0x66be, 0xf652, 0x21c0, 0x631a, 0x9653, 0xe167, 0x1, 0x1);
        gbc.writeMem(0x66be, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf652, gbc.sp());
        EXPECT(0x66c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 028C
        gbc.setState(0x500b, 0xd6b9, 0x51a0, 0x6183, 0xa2e2, 0xb1d, 0x0, 0x0);
        gbc.writeMem(0x500b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd6b9, gbc.sp());
        EXPECT(0x500d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 028D
        gbc.setState(0x4a78, 0xd18a, 0xfd90, 0x88e, 0x9ba5, 0x7934, 0x0, 0x0);
        gbc.writeMem(0x4a78, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd18a, gbc.sp());
        EXPECT(0x4a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 028E
        gbc.setState(0xb43c, 0xcb96, 0x4800, 0x1148, 0xe82c, 0x98c7, 0x0, 0x1);
        gbc.writeMem(0xb43c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcb96, gbc.sp());
        EXPECT(0xb43e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb43c));
        EXPECT(0x61, gbc.readMem(0xb43d));
        // CB 61 028F
        gbc.setState(0xe1ba, 0xecb5, 0xa2d0, 0x1d5f, 0x1a4c, 0x4add, 0x0, 0x1);
        gbc.writeMem(0xe1ba, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xecb5, gbc.sp());
        EXPECT(0xe1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ba));
        EXPECT(0x61, gbc.readMem(0xe1bb));
        // CB 61 0290
        gbc.setState(0xa141, 0x9739, 0x50, 0x2960, 0x299c, 0x37c1, 0x0, 0x1);
        gbc.writeMem(0xa141, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9739, gbc.sp());
        EXPECT(0xa143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa141));
        EXPECT(0x61, gbc.readMem(0xa142));
        // CB 61 0291
        gbc.setState(0xb15f, 0x58dd, 0xfcb0, 0x4cd, 0x24e5, 0x9fd3, 0x1, 0x1);
        gbc.writeMem(0xb15f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x58dd, gbc.sp());
        EXPECT(0xb161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb15f));
        EXPECT(0x61, gbc.readMem(0xb160));
        // CB 61 0292
        gbc.setState(0xa4b5, 0x7313, 0xa0, 0x779c, 0x7a2, 0x360f, 0x1, 0x1);
        gbc.writeMem(0xa4b5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7313, gbc.sp());
        EXPECT(0xa4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b5));
        EXPECT(0x61, gbc.readMem(0xa4b6));
        // CB 61 0293
        gbc.setState(0x3ed6, 0x7900, 0xd3e0, 0x8601, 0x9dd7, 0xab96, 0x1, 0x1);
        gbc.writeMem(0x3ed6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7900, gbc.sp());
        EXPECT(0x3ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0294
        gbc.setState(0xec3, 0xc080, 0xc3f0, 0xe7dd, 0xdc0f, 0x133a, 0x1, 0x0);
        gbc.writeMem(0xec3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc080, gbc.sp());
        EXPECT(0xec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0295
        gbc.setState(0xaa60, 0xc410, 0xeaf0, 0xc03c, 0xfe6c, 0x7463, 0x0, 0x0);
        gbc.writeMem(0xaa60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc410, gbc.sp());
        EXPECT(0xaa62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa60));
        EXPECT(0x61, gbc.readMem(0xaa61));
        // CB 61 0296
        gbc.setState(0x286a, 0x724c, 0x5510, 0x8bd8, 0x9ca3, 0x4a09, 0x1, 0x0);
        gbc.writeMem(0x286a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x724c, gbc.sp());
        EXPECT(0x286c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0297
        gbc.setState(0x62e7, 0xe91a, 0x3d00, 0xb3a, 0x6427, 0x91bb, 0x1, 0x1);
        gbc.writeMem(0x62e7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe91a, gbc.sp());
        EXPECT(0x62e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0299
        gbc.setState(0x8f2c, 0x5069, 0xc820, 0x1da9, 0x85d2, 0x324b, 0x1, 0x0);
        gbc.writeMem(0x8f2c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5069, gbc.sp());
        EXPECT(0x8f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2c));
        EXPECT(0x61, gbc.readMem(0x8f2d));
        // CB 61 029A
        gbc.setState(0x6de4, 0x4dbe, 0xfa30, 0x86af, 0xde2f, 0xeb10, 0x0, 0x1);
        gbc.writeMem(0x6de4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4dbe, gbc.sp());
        EXPECT(0x6de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 029B
        gbc.setState(0x3388, 0xb111, 0xe610, 0x5471, 0x56a2, 0x27a3, 0x0, 0x0);
        gbc.writeMem(0x3388, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb111, gbc.sp());
        EXPECT(0x338a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 029C
        gbc.setState(0x243, 0x366c, 0x8240, 0xff88, 0xb133, 0x2e1b, 0x0, 0x1);
        gbc.writeMem(0x243, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x366c, gbc.sp());
        EXPECT(0x245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 029E
        gbc.setState(0x2c0a, 0x754d, 0x6390, 0x1e7a, 0x689, 0x9311, 0x1, 0x0);
        gbc.writeMem(0x2c0a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x754d, gbc.sp());
        EXPECT(0x2c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 029F
        gbc.setState(0xafe1, 0x3ed2, 0xe00, 0x1b1b, 0xf5b1, 0xee07, 0x1, 0x1);
        gbc.writeMem(0xafe1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3ed2, gbc.sp());
        EXPECT(0xafe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe1));
        EXPECT(0x61, gbc.readMem(0xafe2));
        // CB 61 02A0
        gbc.setState(0x4808, 0xde6e, 0xbc0, 0xa43a, 0xbddd, 0x94d4, 0x1, 0x1);
        gbc.writeMem(0x4808, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xde6e, gbc.sp());
        EXPECT(0x480a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02A1
        gbc.setState(0x8d8d, 0xc926, 0x9c50, 0x8deb, 0xd572, 0xb2c1, 0x1, 0x1);
        gbc.writeMem(0x8d8d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc926, gbc.sp());
        EXPECT(0x8d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8d));
        EXPECT(0x61, gbc.readMem(0x8d8e));
        // CB 61 02A2
        gbc.setState(0x2732, 0xd65c, 0x40e0, 0x62d2, 0xfac, 0xae2e, 0x0, 0x0);
        gbc.writeMem(0x2732, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd65c, gbc.sp());
        EXPECT(0x2734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02A3
        gbc.setState(0x821c, 0x12ff, 0x9650, 0x8dd, 0x8b80, 0xa8d9, 0x1, 0x1);
        gbc.writeMem(0x821c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x12ff, gbc.sp());
        EXPECT(0x821e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821c));
        EXPECT(0x61, gbc.readMem(0x821d));
        // CB 61 02A4
        gbc.setState(0x47b8, 0x3d10, 0xef40, 0xedcb, 0xb485, 0x7a37, 0x0, 0x1);
        gbc.writeMem(0x47b8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3d10, gbc.sp());
        EXPECT(0x47ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02A5
        gbc.setState(0x816c, 0x61c6, 0xfae0, 0x2d02, 0x8431, 0xef15, 0x0, 0x0);
        gbc.writeMem(0x816c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x61c6, gbc.sp());
        EXPECT(0x816e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816c));
        EXPECT(0x61, gbc.readMem(0x816d));
        // CB 61 02A6
        gbc.setState(0x7909, 0x6ec5, 0x8c10, 0x1f5f, 0x7906, 0x5428, 0x1, 0x1);
        gbc.writeMem(0x7909, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6ec5, gbc.sp());
        EXPECT(0x790b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02A8
        gbc.setState(0x456b, 0x4ea2, 0x63f0, 0x2aa1, 0x116c, 0xc883, 0x1, 0x0);
        gbc.writeMem(0x456b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4ea2, gbc.sp());
        EXPECT(0x456d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02A9
        gbc.setState(0x7b87, 0xbd6a, 0x5fc0, 0x3535, 0xb243, 0xc709, 0x0, 0x0);
        gbc.writeMem(0x7b87, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbd6a, gbc.sp());
        EXPECT(0x7b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02AA
        gbc.setState(0x1704, 0x1113, 0x7510, 0xdaa1, 0xd02a, 0x17ce, 0x0, 0x1);
        gbc.writeMem(0x1704, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1113, gbc.sp());
        EXPECT(0x1706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02AB
        gbc.setState(0x5334, 0xe3e0, 0xd0d0, 0xe309, 0x833c, 0x84db, 0x1, 0x1);
        gbc.writeMem(0x5334, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe3e0, gbc.sp());
        EXPECT(0x5336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02AC
        gbc.setState(0x1283, 0x3261, 0xb4a0, 0x4ce0, 0x56f3, 0x91c1, 0x0, 0x0);
        gbc.writeMem(0x1283, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3261, gbc.sp());
        EXPECT(0x1285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02AD
        gbc.setState(0x7c8b, 0x5f0c, 0x3dd0, 0x333e, 0x9988, 0x3b9b, 0x0, 0x1);
        gbc.writeMem(0x7c8b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5f0c, gbc.sp());
        EXPECT(0x7c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02AE
        gbc.setState(0x8c31, 0x4d20, 0xd790, 0x27e9, 0xb0a4, 0x47d3, 0x0, 0x0);
        gbc.writeMem(0x8c31, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4d20, gbc.sp());
        EXPECT(0x8c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c31));
        EXPECT(0x61, gbc.readMem(0x8c32));
        // CB 61 02AF
        gbc.setState(0x76f9, 0x7074, 0x6be0, 0x543, 0xa61b, 0xc5c9, 0x0, 0x1);
        gbc.writeMem(0x76f9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7074, gbc.sp());
        EXPECT(0x76fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02B0
        gbc.setState(0x9677, 0xb5e1, 0x7900, 0xd997, 0xc1c9, 0xe800, 0x1, 0x1);
        gbc.writeMem(0x9677, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb5e1, gbc.sp());
        EXPECT(0x9679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9677));
        EXPECT(0x61, gbc.readMem(0x9678));
        // CB 61 02B2
        gbc.setState(0x4b9a, 0x9ec7, 0xac80, 0xcd5a, 0xb82a, 0xe1e9, 0x1, 0x1);
        gbc.writeMem(0x4b9a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9ec7, gbc.sp());
        EXPECT(0x4b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02B3
        gbc.setState(0x6c07, 0x51f9, 0xc670, 0x8cd, 0x7a0e, 0x1f67, 0x1, 0x0);
        gbc.writeMem(0x6c07, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x51f9, gbc.sp());
        EXPECT(0x6c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02B6
        gbc.setState(0x6f75, 0xbd77, 0x54f0, 0xee7b, 0x8755, 0x1c73, 0x1, 0x1);
        gbc.writeMem(0x6f75, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbd77, gbc.sp());
        EXPECT(0x6f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02B7
        gbc.setState(0x694b, 0x194f, 0xbe70, 0xc2f7, 0x479, 0xa544, 0x0, 0x1);
        gbc.writeMem(0x694b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x194f, gbc.sp());
        EXPECT(0x694d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02B8
        gbc.setState(0x2341, 0xc697, 0x9e90, 0xf576, 0x55fa, 0x3437, 0x1, 0x1);
        gbc.writeMem(0x2341, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc697, gbc.sp());
        EXPECT(0x2343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02B9
        gbc.setState(0x2222, 0x1710, 0x6fe0, 0xcf45, 0xdf9c, 0x37cd, 0x1, 0x1);
        gbc.writeMem(0x2222, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1710, gbc.sp());
        EXPECT(0x2224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02BA
        gbc.setState(0x85fd, 0xdeaa, 0xfde0, 0x5280, 0x7c92, 0xf84e, 0x0, 0x1);
        gbc.writeMem(0x85fd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdeaa, gbc.sp());
        EXPECT(0x85ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fd));
        EXPECT(0x61, gbc.readMem(0x85fe));
        // CB 61 02BB
        gbc.setState(0x42dc, 0x3a8f, 0x770, 0x7902, 0x95e9, 0x68c6, 0x1, 0x0);
        gbc.writeMem(0x42dc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3a8f, gbc.sp());
        EXPECT(0x42de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02BD
        gbc.setState(0xc16c, 0xcdd, 0x9120, 0x6869, 0xe464, 0x9dd4, 0x1, 0x1);
        gbc.writeMem(0xc16c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xcdd, gbc.sp());
        EXPECT(0xc16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc16c));
        EXPECT(0x61, gbc.readMem(0xc16d));
        // CB 61 02BE
        gbc.setState(0xcbfe, 0x577a, 0xff90, 0xd3b0, 0xf83a, 0xb7e2, 0x1, 0x1);
        gbc.writeMem(0xcbfe, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x577a, gbc.sp());
        EXPECT(0xcc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbfe));
        EXPECT(0x61, gbc.readMem(0xcbff));
        // CB 61 02BF
        gbc.setState(0x151, 0x6d03, 0xaee0, 0xc523, 0x7c7b, 0xcc44, 0x0, 0x0);
        gbc.writeMem(0x151, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6d03, gbc.sp());
        EXPECT(0x153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02C0
        gbc.setState(0x52ea, 0x2b48, 0x30f0, 0xf7c7, 0x73e1, 0x9475, 0x1, 0x1);
        gbc.writeMem(0x52ea, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2b48, gbc.sp());
        EXPECT(0x52ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02C1
        gbc.setState(0xb067, 0xd5b2, 0x7610, 0xc678, 0xcd2a, 0x21b6, 0x0, 0x0);
        gbc.writeMem(0xb067, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd5b2, gbc.sp());
        EXPECT(0xb069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb067));
        EXPECT(0x61, gbc.readMem(0xb068));
        // CB 61 02C2
        gbc.setState(0x741c, 0x95a2, 0xbff0, 0x5d23, 0x422c, 0x8065, 0x1, 0x1);
        gbc.writeMem(0x741c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x95a2, gbc.sp());
        EXPECT(0x741e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02C5
        gbc.setState(0x3ebf, 0x39e2, 0xbe0, 0x5723, 0x1f00, 0x1845, 0x1, 0x1);
        gbc.writeMem(0x3ebf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x39e2, gbc.sp());
        EXPECT(0x3ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02C6
        gbc.setState(0xaaf6, 0x26d8, 0x2540, 0xb137, 0x3ea1, 0xfdcc, 0x0, 0x1);
        gbc.writeMem(0xaaf6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x26d8, gbc.sp());
        EXPECT(0xaaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf6));
        EXPECT(0x61, gbc.readMem(0xaaf7));
        // CB 61 02C7
        gbc.setState(0x9f24, 0x6d54, 0x11f0, 0xd540, 0xfcfa, 0xdf83, 0x0, 0x1);
        gbc.writeMem(0x9f24, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6d54, gbc.sp());
        EXPECT(0x9f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f24));
        EXPECT(0x61, gbc.readMem(0x9f25));
        // CB 61 02C8
        gbc.setState(0x4c85, 0xc4a0, 0x6e00, 0x7f58, 0x71cc, 0x9d62, 0x0, 0x1);
        gbc.writeMem(0x4c85, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc4a0, gbc.sp());
        EXPECT(0x4c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02C9
        gbc.setState(0xd8d1, 0x3e47, 0x4a90, 0x1264, 0x1016, 0xa5c9, 0x1, 0x0);
        gbc.writeMem(0xd8d1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3e47, gbc.sp());
        EXPECT(0xd8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d1));
        EXPECT(0x61, gbc.readMem(0xd8d2));
        // CB 61 02CB
        gbc.setState(0x3c62, 0x8d37, 0x10d0, 0xdc0c, 0xace6, 0xd072, 0x0, 0x0);
        gbc.writeMem(0x3c62, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8d37, gbc.sp());
        EXPECT(0x3c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02CC
        gbc.setState(0x494d, 0x33e7, 0xa40, 0xe26b, 0x5cbc, 0xd7ff, 0x0, 0x0);
        gbc.writeMem(0x494d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x33e7, gbc.sp());
        EXPECT(0x494f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02CD
        gbc.setState(0xb440, 0xf381, 0xb9e0, 0xb7df, 0xe10c, 0x31c, 0x0, 0x0);
        gbc.writeMem(0xb440, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf381, gbc.sp());
        EXPECT(0xb442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb440));
        EXPECT(0x61, gbc.readMem(0xb441));
        // CB 61 02CE
        gbc.setState(0x6482, 0xdf7d, 0xb2e0, 0xfa6d, 0x4bdb, 0x7f4, 0x0, 0x1);
        gbc.writeMem(0x6482, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdf7d, gbc.sp());
        EXPECT(0x6484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02CF
        gbc.setState(0xe497, 0x9645, 0x3720, 0x6a28, 0xac9b, 0x68e7, 0x0, 0x1);
        gbc.writeMem(0xe497, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9645, gbc.sp());
        EXPECT(0xe499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe497));
        EXPECT(0x61, gbc.readMem(0xe498));
        // CB 61 02D0
        gbc.setState(0xe4ae, 0xa57b, 0x8ff0, 0xf88d, 0x740f, 0x1721, 0x1, 0x1);
        gbc.writeMem(0xe4ae, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa57b, gbc.sp());
        EXPECT(0xe4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ae));
        EXPECT(0x61, gbc.readMem(0xe4af));
        // CB 61 02D1
        gbc.setState(0xed7d, 0x3fc1, 0x3fb0, 0xa094, 0xcacd, 0x917, 0x1, 0x1);
        gbc.writeMem(0xed7d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3fc1, gbc.sp());
        EXPECT(0xed7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7d));
        EXPECT(0x61, gbc.readMem(0xed7e));
        // CB 61 02D2
        gbc.setState(0xb2bf, 0xd114, 0x6420, 0x595c, 0xaa94, 0x11da, 0x1, 0x1);
        gbc.writeMem(0xb2bf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd114, gbc.sp());
        EXPECT(0xb2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2bf));
        EXPECT(0x61, gbc.readMem(0xb2c0));
        // CB 61 02D3
        gbc.setState(0x6d28, 0xd58c, 0x98f0, 0xb532, 0x9c59, 0x5c7, 0x0, 0x1);
        gbc.writeMem(0x6d28, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd58c, gbc.sp());
        EXPECT(0x6d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02D5
        gbc.setState(0xd7e0, 0x1f22, 0xb840, 0x1ddf, 0xa2e5, 0xb66c, 0x1, 0x0);
        gbc.writeMem(0xd7e0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1f22, gbc.sp());
        EXPECT(0xd7e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e0));
        EXPECT(0x61, gbc.readMem(0xd7e1));
        // CB 61 02D6
        gbc.setState(0x848f, 0x5134, 0x3900, 0xba95, 0x6b17, 0x729e, 0x1, 0x0);
        gbc.writeMem(0x848f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5134, gbc.sp());
        EXPECT(0x8491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848f));
        EXPECT(0x61, gbc.readMem(0x8490));
        // CB 61 02D7
        gbc.setState(0x4f68, 0x6cd5, 0x1730, 0xc88a, 0x13a3, 0x1f43, 0x1, 0x0);
        gbc.writeMem(0x4f68, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6cd5, gbc.sp());
        EXPECT(0x4f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02D8
        gbc.setState(0x1895, 0x737, 0xdeb0, 0x9514, 0xefed, 0xa66a, 0x1, 0x0);
        gbc.writeMem(0x1895, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x737, gbc.sp());
        EXPECT(0x1897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02D9
        gbc.setState(0x7d4d, 0xedb7, 0x9550, 0xbee4, 0x8938, 0x66b2, 0x1, 0x0);
        gbc.writeMem(0x7d4d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xedb7, gbc.sp());
        EXPECT(0x7d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02DA
        gbc.setState(0x6ff5, 0x7638, 0xb6e0, 0x3c52, 0x9c9, 0x32f4, 0x1, 0x0);
        gbc.writeMem(0x6ff5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7638, gbc.sp());
        EXPECT(0x6ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02DB
        gbc.setState(0x1744, 0x1aba, 0x8290, 0xd8ea, 0x9f2e, 0x7d50, 0x0, 0x1);
        gbc.writeMem(0x1744, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1aba, gbc.sp());
        EXPECT(0x1746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02DC
        gbc.setState(0x6399, 0xecd7, 0xd8b0, 0x6ee, 0x5eda, 0x6318, 0x1, 0x1);
        gbc.writeMem(0x6399, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xecd7, gbc.sp());
        EXPECT(0x639b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02DD
        gbc.setState(0x91a2, 0x638a, 0xe190, 0x64b7, 0x1c94, 0xf141, 0x0, 0x0);
        gbc.writeMem(0x91a2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x638a, gbc.sp());
        EXPECT(0x91a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a2));
        EXPECT(0x61, gbc.readMem(0x91a3));
        // CB 61 02DE
        gbc.setState(0x3adf, 0xd1c7, 0x63f0, 0xa136, 0x6e00, 0xaf3a, 0x1, 0x0);
        gbc.writeMem(0x3adf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd1c7, gbc.sp());
        EXPECT(0x3ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02DF
        gbc.setState(0xa4aa, 0xe904, 0x21a0, 0x6b2b, 0xe5c7, 0x84a7, 0x1, 0x0);
        gbc.writeMem(0xa4aa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe904, gbc.sp());
        EXPECT(0xa4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4aa));
        EXPECT(0x61, gbc.readMem(0xa4ab));
        // CB 61 02E0
        gbc.setState(0x6389, 0x247e, 0x75f0, 0x1ce2, 0x50de, 0x8f6, 0x0, 0x0);
        gbc.writeMem(0x6389, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x247e, gbc.sp());
        EXPECT(0x638b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02E1
        gbc.setState(0x7768, 0x2b5e, 0xcc40, 0x3b62, 0xc3b1, 0x8cc1, 0x0, 0x0);
        gbc.writeMem(0x7768, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2b5e, gbc.sp());
        EXPECT(0x776a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02E2
        gbc.setState(0x7234, 0x64df, 0x6720, 0x7aa0, 0xac36, 0x3901, 0x1, 0x0);
        gbc.writeMem(0x7234, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x64df, gbc.sp());
        EXPECT(0x7236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02E3
        gbc.setState(0xa17d, 0x240f, 0x53a0, 0x2b18, 0xbab8, 0x60e0, 0x1, 0x1);
        gbc.writeMem(0xa17d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x240f, gbc.sp());
        EXPECT(0xa17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa17d));
        EXPECT(0x61, gbc.readMem(0xa17e));
        // CB 61 02E4
        gbc.setState(0xb144, 0x92aa, 0xbd70, 0x47b3, 0x192f, 0x5c1f, 0x0, 0x0);
        gbc.writeMem(0xb144, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x92aa, gbc.sp());
        EXPECT(0xb146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb144));
        EXPECT(0x61, gbc.readMem(0xb145));
        // CB 61 02E5
        gbc.setState(0xa2cf, 0xedea, 0x3740, 0xa444, 0x2b49, 0x5bef, 0x1, 0x1);
        gbc.writeMem(0xa2cf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xedea, gbc.sp());
        EXPECT(0xa2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2cf));
        EXPECT(0x61, gbc.readMem(0xa2d0));
        // CB 61 02E6
        gbc.setState(0x2fbc, 0x6d9a, 0x6da0, 0x459c, 0xfd47, 0x9c39, 0x1, 0x0);
        gbc.writeMem(0x2fbc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6d9a, gbc.sp());
        EXPECT(0x2fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02E7
        gbc.setState(0xb6c9, 0xeeb0, 0x980, 0xef34, 0x6537, 0xeeee, 0x1, 0x1);
        gbc.writeMem(0xb6c9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xeeb0, gbc.sp());
        EXPECT(0xb6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c9));
        EXPECT(0x61, gbc.readMem(0xb6ca));
        // CB 61 02E8
        gbc.setState(0x3d39, 0xac50, 0x20b0, 0xcdb2, 0x41ac, 0x2af3, 0x1, 0x1);
        gbc.writeMem(0x3d39, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xac50, gbc.sp());
        EXPECT(0x3d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02E9
        gbc.setState(0x48ef, 0x72df, 0xec90, 0xd08b, 0x1df7, 0x8717, 0x1, 0x0);
        gbc.writeMem(0x48ef, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x72df, gbc.sp());
        EXPECT(0x48f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02EA
        gbc.setState(0xe850, 0x1ed3, 0x14f0, 0xb5b5, 0x9e8e, 0x37f6, 0x1, 0x0);
        gbc.writeMem(0xe850, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1ed3, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe850));
        EXPECT(0x61, gbc.readMem(0xe851));
        // CB 61 02EB
        gbc.setState(0xbd93, 0xee05, 0x8c80, 0xd3ce, 0x7dd2, 0xc515, 0x0, 0x1);
        gbc.writeMem(0xbd93, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xee05, gbc.sp());
        EXPECT(0xbd95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd93));
        EXPECT(0x61, gbc.readMem(0xbd94));
        // CB 61 02EC
        gbc.setState(0xd515, 0x17c8, 0xc440, 0xe38a, 0x8286, 0xb301, 0x1, 0x1);
        gbc.writeMem(0xd515, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x17c8, gbc.sp());
        EXPECT(0xd517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd515));
        EXPECT(0x61, gbc.readMem(0xd516));
        // CB 61 02EE
        gbc.setState(0x5b74, 0xcad5, 0xe850, 0x2c53, 0x8e4b, 0xf47d, 0x1, 0x0);
        gbc.writeMem(0x5b74, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcad5, gbc.sp());
        EXPECT(0x5b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02EF
        gbc.setState(0xdc01, 0xb10d, 0xc470, 0x1a6c, 0x7c8e, 0x1790, 0x1, 0x1);
        gbc.writeMem(0xdc01, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb10d, gbc.sp());
        EXPECT(0xdc03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc01));
        EXPECT(0x61, gbc.readMem(0xdc02));
        // CB 61 02F0
        gbc.setState(0x74c5, 0x640d, 0x7e0, 0xede3, 0x47eb, 0x56d9, 0x0, 0x1);
        gbc.writeMem(0x74c5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x640d, gbc.sp());
        EXPECT(0x74c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02F1
        gbc.setState(0x29e2, 0x9444, 0xe850, 0x821c, 0x326a, 0xa509, 0x1, 0x1);
        gbc.writeMem(0x29e2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9444, gbc.sp());
        EXPECT(0x29e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02F2
        gbc.setState(0x1e4c, 0x3308, 0xa050, 0xd3a8, 0x9507, 0x53f2, 0x0, 0x1);
        gbc.writeMem(0x1e4c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3308, gbc.sp());
        EXPECT(0x1e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02F3
        gbc.setState(0x13e, 0xce96, 0xb140, 0x7997, 0xf5ec, 0x54a7, 0x1, 0x0);
        gbc.writeMem(0x13e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xce96, gbc.sp());
        EXPECT(0x140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02F4
        gbc.setState(0xae87, 0x4884, 0x9400, 0xeef5, 0xeca6, 0x8d85, 0x1, 0x1);
        gbc.writeMem(0xae87, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4884, gbc.sp());
        EXPECT(0xae89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae87));
        EXPECT(0x61, gbc.readMem(0xae88));
        // CB 61 02F5
        gbc.setState(0xe7fe, 0x8dee, 0x5630, 0xb9db, 0xa713, 0xb988, 0x1, 0x1);
        gbc.writeMem(0xe7fe, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8dee, gbc.sp());
        EXPECT(0xe800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7fe));
        EXPECT(0x61, gbc.readMem(0xe7ff));
        // CB 61 02F6
        gbc.setState(0x444b, 0xbb24, 0xc190, 0x151e, 0x5516, 0xeb6e, 0x1, 0x0);
        gbc.writeMem(0x444b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbb24, gbc.sp());
        EXPECT(0x444d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02F7
        gbc.setState(0x8c25, 0xdd34, 0x2190, 0xaaf6, 0x2339, 0x3948, 0x0, 0x0);
        gbc.writeMem(0x8c25, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdd34, gbc.sp());
        EXPECT(0x8c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c25));
        EXPECT(0x61, gbc.readMem(0x8c26));
        // CB 61 02F8
        gbc.setState(0x347d, 0x404d, 0x58b0, 0x1d44, 0x88c7, 0x56b8, 0x1, 0x0);
        gbc.writeMem(0x347d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x404d, gbc.sp());
        EXPECT(0x347f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02F9
        gbc.setState(0x46e8, 0xc03d, 0x6e10, 0xdc, 0xda6f, 0x28ba, 0x0, 0x1);
        gbc.writeMem(0x46e8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc03d, gbc.sp());
        EXPECT(0x46ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02FA
        gbc.setState(0xa8c5, 0x8c34, 0xbc00, 0x6040, 0xc0c7, 0x6e0f, 0x1, 0x1);
        gbc.writeMem(0xa8c5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8c34, gbc.sp());
        EXPECT(0xa8c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c5));
        EXPECT(0x61, gbc.readMem(0xa8c6));
        // CB 61 02FB
        gbc.setState(0xb8a6, 0xb48c, 0x780, 0x4fcc, 0x209b, 0x4d01, 0x1, 0x0);
        gbc.writeMem(0xb8a6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb48c, gbc.sp());
        EXPECT(0xb8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a6));
        EXPECT(0x61, gbc.readMem(0xb8a7));
        // CB 61 02FC
        gbc.setState(0x66d7, 0xf868, 0x5ed0, 0x9bcf, 0x62d3, 0xb306, 0x1, 0x1);
        gbc.writeMem(0x66d7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf868, gbc.sp());
        EXPECT(0x66d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 02FD
        gbc.setState(0x12aa, 0xf167, 0xf080, 0x9917, 0xde8a, 0x2ce5, 0x1, 0x0);
        gbc.writeMem(0x12aa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf167, gbc.sp());
        EXPECT(0x12ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 02FE
        gbc.setState(0xeea4, 0xc3d1, 0x2fe0, 0x749, 0x4458, 0xe435, 0x0, 0x0);
        gbc.writeMem(0xeea4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc3d1, gbc.sp());
        EXPECT(0xeea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea4));
        EXPECT(0x61, gbc.readMem(0xeea5));
        // CB 61 02FF
        gbc.setState(0xc45a, 0xa469, 0x4da0, 0xdb8, 0x59e8, 0x8536, 0x1, 0x0);
        gbc.writeMem(0xc45a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa469, gbc.sp());
        EXPECT(0xc45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45a));
        EXPECT(0x61, gbc.readMem(0xc45b));
        // CB 61 0300
        gbc.setState(0x319f, 0x72f7, 0xbf30, 0xe9ad, 0x374a, 0x5184, 0x1, 0x0);
        gbc.writeMem(0x319f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x72f7, gbc.sp());
        EXPECT(0x31a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0301
        gbc.setState(0x5e2a, 0xce82, 0x4a90, 0x3cd6, 0x22b4, 0xbeab, 0x0, 0x1);
        gbc.writeMem(0x5e2a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xce82, gbc.sp());
        EXPECT(0x5e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0302
        gbc.setState(0xd89d, 0x6167, 0xbfe0, 0xa6ef, 0x2790, 0xc3db, 0x0, 0x1);
        gbc.writeMem(0xd89d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6167, gbc.sp());
        EXPECT(0xd89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89d));
        EXPECT(0x61, gbc.readMem(0xd89e));
        // CB 61 0303
        gbc.setState(0x7956, 0xca55, 0x4170, 0xf94d, 0xfb43, 0xa710, 0x1, 0x0);
        gbc.writeMem(0x7956, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xca55, gbc.sp());
        EXPECT(0x7958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0304
        gbc.setState(0x59ec, 0xec1c, 0x19b0, 0xc7dc, 0x53e, 0x7183, 0x1, 0x1);
        gbc.writeMem(0x59ec, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xec1c, gbc.sp());
        EXPECT(0x59ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0305
        gbc.setState(0xe423, 0xd71, 0x8420, 0x87bc, 0x6fd9, 0xd69c, 0x0, 0x1);
        gbc.writeMem(0xe423, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd71, gbc.sp());
        EXPECT(0xe425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe423));
        EXPECT(0x61, gbc.readMem(0xe424));
        // CB 61 0306
        gbc.setState(0x7c60, 0x1c90, 0xd0d0, 0x7dfd, 0xbeb9, 0xdac6, 0x0, 0x1);
        gbc.writeMem(0x7c60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1c90, gbc.sp());
        EXPECT(0x7c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0307
        gbc.setState(0x30fa, 0xb3d8, 0xac0, 0xa766, 0x6bff, 0xa25b, 0x1, 0x1);
        gbc.writeMem(0x30fa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb3d8, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0308
        gbc.setState(0x88f0, 0x4f34, 0xc600, 0xa97a, 0xbb80, 0xe0ba, 0x1, 0x0);
        gbc.writeMem(0x88f0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4f34, gbc.sp());
        EXPECT(0x88f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f0));
        EXPECT(0x61, gbc.readMem(0x88f1));
        // CB 61 0309
        gbc.setState(0x4fe3, 0x62b, 0xaa40, 0x828, 0xb4c6, 0x75fe, 0x0, 0x0);
        gbc.writeMem(0x4fe3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x62b, gbc.sp());
        EXPECT(0x4fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 030A
        gbc.setState(0x2b15, 0xab0a, 0xf3e0, 0x1cc7, 0x1404, 0x9570, 0x0, 0x0);
        gbc.writeMem(0x2b15, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xab0a, gbc.sp());
        EXPECT(0x2b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 030B
        gbc.setState(0x9f18, 0x5eeb, 0xab30, 0x3080, 0xfbbe, 0x3855, 0x0, 0x1);
        gbc.writeMem(0x9f18, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5eeb, gbc.sp());
        EXPECT(0x9f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f18));
        EXPECT(0x61, gbc.readMem(0x9f19));
        // CB 61 030C
        gbc.setState(0x219f, 0xea95, 0x2e70, 0x6edb, 0xbe04, 0x8494, 0x0, 0x0);
        gbc.writeMem(0x219f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xea95, gbc.sp());
        EXPECT(0x21a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 030D
        gbc.setState(0x94b5, 0xbc42, 0x3ae0, 0x2102, 0x957, 0x5bfb, 0x1, 0x0);
        gbc.writeMem(0x94b5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbc42, gbc.sp());
        EXPECT(0x94b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b5));
        EXPECT(0x61, gbc.readMem(0x94b6));
        // CB 61 030E
        gbc.setState(0x9697, 0xa31, 0xe470, 0xdc84, 0x38f6, 0xad4, 0x1, 0x0);
        gbc.writeMem(0x9697, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa31, gbc.sp());
        EXPECT(0x9699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9697));
        EXPECT(0x61, gbc.readMem(0x9698));
        // CB 61 030F
        gbc.setState(0x61dc, 0x7ab8, 0xa040, 0x796, 0xefda, 0xe48c, 0x0, 0x1);
        gbc.writeMem(0x61dc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7ab8, gbc.sp());
        EXPECT(0x61de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0310
        gbc.setState(0xde82, 0xea07, 0x3340, 0xd5d0, 0xf9ef, 0xc6fe, 0x0, 0x0);
        gbc.writeMem(0xde82, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xea07, gbc.sp());
        EXPECT(0xde84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde82));
        EXPECT(0x61, gbc.readMem(0xde83));
        // CB 61 0311
        gbc.setState(0x2a5, 0xfa0c, 0xe040, 0x5ddd, 0xb5b1, 0x7616, 0x0, 0x0);
        gbc.writeMem(0x2a5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfa0c, gbc.sp());
        EXPECT(0x2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0312
        gbc.setState(0x3fa1, 0xfd3, 0xe1d0, 0xfe38, 0xea0, 0x586c, 0x0, 0x0);
        gbc.writeMem(0x3fa1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfd3, gbc.sp());
        EXPECT(0x3fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0314
        gbc.setState(0x4d1a, 0x7819, 0xdba0, 0x2581, 0xe22, 0x86c1, 0x0, 0x0);
        gbc.writeMem(0x4d1a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7819, gbc.sp());
        EXPECT(0x4d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0315
        gbc.setState(0x26f7, 0x87db, 0x52f0, 0x51fc, 0x9060, 0x4ce, 0x0, 0x0);
        gbc.writeMem(0x26f7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x87db, gbc.sp());
        EXPECT(0x26f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0316
        gbc.setState(0x626b, 0x6de2, 0x4150, 0xa43e, 0x7c1c, 0x66ed, 0x0, 0x1);
        gbc.writeMem(0x626b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6de2, gbc.sp());
        EXPECT(0x626d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0317
        gbc.setState(0xd0c4, 0x7849, 0x37a0, 0x4db6, 0x7bc, 0xea35, 0x0, 0x0);
        gbc.writeMem(0xd0c4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7849, gbc.sp());
        EXPECT(0xd0c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c4));
        EXPECT(0x61, gbc.readMem(0xd0c5));
        // CB 61 0319
        gbc.setState(0xb942, 0x3182, 0xd690, 0x50da, 0x6e5c, 0x9097, 0x0, 0x1);
        gbc.writeMem(0xb942, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3182, gbc.sp());
        EXPECT(0xb944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb942));
        EXPECT(0x61, gbc.readMem(0xb943));
        // CB 61 031A
        gbc.setState(0xbbe4, 0x825c, 0x3c40, 0x4b68, 0x7784, 0x774d, 0x1, 0x1);
        gbc.writeMem(0xbbe4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x825c, gbc.sp());
        EXPECT(0xbbe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe4));
        EXPECT(0x61, gbc.readMem(0xbbe5));
        // CB 61 031B
        gbc.setState(0x61ea, 0x5368, 0x5760, 0x839e, 0xed6f, 0x53ff, 0x1, 0x0);
        gbc.writeMem(0x61ea, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5368, gbc.sp());
        EXPECT(0x61ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 031C
        gbc.setState(0x59f8, 0x690d, 0xdd10, 0x52ab, 0x5520, 0x7eeb, 0x1, 0x0);
        gbc.writeMem(0x59f8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x690d, gbc.sp());
        EXPECT(0x59fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 031D
        gbc.setState(0xb6fa, 0xefca, 0xed40, 0xe7a2, 0xad02, 0x20e6, 0x0, 0x0);
        gbc.writeMem(0xb6fa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xefca, gbc.sp());
        EXPECT(0xb6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fa));
        EXPECT(0x61, gbc.readMem(0xb6fb));
        // CB 61 031E
        gbc.setState(0xb1b1, 0xcdb1, 0xeda0, 0x90a, 0xfb3b, 0xfedf, 0x0, 0x1);
        gbc.writeMem(0xb1b1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcdb1, gbc.sp());
        EXPECT(0xb1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b1));
        EXPECT(0x61, gbc.readMem(0xb1b2));
        // CB 61 0320
        gbc.setState(0x9f98, 0x98b2, 0xd1f0, 0x6ae6, 0xac16, 0xf40, 0x1, 0x1);
        gbc.writeMem(0x9f98, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x98b2, gbc.sp());
        EXPECT(0x9f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f98));
        EXPECT(0x61, gbc.readMem(0x9f99));
        // CB 61 0321
        gbc.setState(0x5ad7, 0x3fd8, 0xe250, 0xf223, 0xe049, 0x59a2, 0x0, 0x0);
        gbc.writeMem(0x5ad7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3fd8, gbc.sp());
        EXPECT(0x5ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0322
        gbc.setState(0x4609, 0x3ea5, 0x2f40, 0xed40, 0x5ac2, 0x4855, 0x1, 0x1);
        gbc.writeMem(0x4609, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3ea5, gbc.sp());
        EXPECT(0x460b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0323
        gbc.setState(0x6cca, 0x7a48, 0xc580, 0x464b, 0xf0de, 0xbbe6, 0x1, 0x0);
        gbc.writeMem(0x6cca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7a48, gbc.sp());
        EXPECT(0x6ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0324
        gbc.setState(0x1b71, 0xabe6, 0x18c0, 0x4f7e, 0x798, 0xec6f, 0x0, 0x0);
        gbc.writeMem(0x1b71, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xabe6, gbc.sp());
        EXPECT(0x1b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0325
        gbc.setState(0xced8, 0xceaa, 0x8c30, 0xc760, 0xd050, 0xca82, 0x0, 0x1);
        gbc.writeMem(0xced8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xceaa, gbc.sp());
        EXPECT(0xceda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced8));
        EXPECT(0x61, gbc.readMem(0xced9));
        // CB 61 0326
        gbc.setState(0x4fd4, 0x1dea, 0xd630, 0x3a87, 0xdee0, 0x950e, 0x0, 0x0);
        gbc.writeMem(0x4fd4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1dea, gbc.sp());
        EXPECT(0x4fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0327
        gbc.setState(0xcaf1, 0x35a0, 0xde20, 0xfa55, 0x8c5a, 0xf557, 0x1, 0x0);
        gbc.writeMem(0xcaf1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x35a0, gbc.sp());
        EXPECT(0xcaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf1));
        EXPECT(0x61, gbc.readMem(0xcaf2));
        // CB 61 0328
        gbc.setState(0x4136, 0x8a97, 0xbd00, 0xc497, 0x5e76, 0x3345, 0x0, 0x0);
        gbc.writeMem(0x4136, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8a97, gbc.sp());
        EXPECT(0x4138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0329
        gbc.setState(0x2423, 0x7c2b, 0xfa50, 0x674b, 0x9801, 0x8905, 0x1, 0x0);
        gbc.writeMem(0x2423, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7c2b, gbc.sp());
        EXPECT(0x2425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 032A
        gbc.setState(0x40c3, 0xfb98, 0x1b0, 0xa1a0, 0x4eec, 0xcff2, 0x0, 0x1);
        gbc.writeMem(0x40c3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfb98, gbc.sp());
        EXPECT(0x40c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 032B
        gbc.setState(0x3862, 0x9dd5, 0x50c0, 0xc10f, 0x8e4c, 0xa67a, 0x1, 0x0);
        gbc.writeMem(0x3862, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9dd5, gbc.sp());
        EXPECT(0x3864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 032C
        gbc.setState(0x9ff5, 0xafa, 0x2390, 0x74d7, 0xc854, 0x7e4a, 0x0, 0x1);
        gbc.writeMem(0x9ff5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xafa, gbc.sp());
        EXPECT(0x9ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff5));
        EXPECT(0x61, gbc.readMem(0x9ff6));
        // CB 61 032D
        gbc.setState(0x3292, 0xdc98, 0xbb10, 0x64ea, 0x7590, 0xe33f, 0x1, 0x0);
        gbc.writeMem(0x3292, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdc98, gbc.sp());
        EXPECT(0x3294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 032E
        gbc.setState(0x56c2, 0xa7df, 0x6da0, 0xf40c, 0x83c3, 0x4282, 0x1, 0x0);
        gbc.writeMem(0x56c2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa7df, gbc.sp());
        EXPECT(0x56c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 032F
        gbc.setState(0x42c, 0x6acc, 0x64c0, 0x2b41, 0x1230, 0x44b, 0x1, 0x0);
        gbc.writeMem(0x42c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6acc, gbc.sp());
        EXPECT(0x42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0330
        gbc.setState(0x4ee2, 0x89a6, 0x2990, 0x91b0, 0x5fc, 0x51c, 0x1, 0x0);
        gbc.writeMem(0x4ee2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x89a6, gbc.sp());
        EXPECT(0x4ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0332
        gbc.setState(0x5793, 0x959e, 0xbb40, 0x688e, 0x73eb, 0x77a5, 0x1, 0x1);
        gbc.writeMem(0x5793, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x959e, gbc.sp());
        EXPECT(0x5795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0333
        gbc.setState(0xbe24, 0xea64, 0xd0e0, 0x7c11, 0xb4f5, 0x4e77, 0x0, 0x0);
        gbc.writeMem(0xbe24, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xea64, gbc.sp());
        EXPECT(0xbe26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe24));
        EXPECT(0x61, gbc.readMem(0xbe25));
        // CB 61 0334
        gbc.setState(0x8da2, 0x9bfb, 0x3fa0, 0x5aef, 0x4742, 0xb3ab, 0x1, 0x0);
        gbc.writeMem(0x8da2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9bfb, gbc.sp());
        EXPECT(0x8da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da2));
        EXPECT(0x61, gbc.readMem(0x8da3));
        // CB 61 0335
        gbc.setState(0x7e6d, 0x7d10, 0x37c0, 0x8fa, 0x6321, 0x853e, 0x0, 0x1);
        gbc.writeMem(0x7e6d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7d10, gbc.sp());
        EXPECT(0x7e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0336
        gbc.setState(0x39e8, 0xd3bc, 0x5450, 0xa9f3, 0x1d55, 0xf7c8, 0x1, 0x1);
        gbc.writeMem(0x39e8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd3bc, gbc.sp());
        EXPECT(0x39ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0337
        gbc.setState(0x80f6, 0xf53b, 0x23e0, 0x219b, 0x1346, 0x7564, 0x0, 0x0);
        gbc.writeMem(0x80f6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf53b, gbc.sp());
        EXPECT(0x80f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f6));
        EXPECT(0x61, gbc.readMem(0x80f7));
        // CB 61 0338
        gbc.setState(0x85e, 0xb1ff, 0x350, 0x5192, 0xaf8c, 0x32f1, 0x1, 0x0);
        gbc.writeMem(0x85e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb1ff, gbc.sp());
        EXPECT(0x860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 033A
        gbc.setState(0xd7df, 0xdc6d, 0x7290, 0xf93b, 0xd74, 0xdc1c, 0x0, 0x0);
        gbc.writeMem(0xd7df, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdc6d, gbc.sp());
        EXPECT(0xd7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7df));
        EXPECT(0x61, gbc.readMem(0xd7e0));
        // CB 61 033B
        gbc.setState(0x7ee7, 0xf0e5, 0xc40, 0x2224, 0xfb70, 0x153e, 0x1, 0x1);
        gbc.writeMem(0x7ee7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf0e5, gbc.sp());
        EXPECT(0x7ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 033C
        gbc.setState(0x5bef, 0x6023, 0x5c90, 0x1f83, 0xb75e, 0xa038, 0x0, 0x0);
        gbc.writeMem(0x5bef, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6023, gbc.sp());
        EXPECT(0x5bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 033E
        gbc.setState(0x8eb7, 0x24ea, 0x1e70, 0x31ca, 0x8a18, 0x41c9, 0x1, 0x0);
        gbc.writeMem(0x8eb7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x24ea, gbc.sp());
        EXPECT(0x8eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb7));
        EXPECT(0x61, gbc.readMem(0x8eb8));
        // CB 61 033F
        gbc.setState(0x8e7c, 0x4537, 0x80a0, 0xe6f1, 0x3af, 0xd0fb, 0x0, 0x0);
        gbc.writeMem(0x8e7c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4537, gbc.sp());
        EXPECT(0x8e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7c));
        EXPECT(0x61, gbc.readMem(0x8e7d));
        // CB 61 0340
        gbc.setState(0x186b, 0xa9d8, 0x8e70, 0xbb4a, 0xffe6, 0x4d90, 0x0, 0x0);
        gbc.writeMem(0x186b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa9d8, gbc.sp());
        EXPECT(0x186d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0341
        gbc.setState(0x527, 0xac67, 0xe7c0, 0xff94, 0xd24c, 0xc39e, 0x0, 0x1);
        gbc.writeMem(0x527, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xac67, gbc.sp());
        EXPECT(0x529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0342
        gbc.setState(0x970b, 0xa49, 0xdba0, 0xb804, 0x2d08, 0x6152, 0x1, 0x0);
        gbc.writeMem(0x970b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa49, gbc.sp());
        EXPECT(0x970d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970b));
        EXPECT(0x61, gbc.readMem(0x970c));
        // CB 61 0343
        gbc.setState(0x981f, 0x1b5d, 0xa180, 0x2ac8, 0x3197, 0xdb91, 0x0, 0x1);
        gbc.writeMem(0x981f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1b5d, gbc.sp());
        EXPECT(0x9821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981f));
        EXPECT(0x61, gbc.readMem(0x9820));
        // CB 61 0345
        gbc.setState(0xc9a0, 0xeb40, 0xc20, 0x4d1e, 0x54, 0xeedf, 0x0, 0x1);
        gbc.writeMem(0xc9a0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xeb40, gbc.sp());
        EXPECT(0xc9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a0));
        EXPECT(0x61, gbc.readMem(0xc9a1));
        // CB 61 0346
        gbc.setState(0x5fb1, 0x9b34, 0xdda0, 0x154a, 0xd279, 0xb57b, 0x1, 0x0);
        gbc.writeMem(0x5fb1, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9b34, gbc.sp());
        EXPECT(0x5fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0347
        gbc.setState(0x8f70, 0x288f, 0xec80, 0x27b6, 0x726d, 0xc9c5, 0x0, 0x0);
        gbc.writeMem(0x8f70, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x288f, gbc.sp());
        EXPECT(0x8f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f70));
        EXPECT(0x61, gbc.readMem(0x8f71));
        // CB 61 0348
        gbc.setState(0x57a6, 0xb2a1, 0x2ed0, 0xbb9, 0x7ca9, 0x253c, 0x0, 0x1);
        gbc.writeMem(0x57a6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb2a1, gbc.sp());
        EXPECT(0x57a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0349
        gbc.setState(0x2c77, 0x25f5, 0x39e0, 0xe702, 0x1b0a, 0xdbbb, 0x0, 0x1);
        gbc.writeMem(0x2c77, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x25f5, gbc.sp());
        EXPECT(0x2c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 034A
        gbc.setState(0xcad9, 0xcea7, 0x58d0, 0x4ed8, 0x85ab, 0xfa7, 0x0, 0x0);
        gbc.writeMem(0xcad9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcea7, gbc.sp());
        EXPECT(0xcadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad9));
        EXPECT(0x61, gbc.readMem(0xcada));
        // CB 61 034B
        gbc.setState(0x3c2, 0x40c9, 0x870, 0x23d4, 0x4e7c, 0x986e, 0x1, 0x0);
        gbc.writeMem(0x3c2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x40c9, gbc.sp());
        EXPECT(0x3c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 034C
        gbc.setState(0xbbe3, 0x3200, 0xc660, 0x5faf, 0xb90b, 0x3e86, 0x0, 0x1);
        gbc.writeMem(0xbbe3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3200, gbc.sp());
        EXPECT(0xbbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe3));
        EXPECT(0x61, gbc.readMem(0xbbe4));
        // CB 61 034D
        gbc.setState(0xa49a, 0x82d9, 0x2500, 0x5a58, 0x7e77, 0x1d7d, 0x1, 0x0);
        gbc.writeMem(0xa49a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x82d9, gbc.sp());
        EXPECT(0xa49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49a));
        EXPECT(0x61, gbc.readMem(0xa49b));
        // CB 61 034E
        gbc.setState(0x52ac, 0x7708, 0x1cc0, 0xb09a, 0x273c, 0xf234, 0x1, 0x0);
        gbc.writeMem(0x52ac, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7708, gbc.sp());
        EXPECT(0x52ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 034F
        gbc.setState(0xa9f, 0x8a13, 0x1e80, 0xd960, 0xbe57, 0xa2c0, 0x1, 0x1);
        gbc.writeMem(0xa9f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8a13, gbc.sp());
        EXPECT(0xaa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0350
        gbc.setState(0x1258, 0x33b, 0xe3a0, 0x9534, 0x1700, 0xa023, 0x1, 0x0);
        gbc.writeMem(0x1258, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x33b, gbc.sp());
        EXPECT(0x125a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0351
        gbc.setState(0x7791, 0xb388, 0xe960, 0x9bbc, 0xe05e, 0x41cb, 0x1, 0x1);
        gbc.writeMem(0x7791, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb388, gbc.sp());
        EXPECT(0x7793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0353
        gbc.setState(0x232d, 0x8d49, 0xc470, 0x6e0f, 0x604f, 0x4700, 0x1, 0x0);
        gbc.writeMem(0x232d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8d49, gbc.sp());
        EXPECT(0x232f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0354
        gbc.setState(0xc3eb, 0x4f45, 0x9400, 0xb645, 0x4ba, 0x12b3, 0x0, 0x0);
        gbc.writeMem(0xc3eb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4f45, gbc.sp());
        EXPECT(0xc3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3eb));
        EXPECT(0x61, gbc.readMem(0xc3ec));
        // CB 61 0355
        gbc.setState(0x517, 0x8453, 0x6f90, 0x82b5, 0x28aa, 0xda96, 0x1, 0x0);
        gbc.writeMem(0x517, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8453, gbc.sp());
        EXPECT(0x519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0357
        gbc.setState(0x854c, 0x7991, 0x4660, 0x55cb, 0x6e36, 0xf472, 0x1, 0x1);
        gbc.writeMem(0x854c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7991, gbc.sp());
        EXPECT(0x854e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854c));
        EXPECT(0x61, gbc.readMem(0x854d));
        // CB 61 0358
        gbc.setState(0xd5f0, 0x40af, 0x9150, 0xf2e, 0x4ad8, 0x35a5, 0x1, 0x1);
        gbc.writeMem(0xd5f0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x40af, gbc.sp());
        EXPECT(0xd5f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f0));
        EXPECT(0x61, gbc.readMem(0xd5f1));
        // CB 61 0359
        gbc.setState(0xc98e, 0x8570, 0xdaf0, 0xe8a2, 0xed59, 0x4ef7, 0x0, 0x1);
        gbc.writeMem(0xc98e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8570, gbc.sp());
        EXPECT(0xc990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98e));
        EXPECT(0x61, gbc.readMem(0xc98f));
        // CB 61 035A
        gbc.setState(0x75c, 0x1839, 0x63c0, 0x705d, 0x2a27, 0x7d88, 0x0, 0x0);
        gbc.writeMem(0x75c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1839, gbc.sp());
        EXPECT(0x75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 035B
        gbc.setState(0xcdb3, 0xbfed, 0x47e0, 0xc372, 0x44e3, 0x1f22, 0x1, 0x0);
        gbc.writeMem(0xcdb3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbfed, gbc.sp());
        EXPECT(0xcdb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb3));
        EXPECT(0x61, gbc.readMem(0xcdb4));
        // CB 61 035C
        gbc.setState(0xd91, 0x8520, 0x37f0, 0xcc7b, 0x6984, 0x471c, 0x0, 0x1);
        gbc.writeMem(0xd91, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8520, gbc.sp());
        EXPECT(0xd93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 035D
        gbc.setState(0x9d73, 0xc4c, 0xe710, 0x6589, 0xef2c, 0x6fd, 0x1, 0x0);
        gbc.writeMem(0x9d73, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc4c, gbc.sp());
        EXPECT(0x9d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d73));
        EXPECT(0x61, gbc.readMem(0x9d74));
        // CB 61 035E
        gbc.setState(0xe50a, 0xbdc, 0xcba0, 0x48de, 0xd9ba, 0xdb09, 0x0, 0x1);
        gbc.writeMem(0xe50a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbdc, gbc.sp());
        EXPECT(0xe50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50a));
        EXPECT(0x61, gbc.readMem(0xe50b));
        // CB 61 035F
        gbc.setState(0x4234, 0x40a8, 0x9bc0, 0xb475, 0xe554, 0xdedc, 0x0, 0x0);
        gbc.writeMem(0x4234, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x40a8, gbc.sp());
        EXPECT(0x4236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0361
        gbc.setState(0x8ca5, 0x86f, 0xc010, 0x42ea, 0x3a3, 0x8663, 0x1, 0x1);
        gbc.writeMem(0x8ca5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x86f, gbc.sp());
        EXPECT(0x8ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca5));
        EXPECT(0x61, gbc.readMem(0x8ca6));
        // CB 61 0362
        gbc.setState(0x9edb, 0xa33b, 0xc310, 0xbe35, 0xa70, 0x73f7, 0x1, 0x1);
        gbc.writeMem(0x9edb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa33b, gbc.sp());
        EXPECT(0x9edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9edb));
        EXPECT(0x61, gbc.readMem(0x9edc));
        // CB 61 0363
        gbc.setState(0x8401, 0xbe17, 0xb720, 0x42fc, 0x322b, 0x67a1, 0x1, 0x0);
        gbc.writeMem(0x8401, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbe17, gbc.sp());
        EXPECT(0x8403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8401));
        EXPECT(0x61, gbc.readMem(0x8402));
        // CB 61 0364
        gbc.setState(0x4987, 0x97b0, 0x38a0, 0xd157, 0xf37e, 0x9c01, 0x1, 0x0);
        gbc.writeMem(0x4987, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x97b0, gbc.sp());
        EXPECT(0x4989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0365
        gbc.setState(0x782c, 0x9b37, 0xb7a0, 0xf578, 0x813b, 0xca8, 0x0, 0x1);
        gbc.writeMem(0x782c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9b37, gbc.sp());
        EXPECT(0x782e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0366
        gbc.setState(0xbda5, 0x152e, 0x4d80, 0xf413, 0xb0c5, 0x1f9c, 0x1, 0x1);
        gbc.writeMem(0xbda5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x152e, gbc.sp());
        EXPECT(0xbda7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda5));
        EXPECT(0x61, gbc.readMem(0xbda6));
        // CB 61 0367
        gbc.setState(0x3333, 0xd0e5, 0x5ec0, 0xa53e, 0x9044, 0x9d59, 0x1, 0x0);
        gbc.writeMem(0x3333, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd0e5, gbc.sp());
        EXPECT(0x3335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0369
        gbc.setState(0xac9e, 0xfacc, 0x7cb0, 0xbb8, 0x3cde, 0xf8b8, 0x0, 0x0);
        gbc.writeMem(0xac9e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfacc, gbc.sp());
        EXPECT(0xaca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9e));
        EXPECT(0x61, gbc.readMem(0xac9f));
        // CB 61 036A
        gbc.setState(0xdac8, 0xf2da, 0xa350, 0x67b5, 0x6d2d, 0x2a7b, 0x0, 0x0);
        gbc.writeMem(0xdac8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf2da, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac8));
        EXPECT(0x61, gbc.readMem(0xdac9));
        // CB 61 036C
        gbc.setState(0xd624, 0x9265, 0x5c00, 0x8ff8, 0x9814, 0x7b83, 0x0, 0x1);
        gbc.writeMem(0xd624, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9265, gbc.sp());
        EXPECT(0xd626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd624));
        EXPECT(0x61, gbc.readMem(0xd625));
        // CB 61 036D
        gbc.setState(0xba1d, 0x1d30, 0xd750, 0x93e8, 0xee11, 0x870d, 0x0, 0x1);
        gbc.writeMem(0xba1d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1d30, gbc.sp());
        EXPECT(0xba1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1d));
        EXPECT(0x61, gbc.readMem(0xba1e));
        // CB 61 036E
        gbc.setState(0xe07e, 0xd8bc, 0x7fc0, 0x6d29, 0x7340, 0x6e97, 0x1, 0x1);
        gbc.writeMem(0xe07e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd8bc, gbc.sp());
        EXPECT(0xe080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07e));
        EXPECT(0x61, gbc.readMem(0xe07f));
        // CB 61 036F
        gbc.setState(0x435, 0x8eb6, 0xc680, 0x4489, 0x473f, 0x1aa2, 0x1, 0x1);
        gbc.writeMem(0x435, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8eb6, gbc.sp());
        EXPECT(0x437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0371
        gbc.setState(0xe8ec, 0x1739, 0xa8a0, 0xdd90, 0x599f, 0x3a63, 0x1, 0x1);
        gbc.writeMem(0xe8ec, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1739, gbc.sp());
        EXPECT(0xe8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ec));
        EXPECT(0x61, gbc.readMem(0xe8ed));
        // CB 61 0372
        gbc.setState(0x91f4, 0x2368, 0x1360, 0xf788, 0x66ab, 0xe34c, 0x1, 0x0);
        gbc.writeMem(0x91f4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2368, gbc.sp());
        EXPECT(0x91f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f4));
        EXPECT(0x61, gbc.readMem(0x91f5));
        // CB 61 0373
        gbc.setState(0x6d32, 0xaaae, 0x2cb0, 0xa17, 0x621f, 0x245b, 0x1, 0x1);
        gbc.writeMem(0x6d32, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaaae, gbc.sp());
        EXPECT(0x6d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0374
        gbc.setState(0x6a06, 0x3328, 0x2270, 0x997c, 0x2541, 0xd7eb, 0x0, 0x1);
        gbc.writeMem(0x6a06, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3328, gbc.sp());
        EXPECT(0x6a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0375
        gbc.setState(0x184f, 0x5459, 0x9510, 0x5fe2, 0x949f, 0x9ae0, 0x0, 0x1);
        gbc.writeMem(0x184f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5459, gbc.sp());
        EXPECT(0x1851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0376
        gbc.setState(0x715f, 0xa38f, 0xa090, 0xf82d, 0xa077, 0x98c8, 0x0, 0x0);
        gbc.writeMem(0x715f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa38f, gbc.sp());
        EXPECT(0x7161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0377
        gbc.setState(0xa8ee, 0x9681, 0x1090, 0x6514, 0xb336, 0x8f76, 0x1, 0x0);
        gbc.writeMem(0xa8ee, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9681, gbc.sp());
        EXPECT(0xa8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ee));
        EXPECT(0x61, gbc.readMem(0xa8ef));
        // CB 61 0378
        gbc.setState(0x2880, 0xbafd, 0x1c90, 0x4e48, 0x28d8, 0xc2d1, 0x0, 0x0);
        gbc.writeMem(0x2880, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbafd, gbc.sp());
        EXPECT(0x2882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0379
        gbc.setState(0x5f66, 0xfae6, 0x8c80, 0xd07, 0xbcb5, 0xfd4, 0x1, 0x0);
        gbc.writeMem(0x5f66, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfae6, gbc.sp());
        EXPECT(0x5f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 037A
        gbc.setState(0xa569, 0xa65b, 0x2f40, 0xd7d4, 0x9f12, 0xa17a, 0x0, 0x1);
        gbc.writeMem(0xa569, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa65b, gbc.sp());
        EXPECT(0xa56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa569));
        EXPECT(0x61, gbc.readMem(0xa56a));
        // CB 61 037B
        gbc.setState(0x3149, 0x3622, 0xd6b0, 0x515c, 0x6fc, 0x61b8, 0x0, 0x0);
        gbc.writeMem(0x3149, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3622, gbc.sp());
        EXPECT(0x314b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 037C
        gbc.setState(0xa0f7, 0x5abe, 0x2df0, 0xa8eb, 0x2373, 0xae30, 0x0, 0x0);
        gbc.writeMem(0xa0f7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5abe, gbc.sp());
        EXPECT(0xa0f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f7));
        EXPECT(0x61, gbc.readMem(0xa0f8));
        // CB 61 037D
        gbc.setState(0xc378, 0xa8ed, 0x4220, 0x98ed, 0x4385, 0x8408, 0x0, 0x1);
        gbc.writeMem(0xc378, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa8ed, gbc.sp());
        EXPECT(0xc37a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc378));
        EXPECT(0x61, gbc.readMem(0xc379));
        // CB 61 037E
        gbc.setState(0x1fbf, 0xc901, 0xc8e0, 0xa6a2, 0x2dd1, 0xde04, 0x0, 0x0);
        gbc.writeMem(0x1fbf, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc901, gbc.sp());
        EXPECT(0x1fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 037F
        gbc.setState(0x45eb, 0xecf7, 0xd640, 0xfa69, 0xbdaa, 0x25c5, 0x0, 0x0);
        gbc.writeMem(0x45eb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xecf7, gbc.sp());
        EXPECT(0x45ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0380
        gbc.setState(0x4e5a, 0xa21f, 0x4ca0, 0xa475, 0x6c0a, 0xc571, 0x0, 0x0);
        gbc.writeMem(0x4e5a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa21f, gbc.sp());
        EXPECT(0x4e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0381
        gbc.setState(0x1b89, 0x7f32, 0xa2d0, 0x78cb, 0x79be, 0xfa7, 0x1, 0x1);
        gbc.writeMem(0x1b89, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7f32, gbc.sp());
        EXPECT(0x1b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0382
        gbc.setState(0x9f46, 0x52f9, 0x3550, 0x4b85, 0x480a, 0x6f90, 0x0, 0x1);
        gbc.writeMem(0x9f46, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x52f9, gbc.sp());
        EXPECT(0x9f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f46));
        EXPECT(0x61, gbc.readMem(0x9f47));
        // CB 61 0383
        gbc.setState(0x6ff4, 0x3bdd, 0x8040, 0xb2a1, 0xa426, 0x3ca1, 0x0, 0x0);
        gbc.writeMem(0x6ff4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3bdd, gbc.sp());
        EXPECT(0x6ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0384
        gbc.setState(0x160b, 0x2178, 0x4640, 0x18a8, 0xcf13, 0x46c0, 0x1, 0x0);
        gbc.writeMem(0x160b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2178, gbc.sp());
        EXPECT(0x160d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0385
        gbc.setState(0x5ae0, 0x8c72, 0xab90, 0xcdc, 0x5655, 0xde5a, 0x1, 0x0);
        gbc.writeMem(0x5ae0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8c72, gbc.sp());
        EXPECT(0x5ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0386
        gbc.setState(0xbd60, 0x2b9b, 0x4fd0, 0x608b, 0x8bb4, 0x5a4d, 0x0, 0x1);
        gbc.writeMem(0xbd60, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2b9b, gbc.sp());
        EXPECT(0xbd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd60));
        EXPECT(0x61, gbc.readMem(0xbd61));
        // CB 61 0387
        gbc.setState(0x8b79, 0x3ae, 0x3350, 0x25b8, 0xbad7, 0xcc8a, 0x0, 0x1);
        gbc.writeMem(0x8b79, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3ae, gbc.sp());
        EXPECT(0x8b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b79));
        EXPECT(0x61, gbc.readMem(0x8b7a));
        // CB 61 0388
        gbc.setState(0x74a4, 0xb32e, 0x1f30, 0x454b, 0x10a2, 0xdb94, 0x1, 0x0);
        gbc.writeMem(0x74a4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb32e, gbc.sp());
        EXPECT(0x74a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0389
        gbc.setState(0x2c1f, 0x391e, 0xa380, 0x9747, 0xfd4b, 0x3d55, 0x0, 0x0);
        gbc.writeMem(0x2c1f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x391e, gbc.sp());
        EXPECT(0x2c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 038A
        gbc.setState(0x2179, 0x750f, 0x5280, 0x224b, 0x3cae, 0x4eb8, 0x0, 0x1);
        gbc.writeMem(0x2179, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x750f, gbc.sp());
        EXPECT(0x217b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 038B
        gbc.setState(0x80e6, 0x29f5, 0xe0d0, 0xc10a, 0x58b1, 0x1b9b, 0x1, 0x0);
        gbc.writeMem(0x80e6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x29f5, gbc.sp());
        EXPECT(0x80e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e6));
        EXPECT(0x61, gbc.readMem(0x80e7));
        // CB 61 038C
        gbc.setState(0xbd18, 0x801e, 0x4910, 0xde28, 0xa50c, 0x9e3d, 0x1, 0x1);
        gbc.writeMem(0xbd18, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x801e, gbc.sp());
        EXPECT(0xbd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd18));
        EXPECT(0x61, gbc.readMem(0xbd19));
        // CB 61 038D
        gbc.setState(0xa36, 0xa8f0, 0x2790, 0x912c, 0x97e5, 0x8186, 0x0, 0x0);
        gbc.writeMem(0xa36, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa8f0, gbc.sp());
        EXPECT(0xa38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 038E
        gbc.setState(0xa52d, 0xd940, 0x73e0, 0x1f46, 0x9178, 0x995e, 0x0, 0x1);
        gbc.writeMem(0xa52d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd940, gbc.sp());
        EXPECT(0xa52f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52d));
        EXPECT(0x61, gbc.readMem(0xa52e));
        // CB 61 038F
        gbc.setState(0x5d57, 0x5bbd, 0x7460, 0x6662, 0x1de5, 0x6508, 0x0, 0x0);
        gbc.writeMem(0x5d57, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5bbd, gbc.sp());
        EXPECT(0x5d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0390
        gbc.setState(0x5fa2, 0xd142, 0xe330, 0xa8c3, 0xe0ac, 0x4968, 0x1, 0x0);
        gbc.writeMem(0x5fa2, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd142, gbc.sp());
        EXPECT(0x5fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0391
        gbc.setState(0x30bc, 0xb57a, 0x6310, 0x47d, 0xdd22, 0x7c8e, 0x1, 0x1);
        gbc.writeMem(0x30bc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb57a, gbc.sp());
        EXPECT(0x30be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0392
        gbc.setState(0xbf23, 0x998, 0xee40, 0x8205, 0xee80, 0x78d7, 0x0, 0x0);
        gbc.writeMem(0xbf23, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x998, gbc.sp());
        EXPECT(0xbf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf23));
        EXPECT(0x61, gbc.readMem(0xbf24));
        // CB 61 0393
        gbc.setState(0x114c, 0x128d, 0x1170, 0x8af5, 0xfafd, 0xd445, 0x0, 0x0);
        gbc.writeMem(0x114c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x128d, gbc.sp());
        EXPECT(0x114e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0394
        gbc.setState(0xa70e, 0x9959, 0xd950, 0xe939, 0x1ebd, 0xb686, 0x0, 0x1);
        gbc.writeMem(0xa70e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9959, gbc.sp());
        EXPECT(0xa710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70e));
        EXPECT(0x61, gbc.readMem(0xa70f));
        // CB 61 0395
        gbc.setState(0xcefe, 0x3388, 0x9cc0, 0x30e8, 0x5a12, 0x790b, 0x0, 0x1);
        gbc.writeMem(0xcefe, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3388, gbc.sp());
        EXPECT(0xcf00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcefe));
        EXPECT(0x61, gbc.readMem(0xceff));
        // CB 61 0396
        gbc.setState(0x5878, 0x8506, 0xb070, 0x9aaa, 0xe645, 0x4253, 0x0, 0x1);
        gbc.writeMem(0x5878, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8506, gbc.sp());
        EXPECT(0x587a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 0397
        gbc.setState(0x96fc, 0xefa0, 0x8c80, 0x9bd6, 0x5f7b, 0x568a, 0x1, 0x1);
        gbc.writeMem(0x96fc, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xefa0, gbc.sp());
        EXPECT(0x96fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96fc));
        EXPECT(0x61, gbc.readMem(0x96fd));
        // CB 61 0398
        gbc.setState(0x70cd, 0x595f, 0x9060, 0x827, 0x7f78, 0xf6c0, 0x0, 0x0);
        gbc.writeMem(0x70cd, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x595f, gbc.sp());
        EXPECT(0x70cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 0399
        gbc.setState(0x5464, 0x607b, 0x5410, 0x49a7, 0x4280, 0xde02, 0x1, 0x0);
        gbc.writeMem(0x5464, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x607b, gbc.sp());
        EXPECT(0x5466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 039B
        gbc.setState(0x626f, 0xeb5b, 0xff30, 0x2f45, 0xd930, 0xddce, 0x1, 0x1);
        gbc.writeMem(0x626f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xeb5b, gbc.sp());
        EXPECT(0x6271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 039C
        gbc.setState(0x813f, 0x4bda, 0x5af0, 0x1925, 0x5d18, 0x5170, 0x0, 0x1);
        gbc.writeMem(0x813f, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4bda, gbc.sp());
        EXPECT(0x8141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813f));
        EXPECT(0x61, gbc.readMem(0x8140));
        // CB 61 039D
        gbc.setState(0x200a, 0xf624, 0x39f0, 0x1c94, 0x8575, 0x9753, 0x0, 0x1);
        gbc.writeMem(0x200a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf624, gbc.sp());
        EXPECT(0x200c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 039E
        gbc.setState(0x997b, 0xcb9c, 0xdf20, 0x9292, 0x2b20, 0xeab0, 0x0, 0x0);
        gbc.writeMem(0x997b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcb9c, gbc.sp());
        EXPECT(0x997d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997b));
        EXPECT(0x61, gbc.readMem(0x997c));
        // CB 61 039F
        gbc.setState(0xe02e, 0x7ac9, 0xa590, 0x34e2, 0x2d67, 0x8e58, 0x0, 0x1);
        gbc.writeMem(0xe02e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7ac9, gbc.sp());
        EXPECT(0xe030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02e));
        EXPECT(0x61, gbc.readMem(0xe02f));
        // CB 61 03A0
        gbc.setState(0xb966, 0x30b4, 0xa0d0, 0xaefd, 0x9407, 0x76a1, 0x1, 0x0);
        gbc.writeMem(0xb966, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x30b4, gbc.sp());
        EXPECT(0xb968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb966));
        EXPECT(0x61, gbc.readMem(0xb967));
        // CB 61 03A1
        gbc.setState(0x6030, 0xb5b9, 0xb000, 0xc34c, 0x1a0c, 0xa3c1, 0x1, 0x0);
        gbc.writeMem(0x6030, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb5b9, gbc.sp());
        EXPECT(0x6032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03A2
        gbc.setState(0xd451, 0xc4e1, 0xc550, 0xa35d, 0x8548, 0xcd23, 0x0, 0x0);
        gbc.writeMem(0xd451, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc4e1, gbc.sp());
        EXPECT(0xd453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd451));
        EXPECT(0x61, gbc.readMem(0xd452));
        // CB 61 03A3
        gbc.setState(0x1f13, 0x7865, 0x5ea0, 0xa10, 0xafc6, 0x3d37, 0x0, 0x0);
        gbc.writeMem(0x1f13, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7865, gbc.sp());
        EXPECT(0x1f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03A4
        gbc.setState(0x64c0, 0x5f32, 0x8040, 0x422e, 0xd092, 0x541a, 0x1, 0x1);
        gbc.writeMem(0x64c0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5f32, gbc.sp());
        EXPECT(0x64c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03A5
        gbc.setState(0xb25c, 0xb66, 0x710, 0x8ca6, 0x6779, 0xd4ba, 0x0, 0x0);
        gbc.writeMem(0xb25c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb66, gbc.sp());
        EXPECT(0xb25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25c));
        EXPECT(0x61, gbc.readMem(0xb25d));
        // CB 61 03A7
        gbc.setState(0xd55e, 0xe6ee, 0x4fc0, 0xebbb, 0x1d76, 0x6f42, 0x0, 0x0);
        gbc.writeMem(0xd55e, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe6ee, gbc.sp());
        EXPECT(0xd560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55e));
        EXPECT(0x61, gbc.readMem(0xd55f));
        // CB 61 03A9
        gbc.setState(0xe83d, 0xf372, 0x88c0, 0xbf7b, 0x79f2, 0x3766, 0x0, 0x0);
        gbc.writeMem(0xe83d, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf372, gbc.sp());
        EXPECT(0xe83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83d));
        EXPECT(0x61, gbc.readMem(0xe83e));
        // CB 61 03AB
        gbc.setState(0x53b7, 0x3d59, 0x6400, 0x430e, 0x7c2b, 0x9c9b, 0x1, 0x1);
        gbc.writeMem(0x53b7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3d59, gbc.sp());
        EXPECT(0x53b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03AD
        gbc.setState(0x6765, 0x5fe1, 0x84d0, 0x5fdd, 0xe76d, 0x5d0d, 0x1, 0x0);
        gbc.writeMem(0x6765, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5fe1, gbc.sp());
        EXPECT(0x6767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03AE
        gbc.setState(0xcc3a, 0xb0c9, 0x21a0, 0xcc08, 0x430, 0x4e9e, 0x1, 0x1);
        gbc.writeMem(0xcc3a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb0c9, gbc.sp());
        EXPECT(0xcc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3a));
        EXPECT(0x61, gbc.readMem(0xcc3b));
        // CB 61 03AF
        gbc.setState(0x1807, 0x5fa6, 0xae20, 0xd4d6, 0x4456, 0x8b2b, 0x1, 0x0);
        gbc.writeMem(0x1807, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5fa6, gbc.sp());
        EXPECT(0x1809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03B0
        gbc.setState(0x1913, 0xd563, 0xf020, 0xf8d9, 0xd79a, 0x1e2, 0x0, 0x0);
        gbc.writeMem(0x1913, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd563, gbc.sp());
        EXPECT(0x1915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03B1
        gbc.setState(0x9419, 0xeb26, 0x2e80, 0xf8cc, 0x1a3a, 0x630a, 0x0, 0x1);
        gbc.writeMem(0x9419, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xeb26, gbc.sp());
        EXPECT(0x941b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9419));
        EXPECT(0x61, gbc.readMem(0x941a));
        // CB 61 03B2
        gbc.setState(0xa147, 0x913, 0x7b10, 0xe992, 0x42db, 0x8ed1, 0x0, 0x1);
        gbc.writeMem(0xa147, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x913, gbc.sp());
        EXPECT(0xa149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa147));
        EXPECT(0x61, gbc.readMem(0xa148));
        // CB 61 03B3
        gbc.setState(0xd4e0, 0xefd, 0xf1b0, 0x5011, 0xd4eb, 0x479c, 0x0, 0x1);
        gbc.writeMem(0xd4e0, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xefd, gbc.sp());
        EXPECT(0xd4e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e0));
        EXPECT(0x61, gbc.readMem(0xd4e1));
        // CB 61 03B4
        gbc.setState(0x3685, 0xcf81, 0x6010, 0x1af0, 0x3d2f, 0x9e46, 0x0, 0x0);
        gbc.writeMem(0x3685, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcf81, gbc.sp());
        EXPECT(0x3687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03B5
        gbc.setState(0x71fa, 0x7631, 0x79b0, 0xa56, 0x825b, 0xf460, 0x1, 0x0);
        gbc.writeMem(0x71fa, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7631, gbc.sp());
        EXPECT(0x71fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03B6
        gbc.setState(0xa7c9, 0x9111, 0xf1d0, 0xed76, 0x9a80, 0xdb75, 0x1, 0x1);
        gbc.writeMem(0xa7c9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9111, gbc.sp());
        EXPECT(0xa7cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c9));
        EXPECT(0x61, gbc.readMem(0xa7ca));
        // CB 61 03B7
        gbc.setState(0x1f02, 0xa231, 0x1480, 0xb1fd, 0x31a8, 0x9174, 0x0, 0x1);
        gbc.writeMem(0x1f02, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa231, gbc.sp());
        EXPECT(0x1f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03B8
        gbc.setState(0x25a9, 0x5040, 0xbd00, 0xcd4e, 0xb284, 0x21bb, 0x0, 0x1);
        gbc.writeMem(0x25a9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5040, gbc.sp());
        EXPECT(0x25ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03B9
        gbc.setState(0x598c, 0xb6d3, 0x76e0, 0x823b, 0x746b, 0xc1d7, 0x0, 0x0);
        gbc.writeMem(0x598c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb6d3, gbc.sp());
        EXPECT(0x598e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03BA
        gbc.setState(0x1f56, 0x74d0, 0x2790, 0x61fe, 0x3a4c, 0x7242, 0x1, 0x0);
        gbc.writeMem(0x1f56, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x74d0, gbc.sp());
        EXPECT(0x1f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03BB
        gbc.setState(0x5dd9, 0xe923, 0x32e0, 0x90a9, 0xd51, 0xfdf0, 0x0, 0x1);
        gbc.writeMem(0x5dd9, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe923, gbc.sp());
        EXPECT(0x5ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03BC
        gbc.setState(0x9eec, 0x3e5, 0x8760, 0xcd0e, 0xa1e5, 0x70d, 0x1, 0x1);
        gbc.writeMem(0x9eec, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3e5, gbc.sp());
        EXPECT(0x9eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eec));
        EXPECT(0x61, gbc.readMem(0x9eed));
        // CB 61 03BD
        gbc.setState(0x9d3, 0x4748, 0x4f50, 0xa9c2, 0x96f1, 0xd6dd, 0x0, 0x0);
        gbc.writeMem(0x9d3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4748, gbc.sp());
        EXPECT(0x9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03BE
        gbc.setState(0x9d21, 0x5f41, 0xb530, 0xa79b, 0xba35, 0x7700, 0x0, 0x0);
        gbc.writeMem(0x9d21, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5f41, gbc.sp());
        EXPECT(0x9d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d21));
        EXPECT(0x61, gbc.readMem(0x9d22));
        // CB 61 03BF
        gbc.setState(0x9c79, 0x9c31, 0x8c30, 0x6141, 0x2d61, 0xddcd, 0x1, 0x1);
        gbc.writeMem(0x9c79, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9c31, gbc.sp());
        EXPECT(0x9c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c79));
        EXPECT(0x61, gbc.readMem(0x9c7a));
        // CB 61 03C0
        gbc.setState(0xba38, 0x43a7, 0xb980, 0x5f38, 0xa657, 0xdd59, 0x0, 0x1);
        gbc.writeMem(0xba38, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x43a7, gbc.sp());
        EXPECT(0xba3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba38));
        EXPECT(0x61, gbc.readMem(0xba39));
        // CB 61 03C1
        gbc.setState(0x1540, 0xb256, 0xa910, 0x1bd1, 0xb78f, 0x713f, 0x1, 0x1);
        gbc.writeMem(0x1540, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb256, gbc.sp());
        EXPECT(0x1542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03C2
        gbc.setState(0xd2c7, 0x6cac, 0xad0, 0x24a2, 0xd1f2, 0x3012, 0x0, 0x1);
        gbc.writeMem(0xd2c7, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6cac, gbc.sp());
        EXPECT(0xd2c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c7));
        EXPECT(0x61, gbc.readMem(0xd2c8));
        // CB 61 03C3
        gbc.setState(0xd75, 0x743c, 0x5c0, 0x8500, 0xb90a, 0x94c9, 0x0, 0x0);
        gbc.writeMem(0xd75, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x743c, gbc.sp());
        EXPECT(0xd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03C4
        gbc.setState(0x9cf3, 0xcca8, 0x6ad0, 0x7415, 0xc3da, 0xb0c7, 0x0, 0x0);
        gbc.writeMem(0x9cf3, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcca8, gbc.sp());
        EXPECT(0x9cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf3));
        EXPECT(0x61, gbc.readMem(0x9cf4));
        // CB 61 03C5
        gbc.setState(0xcb92, 0xb046, 0xc440, 0xf09e, 0x5761, 0xa36e, 0x1, 0x1);
        gbc.writeMem(0xcb92, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb046, gbc.sp());
        EXPECT(0xcb94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb92));
        EXPECT(0x61, gbc.readMem(0xcb93));
        // CB 61 03C7
        gbc.setState(0x40cb, 0xbe35, 0xf110, 0x56fd, 0x8c08, 0x21e3, 0x1, 0x1);
        gbc.writeMem(0x40cb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbe35, gbc.sp());
        EXPECT(0x40cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03C8
        gbc.setState(0x8a79, 0xa7b7, 0x91c0, 0x3b6, 0x4de2, 0x848e, 0x1, 0x0);
        gbc.writeMem(0x8a79, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa7b7, gbc.sp());
        EXPECT(0x8a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a79));
        EXPECT(0x61, gbc.readMem(0x8a7a));
        // CB 61 03C9
        gbc.setState(0xe91b, 0x6180, 0xd2e0, 0x83e3, 0xb134, 0x8a7c, 0x0, 0x0);
        gbc.writeMem(0xe91b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6180, gbc.sp());
        EXPECT(0xe91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91b));
        EXPECT(0x61, gbc.readMem(0xe91c));
        // CB 61 03CA
        gbc.setState(0xc644, 0x8f44, 0xd3f0, 0x49e3, 0x219, 0xb2ea, 0x0, 0x0);
        gbc.writeMem(0xc644, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8f44, gbc.sp());
        EXPECT(0xc646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc644));
        EXPECT(0x61, gbc.readMem(0xc645));
        // CB 61 03CB
        gbc.setState(0xb4d5, 0x2a09, 0x1640, 0x43e4, 0x3053, 0x7c43, 0x0, 0x0);
        gbc.writeMem(0xb4d5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2a09, gbc.sp());
        EXPECT(0xb4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d5));
        EXPECT(0x61, gbc.readMem(0xb4d6));
        // CB 61 03CC
        gbc.setState(0xd5eb, 0xeeda, 0xbd00, 0x4984, 0x9efe, 0xd09b, 0x0, 0x0);
        gbc.writeMem(0xd5eb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeeda, gbc.sp());
        EXPECT(0xd5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5eb));
        EXPECT(0x61, gbc.readMem(0xd5ec));
        // CB 61 03CD
        gbc.setState(0x2613, 0x435, 0x7910, 0xbf56, 0x4281, 0xa761, 0x1, 0x1);
        gbc.writeMem(0x2613, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x435, gbc.sp());
        EXPECT(0x2615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03CE
        gbc.setState(0x6b02, 0x9b00, 0x6520, 0xd412, 0x6f58, 0xafd0, 0x1, 0x0);
        gbc.writeMem(0x6b02, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9b00, gbc.sp());
        EXPECT(0x6b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03CF
        gbc.setState(0x9988, 0x338f, 0x11e0, 0x2849, 0x4edc, 0xb4f6, 0x1, 0x1);
        gbc.writeMem(0x9988, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x338f, gbc.sp());
        EXPECT(0x998a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9988));
        EXPECT(0x61, gbc.readMem(0x9989));
        // CB 61 03D0
        gbc.setState(0xd7a6, 0x2d0a, 0x3740, 0x8b84, 0x8ca9, 0x8e0d, 0x1, 0x0);
        gbc.writeMem(0xd7a6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2d0a, gbc.sp());
        EXPECT(0xd7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a6));
        EXPECT(0x61, gbc.readMem(0xd7a7));
        // CB 61 03D1
        gbc.setState(0x855b, 0xe18c, 0xe3b0, 0x14e8, 0x391c, 0x67c0, 0x0, 0x1);
        gbc.writeMem(0x855b, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe18c, gbc.sp());
        EXPECT(0x855d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855b));
        EXPECT(0x61, gbc.readMem(0x855c));
        // CB 61 03D2
        gbc.setState(0x4ba4, 0x5e83, 0x9410, 0xdab, 0x7c3b, 0x72f7, 0x1, 0x0);
        gbc.writeMem(0x4ba4, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5e83, gbc.sp());
        EXPECT(0x4ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03D3
        gbc.setState(0x6710, 0x4630, 0x5b20, 0x4a46, 0x2f78, 0x37f2, 0x1, 0x1);
        gbc.writeMem(0x6710, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4630, gbc.sp());
        EXPECT(0x6712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03D4
        gbc.setState(0x99ca, 0xe56, 0x4940, 0x425c, 0xbc40, 0x877e, 0x0, 0x0);
        gbc.writeMem(0x99ca, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe56, gbc.sp());
        EXPECT(0x99cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ca));
        EXPECT(0x61, gbc.readMem(0x99cb));
        // CB 61 03D5
        gbc.setState(0x114a, 0xe5c4, 0x1180, 0xe176, 0x429b, 0xc731, 0x0, 0x1);
        gbc.writeMem(0x114a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe5c4, gbc.sp());
        EXPECT(0x114c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03D6
        gbc.setState(0xe6a6, 0x3900, 0x64e0, 0x1ba2, 0x9fb5, 0xe3b, 0x1, 0x1);
        gbc.writeMem(0xe6a6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3900, gbc.sp());
        EXPECT(0xe6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a6));
        EXPECT(0x61, gbc.readMem(0xe6a7));
        // CB 61 03D8
        gbc.setState(0x26f5, 0x7b2e, 0x5890, 0xdb7b, 0x2052, 0x9600, 0x1, 0x1);
        gbc.writeMem(0x26f5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7b2e, gbc.sp());
        EXPECT(0x26f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03D9
        gbc.setState(0xc804, 0xdec6, 0xdb30, 0x8aca, 0x8a4a, 0xd40f, 0x0, 0x1);
        gbc.writeMem(0xc804, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdec6, gbc.sp());
        EXPECT(0xc806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc804));
        EXPECT(0x61, gbc.readMem(0xc805));
        // CB 61 03DA
        gbc.setState(0x91fe, 0x4ad4, 0x2f10, 0xfddf, 0x3b9a, 0x4c73, 0x1, 0x0);
        gbc.writeMem(0x91fe, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4ad4, gbc.sp());
        EXPECT(0x9200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fe));
        EXPECT(0x61, gbc.readMem(0x91ff));
        // CB 61 03DB
        gbc.setState(0x91c, 0x10de, 0x22a0, 0xde56, 0xcde, 0xecdb, 0x0, 0x1);
        gbc.writeMem(0x91c, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x10de, gbc.sp());
        EXPECT(0x91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03DC
        gbc.setState(0x52b5, 0xa979, 0xe490, 0x6bc, 0xa1d2, 0xce63, 0x0, 0x1);
        gbc.writeMem(0x52b5, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa979, gbc.sp());
        EXPECT(0x52b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03DD
        gbc.setState(0x48bb, 0x28ff, 0xc020, 0x6097, 0x1c41, 0x6cff, 0x0, 0x0);
        gbc.writeMem(0x48bb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x28ff, gbc.sp());
        EXPECT(0x48bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03DE
        gbc.setState(0x4a34, 0x5f27, 0x36a0, 0xd934, 0x1263, 0x5e55, 0x1, 0x0);
        gbc.writeMem(0x4a34, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5f27, gbc.sp());
        EXPECT(0x4a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03DF
        gbc.setState(0xbb2a, 0x5912, 0xe390, 0xce27, 0x882c, 0x7910, 0x0, 0x0);
        gbc.writeMem(0xbb2a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5912, gbc.sp());
        EXPECT(0xbb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2a));
        EXPECT(0x61, gbc.readMem(0xbb2b));
        // CB 61 03E0
        gbc.setState(0x458a, 0x3634, 0x6230, 0x43bd, 0x2ec2, 0xcb9e, 0x1, 0x0);
        gbc.writeMem(0x458a, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3634, gbc.sp());
        EXPECT(0x458c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03E1
        gbc.setState(0x79d6, 0xde36, 0xfb70, 0xdd1a, 0x8667, 0xd9c1, 0x1, 0x1);
        gbc.writeMem(0x79d6, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xde36, gbc.sp());
        EXPECT(0x79d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03E2
        gbc.setState(0x97be, 0x3bd6, 0x95f0, 0xefd6, 0x7f0f, 0x6097, 0x0, 0x1);
        gbc.writeMem(0x97be, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3bd6, gbc.sp());
        EXPECT(0x97c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97be));
        EXPECT(0x61, gbc.readMem(0x97bf));
        // CB 61 03E3
        gbc.setState(0x5d58, 0x84b1, 0x2fb0, 0xf5ad, 0x23dd, 0x2fc1, 0x0, 0x1);
        gbc.writeMem(0x5d58, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x84b1, gbc.sp());
        EXPECT(0x5d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03E4
        gbc.setState(0xc2e8, 0x6a72, 0xb9c0, 0xba35, 0x2f69, 0xa5d4, 0x0, 0x0);
        gbc.writeMem(0xc2e8, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6a72, gbc.sp());
        EXPECT(0xc2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e8));
        EXPECT(0x61, gbc.readMem(0xc2e9));
        // CB 61 03E5
        gbc.setState(0x72eb, 0x928a, 0xbee0, 0x93f1, 0xb1c8, 0x77c9, 0x0, 0x1);
        gbc.writeMem(0x72eb, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x928a, gbc.sp());
        EXPECT(0x72ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 61 03E6
        gbc.setState(0x2656, 0xd604, 0x33d0, 0xcb12, 0xaadf, 0x43b1, 0x0, 0x1);
        gbc.writeMem(0x2656, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd604, gbc.sp());
        EXPECT(0x2658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 61 03E7
        gbc.setState(0x2887, 0xde76, 0x84a0, 0xb6ca, 0x9e12, 0x81b8, 0x0, 0x0);
        gbc.writeMem(0x2887, { 0xcb, 0x61 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xde76, gbc.sp());
        EXPECT(0x2889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
