    TEST(gbcemu, opcode_cb_d7) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB D7 0000
        gbc.setState(0x4178, 0x95dd, 0x4550, 0xc9e, 0x9492, 0x8983, 0x1, 0x1);
        gbc.writeMem(0x4178, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x95dd, gbc.sp());
        EXPECT(0x417a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0001
        gbc.setState(0xd471, 0xcc55, 0x9490, 0xa91f, 0xf4b7, 0x9942, 0x0, 0x0);
        gbc.writeMem(0xd471, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcc55, gbc.sp());
        EXPECT(0xd473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd471));
        EXPECT(0xd7, gbc.readMem(0xd472));
        // CB D7 0002
        gbc.setState(0x4c1b, 0x423b, 0x6720, 0x34a, 0xc37b, 0xa33d, 0x1, 0x0);
        gbc.writeMem(0x4c1b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x423b, gbc.sp());
        EXPECT(0x4c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0003
        gbc.setState(0x7ac0, 0x3d5b, 0x9430, 0x9789, 0x901, 0xa02b, 0x0, 0x0);
        gbc.writeMem(0x7ac0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3d5b, gbc.sp());
        EXPECT(0x7ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0004
        gbc.setState(0xa9d8, 0xaf1, 0x9e70, 0x35ca, 0x38b, 0xa7b9, 0x1, 0x1);
        gbc.writeMem(0xa9d8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xaf1, gbc.sp());
        EXPECT(0xa9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d8));
        EXPECT(0xd7, gbc.readMem(0xa9d9));
        // CB D7 0005
        gbc.setState(0xbada, 0x70bc, 0x4d30, 0x9ee6, 0x2352, 0x9d1d, 0x1, 0x0);
        gbc.writeMem(0xbada, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x70bc, gbc.sp());
        EXPECT(0xbadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbada));
        EXPECT(0xd7, gbc.readMem(0xbadb));
        // CB D7 0006
        gbc.setState(0x28e8, 0x510e, 0xf180, 0x680b, 0x195b, 0x6ba6, 0x0, 0x0);
        gbc.writeMem(0x28e8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x510e, gbc.sp());
        EXPECT(0x28ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0007
        gbc.setState(0xc815, 0x7749, 0x3d30, 0x7e5e, 0x84d4, 0x5b06, 0x1, 0x0);
        gbc.writeMem(0xc815, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7749, gbc.sp());
        EXPECT(0xc817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc815));
        EXPECT(0xd7, gbc.readMem(0xc816));
        // CB D7 0008
        gbc.setState(0xcf00, 0xbb6a, 0x7070, 0xb87, 0xb7a4, 0x1607, 0x0, 0x1);
        gbc.writeMem(0xcf00, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbb6a, gbc.sp());
        EXPECT(0xcf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf00));
        EXPECT(0xd7, gbc.readMem(0xcf01));
        // CB D7 0009
        gbc.setState(0x9b4e, 0x1de7, 0x2490, 0x9d49, 0xac8b, 0xeaf5, 0x1, 0x0);
        gbc.writeMem(0x9b4e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1de7, gbc.sp());
        EXPECT(0x9b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4e));
        EXPECT(0xd7, gbc.readMem(0x9b4f));
        // CB D7 000A
        gbc.setState(0x1663, 0x2940, 0x5b80, 0x662a, 0x9619, 0xb125, 0x0, 0x0);
        gbc.writeMem(0x1663, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2940, gbc.sp());
        EXPECT(0x1665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 000B
        gbc.setState(0xe09e, 0x6b7, 0x18c0, 0xa0aa, 0x31a7, 0x69fd, 0x1, 0x1);
        gbc.writeMem(0xe09e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6b7, gbc.sp());
        EXPECT(0xe0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09e));
        EXPECT(0xd7, gbc.readMem(0xe09f));
        // CB D7 000C
        gbc.setState(0x6b38, 0x4aff, 0xe400, 0x5e0a, 0x9c51, 0xa10f, 0x1, 0x0);
        gbc.writeMem(0x6b38, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4aff, gbc.sp());
        EXPECT(0x6b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 000D
        gbc.setState(0x2aa, 0x9e03, 0xe190, 0x7987, 0xf78f, 0x76f0, 0x1, 0x0);
        gbc.writeMem(0x2aa, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9e03, gbc.sp());
        EXPECT(0x2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 000E
        gbc.setState(0x28ad, 0x17ef, 0x8c70, 0x3c91, 0x4d18, 0x39f4, 0x1, 0x1);
        gbc.writeMem(0x28ad, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x17ef, gbc.sp());
        EXPECT(0x28af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 000F
        gbc.setState(0xce7c, 0x5077, 0xb3b0, 0x7c2, 0xabb2, 0x9ae7, 0x1, 0x1);
        gbc.writeMem(0xce7c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5077, gbc.sp());
        EXPECT(0xce7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7c));
        EXPECT(0xd7, gbc.readMem(0xce7d));
        // CB D7 0012
        gbc.setState(0xe3d2, 0xd681, 0x93f0, 0xd433, 0x9d3d, 0x3a3d, 0x0, 0x1);
        gbc.writeMem(0xe3d2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd681, gbc.sp());
        EXPECT(0xe3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d2));
        EXPECT(0xd7, gbc.readMem(0xe3d3));
        // CB D7 0013
        gbc.setState(0x731, 0x11af, 0x3bb0, 0x47a, 0xcc1, 0x94ab, 0x1, 0x0);
        gbc.writeMem(0x731, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x11af, gbc.sp());
        EXPECT(0x733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0014
        gbc.setState(0xd9b8, 0x116f, 0xd30, 0x1021, 0xe12d, 0x851, 0x1, 0x0);
        gbc.writeMem(0xd9b8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x116f, gbc.sp());
        EXPECT(0xd9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b8));
        EXPECT(0xd7, gbc.readMem(0xd9b9));
        // CB D7 0015
        gbc.setState(0x3960, 0xa12b, 0x8400, 0xb761, 0x64b1, 0xd1db, 0x0, 0x1);
        gbc.writeMem(0x3960, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa12b, gbc.sp());
        EXPECT(0x3962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0016
        gbc.setState(0x2857, 0x6e1b, 0xacd0, 0xc88d, 0x7009, 0x21a, 0x0, 0x0);
        gbc.writeMem(0x2857, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6e1b, gbc.sp());
        EXPECT(0x2859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0017
        gbc.setState(0x2d04, 0x39fc, 0x20e0, 0xca19, 0xfd17, 0xde44, 0x0, 0x0);
        gbc.writeMem(0x2d04, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0x2d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0018
        gbc.setState(0xb884, 0xd73, 0x3af0, 0x2266, 0x2561, 0x8150, 0x1, 0x1);
        gbc.writeMem(0xb884, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd73, gbc.sp());
        EXPECT(0xb886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb884));
        EXPECT(0xd7, gbc.readMem(0xb885));
        // CB D7 0019
        gbc.setState(0x34d5, 0x10e, 0x4ac0, 0x97de, 0x8e2d, 0xc33, 0x0, 0x0);
        gbc.writeMem(0x34d5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x10e, gbc.sp());
        EXPECT(0x34d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 001A
        gbc.setState(0x9e3e, 0x93c2, 0x1ee0, 0x800e, 0x594c, 0x4858, 0x1, 0x0);
        gbc.writeMem(0x9e3e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x93c2, gbc.sp());
        EXPECT(0x9e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3e));
        EXPECT(0xd7, gbc.readMem(0x9e3f));
        // CB D7 001B
        gbc.setState(0x283f, 0x4442, 0x94a0, 0x3416, 0x5a76, 0xc616, 0x1, 0x1);
        gbc.writeMem(0x283f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4442, gbc.sp());
        EXPECT(0x2841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 001C
        gbc.setState(0x7e24, 0x747e, 0x2a0, 0x8bfb, 0x926d, 0x26f9, 0x0, 0x0);
        gbc.writeMem(0x7e24, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x747e, gbc.sp());
        EXPECT(0x7e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 001D
        gbc.setState(0x80a6, 0x3a93, 0xdcb0, 0xa57e, 0xc634, 0xff11, 0x1, 0x1);
        gbc.writeMem(0x80a6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3a93, gbc.sp());
        EXPECT(0x80a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a6));
        EXPECT(0xd7, gbc.readMem(0x80a7));
        // CB D7 001E
        gbc.setState(0x4925, 0x3d45, 0x8a90, 0x3892, 0x9614, 0xcbd3, 0x1, 0x0);
        gbc.writeMem(0x4925, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3d45, gbc.sp());
        EXPECT(0x4927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0020
        gbc.setState(0x3667, 0x1cc1, 0xcce0, 0x73ba, 0xb690, 0xda02, 0x1, 0x1);
        gbc.writeMem(0x3667, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1cc1, gbc.sp());
        EXPECT(0x3669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0021
        gbc.setState(0xe37c, 0x8920, 0xd950, 0x7862, 0x996a, 0x7245, 0x1, 0x1);
        gbc.writeMem(0xe37c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8920, gbc.sp());
        EXPECT(0xe37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37c));
        EXPECT(0xd7, gbc.readMem(0xe37d));
        // CB D7 0022
        gbc.setState(0x18c7, 0xcb6e, 0xc770, 0xdb9c, 0x149e, 0x83cb, 0x0, 0x1);
        gbc.writeMem(0x18c7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcb6e, gbc.sp());
        EXPECT(0x18c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0023
        gbc.setState(0x67af, 0x13a0, 0xff00, 0x9e56, 0xaf63, 0xec1a, 0x1, 0x1);
        gbc.writeMem(0x67af, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x13a0, gbc.sp());
        EXPECT(0x67b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0024
        gbc.setState(0xe457, 0xe0c1, 0x3ef0, 0x3e56, 0x1a9f, 0x5876, 0x1, 0x1);
        gbc.writeMem(0xe457, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe0c1, gbc.sp());
        EXPECT(0xe459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe457));
        EXPECT(0xd7, gbc.readMem(0xe458));
        // CB D7 0025
        gbc.setState(0xcd95, 0xdef9, 0x23d0, 0x4d2e, 0x703, 0x4798, 0x1, 0x0);
        gbc.writeMem(0xcd95, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdef9, gbc.sp());
        EXPECT(0xcd97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd95));
        EXPECT(0xd7, gbc.readMem(0xcd96));
        // CB D7 0026
        gbc.setState(0x9c1f, 0x771a, 0x65b0, 0xd98e, 0xeb04, 0xab0b, 0x0, 0x1);
        gbc.writeMem(0x9c1f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x771a, gbc.sp());
        EXPECT(0x9c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c1f));
        EXPECT(0xd7, gbc.readMem(0x9c20));
        // CB D7 0027
        gbc.setState(0x6783, 0x955c, 0xf680, 0x11f7, 0xba6f, 0x27ed, 0x1, 0x1);
        gbc.writeMem(0x6783, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x955c, gbc.sp());
        EXPECT(0x6785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0028
        gbc.setState(0x1462, 0x2523, 0x73a0, 0x1bc8, 0xd7c2, 0x78c9, 0x1, 0x0);
        gbc.writeMem(0x1462, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2523, gbc.sp());
        EXPECT(0x1464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0029
        gbc.setState(0x6565, 0xaf36, 0x8600, 0x9ea4, 0x1d58, 0x745c, 0x0, 0x1);
        gbc.writeMem(0x6565, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xaf36, gbc.sp());
        EXPECT(0x6567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 002B
        gbc.setState(0x2e53, 0x9c69, 0x7580, 0x54d3, 0xd9d7, 0xec7a, 0x0, 0x1);
        gbc.writeMem(0x2e53, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9c69, gbc.sp());
        EXPECT(0x2e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 002C
        gbc.setState(0x6efc, 0xeb09, 0x47c0, 0xe2da, 0x5915, 0x1706, 0x1, 0x0);
        gbc.writeMem(0x6efc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xeb09, gbc.sp());
        EXPECT(0x6efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 002D
        gbc.setState(0x3d85, 0xcce8, 0x85e0, 0x8233, 0x6c7e, 0xf20d, 0x0, 0x0);
        gbc.writeMem(0x3d85, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcce8, gbc.sp());
        EXPECT(0x3d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 002E
        gbc.setState(0x830b, 0xe1a9, 0x1090, 0xcae8, 0xd3f7, 0xc596, 0x0, 0x0);
        gbc.writeMem(0x830b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe1a9, gbc.sp());
        EXPECT(0x830d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830b));
        EXPECT(0xd7, gbc.readMem(0x830c));
        // CB D7 002F
        gbc.setState(0xd0b4, 0x2d2a, 0xefb0, 0xb09a, 0x3e3c, 0x296b, 0x1, 0x1);
        gbc.writeMem(0xd0b4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2d2a, gbc.sp());
        EXPECT(0xd0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b4));
        EXPECT(0xd7, gbc.readMem(0xd0b5));
        // CB D7 0031
        gbc.setState(0xa07d, 0x7c0d, 0x490, 0x967b, 0x4620, 0xb06b, 0x0, 0x1);
        gbc.writeMem(0xa07d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7c0d, gbc.sp());
        EXPECT(0xa07f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa07d));
        EXPECT(0xd7, gbc.readMem(0xa07e));
        // CB D7 0032
        gbc.setState(0x6d47, 0x9153, 0x6ce0, 0x3dab, 0x9500, 0x38e4, 0x0, 0x1);
        gbc.writeMem(0x6d47, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9153, gbc.sp());
        EXPECT(0x6d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0033
        gbc.setState(0xb32b, 0x1e21, 0xce80, 0xb3be, 0x76b6, 0xdd, 0x1, 0x0);
        gbc.writeMem(0xb32b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1e21, gbc.sp());
        EXPECT(0xb32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32b));
        EXPECT(0xd7, gbc.readMem(0xb32c));
        // CB D7 0034
        gbc.setState(0x53dd, 0xdefb, 0xe640, 0xa8be, 0x360e, 0xff6d, 0x1, 0x0);
        gbc.writeMem(0x53dd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdefb, gbc.sp());
        EXPECT(0x53df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0036
        gbc.setState(0xa68b, 0x87e8, 0x2300, 0xaf28, 0xd0fb, 0x6f83, 0x0, 0x0);
        gbc.writeMem(0xa68b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x87e8, gbc.sp());
        EXPECT(0xa68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68b));
        EXPECT(0xd7, gbc.readMem(0xa68c));
        // CB D7 0037
        gbc.setState(0x959d, 0x9870, 0x1570, 0x67e7, 0x5a67, 0xcc73, 0x1, 0x0);
        gbc.writeMem(0x959d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9870, gbc.sp());
        EXPECT(0x959f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959d));
        EXPECT(0xd7, gbc.readMem(0x959e));
        // CB D7 0038
        gbc.setState(0x46f0, 0x5965, 0x8d90, 0xe2bf, 0xf8f3, 0xdb9b, 0x0, 0x1);
        gbc.writeMem(0x46f0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5965, gbc.sp());
        EXPECT(0x46f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 003C
        gbc.setState(0xc4ff, 0x7e7, 0x3a0, 0xf092, 0x8aba, 0xf732, 0x0, 0x1);
        gbc.writeMem(0xc4ff, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7e7, gbc.sp());
        EXPECT(0xc501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ff));
        EXPECT(0xd7, gbc.readMem(0xc500));
        // CB D7 003D
        gbc.setState(0xb5b3, 0xd227, 0x3450, 0x9868, 0xf65f, 0x8c86, 0x0, 0x1);
        gbc.writeMem(0xb5b3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd227, gbc.sp());
        EXPECT(0xb5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b3));
        EXPECT(0xd7, gbc.readMem(0xb5b4));
        // CB D7 003E
        gbc.setState(0x8d85, 0x5b6b, 0xef50, 0x2e87, 0xb03b, 0x2114, 0x1, 0x1);
        gbc.writeMem(0x8d85, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5b6b, gbc.sp());
        EXPECT(0x8d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d85));
        EXPECT(0xd7, gbc.readMem(0x8d86));
        // CB D7 003F
        gbc.setState(0x6fe4, 0xfebc, 0xac30, 0x17, 0x25b4, 0xb36e, 0x0, 0x0);
        gbc.writeMem(0x6fe4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfebc, gbc.sp());
        EXPECT(0x6fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0040
        gbc.setState(0x4e86, 0x67b3, 0x9690, 0xb84b, 0xa9a7, 0x35bf, 0x0, 0x1);
        gbc.writeMem(0x4e86, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x67b3, gbc.sp());
        EXPECT(0x4e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0041
        gbc.setState(0x3dd8, 0x7147, 0x4070, 0xce40, 0x2d, 0x9ba6, 0x0, 0x0);
        gbc.writeMem(0x3dd8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7147, gbc.sp());
        EXPECT(0x3dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0042
        gbc.setState(0x625, 0xe35, 0xac00, 0xbcf7, 0x4f5b, 0xa57f, 0x1, 0x1);
        gbc.writeMem(0x625, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe35, gbc.sp());
        EXPECT(0x627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0043
        gbc.setState(0x9b99, 0x4b0, 0xe890, 0xd3f1, 0x656e, 0xb39f, 0x1, 0x1);
        gbc.writeMem(0x9b99, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4b0, gbc.sp());
        EXPECT(0x9b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b99));
        EXPECT(0xd7, gbc.readMem(0x9b9a));
        // CB D7 0044
        gbc.setState(0x134a, 0xc176, 0xd150, 0x3fd8, 0xb06a, 0x9c15, 0x0, 0x1);
        gbc.writeMem(0x134a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc176, gbc.sp());
        EXPECT(0x134c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0045
        gbc.setState(0x12dc, 0xf997, 0x5880, 0x172c, 0x2668, 0xaff3, 0x1, 0x1);
        gbc.writeMem(0x12dc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf997, gbc.sp());
        EXPECT(0x12de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0046
        gbc.setState(0x2012, 0x733a, 0x79f0, 0x9470, 0xd3f8, 0xe938, 0x0, 0x1);
        gbc.writeMem(0x2012, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x733a, gbc.sp());
        EXPECT(0x2014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0047
        gbc.setState(0x77ee, 0x955c, 0x3bb0, 0x244c, 0x24cf, 0xac03, 0x1, 0x1);
        gbc.writeMem(0x77ee, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x955c, gbc.sp());
        EXPECT(0x77f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0048
        gbc.setState(0x65d4, 0x9f97, 0x69a0, 0x8ba7, 0x3d3d, 0x524d, 0x0, 0x0);
        gbc.writeMem(0x65d4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9f97, gbc.sp());
        EXPECT(0x65d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0049
        gbc.setState(0x3e3d, 0x291a, 0x6160, 0x2851, 0x9e37, 0xb335, 0x1, 0x0);
        gbc.writeMem(0x3e3d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x291a, gbc.sp());
        EXPECT(0x3e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 004A
        gbc.setState(0x2089, 0xe6a0, 0x290, 0xe7e1, 0xfc3c, 0x1c9, 0x0, 0x0);
        gbc.writeMem(0x2089, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe6a0, gbc.sp());
        EXPECT(0x208b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 004B
        gbc.setState(0x6f1e, 0x2071, 0x1090, 0x53da, 0xb7f6, 0x6563, 0x1, 0x0);
        gbc.writeMem(0x6f1e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2071, gbc.sp());
        EXPECT(0x6f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 004C
        gbc.setState(0x62ff, 0xd6db, 0x7f90, 0xa20a, 0xf8f, 0x6d0e, 0x0, 0x1);
        gbc.writeMem(0x62ff, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd6db, gbc.sp());
        EXPECT(0x6301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 004D
        gbc.setState(0xbf82, 0x2f89, 0x6140, 0x23b4, 0x8520, 0x92ed, 0x0, 0x0);
        gbc.writeMem(0xbf82, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2f89, gbc.sp());
        EXPECT(0xbf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf82));
        EXPECT(0xd7, gbc.readMem(0xbf83));
        // CB D7 004E
        gbc.setState(0xc7ac, 0x1268, 0xcd90, 0xe6c2, 0x1eef, 0x282d, 0x1, 0x1);
        gbc.writeMem(0xc7ac, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1268, gbc.sp());
        EXPECT(0xc7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ac));
        EXPECT(0xd7, gbc.readMem(0xc7ad));
        // CB D7 004F
        gbc.setState(0xa85, 0xb365, 0x7fe0, 0xad05, 0x6a22, 0x2aed, 0x0, 0x1);
        gbc.writeMem(0xa85, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb365, gbc.sp());
        EXPECT(0xa87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0050
        gbc.setState(0x72e6, 0x801d, 0x31c0, 0xfb87, 0xc9d7, 0xe2a2, 0x1, 0x1);
        gbc.writeMem(0x72e6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x801d, gbc.sp());
        EXPECT(0x72e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0052
        gbc.setState(0x3d1f, 0xf559, 0xcb90, 0xea05, 0xbec, 0x960a, 0x1, 0x0);
        gbc.writeMem(0x3d1f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf559, gbc.sp());
        EXPECT(0x3d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0053
        gbc.setState(0x300b, 0x85b7, 0x2d50, 0xd7d, 0x1146, 0x7c5e, 0x1, 0x1);
        gbc.writeMem(0x300b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x85b7, gbc.sp());
        EXPECT(0x300d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0054
        gbc.setState(0x260b, 0xd414, 0x2d20, 0xe9b9, 0x5cf8, 0xbfdd, 0x0, 0x0);
        gbc.writeMem(0x260b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd414, gbc.sp());
        EXPECT(0x260d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0055
        gbc.setState(0x2ce8, 0xc74c, 0xecc0, 0x9c61, 0xd0cf, 0x359a, 0x1, 0x0);
        gbc.writeMem(0x2ce8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc74c, gbc.sp());
        EXPECT(0x2cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0056
        gbc.setState(0x3956, 0xfc78, 0x4df0, 0xecc4, 0x3c91, 0x118e, 0x1, 0x0);
        gbc.writeMem(0x3956, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfc78, gbc.sp());
        EXPECT(0x3958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0057
        gbc.setState(0xcbb8, 0x9c61, 0x2f80, 0x888c, 0x80a9, 0x4e60, 0x1, 0x0);
        gbc.writeMem(0xcbb8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9c61, gbc.sp());
        EXPECT(0xcbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb8));
        EXPECT(0xd7, gbc.readMem(0xcbb9));
        // CB D7 0058
        gbc.setState(0xd04c, 0x7878, 0x88d0, 0xc231, 0x952f, 0xf494, 0x0, 0x0);
        gbc.writeMem(0xd04c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7878, gbc.sp());
        EXPECT(0xd04e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04c));
        EXPECT(0xd7, gbc.readMem(0xd04d));
        // CB D7 0059
        gbc.setState(0x11af, 0xb339, 0xa640, 0x399c, 0x5157, 0x9fae, 0x1, 0x1);
        gbc.writeMem(0x11af, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb339, gbc.sp());
        EXPECT(0x11b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 005A
        gbc.setState(0xc5e9, 0xbbc3, 0xfe30, 0x9e08, 0x459c, 0x7799, 0x0, 0x1);
        gbc.writeMem(0xc5e9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbbc3, gbc.sp());
        EXPECT(0xc5eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e9));
        EXPECT(0xd7, gbc.readMem(0xc5ea));
        // CB D7 005B
        gbc.setState(0x2cc1, 0xbc9, 0xe5e0, 0xc78, 0x530, 0x1365, 0x0, 0x0);
        gbc.writeMem(0x2cc1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbc9, gbc.sp());
        EXPECT(0x2cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 005C
        gbc.setState(0x6cf1, 0xa73e, 0xdd20, 0x57b4, 0x8f2e, 0xfea6, 0x1, 0x1);
        gbc.writeMem(0x6cf1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa73e, gbc.sp());
        EXPECT(0x6cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 005D
        gbc.setState(0x25b1, 0xf5f5, 0x8840, 0x9684, 0x4aa8, 0x1d1a, 0x1, 0x0);
        gbc.writeMem(0x25b1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf5f5, gbc.sp());
        EXPECT(0x25b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 005E
        gbc.setState(0x41ec, 0xe505, 0x7ff0, 0x36a9, 0x6e78, 0xbdc9, 0x1, 0x1);
        gbc.writeMem(0x41ec, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe505, gbc.sp());
        EXPECT(0x41ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 005F
        gbc.setState(0x899b, 0x187c, 0xf200, 0xb6be, 0x2d2, 0x5f45, 0x0, 0x1);
        gbc.writeMem(0x899b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x187c, gbc.sp());
        EXPECT(0x899d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x899b));
        EXPECT(0xd7, gbc.readMem(0x899c));
        // CB D7 0060
        gbc.setState(0xab33, 0x3073, 0xe60, 0x9e10, 0x5b4c, 0xfc0b, 0x0, 0x0);
        gbc.writeMem(0xab33, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3073, gbc.sp());
        EXPECT(0xab35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab33));
        EXPECT(0xd7, gbc.readMem(0xab34));
        // CB D7 0061
        gbc.setState(0xdf24, 0x22a2, 0x8ba0, 0xcfe5, 0x5165, 0xb417, 0x1, 0x0);
        gbc.writeMem(0xdf24, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x22a2, gbc.sp());
        EXPECT(0xdf26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf24));
        EXPECT(0xd7, gbc.readMem(0xdf25));
        // CB D7 0062
        gbc.setState(0xaa2c, 0xf229, 0x1ed0, 0x643f, 0xebf4, 0x9fbd, 0x0, 0x1);
        gbc.writeMem(0xaa2c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf229, gbc.sp());
        EXPECT(0xaa2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2c));
        EXPECT(0xd7, gbc.readMem(0xaa2d));
        // CB D7 0063
        gbc.setState(0x42e4, 0x920, 0xb280, 0xc453, 0x4e8d, 0x1dd5, 0x1, 0x0);
        gbc.writeMem(0x42e4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x920, gbc.sp());
        EXPECT(0x42e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0064
        gbc.setState(0x427c, 0x4962, 0xadd0, 0xa15, 0xeac5, 0x7912, 0x1, 0x0);
        gbc.writeMem(0x427c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4962, gbc.sp());
        EXPECT(0x427e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0065
        gbc.setState(0x6ce7, 0x8759, 0x81f0, 0xd856, 0x27ac, 0xebb1, 0x0, 0x1);
        gbc.writeMem(0x6ce7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8759, gbc.sp());
        EXPECT(0x6ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0066
        gbc.setState(0x4278, 0xb53, 0x3630, 0x71ab, 0x91a5, 0xa3d7, 0x0, 0x1);
        gbc.writeMem(0x4278, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb53, gbc.sp());
        EXPECT(0x427a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0067
        gbc.setState(0xcc8c, 0xbbd6, 0xd7d0, 0x1b5c, 0xd61, 0xcd56, 0x1, 0x1);
        gbc.writeMem(0xcc8c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbbd6, gbc.sp());
        EXPECT(0xcc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8c));
        EXPECT(0xd7, gbc.readMem(0xcc8d));
        // CB D7 0068
        gbc.setState(0x3552, 0xfbdb, 0x8da0, 0x3bfb, 0x61f7, 0x5d22, 0x0, 0x1);
        gbc.writeMem(0x3552, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfbdb, gbc.sp());
        EXPECT(0x3554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0069
        gbc.setState(0xa4c2, 0x6eff, 0x90c0, 0x17ff, 0xae8a, 0x1b71, 0x0, 0x1);
        gbc.writeMem(0xa4c2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6eff, gbc.sp());
        EXPECT(0xa4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c2));
        EXPECT(0xd7, gbc.readMem(0xa4c3));
        // CB D7 006A
        gbc.setState(0x1130, 0xff5d, 0xed20, 0x9921, 0xfab, 0xd791, 0x0, 0x1);
        gbc.writeMem(0x1130, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xff5d, gbc.sp());
        EXPECT(0x1132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 006B
        gbc.setState(0x1158, 0x9211, 0xcbf0, 0x7115, 0x2541, 0x8a91, 0x1, 0x1);
        gbc.writeMem(0x1158, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9211, gbc.sp());
        EXPECT(0x115a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 006C
        gbc.setState(0x8584, 0x27d7, 0x9c60, 0xf370, 0xa8b6, 0xf147, 0x1, 0x1);
        gbc.writeMem(0x8584, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x27d7, gbc.sp());
        EXPECT(0x8586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8584));
        EXPECT(0xd7, gbc.readMem(0x8585));
        // CB D7 006D
        gbc.setState(0x336d, 0x46a3, 0x9ed0, 0xe0cb, 0x55b1, 0xe691, 0x1, 0x1);
        gbc.writeMem(0x336d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x46a3, gbc.sp());
        EXPECT(0x336f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 006E
        gbc.setState(0x749f, 0xeb7c, 0x3670, 0xc759, 0x12d8, 0xc43d, 0x1, 0x0);
        gbc.writeMem(0x749f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xeb7c, gbc.sp());
        EXPECT(0x74a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0070
        gbc.setState(0xe049, 0xbf01, 0xe550, 0x9e25, 0xc2d0, 0xf068, 0x1, 0x0);
        gbc.writeMem(0xe049, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbf01, gbc.sp());
        EXPECT(0xe04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe049));
        EXPECT(0xd7, gbc.readMem(0xe04a));
        // CB D7 0071
        gbc.setState(0x1a6b, 0xc3dc, 0xd220, 0xfbfb, 0x2bad, 0xe665, 0x0, 0x0);
        gbc.writeMem(0x1a6b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc3dc, gbc.sp());
        EXPECT(0x1a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0072
        gbc.setState(0x9242, 0x5e3f, 0x9530, 0xff73, 0x8bea, 0x9b5d, 0x1, 0x1);
        gbc.writeMem(0x9242, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5e3f, gbc.sp());
        EXPECT(0x9244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9242));
        EXPECT(0xd7, gbc.readMem(0x9243));
        // CB D7 0073
        gbc.setState(0x8180, 0x7b73, 0x59d0, 0x1220, 0x2d2, 0xce86, 0x1, 0x1);
        gbc.writeMem(0x8180, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7b73, gbc.sp());
        EXPECT(0x8182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8180));
        EXPECT(0xd7, gbc.readMem(0x8181));
        // CB D7 0074
        gbc.setState(0xaa62, 0xc32e, 0xc8b0, 0x422a, 0x4b1e, 0xcaff, 0x0, 0x1);
        gbc.writeMem(0xaa62, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc32e, gbc.sp());
        EXPECT(0xaa64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa62));
        EXPECT(0xd7, gbc.readMem(0xaa63));
        // CB D7 0075
        gbc.setState(0x56b8, 0xb761, 0x3510, 0xd504, 0x872a, 0xe30e, 0x0, 0x0);
        gbc.writeMem(0x56b8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb761, gbc.sp());
        EXPECT(0x56ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0076
        gbc.setState(0x17d3, 0x5dee, 0xc600, 0x9ba7, 0x8dbc, 0xfbaa, 0x1, 0x0);
        gbc.writeMem(0x17d3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5dee, gbc.sp());
        EXPECT(0x17d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0078
        gbc.setState(0xbfb6, 0x14ad, 0x8aa0, 0x8b6a, 0x3cd4, 0x4f23, 0x1, 0x0);
        gbc.writeMem(0xbfb6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x14ad, gbc.sp());
        EXPECT(0xbfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb6));
        EXPECT(0xd7, gbc.readMem(0xbfb7));
        // CB D7 0079
        gbc.setState(0x97d1, 0xd413, 0x52b0, 0x807c, 0xddb0, 0x4f02, 0x1, 0x1);
        gbc.writeMem(0x97d1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd413, gbc.sp());
        EXPECT(0x97d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d1));
        EXPECT(0xd7, gbc.readMem(0x97d2));
        // CB D7 007A
        gbc.setState(0x5bd8, 0xf4a8, 0x2dd0, 0xabe7, 0xfcb1, 0x3191, 0x0, 0x0);
        gbc.writeMem(0x5bd8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf4a8, gbc.sp());
        EXPECT(0x5bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 007B
        gbc.setState(0x1c3e, 0xb921, 0xbf50, 0xd78, 0x34b8, 0x9529, 0x1, 0x0);
        gbc.writeMem(0x1c3e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0x1c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 007C
        gbc.setState(0x8a74, 0x1d90, 0x27d0, 0xb98c, 0xbbcd, 0xcd01, 0x1, 0x1);
        gbc.writeMem(0x8a74, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1d90, gbc.sp());
        EXPECT(0x8a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a74));
        EXPECT(0xd7, gbc.readMem(0x8a75));
        // CB D7 007D
        gbc.setState(0x762c, 0x6e6e, 0x4690, 0x1059, 0x969e, 0xfd1c, 0x0, 0x1);
        gbc.writeMem(0x762c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6e6e, gbc.sp());
        EXPECT(0x762e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 007E
        gbc.setState(0x5e76, 0x29cd, 0xc0c0, 0xed41, 0xceb3, 0x70d6, 0x0, 0x0);
        gbc.writeMem(0x5e76, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x29cd, gbc.sp());
        EXPECT(0x5e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 007F
        gbc.setState(0x2c43, 0xfbe3, 0xc650, 0xc4d0, 0x1d91, 0xf4c7, 0x1, 0x0);
        gbc.writeMem(0x2c43, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfbe3, gbc.sp());
        EXPECT(0x2c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0080
        gbc.setState(0x18d4, 0x418c, 0x89b0, 0x9ac, 0x281c, 0x93c, 0x0, 0x1);
        gbc.writeMem(0x18d4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x418c, gbc.sp());
        EXPECT(0x18d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0081
        gbc.setState(0x31f3, 0x766f, 0xeb0, 0x4ad1, 0x5567, 0xfad1, 0x0, 0x0);
        gbc.writeMem(0x31f3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x766f, gbc.sp());
        EXPECT(0x31f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0082
        gbc.setState(0x9f2a, 0xba34, 0xd340, 0xc163, 0xe03a, 0xcc8c, 0x1, 0x1);
        gbc.writeMem(0x9f2a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xba34, gbc.sp());
        EXPECT(0x9f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2a));
        EXPECT(0xd7, gbc.readMem(0x9f2b));
        // CB D7 0086
        gbc.setState(0x610e, 0x41ee, 0xab50, 0x53ea, 0x6382, 0x68cd, 0x1, 0x1);
        gbc.writeMem(0x610e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x41ee, gbc.sp());
        EXPECT(0x6110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0087
        gbc.setState(0x971d, 0xccde, 0x10c0, 0x102b, 0x598a, 0x555d, 0x0, 0x0);
        gbc.writeMem(0x971d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xccde, gbc.sp());
        EXPECT(0x971f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971d));
        EXPECT(0xd7, gbc.readMem(0x971e));
        // CB D7 0088
        gbc.setState(0x4413, 0x2b19, 0x2360, 0xa94a, 0xc13e, 0x6fc2, 0x0, 0x1);
        gbc.writeMem(0x4413, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2b19, gbc.sp());
        EXPECT(0x4415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0089
        gbc.setState(0x9d12, 0x33, 0x9260, 0xc48f, 0xfb33, 0xdddb, 0x0, 0x1);
        gbc.writeMem(0x9d12, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x33, gbc.sp());
        EXPECT(0x9d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d12));
        EXPECT(0xd7, gbc.readMem(0x9d13));
        // CB D7 008A
        gbc.setState(0xcc81, 0x3d6, 0x96b0, 0x69ae, 0x75d2, 0x4e4f, 0x1, 0x0);
        gbc.writeMem(0xcc81, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3d6, gbc.sp());
        EXPECT(0xcc83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc81));
        EXPECT(0xd7, gbc.readMem(0xcc82));
        // CB D7 008B
        gbc.setState(0xda58, 0xbd0f, 0x9640, 0xe0f, 0xa368, 0xd4a2, 0x0, 0x0);
        gbc.writeMem(0xda58, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbd0f, gbc.sp());
        EXPECT(0xda5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda58));
        EXPECT(0xd7, gbc.readMem(0xda59));
        // CB D7 008C
        gbc.setState(0xdf2e, 0x5d6b, 0xafb0, 0x6610, 0xf97c, 0x84c0, 0x0, 0x1);
        gbc.writeMem(0xdf2e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5d6b, gbc.sp());
        EXPECT(0xdf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2e));
        EXPECT(0xd7, gbc.readMem(0xdf2f));
        // CB D7 008D
        gbc.setState(0x2e90, 0x16ea, 0x6900, 0xd2ba, 0xc427, 0xdf2b, 0x1, 0x0);
        gbc.writeMem(0x2e90, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x16ea, gbc.sp());
        EXPECT(0x2e92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 008E
        gbc.setState(0xb0f0, 0x579, 0xd990, 0xd865, 0x66aa, 0x206d, 0x1, 0x1);
        gbc.writeMem(0xb0f0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x579, gbc.sp());
        EXPECT(0xb0f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f0));
        EXPECT(0xd7, gbc.readMem(0xb0f1));
        // CB D7 008F
        gbc.setState(0x1ca4, 0x5db1, 0xd90, 0xdf04, 0x43db, 0xcc91, 0x0, 0x1);
        gbc.writeMem(0x1ca4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5db1, gbc.sp());
        EXPECT(0x1ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0090
        gbc.setState(0x71e8, 0x1896, 0xf0b0, 0x67f2, 0xd637, 0x2ee4, 0x1, 0x1);
        gbc.writeMem(0x71e8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1896, gbc.sp());
        EXPECT(0x71ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0091
        gbc.setState(0x884, 0xe2a2, 0xdae0, 0x8688, 0x6918, 0x2814, 0x0, 0x0);
        gbc.writeMem(0x884, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe2a2, gbc.sp());
        EXPECT(0x886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0092
        gbc.setState(0xbefc, 0x7ad, 0x5880, 0xafbe, 0xd4b7, 0x1736, 0x0, 0x0);
        gbc.writeMem(0xbefc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7ad, gbc.sp());
        EXPECT(0xbefe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbefc));
        EXPECT(0xd7, gbc.readMem(0xbefd));
        // CB D7 0093
        gbc.setState(0xda3e, 0x9576, 0x6f60, 0x96f, 0xa89c, 0x46ab, 0x1, 0x0);
        gbc.writeMem(0xda3e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9576, gbc.sp());
        EXPECT(0xda40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3e));
        EXPECT(0xd7, gbc.readMem(0xda3f));
        // CB D7 0094
        gbc.setState(0x4fe8, 0xbb55, 0xad70, 0x5a1f, 0x1063, 0xe4b0, 0x0, 0x0);
        gbc.writeMem(0x4fe8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbb55, gbc.sp());
        EXPECT(0x4fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0095
        gbc.setState(0xa15c, 0xa9b8, 0xe280, 0x7d40, 0xaffc, 0x4bf4, 0x1, 0x1);
        gbc.writeMem(0xa15c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa9b8, gbc.sp());
        EXPECT(0xa15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15c));
        EXPECT(0xd7, gbc.readMem(0xa15d));
        // CB D7 0096
        gbc.setState(0x40fa, 0xb4a9, 0x19f0, 0xe65c, 0x442c, 0x8b19, 0x0, 0x1);
        gbc.writeMem(0x40fa, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb4a9, gbc.sp());
        EXPECT(0x40fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0097
        gbc.setState(0xc626, 0xac28, 0x390, 0xa243, 0x4c51, 0xbdfc, 0x1, 0x1);
        gbc.writeMem(0xc626, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xac28, gbc.sp());
        EXPECT(0xc628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc626));
        EXPECT(0xd7, gbc.readMem(0xc627));
        // CB D7 0098
        gbc.setState(0x61bd, 0x77d1, 0x8010, 0x90ab, 0x82cb, 0x11b8, 0x1, 0x0);
        gbc.writeMem(0x61bd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x77d1, gbc.sp());
        EXPECT(0x61bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0099
        gbc.setState(0x7c90, 0xbb0f, 0xbf60, 0x6bae, 0x284, 0x3645, 0x1, 0x0);
        gbc.writeMem(0x7c90, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbb0f, gbc.sp());
        EXPECT(0x7c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 009A
        gbc.setState(0x78b0, 0x2307, 0xa3e0, 0x358e, 0x6f5f, 0xa0cc, 0x1, 0x0);
        gbc.writeMem(0x78b0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2307, gbc.sp());
        EXPECT(0x78b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 009B
        gbc.setState(0x961b, 0xe979, 0x220, 0x82e, 0x67b8, 0x9419, 0x1, 0x1);
        gbc.writeMem(0x961b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe979, gbc.sp());
        EXPECT(0x961d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961b));
        EXPECT(0xd7, gbc.readMem(0x961c));
        // CB D7 009C
        gbc.setState(0x3e6e, 0x85e6, 0x36b0, 0x39e1, 0xf148, 0xb2c0, 0x0, 0x0);
        gbc.writeMem(0x3e6e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x85e6, gbc.sp());
        EXPECT(0x3e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 009E
        gbc.setState(0xd962, 0xb163, 0x100, 0xd86, 0x6ffb, 0x72f8, 0x0, 0x1);
        gbc.writeMem(0xd962, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb163, gbc.sp());
        EXPECT(0xd964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd962));
        EXPECT(0xd7, gbc.readMem(0xd963));
        // CB D7 009F
        gbc.setState(0xe412, 0xc7d9, 0x66f0, 0xd6e, 0x636, 0xb97, 0x1, 0x0);
        gbc.writeMem(0xe412, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc7d9, gbc.sp());
        EXPECT(0xe414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe412));
        EXPECT(0xd7, gbc.readMem(0xe413));
        // CB D7 00A0
        gbc.setState(0x3432, 0x7779, 0x4270, 0xbaf3, 0x81cb, 0xaad0, 0x1, 0x0);
        gbc.writeMem(0x3432, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7779, gbc.sp());
        EXPECT(0x3434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00A1
        gbc.setState(0xd197, 0x7aeb, 0x9b70, 0x5eb0, 0xa026, 0x85b5, 0x1, 0x1);
        gbc.writeMem(0xd197, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7aeb, gbc.sp());
        EXPECT(0xd199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd197));
        EXPECT(0xd7, gbc.readMem(0xd198));
        // CB D7 00A2
        gbc.setState(0xb355, 0x14eb, 0x6800, 0xbca1, 0x579e, 0xff7d, 0x1, 0x0);
        gbc.writeMem(0xb355, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x14eb, gbc.sp());
        EXPECT(0xb357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb355));
        EXPECT(0xd7, gbc.readMem(0xb356));
        // CB D7 00A3
        gbc.setState(0xd20b, 0x6ccf, 0x4e90, 0x2a18, 0xc693, 0x91c9, 0x1, 0x1);
        gbc.writeMem(0xd20b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6ccf, gbc.sp());
        EXPECT(0xd20d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20b));
        EXPECT(0xd7, gbc.readMem(0xd20c));
        // CB D7 00A4
        gbc.setState(0x9bd1, 0x4683, 0x53e0, 0x5385, 0x69e4, 0xde83, 0x0, 0x1);
        gbc.writeMem(0x9bd1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4683, gbc.sp());
        EXPECT(0x9bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd1));
        EXPECT(0xd7, gbc.readMem(0x9bd2));
        // CB D7 00A5
        gbc.setState(0x4a72, 0xc8aa, 0xfc00, 0xe8f9, 0xbace, 0x2462, 0x0, 0x1);
        gbc.writeMem(0x4a72, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc8aa, gbc.sp());
        EXPECT(0x4a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00A6
        gbc.setState(0xd78d, 0x1b10, 0xc270, 0xfc0, 0xafe1, 0xc04, 0x0, 0x1);
        gbc.writeMem(0xd78d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1b10, gbc.sp());
        EXPECT(0xd78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78d));
        EXPECT(0xd7, gbc.readMem(0xd78e));
        // CB D7 00A7
        gbc.setState(0xc9cc, 0xfa2e, 0x21d0, 0xc5bc, 0xebb1, 0xa11e, 0x0, 0x0);
        gbc.writeMem(0xc9cc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfa2e, gbc.sp());
        EXPECT(0xc9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cc));
        EXPECT(0xd7, gbc.readMem(0xc9cd));
        // CB D7 00A8
        gbc.setState(0x9000, 0xaed9, 0xa6d0, 0xbf67, 0x1b3c, 0xf7e9, 0x1, 0x1);
        gbc.writeMem(0x9000, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xaed9, gbc.sp());
        EXPECT(0x9002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9000));
        EXPECT(0xd7, gbc.readMem(0x9001));
        // CB D7 00A9
        gbc.setState(0xe0f3, 0x34f8, 0x2200, 0x5f08, 0xd983, 0x5d17, 0x1, 0x1);
        gbc.writeMem(0xe0f3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x34f8, gbc.sp());
        EXPECT(0xe0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f3));
        EXPECT(0xd7, gbc.readMem(0xe0f4));
        // CB D7 00AA
        gbc.setState(0x2bcc, 0xef15, 0x9310, 0x1e7, 0x620c, 0x2024, 0x1, 0x0);
        gbc.writeMem(0x2bcc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xef15, gbc.sp());
        EXPECT(0x2bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00AB
        gbc.setState(0x31e7, 0x6991, 0xaf60, 0xc756, 0xaa1, 0x53d7, 0x1, 0x1);
        gbc.writeMem(0x31e7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6991, gbc.sp());
        EXPECT(0x31e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00AC
        gbc.setState(0xd4dd, 0x76c, 0x4650, 0x1c2a, 0xdf38, 0xed79, 0x0, 0x0);
        gbc.writeMem(0xd4dd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x76c, gbc.sp());
        EXPECT(0xd4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4dd));
        EXPECT(0xd7, gbc.readMem(0xd4de));
        // CB D7 00AD
        gbc.setState(0xbcbd, 0x45f7, 0xdb60, 0x75ac, 0xabb6, 0xd984, 0x0, 0x0);
        gbc.writeMem(0xbcbd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x45f7, gbc.sp());
        EXPECT(0xbcbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcbd));
        EXPECT(0xd7, gbc.readMem(0xbcbe));
        // CB D7 00AE
        gbc.setState(0x88cb, 0x857b, 0x8050, 0x6b33, 0xde20, 0xa2c9, 0x0, 0x0);
        gbc.writeMem(0x88cb, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x857b, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cb));
        EXPECT(0xd7, gbc.readMem(0x88cc));
        // CB D7 00AF
        gbc.setState(0xecbf, 0xcbb7, 0x9950, 0x8de3, 0xcf2f, 0x3c37, 0x1, 0x1);
        gbc.writeMem(0xecbf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcbb7, gbc.sp());
        EXPECT(0xecc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbf));
        EXPECT(0xd7, gbc.readMem(0xecc0));
        // CB D7 00B0
        gbc.setState(0xdf8e, 0x99da, 0x7f90, 0xd9bd, 0xd993, 0x9d07, 0x1, 0x1);
        gbc.writeMem(0xdf8e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x99da, gbc.sp());
        EXPECT(0xdf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8e));
        EXPECT(0xd7, gbc.readMem(0xdf8f));
        // CB D7 00B1
        gbc.setState(0xb9b7, 0x553d, 0x5250, 0x1c6a, 0x4fe8, 0x15ed, 0x1, 0x1);
        gbc.writeMem(0xb9b7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x553d, gbc.sp());
        EXPECT(0xb9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b7));
        EXPECT(0xd7, gbc.readMem(0xb9b8));
        // CB D7 00B2
        gbc.setState(0x71f6, 0x2dd2, 0xa270, 0x491d, 0xc457, 0x6075, 0x1, 0x0);
        gbc.writeMem(0x71f6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2dd2, gbc.sp());
        EXPECT(0x71f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00B3
        gbc.setState(0x1670, 0xb6b7, 0x3360, 0xd818, 0x7a80, 0x501a, 0x1, 0x1);
        gbc.writeMem(0x1670, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb6b7, gbc.sp());
        EXPECT(0x1672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00B4
        gbc.setState(0xb9bf, 0x2f20, 0x21f0, 0x4bb, 0xe049, 0xe63d, 0x1, 0x1);
        gbc.writeMem(0xb9bf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2f20, gbc.sp());
        EXPECT(0xb9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bf));
        EXPECT(0xd7, gbc.readMem(0xb9c0));
        // CB D7 00B5
        gbc.setState(0xb2b8, 0x7350, 0x2540, 0x36be, 0x93f2, 0x2cf8, 0x0, 0x1);
        gbc.writeMem(0xb2b8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7350, gbc.sp());
        EXPECT(0xb2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b8));
        EXPECT(0xd7, gbc.readMem(0xb2b9));
        // CB D7 00B6
        gbc.setState(0xe889, 0x359e, 0x6260, 0x7608, 0x12d5, 0x653f, 0x1, 0x1);
        gbc.writeMem(0xe889, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x359e, gbc.sp());
        EXPECT(0xe88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe889));
        EXPECT(0xd7, gbc.readMem(0xe88a));
        // CB D7 00B7
        gbc.setState(0x8b3a, 0x2b9a, 0x63b0, 0x9a20, 0xef9, 0x3b9a, 0x1, 0x1);
        gbc.writeMem(0x8b3a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2b9a, gbc.sp());
        EXPECT(0x8b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3a));
        EXPECT(0xd7, gbc.readMem(0x8b3b));
        // CB D7 00B8
        gbc.setState(0xab50, 0x930f, 0x4950, 0x4a7c, 0x1c0d, 0x662, 0x0, 0x0);
        gbc.writeMem(0xab50, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x930f, gbc.sp());
        EXPECT(0xab52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab50));
        EXPECT(0xd7, gbc.readMem(0xab51));
        // CB D7 00B9
        gbc.setState(0x694a, 0xf2d1, 0xf6e0, 0x952, 0xc1ef, 0x1870, 0x0, 0x1);
        gbc.writeMem(0x694a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf2d1, gbc.sp());
        EXPECT(0x694c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00BA
        gbc.setState(0xef66, 0x6304, 0x85b0, 0x45f9, 0xce35, 0x83fd, 0x0, 0x1);
        gbc.writeMem(0xef66, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6304, gbc.sp());
        EXPECT(0xef68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef66));
        EXPECT(0xd7, gbc.readMem(0xef67));
        // CB D7 00BB
        gbc.setState(0xa5cd, 0xd2c5, 0x5ec0, 0xca6a, 0x8442, 0xc385, 0x1, 0x1);
        gbc.writeMem(0xa5cd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd2c5, gbc.sp());
        EXPECT(0xa5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5cd));
        EXPECT(0xd7, gbc.readMem(0xa5ce));
        // CB D7 00BC
        gbc.setState(0x6ea6, 0xc148, 0xd0c0, 0xd8ea, 0x76f3, 0x2ade, 0x1, 0x0);
        gbc.writeMem(0x6ea6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc148, gbc.sp());
        EXPECT(0x6ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00BD
        gbc.setState(0xdcaf, 0xc088, 0x37d0, 0x2dac, 0x7504, 0x9af0, 0x0, 0x0);
        gbc.writeMem(0xdcaf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc088, gbc.sp());
        EXPECT(0xdcb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcaf));
        EXPECT(0xd7, gbc.readMem(0xdcb0));
        // CB D7 00BE
        gbc.setState(0xa5a8, 0x39f7, 0xd50, 0x39d6, 0xd0a6, 0xcb8c, 0x0, 0x0);
        gbc.writeMem(0xa5a8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x39f7, gbc.sp());
        EXPECT(0xa5aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a8));
        EXPECT(0xd7, gbc.readMem(0xa5a9));
        // CB D7 00BF
        gbc.setState(0x4fdc, 0xfa79, 0xb6f0, 0xcba1, 0x809e, 0xc69b, 0x0, 0x1);
        gbc.writeMem(0x4fdc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfa79, gbc.sp());
        EXPECT(0x4fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00C1
        gbc.setState(0x4f60, 0xf4c6, 0xf340, 0x6164, 0x1259, 0x3205, 0x0, 0x0);
        gbc.writeMem(0x4f60, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf4c6, gbc.sp());
        EXPECT(0x4f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00C2
        gbc.setState(0xbdee, 0x4f3e, 0xbb20, 0x45d5, 0xaef2, 0xba20, 0x1, 0x0);
        gbc.writeMem(0xbdee, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4f3e, gbc.sp());
        EXPECT(0xbdf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdee));
        EXPECT(0xd7, gbc.readMem(0xbdef));
        // CB D7 00C3
        gbc.setState(0xd850, 0xdcfa, 0x5e30, 0x3afa, 0x8cc, 0x8193, 0x1, 0x0);
        gbc.writeMem(0xd850, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdcfa, gbc.sp());
        EXPECT(0xd852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd850));
        EXPECT(0xd7, gbc.readMem(0xd851));
        // CB D7 00C4
        gbc.setState(0x41ae, 0xdcdb, 0x680, 0x724d, 0xa675, 0xc973, 0x0, 0x1);
        gbc.writeMem(0x41ae, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdcdb, gbc.sp());
        EXPECT(0x41b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00C5
        gbc.setState(0xd495, 0x3ed9, 0xfd60, 0x30c0, 0x5a08, 0x37d, 0x0, 0x1);
        gbc.writeMem(0xd495, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3ed9, gbc.sp());
        EXPECT(0xd497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd495));
        EXPECT(0xd7, gbc.readMem(0xd496));
        // CB D7 00C6
        gbc.setState(0xb22e, 0x6de8, 0xf770, 0x43e7, 0x33aa, 0xe723, 0x1, 0x0);
        gbc.writeMem(0xb22e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6de8, gbc.sp());
        EXPECT(0xb230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22e));
        EXPECT(0xd7, gbc.readMem(0xb22f));
        // CB D7 00C7
        gbc.setState(0x940f, 0xd43b, 0x1f10, 0x94f6, 0x7505, 0xb02a, 0x0, 0x1);
        gbc.writeMem(0x940f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd43b, gbc.sp());
        EXPECT(0x9411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940f));
        EXPECT(0xd7, gbc.readMem(0x9410));
        // CB D7 00C8
        gbc.setState(0x5990, 0xb1d2, 0xf1d0, 0x19e3, 0x1420, 0x5082, 0x1, 0x0);
        gbc.writeMem(0x5990, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb1d2, gbc.sp());
        EXPECT(0x5992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00C9
        gbc.setState(0xabbb, 0x3c33, 0x200, 0x8619, 0xfef0, 0x31dd, 0x1, 0x1);
        gbc.writeMem(0xabbb, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3c33, gbc.sp());
        EXPECT(0xabbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabbb));
        EXPECT(0xd7, gbc.readMem(0xabbc));
        // CB D7 00CA
        gbc.setState(0x92dc, 0xf8fc, 0xfc10, 0xe8a4, 0xf24, 0xe47b, 0x1, 0x0);
        gbc.writeMem(0x92dc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf8fc, gbc.sp());
        EXPECT(0x92de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92dc));
        EXPECT(0xd7, gbc.readMem(0x92dd));
        // CB D7 00CB
        gbc.setState(0x6437, 0xb6c0, 0xde40, 0x966c, 0xd161, 0x6e59, 0x1, 0x1);
        gbc.writeMem(0x6437, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0x6439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00CC
        gbc.setState(0xcd9f, 0x372b, 0x8d90, 0x39b3, 0xa695, 0x11db, 0x0, 0x1);
        gbc.writeMem(0xcd9f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x372b, gbc.sp());
        EXPECT(0xcda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9f));
        EXPECT(0xd7, gbc.readMem(0xcda0));
        // CB D7 00CD
        gbc.setState(0x91b9, 0x384c, 0xca90, 0x1427, 0x5af4, 0x6315, 0x1, 0x1);
        gbc.writeMem(0x91b9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x384c, gbc.sp());
        EXPECT(0x91bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b9));
        EXPECT(0xd7, gbc.readMem(0x91ba));
        // CB D7 00CE
        gbc.setState(0xd89d, 0x35fb, 0xb370, 0x24a1, 0x5814, 0x7d7c, 0x0, 0x1);
        gbc.writeMem(0xd89d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x35fb, gbc.sp());
        EXPECT(0xd89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89d));
        EXPECT(0xd7, gbc.readMem(0xd89e));
        // CB D7 00CF
        gbc.setState(0x77c3, 0x86c6, 0x7bb0, 0x85, 0x2945, 0xeae9, 0x0, 0x0);
        gbc.writeMem(0x77c3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x86c6, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00D0
        gbc.setState(0x2237, 0x8878, 0xc1e0, 0xf470, 0xd816, 0xb834, 0x0, 0x0);
        gbc.writeMem(0x2237, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8878, gbc.sp());
        EXPECT(0x2239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00D1
        gbc.setState(0x5949, 0x9840, 0x1820, 0xe440, 0xd7de, 0x5247, 0x0, 0x0);
        gbc.writeMem(0x5949, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9840, gbc.sp());
        EXPECT(0x594b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00D2
        gbc.setState(0x76c0, 0x5409, 0xfca0, 0x6b2b, 0xec8a, 0x9c39, 0x0, 0x0);
        gbc.writeMem(0x76c0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5409, gbc.sp());
        EXPECT(0x76c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00D3
        gbc.setState(0xb69c, 0x5892, 0x8840, 0x1d7c, 0x695d, 0xb649, 0x1, 0x1);
        gbc.writeMem(0xb69c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5892, gbc.sp());
        EXPECT(0xb69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69c));
        EXPECT(0xd7, gbc.readMem(0xb69d));
        // CB D7 00D4
        gbc.setState(0x62aa, 0xeac9, 0x1a00, 0x8e32, 0xfba1, 0x86e, 0x1, 0x0);
        gbc.writeMem(0x62aa, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xeac9, gbc.sp());
        EXPECT(0x62ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00D5
        gbc.setState(0x43e1, 0x4a37, 0xc640, 0xe7dc, 0x8f1a, 0xfe65, 0x0, 0x0);
        gbc.writeMem(0x43e1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4a37, gbc.sp());
        EXPECT(0x43e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00D6
        gbc.setState(0x378f, 0xf9e3, 0x3f50, 0x19a8, 0x4532, 0x725f, 0x0, 0x1);
        gbc.writeMem(0x378f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf9e3, gbc.sp());
        EXPECT(0x3791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00D7
        gbc.setState(0x686, 0xa84e, 0x1ac0, 0x5c9d, 0x2100, 0xf5a4, 0x1, 0x0);
        gbc.writeMem(0x686, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa84e, gbc.sp());
        EXPECT(0x688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00D8
        gbc.setState(0xad65, 0x569, 0xb760, 0x9a58, 0x8c1c, 0x9796, 0x1, 0x1);
        gbc.writeMem(0xad65, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x569, gbc.sp());
        EXPECT(0xad67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad65));
        EXPECT(0xd7, gbc.readMem(0xad66));
        // CB D7 00D9
        gbc.setState(0x191c, 0x575c, 0xb8d0, 0x1242, 0x9e00, 0xa74e, 0x1, 0x1);
        gbc.writeMem(0x191c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x575c, gbc.sp());
        EXPECT(0x191e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00DA
        gbc.setState(0xc3a5, 0xb568, 0xaf00, 0x6b38, 0x9be, 0xa8ca, 0x1, 0x0);
        gbc.writeMem(0xc3a5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb568, gbc.sp());
        EXPECT(0xc3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a5));
        EXPECT(0xd7, gbc.readMem(0xc3a6));
        // CB D7 00DB
        gbc.setState(0x9402, 0x2118, 0x42f0, 0x1911, 0x84f5, 0x2459, 0x0, 0x0);
        gbc.writeMem(0x9402, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2118, gbc.sp());
        EXPECT(0x9404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9402));
        EXPECT(0xd7, gbc.readMem(0x9403));
        // CB D7 00DC
        gbc.setState(0x3b08, 0x7c5e, 0xb200, 0x3efd, 0x3586, 0xe46b, 0x0, 0x0);
        gbc.writeMem(0x3b08, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7c5e, gbc.sp());
        EXPECT(0x3b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00DD
        gbc.setState(0x2d5a, 0x8a01, 0xc0b0, 0x9a93, 0xa236, 0x239f, 0x0, 0x0);
        gbc.writeMem(0x2d5a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8a01, gbc.sp());
        EXPECT(0x2d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00DE
        gbc.setState(0xc880, 0xadf1, 0x75a0, 0xf265, 0x91d4, 0x32ad, 0x1, 0x0);
        gbc.writeMem(0xc880, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xadf1, gbc.sp());
        EXPECT(0xc882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc880));
        EXPECT(0xd7, gbc.readMem(0xc881));
        // CB D7 00DF
        gbc.setState(0xd94a, 0xbf6c, 0x5e40, 0xde4b, 0x4cfe, 0x120d, 0x1, 0x0);
        gbc.writeMem(0xd94a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbf6c, gbc.sp());
        EXPECT(0xd94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94a));
        EXPECT(0xd7, gbc.readMem(0xd94b));
        // CB D7 00E0
        gbc.setState(0x2a3d, 0xa08d, 0x3b0, 0xddf, 0x53a0, 0x691a, 0x1, 0x1);
        gbc.writeMem(0x2a3d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa08d, gbc.sp());
        EXPECT(0x2a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00E1
        gbc.setState(0xe943, 0x66a6, 0xe240, 0x1f3e, 0x8b7, 0x8c2f, 0x0, 0x1);
        gbc.writeMem(0xe943, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x66a6, gbc.sp());
        EXPECT(0xe945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe943));
        EXPECT(0xd7, gbc.readMem(0xe944));
        // CB D7 00E2
        gbc.setState(0x61cd, 0x2d58, 0x7430, 0x1a84, 0xd4f4, 0x9660, 0x1, 0x1);
        gbc.writeMem(0x61cd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2d58, gbc.sp());
        EXPECT(0x61cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00E3
        gbc.setState(0x3e8f, 0xc567, 0x6f40, 0x397b, 0x4736, 0x7f32, 0x0, 0x1);
        gbc.writeMem(0x3e8f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc567, gbc.sp());
        EXPECT(0x3e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00E4
        gbc.setState(0x9dab, 0xf669, 0x7b30, 0xe4e3, 0xeb1f, 0x72ad, 0x0, 0x1);
        gbc.writeMem(0x9dab, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf669, gbc.sp());
        EXPECT(0x9dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dab));
        EXPECT(0xd7, gbc.readMem(0x9dac));
        // CB D7 00E5
        gbc.setState(0x4234, 0x7033, 0xeb90, 0x65b0, 0xb871, 0x4eab, 0x0, 0x0);
        gbc.writeMem(0x4234, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7033, gbc.sp());
        EXPECT(0x4236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00E7
        gbc.setState(0x9865, 0xe010, 0xafd0, 0xf68b, 0x8d95, 0xb385, 0x0, 0x1);
        gbc.writeMem(0x9865, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe010, gbc.sp());
        EXPECT(0x9867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9865));
        EXPECT(0xd7, gbc.readMem(0x9866));
        // CB D7 00E8
        gbc.setState(0xa790, 0xc067, 0xf0b0, 0xd076, 0xc525, 0x5f26, 0x1, 0x0);
        gbc.writeMem(0xa790, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc067, gbc.sp());
        EXPECT(0xa792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa790));
        EXPECT(0xd7, gbc.readMem(0xa791));
        // CB D7 00E9
        gbc.setState(0x7dd3, 0xf7ae, 0xdb90, 0x4c13, 0x9e50, 0x65a2, 0x0, 0x1);
        gbc.writeMem(0x7dd3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf7ae, gbc.sp());
        EXPECT(0x7dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00EA
        gbc.setState(0x1f2, 0x2fec, 0xc030, 0xb286, 0x8caf, 0xe609, 0x0, 0x0);
        gbc.writeMem(0x1f2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2fec, gbc.sp());
        EXPECT(0x1f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00EB
        gbc.setState(0x46ad, 0x89dc, 0xca20, 0x1630, 0x6d9f, 0x1496, 0x0, 0x1);
        gbc.writeMem(0x46ad, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x89dc, gbc.sp());
        EXPECT(0x46af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00EC
        gbc.setState(0xc6d7, 0x877a, 0x10, 0xaf55, 0x465c, 0x2626, 0x0, 0x0);
        gbc.writeMem(0xc6d7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x877a, gbc.sp());
        EXPECT(0xc6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d7));
        EXPECT(0xd7, gbc.readMem(0xc6d8));
        // CB D7 00ED
        gbc.setState(0x3554, 0x70cc, 0xa5d0, 0xa322, 0x1867, 0x3483, 0x0, 0x0);
        gbc.writeMem(0x3554, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x70cc, gbc.sp());
        EXPECT(0x3556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00EE
        gbc.setState(0xaf08, 0xfdf3, 0xca0, 0x68ad, 0xe951, 0x62e7, 0x1, 0x1);
        gbc.writeMem(0xaf08, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfdf3, gbc.sp());
        EXPECT(0xaf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf08));
        EXPECT(0xd7, gbc.readMem(0xaf09));
        // CB D7 00EF
        gbc.setState(0xdf36, 0x4266, 0x5c70, 0xf51c, 0xe4db, 0x5373, 0x1, 0x0);
        gbc.writeMem(0xdf36, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4266, gbc.sp());
        EXPECT(0xdf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf36));
        EXPECT(0xd7, gbc.readMem(0xdf37));
        // CB D7 00F0
        gbc.setState(0x8a1d, 0x166a, 0x2eb0, 0x25be, 0x7354, 0x133a, 0x0, 0x0);
        gbc.writeMem(0x8a1d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x166a, gbc.sp());
        EXPECT(0x8a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1d));
        EXPECT(0xd7, gbc.readMem(0x8a1e));
        // CB D7 00F1
        gbc.setState(0xda18, 0x1772, 0x3cd0, 0x74c1, 0xafe3, 0x7596, 0x0, 0x1);
        gbc.writeMem(0xda18, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1772, gbc.sp());
        EXPECT(0xda1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda18));
        EXPECT(0xd7, gbc.readMem(0xda19));
        // CB D7 00F2
        gbc.setState(0xcd7, 0xa8f7, 0xa80, 0xc958, 0xd308, 0xf3c5, 0x0, 0x0);
        gbc.writeMem(0xcd7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa8f7, gbc.sp());
        EXPECT(0xcd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00F3
        gbc.setState(0xcd44, 0xd725, 0xa0e0, 0x69f4, 0x5602, 0x72a6, 0x0, 0x1);
        gbc.writeMem(0xcd44, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd725, gbc.sp());
        EXPECT(0xcd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd44));
        EXPECT(0xd7, gbc.readMem(0xcd45));
        // CB D7 00F4
        gbc.setState(0xe398, 0x7c6b, 0x7490, 0xf289, 0x8b79, 0xe0f, 0x1, 0x0);
        gbc.writeMem(0xe398, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7c6b, gbc.sp());
        EXPECT(0xe39a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe398));
        EXPECT(0xd7, gbc.readMem(0xe399));
        // CB D7 00F5
        gbc.setState(0xcb50, 0x9fad, 0x4e20, 0x6397, 0x3985, 0x620e, 0x1, 0x1);
        gbc.writeMem(0xcb50, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9fad, gbc.sp());
        EXPECT(0xcb52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb50));
        EXPECT(0xd7, gbc.readMem(0xcb51));
        // CB D7 00F6
        gbc.setState(0xcf66, 0xcaef, 0x6ec0, 0x3086, 0xf938, 0x2a4d, 0x1, 0x0);
        gbc.writeMem(0xcf66, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcaef, gbc.sp());
        EXPECT(0xcf68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf66));
        EXPECT(0xd7, gbc.readMem(0xcf67));
        // CB D7 00F7
        gbc.setState(0xaccf, 0x7f5e, 0xbbb0, 0x6dda, 0x42fb, 0x17da, 0x1, 0x1);
        gbc.writeMem(0xaccf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7f5e, gbc.sp());
        EXPECT(0xacd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaccf));
        EXPECT(0xd7, gbc.readMem(0xacd0));
        // CB D7 00F8
        gbc.setState(0x4976, 0x8f53, 0xe000, 0x40c6, 0x71b1, 0x9810, 0x0, 0x0);
        gbc.writeMem(0x4976, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8f53, gbc.sp());
        EXPECT(0x4978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00F9
        gbc.setState(0x7e33, 0xeb5d, 0x8a0, 0xda24, 0x666d, 0xb783, 0x0, 0x1);
        gbc.writeMem(0x7e33, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xeb5d, gbc.sp());
        EXPECT(0x7e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 00FA
        gbc.setState(0x7d15, 0x5ef8, 0x6730, 0xa61a, 0xb079, 0x65bd, 0x1, 0x1);
        gbc.writeMem(0x7d15, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5ef8, gbc.sp());
        EXPECT(0x7d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00FB
        gbc.setState(0x841d, 0xb826, 0xea10, 0x56df, 0x422f, 0xb85f, 0x1, 0x0);
        gbc.writeMem(0x841d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb826, gbc.sp());
        EXPECT(0x841f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841d));
        EXPECT(0xd7, gbc.readMem(0x841e));
        // CB D7 00FC
        gbc.setState(0x8df3, 0xb105, 0xfd0, 0x9282, 0x8f6, 0x40f1, 0x0, 0x0);
        gbc.writeMem(0x8df3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb105, gbc.sp());
        EXPECT(0x8df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df3));
        EXPECT(0xd7, gbc.readMem(0x8df4));
        // CB D7 00FD
        gbc.setState(0x355e, 0xb541, 0x2110, 0x57c4, 0xf848, 0x4b76, 0x0, 0x0);
        gbc.writeMem(0x355e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb541, gbc.sp());
        EXPECT(0x3560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00FE
        gbc.setState(0x7683, 0x4aa1, 0x9a50, 0x282b, 0xcd91, 0xeb3c, 0x1, 0x1);
        gbc.writeMem(0x7683, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4aa1, gbc.sp());
        EXPECT(0x7685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 00FF
        gbc.setState(0x9ae8, 0x642b, 0xdb20, 0x7f40, 0x27f4, 0x4801, 0x1, 0x1);
        gbc.writeMem(0x9ae8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x642b, gbc.sp());
        EXPECT(0x9aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae8));
        EXPECT(0xd7, gbc.readMem(0x9ae9));
        // CB D7 0100
        gbc.setState(0x21b4, 0x575d, 0x5590, 0x52ff, 0x603e, 0x25a1, 0x0, 0x0);
        gbc.writeMem(0x21b4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x575d, gbc.sp());
        EXPECT(0x21b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0101
        gbc.setState(0x3db1, 0xa093, 0xadc0, 0x9ecf, 0x7b38, 0x2dba, 0x1, 0x1);
        gbc.writeMem(0x3db1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa093, gbc.sp());
        EXPECT(0x3db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0102
        gbc.setState(0xd2a6, 0x225e, 0x2050, 0xce2f, 0x857, 0x190f, 0x1, 0x0);
        gbc.writeMem(0xd2a6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x225e, gbc.sp());
        EXPECT(0xd2a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a6));
        EXPECT(0xd7, gbc.readMem(0xd2a7));
        // CB D7 0103
        gbc.setState(0xbd4b, 0xb067, 0x700, 0xbccc, 0x41a1, 0x83c0, 0x0, 0x1);
        gbc.writeMem(0xbd4b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb067, gbc.sp());
        EXPECT(0xbd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4b));
        EXPECT(0xd7, gbc.readMem(0xbd4c));
        // CB D7 0104
        gbc.setState(0x2d34, 0x769a, 0xc7d0, 0xc206, 0x6c00, 0x7d91, 0x0, 0x1);
        gbc.writeMem(0x2d34, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x769a, gbc.sp());
        EXPECT(0x2d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0105
        gbc.setState(0x3671, 0x5c87, 0x1d90, 0xdcdf, 0x4756, 0x57f, 0x1, 0x1);
        gbc.writeMem(0x3671, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5c87, gbc.sp());
        EXPECT(0x3673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0106
        gbc.setState(0x5d9a, 0x164c, 0xdf80, 0x4e6, 0xf6ff, 0xa8b9, 0x1, 0x0);
        gbc.writeMem(0x5d9a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x164c, gbc.sp());
        EXPECT(0x5d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0107
        gbc.setState(0xe308, 0x6fd3, 0xcab0, 0x1c22, 0x45bc, 0x39fc, 0x1, 0x1);
        gbc.writeMem(0xe308, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6fd3, gbc.sp());
        EXPECT(0xe30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe308));
        EXPECT(0xd7, gbc.readMem(0xe309));
        // CB D7 0108
        gbc.setState(0x9183, 0xae78, 0x8710, 0xcbe9, 0xdce6, 0xc132, 0x1, 0x0);
        gbc.writeMem(0x9183, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xae78, gbc.sp());
        EXPECT(0x9185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9183));
        EXPECT(0xd7, gbc.readMem(0x9184));
        // CB D7 0109
        gbc.setState(0x587e, 0x981d, 0xba80, 0xaef2, 0x3d07, 0xe920, 0x0, 0x0);
        gbc.writeMem(0x587e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x981d, gbc.sp());
        EXPECT(0x5880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 010A
        gbc.setState(0x4852, 0x1943, 0xff80, 0x6645, 0xbb5e, 0x44d8, 0x1, 0x1);
        gbc.writeMem(0x4852, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1943, gbc.sp());
        EXPECT(0x4854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 010B
        gbc.setState(0x815b, 0x6fd1, 0xc4b0, 0x9dfe, 0x8114, 0x6dce, 0x0, 0x1);
        gbc.writeMem(0x815b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6fd1, gbc.sp());
        EXPECT(0x815d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815b));
        EXPECT(0xd7, gbc.readMem(0x815c));
        // CB D7 010C
        gbc.setState(0x639e, 0x5f96, 0x4540, 0x13af, 0xbbe0, 0x9561, 0x0, 0x0);
        gbc.writeMem(0x639e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5f96, gbc.sp());
        EXPECT(0x63a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 010D
        gbc.setState(0x8889, 0xebd4, 0xb1c0, 0x2176, 0x179a, 0x882c, 0x1, 0x1);
        gbc.writeMem(0x8889, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xebd4, gbc.sp());
        EXPECT(0x888b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8889));
        EXPECT(0xd7, gbc.readMem(0x888a));
        // CB D7 010E
        gbc.setState(0xe38f, 0x2a71, 0xf420, 0xa973, 0x2b32, 0xb11a, 0x0, 0x1);
        gbc.writeMem(0xe38f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2a71, gbc.sp());
        EXPECT(0xe391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38f));
        EXPECT(0xd7, gbc.readMem(0xe390));
        // CB D7 010F
        gbc.setState(0x5fe9, 0x6f57, 0x6020, 0x2c8d, 0xf5e6, 0x4e76, 0x1, 0x0);
        gbc.writeMem(0x5fe9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6f57, gbc.sp());
        EXPECT(0x5feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0110
        gbc.setState(0x5e92, 0x72a, 0x8950, 0xf3b7, 0x2407, 0x8970, 0x1, 0x0);
        gbc.writeMem(0x5e92, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x72a, gbc.sp());
        EXPECT(0x5e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0111
        gbc.setState(0xbfdc, 0xa353, 0xbd40, 0x6716, 0x4b09, 0x756f, 0x1, 0x0);
        gbc.writeMem(0xbfdc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa353, gbc.sp());
        EXPECT(0xbfde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfdc));
        EXPECT(0xd7, gbc.readMem(0xbfdd));
        // CB D7 0112
        gbc.setState(0xd013, 0x43c8, 0x72a0, 0xe1a0, 0x4848, 0xd3ea, 0x0, 0x0);
        gbc.writeMem(0xd013, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x43c8, gbc.sp());
        EXPECT(0xd015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd013));
        EXPECT(0xd7, gbc.readMem(0xd014));
        // CB D7 0113
        gbc.setState(0x4eb6, 0x978b, 0x5b40, 0x59a8, 0xe6a5, 0x7662, 0x0, 0x0);
        gbc.writeMem(0x4eb6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x978b, gbc.sp());
        EXPECT(0x4eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0114
        gbc.setState(0x360b, 0x4b6f, 0x4aa0, 0x33e8, 0x98c3, 0xdb4, 0x0, 0x1);
        gbc.writeMem(0x360b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4b6f, gbc.sp());
        EXPECT(0x360d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0116
        gbc.setState(0x7d3c, 0x84e4, 0x5580, 0xf6a, 0x81cb, 0x6770, 0x1, 0x0);
        gbc.writeMem(0x7d3c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x84e4, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0117
        gbc.setState(0x7c41, 0xa3ba, 0xa310, 0x7112, 0x33b8, 0x4b83, 0x0, 0x1);
        gbc.writeMem(0x7c41, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa3ba, gbc.sp());
        EXPECT(0x7c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0118
        gbc.setState(0x5ac8, 0xb50d, 0xd550, 0xc244, 0xf763, 0x1052, 0x1, 0x1);
        gbc.writeMem(0x5ac8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb50d, gbc.sp());
        EXPECT(0x5aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0119
        gbc.setState(0x9bcf, 0x4a0, 0xba20, 0x6817, 0xc20c, 0x3d46, 0x0, 0x0);
        gbc.writeMem(0x9bcf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4a0, gbc.sp());
        EXPECT(0x9bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bcf));
        EXPECT(0xd7, gbc.readMem(0x9bd0));
        // CB D7 011A
        gbc.setState(0xa722, 0xed54, 0x2bc0, 0x2803, 0x28c5, 0xd6fa, 0x0, 0x0);
        gbc.writeMem(0xa722, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xed54, gbc.sp());
        EXPECT(0xa724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa722));
        EXPECT(0xd7, gbc.readMem(0xa723));
        // CB D7 011B
        gbc.setState(0xb722, 0x9667, 0x6be0, 0x5b4c, 0xa225, 0xeb0c, 0x1, 0x1);
        gbc.writeMem(0xb722, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9667, gbc.sp());
        EXPECT(0xb724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb722));
        EXPECT(0xd7, gbc.readMem(0xb723));
        // CB D7 011C
        gbc.setState(0xb103, 0xc531, 0x1cc0, 0x3819, 0xfb25, 0xe978, 0x1, 0x1);
        gbc.writeMem(0xb103, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc531, gbc.sp());
        EXPECT(0xb105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb103));
        EXPECT(0xd7, gbc.readMem(0xb104));
        // CB D7 011D
        gbc.setState(0x9c1c, 0x6a7d, 0x6740, 0x7b9a, 0xb178, 0xc305, 0x1, 0x0);
        gbc.writeMem(0x9c1c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6a7d, gbc.sp());
        EXPECT(0x9c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c1c));
        EXPECT(0xd7, gbc.readMem(0x9c1d));
        // CB D7 011E
        gbc.setState(0xc7, 0x7155, 0x1df0, 0x15ee, 0x976a, 0xb88d, 0x0, 0x1);
        gbc.writeMem(0xc7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7155, gbc.sp());
        EXPECT(0xc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 011F
        gbc.setState(0x34bc, 0x1a75, 0x2000, 0x6d9f, 0xdeb4, 0xa1ea, 0x1, 0x0);
        gbc.writeMem(0x34bc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1a75, gbc.sp());
        EXPECT(0x34be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0121
        gbc.setState(0x225e, 0xebd0, 0xd9c0, 0x614e, 0x83bb, 0x794a, 0x0, 0x1);
        gbc.writeMem(0x225e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xebd0, gbc.sp());
        EXPECT(0x2260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0122
        gbc.setState(0x1ddf, 0x6f09, 0x5a90, 0x4dd6, 0x7a55, 0x4b15, 0x1, 0x1);
        gbc.writeMem(0x1ddf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6f09, gbc.sp());
        EXPECT(0x1de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0123
        gbc.setState(0xcfbe, 0x87a3, 0xb6c0, 0x4aaa, 0x1c03, 0x812, 0x1, 0x1);
        gbc.writeMem(0xcfbe, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x87a3, gbc.sp());
        EXPECT(0xcfc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfbe));
        EXPECT(0xd7, gbc.readMem(0xcfbf));
        // CB D7 0124
        gbc.setState(0x809, 0xa59, 0xb9c0, 0x55d7, 0xcc2, 0x91f3, 0x1, 0x0);
        gbc.writeMem(0x809, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa59, gbc.sp());
        EXPECT(0x80b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0125
        gbc.setState(0x1b8a, 0x6771, 0x3be0, 0xdf8, 0xca69, 0xf353, 0x1, 0x1);
        gbc.writeMem(0x1b8a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6771, gbc.sp());
        EXPECT(0x1b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0127
        gbc.setState(0xdd1e, 0x3509, 0x6c50, 0x4705, 0x6dfa, 0x50c4, 0x0, 0x1);
        gbc.writeMem(0xdd1e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3509, gbc.sp());
        EXPECT(0xdd20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1e));
        EXPECT(0xd7, gbc.readMem(0xdd1f));
        // CB D7 0128
        gbc.setState(0xb9b1, 0x6cad, 0x1670, 0x9053, 0x86c5, 0xcf86, 0x0, 0x0);
        gbc.writeMem(0xb9b1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6cad, gbc.sp());
        EXPECT(0xb9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b1));
        EXPECT(0xd7, gbc.readMem(0xb9b2));
        // CB D7 0129
        gbc.setState(0x46cd, 0x15fa, 0x60a0, 0x9504, 0x63df, 0xd101, 0x0, 0x1);
        gbc.writeMem(0x46cd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x15fa, gbc.sp());
        EXPECT(0x46cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 012A
        gbc.setState(0x64ed, 0x5e60, 0xd790, 0x8798, 0xfe00, 0xa517, 0x0, 0x1);
        gbc.writeMem(0x64ed, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5e60, gbc.sp());
        EXPECT(0x64ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 012B
        gbc.setState(0x6b1a, 0x6202, 0x8810, 0x82ef, 0x4484, 0x51c8, 0x0, 0x0);
        gbc.writeMem(0x6b1a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6202, gbc.sp());
        EXPECT(0x6b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 012C
        gbc.setState(0x35b6, 0xedc, 0x97a0, 0xcc21, 0xa924, 0x42ab, 0x0, 0x1);
        gbc.writeMem(0x35b6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xedc, gbc.sp());
        EXPECT(0x35b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 012D
        gbc.setState(0x4e27, 0xaaa0, 0x3290, 0xf88e, 0x31d, 0xd554, 0x0, 0x1);
        gbc.writeMem(0x4e27, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xaaa0, gbc.sp());
        EXPECT(0x4e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 012F
        gbc.setState(0x4dbf, 0x29d7, 0xece0, 0xce36, 0x509f, 0xdfb4, 0x1, 0x1);
        gbc.writeMem(0x4dbf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x29d7, gbc.sp());
        EXPECT(0x4dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0130
        gbc.setState(0xc014, 0xff95, 0x84d0, 0x84cd, 0xf808, 0x5b5d, 0x0, 0x1);
        gbc.writeMem(0xc014, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xff95, gbc.sp());
        EXPECT(0xc016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc014));
        EXPECT(0xd7, gbc.readMem(0xc015));
        // CB D7 0131
        gbc.setState(0x52ca, 0x7205, 0x5110, 0x180, 0x3f60, 0x3032, 0x0, 0x1);
        gbc.writeMem(0x52ca, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7205, gbc.sp());
        EXPECT(0x52cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0132
        gbc.setState(0x649f, 0x813c, 0x2890, 0xf320, 0x49a6, 0xad89, 0x1, 0x1);
        gbc.writeMem(0x649f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x813c, gbc.sp());
        EXPECT(0x64a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0133
        gbc.setState(0x15ee, 0x18bc, 0xb1a0, 0x6027, 0xf1a0, 0x4309, 0x0, 0x1);
        gbc.writeMem(0x15ee, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x18bc, gbc.sp());
        EXPECT(0x15f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0134
        gbc.setState(0x2a53, 0xfbd, 0x6660, 0x3d4c, 0xbcee, 0x5b37, 0x0, 0x0);
        gbc.writeMem(0x2a53, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfbd, gbc.sp());
        EXPECT(0x2a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0135
        gbc.setState(0x1fca, 0x82ff, 0x8cb0, 0x6d2, 0x43fc, 0xd86c, 0x1, 0x1);
        gbc.writeMem(0x1fca, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x82ff, gbc.sp());
        EXPECT(0x1fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0136
        gbc.setState(0xb1ea, 0x72a3, 0x45b0, 0xd2b, 0x8066, 0xf55d, 0x1, 0x1);
        gbc.writeMem(0xb1ea, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x72a3, gbc.sp());
        EXPECT(0xb1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ea));
        EXPECT(0xd7, gbc.readMem(0xb1eb));
        // CB D7 0137
        gbc.setState(0x77f1, 0x8ae4, 0xdd20, 0xaf36, 0xb41a, 0xc98c, 0x1, 0x0);
        gbc.writeMem(0x77f1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8ae4, gbc.sp());
        EXPECT(0x77f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0139
        gbc.setState(0xefe0, 0x17a0, 0xab30, 0xa9bc, 0xd09, 0xaabe, 0x0, 0x0);
        gbc.writeMem(0xefe0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x17a0, gbc.sp());
        EXPECT(0xefe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe0));
        EXPECT(0xd7, gbc.readMem(0xefe1));
        // CB D7 013A
        gbc.setState(0xbc9c, 0xb0d8, 0x5780, 0x9bd8, 0xa823, 0xcbf, 0x1, 0x1);
        gbc.writeMem(0xbc9c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb0d8, gbc.sp());
        EXPECT(0xbc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9c));
        EXPECT(0xd7, gbc.readMem(0xbc9d));
        // CB D7 013C
        gbc.setState(0x760e, 0x60a2, 0xb530, 0xbd6b, 0xd9c5, 0x831b, 0x0, 0x1);
        gbc.writeMem(0x760e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x60a2, gbc.sp());
        EXPECT(0x7610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 013D
        gbc.setState(0x885, 0x929c, 0xca60, 0x58e, 0xd48d, 0x4870, 0x1, 0x0);
        gbc.writeMem(0x885, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x929c, gbc.sp());
        EXPECT(0x887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 013E
        gbc.setState(0xc201, 0x7484, 0x1170, 0x5d4b, 0x8963, 0x388f, 0x1, 0x0);
        gbc.writeMem(0xc201, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7484, gbc.sp());
        EXPECT(0xc203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc201));
        EXPECT(0xd7, gbc.readMem(0xc202));
        // CB D7 013F
        gbc.setState(0xb277, 0xaaaa, 0x3f40, 0x6871, 0x3cf4, 0x5338, 0x1, 0x0);
        gbc.writeMem(0xb277, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaaaa, gbc.sp());
        EXPECT(0xb279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb277));
        EXPECT(0xd7, gbc.readMem(0xb278));
        // CB D7 0140
        gbc.setState(0x852f, 0x8e64, 0x5d80, 0xb438, 0xc44a, 0xeed1, 0x1, 0x1);
        gbc.writeMem(0x852f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8e64, gbc.sp());
        EXPECT(0x8531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852f));
        EXPECT(0xd7, gbc.readMem(0x8530));
        // CB D7 0141
        gbc.setState(0xa96f, 0x1177, 0xbe10, 0x884d, 0x7540, 0xd84f, 0x0, 0x1);
        gbc.writeMem(0xa96f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1177, gbc.sp());
        EXPECT(0xa971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96f));
        EXPECT(0xd7, gbc.readMem(0xa970));
        // CB D7 0142
        gbc.setState(0x79d0, 0xaf94, 0xaca0, 0x241c, 0xb55e, 0x25d7, 0x1, 0x0);
        gbc.writeMem(0x79d0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xaf94, gbc.sp());
        EXPECT(0x79d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0143
        gbc.setState(0x3486, 0x8c2a, 0x2250, 0x534a, 0xa9f7, 0x8cff, 0x1, 0x0);
        gbc.writeMem(0x3486, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8c2a, gbc.sp());
        EXPECT(0x3488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0144
        gbc.setState(0xb804, 0x2729, 0xcac0, 0xf87c, 0xc20e, 0xa306, 0x1, 0x1);
        gbc.writeMem(0xb804, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2729, gbc.sp());
        EXPECT(0xb806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb804));
        EXPECT(0xd7, gbc.readMem(0xb805));
        // CB D7 0146
        gbc.setState(0x68c9, 0x6b11, 0x5510, 0x631c, 0x613, 0x43fa, 0x0, 0x1);
        gbc.writeMem(0x68c9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6b11, gbc.sp());
        EXPECT(0x68cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0147
        gbc.setState(0xb619, 0xcf17, 0x9450, 0x1a53, 0x6085, 0x84a3, 0x1, 0x1);
        gbc.writeMem(0xb619, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcf17, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb619));
        EXPECT(0xd7, gbc.readMem(0xb61a));
        // CB D7 0148
        gbc.setState(0xbcad, 0x950f, 0xaeb0, 0x8bf2, 0x2cba, 0x5779, 0x0, 0x0);
        gbc.writeMem(0xbcad, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x950f, gbc.sp());
        EXPECT(0xbcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcad));
        EXPECT(0xd7, gbc.readMem(0xbcae));
        // CB D7 0149
        gbc.setState(0xc1dd, 0x393e, 0xcb60, 0x45df, 0xd9e8, 0xc974, 0x1, 0x0);
        gbc.writeMem(0xc1dd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x393e, gbc.sp());
        EXPECT(0xc1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1dd));
        EXPECT(0xd7, gbc.readMem(0xc1de));
        // CB D7 014A
        gbc.setState(0xb66, 0x17c, 0xf50, 0x37fa, 0x1090, 0xd18c, 0x0, 0x1);
        gbc.writeMem(0xb66, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x17c, gbc.sp());
        EXPECT(0xb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 014B
        gbc.setState(0xac5f, 0xf023, 0x2d10, 0x42dc, 0xf794, 0x9281, 0x0, 0x1);
        gbc.writeMem(0xac5f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf023, gbc.sp());
        EXPECT(0xac61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5f));
        EXPECT(0xd7, gbc.readMem(0xac60));
        // CB D7 014C
        gbc.setState(0x9685, 0xf6a4, 0x1b10, 0xe89f, 0x3dba, 0x2172, 0x1, 0x0);
        gbc.writeMem(0x9685, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf6a4, gbc.sp());
        EXPECT(0x9687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9685));
        EXPECT(0xd7, gbc.readMem(0x9686));
        // CB D7 014D
        gbc.setState(0x4186, 0xa210, 0x6370, 0xd0fb, 0xf476, 0x8a6a, 0x1, 0x0);
        gbc.writeMem(0x4186, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa210, gbc.sp());
        EXPECT(0x4188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 014E
        gbc.setState(0x7ce9, 0x5c8c, 0x9ef0, 0xffb8, 0xb038, 0x14ec, 0x1, 0x0);
        gbc.writeMem(0x7ce9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5c8c, gbc.sp());
        EXPECT(0x7ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 014F
        gbc.setState(0xea2a, 0xd8c8, 0x35f0, 0x756, 0x82b6, 0xafd0, 0x1, 0x1);
        gbc.writeMem(0xea2a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd8c8, gbc.sp());
        EXPECT(0xea2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea2a));
        EXPECT(0xd7, gbc.readMem(0xea2b));
        // CB D7 0150
        gbc.setState(0x2806, 0x6247, 0x59a0, 0xbc2, 0xa62c, 0x2a45, 0x0, 0x0);
        gbc.writeMem(0x2806, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6247, gbc.sp());
        EXPECT(0x2808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0151
        gbc.setState(0x3e62, 0x9bcc, 0x370, 0xc26c, 0x18a3, 0x7fc2, 0x1, 0x0);
        gbc.writeMem(0x3e62, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9bcc, gbc.sp());
        EXPECT(0x3e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0152
        gbc.setState(0xef6e, 0x3b8d, 0xb40, 0xed5c, 0xd693, 0x1416, 0x1, 0x1);
        gbc.writeMem(0xef6e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3b8d, gbc.sp());
        EXPECT(0xef70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6e));
        EXPECT(0xd7, gbc.readMem(0xef6f));
        // CB D7 0153
        gbc.setState(0xd73e, 0x4461, 0xee70, 0xe6c5, 0xfe57, 0x7c42, 0x1, 0x0);
        gbc.writeMem(0xd73e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4461, gbc.sp());
        EXPECT(0xd740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73e));
        EXPECT(0xd7, gbc.readMem(0xd73f));
        // CB D7 0154
        gbc.setState(0x89cd, 0xa4a8, 0x9540, 0xe1ab, 0x7e68, 0x3278, 0x1, 0x1);
        gbc.writeMem(0x89cd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa4a8, gbc.sp());
        EXPECT(0x89cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cd));
        EXPECT(0xd7, gbc.readMem(0x89ce));
        // CB D7 0155
        gbc.setState(0x71b2, 0xb4e3, 0x27e0, 0x13aa, 0xbee3, 0xfe31, 0x1, 0x0);
        gbc.writeMem(0x71b2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb4e3, gbc.sp());
        EXPECT(0x71b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0156
        gbc.setState(0xaf99, 0x4ec8, 0xad00, 0xdaf2, 0xed6c, 0x2e78, 0x0, 0x1);
        gbc.writeMem(0xaf99, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4ec8, gbc.sp());
        EXPECT(0xaf9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf99));
        EXPECT(0xd7, gbc.readMem(0xaf9a));
        // CB D7 0157
        gbc.setState(0x207f, 0xcaa8, 0x9b30, 0xf9d2, 0x990d, 0x9df1, 0x1, 0x0);
        gbc.writeMem(0x207f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcaa8, gbc.sp());
        EXPECT(0x2081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0158
        gbc.setState(0xc0dd, 0x8e69, 0x8870, 0x2e24, 0x383e, 0x8fd, 0x1, 0x1);
        gbc.writeMem(0xc0dd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8e69, gbc.sp());
        EXPECT(0xc0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0dd));
        EXPECT(0xd7, gbc.readMem(0xc0de));
        // CB D7 0159
        gbc.setState(0x5029, 0xeac2, 0xb570, 0xde3c, 0xba0c, 0x299, 0x1, 0x1);
        gbc.writeMem(0x5029, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xeac2, gbc.sp());
        EXPECT(0x502b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 015A
        gbc.setState(0xa06f, 0x5979, 0x1590, 0xcf6d, 0x15e0, 0x3bf5, 0x0, 0x0);
        gbc.writeMem(0xa06f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5979, gbc.sp());
        EXPECT(0xa071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06f));
        EXPECT(0xd7, gbc.readMem(0xa070));
        // CB D7 015B
        gbc.setState(0xc6e8, 0xf51d, 0xd0e0, 0xfd87, 0x4c78, 0x99a9, 0x0, 0x0);
        gbc.writeMem(0xc6e8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf51d, gbc.sp());
        EXPECT(0xc6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e8));
        EXPECT(0xd7, gbc.readMem(0xc6e9));
        // CB D7 015C
        gbc.setState(0x65af, 0x589d, 0x6780, 0x6dac, 0xd6c3, 0x3e9, 0x0, 0x1);
        gbc.writeMem(0x65af, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x589d, gbc.sp());
        EXPECT(0x65b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 015D
        gbc.setState(0xe751, 0x5ede, 0x9db0, 0x7a2a, 0x97bb, 0x1062, 0x0, 0x1);
        gbc.writeMem(0xe751, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5ede, gbc.sp());
        EXPECT(0xe753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe751));
        EXPECT(0xd7, gbc.readMem(0xe752));
        // CB D7 015E
        gbc.setState(0x7ff9, 0x6f08, 0x3110, 0xcfb2, 0xaf33, 0xd958, 0x0, 0x1);
        gbc.writeMem(0x7ff9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6f08, gbc.sp());
        EXPECT(0x7ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 015F
        gbc.setState(0xb13, 0x4fd6, 0xe2c0, 0xde7b, 0x77dd, 0x9ca1, 0x1, 0x1);
        gbc.writeMem(0xb13, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4fd6, gbc.sp());
        EXPECT(0xb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0160
        gbc.setState(0xdbfb, 0x781f, 0x2990, 0x6a81, 0xc340, 0xe00, 0x1, 0x0);
        gbc.writeMem(0xdbfb, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x781f, gbc.sp());
        EXPECT(0xdbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbfb));
        EXPECT(0xd7, gbc.readMem(0xdbfc));
        // CB D7 0161
        gbc.setState(0x7628, 0xd22f, 0xc680, 0x77f0, 0x7890, 0x67dc, 0x0, 0x0);
        gbc.writeMem(0x7628, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd22f, gbc.sp());
        EXPECT(0x762a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0162
        gbc.setState(0x3e8a, 0x30a8, 0xa910, 0xcfe2, 0xd685, 0x6292, 0x1, 0x1);
        gbc.writeMem(0x3e8a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x30a8, gbc.sp());
        EXPECT(0x3e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0163
        gbc.setState(0x241b, 0x5fa1, 0xde30, 0x8e68, 0xfa4, 0xfb81, 0x1, 0x0);
        gbc.writeMem(0x241b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5fa1, gbc.sp());
        EXPECT(0x241d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0164
        gbc.setState(0x10dc, 0x9ac8, 0x53f0, 0xb29e, 0x8ecc, 0xfa03, 0x0, 0x0);
        gbc.writeMem(0x10dc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9ac8, gbc.sp());
        EXPECT(0x10de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0165
        gbc.setState(0x94f5, 0x45fd, 0x7120, 0x4fc9, 0xf36f, 0xe11b, 0x1, 0x1);
        gbc.writeMem(0x94f5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x45fd, gbc.sp());
        EXPECT(0x94f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f5));
        EXPECT(0xd7, gbc.readMem(0x94f6));
        // CB D7 0166
        gbc.setState(0x7aa3, 0xb588, 0xa4b0, 0x795c, 0xfe30, 0x7ce8, 0x1, 0x1);
        gbc.writeMem(0x7aa3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb588, gbc.sp());
        EXPECT(0x7aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0167
        gbc.setState(0x50a, 0x167f, 0xfd30, 0xef10, 0x103a, 0xcc5c, 0x1, 0x1);
        gbc.writeMem(0x50a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x167f, gbc.sp());
        EXPECT(0x50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0168
        gbc.setState(0x1b6f, 0x3cb7, 0x22d0, 0x436b, 0xc82a, 0x9940, 0x0, 0x0);
        gbc.writeMem(0x1b6f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3cb7, gbc.sp());
        EXPECT(0x1b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0169
        gbc.setState(0xe0a1, 0xd77f, 0x3eb0, 0x4067, 0xec81, 0xb774, 0x1, 0x1);
        gbc.writeMem(0xe0a1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd77f, gbc.sp());
        EXPECT(0xe0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a1));
        EXPECT(0xd7, gbc.readMem(0xe0a2));
        // CB D7 016A
        gbc.setState(0x1658, 0x7d03, 0xe9f0, 0x44d, 0xac3c, 0x3d30, 0x0, 0x0);
        gbc.writeMem(0x1658, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7d03, gbc.sp());
        EXPECT(0x165a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 016B
        gbc.setState(0x5ef6, 0xa1e3, 0xd620, 0x5ff9, 0x467, 0x5e7f, 0x1, 0x1);
        gbc.writeMem(0x5ef6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa1e3, gbc.sp());
        EXPECT(0x5ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 016C
        gbc.setState(0xdffe, 0xebb5, 0x2b00, 0xc3bb, 0x3c49, 0xf20c, 0x0, 0x0);
        gbc.writeMem(0xdffe, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xebb5, gbc.sp());
        EXPECT(0xe000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdffe));
        EXPECT(0xd7, gbc.readMem(0xdfff));
        // CB D7 016F
        gbc.setState(0x62e0, 0x3e93, 0x1340, 0x241a, 0x6c92, 0xee7a, 0x1, 0x1);
        gbc.writeMem(0x62e0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3e93, gbc.sp());
        EXPECT(0x62e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0171
        gbc.setState(0xeda9, 0x5739, 0x9280, 0xb208, 0x39e4, 0xa3a4, 0x1, 0x1);
        gbc.writeMem(0xeda9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5739, gbc.sp());
        EXPECT(0xedab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda9));
        EXPECT(0xd7, gbc.readMem(0xedaa));
        // CB D7 0172
        gbc.setState(0x1678, 0xe465, 0x5470, 0x84d7, 0xd7b2, 0x3fe7, 0x0, 0x1);
        gbc.writeMem(0x1678, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe465, gbc.sp());
        EXPECT(0x167a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0173
        gbc.setState(0xb538, 0xeae4, 0xd190, 0x7a8b, 0x3fc4, 0x8f57, 0x0, 0x1);
        gbc.writeMem(0xb538, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xeae4, gbc.sp());
        EXPECT(0xb53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb538));
        EXPECT(0xd7, gbc.readMem(0xb539));
        // CB D7 0174
        gbc.setState(0x1944, 0x2936, 0xdeb0, 0xd0e8, 0x7c4d, 0x2aa9, 0x0, 0x1);
        gbc.writeMem(0x1944, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2936, gbc.sp());
        EXPECT(0x1946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0175
        gbc.setState(0xa104, 0x6282, 0xea80, 0x310b, 0x9a4a, 0x9d82, 0x0, 0x1);
        gbc.writeMem(0xa104, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6282, gbc.sp());
        EXPECT(0xa106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa104));
        EXPECT(0xd7, gbc.readMem(0xa105));
        // CB D7 0176
        gbc.setState(0xb8fb, 0x1065, 0xfa90, 0xbc18, 0x99b3, 0xf657, 0x0, 0x1);
        gbc.writeMem(0xb8fb, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1065, gbc.sp());
        EXPECT(0xb8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fb));
        EXPECT(0xd7, gbc.readMem(0xb8fc));
        // CB D7 0177
        gbc.setState(0xa275, 0xcb40, 0x4430, 0xefe2, 0xd2fd, 0x2b31, 0x0, 0x1);
        gbc.writeMem(0xa275, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcb40, gbc.sp());
        EXPECT(0xa277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa275));
        EXPECT(0xd7, gbc.readMem(0xa276));
        // CB D7 0178
        gbc.setState(0xc8a7, 0x5b2a, 0x5a60, 0x5037, 0x1c93, 0x8402, 0x1, 0x1);
        gbc.writeMem(0xc8a7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5b2a, gbc.sp());
        EXPECT(0xc8a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a7));
        EXPECT(0xd7, gbc.readMem(0xc8a8));
        // CB D7 0179
        gbc.setState(0x49a9, 0x44bb, 0x6840, 0xc5a9, 0x2983, 0x2e60, 0x1, 0x0);
        gbc.writeMem(0x49a9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x44bb, gbc.sp());
        EXPECT(0x49ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 017A
        gbc.setState(0x5355, 0xe332, 0xe0a0, 0xa955, 0xeb57, 0xb02c, 0x1, 0x0);
        gbc.writeMem(0x5355, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe332, gbc.sp());
        EXPECT(0x5357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 017B
        gbc.setState(0xd8ff, 0x6d37, 0x5850, 0xc37, 0x507e, 0xa2e9, 0x1, 0x0);
        gbc.writeMem(0xd8ff, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6d37, gbc.sp());
        EXPECT(0xd901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ff));
        EXPECT(0xd7, gbc.readMem(0xd900));
        // CB D7 017C
        gbc.setState(0xe2fa, 0x2a2, 0x4360, 0xbb34, 0xeec4, 0x83e8, 0x1, 0x1);
        gbc.writeMem(0xe2fa, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2a2, gbc.sp());
        EXPECT(0xe2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fa));
        EXPECT(0xd7, gbc.readMem(0xe2fb));
        // CB D7 017D
        gbc.setState(0x5bf8, 0x62e9, 0xbac0, 0x51e4, 0x2ab2, 0xd4a, 0x0, 0x1);
        gbc.writeMem(0x5bf8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x62e9, gbc.sp());
        EXPECT(0x5bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 017E
        gbc.setState(0x691, 0x299f, 0x9460, 0x8c75, 0x8024, 0xf64f, 0x1, 0x0);
        gbc.writeMem(0x691, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x299f, gbc.sp());
        EXPECT(0x693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 017F
        gbc.setState(0xe943, 0xb11, 0x21f0, 0xfdef, 0x5cb, 0x68de, 0x0, 0x1);
        gbc.writeMem(0xe943, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb11, gbc.sp());
        EXPECT(0xe945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe943));
        EXPECT(0xd7, gbc.readMem(0xe944));
        // CB D7 0180
        gbc.setState(0x8c85, 0xdf1b, 0x67b0, 0x797a, 0x26ff, 0x2a67, 0x0, 0x0);
        gbc.writeMem(0x8c85, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdf1b, gbc.sp());
        EXPECT(0x8c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c85));
        EXPECT(0xd7, gbc.readMem(0x8c86));
        // CB D7 0181
        gbc.setState(0x8fa1, 0x3be1, 0xf6a0, 0x10cc, 0x5919, 0x80c3, 0x1, 0x0);
        gbc.writeMem(0x8fa1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3be1, gbc.sp());
        EXPECT(0x8fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa1));
        EXPECT(0xd7, gbc.readMem(0x8fa2));
        // CB D7 0182
        gbc.setState(0x2da4, 0xef64, 0x6bf0, 0x77f2, 0xda8a, 0xead6, 0x0, 0x0);
        gbc.writeMem(0x2da4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xef64, gbc.sp());
        EXPECT(0x2da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0183
        gbc.setState(0x1cef, 0xb70, 0xdf0, 0x8f6b, 0xb1ca, 0x2ad, 0x1, 0x0);
        gbc.writeMem(0x1cef, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb70, gbc.sp());
        EXPECT(0x1cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0184
        gbc.setState(0x227c, 0x8949, 0xb250, 0x7f84, 0x47f8, 0xd739, 0x1, 0x0);
        gbc.writeMem(0x227c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8949, gbc.sp());
        EXPECT(0x227e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0186
        gbc.setState(0x670b, 0x440c, 0x4b30, 0x8915, 0x6116, 0xfa45, 0x0, 0x0);
        gbc.writeMem(0x670b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x440c, gbc.sp());
        EXPECT(0x670d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0187
        gbc.setState(0x6b12, 0x90fd, 0xc6d0, 0x8615, 0xa3ac, 0x2f49, 0x0, 0x1);
        gbc.writeMem(0x6b12, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x90fd, gbc.sp());
        EXPECT(0x6b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0188
        gbc.setState(0x691b, 0x94f5, 0x6540, 0x36d, 0xdc38, 0x7a2e, 0x1, 0x1);
        gbc.writeMem(0x691b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x94f5, gbc.sp());
        EXPECT(0x691d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 018A
        gbc.setState(0x7427, 0x7932, 0x7880, 0x9ee0, 0x7600, 0xc1ab, 0x0, 0x1);
        gbc.writeMem(0x7427, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7932, gbc.sp());
        EXPECT(0x7429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 018B
        gbc.setState(0x6667, 0xf132, 0x64a0, 0x1ef4, 0x3047, 0x797d, 0x0, 0x1);
        gbc.writeMem(0x6667, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf132, gbc.sp());
        EXPECT(0x6669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 018C
        gbc.setState(0xde24, 0x6170, 0xea20, 0xcef, 0x2fe3, 0xc595, 0x1, 0x1);
        gbc.writeMem(0xde24, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6170, gbc.sp());
        EXPECT(0xde26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde24));
        EXPECT(0xd7, gbc.readMem(0xde25));
        // CB D7 018D
        gbc.setState(0xab72, 0xe117, 0xf170, 0xd93, 0x6270, 0xc86b, 0x1, 0x1);
        gbc.writeMem(0xab72, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe117, gbc.sp());
        EXPECT(0xab74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab72));
        EXPECT(0xd7, gbc.readMem(0xab73));
        // CB D7 018E
        gbc.setState(0x6f4b, 0xe575, 0xcaa0, 0x9339, 0x873a, 0xa630, 0x1, 0x1);
        gbc.writeMem(0x6f4b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe575, gbc.sp());
        EXPECT(0x6f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 018F
        gbc.setState(0xb3a0, 0x7ccb, 0xd1b0, 0x5bc2, 0x3021, 0x48e3, 0x1, 0x1);
        gbc.writeMem(0xb3a0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7ccb, gbc.sp());
        EXPECT(0xb3a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a0));
        EXPECT(0xd7, gbc.readMem(0xb3a1));
        // CB D7 0190
        gbc.setState(0x37a9, 0xfb19, 0x150, 0x16a5, 0x596a, 0xb2ca, 0x0, 0x0);
        gbc.writeMem(0x37a9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfb19, gbc.sp());
        EXPECT(0x37ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0191
        gbc.setState(0x25a, 0x8558, 0x1fe0, 0xe21b, 0x73e7, 0xe491, 0x0, 0x1);
        gbc.writeMem(0x25a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8558, gbc.sp());
        EXPECT(0x25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0192
        gbc.setState(0xaba, 0x4e7e, 0xe380, 0xa7b, 0xf54d, 0xd09c, 0x1, 0x0);
        gbc.writeMem(0xaba, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4e7e, gbc.sp());
        EXPECT(0xabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0193
        gbc.setState(0x5c5, 0x46e4, 0x1730, 0xad0, 0x44b0, 0xa489, 0x0, 0x0);
        gbc.writeMem(0x5c5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x46e4, gbc.sp());
        EXPECT(0x5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0194
        gbc.setState(0x386f, 0xc422, 0xc4b0, 0x630c, 0xbc86, 0x4fd, 0x1, 0x1);
        gbc.writeMem(0x386f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc422, gbc.sp());
        EXPECT(0x3871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0195
        gbc.setState(0xda8b, 0xdb04, 0x1ab0, 0xc59a, 0x5267, 0x11dc, 0x0, 0x1);
        gbc.writeMem(0xda8b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdb04, gbc.sp());
        EXPECT(0xda8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8b));
        EXPECT(0xd7, gbc.readMem(0xda8c));
        // CB D7 0196
        gbc.setState(0x62a3, 0x4610, 0xf020, 0x5775, 0xadc5, 0x6c7a, 0x0, 0x1);
        gbc.writeMem(0x62a3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4610, gbc.sp());
        EXPECT(0x62a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0197
        gbc.setState(0x5e27, 0xd9bd, 0xc120, 0xb8bf, 0x973a, 0xb352, 0x0, 0x0);
        gbc.writeMem(0x5e27, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd9bd, gbc.sp());
        EXPECT(0x5e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0198
        gbc.setState(0x45f, 0x995d, 0x17d0, 0xfb47, 0xf9f3, 0x1541, 0x1, 0x1);
        gbc.writeMem(0x45f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x995d, gbc.sp());
        EXPECT(0x461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0199
        gbc.setState(0x8c9d, 0xa98a, 0x1e0, 0xf269, 0xd98a, 0xdb4e, 0x0, 0x0);
        gbc.writeMem(0x8c9d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa98a, gbc.sp());
        EXPECT(0x8c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9d));
        EXPECT(0xd7, gbc.readMem(0x8c9e));
        // CB D7 019A
        gbc.setState(0xe1db, 0x424, 0x66d0, 0x4ba9, 0x2907, 0x8f57, 0x1, 0x1);
        gbc.writeMem(0xe1db, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x424, gbc.sp());
        EXPECT(0xe1dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1db));
        EXPECT(0xd7, gbc.readMem(0xe1dc));
        // CB D7 019B
        gbc.setState(0x75fa, 0xeb43, 0x3280, 0x177d, 0xae65, 0xe54a, 0x1, 0x0);
        gbc.writeMem(0x75fa, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xeb43, gbc.sp());
        EXPECT(0x75fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 019C
        gbc.setState(0xd807, 0xe8b8, 0x83d0, 0x46a0, 0xf5f, 0x72b2, 0x0, 0x1);
        gbc.writeMem(0xd807, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe8b8, gbc.sp());
        EXPECT(0xd809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd807));
        EXPECT(0xd7, gbc.readMem(0xd808));
        // CB D7 019D
        gbc.setState(0x3734, 0x8cf4, 0x5d0, 0xbe1d, 0x3d34, 0x5f62, 0x1, 0x1);
        gbc.writeMem(0x3734, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8cf4, gbc.sp());
        EXPECT(0x3736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 019E
        gbc.setState(0x8d29, 0x9934, 0x6d10, 0xcf3a, 0xe573, 0x8e, 0x1, 0x0);
        gbc.writeMem(0x8d29, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9934, gbc.sp());
        EXPECT(0x8d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d29));
        EXPECT(0xd7, gbc.readMem(0x8d2a));
        // CB D7 019F
        gbc.setState(0xbb28, 0xeaee, 0xbc80, 0x6044, 0x1a1f, 0xa2af, 0x1, 0x0);
        gbc.writeMem(0xbb28, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xeaee, gbc.sp());
        EXPECT(0xbb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb28));
        EXPECT(0xd7, gbc.readMem(0xbb29));
        // CB D7 01A0
        gbc.setState(0x5a2, 0x108c, 0x5420, 0xca6f, 0xa560, 0xf3c0, 0x0, 0x1);
        gbc.writeMem(0x5a2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x108c, gbc.sp());
        EXPECT(0x5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01A1
        gbc.setState(0x7f7c, 0xdec9, 0xa70, 0x6b12, 0x882a, 0x4f, 0x0, 0x0);
        gbc.writeMem(0x7f7c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdec9, gbc.sp());
        EXPECT(0x7f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01A4
        gbc.setState(0x524c, 0x812d, 0xf120, 0xb448, 0x82f1, 0xdd72, 0x1, 0x1);
        gbc.writeMem(0x524c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x812d, gbc.sp());
        EXPECT(0x524e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01A5
        gbc.setState(0xb2a7, 0xf091, 0xb130, 0x1f2b, 0x5cc8, 0xd5e2, 0x0, 0x0);
        gbc.writeMem(0xb2a7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf091, gbc.sp());
        EXPECT(0xb2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a7));
        EXPECT(0xd7, gbc.readMem(0xb2a8));
        // CB D7 01A6
        gbc.setState(0xac03, 0xf243, 0x4b30, 0xe7e4, 0xbb9b, 0x2670, 0x0, 0x0);
        gbc.writeMem(0xac03, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf243, gbc.sp());
        EXPECT(0xac05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac03));
        EXPECT(0xd7, gbc.readMem(0xac04));
        // CB D7 01A7
        gbc.setState(0x7109, 0xa8ce, 0x6f50, 0x242c, 0x8a5, 0x2628, 0x1, 0x0);
        gbc.writeMem(0x7109, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa8ce, gbc.sp());
        EXPECT(0x710b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01A8
        gbc.setState(0x8851, 0x4715, 0x950, 0x73f3, 0x912c, 0x7083, 0x0, 0x1);
        gbc.writeMem(0x8851, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4715, gbc.sp());
        EXPECT(0x8853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8851));
        EXPECT(0xd7, gbc.readMem(0x8852));
        // CB D7 01A9
        gbc.setState(0x3525, 0x92f3, 0x1280, 0x411d, 0x8c14, 0x1b21, 0x0, 0x0);
        gbc.writeMem(0x3525, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x92f3, gbc.sp());
        EXPECT(0x3527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01AA
        gbc.setState(0x8855, 0x63bb, 0x8e60, 0x2718, 0x7db, 0x852e, 0x0, 0x0);
        gbc.writeMem(0x8855, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x63bb, gbc.sp());
        EXPECT(0x8857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8855));
        EXPECT(0xd7, gbc.readMem(0x8856));
        // CB D7 01AC
        gbc.setState(0xab85, 0x620a, 0xa290, 0x4dc2, 0x81e5, 0xc05f, 0x1, 0x0);
        gbc.writeMem(0xab85, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x620a, gbc.sp());
        EXPECT(0xab87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab85));
        EXPECT(0xd7, gbc.readMem(0xab86));
        // CB D7 01AD
        gbc.setState(0x74ae, 0xa1e6, 0x3980, 0x2ffe, 0x878d, 0x305a, 0x0, 0x1);
        gbc.writeMem(0x74ae, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa1e6, gbc.sp());
        EXPECT(0x74b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01AE
        gbc.setState(0x2e4d, 0x7002, 0x8320, 0xbc77, 0x69ed, 0x64ff, 0x0, 0x0);
        gbc.writeMem(0x2e4d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7002, gbc.sp());
        EXPECT(0x2e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01AF
        gbc.setState(0x71e, 0x59a0, 0x20f0, 0xe664, 0xdad7, 0xa6a8, 0x1, 0x0);
        gbc.writeMem(0x71e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x59a0, gbc.sp());
        EXPECT(0x720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01B1
        gbc.setState(0x8c05, 0xaa9, 0xff90, 0x2197, 0x25d4, 0xf8d1, 0x0, 0x1);
        gbc.writeMem(0x8c05, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaa9, gbc.sp());
        EXPECT(0x8c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c05));
        EXPECT(0xd7, gbc.readMem(0x8c06));
        // CB D7 01B2
        gbc.setState(0x779e, 0xff93, 0x6a90, 0x6e42, 0x7d14, 0x485c, 0x1, 0x1);
        gbc.writeMem(0x779e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xff93, gbc.sp());
        EXPECT(0x77a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01B3
        gbc.setState(0x2c0e, 0x4218, 0xf710, 0xf1f4, 0x1490, 0x7e47, 0x0, 0x0);
        gbc.writeMem(0x2c0e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4218, gbc.sp());
        EXPECT(0x2c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01B4
        gbc.setState(0xef3e, 0x98ae, 0xba00, 0x1a95, 0x412a, 0x8fd5, 0x0, 0x0);
        gbc.writeMem(0xef3e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x98ae, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3e));
        EXPECT(0xd7, gbc.readMem(0xef3f));
        // CB D7 01B5
        gbc.setState(0x1b36, 0x1580, 0xded0, 0x4b1e, 0xb37d, 0x2b97, 0x0, 0x1);
        gbc.writeMem(0x1b36, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1580, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01B6
        gbc.setState(0x8032, 0xfd3, 0x7ca0, 0xbdcb, 0x34c, 0xb6b2, 0x0, 0x0);
        gbc.writeMem(0x8032, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfd3, gbc.sp());
        EXPECT(0x8034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8032));
        EXPECT(0xd7, gbc.readMem(0x8033));
        // CB D7 01B7
        gbc.setState(0x7576, 0x2448, 0x25d0, 0xaa52, 0x8fea, 0x68b7, 0x0, 0x1);
        gbc.writeMem(0x7576, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2448, gbc.sp());
        EXPECT(0x7578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01B8
        gbc.setState(0x4e59, 0x63c6, 0x4e70, 0x8883, 0x8af1, 0xee35, 0x1, 0x1);
        gbc.writeMem(0x4e59, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x63c6, gbc.sp());
        EXPECT(0x4e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01B9
        gbc.setState(0x930a, 0x40ec, 0x83d0, 0xdddb, 0xbbbb, 0xd744, 0x0, 0x1);
        gbc.writeMem(0x930a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x40ec, gbc.sp());
        EXPECT(0x930c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x930a));
        EXPECT(0xd7, gbc.readMem(0x930b));
        // CB D7 01BB
        gbc.setState(0x83d6, 0x1b35, 0x8ef0, 0xe32c, 0xe95b, 0xd977, 0x0, 0x1);
        gbc.writeMem(0x83d6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1b35, gbc.sp());
        EXPECT(0x83d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d6));
        EXPECT(0xd7, gbc.readMem(0x83d7));
        // CB D7 01BC
        gbc.setState(0x54c9, 0x8ab8, 0xb680, 0xda56, 0x9152, 0x5f7e, 0x1, 0x0);
        gbc.writeMem(0x54c9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8ab8, gbc.sp());
        EXPECT(0x54cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01BD
        gbc.setState(0xa95d, 0x437c, 0x5740, 0x3c60, 0xa022, 0x384c, 0x0, 0x1);
        gbc.writeMem(0xa95d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0xa95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95d));
        EXPECT(0xd7, gbc.readMem(0xa95e));
        // CB D7 01BE
        gbc.setState(0x364c, 0xcbd2, 0x1a0, 0xc869, 0x8248, 0x43e2, 0x1, 0x0);
        gbc.writeMem(0x364c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcbd2, gbc.sp());
        EXPECT(0x364e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01BF
        gbc.setState(0xb1b6, 0x768a, 0xf080, 0x77b1, 0x3eb2, 0xb72, 0x0, 0x0);
        gbc.writeMem(0xb1b6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x768a, gbc.sp());
        EXPECT(0xb1b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b6));
        EXPECT(0xd7, gbc.readMem(0xb1b7));
        // CB D7 01C0
        gbc.setState(0x6bf5, 0xce87, 0x7a30, 0xc7a4, 0x4f5c, 0x17b2, 0x1, 0x0);
        gbc.writeMem(0x6bf5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xce87, gbc.sp());
        EXPECT(0x6bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01C1
        gbc.setState(0xec93, 0x20af, 0xf600, 0x6694, 0xee8c, 0x32d8, 0x1, 0x1);
        gbc.writeMem(0xec93, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x20af, gbc.sp());
        EXPECT(0xec95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec93));
        EXPECT(0xd7, gbc.readMem(0xec94));
        // CB D7 01C2
        gbc.setState(0xc4d0, 0x3c62, 0xb920, 0x15b4, 0x93ac, 0x8b47, 0x1, 0x0);
        gbc.writeMem(0xc4d0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3c62, gbc.sp());
        EXPECT(0xc4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d0));
        EXPECT(0xd7, gbc.readMem(0xc4d1));
        // CB D7 01C3
        gbc.setState(0x818e, 0x2566, 0xe8e0, 0x8d50, 0xe244, 0x64b6, 0x1, 0x1);
        gbc.writeMem(0x818e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2566, gbc.sp());
        EXPECT(0x8190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818e));
        EXPECT(0xd7, gbc.readMem(0x818f));
        // CB D7 01C4
        gbc.setState(0x115d, 0x6506, 0x9520, 0x4fe6, 0x9683, 0xf6e6, 0x1, 0x0);
        gbc.writeMem(0x115d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6506, gbc.sp());
        EXPECT(0x115f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01C5
        gbc.setState(0x1105, 0x9117, 0xec30, 0xf76e, 0x657c, 0x235, 0x1, 0x0);
        gbc.writeMem(0x1105, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9117, gbc.sp());
        EXPECT(0x1107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01C6
        gbc.setState(0x36d1, 0x3e4e, 0x7440, 0x7086, 0xaa70, 0xc902, 0x1, 0x1);
        gbc.writeMem(0x36d1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3e4e, gbc.sp());
        EXPECT(0x36d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01C7
        gbc.setState(0x77a8, 0x33d8, 0xd220, 0x54a4, 0x75ba, 0x6cb9, 0x1, 0x0);
        gbc.writeMem(0x77a8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x33d8, gbc.sp());
        EXPECT(0x77aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01C8
        gbc.setState(0x4abb, 0x295e, 0x7520, 0x282a, 0xaf0f, 0xe4e0, 0x1, 0x1);
        gbc.writeMem(0x4abb, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x295e, gbc.sp());
        EXPECT(0x4abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01C9
        gbc.setState(0xbb94, 0xa634, 0xa810, 0x743e, 0x314, 0x8635, 0x1, 0x1);
        gbc.writeMem(0xbb94, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa634, gbc.sp());
        EXPECT(0xbb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb94));
        EXPECT(0xd7, gbc.readMem(0xbb95));
        // CB D7 01CA
        gbc.setState(0xaea9, 0x4f70, 0xf1a0, 0x929e, 0x284, 0xb9cf, 0x1, 0x1);
        gbc.writeMem(0xaea9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4f70, gbc.sp());
        EXPECT(0xaeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea9));
        EXPECT(0xd7, gbc.readMem(0xaeaa));
        // CB D7 01CB
        gbc.setState(0x1765, 0x8cee, 0xce70, 0x2147, 0x7df5, 0x65ca, 0x1, 0x1);
        gbc.writeMem(0x1765, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8cee, gbc.sp());
        EXPECT(0x1767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01CC
        gbc.setState(0x500e, 0x88e6, 0x9b80, 0x5611, 0x7693, 0x8a10, 0x0, 0x0);
        gbc.writeMem(0x500e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x88e6, gbc.sp());
        EXPECT(0x5010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01CD
        gbc.setState(0x8ace, 0x23ae, 0xbba0, 0xbd11, 0x51a, 0xeb7a, 0x0, 0x1);
        gbc.writeMem(0x8ace, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x23ae, gbc.sp());
        EXPECT(0x8ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ace));
        EXPECT(0xd7, gbc.readMem(0x8acf));
        // CB D7 01CE
        gbc.setState(0xb5c8, 0x5b39, 0x3550, 0x5d74, 0x5d2d, 0x1c37, 0x0, 0x0);
        gbc.writeMem(0xb5c8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5b39, gbc.sp());
        EXPECT(0xb5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c8));
        EXPECT(0xd7, gbc.readMem(0xb5c9));
        // CB D7 01CF
        gbc.setState(0xb76a, 0x9287, 0x1680, 0x3eb8, 0x6d9d, 0xad8c, 0x0, 0x0);
        gbc.writeMem(0xb76a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9287, gbc.sp());
        EXPECT(0xb76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76a));
        EXPECT(0xd7, gbc.readMem(0xb76b));
        // CB D7 01D1
        gbc.setState(0xe7c4, 0xf7d5, 0x3b50, 0xb7a7, 0x5219, 0xe43d, 0x0, 0x1);
        gbc.writeMem(0xe7c4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf7d5, gbc.sp());
        EXPECT(0xe7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c4));
        EXPECT(0xd7, gbc.readMem(0xe7c5));
        // CB D7 01D2
        gbc.setState(0xa230, 0xbb0f, 0x1a20, 0x302a, 0x959c, 0xe5f, 0x1, 0x1);
        gbc.writeMem(0xa230, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbb0f, gbc.sp());
        EXPECT(0xa232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa230));
        EXPECT(0xd7, gbc.readMem(0xa231));
        // CB D7 01D3
        gbc.setState(0x63cd, 0x2f2e, 0x1630, 0x5f8e, 0xea49, 0x6818, 0x1, 0x1);
        gbc.writeMem(0x63cd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2f2e, gbc.sp());
        EXPECT(0x63cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01D4
        gbc.setState(0x3b6, 0x81ab, 0xec90, 0xd667, 0xe57d, 0x153e, 0x0, 0x1);
        gbc.writeMem(0x3b6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x81ab, gbc.sp());
        EXPECT(0x3b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01D5
        gbc.setState(0x7aa3, 0xc42a, 0xd200, 0xd831, 0x211c, 0xba7a, 0x1, 0x0);
        gbc.writeMem(0x7aa3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc42a, gbc.sp());
        EXPECT(0x7aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01D6
        gbc.setState(0xb980, 0xffdb, 0xa30, 0xdf88, 0xd1a1, 0x66cb, 0x1, 0x1);
        gbc.writeMem(0xb980, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xffdb, gbc.sp());
        EXPECT(0xb982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb980));
        EXPECT(0xd7, gbc.readMem(0xb981));
        // CB D7 01D7
        gbc.setState(0xd7f1, 0xf962, 0x6b0, 0xb449, 0x1121, 0x481e, 0x1, 0x0);
        gbc.writeMem(0xd7f1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf962, gbc.sp());
        EXPECT(0xd7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f1));
        EXPECT(0xd7, gbc.readMem(0xd7f2));
        // CB D7 01D8
        gbc.setState(0x541b, 0xa77e, 0xc70, 0x8fe7, 0xc282, 0x8f17, 0x0, 0x1);
        gbc.writeMem(0x541b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa77e, gbc.sp());
        EXPECT(0x541d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01DA
        gbc.setState(0xa91e, 0xec83, 0x96f0, 0x4131, 0x3ea5, 0x1fb9, 0x0, 0x1);
        gbc.writeMem(0xa91e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xec83, gbc.sp());
        EXPECT(0xa920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa91e));
        EXPECT(0xd7, gbc.readMem(0xa91f));
        // CB D7 01DB
        gbc.setState(0xa4f7, 0x3d1e, 0x37c0, 0x8e8b, 0xbb28, 0x79d9, 0x0, 0x1);
        gbc.writeMem(0xa4f7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3d1e, gbc.sp());
        EXPECT(0xa4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f7));
        EXPECT(0xd7, gbc.readMem(0xa4f8));
        // CB D7 01DC
        gbc.setState(0x5006, 0x970f, 0xd620, 0xc630, 0xad7d, 0x1181, 0x1, 0x0);
        gbc.writeMem(0x5006, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x970f, gbc.sp());
        EXPECT(0x5008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01DD
        gbc.setState(0x782e, 0x8676, 0xcee0, 0x35ff, 0x2e7c, 0x90d5, 0x0, 0x1);
        gbc.writeMem(0x782e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8676, gbc.sp());
        EXPECT(0x7830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01DE
        gbc.setState(0x9d2e, 0x272b, 0x9bc0, 0x95c8, 0x6147, 0xef43, 0x1, 0x0);
        gbc.writeMem(0x9d2e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x272b, gbc.sp());
        EXPECT(0x9d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2e));
        EXPECT(0xd7, gbc.readMem(0x9d2f));
        // CB D7 01DF
        gbc.setState(0x4fb7, 0x282c, 0x7980, 0x1dfe, 0x5344, 0x1466, 0x0, 0x0);
        gbc.writeMem(0x4fb7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x282c, gbc.sp());
        EXPECT(0x4fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01E0
        gbc.setState(0x5586, 0x2815, 0xb990, 0x6fad, 0xad9c, 0x68c8, 0x0, 0x1);
        gbc.writeMem(0x5586, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2815, gbc.sp());
        EXPECT(0x5588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01E1
        gbc.setState(0x76c9, 0x81b8, 0x7350, 0x5f20, 0x4485, 0x196e, 0x0, 0x1);
        gbc.writeMem(0x76c9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x81b8, gbc.sp());
        EXPECT(0x76cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01E2
        gbc.setState(0xd74e, 0x791f, 0xf010, 0xc62d, 0x13cc, 0x6a60, 0x0, 0x1);
        gbc.writeMem(0xd74e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x791f, gbc.sp());
        EXPECT(0xd750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd74e));
        EXPECT(0xd7, gbc.readMem(0xd74f));
        // CB D7 01E3
        gbc.setState(0x4b35, 0xc617, 0xd50, 0x8fe6, 0x8ea9, 0x4780, 0x1, 0x0);
        gbc.writeMem(0x4b35, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc617, gbc.sp());
        EXPECT(0x4b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01E4
        gbc.setState(0x376, 0xbd8f, 0x780, 0xcbdf, 0x7fe8, 0x9d24, 0x1, 0x1);
        gbc.writeMem(0x376, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbd8f, gbc.sp());
        EXPECT(0x378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01E5
        gbc.setState(0x970e, 0x892f, 0xcde0, 0xef05, 0x6602, 0x794b, 0x1, 0x0);
        gbc.writeMem(0x970e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x892f, gbc.sp());
        EXPECT(0x9710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970e));
        EXPECT(0xd7, gbc.readMem(0x970f));
        // CB D7 01E6
        gbc.setState(0x60d2, 0xdae3, 0x6c00, 0xd5bf, 0x9bda, 0x284c, 0x1, 0x1);
        gbc.writeMem(0x60d2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdae3, gbc.sp());
        EXPECT(0x60d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01E7
        gbc.setState(0x8034, 0xe5d, 0x5300, 0xa7f7, 0xd146, 0x51fe, 0x1, 0x1);
        gbc.writeMem(0x8034, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe5d, gbc.sp());
        EXPECT(0x8036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8034));
        EXPECT(0xd7, gbc.readMem(0x8035));
        // CB D7 01E8
        gbc.setState(0x3085, 0x6eeb, 0x7d50, 0xe8b1, 0x434b, 0x8871, 0x0, 0x1);
        gbc.writeMem(0x3085, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6eeb, gbc.sp());
        EXPECT(0x3087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01E9
        gbc.setState(0x6a70, 0xcd0f, 0xe960, 0x8e0e, 0x26de, 0x5c95, 0x0, 0x1);
        gbc.writeMem(0x6a70, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcd0f, gbc.sp());
        EXPECT(0x6a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01EA
        gbc.setState(0xe503, 0x9129, 0xba10, 0x88c4, 0xb54a, 0x3fd7, 0x1, 0x0);
        gbc.writeMem(0xe503, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9129, gbc.sp());
        EXPECT(0xe505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe503));
        EXPECT(0xd7, gbc.readMem(0xe504));
        // CB D7 01EB
        gbc.setState(0xeb88, 0xa469, 0x71b0, 0x470c, 0x54d5, 0x55a4, 0x1, 0x0);
        gbc.writeMem(0xeb88, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa469, gbc.sp());
        EXPECT(0xeb8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb88));
        EXPECT(0xd7, gbc.readMem(0xeb89));
        // CB D7 01EC
        gbc.setState(0x8d24, 0x8e4e, 0x2410, 0x848c, 0x3fba, 0xbcd9, 0x0, 0x0);
        gbc.writeMem(0x8d24, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8e4e, gbc.sp());
        EXPECT(0x8d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d24));
        EXPECT(0xd7, gbc.readMem(0x8d25));
        // CB D7 01ED
        gbc.setState(0x5355, 0xe658, 0xbf00, 0xd925, 0x8d01, 0x1bd3, 0x0, 0x1);
        gbc.writeMem(0x5355, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe658, gbc.sp());
        EXPECT(0x5357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01EE
        gbc.setState(0xce75, 0x7501, 0x78e0, 0xcb6e, 0x47c4, 0xd731, 0x0, 0x1);
        gbc.writeMem(0xce75, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7501, gbc.sp());
        EXPECT(0xce77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce75));
        EXPECT(0xd7, gbc.readMem(0xce76));
        // CB D7 01EF
        gbc.setState(0x5ce2, 0x2758, 0x2d20, 0x51e2, 0x63a1, 0x896a, 0x1, 0x1);
        gbc.writeMem(0x5ce2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2758, gbc.sp());
        EXPECT(0x5ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01F0
        gbc.setState(0xc3d2, 0x9d92, 0xc970, 0x9e81, 0xc095, 0xe02f, 0x0, 0x1);
        gbc.writeMem(0xc3d2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9d92, gbc.sp());
        EXPECT(0xc3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d2));
        EXPECT(0xd7, gbc.readMem(0xc3d3));
        // CB D7 01F1
        gbc.setState(0xbf07, 0x81f5, 0x1b40, 0x508c, 0x7619, 0xee08, 0x1, 0x1);
        gbc.writeMem(0xbf07, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x81f5, gbc.sp());
        EXPECT(0xbf09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf07));
        EXPECT(0xd7, gbc.readMem(0xbf08));
        // CB D7 01F2
        gbc.setState(0x963b, 0x5203, 0x7180, 0x3bdf, 0xcfb9, 0x6d00, 0x1, 0x0);
        gbc.writeMem(0x963b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5203, gbc.sp());
        EXPECT(0x963d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963b));
        EXPECT(0xd7, gbc.readMem(0x963c));
        // CB D7 01F3
        gbc.setState(0x32ac, 0xfcf1, 0xf360, 0xb1f3, 0x6f78, 0x45df, 0x1, 0x1);
        gbc.writeMem(0x32ac, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfcf1, gbc.sp());
        EXPECT(0x32ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01F4
        gbc.setState(0xcf2e, 0x8ef8, 0x9760, 0x7259, 0x2469, 0x33c, 0x0, 0x1);
        gbc.writeMem(0xcf2e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8ef8, gbc.sp());
        EXPECT(0xcf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2e));
        EXPECT(0xd7, gbc.readMem(0xcf2f));
        // CB D7 01F6
        gbc.setState(0x9251, 0x9c3b, 0x5e0, 0x4626, 0xb2aa, 0xa1be, 0x1, 0x0);
        gbc.writeMem(0x9251, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9c3b, gbc.sp());
        EXPECT(0x9253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9251));
        EXPECT(0xd7, gbc.readMem(0x9252));
        // CB D7 01F7
        gbc.setState(0x6814, 0xc082, 0x6aa0, 0xff90, 0x4707, 0x9026, 0x1, 0x0);
        gbc.writeMem(0x6814, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc082, gbc.sp());
        EXPECT(0x6816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01F8
        gbc.setState(0xb9d2, 0x3de7, 0xa5e0, 0xc6c8, 0x6bc4, 0xd303, 0x0, 0x1);
        gbc.writeMem(0xb9d2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3de7, gbc.sp());
        EXPECT(0xb9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d2));
        EXPECT(0xd7, gbc.readMem(0xb9d3));
        // CB D7 01F9
        gbc.setState(0xda3d, 0x7d56, 0x2150, 0x4a3b, 0xebf9, 0x7963, 0x0, 0x0);
        gbc.writeMem(0xda3d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7d56, gbc.sp());
        EXPECT(0xda3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3d));
        EXPECT(0xd7, gbc.readMem(0xda3e));
        // CB D7 01FA
        gbc.setState(0xb57e, 0x9dea, 0x66c0, 0xfef7, 0x7205, 0x9224, 0x0, 0x0);
        gbc.writeMem(0xb57e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9dea, gbc.sp());
        EXPECT(0xb580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57e));
        EXPECT(0xd7, gbc.readMem(0xb57f));
        // CB D7 01FB
        gbc.setState(0xbb93, 0xcc26, 0x86c0, 0x725, 0x8745, 0x621d, 0x1, 0x1);
        gbc.writeMem(0xbb93, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcc26, gbc.sp());
        EXPECT(0xbb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb93));
        EXPECT(0xd7, gbc.readMem(0xbb94));
        // CB D7 01FC
        gbc.setState(0xedb5, 0xe090, 0xdd40, 0xec53, 0xac1f, 0xf742, 0x1, 0x1);
        gbc.writeMem(0xedb5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe090, gbc.sp());
        EXPECT(0xedb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb5));
        EXPECT(0xd7, gbc.readMem(0xedb6));
        // CB D7 01FD
        gbc.setState(0x7f6c, 0x288e, 0x4880, 0xd057, 0x4de8, 0xa7d3, 0x1, 0x1);
        gbc.writeMem(0x7f6c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x288e, gbc.sp());
        EXPECT(0x7f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 01FE
        gbc.setState(0x273c, 0xf255, 0xbc50, 0xb55b, 0xbe4c, 0x73c7, 0x1, 0x0);
        gbc.writeMem(0x273c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf255, gbc.sp());
        EXPECT(0x273e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 01FF
        gbc.setState(0x75ed, 0x2949, 0x1540, 0xe79d, 0x3ea3, 0x98e4, 0x0, 0x1);
        gbc.writeMem(0x75ed, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2949, gbc.sp());
        EXPECT(0x75ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0200
        gbc.setState(0x8e8b, 0x2cd2, 0xcab0, 0x959f, 0xb5dd, 0x3d17, 0x1, 0x0);
        gbc.writeMem(0x8e8b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2cd2, gbc.sp());
        EXPECT(0x8e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8b));
        EXPECT(0xd7, gbc.readMem(0x8e8c));
        // CB D7 0201
        gbc.setState(0x57da, 0xe864, 0x2a0, 0x5076, 0x5bd6, 0xe204, 0x1, 0x0);
        gbc.writeMem(0x57da, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe864, gbc.sp());
        EXPECT(0x57dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0202
        gbc.setState(0xe3c6, 0x8ed9, 0x1370, 0x17d8, 0x8e05, 0xcd86, 0x1, 0x1);
        gbc.writeMem(0xe3c6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8ed9, gbc.sp());
        EXPECT(0xe3c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c6));
        EXPECT(0xd7, gbc.readMem(0xe3c7));
        // CB D7 0203
        gbc.setState(0x8fb4, 0x97df, 0xb900, 0xdbca, 0x9f4d, 0xb92d, 0x1, 0x0);
        gbc.writeMem(0x8fb4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x97df, gbc.sp());
        EXPECT(0x8fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb4));
        EXPECT(0xd7, gbc.readMem(0x8fb5));
        // CB D7 0204
        gbc.setState(0x1b20, 0x4583, 0xbc50, 0xb6d3, 0x6b49, 0xf673, 0x1, 0x0);
        gbc.writeMem(0x1b20, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4583, gbc.sp());
        EXPECT(0x1b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0205
        gbc.setState(0x2066, 0xadf8, 0x2dc0, 0xed87, 0x2007, 0xba9f, 0x1, 0x1);
        gbc.writeMem(0x2066, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xadf8, gbc.sp());
        EXPECT(0x2068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0206
        gbc.setState(0x59a0, 0x29, 0x7f80, 0x944f, 0xff93, 0xea2d, 0x0, 0x1);
        gbc.writeMem(0x59a0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x29, gbc.sp());
        EXPECT(0x59a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0207
        gbc.setState(0x175c, 0x7ddc, 0x3b90, 0x357a, 0x556f, 0xef35, 0x1, 0x0);
        gbc.writeMem(0x175c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7ddc, gbc.sp());
        EXPECT(0x175e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0208
        gbc.setState(0xd78c, 0xfa1b, 0x9cc0, 0xc6fd, 0xd74f, 0xf586, 0x1, 0x1);
        gbc.writeMem(0xd78c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfa1b, gbc.sp());
        EXPECT(0xd78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78c));
        EXPECT(0xd7, gbc.readMem(0xd78d));
        // CB D7 0209
        gbc.setState(0xd963, 0x1268, 0x3050, 0xa351, 0x93c9, 0x399f, 0x0, 0x0);
        gbc.writeMem(0xd963, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1268, gbc.sp());
        EXPECT(0xd965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd963));
        EXPECT(0xd7, gbc.readMem(0xd964));
        // CB D7 020A
        gbc.setState(0x1d83, 0xdee9, 0xa2c0, 0x10bc, 0xe896, 0x7fda, 0x1, 0x0);
        gbc.writeMem(0x1d83, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdee9, gbc.sp());
        EXPECT(0x1d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 020B
        gbc.setState(0x3195, 0xcb9a, 0xf7c0, 0x11bb, 0xa70e, 0x6a52, 0x0, 0x0);
        gbc.writeMem(0x3195, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcb9a, gbc.sp());
        EXPECT(0x3197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 020C
        gbc.setState(0x7780, 0xb867, 0x1eb0, 0x6ee5, 0xfb83, 0x1d8a, 0x1, 0x0);
        gbc.writeMem(0x7780, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb867, gbc.sp());
        EXPECT(0x7782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 020D
        gbc.setState(0x66c8, 0x2410, 0xdac0, 0x94a3, 0x68f5, 0x7c7d, 0x1, 0x1);
        gbc.writeMem(0x66c8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2410, gbc.sp());
        EXPECT(0x66ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 020E
        gbc.setState(0x19b6, 0x63f5, 0x58a0, 0xabc2, 0xb85d, 0x8169, 0x1, 0x0);
        gbc.writeMem(0x19b6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x63f5, gbc.sp());
        EXPECT(0x19b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 020F
        gbc.setState(0xc662, 0xd4c8, 0x4250, 0xc695, 0x908d, 0x55e7, 0x1, 0x0);
        gbc.writeMem(0xc662, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd4c8, gbc.sp());
        EXPECT(0xc664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc662));
        EXPECT(0xd7, gbc.readMem(0xc663));
        // CB D7 0210
        gbc.setState(0x4adf, 0x4fc9, 0x9420, 0x9073, 0xd69b, 0x39bc, 0x1, 0x0);
        gbc.writeMem(0x4adf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4fc9, gbc.sp());
        EXPECT(0x4ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0211
        gbc.setState(0x500b, 0xfa26, 0xf4f0, 0x8d07, 0x95d0, 0x6389, 0x1, 0x1);
        gbc.writeMem(0x500b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfa26, gbc.sp());
        EXPECT(0x500d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0212
        gbc.setState(0x8c5b, 0x72c5, 0x4650, 0xe32e, 0x498f, 0xe26e, 0x1, 0x0);
        gbc.writeMem(0x8c5b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x72c5, gbc.sp());
        EXPECT(0x8c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c5b));
        EXPECT(0xd7, gbc.readMem(0x8c5c));
        // CB D7 0214
        gbc.setState(0x62d4, 0xaab0, 0xa610, 0x650d, 0xd665, 0xc36d, 0x0, 0x1);
        gbc.writeMem(0x62d4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xaab0, gbc.sp());
        EXPECT(0x62d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0215
        gbc.setState(0x9f80, 0x9d90, 0x72c0, 0xd77f, 0x266b, 0x415d, 0x1, 0x0);
        gbc.writeMem(0x9f80, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9d90, gbc.sp());
        EXPECT(0x9f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f80));
        EXPECT(0xd7, gbc.readMem(0x9f81));
        // CB D7 0216
        gbc.setState(0xe3ba, 0x87, 0x2d60, 0x313c, 0xc56b, 0x321c, 0x1, 0x0);
        gbc.writeMem(0xe3ba, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x87, gbc.sp());
        EXPECT(0xe3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ba));
        EXPECT(0xd7, gbc.readMem(0xe3bb));
        // CB D7 0218
        gbc.setState(0x9c38, 0x6559, 0x9ed0, 0xc8e9, 0xd68e, 0x5e38, 0x1, 0x1);
        gbc.writeMem(0x9c38, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6559, gbc.sp());
        EXPECT(0x9c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c38));
        EXPECT(0xd7, gbc.readMem(0x9c39));
        // CB D7 0219
        gbc.setState(0x4fd, 0x2829, 0xb980, 0x7a42, 0xe2c8, 0x252c, 0x1, 0x1);
        gbc.writeMem(0x4fd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2829, gbc.sp());
        EXPECT(0x4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 021A
        gbc.setState(0xe3ae, 0xc571, 0xf290, 0xfc1c, 0x60ad, 0x9a11, 0x0, 0x0);
        gbc.writeMem(0xe3ae, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc571, gbc.sp());
        EXPECT(0xe3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ae));
        EXPECT(0xd7, gbc.readMem(0xe3af));
        // CB D7 021B
        gbc.setState(0x303a, 0xa26f, 0xdaf0, 0x477b, 0xedb5, 0xa9fc, 0x0, 0x1);
        gbc.writeMem(0x303a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa26f, gbc.sp());
        EXPECT(0x303c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 021C
        gbc.setState(0x9727, 0x4442, 0x5600, 0xf829, 0xc6b0, 0x8f13, 0x0, 0x0);
        gbc.writeMem(0x9727, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4442, gbc.sp());
        EXPECT(0x9729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9727));
        EXPECT(0xd7, gbc.readMem(0x9728));
        // CB D7 021D
        gbc.setState(0xcad3, 0x3f7c, 0xaa40, 0x2dd4, 0x1539, 0x8bde, 0x0, 0x1);
        gbc.writeMem(0xcad3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3f7c, gbc.sp());
        EXPECT(0xcad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad3));
        EXPECT(0xd7, gbc.readMem(0xcad4));
        // CB D7 021E
        gbc.setState(0x605b, 0x6d99, 0x440, 0x3ecc, 0x6b8d, 0xa173, 0x1, 0x1);
        gbc.writeMem(0x605b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6d99, gbc.sp());
        EXPECT(0x605d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 021F
        gbc.setState(0x5026, 0x7cb8, 0x4db0, 0xd04b, 0x4d9c, 0x2456, 0x0, 0x1);
        gbc.writeMem(0x5026, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7cb8, gbc.sp());
        EXPECT(0x5028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0220
        gbc.setState(0x440f, 0x6a7b, 0xe810, 0xe494, 0xf3a1, 0x45c5, 0x1, 0x0);
        gbc.writeMem(0x440f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6a7b, gbc.sp());
        EXPECT(0x4411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0221
        gbc.setState(0xd29e, 0x7a01, 0x4f20, 0xd928, 0xb6fc, 0xa944, 0x0, 0x1);
        gbc.writeMem(0xd29e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7a01, gbc.sp());
        EXPECT(0xd2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29e));
        EXPECT(0xd7, gbc.readMem(0xd29f));
        // CB D7 0222
        gbc.setState(0x40d2, 0x1f5a, 0x4760, 0x4e41, 0x61b5, 0xdcbb, 0x1, 0x1);
        gbc.writeMem(0x40d2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1f5a, gbc.sp());
        EXPECT(0x40d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0223
        gbc.setState(0xbf29, 0xd415, 0x85f0, 0xa19f, 0xdf51, 0xbcc0, 0x1, 0x1);
        gbc.writeMem(0xbf29, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd415, gbc.sp());
        EXPECT(0xbf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf29));
        EXPECT(0xd7, gbc.readMem(0xbf2a));
        // CB D7 0224
        gbc.setState(0x5b7f, 0x45c2, 0x3050, 0xf104, 0xb895, 0xa761, 0x1, 0x1);
        gbc.writeMem(0x5b7f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x45c2, gbc.sp());
        EXPECT(0x5b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0225
        gbc.setState(0x93da, 0xe862, 0xfe0, 0x4d10, 0x8e3c, 0x749b, 0x1, 0x1);
        gbc.writeMem(0x93da, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe862, gbc.sp());
        EXPECT(0x93dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93da));
        EXPECT(0xd7, gbc.readMem(0x93db));
        // CB D7 0226
        gbc.setState(0x4ed4, 0x5810, 0x6750, 0xb60e, 0xc36d, 0x75bb, 0x0, 0x1);
        gbc.writeMem(0x4ed4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5810, gbc.sp());
        EXPECT(0x4ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0227
        gbc.setState(0xe4a1, 0xcb53, 0x7ed0, 0x271d, 0xd83e, 0x70e2, 0x0, 0x0);
        gbc.writeMem(0xe4a1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcb53, gbc.sp());
        EXPECT(0xe4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a1));
        EXPECT(0xd7, gbc.readMem(0xe4a2));
        // CB D7 0228
        gbc.setState(0xd365, 0xbf50, 0x7ee0, 0xb1a5, 0x3471, 0xc2f5, 0x0, 0x0);
        gbc.writeMem(0xd365, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbf50, gbc.sp());
        EXPECT(0xd367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd365));
        EXPECT(0xd7, gbc.readMem(0xd366));
        // CB D7 0229
        gbc.setState(0x6429, 0x1d77, 0x5df0, 0xdad0, 0x4f86, 0x9764, 0x1, 0x0);
        gbc.writeMem(0x6429, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1d77, gbc.sp());
        EXPECT(0x642b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 022A
        gbc.setState(0x2ab4, 0x491b, 0x2e70, 0x66d2, 0x2e4e, 0xf9f, 0x0, 0x0);
        gbc.writeMem(0x2ab4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x491b, gbc.sp());
        EXPECT(0x2ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 022B
        gbc.setState(0xaa1d, 0x8151, 0x87c0, 0xda08, 0xd4b5, 0x6e0c, 0x0, 0x0);
        gbc.writeMem(0xaa1d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8151, gbc.sp());
        EXPECT(0xaa1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa1d));
        EXPECT(0xd7, gbc.readMem(0xaa1e));
        // CB D7 022C
        gbc.setState(0xda30, 0x51a1, 0x24a0, 0xc5d0, 0xe331, 0x8778, 0x1, 0x0);
        gbc.writeMem(0xda30, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x51a1, gbc.sp());
        EXPECT(0xda32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda30));
        EXPECT(0xd7, gbc.readMem(0xda31));
        // CB D7 022D
        gbc.setState(0xd058, 0x45b, 0xf540, 0x79a5, 0x53a8, 0xe56e, 0x0, 0x1);
        gbc.writeMem(0xd058, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x45b, gbc.sp());
        EXPECT(0xd05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd058));
        EXPECT(0xd7, gbc.readMem(0xd059));
        // CB D7 022E
        gbc.setState(0xc588, 0x63c6, 0x56b0, 0xf550, 0x52c4, 0x598b, 0x1, 0x1);
        gbc.writeMem(0xc588, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x63c6, gbc.sp());
        EXPECT(0xc58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc588));
        EXPECT(0xd7, gbc.readMem(0xc589));
        // CB D7 022F
        gbc.setState(0x36ee, 0xc9a0, 0x90e0, 0xfc11, 0x14b7, 0x34f0, 0x1, 0x1);
        gbc.writeMem(0x36ee, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc9a0, gbc.sp());
        EXPECT(0x36f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0230
        gbc.setState(0x27b6, 0xa987, 0xeb20, 0x2376, 0xc91f, 0xa49c, 0x1, 0x1);
        gbc.writeMem(0x27b6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa987, gbc.sp());
        EXPECT(0x27b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0232
        gbc.setState(0x5d8f, 0x63a7, 0xeb40, 0xb883, 0xdb9a, 0xfeae, 0x0, 0x0);
        gbc.writeMem(0x5d8f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x63a7, gbc.sp());
        EXPECT(0x5d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0233
        gbc.setState(0x996a, 0xf522, 0xe9e0, 0x2376, 0x6d33, 0x91c1, 0x0, 0x0);
        gbc.writeMem(0x996a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf522, gbc.sp());
        EXPECT(0x996c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996a));
        EXPECT(0xd7, gbc.readMem(0x996b));
        // CB D7 0235
        gbc.setState(0xad2c, 0xad96, 0x1cd0, 0x25d0, 0xb937, 0x1350, 0x0, 0x0);
        gbc.writeMem(0xad2c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xad96, gbc.sp());
        EXPECT(0xad2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2c));
        EXPECT(0xd7, gbc.readMem(0xad2d));
        // CB D7 0236
        gbc.setState(0xc970, 0xd290, 0x66e0, 0xf1f6, 0xb940, 0x833f, 0x0, 0x0);
        gbc.writeMem(0xc970, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd290, gbc.sp());
        EXPECT(0xc972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc970));
        EXPECT(0xd7, gbc.readMem(0xc971));
        // CB D7 0237
        gbc.setState(0x308b, 0x1978, 0xbe40, 0x9663, 0x31cb, 0xa4d0, 0x0, 0x1);
        gbc.writeMem(0x308b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1978, gbc.sp());
        EXPECT(0x308d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0238
        gbc.setState(0x59d3, 0x44a7, 0x5730, 0xfbf7, 0x1045, 0x6ca1, 0x1, 0x0);
        gbc.writeMem(0x59d3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x44a7, gbc.sp());
        EXPECT(0x59d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0239
        gbc.setState(0xe3a4, 0x499e, 0x3040, 0xa5e9, 0x3cb1, 0xa7bd, 0x1, 0x0);
        gbc.writeMem(0xe3a4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x499e, gbc.sp());
        EXPECT(0xe3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a4));
        EXPECT(0xd7, gbc.readMem(0xe3a5));
        // CB D7 023A
        gbc.setState(0x7697, 0x72f5, 0x8320, 0xdfbf, 0x27e4, 0x7a7e, 0x1, 0x0);
        gbc.writeMem(0x7697, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x72f5, gbc.sp());
        EXPECT(0x7699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 023B
        gbc.setState(0x207, 0x6c06, 0x3e00, 0xb1e7, 0x813d, 0xa591, 0x0, 0x1);
        gbc.writeMem(0x207, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6c06, gbc.sp());
        EXPECT(0x209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 023C
        gbc.setState(0xde6d, 0xac49, 0xd370, 0x4dab, 0x7685, 0x4fff, 0x1, 0x0);
        gbc.writeMem(0xde6d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xac49, gbc.sp());
        EXPECT(0xde6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6d));
        EXPECT(0xd7, gbc.readMem(0xde6e));
        // CB D7 023D
        gbc.setState(0x2c07, 0xac1a, 0xeea0, 0xb460, 0xd739, 0x992b, 0x0, 0x0);
        gbc.writeMem(0x2c07, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xac1a, gbc.sp());
        EXPECT(0x2c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 023F
        gbc.setState(0xb46f, 0x1079, 0x31d0, 0xfa9a, 0xcf77, 0x1af8, 0x0, 0x0);
        gbc.writeMem(0xb46f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1079, gbc.sp());
        EXPECT(0xb471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46f));
        EXPECT(0xd7, gbc.readMem(0xb470));
        // CB D7 0240
        gbc.setState(0xafc2, 0xc429, 0xdce0, 0x28e4, 0x5c75, 0xe01e, 0x1, 0x1);
        gbc.writeMem(0xafc2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc429, gbc.sp());
        EXPECT(0xafc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc2));
        EXPECT(0xd7, gbc.readMem(0xafc3));
        // CB D7 0241
        gbc.setState(0x8197, 0xd8d8, 0x60e0, 0x4d54, 0x16fe, 0xb893, 0x0, 0x1);
        gbc.writeMem(0x8197, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd8d8, gbc.sp());
        EXPECT(0x8199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8197));
        EXPECT(0xd7, gbc.readMem(0x8198));
        // CB D7 0242
        gbc.setState(0xc43e, 0xc8b1, 0x82a0, 0xb74b, 0xe701, 0x38b7, 0x0, 0x1);
        gbc.writeMem(0xc43e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc8b1, gbc.sp());
        EXPECT(0xc440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43e));
        EXPECT(0xd7, gbc.readMem(0xc43f));
        // CB D7 0243
        gbc.setState(0xc9b6, 0x6dc4, 0x50c0, 0x1144, 0x906e, 0xa3dd, 0x1, 0x1);
        gbc.writeMem(0xc9b6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6dc4, gbc.sp());
        EXPECT(0xc9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b6));
        EXPECT(0xd7, gbc.readMem(0xc9b7));
        // CB D7 0244
        gbc.setState(0x3a2a, 0x893a, 0x3a00, 0x1b96, 0xef8d, 0x9c65, 0x1, 0x1);
        gbc.writeMem(0x3a2a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x893a, gbc.sp());
        EXPECT(0x3a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0245
        gbc.setState(0x2e41, 0x59ab, 0x82b0, 0xbb20, 0x7958, 0x7fdd, 0x0, 0x0);
        gbc.writeMem(0x2e41, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x59ab, gbc.sp());
        EXPECT(0x2e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0246
        gbc.setState(0xd735, 0xa6c6, 0x25d0, 0xda1c, 0xcf31, 0x4802, 0x1, 0x0);
        gbc.writeMem(0xd735, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa6c6, gbc.sp());
        EXPECT(0xd737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd735));
        EXPECT(0xd7, gbc.readMem(0xd736));
        // CB D7 0247
        gbc.setState(0x4ba, 0x97e1, 0xf800, 0x1110, 0x8859, 0x4493, 0x0, 0x0);
        gbc.writeMem(0x4ba, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x97e1, gbc.sp());
        EXPECT(0x4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0248
        gbc.setState(0x23db, 0x11eb, 0x4a20, 0x3ade, 0xa300, 0x5356, 0x1, 0x0);
        gbc.writeMem(0x23db, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x11eb, gbc.sp());
        EXPECT(0x23dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0249
        gbc.setState(0xe803, 0x474b, 0x6850, 0xac16, 0x9ab6, 0x58ae, 0x0, 0x1);
        gbc.writeMem(0xe803, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x474b, gbc.sp());
        EXPECT(0xe805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe803));
        EXPECT(0xd7, gbc.readMem(0xe804));
        // CB D7 024A
        gbc.setState(0x4f, 0x2d0, 0x2270, 0xffa5, 0x51a, 0x87aa, 0x1, 0x0);
        gbc.writeMem(0x4f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2d0, gbc.sp());
        EXPECT(0x51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 024B
        gbc.setState(0x78e5, 0x5d85, 0xd670, 0x64bc, 0x2ffe, 0xe353, 0x0, 0x0);
        gbc.writeMem(0x78e5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5d85, gbc.sp());
        EXPECT(0x78e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 024C
        gbc.setState(0x8372, 0xaa16, 0x8060, 0x77f7, 0x8950, 0x892a, 0x1, 0x0);
        gbc.writeMem(0x8372, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xaa16, gbc.sp());
        EXPECT(0x8374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8372));
        EXPECT(0xd7, gbc.readMem(0x8373));
        // CB D7 024D
        gbc.setState(0xa32c, 0xeaa6, 0x5b90, 0xe408, 0x3295, 0xe2f8, 0x1, 0x1);
        gbc.writeMem(0xa32c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xeaa6, gbc.sp());
        EXPECT(0xa32e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa32c));
        EXPECT(0xd7, gbc.readMem(0xa32d));
        // CB D7 024E
        gbc.setState(0x6854, 0x8678, 0x29b0, 0x3053, 0x9425, 0x6d49, 0x0, 0x1);
        gbc.writeMem(0x6854, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8678, gbc.sp());
        EXPECT(0x6856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 024F
        gbc.setState(0x85a9, 0x2953, 0x90b0, 0xf782, 0x529c, 0x44c0, 0x1, 0x0);
        gbc.writeMem(0x85a9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2953, gbc.sp());
        EXPECT(0x85ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a9));
        EXPECT(0xd7, gbc.readMem(0x85aa));
        // CB D7 0250
        gbc.setState(0xd22c, 0xae18, 0x38c0, 0x97f3, 0xe38e, 0x77de, 0x1, 0x0);
        gbc.writeMem(0xd22c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xae18, gbc.sp());
        EXPECT(0xd22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22c));
        EXPECT(0xd7, gbc.readMem(0xd22d));
        // CB D7 0251
        gbc.setState(0xe0bf, 0x4acf, 0xa70, 0xb7d4, 0xdb2a, 0x6dc4, 0x0, 0x1);
        gbc.writeMem(0xe0bf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4acf, gbc.sp());
        EXPECT(0xe0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0bf));
        EXPECT(0xd7, gbc.readMem(0xe0c0));
        // CB D7 0252
        gbc.setState(0xb0f, 0x29f9, 0xf960, 0x7f59, 0xdd4d, 0x1c9a, 0x0, 0x0);
        gbc.writeMem(0xb0f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x29f9, gbc.sp());
        EXPECT(0xb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0253
        gbc.setState(0xbea4, 0x568b, 0x1180, 0xbbd, 0x95ef, 0xed75, 0x1, 0x1);
        gbc.writeMem(0xbea4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x568b, gbc.sp());
        EXPECT(0xbea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea4));
        EXPECT(0xd7, gbc.readMem(0xbea5));
        // CB D7 0254
        gbc.setState(0xe48c, 0xec6d, 0xf760, 0xa160, 0xbda7, 0x32c6, 0x0, 0x1);
        gbc.writeMem(0xe48c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xec6d, gbc.sp());
        EXPECT(0xe48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48c));
        EXPECT(0xd7, gbc.readMem(0xe48d));
        // CB D7 0255
        gbc.setState(0x2d8b, 0x27ca, 0x8070, 0x3c40, 0x9d81, 0x5fcf, 0x0, 0x0);
        gbc.writeMem(0x2d8b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x27ca, gbc.sp());
        EXPECT(0x2d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0256
        gbc.setState(0xa15f, 0xa3c8, 0x2200, 0xe36a, 0xb83, 0x1e55, 0x1, 0x0);
        gbc.writeMem(0xa15f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa3c8, gbc.sp());
        EXPECT(0xa161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15f));
        EXPECT(0xd7, gbc.readMem(0xa160));
        // CB D7 0257
        gbc.setState(0xc2e, 0xd15b, 0x9680, 0xf7de, 0x2b04, 0x418, 0x0, 0x1);
        gbc.writeMem(0xc2e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd15b, gbc.sp());
        EXPECT(0xc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0258
        gbc.setState(0xaeba, 0xd978, 0x4bf0, 0x843d, 0x6932, 0xbefa, 0x0, 0x1);
        gbc.writeMem(0xaeba, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd978, gbc.sp());
        EXPECT(0xaebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeba));
        EXPECT(0xd7, gbc.readMem(0xaebb));
        // CB D7 0259
        gbc.setState(0xe6ea, 0x76a5, 0x7670, 0x5dbd, 0x8eda, 0x741, 0x0, 0x0);
        gbc.writeMem(0xe6ea, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x76a5, gbc.sp());
        EXPECT(0xe6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ea));
        EXPECT(0xd7, gbc.readMem(0xe6eb));
        // CB D7 025A
        gbc.setState(0xb28b, 0xa426, 0xb4e0, 0x136f, 0x5fb6, 0xbed, 0x1, 0x1);
        gbc.writeMem(0xb28b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa426, gbc.sp());
        EXPECT(0xb28d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb28b));
        EXPECT(0xd7, gbc.readMem(0xb28c));
        // CB D7 025B
        gbc.setState(0xb21c, 0x4ebd, 0x7790, 0x2485, 0xc276, 0x786c, 0x0, 0x0);
        gbc.writeMem(0xb21c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4ebd, gbc.sp());
        EXPECT(0xb21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21c));
        EXPECT(0xd7, gbc.readMem(0xb21d));
        // CB D7 025D
        gbc.setState(0x5cb8, 0x16a7, 0x5e0, 0xd072, 0x9b94, 0xf08, 0x1, 0x1);
        gbc.writeMem(0x5cb8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x16a7, gbc.sp());
        EXPECT(0x5cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 025E
        gbc.setState(0x1a20, 0x18a0, 0xdbd0, 0x2da4, 0x38f2, 0x9952, 0x1, 0x0);
        gbc.writeMem(0x1a20, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x18a0, gbc.sp());
        EXPECT(0x1a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0260
        gbc.setState(0x635e, 0xa625, 0x2ba0, 0xa9d8, 0x223b, 0xf6e, 0x1, 0x0);
        gbc.writeMem(0x635e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa625, gbc.sp());
        EXPECT(0x6360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0261
        gbc.setState(0x207c, 0x83f6, 0x70f0, 0x3cc0, 0xa36c, 0xabad, 0x1, 0x0);
        gbc.writeMem(0x207c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x83f6, gbc.sp());
        EXPECT(0x207e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0262
        gbc.setState(0x879b, 0xbd36, 0x8530, 0x9ac, 0x7d51, 0x42ac, 0x1, 0x1);
        gbc.writeMem(0x879b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbd36, gbc.sp());
        EXPECT(0x879d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879b));
        EXPECT(0xd7, gbc.readMem(0x879c));
        // CB D7 0263
        gbc.setState(0x7de7, 0x6790, 0x16f0, 0x6bff, 0x3ff1, 0x2961, 0x0, 0x1);
        gbc.writeMem(0x7de7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6790, gbc.sp());
        EXPECT(0x7de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0264
        gbc.setState(0xc706, 0x4fa2, 0x10b0, 0x4346, 0xea99, 0x573a, 0x0, 0x1);
        gbc.writeMem(0xc706, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4fa2, gbc.sp());
        EXPECT(0xc708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc706));
        EXPECT(0xd7, gbc.readMem(0xc707));
        // CB D7 0265
        gbc.setState(0x4be7, 0x3f22, 0x3180, 0xf1ea, 0x2d5e, 0x4bc9, 0x1, 0x0);
        gbc.writeMem(0x4be7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3f22, gbc.sp());
        EXPECT(0x4be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0266
        gbc.setState(0x5b3c, 0x3aaf, 0x7db0, 0xc36c, 0x5997, 0xefa0, 0x1, 0x0);
        gbc.writeMem(0x5b3c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3aaf, gbc.sp());
        EXPECT(0x5b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0267
        gbc.setState(0x46c9, 0xa176, 0x2ee0, 0xfaf6, 0xa21f, 0x1736, 0x1, 0x0);
        gbc.writeMem(0x46c9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa176, gbc.sp());
        EXPECT(0x46cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0268
        gbc.setState(0x62d0, 0xb071, 0x9720, 0x212b, 0x45b3, 0x54d1, 0x0, 0x0);
        gbc.writeMem(0x62d0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb071, gbc.sp());
        EXPECT(0x62d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0269
        gbc.setState(0x3ed4, 0x2afe, 0xe0b0, 0xd27c, 0x3f42, 0x495, 0x1, 0x0);
        gbc.writeMem(0x3ed4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2afe, gbc.sp());
        EXPECT(0x3ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 026A
        gbc.setState(0xe5ba, 0x2d6e, 0xfc20, 0xeb60, 0xc0f5, 0xe239, 0x1, 0x0);
        gbc.writeMem(0xe5ba, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2d6e, gbc.sp());
        EXPECT(0xe5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ba));
        EXPECT(0xd7, gbc.readMem(0xe5bb));
        // CB D7 026B
        gbc.setState(0x5bd5, 0xdef8, 0x26e0, 0x1080, 0x2c52, 0x574e, 0x1, 0x0);
        gbc.writeMem(0x5bd5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdef8, gbc.sp());
        EXPECT(0x5bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 026C
        gbc.setState(0x22c9, 0x72d9, 0xfaf0, 0x82bd, 0x6224, 0xf15c, 0x1, 0x0);
        gbc.writeMem(0x22c9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x72d9, gbc.sp());
        EXPECT(0x22cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 026D
        gbc.setState(0x80a6, 0x3149, 0x87a0, 0xc4, 0x9186, 0xbd73, 0x0, 0x0);
        gbc.writeMem(0x80a6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3149, gbc.sp());
        EXPECT(0x80a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a6));
        EXPECT(0xd7, gbc.readMem(0x80a7));
        // CB D7 026E
        gbc.setState(0x2f26, 0x679, 0x1e30, 0xcf44, 0x405a, 0x290f, 0x0, 0x1);
        gbc.writeMem(0x2f26, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x679, gbc.sp());
        EXPECT(0x2f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 026F
        gbc.setState(0x9dc1, 0x9c5, 0xe830, 0xab97, 0x9741, 0xe152, 0x0, 0x0);
        gbc.writeMem(0x9dc1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9c5, gbc.sp());
        EXPECT(0x9dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc1));
        EXPECT(0xd7, gbc.readMem(0x9dc2));
        // CB D7 0270
        gbc.setState(0xb66, 0x645c, 0x7df0, 0x8f38, 0x6159, 0x7bdc, 0x0, 0x0);
        gbc.writeMem(0xb66, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x645c, gbc.sp());
        EXPECT(0xb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0271
        gbc.setState(0x6085, 0xf2b9, 0x960, 0xbd2c, 0xfc93, 0x8d90, 0x1, 0x0);
        gbc.writeMem(0x6085, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf2b9, gbc.sp());
        EXPECT(0x6087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0272
        gbc.setState(0x926e, 0x9d0c, 0x790, 0xe555, 0x986f, 0x9454, 0x1, 0x0);
        gbc.writeMem(0x926e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9d0c, gbc.sp());
        EXPECT(0x9270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926e));
        EXPECT(0xd7, gbc.readMem(0x926f));
        // CB D7 0273
        gbc.setState(0x67c4, 0x97f0, 0xccb0, 0x53c7, 0xc120, 0xab44, 0x0, 0x1);
        gbc.writeMem(0x67c4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x97f0, gbc.sp());
        EXPECT(0x67c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0274
        gbc.setState(0xe7df, 0xd4f4, 0xb850, 0xba89, 0x3425, 0x8a4a, 0x0, 0x1);
        gbc.writeMem(0xe7df, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd4f4, gbc.sp());
        EXPECT(0xe7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7df));
        EXPECT(0xd7, gbc.readMem(0xe7e0));
        // CB D7 0275
        gbc.setState(0xad26, 0xd2db, 0x19c0, 0x49b3, 0x78b2, 0xe613, 0x0, 0x0);
        gbc.writeMem(0xad26, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd2db, gbc.sp());
        EXPECT(0xad28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad26));
        EXPECT(0xd7, gbc.readMem(0xad27));
        // CB D7 0276
        gbc.setState(0x6a, 0x27ad, 0xe760, 0x3fec, 0x5c5f, 0xa4ed, 0x1, 0x0);
        gbc.writeMem(0x6a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x27ad, gbc.sp());
        EXPECT(0x6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0277
        gbc.setState(0x537e, 0xc224, 0xe1d0, 0xf065, 0x6c45, 0xb1f7, 0x1, 0x0);
        gbc.writeMem(0x537e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc224, gbc.sp());
        EXPECT(0x5380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0278
        gbc.setState(0x6a5b, 0x9f60, 0x4a40, 0x65c8, 0x26a8, 0xf071, 0x1, 0x1);
        gbc.writeMem(0x6a5b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9f60, gbc.sp());
        EXPECT(0x6a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0279
        gbc.setState(0xdc1, 0x8fd7, 0xbb90, 0x2d5d, 0x4846, 0xdead, 0x1, 0x0);
        gbc.writeMem(0xdc1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8fd7, gbc.sp());
        EXPECT(0xdc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 027A
        gbc.setState(0xd746, 0xa668, 0x2600, 0x7adb, 0x248c, 0x1085, 0x1, 0x0);
        gbc.writeMem(0xd746, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa668, gbc.sp());
        EXPECT(0xd748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd746));
        EXPECT(0xd7, gbc.readMem(0xd747));
        // CB D7 027B
        gbc.setState(0x2dd9, 0x84e2, 0xa640, 0x9b59, 0x24b6, 0x123d, 0x1, 0x0);
        gbc.writeMem(0x2dd9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x84e2, gbc.sp());
        EXPECT(0x2ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 027C
        gbc.setState(0x84b7, 0xa8db, 0x9ec0, 0x96f4, 0x8306, 0x727c, 0x1, 0x0);
        gbc.writeMem(0x84b7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa8db, gbc.sp());
        EXPECT(0x84b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b7));
        EXPECT(0xd7, gbc.readMem(0x84b8));
        // CB D7 027D
        gbc.setState(0x244, 0xc21e, 0xe40, 0x2d5b, 0x3c56, 0xae92, 0x1, 0x1);
        gbc.writeMem(0x244, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc21e, gbc.sp());
        EXPECT(0x246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 027E
        gbc.setState(0xcdd9, 0xe3b3, 0xd410, 0x32b, 0x777c, 0xe78f, 0x1, 0x1);
        gbc.writeMem(0xcdd9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe3b3, gbc.sp());
        EXPECT(0xcddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd9));
        EXPECT(0xd7, gbc.readMem(0xcdda));
        // CB D7 0280
        gbc.setState(0x42ae, 0xc6b1, 0xb10, 0x3182, 0xd211, 0x6fa, 0x1, 0x1);
        gbc.writeMem(0x42ae, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc6b1, gbc.sp());
        EXPECT(0x42b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0281
        gbc.setState(0xe46a, 0x58f6, 0xcec0, 0xa880, 0x74c5, 0xbcd6, 0x1, 0x0);
        gbc.writeMem(0xe46a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x58f6, gbc.sp());
        EXPECT(0xe46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46a));
        EXPECT(0xd7, gbc.readMem(0xe46b));
        // CB D7 0282
        gbc.setState(0x3af4, 0xe2f5, 0xc3d0, 0xa07a, 0xa9ca, 0x77c, 0x1, 0x1);
        gbc.writeMem(0x3af4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe2f5, gbc.sp());
        EXPECT(0x3af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0283
        gbc.setState(0x6ebc, 0x4561, 0x6f10, 0x845e, 0xa49b, 0xa739, 0x0, 0x0);
        gbc.writeMem(0x6ebc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4561, gbc.sp());
        EXPECT(0x6ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0284
        gbc.setState(0xda79, 0x3998, 0xd1b0, 0xd587, 0x3af0, 0xb5e7, 0x1, 0x0);
        gbc.writeMem(0xda79, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3998, gbc.sp());
        EXPECT(0xda7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda79));
        EXPECT(0xd7, gbc.readMem(0xda7a));
        // CB D7 0285
        gbc.setState(0x97ed, 0x15bf, 0x670, 0x55b5, 0xab3b, 0x6ac6, 0x1, 0x1);
        gbc.writeMem(0x97ed, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x15bf, gbc.sp());
        EXPECT(0x97ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ed));
        EXPECT(0xd7, gbc.readMem(0x97ee));
        // CB D7 0286
        gbc.setState(0x3d83, 0x294c, 0x2ca0, 0x4388, 0x90c9, 0xb96c, 0x1, 0x0);
        gbc.writeMem(0x3d83, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x294c, gbc.sp());
        EXPECT(0x3d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0287
        gbc.setState(0xe51b, 0xe709, 0x7100, 0x6ebb, 0xfbc2, 0x96aa, 0x1, 0x1);
        gbc.writeMem(0xe51b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe709, gbc.sp());
        EXPECT(0xe51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51b));
        EXPECT(0xd7, gbc.readMem(0xe51c));
        // CB D7 0288
        gbc.setState(0xb7ca, 0x3444, 0xbf50, 0x7d85, 0xce86, 0x2b10, 0x1, 0x0);
        gbc.writeMem(0xb7ca, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3444, gbc.sp());
        EXPECT(0xb7cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ca));
        EXPECT(0xd7, gbc.readMem(0xb7cb));
        // CB D7 028A
        gbc.setState(0xce05, 0x1484, 0x2f20, 0xcfe5, 0xaed8, 0x7314, 0x0, 0x0);
        gbc.writeMem(0xce05, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1484, gbc.sp());
        EXPECT(0xce07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce05));
        EXPECT(0xd7, gbc.readMem(0xce06));
        // CB D7 028B
        gbc.setState(0x47d9, 0xfbe, 0xb90, 0xb4fe, 0x3382, 0x11e2, 0x0, 0x1);
        gbc.writeMem(0x47d9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfbe, gbc.sp());
        EXPECT(0x47db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 028D
        gbc.setState(0xaf26, 0xd2ab, 0x6280, 0x4961, 0x4a2d, 0xa90, 0x1, 0x1);
        gbc.writeMem(0xaf26, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd2ab, gbc.sp());
        EXPECT(0xaf28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf26));
        EXPECT(0xd7, gbc.readMem(0xaf27));
        // CB D7 028E
        gbc.setState(0x9a99, 0xbc4, 0x9580, 0x1658, 0xff37, 0x29dd, 0x1, 0x1);
        gbc.writeMem(0x9a99, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbc4, gbc.sp());
        EXPECT(0x9a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a99));
        EXPECT(0xd7, gbc.readMem(0x9a9a));
        // CB D7 028F
        gbc.setState(0x108e, 0x14d1, 0x4c80, 0x8be2, 0xa719, 0x967a, 0x1, 0x1);
        gbc.writeMem(0x108e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x14d1, gbc.sp());
        EXPECT(0x1090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0290
        gbc.setState(0x8bd, 0x3d3f, 0x5cc0, 0x610d, 0xf38, 0xa9be, 0x1, 0x0);
        gbc.writeMem(0x8bd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3d3f, gbc.sp());
        EXPECT(0x8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0291
        gbc.setState(0x9633, 0xa4cb, 0xca70, 0x9f82, 0xc929, 0xb880, 0x0, 0x1);
        gbc.writeMem(0x9633, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa4cb, gbc.sp());
        EXPECT(0x9635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9633));
        EXPECT(0xd7, gbc.readMem(0x9634));
        // CB D7 0292
        gbc.setState(0x3fef, 0x2147, 0xbe0, 0x6804, 0xeca5, 0x23ed, 0x1, 0x1);
        gbc.writeMem(0x3fef, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2147, gbc.sp());
        EXPECT(0x3ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0294
        gbc.setState(0x312, 0x61e4, 0x1070, 0xa546, 0x8f93, 0x775, 0x0, 0x1);
        gbc.writeMem(0x312, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x61e4, gbc.sp());
        EXPECT(0x314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0295
        gbc.setState(0x6270, 0x3f9f, 0xc510, 0x36f1, 0x3eb6, 0x914c, 0x0, 0x0);
        gbc.writeMem(0x6270, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3f9f, gbc.sp());
        EXPECT(0x6272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0296
        gbc.setState(0xd875, 0x1ceb, 0x5000, 0xa383, 0xe7e8, 0xce73, 0x1, 0x0);
        gbc.writeMem(0xd875, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1ceb, gbc.sp());
        EXPECT(0xd877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd875));
        EXPECT(0xd7, gbc.readMem(0xd876));
        // CB D7 0297
        gbc.setState(0x4d41, 0x6a7b, 0x91f0, 0xf36e, 0x917f, 0x4a5c, 0x0, 0x0);
        gbc.writeMem(0x4d41, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6a7b, gbc.sp());
        EXPECT(0x4d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0298
        gbc.setState(0xb4ec, 0xf436, 0x9810, 0x97d6, 0xa806, 0x38cc, 0x0, 0x1);
        gbc.writeMem(0xb4ec, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf436, gbc.sp());
        EXPECT(0xb4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ec));
        EXPECT(0xd7, gbc.readMem(0xb4ed));
        // CB D7 0299
        gbc.setState(0x2175, 0x329c, 0x5a20, 0xbb3e, 0x8fd5, 0x1acd, 0x1, 0x0);
        gbc.writeMem(0x2175, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x329c, gbc.sp());
        EXPECT(0x2177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 029A
        gbc.setState(0xe82e, 0x66bc, 0xfda0, 0x2cdc, 0x43cb, 0xed73, 0x1, 0x1);
        gbc.writeMem(0xe82e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x66bc, gbc.sp());
        EXPECT(0xe830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe82e));
        EXPECT(0xd7, gbc.readMem(0xe82f));
        // CB D7 029B
        gbc.setState(0x36ed, 0xfd3f, 0x800, 0xd8f7, 0x7715, 0xc09e, 0x0, 0x1);
        gbc.writeMem(0x36ed, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfd3f, gbc.sp());
        EXPECT(0x36ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 029C
        gbc.setState(0x1c16, 0x4295, 0x71e0, 0xbd52, 0x263e, 0xd7ab, 0x1, 0x1);
        gbc.writeMem(0x1c16, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4295, gbc.sp());
        EXPECT(0x1c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 029D
        gbc.setState(0xc3b0, 0xa6a4, 0x35c0, 0x66f9, 0x1a40, 0x6464, 0x0, 0x0);
        gbc.writeMem(0xc3b0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa6a4, gbc.sp());
        EXPECT(0xc3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b0));
        EXPECT(0xd7, gbc.readMem(0xc3b1));
        // CB D7 029E
        gbc.setState(0x555e, 0x32cc, 0x57d0, 0x786f, 0x93f1, 0xa204, 0x1, 0x0);
        gbc.writeMem(0x555e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x32cc, gbc.sp());
        EXPECT(0x5560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 029F
        gbc.setState(0xcfe9, 0x20a0, 0xc7c0, 0x807e, 0x41da, 0x876c, 0x1, 0x1);
        gbc.writeMem(0xcfe9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x20a0, gbc.sp());
        EXPECT(0xcfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe9));
        EXPECT(0xd7, gbc.readMem(0xcfea));
        // CB D7 02A0
        gbc.setState(0xd3a, 0x2036, 0x3c40, 0xecc9, 0x281, 0x3196, 0x1, 0x1);
        gbc.writeMem(0xd3a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2036, gbc.sp());
        EXPECT(0xd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02A1
        gbc.setState(0x54c, 0xef5c, 0xa550, 0x9521, 0x448, 0xaa60, 0x1, 0x0);
        gbc.writeMem(0x54c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xef5c, gbc.sp());
        EXPECT(0x54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02A2
        gbc.setState(0xa6d0, 0x2ccb, 0x9df0, 0xcc5c, 0x519a, 0x223a, 0x0, 0x0);
        gbc.writeMem(0xa6d0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2ccb, gbc.sp());
        EXPECT(0xa6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d0));
        EXPECT(0xd7, gbc.readMem(0xa6d1));
        // CB D7 02A4
        gbc.setState(0x7ae4, 0x9bf8, 0x71c0, 0x6c, 0x759f, 0xe41b, 0x0, 0x1);
        gbc.writeMem(0x7ae4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9bf8, gbc.sp());
        EXPECT(0x7ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02A5
        gbc.setState(0xbc8a, 0x7759, 0xc660, 0xbcf5, 0xa13f, 0x4b6e, 0x0, 0x0);
        gbc.writeMem(0xbc8a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7759, gbc.sp());
        EXPECT(0xbc8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8a));
        EXPECT(0xd7, gbc.readMem(0xbc8b));
        // CB D7 02A6
        gbc.setState(0x7c2a, 0xcd8, 0xee00, 0xbd43, 0x6fbe, 0x9128, 0x0, 0x0);
        gbc.writeMem(0x7c2a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcd8, gbc.sp());
        EXPECT(0x7c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02A7
        gbc.setState(0xb33, 0xf54f, 0x3b20, 0x9773, 0xd9d8, 0xb7d1, 0x0, 0x0);
        gbc.writeMem(0xb33, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf54f, gbc.sp());
        EXPECT(0xb35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02A8
        gbc.setState(0x7cc, 0xd308, 0xc090, 0x2eea, 0x9b7d, 0xf9ca, 0x1, 0x0);
        gbc.writeMem(0x7cc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd308, gbc.sp());
        EXPECT(0x7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02A9
        gbc.setState(0xe20b, 0xfaf2, 0xe250, 0xde52, 0xa1e6, 0x8a81, 0x1, 0x0);
        gbc.writeMem(0xe20b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfaf2, gbc.sp());
        EXPECT(0xe20d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20b));
        EXPECT(0xd7, gbc.readMem(0xe20c));
        // CB D7 02AA
        gbc.setState(0x4b75, 0xc5e0, 0x6c10, 0xa12b, 0x6547, 0x3089, 0x1, 0x1);
        gbc.writeMem(0x4b75, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc5e0, gbc.sp());
        EXPECT(0x4b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02AB
        gbc.setState(0x4e59, 0x5adc, 0x3bf0, 0xcc89, 0x142f, 0xa11b, 0x1, 0x0);
        gbc.writeMem(0x4e59, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5adc, gbc.sp());
        EXPECT(0x4e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02AC
        gbc.setState(0x2d12, 0x399e, 0xc260, 0x2e95, 0x3ff, 0x2843, 0x1, 0x1);
        gbc.writeMem(0x2d12, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x399e, gbc.sp());
        EXPECT(0x2d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02AD
        gbc.setState(0xbb0d, 0xf0a0, 0x65c0, 0x63ac, 0x6fa8, 0x144f, 0x1, 0x1);
        gbc.writeMem(0xbb0d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf0a0, gbc.sp());
        EXPECT(0xbb0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0d));
        EXPECT(0xd7, gbc.readMem(0xbb0e));
        // CB D7 02AE
        gbc.setState(0xdd51, 0xde69, 0xdcd0, 0x154b, 0xa02f, 0x93fa, 0x0, 0x1);
        gbc.writeMem(0xdd51, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xde69, gbc.sp());
        EXPECT(0xdd53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd51));
        EXPECT(0xd7, gbc.readMem(0xdd52));
        // CB D7 02AF
        gbc.setState(0x7ae2, 0xef0e, 0x1e10, 0x2e5a, 0x9c0, 0x72b1, 0x0, 0x1);
        gbc.writeMem(0x7ae2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xef0e, gbc.sp());
        EXPECT(0x7ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02B0
        gbc.setState(0xb30e, 0x9d9e, 0x7540, 0xa21d, 0x3b72, 0x6947, 0x1, 0x0);
        gbc.writeMem(0xb30e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9d9e, gbc.sp());
        EXPECT(0xb310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30e));
        EXPECT(0xd7, gbc.readMem(0xb30f));
        // CB D7 02B2
        gbc.setState(0x433b, 0x6e19, 0x2050, 0xfc9c, 0xbf0, 0x848f, 0x1, 0x1);
        gbc.writeMem(0x433b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6e19, gbc.sp());
        EXPECT(0x433d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02B3
        gbc.setState(0xabdf, 0x81be, 0x66d0, 0x790f, 0xdccc, 0xa82b, 0x1, 0x1);
        gbc.writeMem(0xabdf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x81be, gbc.sp());
        EXPECT(0xabe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabdf));
        EXPECT(0xd7, gbc.readMem(0xabe0));
        // CB D7 02B4
        gbc.setState(0x35fe, 0xebca, 0xea60, 0x7a00, 0x37f, 0xbcf4, 0x1, 0x0);
        gbc.writeMem(0x35fe, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xebca, gbc.sp());
        EXPECT(0x3600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02B5
        gbc.setState(0x76b8, 0x9fe7, 0xbc30, 0xb8d4, 0xecb6, 0x3e3, 0x1, 0x1);
        gbc.writeMem(0x76b8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9fe7, gbc.sp());
        EXPECT(0x76ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02B6
        gbc.setState(0x9571, 0x598b, 0xf450, 0xe47d, 0xbea, 0xd0d7, 0x0, 0x0);
        gbc.writeMem(0x9571, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x598b, gbc.sp());
        EXPECT(0x9573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9571));
        EXPECT(0xd7, gbc.readMem(0x9572));
        // CB D7 02B7
        gbc.setState(0x9019, 0xd2fa, 0xf940, 0xab10, 0x6535, 0xe5e8, 0x0, 0x0);
        gbc.writeMem(0x9019, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd2fa, gbc.sp());
        EXPECT(0x901b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9019));
        EXPECT(0xd7, gbc.readMem(0x901a));
        // CB D7 02B8
        gbc.setState(0xbf35, 0x2d27, 0xb0b0, 0x926e, 0xe114, 0x136, 0x1, 0x1);
        gbc.writeMem(0xbf35, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2d27, gbc.sp());
        EXPECT(0xbf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf35));
        EXPECT(0xd7, gbc.readMem(0xbf36));
        // CB D7 02B9
        gbc.setState(0x2fa6, 0xd646, 0xc220, 0xf4e, 0xb77b, 0xb912, 0x0, 0x0);
        gbc.writeMem(0x2fa6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd646, gbc.sp());
        EXPECT(0x2fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02BA
        gbc.setState(0x4816, 0x7277, 0xc560, 0x51d, 0x7ead, 0x7827, 0x0, 0x0);
        gbc.writeMem(0x4816, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7277, gbc.sp());
        EXPECT(0x4818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02BB
        gbc.setState(0x11a6, 0x86e8, 0xf930, 0x6abf, 0xeda7, 0x4c83, 0x1, 0x0);
        gbc.writeMem(0x11a6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x86e8, gbc.sp());
        EXPECT(0x11a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02BC
        gbc.setState(0xd10f, 0xf5c3, 0x63f0, 0x6684, 0x73a5, 0xcce5, 0x0, 0x0);
        gbc.writeMem(0xd10f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf5c3, gbc.sp());
        EXPECT(0xd111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10f));
        EXPECT(0xd7, gbc.readMem(0xd110));
        // CB D7 02BD
        gbc.setState(0xc317, 0x5a23, 0x7710, 0x754b, 0x8794, 0x57f2, 0x1, 0x0);
        gbc.writeMem(0xc317, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5a23, gbc.sp());
        EXPECT(0xc319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc317));
        EXPECT(0xd7, gbc.readMem(0xc318));
        // CB D7 02BE
        gbc.setState(0xe34e, 0x6aa3, 0x5ff0, 0x8525, 0x4b70, 0x82bc, 0x0, 0x1);
        gbc.writeMem(0xe34e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6aa3, gbc.sp());
        EXPECT(0xe350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe34e));
        EXPECT(0xd7, gbc.readMem(0xe34f));
        // CB D7 02BF
        gbc.setState(0xad0b, 0xf1f, 0x93c0, 0xf3c5, 0x6b36, 0xdb70, 0x1, 0x0);
        gbc.writeMem(0xad0b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf1f, gbc.sp());
        EXPECT(0xad0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0b));
        EXPECT(0xd7, gbc.readMem(0xad0c));
        // CB D7 02C0
        gbc.setState(0x8297, 0x4b79, 0xda00, 0x6f1c, 0x7c8e, 0xb980, 0x0, 0x0);
        gbc.writeMem(0x8297, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4b79, gbc.sp());
        EXPECT(0x8299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8297));
        EXPECT(0xd7, gbc.readMem(0x8298));
        // CB D7 02C1
        gbc.setState(0x6669, 0xa0de, 0xa130, 0x9509, 0x3c6, 0xd7e8, 0x0, 0x1);
        gbc.writeMem(0x6669, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa0de, gbc.sp());
        EXPECT(0x666b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02C2
        gbc.setState(0x36ff, 0x913a, 0x90c0, 0x6905, 0xc2c0, 0x72c9, 0x0, 0x0);
        gbc.writeMem(0x36ff, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x913a, gbc.sp());
        EXPECT(0x3701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02C3
        gbc.setState(0x6ab1, 0xd528, 0xb720, 0xf373, 0x6028, 0xc72b, 0x0, 0x1);
        gbc.writeMem(0x6ab1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd528, gbc.sp());
        EXPECT(0x6ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02C4
        gbc.setState(0x4c42, 0x37c8, 0x1560, 0x4eb8, 0x7fa8, 0x3a2e, 0x0, 0x1);
        gbc.writeMem(0x4c42, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x37c8, gbc.sp());
        EXPECT(0x4c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02C5
        gbc.setState(0xbd5, 0x3ea3, 0xeef0, 0x9353, 0xc488, 0xfafe, 0x1, 0x1);
        gbc.writeMem(0xbd5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3ea3, gbc.sp());
        EXPECT(0xbd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02C6
        gbc.setState(0x79d8, 0x1712, 0xdcb0, 0x195d, 0x8151, 0x9a8c, 0x0, 0x1);
        gbc.writeMem(0x79d8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1712, gbc.sp());
        EXPECT(0x79da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02C7
        gbc.setState(0x2654, 0x77e3, 0xc400, 0xee43, 0x4b82, 0xa910, 0x1, 0x0);
        gbc.writeMem(0x2654, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x77e3, gbc.sp());
        EXPECT(0x2656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02C8
        gbc.setState(0x6ecc, 0x76d9, 0xd350, 0x2527, 0x71f8, 0xbe1a, 0x0, 0x0);
        gbc.writeMem(0x6ecc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x76d9, gbc.sp());
        EXPECT(0x6ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02C9
        gbc.setState(0xcaba, 0xca05, 0xb160, 0x52e2, 0x18f6, 0xf0c5, 0x1, 0x1);
        gbc.writeMem(0xcaba, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xca05, gbc.sp());
        EXPECT(0xcabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaba));
        EXPECT(0xd7, gbc.readMem(0xcabb));
        // CB D7 02CA
        gbc.setState(0xe7c7, 0x34b3, 0xf7b0, 0x2cc8, 0x133b, 0x8ed, 0x1, 0x1);
        gbc.writeMem(0xe7c7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x34b3, gbc.sp());
        EXPECT(0xe7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c7));
        EXPECT(0xd7, gbc.readMem(0xe7c8));
        // CB D7 02CB
        gbc.setState(0xd07b, 0x3c25, 0xe6a0, 0xfa, 0x9f69, 0xb3d8, 0x1, 0x0);
        gbc.writeMem(0xd07b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3c25, gbc.sp());
        EXPECT(0xd07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07b));
        EXPECT(0xd7, gbc.readMem(0xd07c));
        // CB D7 02CC
        gbc.setState(0xaf16, 0xd709, 0x2c40, 0xdd83, 0x2167, 0xff1a, 0x1, 0x1);
        gbc.writeMem(0xaf16, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd709, gbc.sp());
        EXPECT(0xaf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf16));
        EXPECT(0xd7, gbc.readMem(0xaf17));
        // CB D7 02CD
        gbc.setState(0x9e99, 0x71c5, 0xd4d0, 0xca03, 0x45fc, 0xcada, 0x1, 0x0);
        gbc.writeMem(0x9e99, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x71c5, gbc.sp());
        EXPECT(0x9e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e99));
        EXPECT(0xd7, gbc.readMem(0x9e9a));
        // CB D7 02CE
        gbc.setState(0x2cad, 0xc7f9, 0x7b90, 0xa036, 0xaa97, 0x98a3, 0x1, 0x0);
        gbc.writeMem(0x2cad, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc7f9, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02CF
        gbc.setState(0x302f, 0x80ff, 0x9e30, 0xb0e5, 0x8a33, 0xa383, 0x0, 0x1);
        gbc.writeMem(0x302f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x80ff, gbc.sp());
        EXPECT(0x3031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02D0
        gbc.setState(0xdfbc, 0x61b5, 0x6130, 0xd2b4, 0xe54a, 0x25fd, 0x0, 0x1);
        gbc.writeMem(0xdfbc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x61b5, gbc.sp());
        EXPECT(0xdfbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfbc));
        EXPECT(0xd7, gbc.readMem(0xdfbd));
        // CB D7 02D1
        gbc.setState(0x1d8a, 0x92b, 0x57f0, 0x4843, 0x6578, 0x6130, 0x1, 0x0);
        gbc.writeMem(0x1d8a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x92b, gbc.sp());
        EXPECT(0x1d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02D2
        gbc.setState(0x24f4, 0x2255, 0x7410, 0xe664, 0x1874, 0x5c3e, 0x1, 0x0);
        gbc.writeMem(0x24f4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2255, gbc.sp());
        EXPECT(0x24f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02D3
        gbc.setState(0xa520, 0x5422, 0x1d90, 0x8fc6, 0x1c5d, 0x3125, 0x0, 0x0);
        gbc.writeMem(0xa520, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5422, gbc.sp());
        EXPECT(0xa522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa520));
        EXPECT(0xd7, gbc.readMem(0xa521));
        // CB D7 02D4
        gbc.setState(0x5f76, 0xe8e8, 0x3ff0, 0xcbd4, 0xad22, 0x440, 0x0, 0x1);
        gbc.writeMem(0x5f76, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe8e8, gbc.sp());
        EXPECT(0x5f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02D5
        gbc.setState(0x2ee2, 0xc371, 0xd820, 0x4b19, 0xa503, 0x537f, 0x1, 0x1);
        gbc.writeMem(0x2ee2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc371, gbc.sp());
        EXPECT(0x2ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02D6
        gbc.setState(0x71f8, 0xe908, 0x19c0, 0x9325, 0x75bc, 0xfb43, 0x0, 0x0);
        gbc.writeMem(0x71f8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe908, gbc.sp());
        EXPECT(0x71fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02D7
        gbc.setState(0x1b3c, 0x682c, 0x9ee0, 0x66e1, 0x4b32, 0x170f, 0x1, 0x1);
        gbc.writeMem(0x1b3c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x682c, gbc.sp());
        EXPECT(0x1b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02D8
        gbc.setState(0xcb2f, 0x7fe4, 0x3870, 0x9cd8, 0xbd66, 0x82db, 0x0, 0x1);
        gbc.writeMem(0xcb2f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7fe4, gbc.sp());
        EXPECT(0xcb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2f));
        EXPECT(0xd7, gbc.readMem(0xcb30));
        // CB D7 02D9
        gbc.setState(0x6306, 0x656, 0xb1c0, 0xca0, 0x973f, 0x91ed, 0x1, 0x0);
        gbc.writeMem(0x6306, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x656, gbc.sp());
        EXPECT(0x6308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02DA
        gbc.setState(0x870f, 0x184a, 0x9fa0, 0xbaa5, 0x3a88, 0x6a72, 0x0, 0x0);
        gbc.writeMem(0x870f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x184a, gbc.sp());
        EXPECT(0x8711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870f));
        EXPECT(0xd7, gbc.readMem(0x8710));
        // CB D7 02DB
        gbc.setState(0x983a, 0x5db0, 0x97f0, 0xddfb, 0x95e2, 0x26d7, 0x1, 0x0);
        gbc.writeMem(0x983a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5db0, gbc.sp());
        EXPECT(0x983c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983a));
        EXPECT(0xd7, gbc.readMem(0x983b));
        // CB D7 02DD
        gbc.setState(0x2435, 0x2e7b, 0xad20, 0x98ab, 0x70a3, 0x729a, 0x0, 0x0);
        gbc.writeMem(0x2435, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2e7b, gbc.sp());
        EXPECT(0x2437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02DE
        gbc.setState(0xbbef, 0x7940, 0x8dd0, 0x4762, 0x9731, 0xbb95, 0x1, 0x0);
        gbc.writeMem(0xbbef, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7940, gbc.sp());
        EXPECT(0xbbf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbef));
        EXPECT(0xd7, gbc.readMem(0xbbf0));
        // CB D7 02DF
        gbc.setState(0xd811, 0x3932, 0x5ae0, 0x1a3e, 0xe036, 0xa918, 0x0, 0x1);
        gbc.writeMem(0xd811, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3932, gbc.sp());
        EXPECT(0xd813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd811));
        EXPECT(0xd7, gbc.readMem(0xd812));
        // CB D7 02E0
        gbc.setState(0xd55e, 0xf7bd, 0x46a0, 0xabb9, 0x6f74, 0xc56c, 0x1, 0x1);
        gbc.writeMem(0xd55e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf7bd, gbc.sp());
        EXPECT(0xd560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55e));
        EXPECT(0xd7, gbc.readMem(0xd55f));
        // CB D7 02E2
        gbc.setState(0x3741, 0x21db, 0xaf40, 0x86fb, 0x3f73, 0xeee2, 0x1, 0x0);
        gbc.writeMem(0x3741, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x21db, gbc.sp());
        EXPECT(0x3743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02E3
        gbc.setState(0xe7b7, 0x8cab, 0xaaf0, 0x8db4, 0x87d2, 0x1967, 0x1, 0x1);
        gbc.writeMem(0xe7b7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8cab, gbc.sp());
        EXPECT(0xe7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b7));
        EXPECT(0xd7, gbc.readMem(0xe7b8));
        // CB D7 02E4
        gbc.setState(0x8649, 0x4144, 0x3b80, 0xb65c, 0x6e8, 0x73f0, 0x0, 0x1);
        gbc.writeMem(0x8649, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4144, gbc.sp());
        EXPECT(0x864b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8649));
        EXPECT(0xd7, gbc.readMem(0x864a));
        // CB D7 02E6
        gbc.setState(0xcccf, 0xef02, 0x9b10, 0x8eac, 0x37f2, 0x86ba, 0x0, 0x0);
        gbc.writeMem(0xcccf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xef02, gbc.sp());
        EXPECT(0xccd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcccf));
        EXPECT(0xd7, gbc.readMem(0xccd0));
        // CB D7 02E7
        gbc.setState(0x3e4c, 0x6aee, 0x8010, 0xc857, 0x7c5f, 0xc76e, 0x1, 0x0);
        gbc.writeMem(0x3e4c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6aee, gbc.sp());
        EXPECT(0x3e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02E8
        gbc.setState(0xb609, 0xf6df, 0x2eb0, 0xc970, 0x51ea, 0xa146, 0x1, 0x1);
        gbc.writeMem(0xb609, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf6df, gbc.sp());
        EXPECT(0xb60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb609));
        EXPECT(0xd7, gbc.readMem(0xb60a));
        // CB D7 02E9
        gbc.setState(0xa700, 0x4da6, 0x39a0, 0x202d, 0x409, 0x4152, 0x0, 0x1);
        gbc.writeMem(0xa700, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4da6, gbc.sp());
        EXPECT(0xa702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa700));
        EXPECT(0xd7, gbc.readMem(0xa701));
        // CB D7 02EA
        gbc.setState(0x4f76, 0xaa13, 0x94d0, 0x68c2, 0xf697, 0x68ed, 0x1, 0x0);
        gbc.writeMem(0x4f76, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xaa13, gbc.sp());
        EXPECT(0x4f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02EB
        gbc.setState(0x17a, 0x4c10, 0x11f0, 0x15b5, 0x48aa, 0x15f7, 0x0, 0x0);
        gbc.writeMem(0x17a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4c10, gbc.sp());
        EXPECT(0x17c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02EC
        gbc.setState(0xa7f5, 0x22c4, 0x4250, 0x33be, 0xd7cc, 0xa24c, 0x1, 0x0);
        gbc.writeMem(0xa7f5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x22c4, gbc.sp());
        EXPECT(0xa7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f5));
        EXPECT(0xd7, gbc.readMem(0xa7f6));
        // CB D7 02ED
        gbc.setState(0xdda8, 0xb5c3, 0xb5e0, 0x1550, 0x892e, 0xd0ee, 0x0, 0x1);
        gbc.writeMem(0xdda8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb5c3, gbc.sp());
        EXPECT(0xddaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda8));
        EXPECT(0xd7, gbc.readMem(0xdda9));
        // CB D7 02EE
        gbc.setState(0x9655, 0xcf39, 0xbb50, 0x79de, 0x9959, 0x5b6, 0x1, 0x0);
        gbc.writeMem(0x9655, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcf39, gbc.sp());
        EXPECT(0x9657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9655));
        EXPECT(0xd7, gbc.readMem(0x9656));
        // CB D7 02EF
        gbc.setState(0xe781, 0x7be9, 0x9890, 0xe3f, 0x73c7, 0x7b60, 0x0, 0x1);
        gbc.writeMem(0xe781, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7be9, gbc.sp());
        EXPECT(0xe783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe781));
        EXPECT(0xd7, gbc.readMem(0xe782));
        // CB D7 02F0
        gbc.setState(0xc872, 0xcb67, 0x1150, 0x1452, 0xdcec, 0x8bc4, 0x0, 0x0);
        gbc.writeMem(0xc872, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcb67, gbc.sp());
        EXPECT(0xc874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc872));
        EXPECT(0xd7, gbc.readMem(0xc873));
        // CB D7 02F1
        gbc.setState(0x3c31, 0x8976, 0xedb0, 0x7fc5, 0x6482, 0xaa3f, 0x0, 0x0);
        gbc.writeMem(0x3c31, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8976, gbc.sp());
        EXPECT(0x3c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02F2
        gbc.setState(0x8ac5, 0xb9e9, 0x54e0, 0x6836, 0x943c, 0x7c2a, 0x1, 0x1);
        gbc.writeMem(0x8ac5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb9e9, gbc.sp());
        EXPECT(0x8ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac5));
        EXPECT(0xd7, gbc.readMem(0x8ac6));
        // CB D7 02F3
        gbc.setState(0xaa2e, 0xedb0, 0x1840, 0x36, 0x3fa8, 0x2800, 0x1, 0x1);
        gbc.writeMem(0xaa2e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xedb0, gbc.sp());
        EXPECT(0xaa30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2e));
        EXPECT(0xd7, gbc.readMem(0xaa2f));
        // CB D7 02F4
        gbc.setState(0xd55, 0x68fc, 0x42a0, 0xe7bf, 0x33ca, 0x7fa7, 0x1, 0x1);
        gbc.writeMem(0xd55, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x68fc, gbc.sp());
        EXPECT(0xd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02F5
        gbc.setState(0x8c08, 0xf693, 0xeef0, 0xefd5, 0x7239, 0xb1a1, 0x1, 0x0);
        gbc.writeMem(0x8c08, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf693, gbc.sp());
        EXPECT(0x8c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c08));
        EXPECT(0xd7, gbc.readMem(0x8c09));
        // CB D7 02F6
        gbc.setState(0x2ecf, 0xd20f, 0xd720, 0xfcce, 0x3b9a, 0x6c7a, 0x1, 0x0);
        gbc.writeMem(0x2ecf, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd20f, gbc.sp());
        EXPECT(0x2ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02F7
        gbc.setState(0x5f73, 0x20e0, 0x90c0, 0xcfc5, 0x788b, 0x8639, 0x1, 0x0);
        gbc.writeMem(0x5f73, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x20e0, gbc.sp());
        EXPECT(0x5f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 02F8
        gbc.setState(0xcd7c, 0x8531, 0x460, 0x3ed4, 0x7e22, 0x18ac, 0x0, 0x1);
        gbc.writeMem(0xcd7c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8531, gbc.sp());
        EXPECT(0xcd7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd7c));
        EXPECT(0xd7, gbc.readMem(0xcd7d));
        // CB D7 02F9
        gbc.setState(0xc85e, 0xec01, 0x1170, 0x6183, 0xb502, 0xc436, 0x1, 0x0);
        gbc.writeMem(0xc85e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xec01, gbc.sp());
        EXPECT(0xc860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85e));
        EXPECT(0xd7, gbc.readMem(0xc85f));
        // CB D7 02FA
        gbc.setState(0x3f04, 0x34b5, 0xd710, 0xcfaf, 0xa4f4, 0x10e3, 0x1, 0x1);
        gbc.writeMem(0x3f04, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x34b5, gbc.sp());
        EXPECT(0x3f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 02FB
        gbc.setState(0x82ab, 0x15f, 0x7610, 0xd820, 0xd6ab, 0x4082, 0x1, 0x0);
        gbc.writeMem(0x82ab, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x15f, gbc.sp());
        EXPECT(0x82ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ab));
        EXPECT(0xd7, gbc.readMem(0x82ac));
        // CB D7 02FC
        gbc.setState(0xc468, 0xd403, 0x9480, 0xaf38, 0x1161, 0x3f28, 0x1, 0x0);
        gbc.writeMem(0xc468, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd403, gbc.sp());
        EXPECT(0xc46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc468));
        EXPECT(0xd7, gbc.readMem(0xc469));
        // CB D7 02FD
        gbc.setState(0x9813, 0xf53a, 0xdcf0, 0xb66e, 0x9a93, 0x9c21, 0x1, 0x0);
        gbc.writeMem(0x9813, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf53a, gbc.sp());
        EXPECT(0x9815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9813));
        EXPECT(0xd7, gbc.readMem(0x9814));
        // CB D7 02FE
        gbc.setState(0x98f5, 0xbc94, 0x5f80, 0xb231, 0xf93e, 0x781, 0x1, 0x1);
        gbc.writeMem(0x98f5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbc94, gbc.sp());
        EXPECT(0x98f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f5));
        EXPECT(0xd7, gbc.readMem(0x98f6));
        // CB D7 02FF
        gbc.setState(0x94f9, 0x5d32, 0xf3f0, 0x43e5, 0x7860, 0xd862, 0x1, 0x0);
        gbc.writeMem(0x94f9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5d32, gbc.sp());
        EXPECT(0x94fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f9));
        EXPECT(0xd7, gbc.readMem(0x94fa));
        // CB D7 0300
        gbc.setState(0xbd7c, 0x7ccc, 0x2dd0, 0x4cd7, 0xf4fa, 0x91c9, 0x1, 0x0);
        gbc.writeMem(0xbd7c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7ccc, gbc.sp());
        EXPECT(0xbd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd7c));
        EXPECT(0xd7, gbc.readMem(0xbd7d));
        // CB D7 0301
        gbc.setState(0x6248, 0xe847, 0x37c0, 0xb1c0, 0xd084, 0xa50b, 0x0, 0x0);
        gbc.writeMem(0x6248, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe847, gbc.sp());
        EXPECT(0x624a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0302
        gbc.setState(0x8075, 0xf8fc, 0x3cb0, 0x2e52, 0x41d3, 0xc810, 0x0, 0x1);
        gbc.writeMem(0x8075, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf8fc, gbc.sp());
        EXPECT(0x8077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8075));
        EXPECT(0xd7, gbc.readMem(0x8076));
        // CB D7 0303
        gbc.setState(0x8515, 0x7429, 0xb950, 0x57b8, 0x9c4c, 0x2e9f, 0x1, 0x0);
        gbc.writeMem(0x8515, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7429, gbc.sp());
        EXPECT(0x8517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8515));
        EXPECT(0xd7, gbc.readMem(0x8516));
        // CB D7 0304
        gbc.setState(0xd2a1, 0xeb00, 0xe4b0, 0xade2, 0x67b8, 0xdfce, 0x1, 0x0);
        gbc.writeMem(0xd2a1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xeb00, gbc.sp());
        EXPECT(0xd2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a1));
        EXPECT(0xd7, gbc.readMem(0xd2a2));
        // CB D7 0305
        gbc.setState(0x2aad, 0xaa67, 0x7b60, 0xe30e, 0xb465, 0xc194, 0x1, 0x1);
        gbc.writeMem(0x2aad, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaa67, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0306
        gbc.setState(0xa1a4, 0x8a4c, 0x6120, 0x6c11, 0xa011, 0xcce9, 0x0, 0x1);
        gbc.writeMem(0xa1a4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8a4c, gbc.sp());
        EXPECT(0xa1a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a4));
        EXPECT(0xd7, gbc.readMem(0xa1a5));
        // CB D7 0307
        gbc.setState(0x54f8, 0xfd47, 0x74a0, 0x772a, 0x7585, 0x32f7, 0x0, 0x0);
        gbc.writeMem(0x54f8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfd47, gbc.sp());
        EXPECT(0x54fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0309
        gbc.setState(0x6ce0, 0xd10e, 0x1a20, 0xec84, 0xcb12, 0x8e71, 0x1, 0x1);
        gbc.writeMem(0x6ce0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd10e, gbc.sp());
        EXPECT(0x6ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 030A
        gbc.setState(0x62ba, 0x128d, 0xdfe0, 0x5412, 0x800f, 0x80, 0x1, 0x1);
        gbc.writeMem(0x62ba, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x128d, gbc.sp());
        EXPECT(0x62bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 030B
        gbc.setState(0x4494, 0xcb2, 0x7fc0, 0x9e5c, 0x854f, 0x6441, 0x0, 0x0);
        gbc.writeMem(0x4494, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcb2, gbc.sp());
        EXPECT(0x4496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 030C
        gbc.setState(0xd63a, 0x22d7, 0xe0d0, 0xd2e4, 0x556e, 0x5672, 0x1, 0x0);
        gbc.writeMem(0xd63a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x22d7, gbc.sp());
        EXPECT(0xd63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd63a));
        EXPECT(0xd7, gbc.readMem(0xd63b));
        // CB D7 030D
        gbc.setState(0x643f, 0x55a7, 0x4780, 0x306, 0xc8e0, 0x138e, 0x1, 0x0);
        gbc.writeMem(0x643f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x55a7, gbc.sp());
        EXPECT(0x6441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 030E
        gbc.setState(0xa452, 0x32be, 0x4990, 0x59e6, 0xfd26, 0x2ece, 0x0, 0x1);
        gbc.writeMem(0xa452, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x32be, gbc.sp());
        EXPECT(0xa454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa452));
        EXPECT(0xd7, gbc.readMem(0xa453));
        // CB D7 030F
        gbc.setState(0x31fd, 0x23b5, 0xee30, 0xa9bb, 0xcef2, 0x59d3, 0x0, 0x0);
        gbc.writeMem(0x31fd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x23b5, gbc.sp());
        EXPECT(0x31ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0311
        gbc.setState(0x65f6, 0x96a3, 0x4990, 0x139f, 0x7fe5, 0xb632, 0x0, 0x1);
        gbc.writeMem(0x65f6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x96a3, gbc.sp());
        EXPECT(0x65f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0312
        gbc.setState(0xdb18, 0x73b, 0xb270, 0x8831, 0x16d0, 0xe1ee, 0x0, 0x0);
        gbc.writeMem(0xdb18, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x73b, gbc.sp());
        EXPECT(0xdb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb18));
        EXPECT(0xd7, gbc.readMem(0xdb19));
        // CB D7 0313
        gbc.setState(0xd06, 0xb50a, 0x1d10, 0xfde2, 0x4281, 0x50bd, 0x1, 0x1);
        gbc.writeMem(0xd06, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb50a, gbc.sp());
        EXPECT(0xd08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0314
        gbc.setState(0xdf89, 0x122b, 0x2c90, 0x4f3c, 0xc147, 0x18a9, 0x0, 0x1);
        gbc.writeMem(0xdf89, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x122b, gbc.sp());
        EXPECT(0xdf8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf89));
        EXPECT(0xd7, gbc.readMem(0xdf8a));
        // CB D7 0315
        gbc.setState(0x4e84, 0x5ab7, 0x4350, 0x5538, 0x2187, 0x6ca8, 0x1, 0x1);
        gbc.writeMem(0x4e84, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5ab7, gbc.sp());
        EXPECT(0x4e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0316
        gbc.setState(0x6d6e, 0x4837, 0xc050, 0xee5b, 0x126f, 0xb3eb, 0x0, 0x0);
        gbc.writeMem(0x6d6e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4837, gbc.sp());
        EXPECT(0x6d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0317
        gbc.setState(0x6b66, 0xbe34, 0x5bd0, 0x290e, 0xa01b, 0xc835, 0x0, 0x1);
        gbc.writeMem(0x6b66, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbe34, gbc.sp());
        EXPECT(0x6b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0318
        gbc.setState(0x897c, 0x30d2, 0xdce0, 0x7d6b, 0x94aa, 0x5e45, 0x1, 0x0);
        gbc.writeMem(0x897c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x30d2, gbc.sp());
        EXPECT(0x897e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897c));
        EXPECT(0xd7, gbc.readMem(0x897d));
        // CB D7 031A
        gbc.setState(0x11af, 0xcaed, 0x3080, 0xd058, 0x47f, 0xf6e, 0x0, 0x1);
        gbc.writeMem(0x11af, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcaed, gbc.sp());
        EXPECT(0x11b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 031B
        gbc.setState(0xb395, 0xc59a, 0xa2e0, 0xb43f, 0xa5c6, 0xfd22, 0x0, 0x1);
        gbc.writeMem(0xb395, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc59a, gbc.sp());
        EXPECT(0xb397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb395));
        EXPECT(0xd7, gbc.readMem(0xb396));
        // CB D7 031C
        gbc.setState(0x7ad8, 0x98fa, 0xf9e0, 0x261a, 0xf0e2, 0x7d5a, 0x1, 0x1);
        gbc.writeMem(0x7ad8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x98fa, gbc.sp());
        EXPECT(0x7ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 031D
        gbc.setState(0x2337, 0x591e, 0x6650, 0x3418, 0x46a4, 0xdb84, 0x0, 0x1);
        gbc.writeMem(0x2337, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x591e, gbc.sp());
        EXPECT(0x2339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 031E
        gbc.setState(0x2e0c, 0x83c8, 0x91c0, 0x500e, 0xe47, 0x169d, 0x0, 0x1);
        gbc.writeMem(0x2e0c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x83c8, gbc.sp());
        EXPECT(0x2e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 031F
        gbc.setState(0xc67d, 0x72d9, 0x4f70, 0x2389, 0x5b, 0x63a3, 0x1, 0x1);
        gbc.writeMem(0xc67d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x72d9, gbc.sp());
        EXPECT(0xc67f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67d));
        EXPECT(0xd7, gbc.readMem(0xc67e));
        // CB D7 0320
        gbc.setState(0x2fcd, 0x5a4, 0xb250, 0x42f5, 0xc587, 0xfddd, 0x1, 0x0);
        gbc.writeMem(0x2fcd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5a4, gbc.sp());
        EXPECT(0x2fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0321
        gbc.setState(0xbbd3, 0xd694, 0x8870, 0x261b, 0xed9, 0x5774, 0x0, 0x0);
        gbc.writeMem(0xbbd3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd694, gbc.sp());
        EXPECT(0xbbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd3));
        EXPECT(0xd7, gbc.readMem(0xbbd4));
        // CB D7 0322
        gbc.setState(0x38c7, 0x9282, 0xd400, 0xb5fe, 0x6a14, 0x22fe, 0x1, 0x1);
        gbc.writeMem(0x38c7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9282, gbc.sp());
        EXPECT(0x38c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0323
        gbc.setState(0xb8f5, 0x4ca9, 0xc1a0, 0xb5fb, 0x50ce, 0x45f6, 0x1, 0x1);
        gbc.writeMem(0xb8f5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4ca9, gbc.sp());
        EXPECT(0xb8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f5));
        EXPECT(0xd7, gbc.readMem(0xb8f6));
        // CB D7 0324
        gbc.setState(0xad7f, 0xcbdc, 0xf3b0, 0x2032, 0x1328, 0xf04, 0x0, 0x0);
        gbc.writeMem(0xad7f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcbdc, gbc.sp());
        EXPECT(0xad81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7f));
        EXPECT(0xd7, gbc.readMem(0xad80));
        // CB D7 0325
        gbc.setState(0x1d83, 0x1ad4, 0xe0b0, 0xbbf0, 0x83e2, 0xd415, 0x0, 0x0);
        gbc.writeMem(0x1d83, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1ad4, gbc.sp());
        EXPECT(0x1d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0326
        gbc.setState(0xceac, 0x4e09, 0x4f60, 0x674a, 0xb265, 0xb1ec, 0x1, 0x1);
        gbc.writeMem(0xceac, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4e09, gbc.sp());
        EXPECT(0xceae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceac));
        EXPECT(0xd7, gbc.readMem(0xcead));
        // CB D7 0327
        gbc.setState(0x999d, 0xe853, 0x4990, 0x111d, 0xe771, 0x62a8, 0x0, 0x1);
        gbc.writeMem(0x999d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe853, gbc.sp());
        EXPECT(0x999f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x999d));
        EXPECT(0xd7, gbc.readMem(0x999e));
        // CB D7 0328
        gbc.setState(0x1a3d, 0xd427, 0xe900, 0x7d2e, 0x959e, 0x53a6, 0x0, 0x1);
        gbc.writeMem(0x1a3d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd427, gbc.sp());
        EXPECT(0x1a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0329
        gbc.setState(0x9b07, 0x59c7, 0xfc30, 0x84ec, 0xe0db, 0x684b, 0x1, 0x0);
        gbc.writeMem(0x9b07, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x59c7, gbc.sp());
        EXPECT(0x9b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b07));
        EXPECT(0xd7, gbc.readMem(0x9b08));
        // CB D7 032A
        gbc.setState(0xea45, 0x7341, 0x2b00, 0xfe26, 0x84ad, 0x7d47, 0x0, 0x0);
        gbc.writeMem(0xea45, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7341, gbc.sp());
        EXPECT(0xea47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea45));
        EXPECT(0xd7, gbc.readMem(0xea46));
        // CB D7 032B
        gbc.setState(0x2842, 0x3188, 0x48c0, 0x5e1c, 0x444e, 0x3d17, 0x0, 0x1);
        gbc.writeMem(0x2842, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3188, gbc.sp());
        EXPECT(0x2844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 032C
        gbc.setState(0xa7ce, 0x2d2c, 0xfa50, 0x9c04, 0x52b4, 0xe94d, 0x1, 0x0);
        gbc.writeMem(0xa7ce, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2d2c, gbc.sp());
        EXPECT(0xa7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ce));
        EXPECT(0xd7, gbc.readMem(0xa7cf));
        // CB D7 032D
        gbc.setState(0x3a16, 0x8d4, 0x3ac0, 0x20fd, 0xc466, 0x4c41, 0x0, 0x0);
        gbc.writeMem(0x3a16, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8d4, gbc.sp());
        EXPECT(0x3a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 032E
        gbc.setState(0x6cf7, 0x2671, 0x6b90, 0xaab8, 0xe988, 0x8a36, 0x0, 0x1);
        gbc.writeMem(0x6cf7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2671, gbc.sp());
        EXPECT(0x6cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 032F
        gbc.setState(0xab8a, 0xf100, 0x5bf0, 0xa19e, 0xd766, 0x6f8, 0x1, 0x0);
        gbc.writeMem(0xab8a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf100, gbc.sp());
        EXPECT(0xab8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab8a));
        EXPECT(0xd7, gbc.readMem(0xab8b));
        // CB D7 0331
        gbc.setState(0x1a6c, 0x5f01, 0x2b60, 0xd63b, 0x1251, 0xd2f4, 0x1, 0x1);
        gbc.writeMem(0x1a6c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5f01, gbc.sp());
        EXPECT(0x1a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0334
        gbc.setState(0xa547, 0xe9f8, 0xba70, 0x7ba5, 0x7f5d, 0xd334, 0x1, 0x0);
        gbc.writeMem(0xa547, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe9f8, gbc.sp());
        EXPECT(0xa549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa547));
        EXPECT(0xd7, gbc.readMem(0xa548));
        // CB D7 0335
        gbc.setState(0x3d8c, 0xadad, 0x2d90, 0xd160, 0xa71, 0xc6f8, 0x1, 0x1);
        gbc.writeMem(0x3d8c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xadad, gbc.sp());
        EXPECT(0x3d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0336
        gbc.setState(0x186f, 0x29c, 0xcf50, 0x1be6, 0xc575, 0xf0f6, 0x1, 0x1);
        gbc.writeMem(0x186f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x29c, gbc.sp());
        EXPECT(0x1871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0337
        gbc.setState(0x13c7, 0xf193, 0x5f60, 0x9422, 0xa6c0, 0x60a, 0x1, 0x0);
        gbc.writeMem(0x13c7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf193, gbc.sp());
        EXPECT(0x13c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0338
        gbc.setState(0xd50d, 0x9bd6, 0x86b0, 0x7b39, 0xd669, 0x29, 0x1, 0x0);
        gbc.writeMem(0xd50d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9bd6, gbc.sp());
        EXPECT(0xd50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50d));
        EXPECT(0xd7, gbc.readMem(0xd50e));
        // CB D7 0339
        gbc.setState(0x164a, 0xbba0, 0x6ac0, 0x25dc, 0x2e9c, 0x8b72, 0x0, 0x0);
        gbc.writeMem(0x164a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbba0, gbc.sp());
        EXPECT(0x164c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 033A
        gbc.setState(0x5040, 0xa2d5, 0x1fb0, 0xd25c, 0x19c1, 0xf794, 0x0, 0x0);
        gbc.writeMem(0x5040, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa2d5, gbc.sp());
        EXPECT(0x5042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 033B
        gbc.setState(0x762b, 0x9a73, 0x9310, 0xe60, 0x60a1, 0xbed7, 0x1, 0x1);
        gbc.writeMem(0x762b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9a73, gbc.sp());
        EXPECT(0x762d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 033C
        gbc.setState(0x1e96, 0xe0b9, 0xdf90, 0x373e, 0x5429, 0xabcf, 0x0, 0x0);
        gbc.writeMem(0x1e96, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe0b9, gbc.sp());
        EXPECT(0x1e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 033D
        gbc.setState(0xa0d4, 0xebc, 0xd6f0, 0xd72, 0x801e, 0x46e5, 0x0, 0x1);
        gbc.writeMem(0xa0d4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xebc, gbc.sp());
        EXPECT(0xa0d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d4));
        EXPECT(0xd7, gbc.readMem(0xa0d5));
        // CB D7 033E
        gbc.setState(0x760f, 0xbb4a, 0x9af0, 0x94e5, 0x873f, 0x1b3d, 0x0, 0x1);
        gbc.writeMem(0x760f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbb4a, gbc.sp());
        EXPECT(0x7611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0340
        gbc.setState(0xcdca, 0xee20, 0x41f0, 0x9702, 0x5a92, 0x6a68, 0x0, 0x0);
        gbc.writeMem(0xcdca, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xee20, gbc.sp());
        EXPECT(0xcdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdca));
        EXPECT(0xd7, gbc.readMem(0xcdcb));
        // CB D7 0341
        gbc.setState(0x93e7, 0x86b, 0xd1d0, 0xdf32, 0x779, 0x8add, 0x0, 0x1);
        gbc.writeMem(0x93e7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x86b, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e7));
        EXPECT(0xd7, gbc.readMem(0x93e8));
        // CB D7 0342
        gbc.setState(0xcc8a, 0xf805, 0xd8b0, 0x6dbe, 0x808f, 0xc10b, 0x1, 0x0);
        gbc.writeMem(0xcc8a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf805, gbc.sp());
        EXPECT(0xcc8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8a));
        EXPECT(0xd7, gbc.readMem(0xcc8b));
        // CB D7 0343
        gbc.setState(0x42cb, 0x99b2, 0x10d0, 0x7326, 0x1db0, 0xf464, 0x1, 0x1);
        gbc.writeMem(0x42cb, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x99b2, gbc.sp());
        EXPECT(0x42cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0344
        gbc.setState(0x2613, 0xfdd6, 0xdd0, 0xcfeb, 0x24a2, 0xf7b8, 0x1, 0x1);
        gbc.writeMem(0x2613, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfdd6, gbc.sp());
        EXPECT(0x2615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0345
        gbc.setState(0xb292, 0xba14, 0xd6c0, 0xbe54, 0xf75c, 0xc7ca, 0x0, 0x1);
        gbc.writeMem(0xb292, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xba14, gbc.sp());
        EXPECT(0xb294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb292));
        EXPECT(0xd7, gbc.readMem(0xb293));
        // CB D7 0346
        gbc.setState(0x4fa2, 0x9cbf, 0xb150, 0xc390, 0x4df5, 0x969a, 0x1, 0x0);
        gbc.writeMem(0x4fa2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9cbf, gbc.sp());
        EXPECT(0x4fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0347
        gbc.setState(0xdc51, 0x39aa, 0xbe40, 0x38fb, 0x12b0, 0xe9c7, 0x1, 0x0);
        gbc.writeMem(0xdc51, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x39aa, gbc.sp());
        EXPECT(0xdc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc51));
        EXPECT(0xd7, gbc.readMem(0xdc52));
        // CB D7 0348
        gbc.setState(0xd98e, 0xe734, 0xb500, 0x7dcb, 0xfbe4, 0x86b, 0x1, 0x0);
        gbc.writeMem(0xd98e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe734, gbc.sp());
        EXPECT(0xd990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd98e));
        EXPECT(0xd7, gbc.readMem(0xd98f));
        // CB D7 0349
        gbc.setState(0x734d, 0x56a6, 0xb0, 0x9ec6, 0x355c, 0x4076, 0x1, 0x0);
        gbc.writeMem(0x734d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x56a6, gbc.sp());
        EXPECT(0x734f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 034A
        gbc.setState(0xc009, 0xaf09, 0x9f50, 0x1e9b, 0xa8b0, 0xfa4a, 0x0, 0x1);
        gbc.writeMem(0xc009, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xaf09, gbc.sp());
        EXPECT(0xc00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc009));
        EXPECT(0xd7, gbc.readMem(0xc00a));
        // CB D7 034B
        gbc.setState(0x55b5, 0xf6d3, 0xf340, 0x9cc0, 0x4583, 0xaa92, 0x0, 0x0);
        gbc.writeMem(0x55b5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf6d3, gbc.sp());
        EXPECT(0x55b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 034C
        gbc.setState(0xc611, 0x136d, 0xda70, 0xa5be, 0x35f4, 0x5b4, 0x1, 0x0);
        gbc.writeMem(0xc611, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x136d, gbc.sp());
        EXPECT(0xc613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc611));
        EXPECT(0xd7, gbc.readMem(0xc612));
        // CB D7 034D
        gbc.setState(0xdcfe, 0x618c, 0xaa70, 0x4f30, 0x1fe5, 0x144d, 0x1, 0x1);
        gbc.writeMem(0xdcfe, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x618c, gbc.sp());
        EXPECT(0xdd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfe));
        EXPECT(0xd7, gbc.readMem(0xdcff));
        // CB D7 034E
        gbc.setState(0xd843, 0x4162, 0xe6e0, 0x402f, 0x97e, 0x5996, 0x0, 0x1);
        gbc.writeMem(0xd843, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4162, gbc.sp());
        EXPECT(0xd845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd843));
        EXPECT(0xd7, gbc.readMem(0xd844));
        // CB D7 034F
        gbc.setState(0x3c01, 0xfefc, 0xdb60, 0x50c9, 0x26b2, 0x2317, 0x1, 0x1);
        gbc.writeMem(0x3c01, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfefc, gbc.sp());
        EXPECT(0x3c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0351
        gbc.setState(0x677, 0xed83, 0x3160, 0xb1e5, 0x7223, 0xa443, 0x1, 0x1);
        gbc.writeMem(0x677, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xed83, gbc.sp());
        EXPECT(0x679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0352
        gbc.setState(0xaaff, 0xc7e3, 0x99b0, 0x8b0, 0xe0ae, 0x6227, 0x0, 0x1);
        gbc.writeMem(0xaaff, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc7e3, gbc.sp());
        EXPECT(0xab01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaff));
        EXPECT(0xd7, gbc.readMem(0xab00));
        // CB D7 0353
        gbc.setState(0xd821, 0x2f99, 0x1d60, 0x5ee3, 0x8d89, 0x1a5d, 0x0, 0x1);
        gbc.writeMem(0xd821, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2f99, gbc.sp());
        EXPECT(0xd823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd821));
        EXPECT(0xd7, gbc.readMem(0xd822));
        // CB D7 0354
        gbc.setState(0xefe0, 0xf771, 0x4aa0, 0x8e05, 0x9628, 0x3e98, 0x1, 0x0);
        gbc.writeMem(0xefe0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf771, gbc.sp());
        EXPECT(0xefe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe0));
        EXPECT(0xd7, gbc.readMem(0xefe1));
        // CB D7 0355
        gbc.setState(0x5fbb, 0x388c, 0xea60, 0x65c6, 0xc2d7, 0xef7e, 0x0, 0x0);
        gbc.writeMem(0x5fbb, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x388c, gbc.sp());
        EXPECT(0x5fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0356
        gbc.setState(0xe39b, 0x4af9, 0xc760, 0x3abd, 0xc113, 0x72c1, 0x1, 0x0);
        gbc.writeMem(0xe39b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4af9, gbc.sp());
        EXPECT(0xe39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39b));
        EXPECT(0xd7, gbc.readMem(0xe39c));
        // CB D7 0358
        gbc.setState(0x9efe, 0xf216, 0xa790, 0x65cf, 0xde95, 0xc75a, 0x1, 0x0);
        gbc.writeMem(0x9efe, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf216, gbc.sp());
        EXPECT(0x9f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9efe));
        EXPECT(0xd7, gbc.readMem(0x9eff));
        // CB D7 0359
        gbc.setState(0x7fc6, 0x8718, 0x3fb0, 0xc97c, 0xe440, 0xf657, 0x1, 0x0);
        gbc.writeMem(0x7fc6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8718, gbc.sp());
        EXPECT(0x7fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 035A
        gbc.setState(0x1141, 0x59de, 0xb8c0, 0x6a12, 0xaba3, 0xfce0, 0x0, 0x1);
        gbc.writeMem(0x1141, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x59de, gbc.sp());
        EXPECT(0x1143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 035B
        gbc.setState(0x29ab, 0x6cc8, 0x9ce0, 0x9b5d, 0xa8a6, 0x794d, 0x1, 0x1);
        gbc.writeMem(0x29ab, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6cc8, gbc.sp());
        EXPECT(0x29ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 035C
        gbc.setState(0x8ae6, 0x1cb2, 0xdb20, 0x2261, 0x48fb, 0x3317, 0x1, 0x0);
        gbc.writeMem(0x8ae6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1cb2, gbc.sp());
        EXPECT(0x8ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae6));
        EXPECT(0xd7, gbc.readMem(0x8ae7));
        // CB D7 035D
        gbc.setState(0x9055, 0x2231, 0x6dc0, 0xb9ef, 0x7cf, 0xc2b9, 0x1, 0x0);
        gbc.writeMem(0x9055, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2231, gbc.sp());
        EXPECT(0x9057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9055));
        EXPECT(0xd7, gbc.readMem(0x9056));
        // CB D7 035E
        gbc.setState(0x229, 0xd2fc, 0x2770, 0x133c, 0x7998, 0xaccd, 0x0, 0x1);
        gbc.writeMem(0x229, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd2fc, gbc.sp());
        EXPECT(0x22b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 035F
        gbc.setState(0xad82, 0x915b, 0xd080, 0xd00c, 0x2e3c, 0x775c, 0x1, 0x1);
        gbc.writeMem(0xad82, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x915b, gbc.sp());
        EXPECT(0xad84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad82));
        EXPECT(0xd7, gbc.readMem(0xad83));
        // CB D7 0360
        gbc.setState(0x5504, 0x8af1, 0x710, 0x551f, 0x4793, 0xbd63, 0x1, 0x0);
        gbc.writeMem(0x5504, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8af1, gbc.sp());
        EXPECT(0x5506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0362
        gbc.setState(0xa0f1, 0x2e7e, 0x8b50, 0xcc9e, 0xc912, 0x116a, 0x0, 0x0);
        gbc.writeMem(0xa0f1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2e7e, gbc.sp());
        EXPECT(0xa0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f1));
        EXPECT(0xd7, gbc.readMem(0xa0f2));
        // CB D7 0363
        gbc.setState(0x2cf1, 0x9c45, 0x64d0, 0x231a, 0x73c8, 0x561, 0x0, 0x0);
        gbc.writeMem(0x2cf1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9c45, gbc.sp());
        EXPECT(0x2cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0364
        gbc.setState(0x53f4, 0x4022, 0x6f50, 0xf0c7, 0x1752, 0x4685, 0x0, 0x0);
        gbc.writeMem(0x53f4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4022, gbc.sp());
        EXPECT(0x53f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0365
        gbc.setState(0x9f0f, 0x1a94, 0x7a80, 0x8671, 0xc7dc, 0xa380, 0x0, 0x1);
        gbc.writeMem(0x9f0f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1a94, gbc.sp());
        EXPECT(0x9f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f0f));
        EXPECT(0xd7, gbc.readMem(0x9f10));
        // CB D7 0366
        gbc.setState(0x1e89, 0xf05f, 0x6380, 0x1854, 0x9778, 0x57cb, 0x1, 0x0);
        gbc.writeMem(0x1e89, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf05f, gbc.sp());
        EXPECT(0x1e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0367
        gbc.setState(0x28ba, 0x26c8, 0x14d0, 0x6692, 0x9bde, 0xc1d6, 0x1, 0x1);
        gbc.writeMem(0x28ba, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x26c8, gbc.sp());
        EXPECT(0x28bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0368
        gbc.setState(0x1a82, 0x5b2a, 0x2110, 0xcb5e, 0x79a4, 0xa9c2, 0x0, 0x1);
        gbc.writeMem(0x1a82, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5b2a, gbc.sp());
        EXPECT(0x1a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0369
        gbc.setState(0x2485, 0xc7df, 0xbe0, 0x9b5b, 0xd05a, 0x63f9, 0x0, 0x1);
        gbc.writeMem(0x2485, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc7df, gbc.sp());
        EXPECT(0x2487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 036A
        gbc.setState(0x2301, 0xba17, 0x9cf0, 0x612f, 0x8ac2, 0xc6d2, 0x1, 0x1);
        gbc.writeMem(0x2301, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xba17, gbc.sp());
        EXPECT(0x2303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 036B
        gbc.setState(0x3411, 0xa47b, 0x60b0, 0xf225, 0xecc2, 0x78c7, 0x1, 0x1);
        gbc.writeMem(0x3411, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa47b, gbc.sp());
        EXPECT(0x3413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 036C
        gbc.setState(0x7c98, 0x1b99, 0x7410, 0x5e48, 0x3bbd, 0x11e5, 0x0, 0x0);
        gbc.writeMem(0x7c98, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1b99, gbc.sp());
        EXPECT(0x7c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 036D
        gbc.setState(0x35dc, 0xcd87, 0xe0a0, 0x36bd, 0x43fe, 0xf72d, 0x1, 0x0);
        gbc.writeMem(0x35dc, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcd87, gbc.sp());
        EXPECT(0x35de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 036E
        gbc.setState(0x387, 0x68ae, 0xe900, 0x2e21, 0xada, 0x9a99, 0x1, 0x1);
        gbc.writeMem(0x387, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x68ae, gbc.sp());
        EXPECT(0x389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 036F
        gbc.setState(0x4817, 0x1e97, 0xbad0, 0xef17, 0xfbec, 0x8b63, 0x1, 0x0);
        gbc.writeMem(0x4817, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1e97, gbc.sp());
        EXPECT(0x4819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0370
        gbc.setState(0xc051, 0x5263, 0x39b0, 0xf9c6, 0x792f, 0x75ca, 0x0, 0x1);
        gbc.writeMem(0xc051, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5263, gbc.sp());
        EXPECT(0xc053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc051));
        EXPECT(0xd7, gbc.readMem(0xc052));
        // CB D7 0371
        gbc.setState(0x7250, 0xd46, 0xb0, 0x2bb5, 0x11a2, 0x312e, 0x0, 0x1);
        gbc.writeMem(0x7250, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd46, gbc.sp());
        EXPECT(0x7252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0372
        gbc.setState(0x6f10, 0xc40e, 0x4730, 0xb0c6, 0x32be, 0xd6fc, 0x1, 0x1);
        gbc.writeMem(0x6f10, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc40e, gbc.sp());
        EXPECT(0x6f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0374
        gbc.setState(0x5fe1, 0xe50, 0x5f80, 0xf3f1, 0x5e77, 0xeb34, 0x1, 0x1);
        gbc.writeMem(0x5fe1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe50, gbc.sp());
        EXPECT(0x5fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0375
        gbc.setState(0xa9a7, 0x7e26, 0xb480, 0x4f03, 0x5102, 0x4f55, 0x0, 0x0);
        gbc.writeMem(0xa9a7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7e26, gbc.sp());
        EXPECT(0xa9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a7));
        EXPECT(0xd7, gbc.readMem(0xa9a8));
        // CB D7 0376
        gbc.setState(0x7629, 0x2687, 0x4520, 0xffd1, 0xaefe, 0x78de, 0x1, 0x1);
        gbc.writeMem(0x7629, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2687, gbc.sp());
        EXPECT(0x762b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0377
        gbc.setState(0xab6, 0xdcc6, 0x6a90, 0x95bb, 0xedd6, 0xf107, 0x0, 0x1);
        gbc.writeMem(0xab6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdcc6, gbc.sp());
        EXPECT(0xab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0378
        gbc.setState(0x808b, 0x6aa8, 0x4a60, 0xcbf9, 0x65d3, 0x4f11, 0x1, 0x0);
        gbc.writeMem(0x808b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6aa8, gbc.sp());
        EXPECT(0x808d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808b));
        EXPECT(0xd7, gbc.readMem(0x808c));
        // CB D7 0379
        gbc.setState(0xc1a3, 0x6269, 0xcda0, 0x214f, 0xfa88, 0xd738, 0x1, 0x1);
        gbc.writeMem(0xc1a3, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6269, gbc.sp());
        EXPECT(0xc1a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a3));
        EXPECT(0xd7, gbc.readMem(0xc1a4));
        // CB D7 037A
        gbc.setState(0x8766, 0xa5cc, 0x3b50, 0xf3af, 0x1180, 0xa061, 0x0, 0x1);
        gbc.writeMem(0x8766, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa5cc, gbc.sp());
        EXPECT(0x8768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8766));
        EXPECT(0xd7, gbc.readMem(0x8767));
        // CB D7 037B
        gbc.setState(0x9a77, 0xb7b8, 0x1c0, 0xc3a8, 0xf3d, 0x655, 0x1, 0x1);
        gbc.writeMem(0x9a77, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb7b8, gbc.sp());
        EXPECT(0x9a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a77));
        EXPECT(0xd7, gbc.readMem(0x9a78));
        // CB D7 037C
        gbc.setState(0xed16, 0x913e, 0xa310, 0x154a, 0xc43a, 0x267, 0x1, 0x0);
        gbc.writeMem(0xed16, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x913e, gbc.sp());
        EXPECT(0xed18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed16));
        EXPECT(0xd7, gbc.readMem(0xed17));
        // CB D7 037D
        gbc.setState(0xc777, 0x74e0, 0xf8e0, 0x9bf2, 0x3509, 0x71d0, 0x0, 0x1);
        gbc.writeMem(0xc777, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x74e0, gbc.sp());
        EXPECT(0xc779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc777));
        EXPECT(0xd7, gbc.readMem(0xc778));
        // CB D7 037E
        gbc.setState(0x2607, 0x13a2, 0x3ad0, 0xdd8b, 0x45d6, 0x4c71, 0x1, 0x0);
        gbc.writeMem(0x2607, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x13a2, gbc.sp());
        EXPECT(0x2609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 037F
        gbc.setState(0x751d, 0x4d79, 0xea00, 0x3abb, 0x4cc2, 0xf44a, 0x0, 0x0);
        gbc.writeMem(0x751d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4d79, gbc.sp());
        EXPECT(0x751f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0380
        gbc.setState(0xa565, 0x30b, 0x9da0, 0xd46b, 0xdfa0, 0xf297, 0x0, 0x1);
        gbc.writeMem(0xa565, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x30b, gbc.sp());
        EXPECT(0xa567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa565));
        EXPECT(0xd7, gbc.readMem(0xa566));
        // CB D7 0381
        gbc.setState(0x1684, 0x2a91, 0x5370, 0xc5d7, 0x70d4, 0x1d6e, 0x0, 0x0);
        gbc.writeMem(0x1684, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2a91, gbc.sp());
        EXPECT(0x1686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0382
        gbc.setState(0x3dd9, 0x3922, 0x7670, 0x6ed5, 0xace, 0x3924, 0x0, 0x1);
        gbc.writeMem(0x3dd9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3922, gbc.sp());
        EXPECT(0x3ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0383
        gbc.setState(0x7cc0, 0x1aa5, 0x8e0, 0x6264, 0xae4f, 0x6b0c, 0x0, 0x0);
        gbc.writeMem(0x7cc0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1aa5, gbc.sp());
        EXPECT(0x7cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0384
        gbc.setState(0xa886, 0x6a76, 0xc9c0, 0xad68, 0xf5df, 0x5228, 0x1, 0x1);
        gbc.writeMem(0xa886, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6a76, gbc.sp());
        EXPECT(0xa888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa886));
        EXPECT(0xd7, gbc.readMem(0xa887));
        // CB D7 0385
        gbc.setState(0x5035, 0x8e2b, 0x5050, 0x8605, 0xe6a0, 0x18aa, 0x0, 0x1);
        gbc.writeMem(0x5035, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8e2b, gbc.sp());
        EXPECT(0x5037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0386
        gbc.setState(0x487b, 0x1c0a, 0x32f0, 0xafb7, 0xacf0, 0x772c, 0x0, 0x0);
        gbc.writeMem(0x487b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1c0a, gbc.sp());
        EXPECT(0x487d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0387
        gbc.setState(0x20b9, 0xbd73, 0x690, 0x98d7, 0x862d, 0xded2, 0x0, 0x0);
        gbc.writeMem(0x20b9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbd73, gbc.sp());
        EXPECT(0x20bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0388
        gbc.setState(0xaa3b, 0x2b09, 0x6e10, 0x71fd, 0x90c9, 0x4355, 0x1, 0x1);
        gbc.writeMem(0xaa3b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2b09, gbc.sp());
        EXPECT(0xaa3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa3b));
        EXPECT(0xd7, gbc.readMem(0xaa3c));
        // CB D7 0389
        gbc.setState(0xabe8, 0xd1df, 0x4bd0, 0xc20c, 0x196f, 0x1d77, 0x1, 0x1);
        gbc.writeMem(0xabe8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd1df, gbc.sp());
        EXPECT(0xabea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe8));
        EXPECT(0xd7, gbc.readMem(0xabe9));
        // CB D7 038A
        gbc.setState(0x186, 0xc7f2, 0x8cc0, 0xffde, 0x5391, 0x64c5, 0x1, 0x1);
        gbc.writeMem(0x186, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc7f2, gbc.sp());
        EXPECT(0x188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 038B
        gbc.setState(0x489a, 0x98d6, 0xfac0, 0xd7f8, 0xcfd5, 0x2cab, 0x1, 0x0);
        gbc.writeMem(0x489a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x98d6, gbc.sp());
        EXPECT(0x489c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 038C
        gbc.setState(0xd22f, 0x9e52, 0x2310, 0x208a, 0x46f6, 0xc016, 0x1, 0x1);
        gbc.writeMem(0xd22f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9e52, gbc.sp());
        EXPECT(0xd231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22f));
        EXPECT(0xd7, gbc.readMem(0xd230));
        // CB D7 038D
        gbc.setState(0x7948, 0xc9cf, 0x2170, 0x9897, 0xda3c, 0xcce5, 0x0, 0x1);
        gbc.writeMem(0x7948, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc9cf, gbc.sp());
        EXPECT(0x794a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 038F
        gbc.setState(0x8aad, 0x7edb, 0x5f80, 0xf8e8, 0xa2fa, 0x95f8, 0x1, 0x1);
        gbc.writeMem(0x8aad, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7edb, gbc.sp());
        EXPECT(0x8aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aad));
        EXPECT(0xd7, gbc.readMem(0x8aae));
        // CB D7 0390
        gbc.setState(0xa925, 0x1846, 0xeee0, 0xf0b, 0x5f33, 0x8993, 0x1, 0x1);
        gbc.writeMem(0xa925, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1846, gbc.sp());
        EXPECT(0xa927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa925));
        EXPECT(0xd7, gbc.readMem(0xa926));
        // CB D7 0391
        gbc.setState(0x4824, 0x3214, 0xe7c0, 0xed99, 0x1f96, 0x19c6, 0x1, 0x1);
        gbc.writeMem(0x4824, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3214, gbc.sp());
        EXPECT(0x4826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0392
        gbc.setState(0x1019, 0xf2ed, 0x7510, 0x4562, 0xecb4, 0xfaf4, 0x0, 0x0);
        gbc.writeMem(0x1019, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf2ed, gbc.sp());
        EXPECT(0x101b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0393
        gbc.setState(0x7c66, 0x4e05, 0x1900, 0xd719, 0x7a26, 0xf0a0, 0x0, 0x0);
        gbc.writeMem(0x7c66, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4e05, gbc.sp());
        EXPECT(0x7c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0394
        gbc.setState(0x7461, 0x577b, 0xa500, 0xec48, 0x788b, 0xb261, 0x0, 0x0);
        gbc.writeMem(0x7461, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x577b, gbc.sp());
        EXPECT(0x7463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 0395
        gbc.setState(0xa233, 0xdf7b, 0xa0d0, 0x1d8, 0x4bb2, 0x7f19, 0x0, 0x0);
        gbc.writeMem(0xa233, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdf7b, gbc.sp());
        EXPECT(0xa235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa233));
        EXPECT(0xd7, gbc.readMem(0xa234));
        // CB D7 0396
        gbc.setState(0x3271, 0x8d8c, 0x2bb0, 0x409e, 0x36c3, 0x1c87, 0x0, 0x0);
        gbc.writeMem(0x3271, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8d8c, gbc.sp());
        EXPECT(0x3273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 0398
        gbc.setState(0x8179, 0x232f, 0xd2e0, 0xfe3e, 0x7c74, 0x3e91, 0x0, 0x0);
        gbc.writeMem(0x8179, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x232f, gbc.sp());
        EXPECT(0x817b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8179));
        EXPECT(0xd7, gbc.readMem(0x817a));
        // CB D7 0399
        gbc.setState(0x4d45, 0xdd4e, 0x8fb0, 0x34d8, 0xa60c, 0x7eae, 0x0, 0x1);
        gbc.writeMem(0x4d45, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdd4e, gbc.sp());
        EXPECT(0x4d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 039A
        gbc.setState(0x723e, 0x21b4, 0x2f60, 0x8744, 0x53e4, 0xdc90, 0x1, 0x0);
        gbc.writeMem(0x723e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x21b4, gbc.sp());
        EXPECT(0x7240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 039B
        gbc.setState(0x1c0c, 0x5a, 0x5ef0, 0x8ee2, 0x2cd1, 0x9f43, 0x1, 0x0);
        gbc.writeMem(0x1c0c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5a, gbc.sp());
        EXPECT(0x1c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 039D
        gbc.setState(0x20a0, 0xb700, 0x36a0, 0xe1a4, 0x2cae, 0xc023, 0x1, 0x0);
        gbc.writeMem(0x20a0, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb700, gbc.sp());
        EXPECT(0x20a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 039E
        gbc.setState(0xd9c5, 0x1bfe, 0x3e50, 0x4a89, 0x8511, 0xa9e3, 0x1, 0x1);
        gbc.writeMem(0xd9c5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1bfe, gbc.sp());
        EXPECT(0xd9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c5));
        EXPECT(0xd7, gbc.readMem(0xd9c6));
        // CB D7 039F
        gbc.setState(0x833, 0x8b1f, 0xe210, 0x7b1c, 0x5167, 0x3f63, 0x1, 0x0);
        gbc.writeMem(0x833, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8b1f, gbc.sp());
        EXPECT(0x835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03A1
        gbc.setState(0x5803, 0x2b96, 0x86c0, 0xd941, 0xa668, 0x8941, 0x0, 0x0);
        gbc.writeMem(0x5803, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2b96, gbc.sp());
        EXPECT(0x5805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03A2
        gbc.setState(0xcf49, 0x624c, 0xd560, 0x9c92, 0x1ce9, 0xfe8a, 0x1, 0x1);
        gbc.writeMem(0xcf49, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x624c, gbc.sp());
        EXPECT(0xcf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf49));
        EXPECT(0xd7, gbc.readMem(0xcf4a));
        // CB D7 03A3
        gbc.setState(0x802b, 0xb9e2, 0xc560, 0x97db, 0x6212, 0x800, 0x0, 0x1);
        gbc.writeMem(0x802b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb9e2, gbc.sp());
        EXPECT(0x802d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802b));
        EXPECT(0xd7, gbc.readMem(0x802c));
        // CB D7 03A4
        gbc.setState(0xbf41, 0xe3b4, 0x5430, 0x8af3, 0xa70a, 0x6542, 0x0, 0x1);
        gbc.writeMem(0xbf41, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe3b4, gbc.sp());
        EXPECT(0xbf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf41));
        EXPECT(0xd7, gbc.readMem(0xbf42));
        // CB D7 03A5
        gbc.setState(0x10fb, 0xad54, 0xc420, 0xd46b, 0xd56e, 0x8501, 0x1, 0x1);
        gbc.writeMem(0x10fb, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xad54, gbc.sp());
        EXPECT(0x10fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03A6
        gbc.setState(0xb1c1, 0xa002, 0x63f0, 0xd773, 0xcba, 0xc0a2, 0x1, 0x0);
        gbc.writeMem(0xb1c1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa002, gbc.sp());
        EXPECT(0xb1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c1));
        EXPECT(0xd7, gbc.readMem(0xb1c2));
        // CB D7 03A7
        gbc.setState(0x6a19, 0x270f, 0xbb50, 0x33d0, 0x2151, 0x28d2, 0x0, 0x0);
        gbc.writeMem(0x6a19, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x270f, gbc.sp());
        EXPECT(0x6a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03A8
        gbc.setState(0xc50d, 0xed39, 0x360, 0xb589, 0xa9ab, 0x7e33, 0x1, 0x1);
        gbc.writeMem(0xc50d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xed39, gbc.sp());
        EXPECT(0xc50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50d));
        EXPECT(0xd7, gbc.readMem(0xc50e));
        // CB D7 03A9
        gbc.setState(0x835d, 0xa47e, 0xb880, 0xb418, 0x3874, 0xb639, 0x0, 0x0);
        gbc.writeMem(0x835d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa47e, gbc.sp());
        EXPECT(0x835f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835d));
        EXPECT(0xd7, gbc.readMem(0x835e));
        // CB D7 03AA
        gbc.setState(0xc534, 0x67d2, 0x7800, 0x1813, 0x5d2e, 0xb5cc, 0x0, 0x1);
        gbc.writeMem(0xc534, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x67d2, gbc.sp());
        EXPECT(0xc536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc534));
        EXPECT(0xd7, gbc.readMem(0xc535));
        // CB D7 03AB
        gbc.setState(0xdeb1, 0x9ca0, 0xcda0, 0xdb4b, 0x8a38, 0x1a57, 0x1, 0x1);
        gbc.writeMem(0xdeb1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0xdeb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb1));
        EXPECT(0xd7, gbc.readMem(0xdeb2));
        // CB D7 03AC
        gbc.setState(0x2029, 0xd38b, 0x4b20, 0x4641, 0x932e, 0x2ed, 0x0, 0x0);
        gbc.writeMem(0x2029, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd38b, gbc.sp());
        EXPECT(0x202b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03AD
        gbc.setState(0x34d4, 0x3be6, 0x2fe0, 0x79c0, 0xbad7, 0x5396, 0x0, 0x1);
        gbc.writeMem(0x34d4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3be6, gbc.sp());
        EXPECT(0x34d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03AE
        gbc.setState(0x528d, 0xe24b, 0x510, 0x340, 0x9670, 0x836c, 0x1, 0x1);
        gbc.writeMem(0x528d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe24b, gbc.sp());
        EXPECT(0x528f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03AF
        gbc.setState(0xc9a5, 0x622c, 0x7df0, 0x91cb, 0x557b, 0x3317, 0x1, 0x1);
        gbc.writeMem(0xc9a5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x622c, gbc.sp());
        EXPECT(0xc9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a5));
        EXPECT(0xd7, gbc.readMem(0xc9a6));
        // CB D7 03B0
        gbc.setState(0x438f, 0x1790, 0xb770, 0xccb6, 0xd966, 0x3cd6, 0x1, 0x0);
        gbc.writeMem(0x438f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1790, gbc.sp());
        EXPECT(0x4391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03B1
        gbc.setState(0x8a07, 0xb4ec, 0xf9b0, 0x1efd, 0xb02c, 0x33a1, 0x1, 0x1);
        gbc.writeMem(0x8a07, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb4ec, gbc.sp());
        EXPECT(0x8a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a07));
        EXPECT(0xd7, gbc.readMem(0x8a08));
        // CB D7 03B2
        gbc.setState(0x85e6, 0x5554, 0x6ef0, 0x69ff, 0x1e7f, 0xb1f, 0x0, 0x0);
        gbc.writeMem(0x85e6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5554, gbc.sp());
        EXPECT(0x85e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e6));
        EXPECT(0xd7, gbc.readMem(0x85e7));
        // CB D7 03B3
        gbc.setState(0x53fb, 0x504a, 0xe970, 0xd7b1, 0xf2a4, 0xe4d7, 0x0, 0x0);
        gbc.writeMem(0x53fb, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x504a, gbc.sp());
        EXPECT(0x53fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03B4
        gbc.setState(0xe427, 0xaecf, 0x62c0, 0xef55, 0x78c5, 0x8b48, 0x1, 0x0);
        gbc.writeMem(0xe427, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaecf, gbc.sp());
        EXPECT(0xe429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe427));
        EXPECT(0xd7, gbc.readMem(0xe428));
        // CB D7 03B5
        gbc.setState(0x49a8, 0xf978, 0x31d0, 0x7647, 0x3d95, 0x3129, 0x0, 0x1);
        gbc.writeMem(0x49a8, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf978, gbc.sp());
        EXPECT(0x49aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03B6
        gbc.setState(0x6880, 0xe315, 0x6780, 0xf722, 0xf148, 0x2d52, 0x0, 0x1);
        gbc.writeMem(0x6880, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe315, gbc.sp());
        EXPECT(0x6882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03B7
        gbc.setState(0x44ed, 0x94ef, 0x4d00, 0xa941, 0xe913, 0x3e57, 0x0, 0x1);
        gbc.writeMem(0x44ed, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x94ef, gbc.sp());
        EXPECT(0x44ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03B8
        gbc.setState(0xaa05, 0x4293, 0x4b90, 0xc7e1, 0xd403, 0x48d9, 0x1, 0x0);
        gbc.writeMem(0xaa05, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4293, gbc.sp());
        EXPECT(0xaa07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa05));
        EXPECT(0xd7, gbc.readMem(0xaa06));
        // CB D7 03B9
        gbc.setState(0x58aa, 0x3af5, 0xff20, 0x288a, 0x4c1f, 0xd4ad, 0x1, 0x1);
        gbc.writeMem(0x58aa, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3af5, gbc.sp());
        EXPECT(0x58ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03BA
        gbc.setState(0x1abb, 0x9be3, 0x97d0, 0x4de5, 0x63a1, 0xec76, 0x1, 0x0);
        gbc.writeMem(0x1abb, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9be3, gbc.sp());
        EXPECT(0x1abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03BB
        gbc.setState(0x5d53, 0x681c, 0x1db0, 0xa551, 0xec25, 0x96de, 0x1, 0x1);
        gbc.writeMem(0x5d53, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x681c, gbc.sp());
        EXPECT(0x5d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03BC
        gbc.setState(0x8abd, 0xe209, 0x6b80, 0x341, 0x254e, 0x291c, 0x1, 0x1);
        gbc.writeMem(0x8abd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe209, gbc.sp());
        EXPECT(0x8abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8abd));
        EXPECT(0xd7, gbc.readMem(0x8abe));
        // CB D7 03BD
        gbc.setState(0x154, 0xdea, 0x7d60, 0xb353, 0x5f57, 0x3eeb, 0x0, 0x1);
        gbc.writeMem(0x154, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdea, gbc.sp());
        EXPECT(0x156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03BE
        gbc.setState(0x2db5, 0x7603, 0xbb20, 0x410e, 0xae5e, 0x36bc, 0x0, 0x0);
        gbc.writeMem(0x2db5, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7603, gbc.sp());
        EXPECT(0x2db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03BF
        gbc.setState(0x5a9, 0x99d0, 0x96a0, 0x79b9, 0x7b18, 0xb769, 0x1, 0x1);
        gbc.writeMem(0x5a9, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x99d0, gbc.sp());
        EXPECT(0x5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03C0
        gbc.setState(0x682e, 0xc95b, 0x1bc0, 0x67fb, 0x5a3d, 0xae1e, 0x1, 0x0);
        gbc.writeMem(0x682e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc95b, gbc.sp());
        EXPECT(0x6830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03C1
        gbc.setState(0xca9b, 0x356f, 0xcdc0, 0xf29b, 0x36c3, 0x4769, 0x1, 0x1);
        gbc.writeMem(0xca9b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x356f, gbc.sp());
        EXPECT(0xca9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9b));
        EXPECT(0xd7, gbc.readMem(0xca9c));
        // CB D7 03C2
        gbc.setState(0x4482, 0xa687, 0x7ea0, 0xb37e, 0x80ef, 0x8ec5, 0x1, 0x0);
        gbc.writeMem(0x4482, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa687, gbc.sp());
        EXPECT(0x4484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03C3
        gbc.setState(0xc485, 0x60a5, 0x1df0, 0xf8c7, 0x36ee, 0xb61b, 0x0, 0x1);
        gbc.writeMem(0xc485, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x60a5, gbc.sp());
        EXPECT(0xc487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc485));
        EXPECT(0xd7, gbc.readMem(0xc486));
        // CB D7 03C4
        gbc.setState(0x9f, 0x2465, 0x1280, 0xfff3, 0x249e, 0x53ef, 0x1, 0x1);
        gbc.writeMem(0x9f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2465, gbc.sp());
        EXPECT(0xa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03C5
        gbc.setState(0x114, 0x72a9, 0xd370, 0x990c, 0xa7c, 0x2e66, 0x0, 0x1);
        gbc.writeMem(0x114, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x72a9, gbc.sp());
        EXPECT(0x116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03C6
        gbc.setState(0x3404, 0x28dc, 0x6ee0, 0x2fd4, 0x3a07, 0x3ca1, 0x1, 0x1);
        gbc.writeMem(0x3404, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x28dc, gbc.sp());
        EXPECT(0x3406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03C7
        gbc.setState(0xbe77, 0x970e, 0xa960, 0x5943, 0x72b6, 0x315a, 0x1, 0x1);
        gbc.writeMem(0xbe77, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x970e, gbc.sp());
        EXPECT(0xbe79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe77));
        EXPECT(0xd7, gbc.readMem(0xbe78));
        // CB D7 03C8
        gbc.setState(0xa51, 0x44e8, 0xa70, 0x8561, 0x635, 0xeda2, 0x1, 0x0);
        gbc.writeMem(0xa51, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x44e8, gbc.sp());
        EXPECT(0xa53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03C9
        gbc.setState(0x1669, 0x3082, 0xb460, 0xd55f, 0x7b1, 0x52cd, 0x1, 0x1);
        gbc.writeMem(0x1669, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3082, gbc.sp());
        EXPECT(0x166b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03CA
        gbc.setState(0x5917, 0x2b75, 0x8690, 0xaa94, 0xfb0a, 0x64cd, 0x1, 0x1);
        gbc.writeMem(0x5917, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2b75, gbc.sp());
        EXPECT(0x5919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03CB
        gbc.setState(0x7503, 0xd61e, 0x1130, 0x9401, 0x4e35, 0x75f6, 0x0, 0x1);
        gbc.writeMem(0x7503, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd61e, gbc.sp());
        EXPECT(0x7505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03CC
        gbc.setState(0xd0fd, 0x37f7, 0x92b0, 0x2faf, 0xe015, 0x6264, 0x1, 0x1);
        gbc.writeMem(0xd0fd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x37f7, gbc.sp());
        EXPECT(0xd0ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0fd));
        EXPECT(0xd7, gbc.readMem(0xd0fe));
        // CB D7 03CD
        gbc.setState(0x6b78, 0xc451, 0xcab0, 0xf39f, 0x3678, 0x8493, 0x0, 0x0);
        gbc.writeMem(0x6b78, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc451, gbc.sp());
        EXPECT(0x6b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03CE
        gbc.setState(0x1fe7, 0xfcf8, 0xe90, 0x6d07, 0xba25, 0x500a, 0x1, 0x1);
        gbc.writeMem(0x1fe7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfcf8, gbc.sp());
        EXPECT(0x1fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03CF
        gbc.setState(0xdda2, 0x1d8, 0x4b50, 0x9394, 0xb001, 0xc2c1, 0x0, 0x1);
        gbc.writeMem(0xdda2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1d8, gbc.sp());
        EXPECT(0xdda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda2));
        EXPECT(0xd7, gbc.readMem(0xdda3));
        // CB D7 03D0
        gbc.setState(0x8ad4, 0x34d0, 0x4aa0, 0xa4cd, 0x3cc5, 0xcfa0, 0x1, 0x1);
        gbc.writeMem(0x8ad4, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x34d0, gbc.sp());
        EXPECT(0x8ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad4));
        EXPECT(0xd7, gbc.readMem(0x8ad5));
        // CB D7 03D1
        gbc.setState(0x6b02, 0x73a7, 0x2e10, 0x8b36, 0x6450, 0xb32f, 0x1, 0x1);
        gbc.writeMem(0x6b02, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x73a7, gbc.sp());
        EXPECT(0x6b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03D2
        gbc.setState(0xc5a7, 0xc3a4, 0x1330, 0x5e11, 0x8a66, 0x83ec, 0x1, 0x1);
        gbc.writeMem(0xc5a7, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc3a4, gbc.sp());
        EXPECT(0xc5a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a7));
        EXPECT(0xd7, gbc.readMem(0xc5a8));
        // CB D7 03D3
        gbc.setState(0x3446, 0x950d, 0x1760, 0x61c1, 0x7d17, 0x932b, 0x1, 0x1);
        gbc.writeMem(0x3446, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x950d, gbc.sp());
        EXPECT(0x3448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03D5
        gbc.setState(0x2059, 0x1d1a, 0x1400, 0xc3f8, 0xa559, 0x641d, 0x0, 0x1);
        gbc.writeMem(0x2059, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1d1a, gbc.sp());
        EXPECT(0x205b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03D6
        gbc.setState(0xc8d6, 0x2e56, 0xcd60, 0x4f0, 0xc6cc, 0x2ee5, 0x1, 0x1);
        gbc.writeMem(0xc8d6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2e56, gbc.sp());
        EXPECT(0xc8d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d6));
        EXPECT(0xd7, gbc.readMem(0xc8d7));
        // CB D7 03D7
        gbc.setState(0xe3d6, 0x4d8, 0x2530, 0x49b8, 0x9300, 0x5f, 0x0, 0x0);
        gbc.writeMem(0xe3d6, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4d8, gbc.sp());
        EXPECT(0xe3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d6));
        EXPECT(0xd7, gbc.readMem(0xe3d7));
        // CB D7 03D9
        gbc.setState(0x374b, 0x84b1, 0x4ab0, 0x7, 0x999b, 0x28b4, 0x1, 0x0);
        gbc.writeMem(0x374b, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x84b1, gbc.sp());
        EXPECT(0x374d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03DA
        gbc.setState(0x52a, 0xb2fb, 0xa720, 0x9250, 0xdf61, 0xc71, 0x1, 0x0);
        gbc.writeMem(0x52a, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb2fb, gbc.sp());
        EXPECT(0x52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03DB
        gbc.setState(0x426c, 0xe254, 0xcef0, 0x4084, 0x206b, 0x25aa, 0x1, 0x0);
        gbc.writeMem(0x426c, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe254, gbc.sp());
        EXPECT(0x426e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03DC
        gbc.setState(0x5c0e, 0x2f41, 0x80b0, 0x7d2e, 0x1686, 0xfbec, 0x1, 0x1);
        gbc.writeMem(0x5c0e, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2f41, gbc.sp());
        EXPECT(0x5c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03DD
        gbc.setState(0xcb5d, 0x4b44, 0x3a40, 0xe869, 0x20fd, 0x64df, 0x0, 0x0);
        gbc.writeMem(0xcb5d, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4b44, gbc.sp());
        EXPECT(0xcb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb5d));
        EXPECT(0xd7, gbc.readMem(0xcb5e));
        // CB D7 03DE
        gbc.setState(0x7c86, 0x8150, 0x7e50, 0x9d39, 0x4dff, 0xddc0, 0x0, 0x1);
        gbc.writeMem(0x7c86, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8150, gbc.sp());
        EXPECT(0x7c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03DF
        gbc.setState(0x807f, 0xe63d, 0x7c20, 0xcfae, 0xa7fd, 0x7ef1, 0x0, 0x0);
        gbc.writeMem(0x807f, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe63d, gbc.sp());
        EXPECT(0x8081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807f));
        EXPECT(0xd7, gbc.readMem(0x8080));
        // CB D7 03E0
        gbc.setState(0xba51, 0x34eb, 0x5300, 0x6235, 0xb0eb, 0x836a, 0x0, 0x0);
        gbc.writeMem(0xba51, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x34eb, gbc.sp());
        EXPECT(0xba53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba51));
        EXPECT(0xd7, gbc.readMem(0xba52));
        // CB D7 03E1
        gbc.setState(0x2ad2, 0xd2c0, 0xbd80, 0x9a6d, 0x33a1, 0x37ad, 0x0, 0x0);
        gbc.writeMem(0x2ad2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd2c0, gbc.sp());
        EXPECT(0x2ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03E2
        gbc.setState(0x57ff, 0x6334, 0x3530, 0x7419, 0x8ad3, 0xe2fb, 0x0, 0x0);
        gbc.writeMem(0x57ff, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6334, gbc.sp());
        EXPECT(0x5801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03E3
        gbc.setState(0x8de1, 0x2eab, 0x7fc0, 0xa248, 0xe776, 0x9e4c, 0x1, 0x0);
        gbc.writeMem(0x8de1, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2eab, gbc.sp());
        EXPECT(0x8de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de1));
        EXPECT(0xd7, gbc.readMem(0x8de2));
        // CB D7 03E4
        gbc.setState(0x13cd, 0x1b6a, 0x4260, 0x217e, 0xd0bf, 0x9f09, 0x1, 0x1);
        gbc.writeMem(0x13cd, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1b6a, gbc.sp());
        EXPECT(0x13cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D7 03E5
        gbc.setState(0x1db2, 0x88c7, 0x390, 0x3878, 0x8e3c, 0xfc11, 0x0, 0x1);
        gbc.writeMem(0x1db2, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x88c7, gbc.sp());
        EXPECT(0x1db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D7 03E7
        gbc.setState(0x1214, 0xb020, 0x4a0, 0xa94b, 0x28eb, 0x55f7, 0x1, 0x0);
        gbc.writeMem(0x1214, { 0xcb, 0xd7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb020, gbc.sp());
        EXPECT(0x1216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
