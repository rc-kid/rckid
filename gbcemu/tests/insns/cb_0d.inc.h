    TEST(gbcemu, opcode_cb_0d) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 0D 0000
        gbc.setState(0xdcda, 0xc8ff, 0x8ed0, 0xbd, 0xc69e, 0x7bc1, 0x1, 0x1);
        gbc.writeMem(0xdcda, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc8ff, gbc.sp());
        EXPECT(0xdcdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcda));
        EXPECT(0xd, gbc.readMem(0xdcdb));
        // CB 0D 0001
        gbc.setState(0xa423, 0x23f4, 0x3610, 0x30fc, 0x7b55, 0x6a50, 0x0, 0x0);
        gbc.writeMem(0xa423, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x23f4, gbc.sp());
        EXPECT(0xa425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa423));
        EXPECT(0xd, gbc.readMem(0xa424));
        // CB 0D 0002
        gbc.setState(0xa4e8, 0x8bf3, 0x7230, 0x1aa5, 0x110c, 0xbd01, 0x0, 0x1);
        gbc.writeMem(0xa4e8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8bf3, gbc.sp());
        EXPECT(0xa4ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e8));
        EXPECT(0xd, gbc.readMem(0xa4e9));
        // CB 0D 0003
        gbc.setState(0x408c, 0xd11c, 0x7200, 0x1d34, 0xbf74, 0xf490, 0x1, 0x0);
        gbc.writeMem(0x408c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd11c, gbc.sp());
        EXPECT(0x408e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0004
        gbc.setState(0x8dbc, 0x6ba7, 0x20c0, 0x54d7, 0x54e2, 0x5cb2, 0x1, 0x1);
        gbc.writeMem(0x8dbc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6ba7, gbc.sp());
        EXPECT(0x8dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbc));
        EXPECT(0xd, gbc.readMem(0x8dbd));
        // CB 0D 0005
        gbc.setState(0x626a, 0x3647, 0xfeb0, 0xfe96, 0x4e7d, 0x7ef5, 0x0, 0x1);
        gbc.writeMem(0x626a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3647, gbc.sp());
        EXPECT(0x626c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0006
        gbc.setState(0x573a, 0x8783, 0xbc60, 0x7223, 0xc595, 0x48f3, 0x1, 0x1);
        gbc.writeMem(0x573a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8783, gbc.sp());
        EXPECT(0x573c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0007
        gbc.setState(0xbe63, 0x5334, 0xf810, 0xef98, 0xb500, 0xaaf, 0x0, 0x0);
        gbc.writeMem(0xbe63, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5334, gbc.sp());
        EXPECT(0xbe65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe63));
        EXPECT(0xd, gbc.readMem(0xbe64));
        // CB 0D 0008
        gbc.setState(0x7fed, 0x928, 0x57c0, 0x7c13, 0x970b, 0x2ca5, 0x0, 0x0);
        gbc.writeMem(0x7fed, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x928, gbc.sp());
        EXPECT(0x7fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0009
        gbc.setState(0x5029, 0xdb2f, 0x2290, 0x6c31, 0xa5c7, 0xb896, 0x0, 0x0);
        gbc.writeMem(0x5029, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdb2f, gbc.sp());
        EXPECT(0x502b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 000A
        gbc.setState(0x9c07, 0x9a9f, 0x6fb0, 0xafae, 0x563b, 0x1ab9, 0x1, 0x0);
        gbc.writeMem(0x9c07, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9a9f, gbc.sp());
        EXPECT(0x9c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c07));
        EXPECT(0xd, gbc.readMem(0x9c08));
        // CB 0D 000B
        gbc.setState(0x9cfb, 0x2106, 0x5f20, 0x94a4, 0xd95b, 0x82ce, 0x0, 0x1);
        gbc.writeMem(0x9cfb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2106, gbc.sp());
        EXPECT(0x9cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfb));
        EXPECT(0xd, gbc.readMem(0x9cfc));
        // CB 0D 000C
        gbc.setState(0xa81b, 0xe602, 0x2490, 0xc92d, 0xdbd3, 0xd32c, 0x1, 0x1);
        gbc.writeMem(0xa81b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe602, gbc.sp());
        EXPECT(0xa81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81b));
        EXPECT(0xd, gbc.readMem(0xa81c));
        // CB 0D 000D
        gbc.setState(0x339a, 0x88ec, 0x8db0, 0x151f, 0xfb09, 0x45a5, 0x0, 0x1);
        gbc.writeMem(0x339a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x88ec, gbc.sp());
        EXPECT(0x339c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 000E
        gbc.setState(0x735b, 0xb523, 0x5ab0, 0x7d0, 0xc1aa, 0x20ca, 0x1, 0x0);
        gbc.writeMem(0x735b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb523, gbc.sp());
        EXPECT(0x735d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 000F
        gbc.setState(0xebb3, 0x30b8, 0x4470, 0x97db, 0x54c6, 0x348d, 0x1, 0x1);
        gbc.writeMem(0xebb3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x30b8, gbc.sp());
        EXPECT(0xebb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb3));
        EXPECT(0xd, gbc.readMem(0xebb4));
        // CB 0D 0010
        gbc.setState(0x1a31, 0x7ee4, 0xf100, 0x4255, 0x3cd, 0xcad4, 0x0, 0x0);
        gbc.writeMem(0x1a31, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7ee4, gbc.sp());
        EXPECT(0x1a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0011
        gbc.setState(0xde68, 0x16e2, 0x18f0, 0x82bd, 0x67ec, 0x41a5, 0x0, 0x0);
        gbc.writeMem(0xde68, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x16e2, gbc.sp());
        EXPECT(0xde6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde68));
        EXPECT(0xd, gbc.readMem(0xde69));
        // CB 0D 0012
        gbc.setState(0x1358, 0x441f, 0xf820, 0x26e3, 0xd49a, 0xe90, 0x1, 0x1);
        gbc.writeMem(0x1358, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x441f, gbc.sp());
        EXPECT(0x135a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0013
        gbc.setState(0xf23, 0x3e63, 0x8440, 0x7ab6, 0xcc13, 0xbbd4, 0x1, 0x0);
        gbc.writeMem(0xf23, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3e63, gbc.sp());
        EXPECT(0xf25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0015
        gbc.setState(0x4fb3, 0x4e8, 0x64f0, 0xf87a, 0xc19e, 0x9f6f, 0x0, 0x1);
        gbc.writeMem(0x4fb3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4e8, gbc.sp());
        EXPECT(0x4fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0016
        gbc.setState(0x3974, 0x4006, 0x49d0, 0x92cc, 0xcfaa, 0x520e, 0x1, 0x1);
        gbc.writeMem(0x3974, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4006, gbc.sp());
        EXPECT(0x3976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0017
        gbc.setState(0x711b, 0x9965, 0x4fd0, 0x10f9, 0x8b8a, 0x56a8, 0x1, 0x0);
        gbc.writeMem(0x711b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9965, gbc.sp());
        EXPECT(0x711d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0018
        gbc.setState(0x7703, 0xc4b5, 0x36e0, 0x8a05, 0xd589, 0x6714, 0x0, 0x1);
        gbc.writeMem(0x7703, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc4b5, gbc.sp());
        EXPECT(0x7705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 001A
        gbc.setState(0xb4f3, 0xdd0c, 0x1f30, 0xab89, 0x6974, 0x634c, 0x0, 0x0);
        gbc.writeMem(0xb4f3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdd0c, gbc.sp());
        EXPECT(0xb4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f3));
        EXPECT(0xd, gbc.readMem(0xb4f4));
        // CB 0D 001B
        gbc.setState(0xda63, 0x7e55, 0x8d40, 0x4590, 0x2f58, 0xbc55, 0x0, 0x1);
        gbc.writeMem(0xda63, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7e55, gbc.sp());
        EXPECT(0xda65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda63));
        EXPECT(0xd, gbc.readMem(0xda64));
        // CB 0D 001C
        gbc.setState(0x115a, 0xd419, 0xf850, 0xa55b, 0x55e0, 0x2bd7, 0x0, 0x0);
        gbc.writeMem(0x115a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd419, gbc.sp());
        EXPECT(0x115c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 001D
        gbc.setState(0xa792, 0xced0, 0x3e60, 0x7ef8, 0x275a, 0x39e9, 0x0, 0x0);
        gbc.writeMem(0xa792, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xced0, gbc.sp());
        EXPECT(0xa794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa792));
        EXPECT(0xd, gbc.readMem(0xa793));
        // CB 0D 001E
        gbc.setState(0x84a8, 0xa7ae, 0x38a0, 0x2d6c, 0xe73b, 0xcfcf, 0x1, 0x0);
        gbc.writeMem(0x84a8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa7ae, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a8));
        EXPECT(0xd, gbc.readMem(0x84a9));
        // CB 0D 001F
        gbc.setState(0xdae3, 0xed3e, 0x7220, 0x7af0, 0x7eb7, 0xb8cc, 0x0, 0x0);
        gbc.writeMem(0xdae3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xed3e, gbc.sp());
        EXPECT(0xdae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae3));
        EXPECT(0xd, gbc.readMem(0xdae4));
        // CB 0D 0021
        gbc.setState(0x87a6, 0x9ef3, 0x7b70, 0x719f, 0xdbf3, 0x8566, 0x0, 0x1);
        gbc.writeMem(0x87a6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9ef3, gbc.sp());
        EXPECT(0x87a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a6));
        EXPECT(0xd, gbc.readMem(0x87a7));
        // CB 0D 0022
        gbc.setState(0x5ed0, 0x7e0f, 0xa820, 0x8980, 0x4acd, 0x54d0, 0x1, 0x1);
        gbc.writeMem(0x5ed0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7e0f, gbc.sp());
        EXPECT(0x5ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0023
        gbc.setState(0x8313, 0x71ac, 0xd1a0, 0x191a, 0xc9e6, 0xa23e, 0x0, 0x0);
        gbc.writeMem(0x8313, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x71ac, gbc.sp());
        EXPECT(0x8315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8313));
        EXPECT(0xd, gbc.readMem(0x8314));
        // CB 0D 0024
        gbc.setState(0xa94f, 0x18c, 0x76f0, 0x3af0, 0xdc0b, 0x4d24, 0x1, 0x1);
        gbc.writeMem(0xa94f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x18c, gbc.sp());
        EXPECT(0xa951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94f));
        EXPECT(0xd, gbc.readMem(0xa950));
        // CB 0D 0025
        gbc.setState(0x8f80, 0xd5b8, 0x1110, 0x1b4a, 0x6c7c, 0xbf28, 0x1, 0x1);
        gbc.writeMem(0x8f80, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd5b8, gbc.sp());
        EXPECT(0x8f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f80));
        EXPECT(0xd, gbc.readMem(0x8f81));
        // CB 0D 0026
        gbc.setState(0xadc5, 0x9ca9, 0x2ce0, 0x62d3, 0x3dd2, 0xd297, 0x1, 0x1);
        gbc.writeMem(0xadc5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9ca9, gbc.sp());
        EXPECT(0xadc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc5));
        EXPECT(0xd, gbc.readMem(0xadc6));
        // CB 0D 0027
        gbc.setState(0x44c0, 0xf46b, 0xfe60, 0x270a, 0x1f9, 0x7836, 0x1, 0x0);
        gbc.writeMem(0x44c0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf46b, gbc.sp());
        EXPECT(0x44c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0028
        gbc.setState(0xb31b, 0x1183, 0x2f30, 0x176e, 0x7310, 0x487a, 0x0, 0x1);
        gbc.writeMem(0xb31b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1183, gbc.sp());
        EXPECT(0xb31d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31b));
        EXPECT(0xd, gbc.readMem(0xb31c));
        // CB 0D 0029
        gbc.setState(0xce71, 0x696a, 0xb600, 0x91a7, 0xba90, 0x27dc, 0x1, 0x0);
        gbc.writeMem(0xce71, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x696a, gbc.sp());
        EXPECT(0xce73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce71));
        EXPECT(0xd, gbc.readMem(0xce72));
        // CB 0D 002A
        gbc.setState(0xc38b, 0x8bbb, 0xdba0, 0xa241, 0x1539, 0xcd36, 0x1, 0x1);
        gbc.writeMem(0xc38b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8bbb, gbc.sp());
        EXPECT(0xc38d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38b));
        EXPECT(0xd, gbc.readMem(0xc38c));
        // CB 0D 002B
        gbc.setState(0x323c, 0xb801, 0xee10, 0xf148, 0x4485, 0xfd84, 0x0, 0x0);
        gbc.writeMem(0x323c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb801, gbc.sp());
        EXPECT(0x323e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 002C
        gbc.setState(0x47ca, 0x1379, 0x8410, 0xed32, 0x710e, 0xbdb2, 0x0, 0x0);
        gbc.writeMem(0x47ca, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1379, gbc.sp());
        EXPECT(0x47cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 002D
        gbc.setState(0x8c92, 0x7526, 0xe580, 0xc17f, 0x1915, 0xa0ea, 0x0, 0x0);
        gbc.writeMem(0x8c92, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7526, gbc.sp());
        EXPECT(0x8c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c92));
        EXPECT(0xd, gbc.readMem(0x8c93));
        // CB 0D 002E
        gbc.setState(0x9e3, 0x6bbc, 0xbab0, 0x9efc, 0xc977, 0xf990, 0x1, 0x1);
        gbc.writeMem(0x9e3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6bbc, gbc.sp());
        EXPECT(0x9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 002F
        gbc.setState(0x6658, 0x13c1, 0x2740, 0x83b, 0xfcec, 0xf4c, 0x1, 0x1);
        gbc.writeMem(0x6658, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x13c1, gbc.sp());
        EXPECT(0x665a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0030
        gbc.setState(0xd87c, 0xede, 0xd390, 0x1e3c, 0x3557, 0x3a22, 0x1, 0x0);
        gbc.writeMem(0xd87c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xede, gbc.sp());
        EXPECT(0xd87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87c));
        EXPECT(0xd, gbc.readMem(0xd87d));
        // CB 0D 0031
        gbc.setState(0x4cc2, 0x20aa, 0xd150, 0xb4e2, 0x9b53, 0x62db, 0x1, 0x1);
        gbc.writeMem(0x4cc2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x20aa, gbc.sp());
        EXPECT(0x4cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0032
        gbc.setState(0xc88f, 0x3519, 0xb220, 0x3d79, 0x3768, 0xd012, 0x0, 0x0);
        gbc.writeMem(0xc88f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3519, gbc.sp());
        EXPECT(0xc891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc88f));
        EXPECT(0xd, gbc.readMem(0xc890));
        // CB 0D 0033
        gbc.setState(0x2a59, 0x9af7, 0x8ef0, 0x76c2, 0x4964, 0x4fe1, 0x0, 0x0);
        gbc.writeMem(0x2a59, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9af7, gbc.sp());
        EXPECT(0x2a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0034
        gbc.setState(0xd58b, 0x4b81, 0x4ac0, 0x5c88, 0x19d5, 0x1b8, 0x0, 0x1);
        gbc.writeMem(0xd58b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4b81, gbc.sp());
        EXPECT(0xd58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58b));
        EXPECT(0xd, gbc.readMem(0xd58c));
        // CB 0D 0035
        gbc.setState(0xd289, 0x6d2e, 0xba90, 0x7d2c, 0x5025, 0xd3ce, 0x1, 0x1);
        gbc.writeMem(0xd289, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6d2e, gbc.sp());
        EXPECT(0xd28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd289));
        EXPECT(0xd, gbc.readMem(0xd28a));
        // CB 0D 0036
        gbc.setState(0xe18a, 0xa6a2, 0x9480, 0xf534, 0x8947, 0xecbf, 0x0, 0x0);
        gbc.writeMem(0xe18a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa6a2, gbc.sp());
        EXPECT(0xe18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18a));
        EXPECT(0xd, gbc.readMem(0xe18b));
        // CB 0D 0037
        gbc.setState(0x9805, 0x2699, 0x3c90, 0xb33c, 0x4272, 0xefb2, 0x0, 0x1);
        gbc.writeMem(0x9805, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2699, gbc.sp());
        EXPECT(0x9807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9805));
        EXPECT(0xd, gbc.readMem(0x9806));
        // CB 0D 0038
        gbc.setState(0xb003, 0x6210, 0xd250, 0xebfa, 0xa881, 0xc208, 0x0, 0x1);
        gbc.writeMem(0xb003, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6210, gbc.sp());
        EXPECT(0xb005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb003));
        EXPECT(0xd, gbc.readMem(0xb004));
        // CB 0D 0039
        gbc.setState(0x4ee3, 0x90db, 0x29b0, 0xb798, 0x82ee, 0xb8ae, 0x0, 0x1);
        gbc.writeMem(0x4ee3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x90db, gbc.sp());
        EXPECT(0x4ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 003A
        gbc.setState(0x8376, 0xc138, 0x1a40, 0xb453, 0x3b55, 0x98e4, 0x0, 0x0);
        gbc.writeMem(0x8376, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc138, gbc.sp());
        EXPECT(0x8378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8376));
        EXPECT(0xd, gbc.readMem(0x8377));
        // CB 0D 003B
        gbc.setState(0x995e, 0x33f0, 0xb040, 0xfc8, 0x4a92, 0x332c, 0x0, 0x0);
        gbc.writeMem(0x995e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x33f0, gbc.sp());
        EXPECT(0x9960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x995e));
        EXPECT(0xd, gbc.readMem(0x995f));
        // CB 0D 003C
        gbc.setState(0x767e, 0x61cb, 0x11a0, 0xab95, 0xf4c8, 0x9514, 0x0, 0x1);
        gbc.writeMem(0x767e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x61cb, gbc.sp());
        EXPECT(0x7680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 003D
        gbc.setState(0xb5fd, 0x4556, 0x78a0, 0xa916, 0xfaec, 0x69f8, 0x1, 0x1);
        gbc.writeMem(0xb5fd, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4556, gbc.sp());
        EXPECT(0xb5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5fd));
        EXPECT(0xd, gbc.readMem(0xb5fe));
        // CB 0D 003E
        gbc.setState(0x310f, 0xc19c, 0x2690, 0xb6ba, 0x52c4, 0x780f, 0x1, 0x1);
        gbc.writeMem(0x310f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc19c, gbc.sp());
        EXPECT(0x3111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 003F
        gbc.setState(0xd04, 0x2129, 0x8700, 0x94be, 0x38ba, 0x26a4, 0x0, 0x1);
        gbc.writeMem(0xd04, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2129, gbc.sp());
        EXPECT(0xd06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0040
        gbc.setState(0x5c3c, 0x4c0b, 0x9840, 0x3f0d, 0xcfca, 0x68f6, 0x0, 0x1);
        gbc.writeMem(0x5c3c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4c0b, gbc.sp());
        EXPECT(0x5c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0041
        gbc.setState(0x53fd, 0xd1e, 0x31e0, 0x6850, 0x5556, 0x3126, 0x1, 0x0);
        gbc.writeMem(0x53fd, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd1e, gbc.sp());
        EXPECT(0x53ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0042
        gbc.setState(0x6e76, 0x7f0a, 0xeff0, 0x2bd7, 0x1759, 0x9114, 0x0, 0x1);
        gbc.writeMem(0x6e76, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7f0a, gbc.sp());
        EXPECT(0x6e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0043
        gbc.setState(0x305d, 0x1392, 0x7800, 0x5536, 0x7543, 0xbb14, 0x1, 0x0);
        gbc.writeMem(0x305d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1392, gbc.sp());
        EXPECT(0x305f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0044
        gbc.setState(0x90d3, 0xbf7, 0x1bd0, 0x876c, 0xc0a8, 0x523a, 0x1, 0x0);
        gbc.writeMem(0x90d3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbf7, gbc.sp());
        EXPECT(0x90d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d3));
        EXPECT(0xd, gbc.readMem(0x90d4));
        // CB 0D 0045
        gbc.setState(0x4033, 0xa3f8, 0x7770, 0x4f5f, 0x7ec2, 0x5683, 0x1, 0x0);
        gbc.writeMem(0x4033, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa3f8, gbc.sp());
        EXPECT(0x4035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0046
        gbc.setState(0x89fe, 0x2bf3, 0x3140, 0x1d62, 0x7514, 0x2351, 0x0, 0x0);
        gbc.writeMem(0x89fe, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2bf3, gbc.sp());
        EXPECT(0x8a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fe));
        EXPECT(0xd, gbc.readMem(0x89ff));
        // CB 0D 0047
        gbc.setState(0x610d, 0xe4df, 0x49f0, 0xd93b, 0xe9c7, 0x1891, 0x1, 0x1);
        gbc.writeMem(0x610d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe4df, gbc.sp());
        EXPECT(0x610f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0048
        gbc.setState(0xa498, 0xcfb4, 0x3490, 0x5f20, 0xc31f, 0x7604, 0x1, 0x1);
        gbc.writeMem(0xa498, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcfb4, gbc.sp());
        EXPECT(0xa49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa498));
        EXPECT(0xd, gbc.readMem(0xa499));
        // CB 0D 0049
        gbc.setState(0x4fc6, 0x8939, 0x2ac0, 0x93a5, 0xc4bf, 0xa0d, 0x1, 0x0);
        gbc.writeMem(0x4fc6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8939, gbc.sp());
        EXPECT(0x4fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 004B
        gbc.setState(0xb302, 0x6e19, 0x46b0, 0x93d8, 0xf708, 0x6528, 0x1, 0x0);
        gbc.writeMem(0xb302, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6e19, gbc.sp());
        EXPECT(0xb304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb302));
        EXPECT(0xd, gbc.readMem(0xb303));
        // CB 0D 004C
        gbc.setState(0x7980, 0xf0c9, 0xe880, 0x7c2e, 0xb87d, 0xd936, 0x1, 0x1);
        gbc.writeMem(0x7980, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf0c9, gbc.sp());
        EXPECT(0x7982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 004D
        gbc.setState(0x2bfe, 0xa5cb, 0xe750, 0x8107, 0xca96, 0x2eb, 0x1, 0x1);
        gbc.writeMem(0x2bfe, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa5cb, gbc.sp());
        EXPECT(0x2c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 004E
        gbc.setState(0x5eb5, 0xd600, 0xbc70, 0xeb20, 0x8bf0, 0xe117, 0x1, 0x0);
        gbc.writeMem(0x5eb5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd600, gbc.sp());
        EXPECT(0x5eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 004F
        gbc.setState(0x1679, 0x11a7, 0x2330, 0xf1cb, 0xbf54, 0x3afd, 0x0, 0x0);
        gbc.writeMem(0x1679, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x11a7, gbc.sp());
        EXPECT(0x167b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0050
        gbc.setState(0xa1ba, 0x607f, 0x6ec0, 0x9c8e, 0x5f41, 0xb476, 0x0, 0x0);
        gbc.writeMem(0xa1ba, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x607f, gbc.sp());
        EXPECT(0xa1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ba));
        EXPECT(0xd, gbc.readMem(0xa1bb));
        // CB 0D 0051
        gbc.setState(0xd34e, 0x1bbc, 0x9040, 0x3d12, 0x727e, 0xfee8, 0x0, 0x1);
        gbc.writeMem(0xd34e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1bbc, gbc.sp());
        EXPECT(0xd350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd34e));
        EXPECT(0xd, gbc.readMem(0xd34f));
        // CB 0D 0052
        gbc.setState(0x40d4, 0xc1bb, 0x9dc0, 0x3fa, 0x4188, 0x8b79, 0x0, 0x0);
        gbc.writeMem(0x40d4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc1bb, gbc.sp());
        EXPECT(0x40d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0053
        gbc.setState(0x74cc, 0xc936, 0x9f00, 0xa5cc, 0xd45e, 0x91e9, 0x0, 0x0);
        gbc.writeMem(0x74cc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc936, gbc.sp());
        EXPECT(0x74ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0054
        gbc.setState(0x583e, 0x1f13, 0x8480, 0xa9fa, 0xc2b5, 0xde5, 0x1, 0x0);
        gbc.writeMem(0x583e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1f13, gbc.sp());
        EXPECT(0x5840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0055
        gbc.setState(0xde1f, 0x4aeb, 0x25e0, 0x58bd, 0x21a5, 0xe4b8, 0x1, 0x0);
        gbc.writeMem(0xde1f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4aeb, gbc.sp());
        EXPECT(0xde21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1f));
        EXPECT(0xd, gbc.readMem(0xde20));
        // CB 0D 0056
        gbc.setState(0x1f3b, 0x83bf, 0x5260, 0xfaf4, 0x845e, 0x6723, 0x1, 0x1);
        gbc.writeMem(0x1f3b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x83bf, gbc.sp());
        EXPECT(0x1f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0057
        gbc.setState(0xadef, 0x3786, 0xc930, 0x4ff4, 0xc125, 0xbcf2, 0x1, 0x1);
        gbc.writeMem(0xadef, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3786, gbc.sp());
        EXPECT(0xadf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadef));
        EXPECT(0xd, gbc.readMem(0xadf0));
        // CB 0D 0058
        gbc.setState(0x6e91, 0x9a18, 0xb480, 0xb104, 0x6266, 0xcc3a, 0x1, 0x0);
        gbc.writeMem(0x6e91, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9a18, gbc.sp());
        EXPECT(0x6e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 005A
        gbc.setState(0x32da, 0xdf2f, 0x8970, 0x2121, 0x2704, 0x53f1, 0x0, 0x0);
        gbc.writeMem(0x32da, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdf2f, gbc.sp());
        EXPECT(0x32dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 005B
        gbc.setState(0xbcb8, 0x159d, 0xd390, 0x9f4f, 0x455c, 0x68dd, 0x1, 0x0);
        gbc.writeMem(0xbcb8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x159d, gbc.sp());
        EXPECT(0xbcba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb8));
        EXPECT(0xd, gbc.readMem(0xbcb9));
        // CB 0D 005C
        gbc.setState(0x28ff, 0x7d26, 0xc660, 0x628c, 0xe6d6, 0x7fa7, 0x0, 0x0);
        gbc.writeMem(0x28ff, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7d26, gbc.sp());
        EXPECT(0x2901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 005D
        gbc.setState(0x3608, 0x12e8, 0xdee0, 0xb778, 0x4080, 0xb4a5, 0x0, 0x1);
        gbc.writeMem(0x3608, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x12e8, gbc.sp());
        EXPECT(0x360a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 005E
        gbc.setState(0x822b, 0xba18, 0x39c0, 0xd03, 0xc6ee, 0x6093, 0x1, 0x0);
        gbc.writeMem(0x822b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xba18, gbc.sp());
        EXPECT(0x822d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822b));
        EXPECT(0xd, gbc.readMem(0x822c));
        // CB 0D 005F
        gbc.setState(0xeea1, 0x519c, 0x57a0, 0x2e3d, 0xb5e2, 0x8db2, 0x1, 0x1);
        gbc.writeMem(0xeea1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x519c, gbc.sp());
        EXPECT(0xeea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea1));
        EXPECT(0xd, gbc.readMem(0xeea2));
        // CB 0D 0060
        gbc.setState(0x2a19, 0xc3e5, 0x8a70, 0xe4fb, 0xd03e, 0xb3fa, 0x1, 0x0);
        gbc.writeMem(0x2a19, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc3e5, gbc.sp());
        EXPECT(0x2a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0061
        gbc.setState(0x8b34, 0x8a6c, 0xa9e0, 0x2816, 0xdde, 0x987b, 0x1, 0x0);
        gbc.writeMem(0x8b34, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8a6c, gbc.sp());
        EXPECT(0x8b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b34));
        EXPECT(0xd, gbc.readMem(0x8b35));
        // CB 0D 0062
        gbc.setState(0xbdba, 0x6e93, 0xf450, 0x570, 0x26e0, 0x87d2, 0x1, 0x0);
        gbc.writeMem(0xbdba, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6e93, gbc.sp());
        EXPECT(0xbdbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdba));
        EXPECT(0xd, gbc.readMem(0xbdbb));
        // CB 0D 0063
        gbc.setState(0x231a, 0x8ec2, 0x3100, 0x8884, 0xa0b5, 0xba06, 0x0, 0x1);
        gbc.writeMem(0x231a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8ec2, gbc.sp());
        EXPECT(0x231c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0064
        gbc.setState(0xde1b, 0xe521, 0x7460, 0x6559, 0x33f3, 0x8af0, 0x1, 0x0);
        gbc.writeMem(0xde1b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe521, gbc.sp());
        EXPECT(0xde1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1b));
        EXPECT(0xd, gbc.readMem(0xde1c));
        // CB 0D 0065
        gbc.setState(0xed56, 0xc4ce, 0x55c0, 0x21cb, 0xb3d2, 0xda62, 0x1, 0x0);
        gbc.writeMem(0xed56, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc4ce, gbc.sp());
        EXPECT(0xed58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed56));
        EXPECT(0xd, gbc.readMem(0xed57));
        // CB 0D 0066
        gbc.setState(0x2974, 0x7986, 0x8660, 0x4d6c, 0x3701, 0x4b19, 0x0, 0x1);
        gbc.writeMem(0x2974, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7986, gbc.sp());
        EXPECT(0x2976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0067
        gbc.setState(0x5c63, 0xb565, 0xf3c0, 0xb66a, 0xf833, 0x490b, 0x0, 0x1);
        gbc.writeMem(0x5c63, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb565, gbc.sp());
        EXPECT(0x5c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0068
        gbc.setState(0x10e8, 0x7243, 0xc330, 0x2579, 0xec19, 0x9591, 0x0, 0x0);
        gbc.writeMem(0x10e8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7243, gbc.sp());
        EXPECT(0x10ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0069
        gbc.setState(0xd2e0, 0x13ac, 0xe340, 0x68ec, 0xfd73, 0x36a6, 0x1, 0x1);
        gbc.writeMem(0xd2e0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x13ac, gbc.sp());
        EXPECT(0xd2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e0));
        EXPECT(0xd, gbc.readMem(0xd2e1));
        // CB 0D 006A
        gbc.setState(0xbe3b, 0x9bf6, 0xdcd0, 0x72aa, 0x67ca, 0xf80c, 0x0, 0x1);
        gbc.writeMem(0xbe3b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9bf6, gbc.sp());
        EXPECT(0xbe3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3b));
        EXPECT(0xd, gbc.readMem(0xbe3c));
        // CB 0D 006B
        gbc.setState(0xc4eb, 0xeae1, 0xcb70, 0xe7b3, 0x8c28, 0x94fc, 0x1, 0x1);
        gbc.writeMem(0xc4eb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xeae1, gbc.sp());
        EXPECT(0xc4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4eb));
        EXPECT(0xd, gbc.readMem(0xc4ec));
        // CB 0D 006C
        gbc.setState(0xcb43, 0x23a0, 0x68f0, 0x6600, 0xec8f, 0xc7a5, 0x1, 0x0);
        gbc.writeMem(0xcb43, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x23a0, gbc.sp());
        EXPECT(0xcb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb43));
        EXPECT(0xd, gbc.readMem(0xcb44));
        // CB 0D 006D
        gbc.setState(0x599c, 0x1445, 0x5e00, 0xcceb, 0x33ba, 0x1d29, 0x1, 0x1);
        gbc.writeMem(0x599c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1445, gbc.sp());
        EXPECT(0x599e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 006E
        gbc.setState(0x293c, 0x4a47, 0x85b0, 0x9d3f, 0xcbe9, 0x33ea, 0x0, 0x1);
        gbc.writeMem(0x293c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4a47, gbc.sp());
        EXPECT(0x293e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0070
        gbc.setState(0x1772, 0xfca4, 0xb8f0, 0x9c90, 0xcd2, 0xa0d4, 0x1, 0x1);
        gbc.writeMem(0x1772, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfca4, gbc.sp());
        EXPECT(0x1774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0071
        gbc.setState(0x3ada, 0xfd10, 0x1340, 0x8b1, 0x9bab, 0xa65d, 0x1, 0x1);
        gbc.writeMem(0x3ada, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfd10, gbc.sp());
        EXPECT(0x3adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0072
        gbc.setState(0xdd5c, 0xa95d, 0xc930, 0xbb36, 0xfab5, 0x8399, 0x1, 0x0);
        gbc.writeMem(0xdd5c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa95d, gbc.sp());
        EXPECT(0xdd5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5c));
        EXPECT(0xd, gbc.readMem(0xdd5d));
        // CB 0D 0073
        gbc.setState(0xfad, 0x311a, 0x6610, 0x3726, 0x9046, 0x6a5b, 0x0, 0x1);
        gbc.writeMem(0xfad, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x311a, gbc.sp());
        EXPECT(0xfaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0075
        gbc.setState(0x9c20, 0x710e, 0xbf70, 0xfbe8, 0x8132, 0x7627, 0x0, 0x0);
        gbc.writeMem(0x9c20, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x710e, gbc.sp());
        EXPECT(0x9c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c20));
        EXPECT(0xd, gbc.readMem(0x9c21));
        // CB 0D 0076
        gbc.setState(0x1623, 0x9d9d, 0x39d0, 0x774a, 0xeff6, 0x5846, 0x0, 0x0);
        gbc.writeMem(0x1623, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9d9d, gbc.sp());
        EXPECT(0x1625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0077
        gbc.setState(0x9964, 0x6d42, 0xec0, 0x247d, 0xefae, 0xb9ad, 0x1, 0x0);
        gbc.writeMem(0x9964, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6d42, gbc.sp());
        EXPECT(0x9966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9964));
        EXPECT(0xd, gbc.readMem(0x9965));
        // CB 0D 0078
        gbc.setState(0x3353, 0xb24c, 0x21a0, 0xdc, 0xac47, 0xc86e, 0x1, 0x1);
        gbc.writeMem(0x3353, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb24c, gbc.sp());
        EXPECT(0x3355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0079
        gbc.setState(0x251c, 0x2b89, 0x3a60, 0xfc57, 0x3ddb, 0xb336, 0x1, 0x0);
        gbc.writeMem(0x251c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2b89, gbc.sp());
        EXPECT(0x251e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 007A
        gbc.setState(0xeaf9, 0x65f7, 0x1a90, 0xc840, 0x7ae0, 0xc3a7, 0x0, 0x0);
        gbc.writeMem(0xeaf9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x65f7, gbc.sp());
        EXPECT(0xeafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf9));
        EXPECT(0xd, gbc.readMem(0xeafa));
        // CB 0D 007B
        gbc.setState(0xc7ba, 0xe83, 0x7f0, 0xb028, 0x718, 0xf289, 0x0, 0x0);
        gbc.writeMem(0xc7ba, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe83, gbc.sp());
        EXPECT(0xc7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ba));
        EXPECT(0xd, gbc.readMem(0xc7bb));
        // CB 0D 007C
        gbc.setState(0xb22c, 0xd2b5, 0x4520, 0xe89c, 0x87fd, 0xb089, 0x0, 0x0);
        gbc.writeMem(0xb22c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd2b5, gbc.sp());
        EXPECT(0xb22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22c));
        EXPECT(0xd, gbc.readMem(0xb22d));
        // CB 0D 007D
        gbc.setState(0x279a, 0x93ce, 0x63d0, 0xcadb, 0xcbc0, 0xf241, 0x1, 0x0);
        gbc.writeMem(0x279a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x93ce, gbc.sp());
        EXPECT(0x279c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 007E
        gbc.setState(0x43a3, 0x3006, 0x3c70, 0xa0a5, 0xfce0, 0xd420, 0x0, 0x1);
        gbc.writeMem(0x43a3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3006, gbc.sp());
        EXPECT(0x43a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 007F
        gbc.setState(0x8c69, 0x8d56, 0x1a70, 0xa077, 0x8469, 0xebb0, 0x0, 0x0);
        gbc.writeMem(0x8c69, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8d56, gbc.sp());
        EXPECT(0x8c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c69));
        EXPECT(0xd, gbc.readMem(0x8c6a));
        // CB 0D 0080
        gbc.setState(0x4f4a, 0x6760, 0xbee0, 0xdafd, 0xf06c, 0xe6c4, 0x1, 0x0);
        gbc.writeMem(0x4f4a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6760, gbc.sp());
        EXPECT(0x4f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0082
        gbc.setState(0x62e8, 0xe6f5, 0x8fc0, 0x7e93, 0x790, 0xdf1c, 0x1, 0x0);
        gbc.writeMem(0x62e8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe6f5, gbc.sp());
        EXPECT(0x62ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0084
        gbc.setState(0x7647, 0x86ab, 0xedf0, 0xb070, 0xf0e, 0x25c5, 0x0, 0x0);
        gbc.writeMem(0x7647, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x86ab, gbc.sp());
        EXPECT(0x7649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0085
        gbc.setState(0xef35, 0x9f6, 0x4760, 0xe356, 0x9d2, 0xb632, 0x1, 0x0);
        gbc.writeMem(0xef35, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9f6, gbc.sp());
        EXPECT(0xef37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef35));
        EXPECT(0xd, gbc.readMem(0xef36));
        // CB 0D 0086
        gbc.setState(0xa0f6, 0x990f, 0x1e20, 0x17ab, 0x1ec5, 0xad56, 0x1, 0x0);
        gbc.writeMem(0xa0f6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x990f, gbc.sp());
        EXPECT(0xa0f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f6));
        EXPECT(0xd, gbc.readMem(0xa0f7));
        // CB 0D 0087
        gbc.setState(0xe570, 0xf7dc, 0x80e0, 0x83ec, 0xc029, 0x93f8, 0x1, 0x1);
        gbc.writeMem(0xe570, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf7dc, gbc.sp());
        EXPECT(0xe572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe570));
        EXPECT(0xd, gbc.readMem(0xe571));
        // CB 0D 0088
        gbc.setState(0x1af, 0xdc99, 0x69d0, 0x23c7, 0xc4fb, 0xdb78, 0x0, 0x0);
        gbc.writeMem(0x1af, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdc99, gbc.sp());
        EXPECT(0x1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0089
        gbc.setState(0xe422, 0x4938, 0xba90, 0xff69, 0xdf67, 0xc349, 0x1, 0x1);
        gbc.writeMem(0xe422, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4938, gbc.sp());
        EXPECT(0xe424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe422));
        EXPECT(0xd, gbc.readMem(0xe423));
        // CB 0D 008A
        gbc.setState(0x7825, 0x9699, 0xd080, 0x6fc5, 0x34ad, 0x653, 0x0, 0x1);
        gbc.writeMem(0x7825, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9699, gbc.sp());
        EXPECT(0x7827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 008B
        gbc.setState(0xe5c0, 0xde46, 0xbd80, 0xdfbc, 0x93d7, 0x17f0, 0x0, 0x1);
        gbc.writeMem(0xe5c0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xde46, gbc.sp());
        EXPECT(0xe5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c0));
        EXPECT(0xd, gbc.readMem(0xe5c1));
        // CB 0D 008C
        gbc.setState(0x13bc, 0x84a1, 0xecc0, 0xff1c, 0xcd29, 0xf4e0, 0x0, 0x1);
        gbc.writeMem(0x13bc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x84a1, gbc.sp());
        EXPECT(0x13be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 008D
        gbc.setState(0x6a56, 0xed5a, 0xecb0, 0x6cc9, 0x29ec, 0x706d, 0x0, 0x0);
        gbc.writeMem(0x6a56, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xed5a, gbc.sp());
        EXPECT(0x6a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 008E
        gbc.setState(0x609d, 0xd75c, 0xee50, 0x80e6, 0xe9e7, 0xb0cc, 0x1, 0x1);
        gbc.writeMem(0x609d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd75c, gbc.sp());
        EXPECT(0x609f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 008F
        gbc.setState(0x2c1a, 0xa91e, 0xdd90, 0x5207, 0x21d4, 0x1746, 0x1, 0x1);
        gbc.writeMem(0x2c1a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa91e, gbc.sp());
        EXPECT(0x2c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0090
        gbc.setState(0xdbdb, 0xdd09, 0x2c0, 0xd9d4, 0xace8, 0xee2a, 0x0, 0x1);
        gbc.writeMem(0xdbdb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdd09, gbc.sp());
        EXPECT(0xdbdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbdb));
        EXPECT(0xd, gbc.readMem(0xdbdc));
        // CB 0D 0091
        gbc.setState(0x8df0, 0xdfd2, 0xf3f0, 0xfc69, 0xc590, 0xe437, 0x1, 0x0);
        gbc.writeMem(0x8df0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdfd2, gbc.sp());
        EXPECT(0x8df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df0));
        EXPECT(0xd, gbc.readMem(0x8df1));
        // CB 0D 0092
        gbc.setState(0x3f9e, 0xf928, 0xd870, 0xd8bc, 0xa851, 0x8cd, 0x0, 0x1);
        gbc.writeMem(0x3f9e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf928, gbc.sp());
        EXPECT(0x3fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0094
        gbc.setState(0xc68f, 0xa56c, 0xa7b0, 0xf629, 0x8a8e, 0x9fe2, 0x0, 0x0);
        gbc.writeMem(0xc68f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa56c, gbc.sp());
        EXPECT(0xc691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68f));
        EXPECT(0xd, gbc.readMem(0xc690));
        // CB 0D 0095
        gbc.setState(0xa746, 0xe7c0, 0xdd30, 0xeb45, 0x9c8, 0x75a9, 0x1, 0x1);
        gbc.writeMem(0xa746, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe7c0, gbc.sp());
        EXPECT(0xa748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa746));
        EXPECT(0xd, gbc.readMem(0xa747));
        // CB 0D 0096
        gbc.setState(0x6390, 0x3742, 0xb090, 0xf6bb, 0x2f83, 0xfd57, 0x1, 0x1);
        gbc.writeMem(0x6390, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3742, gbc.sp());
        EXPECT(0x6392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0097
        gbc.setState(0x5dcd, 0xda26, 0x75a0, 0x1772, 0xe791, 0xa10, 0x1, 0x1);
        gbc.writeMem(0x5dcd, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xda26, gbc.sp());
        EXPECT(0x5dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0098
        gbc.setState(0x7512, 0x154a, 0x4e20, 0xed5a, 0x7415, 0x679f, 0x0, 0x1);
        gbc.writeMem(0x7512, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x154a, gbc.sp());
        EXPECT(0x7514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0099
        gbc.setState(0x106c, 0xbb20, 0x24a0, 0xa31a, 0xcd81, 0x8ca, 0x1, 0x0);
        gbc.writeMem(0x106c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbb20, gbc.sp());
        EXPECT(0x106e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 009A
        gbc.setState(0x662, 0x324, 0x5fe0, 0x1dbe, 0x560d, 0x3e57, 0x0, 0x0);
        gbc.writeMem(0x662, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x324, gbc.sp());
        EXPECT(0x664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 009B
        gbc.setState(0x90db, 0x286c, 0x3550, 0x7da, 0x96f5, 0x3ce2, 0x1, 0x1);
        gbc.writeMem(0x90db, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x286c, gbc.sp());
        EXPECT(0x90dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90db));
        EXPECT(0xd, gbc.readMem(0x90dc));
        // CB 0D 009C
        gbc.setState(0x5113, 0xc2ce, 0x1c10, 0x726c, 0x640, 0xfbd9, 0x1, 0x0);
        gbc.writeMem(0x5113, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc2ce, gbc.sp());
        EXPECT(0x5115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 009D
        gbc.setState(0x865d, 0x1b40, 0xd770, 0x5392, 0xd69b, 0xf2ff, 0x1, 0x0);
        gbc.writeMem(0x865d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1b40, gbc.sp());
        EXPECT(0x865f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865d));
        EXPECT(0xd, gbc.readMem(0x865e));
        // CB 0D 009E
        gbc.setState(0x6f0b, 0x1db3, 0xb670, 0x9ada, 0x5d59, 0xfe8, 0x1, 0x1);
        gbc.writeMem(0x6f0b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1db3, gbc.sp());
        EXPECT(0x6f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 009F
        gbc.setState(0x2f54, 0xe63b, 0xdd30, 0x5b2e, 0x3ee2, 0xb5df, 0x1, 0x0);
        gbc.writeMem(0x2f54, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe63b, gbc.sp());
        EXPECT(0x2f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00A0
        gbc.setState(0x4311, 0xb964, 0x8ea0, 0x5b17, 0xcfd5, 0xf9d8, 0x1, 0x1);
        gbc.writeMem(0x4311, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb964, gbc.sp());
        EXPECT(0x4313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00A1
        gbc.setState(0x5549, 0xad65, 0xc880, 0x83a9, 0x3446, 0xcc6f, 0x0, 0x1);
        gbc.writeMem(0x5549, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xad65, gbc.sp());
        EXPECT(0x554b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00A2
        gbc.setState(0xb52d, 0x1de5, 0x3990, 0xf951, 0xa816, 0x3aa, 0x1, 0x1);
        gbc.writeMem(0xb52d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1de5, gbc.sp());
        EXPECT(0xb52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb52d));
        EXPECT(0xd, gbc.readMem(0xb52e));
        // CB 0D 00A4
        gbc.setState(0xdf9a, 0xdea9, 0xc230, 0xeb47, 0x72e5, 0xc0a7, 0x0, 0x0);
        gbc.writeMem(0xdf9a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdea9, gbc.sp());
        EXPECT(0xdf9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf9a));
        EXPECT(0xd, gbc.readMem(0xdf9b));
        // CB 0D 00A5
        gbc.setState(0xeb20, 0x5a9, 0xd700, 0xde43, 0x4d44, 0xb69f, 0x0, 0x0);
        gbc.writeMem(0xeb20, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5a9, gbc.sp());
        EXPECT(0xeb22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb20));
        EXPECT(0xd, gbc.readMem(0xeb21));
        // CB 0D 00A6
        gbc.setState(0xdb6a, 0x1f89, 0x98b0, 0x4767, 0x290e, 0x7ca4, 0x0, 0x0);
        gbc.writeMem(0xdb6a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1f89, gbc.sp());
        EXPECT(0xdb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb6a));
        EXPECT(0xd, gbc.readMem(0xdb6b));
        // CB 0D 00A7
        gbc.setState(0xdfab, 0x200c, 0x5f20, 0x8814, 0x50c1, 0xd6b9, 0x1, 0x0);
        gbc.writeMem(0xdfab, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x200c, gbc.sp());
        EXPECT(0xdfad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfab));
        EXPECT(0xd, gbc.readMem(0xdfac));
        // CB 0D 00A8
        gbc.setState(0x9910, 0x8161, 0xba00, 0x704, 0xe9b7, 0xf93f, 0x1, 0x0);
        gbc.writeMem(0x9910, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8161, gbc.sp());
        EXPECT(0x9912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9910));
        EXPECT(0xd, gbc.readMem(0x9911));
        // CB 0D 00A9
        gbc.setState(0xc8f5, 0xd5fc, 0xa3c0, 0xf61e, 0xf78a, 0xb7eb, 0x1, 0x1);
        gbc.writeMem(0xc8f5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd5fc, gbc.sp());
        EXPECT(0xc8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f5));
        EXPECT(0xd, gbc.readMem(0xc8f6));
        // CB 0D 00AA
        gbc.setState(0x7778, 0x2bab, 0x9a90, 0x1cf6, 0xe9d1, 0x7ce7, 0x0, 0x1);
        gbc.writeMem(0x7778, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2bab, gbc.sp());
        EXPECT(0x777a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00AB
        gbc.setState(0xe83, 0xcd42, 0x1900, 0xfd4f, 0x134f, 0x8939, 0x1, 0x1);
        gbc.writeMem(0xe83, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcd42, gbc.sp());
        EXPECT(0xe85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00AC
        gbc.setState(0x5175, 0xf49a, 0x8520, 0xdee9, 0xfba4, 0xecb3, 0x1, 0x1);
        gbc.writeMem(0x5175, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf49a, gbc.sp());
        EXPECT(0x5177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00AD
        gbc.setState(0x32e4, 0x2aed, 0x2be0, 0x3705, 0xf2a2, 0xd706, 0x0, 0x1);
        gbc.writeMem(0x32e4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2aed, gbc.sp());
        EXPECT(0x32e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00AE
        gbc.setState(0x615a, 0x95df, 0x3210, 0xea33, 0x6836, 0xdfdc, 0x0, 0x1);
        gbc.writeMem(0x615a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x95df, gbc.sp());
        EXPECT(0x615c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00AF
        gbc.setState(0x5b08, 0x4f48, 0x7b90, 0x677b, 0x57ef, 0xa636, 0x0, 0x1);
        gbc.writeMem(0x5b08, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4f48, gbc.sp());
        EXPECT(0x5b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00B0
        gbc.setState(0xae9b, 0x2d27, 0x9540, 0xabf4, 0x2c99, 0x684c, 0x1, 0x1);
        gbc.writeMem(0xae9b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2d27, gbc.sp());
        EXPECT(0xae9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae9b));
        EXPECT(0xd, gbc.readMem(0xae9c));
        // CB 0D 00B1
        gbc.setState(0xdb4a, 0xbc4, 0x1d50, 0x42e6, 0x94f1, 0xc4e4, 0x0, 0x0);
        gbc.writeMem(0xdb4a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbc4, gbc.sp());
        EXPECT(0xdb4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4a));
        EXPECT(0xd, gbc.readMem(0xdb4b));
        // CB 0D 00B2
        gbc.setState(0x4d9d, 0x4574, 0x96a0, 0x5424, 0x220e, 0x3ce6, 0x0, 0x1);
        gbc.writeMem(0x4d9d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4574, gbc.sp());
        EXPECT(0x4d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00B3
        gbc.setState(0xd988, 0xeb36, 0xa670, 0x4ba9, 0x1a80, 0x91a, 0x1, 0x1);
        gbc.writeMem(0xd988, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xeb36, gbc.sp());
        EXPECT(0xd98a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd988));
        EXPECT(0xd, gbc.readMem(0xd989));
        // CB 0D 00B4
        gbc.setState(0x3a51, 0x3284, 0xbe70, 0x7715, 0xddf6, 0xaedc, 0x0, 0x0);
        gbc.writeMem(0x3a51, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3284, gbc.sp());
        EXPECT(0x3a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00B5
        gbc.setState(0x392d, 0x88e9, 0xf020, 0x8a54, 0x3f2c, 0xc1f3, 0x0, 0x0);
        gbc.writeMem(0x392d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0x392f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00B7
        gbc.setState(0xd946, 0x1a99, 0xefb0, 0x8308, 0x7f47, 0x465d, 0x1, 0x1);
        gbc.writeMem(0xd946, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1a99, gbc.sp());
        EXPECT(0xd948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd946));
        EXPECT(0xd, gbc.readMem(0xd947));
        // CB 0D 00B8
        gbc.setState(0x720d, 0x7f05, 0x1c30, 0x4496, 0x1b6e, 0x37df, 0x1, 0x0);
        gbc.writeMem(0x720d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7f05, gbc.sp());
        EXPECT(0x720f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00B9
        gbc.setState(0x239a, 0x5566, 0xe9d0, 0x472a, 0xe004, 0xbbe8, 0x0, 0x0);
        gbc.writeMem(0x239a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5566, gbc.sp());
        EXPECT(0x239c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00BA
        gbc.setState(0xb0e4, 0xff29, 0x7070, 0x66cd, 0x847a, 0xabc5, 0x1, 0x0);
        gbc.writeMem(0xb0e4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xff29, gbc.sp());
        EXPECT(0xb0e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e4));
        EXPECT(0xd, gbc.readMem(0xb0e5));
        // CB 0D 00BB
        gbc.setState(0x65c, 0x8678, 0xcfc0, 0xcb05, 0xe886, 0xfc80, 0x1, 0x1);
        gbc.writeMem(0x65c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8678, gbc.sp());
        EXPECT(0x65e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00BC
        gbc.setState(0x2085, 0x7e49, 0x2e0, 0x9c7, 0x5fcd, 0x4d03, 0x0, 0x0);
        gbc.writeMem(0x2085, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7e49, gbc.sp());
        EXPECT(0x2087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00BD
        gbc.setState(0xad40, 0xe189, 0xc840, 0x458e, 0xeaca, 0x6048, 0x0, 0x0);
        gbc.writeMem(0xad40, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe189, gbc.sp());
        EXPECT(0xad42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad40));
        EXPECT(0xd, gbc.readMem(0xad41));
        // CB 0D 00BE
        gbc.setState(0xa1ef, 0x934f, 0xf8b0, 0x1bb4, 0x814d, 0x129c, 0x0, 0x1);
        gbc.writeMem(0xa1ef, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x934f, gbc.sp());
        EXPECT(0xa1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ef));
        EXPECT(0xd, gbc.readMem(0xa1f0));
        // CB 0D 00BF
        gbc.setState(0xc5e9, 0xad67, 0x9890, 0x5917, 0x65f7, 0xde68, 0x1, 0x0);
        gbc.writeMem(0xc5e9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xad67, gbc.sp());
        EXPECT(0xc5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e9));
        EXPECT(0xd, gbc.readMem(0xc5ea));
        // CB 0D 00C0
        gbc.setState(0x53fd, 0xefc5, 0xaf40, 0x448c, 0xacb5, 0x93fd, 0x0, 0x1);
        gbc.writeMem(0x53fd, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xefc5, gbc.sp());
        EXPECT(0x53ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00C2
        gbc.setState(0x2efc, 0xb23, 0x7aa0, 0x2b4c, 0x4ea6, 0xebfb, 0x0, 0x1);
        gbc.writeMem(0x2efc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb23, gbc.sp());
        EXPECT(0x2efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00C3
        gbc.setState(0x9c2d, 0xb17a, 0x3fa0, 0xeda1, 0x1156, 0x20a8, 0x1, 0x1);
        gbc.writeMem(0x9c2d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb17a, gbc.sp());
        EXPECT(0x9c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2d));
        EXPECT(0xd, gbc.readMem(0x9c2e));
        // CB 0D 00C4
        gbc.setState(0x3792, 0xb275, 0x5a60, 0x8c40, 0x2a45, 0xab4e, 0x0, 0x0);
        gbc.writeMem(0x3792, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb275, gbc.sp());
        EXPECT(0x3794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00C5
        gbc.setState(0x7ca7, 0x831e, 0x1a00, 0x1aaf, 0xf4ac, 0x5c48, 0x0, 0x0);
        gbc.writeMem(0x7ca7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x831e, gbc.sp());
        EXPECT(0x7ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00C6
        gbc.setState(0xa7ef, 0x32f7, 0x6e10, 0xc354, 0x8aab, 0x4ba6, 0x0, 0x1);
        gbc.writeMem(0xa7ef, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x32f7, gbc.sp());
        EXPECT(0xa7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ef));
        EXPECT(0xd, gbc.readMem(0xa7f0));
        // CB 0D 00C7
        gbc.setState(0x6a64, 0xece1, 0x8220, 0xfde7, 0x4ff7, 0xa581, 0x0, 0x1);
        gbc.writeMem(0x6a64, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xece1, gbc.sp());
        EXPECT(0x6a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00C8
        gbc.setState(0x4afa, 0xd290, 0xa30, 0xfa74, 0x65e8, 0x6289, 0x1, 0x1);
        gbc.writeMem(0x4afa, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd290, gbc.sp());
        EXPECT(0x4afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00C9
        gbc.setState(0x53ff, 0xc1bf, 0xdfc0, 0x3a07, 0x8ce4, 0x34f9, 0x1, 0x0);
        gbc.writeMem(0x53ff, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc1bf, gbc.sp());
        EXPECT(0x5401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00CA
        gbc.setState(0x7703, 0x98f1, 0x47d0, 0xb616, 0x40f8, 0xca17, 0x0, 0x1);
        gbc.writeMem(0x7703, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x98f1, gbc.sp());
        EXPECT(0x7705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00CB
        gbc.setState(0x4866, 0x9c2f, 0x67e0, 0xe32f, 0x3e68, 0x9a0f, 0x1, 0x1);
        gbc.writeMem(0x4866, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9c2f, gbc.sp());
        EXPECT(0x4868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00CD
        gbc.setState(0xc4cf, 0x665, 0xa680, 0xe11c, 0x5468, 0x59b6, 0x0, 0x1);
        gbc.writeMem(0xc4cf, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x665, gbc.sp());
        EXPECT(0xc4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cf));
        EXPECT(0xd, gbc.readMem(0xc4d0));
        // CB 0D 00CE
        gbc.setState(0x96d9, 0xdd66, 0xdf90, 0xdd16, 0x1918, 0x5ebc, 0x1, 0x0);
        gbc.writeMem(0x96d9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xdd66, gbc.sp());
        EXPECT(0x96db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d9));
        EXPECT(0xd, gbc.readMem(0x96da));
        // CB 0D 00CF
        gbc.setState(0x1a8f, 0x38c0, 0x7440, 0x3fe1, 0x113f, 0xdb2d, 0x1, 0x0);
        gbc.writeMem(0x1a8f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x38c0, gbc.sp());
        EXPECT(0x1a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00D0
        gbc.setState(0xacc6, 0xd76, 0xe8e0, 0x5215, 0x4486, 0xda24, 0x1, 0x0);
        gbc.writeMem(0xacc6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd76, gbc.sp());
        EXPECT(0xacc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc6));
        EXPECT(0xd, gbc.readMem(0xacc7));
        // CB 0D 00D1
        gbc.setState(0x6c03, 0x2f9c, 0xaaf0, 0x5d25, 0x93b5, 0x155, 0x1, 0x1);
        gbc.writeMem(0x6c03, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2f9c, gbc.sp());
        EXPECT(0x6c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00D2
        gbc.setState(0xb6d8, 0x76be, 0x6ac0, 0xe198, 0x8efd, 0xedd2, 0x0, 0x0);
        gbc.writeMem(0xb6d8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x76be, gbc.sp());
        EXPECT(0xb6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d8));
        EXPECT(0xd, gbc.readMem(0xb6d9));
        // CB 0D 00D3
        gbc.setState(0xd530, 0xf258, 0xd550, 0xb9f0, 0xce6c, 0x69ee, 0x1, 0x1);
        gbc.writeMem(0xd530, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf258, gbc.sp());
        EXPECT(0xd532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd530));
        EXPECT(0xd, gbc.readMem(0xd531));
        // CB 0D 00D4
        gbc.setState(0x5ec1, 0x66b0, 0xb550, 0x2340, 0x277e, 0x184b, 0x0, 0x1);
        gbc.writeMem(0x5ec1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x66b0, gbc.sp());
        EXPECT(0x5ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00D5
        gbc.setState(0x3c9d, 0x5507, 0x8530, 0xb67a, 0xcaf7, 0x1245, 0x1, 0x1);
        gbc.writeMem(0x3c9d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5507, gbc.sp());
        EXPECT(0x3c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00D6
        gbc.setState(0x68e5, 0x75a7, 0xa1c0, 0x8f16, 0xf269, 0xb24d, 0x1, 0x1);
        gbc.writeMem(0x68e5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x75a7, gbc.sp());
        EXPECT(0x68e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00D7
        gbc.setState(0x7d43, 0xaf1b, 0xa6c0, 0x1264, 0xa17, 0xde8a, 0x0, 0x1);
        gbc.writeMem(0x7d43, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xaf1b, gbc.sp());
        EXPECT(0x7d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00D8
        gbc.setState(0x2005, 0xa10c, 0x5e80, 0xf67d, 0xfd9e, 0x79e0, 0x1, 0x1);
        gbc.writeMem(0x2005, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa10c, gbc.sp());
        EXPECT(0x2007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00D9
        gbc.setState(0x7d0e, 0x8291, 0x6980, 0xe5a1, 0xdd80, 0x2e06, 0x1, 0x1);
        gbc.writeMem(0x7d0e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8291, gbc.sp());
        EXPECT(0x7d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00DA
        gbc.setState(0x52a4, 0x9a1f, 0x1a70, 0x1bd6, 0xe2ff, 0x7199, 0x1, 0x1);
        gbc.writeMem(0x52a4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9a1f, gbc.sp());
        EXPECT(0x52a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00DB
        gbc.setState(0x801b, 0x163c, 0xe7e0, 0x6e77, 0xd1e2, 0x8830, 0x0, 0x0);
        gbc.writeMem(0x801b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x163c, gbc.sp());
        EXPECT(0x801d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801b));
        EXPECT(0xd, gbc.readMem(0x801c));
        // CB 0D 00DC
        gbc.setState(0xa148, 0x1cb1, 0xac80, 0x55c9, 0xa63, 0xa47d, 0x1, 0x0);
        gbc.writeMem(0xa148, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1cb1, gbc.sp());
        EXPECT(0xa14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa148));
        EXPECT(0xd, gbc.readMem(0xa149));
        // CB 0D 00DD
        gbc.setState(0xc3eb, 0x97dd, 0x68a0, 0x25, 0x5585, 0xe42c, 0x0, 0x1);
        gbc.writeMem(0xc3eb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x97dd, gbc.sp());
        EXPECT(0xc3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3eb));
        EXPECT(0xd, gbc.readMem(0xc3ec));
        // CB 0D 00DE
        gbc.setState(0x771c, 0x20ae, 0x82d0, 0x18c2, 0xc3cf, 0x3a3d, 0x1, 0x0);
        gbc.writeMem(0x771c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x20ae, gbc.sp());
        EXPECT(0x771e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00E0
        gbc.setState(0x400e, 0x6260, 0xae50, 0xf9f3, 0x4934, 0x60df, 0x0, 0x1);
        gbc.writeMem(0x400e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6260, gbc.sp());
        EXPECT(0x4010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00E1
        gbc.setState(0xc7a1, 0x7a0f, 0x42a0, 0x6932, 0x65e5, 0xff78, 0x1, 0x1);
        gbc.writeMem(0xc7a1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7a0f, gbc.sp());
        EXPECT(0xc7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a1));
        EXPECT(0xd, gbc.readMem(0xc7a2));
        // CB 0D 00E2
        gbc.setState(0xba5a, 0x4260, 0xcbe0, 0x772c, 0x4e9c, 0xa89f, 0x0, 0x1);
        gbc.writeMem(0xba5a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4260, gbc.sp());
        EXPECT(0xba5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5a));
        EXPECT(0xd, gbc.readMem(0xba5b));
        // CB 0D 00E3
        gbc.setState(0x7555, 0xc769, 0xaee0, 0xc5b5, 0xa991, 0x2904, 0x1, 0x1);
        gbc.writeMem(0x7555, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc769, gbc.sp());
        EXPECT(0x7557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00E4
        gbc.setState(0x916e, 0xd4a3, 0x44a0, 0x8c05, 0xda4b, 0xe3d, 0x0, 0x1);
        gbc.writeMem(0x916e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd4a3, gbc.sp());
        EXPECT(0x9170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916e));
        EXPECT(0xd, gbc.readMem(0x916f));
        // CB 0D 00E5
        gbc.setState(0x95fa, 0xee2f, 0xb5a0, 0x64d4, 0x80fc, 0xb45f, 0x1, 0x1);
        gbc.writeMem(0x95fa, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xee2f, gbc.sp());
        EXPECT(0x95fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fa));
        EXPECT(0xd, gbc.readMem(0x95fb));
        // CB 0D 00E6
        gbc.setState(0xf2d, 0x58a5, 0xbf70, 0x20f1, 0xf79d, 0x4ae7, 0x1, 0x0);
        gbc.writeMem(0xf2d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x58a5, gbc.sp());
        EXPECT(0xf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00E7
        gbc.setState(0x7454, 0x4d5d, 0x98a0, 0x331b, 0x4d7f, 0x49e9, 0x0, 0x1);
        gbc.writeMem(0x7454, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4d5d, gbc.sp());
        EXPECT(0x7456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00E8
        gbc.setState(0x4ee7, 0x4366, 0x8330, 0x4b7, 0x8afb, 0xe1ee, 0x1, 0x1);
        gbc.writeMem(0x4ee7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4366, gbc.sp());
        EXPECT(0x4ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00E9
        gbc.setState(0x490, 0x1114, 0xac30, 0x50b2, 0x7d21, 0x1b7d, 0x1, 0x1);
        gbc.writeMem(0x490, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1114, gbc.sp());
        EXPECT(0x492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00EA
        gbc.setState(0x9e5f, 0xacfd, 0x75c0, 0x141c, 0x2018, 0x1a99, 0x1, 0x1);
        gbc.writeMem(0x9e5f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xacfd, gbc.sp());
        EXPECT(0x9e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e5f));
        EXPECT(0xd, gbc.readMem(0x9e60));
        // CB 0D 00EB
        gbc.setState(0xc26d, 0xa2a9, 0x5820, 0xa328, 0xb01a, 0x3931, 0x0, 0x0);
        gbc.writeMem(0xc26d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa2a9, gbc.sp());
        EXPECT(0xc26f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26d));
        EXPECT(0xd, gbc.readMem(0xc26e));
        // CB 0D 00EC
        gbc.setState(0xe6f1, 0x853, 0xb8c0, 0xd159, 0xccc5, 0xfff0, 0x0, 0x1);
        gbc.writeMem(0xe6f1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x853, gbc.sp());
        EXPECT(0xe6f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f1));
        EXPECT(0xd, gbc.readMem(0xe6f2));
        // CB 0D 00ED
        gbc.setState(0xb4ac, 0xfd23, 0xc460, 0xd3c3, 0x5963, 0x1cab, 0x0, 0x1);
        gbc.writeMem(0xb4ac, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfd23, gbc.sp());
        EXPECT(0xb4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ac));
        EXPECT(0xd, gbc.readMem(0xb4ad));
        // CB 0D 00EF
        gbc.setState(0x5d40, 0xc7fb, 0xaba0, 0x9242, 0x2eab, 0xfda0, 0x0, 0x1);
        gbc.writeMem(0x5d40, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc7fb, gbc.sp());
        EXPECT(0x5d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00F0
        gbc.setState(0x2824, 0xb315, 0x8f50, 0x50c, 0xe43a, 0xc66, 0x0, 0x1);
        gbc.writeMem(0x2824, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb315, gbc.sp());
        EXPECT(0x2826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00F1
        gbc.setState(0x7c69, 0x48e2, 0xa730, 0xab4b, 0xb21b, 0xfb37, 0x0, 0x0);
        gbc.writeMem(0x7c69, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x48e2, gbc.sp());
        EXPECT(0x7c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00F2
        gbc.setState(0xa7a5, 0xe648, 0xc690, 0x2878, 0x488b, 0xc3fe, 0x1, 0x0);
        gbc.writeMem(0xa7a5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe648, gbc.sp());
        EXPECT(0xa7a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a5));
        EXPECT(0xd, gbc.readMem(0xa7a6));
        // CB 0D 00F3
        gbc.setState(0xddac, 0x49ff, 0x61f0, 0x6ca5, 0xbc7f, 0x3c8a, 0x1, 0x1);
        gbc.writeMem(0xddac, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x49ff, gbc.sp());
        EXPECT(0xddae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddac));
        EXPECT(0xd, gbc.readMem(0xddad));
        // CB 0D 00F4
        gbc.setState(0x2c60, 0x3f3f, 0x4c40, 0x83e6, 0x384d, 0x8186, 0x1, 0x1);
        gbc.writeMem(0x2c60, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3f3f, gbc.sp());
        EXPECT(0x2c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00F5
        gbc.setState(0x45a1, 0xad50, 0x1160, 0x3f25, 0xa830, 0x858f, 0x0, 0x0);
        gbc.writeMem(0x45a1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xad50, gbc.sp());
        EXPECT(0x45a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00F6
        gbc.setState(0x8957, 0x8665, 0x6cc0, 0x5233, 0x75dd, 0xe79c, 0x1, 0x0);
        gbc.writeMem(0x8957, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8665, gbc.sp());
        EXPECT(0x8959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8957));
        EXPECT(0xd, gbc.readMem(0x8958));
        // CB 0D 00F7
        gbc.setState(0x7be2, 0x7be2, 0xc950, 0x43e9, 0x5dfd, 0x859b, 0x0, 0x1);
        gbc.writeMem(0x7be2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7be2, gbc.sp());
        EXPECT(0x7be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00F8
        gbc.setState(0x7bb, 0xe59f, 0xf2d0, 0xef55, 0x5e04, 0xeb4b, 0x0, 0x1);
        gbc.writeMem(0x7bb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe59f, gbc.sp());
        EXPECT(0x7bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00FA
        gbc.setState(0x2218, 0x3ecc, 0xca60, 0x1e73, 0xdc80, 0x6e94, 0x1, 0x0);
        gbc.writeMem(0x2218, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3ecc, gbc.sp());
        EXPECT(0x221a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 00FB
        gbc.setState(0xd58c, 0x4005, 0x6240, 0x24c5, 0x4362, 0xff5f, 0x1, 0x1);
        gbc.writeMem(0xd58c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4005, gbc.sp());
        EXPECT(0xd58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58c));
        EXPECT(0xd, gbc.readMem(0xd58d));
        // CB 0D 00FC
        gbc.setState(0xba3c, 0x883e, 0x78c0, 0xe31e, 0x733f, 0x5ce8, 0x0, 0x1);
        gbc.writeMem(0xba3c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x883e, gbc.sp());
        EXPECT(0xba3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3c));
        EXPECT(0xd, gbc.readMem(0xba3d));
        // CB 0D 00FD
        gbc.setState(0x5618, 0x52ac, 0x1690, 0x818c, 0x69da, 0x78c1, 0x0, 0x0);
        gbc.writeMem(0x5618, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x52ac, gbc.sp());
        EXPECT(0x561a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00FE
        gbc.setState(0x283e, 0xb9f6, 0xbd00, 0x2cdc, 0xf447, 0x7f99, 0x1, 0x1);
        gbc.writeMem(0x283e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb9f6, gbc.sp());
        EXPECT(0x2840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 00FF
        gbc.setState(0xbc0, 0x7fa, 0x5200, 0x9ddb, 0x79e4, 0x692c, 0x0, 0x1);
        gbc.writeMem(0xbc0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7fa, gbc.sp());
        EXPECT(0xbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0100
        gbc.setState(0x5a3b, 0x3dd3, 0x61d0, 0xff54, 0x20d5, 0x59f6, 0x0, 0x0);
        gbc.writeMem(0x5a3b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3dd3, gbc.sp());
        EXPECT(0x5a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0101
        gbc.setState(0x3720, 0x33f5, 0x1ea0, 0xb60f, 0x62ef, 0x1524, 0x0, 0x0);
        gbc.writeMem(0x3720, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x33f5, gbc.sp());
        EXPECT(0x3722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0102
        gbc.setState(0xbd38, 0xe173, 0x8b80, 0x1e83, 0xbb6a, 0x397d, 0x1, 0x1);
        gbc.writeMem(0xbd38, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe173, gbc.sp());
        EXPECT(0xbd3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd38));
        EXPECT(0xd, gbc.readMem(0xbd39));
        // CB 0D 0103
        gbc.setState(0x71d3, 0x15be, 0x7b60, 0x3999, 0xd9b0, 0xf88f, 0x0, 0x1);
        gbc.writeMem(0x71d3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x15be, gbc.sp());
        EXPECT(0x71d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0104
        gbc.setState(0xb528, 0x56fd, 0x9c60, 0xa51f, 0x57b7, 0x1e77, 0x1, 0x0);
        gbc.writeMem(0xb528, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x56fd, gbc.sp());
        EXPECT(0xb52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb528));
        EXPECT(0xd, gbc.readMem(0xb529));
        // CB 0D 0105
        gbc.setState(0x5cad, 0x2d26, 0x7710, 0x18d2, 0x6a85, 0xf45a, 0x0, 0x1);
        gbc.writeMem(0x5cad, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2d26, gbc.sp());
        EXPECT(0x5caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0106
        gbc.setState(0x39fe, 0xe700, 0x27b0, 0x9866, 0x982a, 0x42, 0x1, 0x0);
        gbc.writeMem(0x39fe, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe700, gbc.sp());
        EXPECT(0x3a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0107
        gbc.setState(0x6878, 0xbc71, 0xa310, 0x2acb, 0x52a3, 0xe406, 0x0, 0x1);
        gbc.writeMem(0x6878, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbc71, gbc.sp());
        EXPECT(0x687a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0108
        gbc.setState(0x3db4, 0xd227, 0x1ed0, 0xf924, 0xa1a8, 0x596a, 0x1, 0x0);
        gbc.writeMem(0x3db4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd227, gbc.sp());
        EXPECT(0x3db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0109
        gbc.setState(0x4eaf, 0x54e1, 0xc5a0, 0xc24b, 0xd750, 0x61, 0x1, 0x0);
        gbc.writeMem(0x4eaf, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x54e1, gbc.sp());
        EXPECT(0x4eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 010A
        gbc.setState(0x4b87, 0xc3f7, 0x8c60, 0xecca, 0x69d3, 0x5bfb, 0x0, 0x1);
        gbc.writeMem(0x4b87, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc3f7, gbc.sp());
        EXPECT(0x4b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 010B
        gbc.setState(0xdb73, 0x5de1, 0xc9b0, 0x2728, 0xd419, 0xccfb, 0x0, 0x1);
        gbc.writeMem(0xdb73, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5de1, gbc.sp());
        EXPECT(0xdb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb73));
        EXPECT(0xd, gbc.readMem(0xdb74));
        // CB 0D 010C
        gbc.setState(0x1338, 0xe86d, 0x8650, 0x3669, 0xe435, 0x39d3, 0x1, 0x0);
        gbc.writeMem(0x1338, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe86d, gbc.sp());
        EXPECT(0x133a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 010D
        gbc.setState(0x3458, 0xae38, 0xab40, 0x86ca, 0xe665, 0xf112, 0x1, 0x1);
        gbc.writeMem(0x3458, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xae38, gbc.sp());
        EXPECT(0x345a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 010E
        gbc.setState(0xac3a, 0xae69, 0xbf00, 0xbd6f, 0x379a, 0xfb7e, 0x1, 0x1);
        gbc.writeMem(0xac3a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xae69, gbc.sp());
        EXPECT(0xac3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3a));
        EXPECT(0xd, gbc.readMem(0xac3b));
        // CB 0D 010F
        gbc.setState(0x983d, 0x99c4, 0xa360, 0x65c4, 0xf55b, 0xe2eb, 0x0, 0x1);
        gbc.writeMem(0x983d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x99c4, gbc.sp());
        EXPECT(0x983f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983d));
        EXPECT(0xd, gbc.readMem(0x983e));
        // CB 0D 0110
        gbc.setState(0x9ba5, 0xd489, 0x4060, 0x6e43, 0x4ee1, 0xdb28, 0x1, 0x0);
        gbc.writeMem(0x9ba5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd489, gbc.sp());
        EXPECT(0x9ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba5));
        EXPECT(0xd, gbc.readMem(0x9ba6));
        // CB 0D 0111
        gbc.setState(0xd15f, 0x9179, 0x4940, 0xae1b, 0xd511, 0xf13c, 0x0, 0x0);
        gbc.writeMem(0xd15f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9179, gbc.sp());
        EXPECT(0xd161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15f));
        EXPECT(0xd, gbc.readMem(0xd160));
        // CB 0D 0112
        gbc.setState(0x1da1, 0xe68f, 0x340, 0x8b5, 0x5979, 0xf99b, 0x1, 0x0);
        gbc.writeMem(0x1da1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe68f, gbc.sp());
        EXPECT(0x1da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0113
        gbc.setState(0x79a5, 0x3ebd, 0x9200, 0xadbc, 0xf522, 0x54a9, 0x0, 0x0);
        gbc.writeMem(0x79a5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3ebd, gbc.sp());
        EXPECT(0x79a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0114
        gbc.setState(0x7f35, 0x85a0, 0xaa30, 0x650d, 0x7a12, 0x4ef2, 0x0, 0x1);
        gbc.writeMem(0x7f35, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x85a0, gbc.sp());
        EXPECT(0x7f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0115
        gbc.setState(0x56ae, 0x201b, 0xf080, 0xa244, 0x237e, 0x24a8, 0x0, 0x1);
        gbc.writeMem(0x56ae, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x201b, gbc.sp());
        EXPECT(0x56b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0116
        gbc.setState(0xe48e, 0x350d, 0xbac0, 0x708a, 0xee6a, 0xc753, 0x0, 0x0);
        gbc.writeMem(0xe48e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x350d, gbc.sp());
        EXPECT(0xe490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48e));
        EXPECT(0xd, gbc.readMem(0xe48f));
        // CB 0D 0117
        gbc.setState(0x455, 0xe637, 0x4e90, 0x6180, 0xb262, 0x274, 0x1, 0x0);
        gbc.writeMem(0x455, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe637, gbc.sp());
        EXPECT(0x457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0118
        gbc.setState(0xe331, 0xb187, 0x6630, 0x9195, 0x1203, 0xc535, 0x1, 0x0);
        gbc.writeMem(0xe331, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb187, gbc.sp());
        EXPECT(0xe333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe331));
        EXPECT(0xd, gbc.readMem(0xe332));
        // CB 0D 0119
        gbc.setState(0x6bf0, 0x1968, 0xb2d0, 0x2676, 0xd863, 0x9927, 0x0, 0x0);
        gbc.writeMem(0x6bf0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1968, gbc.sp());
        EXPECT(0x6bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 011A
        gbc.setState(0x10cc, 0x9d33, 0x9670, 0x9358, 0x707c, 0xf4a4, 0x1, 0x1);
        gbc.writeMem(0x10cc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9d33, gbc.sp());
        EXPECT(0x10ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 011B
        gbc.setState(0x5841, 0x2e16, 0x8910, 0x21ad, 0x7b4c, 0x55f6, 0x0, 0x0);
        gbc.writeMem(0x5841, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2e16, gbc.sp());
        EXPECT(0x5843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 011C
        gbc.setState(0x4b0e, 0xd6d3, 0x5ce0, 0x846d, 0x7ee6, 0x55a2, 0x0, 0x0);
        gbc.writeMem(0x4b0e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd6d3, gbc.sp());
        EXPECT(0x4b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 011D
        gbc.setState(0xc6a8, 0x9c25, 0x4f50, 0xdceb, 0xf8c0, 0xb6bc, 0x0, 0x1);
        gbc.writeMem(0xc6a8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9c25, gbc.sp());
        EXPECT(0xc6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a8));
        EXPECT(0xd, gbc.readMem(0xc6a9));
        // CB 0D 011E
        gbc.setState(0xec14, 0x6c67, 0x9f0, 0x6f8f, 0x8256, 0xbc86, 0x1, 0x0);
        gbc.writeMem(0xec14, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6c67, gbc.sp());
        EXPECT(0xec16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec14));
        EXPECT(0xd, gbc.readMem(0xec15));
        // CB 0D 0120
        gbc.setState(0x4229, 0x493e, 0x6030, 0x36cb, 0xbf26, 0xfc6b, 0x1, 0x0);
        gbc.writeMem(0x4229, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x493e, gbc.sp());
        EXPECT(0x422b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0122
        gbc.setState(0xb14f, 0xceb, 0x9a50, 0x150a, 0xc364, 0x6cf5, 0x1, 0x1);
        gbc.writeMem(0xb14f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xceb, gbc.sp());
        EXPECT(0xb151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14f));
        EXPECT(0xd, gbc.readMem(0xb150));
        // CB 0D 0123
        gbc.setState(0x1c0a, 0x961e, 0xfd10, 0xf972, 0xb4e8, 0x4f7f, 0x1, 0x0);
        gbc.writeMem(0x1c0a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x961e, gbc.sp());
        EXPECT(0x1c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0124
        gbc.setState(0x6388, 0x1728, 0x6190, 0xb191, 0xba82, 0x1fc3, 0x0, 0x0);
        gbc.writeMem(0x6388, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1728, gbc.sp());
        EXPECT(0x638a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0125
        gbc.setState(0x8860, 0xdc0b, 0xa0, 0x33bc, 0xd33a, 0x178e, 0x1, 0x1);
        gbc.writeMem(0x8860, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdc0b, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8860));
        EXPECT(0xd, gbc.readMem(0x8861));
        // CB 0D 0126
        gbc.setState(0x56ba, 0x7dd7, 0xd3b0, 0x7059, 0x70c0, 0xb512, 0x1, 0x1);
        gbc.writeMem(0x56ba, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7dd7, gbc.sp());
        EXPECT(0x56bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0127
        gbc.setState(0x23b2, 0xe869, 0x5860, 0x90c5, 0x2fc3, 0x3ff1, 0x1, 0x0);
        gbc.writeMem(0x23b2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe869, gbc.sp());
        EXPECT(0x23b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0128
        gbc.setState(0xbc40, 0xf176, 0xae60, 0xf154, 0xfb6a, 0x3cd7, 0x0, 0x0);
        gbc.writeMem(0xbc40, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf176, gbc.sp());
        EXPECT(0xbc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc40));
        EXPECT(0xd, gbc.readMem(0xbc41));
        // CB 0D 012A
        gbc.setState(0x5c68, 0xce58, 0xeb30, 0xb71d, 0xf499, 0x735f, 0x0, 0x1);
        gbc.writeMem(0x5c68, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xce58, gbc.sp());
        EXPECT(0x5c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 012B
        gbc.setState(0xdae8, 0x9a16, 0x3b60, 0xe988, 0x570a, 0xa6ca, 0x0, 0x1);
        gbc.writeMem(0xdae8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9a16, gbc.sp());
        EXPECT(0xdaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae8));
        EXPECT(0xd, gbc.readMem(0xdae9));
        // CB 0D 012C
        gbc.setState(0x624d, 0x18, 0xd8a0, 0xba94, 0x44f3, 0x9499, 0x0, 0x0);
        gbc.writeMem(0x624d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x18, gbc.sp());
        EXPECT(0x624f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 012D
        gbc.setState(0x3506, 0x5f45, 0xd8e0, 0x2747, 0x5b1e, 0x5c8e, 0x0, 0x1);
        gbc.writeMem(0x3506, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5f45, gbc.sp());
        EXPECT(0x3508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 012E
        gbc.setState(0x8a58, 0xcc32, 0x9c90, 0x4193, 0x1e7d, 0xe688, 0x1, 0x0);
        gbc.writeMem(0x8a58, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcc32, gbc.sp());
        EXPECT(0x8a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a58));
        EXPECT(0xd, gbc.readMem(0x8a59));
        // CB 0D 012F
        gbc.setState(0xab22, 0xe6f3, 0xad90, 0xdc6d, 0x3d0e, 0xbf7, 0x1, 0x1);
        gbc.writeMem(0xab22, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe6f3, gbc.sp());
        EXPECT(0xab24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab22));
        EXPECT(0xd, gbc.readMem(0xab23));
        // CB 0D 0130
        gbc.setState(0x92e0, 0x138d, 0x6870, 0x44b0, 0x219d, 0xa459, 0x0, 0x1);
        gbc.writeMem(0x92e0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x138d, gbc.sp());
        EXPECT(0x92e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e0));
        EXPECT(0xd, gbc.readMem(0x92e1));
        // CB 0D 0131
        gbc.setState(0x9c59, 0x3168, 0x8060, 0x4852, 0x3028, 0x833e, 0x1, 0x1);
        gbc.writeMem(0x9c59, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3168, gbc.sp());
        EXPECT(0x9c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c59));
        EXPECT(0xd, gbc.readMem(0x9c5a));
        // CB 0D 0132
        gbc.setState(0xec7d, 0x6c8a, 0x38b0, 0xa1f9, 0xfaba, 0x9ce8, 0x1, 0x0);
        gbc.writeMem(0xec7d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6c8a, gbc.sp());
        EXPECT(0xec7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7d));
        EXPECT(0xd, gbc.readMem(0xec7e));
        // CB 0D 0133
        gbc.setState(0x5e8c, 0xbb04, 0x7450, 0xe3a3, 0x1c77, 0x3d81, 0x1, 0x1);
        gbc.writeMem(0x5e8c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbb04, gbc.sp());
        EXPECT(0x5e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0134
        gbc.setState(0x566c, 0x5b07, 0xb7f0, 0x5c3b, 0x913f, 0x7a40, 0x1, 0x1);
        gbc.writeMem(0x566c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5b07, gbc.sp());
        EXPECT(0x566e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0135
        gbc.setState(0xb7d5, 0xe2cb, 0xfdb0, 0x9ae1, 0x2be1, 0x7a2b, 0x0, 0x1);
        gbc.writeMem(0xb7d5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe2cb, gbc.sp());
        EXPECT(0xb7d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d5));
        EXPECT(0xd, gbc.readMem(0xb7d6));
        // CB 0D 0136
        gbc.setState(0x4ea7, 0x545a, 0x3260, 0x18f, 0x8e56, 0xbedd, 0x1, 0x0);
        gbc.writeMem(0x4ea7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x545a, gbc.sp());
        EXPECT(0x4ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0137
        gbc.setState(0xeeb1, 0xfde0, 0xa9b0, 0x6971, 0xbb8f, 0xe341, 0x1, 0x0);
        gbc.writeMem(0xeeb1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfde0, gbc.sp());
        EXPECT(0xeeb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb1));
        EXPECT(0xd, gbc.readMem(0xeeb2));
        // CB 0D 0138
        gbc.setState(0x7607, 0x3a3d, 0xe8d0, 0x3097, 0xdb5, 0x481a, 0x1, 0x0);
        gbc.writeMem(0x7607, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3a3d, gbc.sp());
        EXPECT(0x7609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0139
        gbc.setState(0xd22c, 0x1ee2, 0x8ea0, 0x4cdc, 0x2de3, 0xf94f, 0x0, 0x1);
        gbc.writeMem(0xd22c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1ee2, gbc.sp());
        EXPECT(0xd22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22c));
        EXPECT(0xd, gbc.readMem(0xd22d));
        // CB 0D 013A
        gbc.setState(0x43b, 0xf17b, 0x1d20, 0xa40c, 0x9ac5, 0x2135, 0x0, 0x1);
        gbc.writeMem(0x43b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf17b, gbc.sp());
        EXPECT(0x43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 013B
        gbc.setState(0x72af, 0xe4e6, 0x4ff0, 0x9345, 0xef28, 0xa388, 0x0, 0x1);
        gbc.writeMem(0x72af, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe4e6, gbc.sp());
        EXPECT(0x72b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 013C
        gbc.setState(0x3c33, 0x2465, 0x78c0, 0x63c, 0xd703, 0xa2f4, 0x1, 0x1);
        gbc.writeMem(0x3c33, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2465, gbc.sp());
        EXPECT(0x3c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 013D
        gbc.setState(0x1698, 0x578b, 0x7470, 0xfb53, 0x62e6, 0x2e7f, 0x0, 0x1);
        gbc.writeMem(0x1698, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x578b, gbc.sp());
        EXPECT(0x169a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 013E
        gbc.setState(0xc356, 0x4baa, 0xdb70, 0xf0d, 0x2718, 0x12bb, 0x0, 0x1);
        gbc.writeMem(0xc356, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4baa, gbc.sp());
        EXPECT(0xc358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc356));
        EXPECT(0xd, gbc.readMem(0xc357));
        // CB 0D 013F
        gbc.setState(0x303e, 0xf55, 0x620, 0xd763, 0x969, 0x1f36, 0x0, 0x0);
        gbc.writeMem(0x303e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf55, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0140
        gbc.setState(0xc10d, 0x578c, 0xe2c0, 0xa5a, 0xf9e9, 0xe944, 0x1, 0x1);
        gbc.writeMem(0xc10d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x578c, gbc.sp());
        EXPECT(0xc10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc10d));
        EXPECT(0xd, gbc.readMem(0xc10e));
        // CB 0D 0141
        gbc.setState(0x8d77, 0xeb35, 0x78f0, 0xfb1f, 0x7ae3, 0x71dc, 0x0, 0x1);
        gbc.writeMem(0x8d77, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xeb35, gbc.sp());
        EXPECT(0x8d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d77));
        EXPECT(0xd, gbc.readMem(0x8d78));
        // CB 0D 0142
        gbc.setState(0x66f5, 0xe28d, 0x5640, 0x9aba, 0x96ba, 0x4a31, 0x1, 0x1);
        gbc.writeMem(0x66f5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe28d, gbc.sp());
        EXPECT(0x66f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0143
        gbc.setState(0x46d0, 0xe960, 0xb9b0, 0xbef, 0xc8b2, 0x6883, 0x0, 0x0);
        gbc.writeMem(0x46d0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe960, gbc.sp());
        EXPECT(0x46d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0144
        gbc.setState(0x1dbc, 0x7a27, 0x90d0, 0xe41d, 0xb2ae, 0x67e8, 0x1, 0x0);
        gbc.writeMem(0x1dbc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7a27, gbc.sp());
        EXPECT(0x1dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0145
        gbc.setState(0xa03d, 0x9c6c, 0x2ce0, 0x5cac, 0x4a41, 0x52c8, 0x0, 0x1);
        gbc.writeMem(0xa03d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9c6c, gbc.sp());
        EXPECT(0xa03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03d));
        EXPECT(0xd, gbc.readMem(0xa03e));
        // CB 0D 0146
        gbc.setState(0x74e8, 0x2723, 0x83c0, 0xc65f, 0x25a8, 0x54c7, 0x0, 0x0);
        gbc.writeMem(0x74e8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2723, gbc.sp());
        EXPECT(0x74ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0147
        gbc.setState(0x33e6, 0xfac5, 0xbe90, 0x9d0f, 0x4e49, 0x8a90, 0x0, 0x1);
        gbc.writeMem(0x33e6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfac5, gbc.sp());
        EXPECT(0x33e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0148
        gbc.setState(0xa1bd, 0x309b, 0xb8e0, 0x73f6, 0x9b34, 0x6ee3, 0x0, 0x1);
        gbc.writeMem(0xa1bd, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x309b, gbc.sp());
        EXPECT(0xa1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1bd));
        EXPECT(0xd, gbc.readMem(0xa1be));
        // CB 0D 0149
        gbc.setState(0xcfdf, 0x2e6d, 0x11c0, 0xdbc2, 0x805e, 0xb52b, 0x0, 0x0);
        gbc.writeMem(0xcfdf, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2e6d, gbc.sp());
        EXPECT(0xcfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdf));
        EXPECT(0xd, gbc.readMem(0xcfe0));
        // CB 0D 014A
        gbc.setState(0x1849, 0x41, 0x99f0, 0xa0d2, 0xb7d9, 0x9e8c, 0x1, 0x0);
        gbc.writeMem(0x1849, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x41, gbc.sp());
        EXPECT(0x184b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 014B
        gbc.setState(0x12b0, 0x6232, 0xf0f0, 0xd302, 0x7d0, 0xe44b, 0x0, 0x0);
        gbc.writeMem(0x12b0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6232, gbc.sp());
        EXPECT(0x12b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 014D
        gbc.setState(0xbf82, 0x1f32, 0x7930, 0x21ed, 0x7fd1, 0x4b0b, 0x1, 0x0);
        gbc.writeMem(0xbf82, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1f32, gbc.sp());
        EXPECT(0xbf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf82));
        EXPECT(0xd, gbc.readMem(0xbf83));
        // CB 0D 014E
        gbc.setState(0x1e16, 0xf172, 0xf3d0, 0xe18a, 0x8dac, 0x8a44, 0x0, 0x1);
        gbc.writeMem(0x1e16, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf172, gbc.sp());
        EXPECT(0x1e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 014F
        gbc.setState(0x5b63, 0x8b09, 0xcba0, 0xff14, 0x45a0, 0xf34f, 0x0, 0x0);
        gbc.writeMem(0x5b63, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8b09, gbc.sp());
        EXPECT(0x5b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0150
        gbc.setState(0x1502, 0xa355, 0x33e0, 0x4164, 0xd424, 0xcf0f, 0x0, 0x0);
        gbc.writeMem(0x1502, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa355, gbc.sp());
        EXPECT(0x1504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0151
        gbc.setState(0xbe6, 0x6ece, 0x7580, 0x2890, 0x8e5b, 0x1bec, 0x0, 0x1);
        gbc.writeMem(0xbe6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6ece, gbc.sp());
        EXPECT(0xbe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0152
        gbc.setState(0xad57, 0x60f5, 0xe340, 0xbfea, 0x72f3, 0x2552, 0x0, 0x0);
        gbc.writeMem(0xad57, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x60f5, gbc.sp());
        EXPECT(0xad59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad57));
        EXPECT(0xd, gbc.readMem(0xad58));
        // CB 0D 0153
        gbc.setState(0x1c8d, 0xace8, 0x3600, 0xa4d4, 0x8759, 0x19a5, 0x1, 0x0);
        gbc.writeMem(0x1c8d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xace8, gbc.sp());
        EXPECT(0x1c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0154
        gbc.setState(0x33e2, 0x4367, 0xc740, 0x88d4, 0xfd4b, 0x4a6c, 0x0, 0x1);
        gbc.writeMem(0x33e2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4367, gbc.sp());
        EXPECT(0x33e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0155
        gbc.setState(0xa740, 0xa746, 0x8610, 0x831e, 0x975, 0x40b0, 0x1, 0x0);
        gbc.writeMem(0xa740, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa746, gbc.sp());
        EXPECT(0xa742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa740));
        EXPECT(0xd, gbc.readMem(0xa741));
        // CB 0D 0157
        gbc.setState(0xa93e, 0x98f4, 0x8cc0, 0x1aa2, 0xe5ef, 0xcaab, 0x1, 0x1);
        gbc.writeMem(0xa93e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x98f4, gbc.sp());
        EXPECT(0xa940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93e));
        EXPECT(0xd, gbc.readMem(0xa93f));
        // CB 0D 0158
        gbc.setState(0x4855, 0xc16b, 0x70, 0x9bd5, 0x1209, 0xd73b, 0x1, 0x0);
        gbc.writeMem(0x4855, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc16b, gbc.sp());
        EXPECT(0x4857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0159
        gbc.setState(0xbfb7, 0x208d, 0xa080, 0x5d0c, 0x264f, 0x90e0, 0x0, 0x1);
        gbc.writeMem(0xbfb7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x208d, gbc.sp());
        EXPECT(0xbfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb7));
        EXPECT(0xd, gbc.readMem(0xbfb8));
        // CB 0D 015A
        gbc.setState(0x3def, 0xa630, 0x1070, 0xc1dc, 0x2fd6, 0xafdf, 0x0, 0x1);
        gbc.writeMem(0x3def, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa630, gbc.sp());
        EXPECT(0x3df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 015B
        gbc.setState(0x8890, 0x25e6, 0xc9a0, 0xe4ad, 0x21e, 0x76b9, 0x1, 0x1);
        gbc.writeMem(0x8890, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x25e6, gbc.sp());
        EXPECT(0x8892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8890));
        EXPECT(0xd, gbc.readMem(0x8891));
        // CB 0D 015C
        gbc.setState(0x1864, 0xf5ec, 0x1e70, 0x980e, 0xfdcf, 0xbc09, 0x0, 0x1);
        gbc.writeMem(0x1864, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf5ec, gbc.sp());
        EXPECT(0x1866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 015D
        gbc.setState(0x6305, 0x4b09, 0x5630, 0x256e, 0x38e0, 0x9c25, 0x1, 0x1);
        gbc.writeMem(0x6305, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4b09, gbc.sp());
        EXPECT(0x6307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 015E
        gbc.setState(0x204f, 0xc71, 0xbca0, 0x6d19, 0xdefa, 0xff64, 0x1, 0x1);
        gbc.writeMem(0x204f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc71, gbc.sp());
        EXPECT(0x2051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 015F
        gbc.setState(0x7b43, 0x1be8, 0x8c30, 0xa9a7, 0x8893, 0x4984, 0x1, 0x1);
        gbc.writeMem(0x7b43, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1be8, gbc.sp());
        EXPECT(0x7b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0160
        gbc.setState(0x32ab, 0x6aaa, 0x14f0, 0x7d7f, 0x542a, 0x9c4a, 0x1, 0x0);
        gbc.writeMem(0x32ab, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6aaa, gbc.sp());
        EXPECT(0x32ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0161
        gbc.setState(0xc27f, 0x748d, 0xf840, 0xe8c9, 0xc7b2, 0x5983, 0x0, 0x1);
        gbc.writeMem(0xc27f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x748d, gbc.sp());
        EXPECT(0xc281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc27f));
        EXPECT(0xd, gbc.readMem(0xc280));
        // CB 0D 0162
        gbc.setState(0x2d10, 0xf0fa, 0xd5c0, 0x1bd1, 0x2b5d, 0x7750, 0x1, 0x1);
        gbc.writeMem(0x2d10, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf0fa, gbc.sp());
        EXPECT(0x2d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0164
        gbc.setState(0x469f, 0xd236, 0x4fe0, 0xc75a, 0x7099, 0x74c3, 0x1, 0x1);
        gbc.writeMem(0x469f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd236, gbc.sp());
        EXPECT(0x46a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0165
        gbc.setState(0x785d, 0x1c27, 0xb910, 0x9c6b, 0xa4e1, 0xfb89, 0x1, 0x0);
        gbc.writeMem(0x785d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1c27, gbc.sp());
        EXPECT(0x785f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0166
        gbc.setState(0x921d, 0xeb7d, 0x4130, 0xa355, 0xdf7b, 0xeed0, 0x1, 0x0);
        gbc.writeMem(0x921d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xeb7d, gbc.sp());
        EXPECT(0x921f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921d));
        EXPECT(0xd, gbc.readMem(0x921e));
        // CB 0D 0167
        gbc.setState(0x20b7, 0x4fc6, 0x34c0, 0x5031, 0x18d9, 0xe3c1, 0x1, 0x1);
        gbc.writeMem(0x20b7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4fc6, gbc.sp());
        EXPECT(0x20b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0168
        gbc.setState(0xd297, 0xb0ad, 0x2e80, 0x11b, 0xd35a, 0xe3b5, 0x0, 0x1);
        gbc.writeMem(0xd297, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb0ad, gbc.sp());
        EXPECT(0xd299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd297));
        EXPECT(0xd, gbc.readMem(0xd298));
        // CB 0D 0169
        gbc.setState(0x9471, 0x7b2e, 0xf670, 0x35b8, 0x42b8, 0x8e71, 0x0, 0x1);
        gbc.writeMem(0x9471, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7b2e, gbc.sp());
        EXPECT(0x9473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9471));
        EXPECT(0xd, gbc.readMem(0x9472));
        // CB 0D 016A
        gbc.setState(0x123d, 0xd212, 0x330, 0x637e, 0x18e, 0x8724, 0x1, 0x1);
        gbc.writeMem(0x123d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd212, gbc.sp());
        EXPECT(0x123f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 016B
        gbc.setState(0xb687, 0x7140, 0x67b0, 0x518b, 0xbc07, 0xf8a7, 0x1, 0x0);
        gbc.writeMem(0xb687, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7140, gbc.sp());
        EXPECT(0xb689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb687));
        EXPECT(0xd, gbc.readMem(0xb688));
        // CB 0D 016C
        gbc.setState(0x5f16, 0x1cc2, 0xa6a0, 0xceb7, 0x2eff, 0x72ae, 0x0, 0x1);
        gbc.writeMem(0x5f16, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1cc2, gbc.sp());
        EXPECT(0x5f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 016D
        gbc.setState(0xb484, 0x14dd, 0xd250, 0x6dbc, 0xe5b5, 0xbaec, 0x0, 0x0);
        gbc.writeMem(0xb484, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x14dd, gbc.sp());
        EXPECT(0xb486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb484));
        EXPECT(0xd, gbc.readMem(0xb485));
        // CB 0D 016E
        gbc.setState(0x974c, 0xdbc8, 0x5260, 0x46c, 0xfb7e, 0xcf3f, 0x1, 0x0);
        gbc.writeMem(0x974c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdbc8, gbc.sp());
        EXPECT(0x974e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x974c));
        EXPECT(0xd, gbc.readMem(0x974d));
        // CB 0D 016F
        gbc.setState(0x5314, 0x10c1, 0x34e0, 0x74e5, 0xe86a, 0x2d2b, 0x0, 0x1);
        gbc.writeMem(0x5314, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x10c1, gbc.sp());
        EXPECT(0x5316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0170
        gbc.setState(0xa290, 0xd70c, 0x40b0, 0x4575, 0xe58c, 0x3521, 0x0, 0x0);
        gbc.writeMem(0xa290, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd70c, gbc.sp());
        EXPECT(0xa292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa290));
        EXPECT(0xd, gbc.readMem(0xa291));
        // CB 0D 0171
        gbc.setState(0x6c14, 0xd9bb, 0xb280, 0x5b07, 0x9c3d, 0x344, 0x0, 0x0);
        gbc.writeMem(0x6c14, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd9bb, gbc.sp());
        EXPECT(0x6c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0172
        gbc.setState(0x8170, 0x5ad0, 0xa000, 0x762c, 0x6b21, 0xe0c7, 0x0, 0x1);
        gbc.writeMem(0x8170, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5ad0, gbc.sp());
        EXPECT(0x8172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8170));
        EXPECT(0xd, gbc.readMem(0x8171));
        // CB 0D 0174
        gbc.setState(0x22f4, 0x798f, 0x3050, 0x60db, 0xec6a, 0x64a5, 0x1, 0x1);
        gbc.writeMem(0x22f4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x798f, gbc.sp());
        EXPECT(0x22f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0175
        gbc.setState(0x5f46, 0x4c75, 0x910, 0x751, 0x71a2, 0xb642, 0x0, 0x1);
        gbc.writeMem(0x5f46, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4c75, gbc.sp());
        EXPECT(0x5f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0176
        gbc.setState(0xdff9, 0x4afe, 0x9060, 0xb897, 0xa549, 0x6ca, 0x1, 0x0);
        gbc.writeMem(0xdff9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4afe, gbc.sp());
        EXPECT(0xdffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff9));
        EXPECT(0xd, gbc.readMem(0xdffa));
        // CB 0D 0177
        gbc.setState(0x6845, 0xaa26, 0x2480, 0xd916, 0xdc24, 0x1c4e, 0x1, 0x0);
        gbc.writeMem(0x6845, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0x6847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0178
        gbc.setState(0x3b0f, 0x6c52, 0x6810, 0xc73a, 0xd1e9, 0x78fd, 0x1, 0x0);
        gbc.writeMem(0x3b0f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6c52, gbc.sp());
        EXPECT(0x3b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0179
        gbc.setState(0x39b5, 0xdcbb, 0xe5b0, 0x14c1, 0xe305, 0x74a4, 0x0, 0x1);
        gbc.writeMem(0x39b5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdcbb, gbc.sp());
        EXPECT(0x39b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 017A
        gbc.setState(0x138, 0xd9ba, 0x7b0, 0x456d, 0x867b, 0x8a80, 0x1, 0x0);
        gbc.writeMem(0x138, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd9ba, gbc.sp());
        EXPECT(0x13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 017B
        gbc.setState(0xd240, 0xf186, 0xecb0, 0x4ab6, 0xda71, 0x4417, 0x0, 0x0);
        gbc.writeMem(0xd240, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf186, gbc.sp());
        EXPECT(0xd242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd240));
        EXPECT(0xd, gbc.readMem(0xd241));
        // CB 0D 017D
        gbc.setState(0x28b5, 0xec7c, 0xa7e0, 0x2054, 0xd2f3, 0x555a, 0x1, 0x0);
        gbc.writeMem(0x28b5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xec7c, gbc.sp());
        EXPECT(0x28b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 017F
        gbc.setState(0x9402, 0xf4f1, 0xdbc0, 0xad1f, 0xa53e, 0x1773, 0x0, 0x1);
        gbc.writeMem(0x9402, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf4f1, gbc.sp());
        EXPECT(0x9404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9402));
        EXPECT(0xd, gbc.readMem(0x9403));
        // CB 0D 0180
        gbc.setState(0x8c79, 0x1dbd, 0xf90, 0x1009, 0x2b3b, 0xdbc7, 0x1, 0x1);
        gbc.writeMem(0x8c79, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1dbd, gbc.sp());
        EXPECT(0x8c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c79));
        EXPECT(0xd, gbc.readMem(0x8c7a));
        // CB 0D 0181
        gbc.setState(0x542c, 0xf3d7, 0x6e80, 0xcc26, 0x39ca, 0xbc9e, 0x1, 0x1);
        gbc.writeMem(0x542c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf3d7, gbc.sp());
        EXPECT(0x542e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0182
        gbc.setState(0x1c0b, 0xd940, 0x5230, 0x2202, 0xf7d3, 0xc108, 0x0, 0x0);
        gbc.writeMem(0x1c0b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd940, gbc.sp());
        EXPECT(0x1c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0183
        gbc.setState(0x64, 0x7dfe, 0x8490, 0x6316, 0x21ee, 0xe569, 0x1, 0x0);
        gbc.writeMem(0x64, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7dfe, gbc.sp());
        EXPECT(0x66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0185
        gbc.setState(0x7741, 0x2c8a, 0xaff0, 0x184, 0x44a0, 0x73b0, 0x1, 0x1);
        gbc.writeMem(0x7741, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2c8a, gbc.sp());
        EXPECT(0x7743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0186
        gbc.setState(0xac95, 0x522f, 0xe270, 0xb891, 0x4dc9, 0x7b64, 0x1, 0x0);
        gbc.writeMem(0xac95, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x522f, gbc.sp());
        EXPECT(0xac97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac95));
        EXPECT(0xd, gbc.readMem(0xac96));
        // CB 0D 0187
        gbc.setState(0x1de0, 0xf924, 0x8740, 0x90b5, 0x579e, 0xbde1, 0x1, 0x0);
        gbc.writeMem(0x1de0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf924, gbc.sp());
        EXPECT(0x1de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0188
        gbc.setState(0x4407, 0x1fe2, 0xdea0, 0x2f22, 0x31e8, 0x555f, 0x1, 0x0);
        gbc.writeMem(0x4407, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1fe2, gbc.sp());
        EXPECT(0x4409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0189
        gbc.setState(0xa4f3, 0x3b97, 0x6ec0, 0xdf17, 0x629b, 0x72bc, 0x1, 0x0);
        gbc.writeMem(0xa4f3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3b97, gbc.sp());
        EXPECT(0xa4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f3));
        EXPECT(0xd, gbc.readMem(0xa4f4));
        // CB 0D 018A
        gbc.setState(0xd247, 0x5bf5, 0xb4b0, 0xae69, 0x665b, 0xac98, 0x1, 0x0);
        gbc.writeMem(0xd247, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5bf5, gbc.sp());
        EXPECT(0xd249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd247));
        EXPECT(0xd, gbc.readMem(0xd248));
        // CB 0D 018B
        gbc.setState(0xda07, 0x7e39, 0x7050, 0xd7d9, 0x8b00, 0x5ee7, 0x0, 0x0);
        gbc.writeMem(0xda07, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7e39, gbc.sp());
        EXPECT(0xda09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda07));
        EXPECT(0xd, gbc.readMem(0xda08));
        // CB 0D 018C
        gbc.setState(0xeae8, 0x6c9b, 0x31a0, 0x5125, 0xab78, 0xfd98, 0x0, 0x0);
        gbc.writeMem(0xeae8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6c9b, gbc.sp());
        EXPECT(0xeaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae8));
        EXPECT(0xd, gbc.readMem(0xeae9));
        // CB 0D 018D
        gbc.setState(0x905b, 0x88a7, 0x54b0, 0x53ae, 0x494a, 0xcd09, 0x0, 0x1);
        gbc.writeMem(0x905b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x88a7, gbc.sp());
        EXPECT(0x905d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905b));
        EXPECT(0xd, gbc.readMem(0x905c));
        // CB 0D 018F
        gbc.setState(0xed08, 0xbe4b, 0x2c80, 0x1678, 0x26cc, 0xb4c5, 0x0, 0x0);
        gbc.writeMem(0xed08, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbe4b, gbc.sp());
        EXPECT(0xed0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed08));
        EXPECT(0xd, gbc.readMem(0xed09));
        // CB 0D 0191
        gbc.setState(0x253, 0x867e, 0x2f80, 0xed31, 0x65ca, 0x12bb, 0x0, 0x1);
        gbc.writeMem(0x253, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x867e, gbc.sp());
        EXPECT(0x255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0192
        gbc.setState(0xf02, 0x16cd, 0xd040, 0xf642, 0xf95d, 0x9b77, 0x0, 0x1);
        gbc.writeMem(0xf02, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x16cd, gbc.sp());
        EXPECT(0xf04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0193
        gbc.setState(0x9be, 0x627c, 0x1e60, 0x2f3e, 0x7d01, 0xaac6, 0x1, 0x0);
        gbc.writeMem(0x9be, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x627c, gbc.sp());
        EXPECT(0x9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0194
        gbc.setState(0xa6c3, 0x2c9f, 0x880, 0xfbef, 0x3942, 0x95af, 0x1, 0x0);
        gbc.writeMem(0xa6c3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2c9f, gbc.sp());
        EXPECT(0xa6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c3));
        EXPECT(0xd, gbc.readMem(0xa6c4));
        // CB 0D 0195
        gbc.setState(0x85eb, 0xd5dc, 0x6c20, 0x3a49, 0x51c7, 0xbaac, 0x1, 0x1);
        gbc.writeMem(0x85eb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd5dc, gbc.sp());
        EXPECT(0x85ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85eb));
        EXPECT(0xd, gbc.readMem(0x85ec));
        // CB 0D 0196
        gbc.setState(0x69b3, 0xf1e9, 0x96b0, 0xc457, 0x17e9, 0x3147, 0x1, 0x1);
        gbc.writeMem(0x69b3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf1e9, gbc.sp());
        EXPECT(0x69b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0197
        gbc.setState(0x6152, 0xb92a, 0x9f60, 0x6846, 0x2d17, 0x1172, 0x1, 0x0);
        gbc.writeMem(0x6152, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb92a, gbc.sp());
        EXPECT(0x6154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0198
        gbc.setState(0x42d5, 0xbb00, 0x36f0, 0xe6e0, 0xedca, 0xa165, 0x1, 0x1);
        gbc.writeMem(0x42d5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbb00, gbc.sp());
        EXPECT(0x42d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0199
        gbc.setState(0xaa0b, 0xab8b, 0x2200, 0xf0d3, 0x290f, 0xbe0, 0x1, 0x0);
        gbc.writeMem(0xaa0b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xab8b, gbc.sp());
        EXPECT(0xaa0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0b));
        EXPECT(0xd, gbc.readMem(0xaa0c));
        // CB 0D 019A
        gbc.setState(0x7a28, 0x6807, 0x40d0, 0xa49a, 0xdc7e, 0xe8f8, 0x0, 0x0);
        gbc.writeMem(0x7a28, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6807, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 019B
        gbc.setState(0x3d8, 0x774c, 0xe660, 0x6bd1, 0xca35, 0x41ea, 0x0, 0x1);
        gbc.writeMem(0x3d8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x774c, gbc.sp());
        EXPECT(0x3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 019C
        gbc.setState(0x3b93, 0x71f4, 0x28f0, 0x89c0, 0xd7a5, 0x2bfa, 0x0, 0x0);
        gbc.writeMem(0x3b93, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x71f4, gbc.sp());
        EXPECT(0x3b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 019E
        gbc.setState(0x13d0, 0xa177, 0x6a0, 0xa7d6, 0xe13a, 0xbe8d, 0x0, 0x1);
        gbc.writeMem(0x13d0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa177, gbc.sp());
        EXPECT(0x13d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 019F
        gbc.setState(0xec43, 0x485c, 0xd3a0, 0x5ce4, 0x8452, 0x1bb8, 0x1, 0x0);
        gbc.writeMem(0xec43, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x485c, gbc.sp());
        EXPECT(0xec45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec43));
        EXPECT(0xd, gbc.readMem(0xec44));
        // CB 0D 01A0
        gbc.setState(0x5306, 0xfc0e, 0x880, 0xaa2a, 0x3b22, 0xef35, 0x0, 0x1);
        gbc.writeMem(0x5306, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfc0e, gbc.sp());
        EXPECT(0x5308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01A1
        gbc.setState(0x91a3, 0xf4be, 0x71f0, 0x6a1b, 0xd686, 0xae31, 0x1, 0x1);
        gbc.writeMem(0x91a3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf4be, gbc.sp());
        EXPECT(0x91a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a3));
        EXPECT(0xd, gbc.readMem(0x91a4));
        // CB 0D 01A2
        gbc.setState(0xa06d, 0x37bf, 0xf0e0, 0xbe13, 0xf126, 0xd413, 0x0, 0x1);
        gbc.writeMem(0xa06d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x37bf, gbc.sp());
        EXPECT(0xa06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06d));
        EXPECT(0xd, gbc.readMem(0xa06e));
        // CB 0D 01A3
        gbc.setState(0x2cf1, 0xa074, 0x6b50, 0x9643, 0x87da, 0xd1ec, 0x1, 0x0);
        gbc.writeMem(0x2cf1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa074, gbc.sp());
        EXPECT(0x2cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01A4
        gbc.setState(0xbc13, 0x5653, 0x78f0, 0x6f19, 0xf3c7, 0xcb38, 0x0, 0x0);
        gbc.writeMem(0xbc13, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5653, gbc.sp());
        EXPECT(0xbc15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc13));
        EXPECT(0xd, gbc.readMem(0xbc14));
        // CB 0D 01A5
        gbc.setState(0x90b7, 0xd9d9, 0xd720, 0x4f51, 0xa0cc, 0xd74b, 0x1, 0x1);
        gbc.writeMem(0x90b7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd9d9, gbc.sp());
        EXPECT(0x90b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b7));
        EXPECT(0xd, gbc.readMem(0x90b8));
        // CB 0D 01A6
        gbc.setState(0xafeb, 0x69a7, 0x59b0, 0xac84, 0xc384, 0xea60, 0x0, 0x1);
        gbc.writeMem(0xafeb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x69a7, gbc.sp());
        EXPECT(0xafed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafeb));
        EXPECT(0xd, gbc.readMem(0xafec));
        // CB 0D 01A7
        gbc.setState(0xcf4d, 0xa24f, 0x8d50, 0x228d, 0x4d3b, 0x1d85, 0x1, 0x1);
        gbc.writeMem(0xcf4d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa24f, gbc.sp());
        EXPECT(0xcf4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4d));
        EXPECT(0xd, gbc.readMem(0xcf4e));
        // CB 0D 01A8
        gbc.setState(0x6aa5, 0xcd67, 0x26c0, 0xa0c6, 0x2b31, 0xfac7, 0x0, 0x0);
        gbc.writeMem(0x6aa5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcd67, gbc.sp());
        EXPECT(0x6aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01A9
        gbc.setState(0xd123, 0x1e99, 0x4840, 0x5937, 0x3fa9, 0x9c29, 0x1, 0x0);
        gbc.writeMem(0xd123, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1e99, gbc.sp());
        EXPECT(0xd125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd123));
        EXPECT(0xd, gbc.readMem(0xd124));
        // CB 0D 01AA
        gbc.setState(0x80ff, 0xd725, 0xe6a0, 0xf863, 0x8c5b, 0xe3d5, 0x0, 0x1);
        gbc.writeMem(0x80ff, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd725, gbc.sp());
        EXPECT(0x8101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ff));
        EXPECT(0xd, gbc.readMem(0x8100));
        // CB 0D 01AB
        gbc.setState(0xbbc8, 0x3457, 0xfc80, 0x2bf5, 0x2a7, 0xb95c, 0x1, 0x1);
        gbc.writeMem(0xbbc8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3457, gbc.sp());
        EXPECT(0xbbca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc8));
        EXPECT(0xd, gbc.readMem(0xbbc9));
        // CB 0D 01AC
        gbc.setState(0xfe2, 0x5172, 0x6750, 0xcfb0, 0xbf5, 0xda66, 0x1, 0x0);
        gbc.writeMem(0xfe2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5172, gbc.sp());
        EXPECT(0xfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01AD
        gbc.setState(0x1776, 0xcb5, 0xd040, 0x5af5, 0x8180, 0xbc21, 0x1, 0x0);
        gbc.writeMem(0x1776, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcb5, gbc.sp());
        EXPECT(0x1778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01AE
        gbc.setState(0x8ea5, 0xc70e, 0xe860, 0xf621, 0x7c11, 0x2c2c, 0x0, 0x1);
        gbc.writeMem(0x8ea5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc70e, gbc.sp());
        EXPECT(0x8ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea5));
        EXPECT(0xd, gbc.readMem(0x8ea6));
        // CB 0D 01AF
        gbc.setState(0x2a9c, 0x3342, 0x7530, 0xfc70, 0x6ff1, 0xfcbf, 0x0, 0x1);
        gbc.writeMem(0x2a9c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3342, gbc.sp());
        EXPECT(0x2a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01B0
        gbc.setState(0xde9a, 0x7a1d, 0xf3a0, 0x8c18, 0xf3c7, 0xb05, 0x0, 0x1);
        gbc.writeMem(0xde9a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7a1d, gbc.sp());
        EXPECT(0xde9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9a));
        EXPECT(0xd, gbc.readMem(0xde9b));
        // CB 0D 01B1
        gbc.setState(0x6420, 0xfaa8, 0x2d50, 0x9780, 0x97be, 0x52af, 0x1, 0x1);
        gbc.writeMem(0x6420, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfaa8, gbc.sp());
        EXPECT(0x6422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01B2
        gbc.setState(0xecdf, 0xb65f, 0x2210, 0xe76d, 0x914a, 0x2f44, 0x1, 0x0);
        gbc.writeMem(0xecdf, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb65f, gbc.sp());
        EXPECT(0xece1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecdf));
        EXPECT(0xd, gbc.readMem(0xece0));
        // CB 0D 01B3
        gbc.setState(0xdef4, 0xb03b, 0xadb0, 0x430, 0x1080, 0x555f, 0x1, 0x0);
        gbc.writeMem(0xdef4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb03b, gbc.sp());
        EXPECT(0xdef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef4));
        EXPECT(0xd, gbc.readMem(0xdef5));
        // CB 0D 01B4
        gbc.setState(0xc56c, 0x3d5e, 0xd350, 0xe338, 0x7a8f, 0x1e79, 0x1, 0x0);
        gbc.writeMem(0xc56c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3d5e, gbc.sp());
        EXPECT(0xc56e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56c));
        EXPECT(0xd, gbc.readMem(0xc56d));
        // CB 0D 01B5
        gbc.setState(0x6a3, 0xd086, 0xcf30, 0x4b7e, 0x6ef3, 0xd22e, 0x0, 0x0);
        gbc.writeMem(0x6a3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd086, gbc.sp());
        EXPECT(0x6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01B6
        gbc.setState(0x3d2b, 0xde93, 0x50e0, 0xceff, 0x5550, 0xbc1e, 0x1, 0x1);
        gbc.writeMem(0x3d2b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xde93, gbc.sp());
        EXPECT(0x3d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01B9
        gbc.setState(0xaa31, 0x19ea, 0xf590, 0xa672, 0x6245, 0x78d6, 0x0, 0x0);
        gbc.writeMem(0xaa31, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x19ea, gbc.sp());
        EXPECT(0xaa33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa31));
        EXPECT(0xd, gbc.readMem(0xaa32));
        // CB 0D 01BA
        gbc.setState(0x1a90, 0xddbb, 0x69c0, 0x52f2, 0xb69, 0xc405, 0x0, 0x0);
        gbc.writeMem(0x1a90, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xddbb, gbc.sp());
        EXPECT(0x1a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01BB
        gbc.setState(0x620e, 0x73b8, 0x5120, 0xbc1c, 0xc1a, 0x1ebe, 0x1, 0x1);
        gbc.writeMem(0x620e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x73b8, gbc.sp());
        EXPECT(0x6210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01BC
        gbc.setState(0x696b, 0x3ec9, 0x1430, 0xf40a, 0x6b3, 0x8846, 0x1, 0x1);
        gbc.writeMem(0x696b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3ec9, gbc.sp());
        EXPECT(0x696d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01BD
        gbc.setState(0xe178, 0xe02, 0x4530, 0x413a, 0xf483, 0xc48, 0x1, 0x0);
        gbc.writeMem(0xe178, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe02, gbc.sp());
        EXPECT(0xe17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe178));
        EXPECT(0xd, gbc.readMem(0xe179));
        // CB 0D 01BE
        gbc.setState(0xeede, 0xe8a1, 0x6cd0, 0x7697, 0xb34a, 0xc0c3, 0x1, 0x0);
        gbc.writeMem(0xeede, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe8a1, gbc.sp());
        EXPECT(0xeee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeede));
        EXPECT(0xd, gbc.readMem(0xeedf));
        // CB 0D 01BF
        gbc.setState(0xb6ec, 0x8b7e, 0x6b10, 0xb718, 0x3eb6, 0x6fa3, 0x0, 0x1);
        gbc.writeMem(0xb6ec, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8b7e, gbc.sp());
        EXPECT(0xb6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ec));
        EXPECT(0xd, gbc.readMem(0xb6ed));
        // CB 0D 01C0
        gbc.setState(0xc11e, 0xe713, 0x6d30, 0x40a8, 0x4840, 0x8dfb, 0x0, 0x1);
        gbc.writeMem(0xc11e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe713, gbc.sp());
        EXPECT(0xc120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11e));
        EXPECT(0xd, gbc.readMem(0xc11f));
        // CB 0D 01C1
        gbc.setState(0x3d28, 0xfe65, 0x4a30, 0x5b78, 0x50be, 0xc742, 0x0, 0x1);
        gbc.writeMem(0x3d28, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfe65, gbc.sp());
        EXPECT(0x3d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01C2
        gbc.setState(0xa678, 0x7bf8, 0x89e0, 0xb3b7, 0x4617, 0x5564, 0x0, 0x1);
        gbc.writeMem(0xa678, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7bf8, gbc.sp());
        EXPECT(0xa67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa678));
        EXPECT(0xd, gbc.readMem(0xa679));
        // CB 0D 01C3
        gbc.setState(0x8d7, 0xc91e, 0xf1c0, 0xd6de, 0x971c, 0x203, 0x1, 0x1);
        gbc.writeMem(0x8d7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc91e, gbc.sp());
        EXPECT(0x8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01C4
        gbc.setState(0xeba0, 0x36ea, 0x8a20, 0xb586, 0xb224, 0xe49b, 0x0, 0x1);
        gbc.writeMem(0xeba0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x36ea, gbc.sp());
        EXPECT(0xeba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba0));
        EXPECT(0xd, gbc.readMem(0xeba1));
        // CB 0D 01C5
        gbc.setState(0xb3fc, 0x1290, 0xc230, 0xc467, 0x2d1c, 0x528b, 0x0, 0x1);
        gbc.writeMem(0xb3fc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1290, gbc.sp());
        EXPECT(0xb3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fc));
        EXPECT(0xd, gbc.readMem(0xb3fd));
        // CB 0D 01C7
        gbc.setState(0xebfc, 0x61e2, 0xeb40, 0x69df, 0x54df, 0xecc3, 0x1, 0x0);
        gbc.writeMem(0xebfc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x61e2, gbc.sp());
        EXPECT(0xebfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfc));
        EXPECT(0xd, gbc.readMem(0xebfd));
        // CB 0D 01C8
        gbc.setState(0x8fb3, 0xce12, 0x9820, 0xc880, 0xba04, 0x3611, 0x0, 0x0);
        gbc.writeMem(0x8fb3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xce12, gbc.sp());
        EXPECT(0x8fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb3));
        EXPECT(0xd, gbc.readMem(0x8fb4));
        // CB 0D 01C9
        gbc.setState(0xe53b, 0x529a, 0x1b30, 0xf168, 0x4312, 0xb8c9, 0x1, 0x1);
        gbc.writeMem(0xe53b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x529a, gbc.sp());
        EXPECT(0xe53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53b));
        EXPECT(0xd, gbc.readMem(0xe53c));
        // CB 0D 01CA
        gbc.setState(0xe31d, 0x4d2f, 0x64e0, 0xe1c0, 0xaeef, 0x1163, 0x0, 0x0);
        gbc.writeMem(0xe31d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4d2f, gbc.sp());
        EXPECT(0xe31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31d));
        EXPECT(0xd, gbc.readMem(0xe31e));
        // CB 0D 01CB
        gbc.setState(0x7d5b, 0x2f24, 0x4b30, 0xea21, 0x290f, 0x2012, 0x1, 0x1);
        gbc.writeMem(0x7d5b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2f24, gbc.sp());
        EXPECT(0x7d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01CC
        gbc.setState(0x64f8, 0x183d, 0xc670, 0x385b, 0xe50a, 0xfb4e, 0x0, 0x0);
        gbc.writeMem(0x64f8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x183d, gbc.sp());
        EXPECT(0x64fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01CD
        gbc.setState(0x7b7b, 0xba1e, 0xa7e0, 0xa592, 0xc474, 0x24de, 0x0, 0x1);
        gbc.writeMem(0x7b7b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xba1e, gbc.sp());
        EXPECT(0x7b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01CE
        gbc.setState(0x8d1f, 0x537f, 0xf870, 0x3cf9, 0x3483, 0x6a07, 0x1, 0x0);
        gbc.writeMem(0x8d1f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x537f, gbc.sp());
        EXPECT(0x8d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1f));
        EXPECT(0xd, gbc.readMem(0x8d20));
        // CB 0D 01CF
        gbc.setState(0x900a, 0xa32f, 0xf490, 0xc113, 0x26d6, 0x3737, 0x0, 0x1);
        gbc.writeMem(0x900a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa32f, gbc.sp());
        EXPECT(0x900c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900a));
        EXPECT(0xd, gbc.readMem(0x900b));
        // CB 0D 01D0
        gbc.setState(0x40f6, 0x9c55, 0x88a0, 0xe56a, 0x72e, 0xae59, 0x1, 0x1);
        gbc.writeMem(0x40f6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9c55, gbc.sp());
        EXPECT(0x40f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01D1
        gbc.setState(0xdf43, 0x61f5, 0x23d0, 0xcfc9, 0xb116, 0xd727, 0x1, 0x1);
        gbc.writeMem(0xdf43, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x61f5, gbc.sp());
        EXPECT(0xdf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf43));
        EXPECT(0xd, gbc.readMem(0xdf44));
        // CB 0D 01D2
        gbc.setState(0x99b9, 0xe872, 0xd670, 0xbbaf, 0x4f65, 0x715f, 0x1, 0x1);
        gbc.writeMem(0x99b9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe872, gbc.sp());
        EXPECT(0x99bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b9));
        EXPECT(0xd, gbc.readMem(0x99ba));
        // CB 0D 01D3
        gbc.setState(0xe590, 0xc60e, 0xa5e0, 0x4900, 0x91ed, 0x83a, 0x0, 0x1);
        gbc.writeMem(0xe590, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc60e, gbc.sp());
        EXPECT(0xe592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe590));
        EXPECT(0xd, gbc.readMem(0xe591));
        // CB 0D 01D4
        gbc.setState(0xccc, 0x14ea, 0x8ef0, 0x3ca2, 0x227d, 0x98da, 0x0, 0x0);
        gbc.writeMem(0xccc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x14ea, gbc.sp());
        EXPECT(0xcce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01D5
        gbc.setState(0x2daa, 0x3abf, 0x3bc0, 0x33eb, 0x842e, 0x93f7, 0x1, 0x0);
        gbc.writeMem(0x2daa, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3abf, gbc.sp());
        EXPECT(0x2dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01D6
        gbc.setState(0x288, 0x4cc3, 0xc2c0, 0x3515, 0x61d0, 0x658b, 0x0, 0x0);
        gbc.writeMem(0x288, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4cc3, gbc.sp());
        EXPECT(0x28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01D7
        gbc.setState(0xede3, 0xd03b, 0x6df0, 0xeb59, 0x395c, 0xba81, 0x1, 0x1);
        gbc.writeMem(0xede3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd03b, gbc.sp());
        EXPECT(0xede5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede3));
        EXPECT(0xd, gbc.readMem(0xede4));
        // CB 0D 01D8
        gbc.setState(0xec12, 0x921e, 0x50d0, 0x3cf0, 0xb6a0, 0x2395, 0x0, 0x0);
        gbc.writeMem(0xec12, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x921e, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec12));
        EXPECT(0xd, gbc.readMem(0xec13));
        // CB 0D 01DA
        gbc.setState(0xc481, 0x6a61, 0x6730, 0x9254, 0xbcb6, 0x3b0b, 0x1, 0x1);
        gbc.writeMem(0xc481, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6a61, gbc.sp());
        EXPECT(0xc483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc481));
        EXPECT(0xd, gbc.readMem(0xc482));
        // CB 0D 01DB
        gbc.setState(0xe757, 0x370, 0xf790, 0x9cde, 0x46f5, 0x3c81, 0x1, 0x0);
        gbc.writeMem(0xe757, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x370, gbc.sp());
        EXPECT(0xe759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe757));
        EXPECT(0xd, gbc.readMem(0xe758));
        // CB 0D 01DC
        gbc.setState(0x73e0, 0x1f6f, 0x2180, 0x711f, 0xad6b, 0x9d38, 0x1, 0x1);
        gbc.writeMem(0x73e0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1f6f, gbc.sp());
        EXPECT(0x73e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01DD
        gbc.setState(0x9018, 0x8d06, 0xf640, 0x9ae4, 0xda17, 0x4156, 0x1, 0x0);
        gbc.writeMem(0x9018, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8d06, gbc.sp());
        EXPECT(0x901a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9018));
        EXPECT(0xd, gbc.readMem(0x9019));
        // CB 0D 01DE
        gbc.setState(0xeb63, 0xad21, 0x6760, 0xecc9, 0x5469, 0x45a1, 0x1, 0x1);
        gbc.writeMem(0xeb63, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xad21, gbc.sp());
        EXPECT(0xeb65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb63));
        EXPECT(0xd, gbc.readMem(0xeb64));
        // CB 0D 01DF
        gbc.setState(0x94c8, 0xa836, 0xf910, 0x83c3, 0xdc13, 0x228f, 0x1, 0x0);
        gbc.writeMem(0x94c8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa836, gbc.sp());
        EXPECT(0x94ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c8));
        EXPECT(0xd, gbc.readMem(0x94c9));
        // CB 0D 01E0
        gbc.setState(0xa286, 0x1a3, 0xe550, 0xec1c, 0x530e, 0xb715, 0x1, 0x1);
        gbc.writeMem(0xa286, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1a3, gbc.sp());
        EXPECT(0xa288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa286));
        EXPECT(0xd, gbc.readMem(0xa287));
        // CB 0D 01E1
        gbc.setState(0xcf61, 0x676c, 0xee50, 0x6b48, 0xa4c2, 0x9b5, 0x1, 0x1);
        gbc.writeMem(0xcf61, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x676c, gbc.sp());
        EXPECT(0xcf63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf61));
        EXPECT(0xd, gbc.readMem(0xcf62));
        // CB 0D 01E2
        gbc.setState(0xee93, 0x207c, 0x3d60, 0x4c05, 0xd3d7, 0xedfc, 0x0, 0x0);
        gbc.writeMem(0xee93, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x207c, gbc.sp());
        EXPECT(0xee95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee93));
        EXPECT(0xd, gbc.readMem(0xee94));
        // CB 0D 01E3
        gbc.setState(0x350a, 0x4f25, 0xe560, 0x6a4f, 0xf529, 0x70e0, 0x0, 0x1);
        gbc.writeMem(0x350a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4f25, gbc.sp());
        EXPECT(0x350c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01E5
        gbc.setState(0xbe9, 0x4ca6, 0x25e0, 0x503d, 0xa963, 0x3e89, 0x1, 0x0);
        gbc.writeMem(0xbe9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4ca6, gbc.sp());
        EXPECT(0xbeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01E6
        gbc.setState(0x51d6, 0x9c69, 0x5f40, 0x790a, 0x3c80, 0x1e0b, 0x0, 0x1);
        gbc.writeMem(0x51d6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9c69, gbc.sp());
        EXPECT(0x51d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01E7
        gbc.setState(0x9c33, 0x9805, 0xd5a0, 0x7f1e, 0x854a, 0x1c39, 0x1, 0x0);
        gbc.writeMem(0x9c33, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9805, gbc.sp());
        EXPECT(0x9c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c33));
        EXPECT(0xd, gbc.readMem(0x9c34));
        // CB 0D 01E8
        gbc.setState(0xa389, 0x6da3, 0xd010, 0x24e8, 0xd8e7, 0x8e0d, 0x1, 0x0);
        gbc.writeMem(0xa389, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6da3, gbc.sp());
        EXPECT(0xa38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa389));
        EXPECT(0xd, gbc.readMem(0xa38a));
        // CB 0D 01E9
        gbc.setState(0xe616, 0xb93b, 0x4a30, 0xffff, 0x35c0, 0xd195, 0x0, 0x0);
        gbc.writeMem(0xe616, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb93b, gbc.sp());
        EXPECT(0xe618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe616));
        EXPECT(0xd, gbc.readMem(0xe617));
        // CB 0D 01EA
        gbc.setState(0x63e, 0x6c33, 0x3e20, 0xfb7a, 0x1c7d, 0xe9fd, 0x1, 0x1);
        gbc.writeMem(0x63e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6c33, gbc.sp());
        EXPECT(0x640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01EB
        gbc.setState(0xa93c, 0x9e40, 0xeb80, 0x886, 0xe365, 0xce9d, 0x1, 0x0);
        gbc.writeMem(0xa93c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9e40, gbc.sp());
        EXPECT(0xa93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93c));
        EXPECT(0xd, gbc.readMem(0xa93d));
        // CB 0D 01EC
        gbc.setState(0xee2e, 0x69ce, 0x6a20, 0x2fff, 0xc3f9, 0xe337, 0x1, 0x1);
        gbc.writeMem(0xee2e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x69ce, gbc.sp());
        EXPECT(0xee30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2e));
        EXPECT(0xd, gbc.readMem(0xee2f));
        // CB 0D 01ED
        gbc.setState(0x6f81, 0xfc9d, 0x8940, 0x8bf6, 0xd4aa, 0x484e, 0x1, 0x0);
        gbc.writeMem(0x6f81, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfc9d, gbc.sp());
        EXPECT(0x6f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01EE
        gbc.setState(0x3018, 0xe2bb, 0x6b0, 0x5149, 0x28e6, 0xd5e3, 0x1, 0x1);
        gbc.writeMem(0x3018, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe2bb, gbc.sp());
        EXPECT(0x301a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01EF
        gbc.setState(0xc464, 0x2c5c, 0x8170, 0x6002, 0x2d1c, 0xf347, 0x0, 0x0);
        gbc.writeMem(0xc464, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2c5c, gbc.sp());
        EXPECT(0xc466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc464));
        EXPECT(0xd, gbc.readMem(0xc465));
        // CB 0D 01F0
        gbc.setState(0x16a6, 0xafcc, 0xba10, 0xcf19, 0xbd2c, 0xe80b, 0x1, 0x1);
        gbc.writeMem(0x16a6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xafcc, gbc.sp());
        EXPECT(0x16a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01F1
        gbc.setState(0xb8ea, 0x8af1, 0xd1d0, 0xc71d, 0xf623, 0x61e, 0x1, 0x1);
        gbc.writeMem(0xb8ea, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8af1, gbc.sp());
        EXPECT(0xb8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ea));
        EXPECT(0xd, gbc.readMem(0xb8eb));
        // CB 0D 01F2
        gbc.setState(0xafa6, 0xac83, 0x700, 0x83e0, 0xea74, 0x6319, 0x0, 0x1);
        gbc.writeMem(0xafa6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xac83, gbc.sp());
        EXPECT(0xafa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa6));
        EXPECT(0xd, gbc.readMem(0xafa7));
        // CB 0D 01F3
        gbc.setState(0xd2e6, 0x665, 0xd930, 0x962, 0x5ff8, 0x3651, 0x0, 0x1);
        gbc.writeMem(0xd2e6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x665, gbc.sp());
        EXPECT(0xd2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e6));
        EXPECT(0xd, gbc.readMem(0xd2e7));
        // CB 0D 01F4
        gbc.setState(0x3365, 0xe6fc, 0x2820, 0x1887, 0xe41c, 0x211c, 0x0, 0x0);
        gbc.writeMem(0x3365, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe6fc, gbc.sp());
        EXPECT(0x3367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01F5
        gbc.setState(0x3f48, 0xff0d, 0x3510, 0xd69f, 0xbe33, 0x241f, 0x1, 0x1);
        gbc.writeMem(0x3f48, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xff0d, gbc.sp());
        EXPECT(0x3f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01F6
        gbc.setState(0xe55a, 0xdc2c, 0xe8c0, 0x219e, 0x295a, 0x7378, 0x0, 0x1);
        gbc.writeMem(0xe55a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdc2c, gbc.sp());
        EXPECT(0xe55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55a));
        EXPECT(0xd, gbc.readMem(0xe55b));
        // CB 0D 01F7
        gbc.setState(0x31c8, 0x7cb8, 0x2d20, 0x5265, 0xb327, 0xd34e, 0x0, 0x1);
        gbc.writeMem(0x31c8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7cb8, gbc.sp());
        EXPECT(0x31ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01F8
        gbc.setState(0xfc8, 0x325b, 0x7790, 0x1502, 0x53f8, 0x7690, 0x1, 0x1);
        gbc.writeMem(0xfc8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x325b, gbc.sp());
        EXPECT(0xfca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01F9
        gbc.setState(0xed26, 0x5be2, 0xac0, 0xa841, 0xe40c, 0xb32, 0x1, 0x0);
        gbc.writeMem(0xed26, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5be2, gbc.sp());
        EXPECT(0xed28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed26));
        EXPECT(0xd, gbc.readMem(0xed27));
        // CB 0D 01FA
        gbc.setState(0x7d33, 0x16e7, 0x20a0, 0xac50, 0xd74c, 0x655e, 0x1, 0x1);
        gbc.writeMem(0x7d33, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x16e7, gbc.sp());
        EXPECT(0x7d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01FB
        gbc.setState(0x6e7f, 0x9246, 0xf30, 0x32c2, 0xa53e, 0x9c58, 0x1, 0x1);
        gbc.writeMem(0x6e7f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9246, gbc.sp());
        EXPECT(0x6e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 01FC
        gbc.setState(0x4716, 0xa9f8, 0x5770, 0x53ad, 0x49ac, 0x3a61, 0x0, 0x0);
        gbc.writeMem(0x4716, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa9f8, gbc.sp());
        EXPECT(0x4718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01FD
        gbc.setState(0x39f4, 0xa7f9, 0x5010, 0x5cb2, 0xb4b3, 0x2f5b, 0x0, 0x0);
        gbc.writeMem(0x39f4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa7f9, gbc.sp());
        EXPECT(0x39f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01FE
        gbc.setState(0x30df, 0xa954, 0xb980, 0xdb76, 0x2a48, 0xc16f, 0x0, 0x1);
        gbc.writeMem(0x30df, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa954, gbc.sp());
        EXPECT(0x30e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 01FF
        gbc.setState(0xd7f6, 0xa75, 0x1170, 0x43f9, 0x1513, 0xcc3b, 0x1, 0x1);
        gbc.writeMem(0xd7f6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa75, gbc.sp());
        EXPECT(0xd7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f6));
        EXPECT(0xd, gbc.readMem(0xd7f7));
        // CB 0D 0200
        gbc.setState(0x3a70, 0xb18e, 0x8f10, 0xbd66, 0xa71c, 0xb0ad, 0x1, 0x0);
        gbc.writeMem(0x3a70, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb18e, gbc.sp());
        EXPECT(0x3a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0201
        gbc.setState(0x18ee, 0x6a3f, 0x3560, 0xccaf, 0x3741, 0xb883, 0x1, 0x1);
        gbc.writeMem(0x18ee, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6a3f, gbc.sp());
        EXPECT(0x18f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0202
        gbc.setState(0x9d70, 0x8c94, 0xb800, 0x1471, 0x6dce, 0x7d56, 0x1, 0x1);
        gbc.writeMem(0x9d70, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8c94, gbc.sp());
        EXPECT(0x9d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d70));
        EXPECT(0xd, gbc.readMem(0x9d71));
        // CB 0D 0203
        gbc.setState(0xe27e, 0x828f, 0xb390, 0x7c54, 0x2bec, 0xed00, 0x1, 0x1);
        gbc.writeMem(0xe27e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x828f, gbc.sp());
        EXPECT(0xe280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27e));
        EXPECT(0xd, gbc.readMem(0xe27f));
        // CB 0D 0204
        gbc.setState(0x6944, 0xf67c, 0xa680, 0x293d, 0xc381, 0xc800, 0x0, 0x1);
        gbc.writeMem(0x6944, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf67c, gbc.sp());
        EXPECT(0x6946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0205
        gbc.setState(0x6728, 0x6193, 0x9930, 0x58fb, 0xbb88, 0xd9ff, 0x0, 0x0);
        gbc.writeMem(0x6728, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6193, gbc.sp());
        EXPECT(0x672a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0206
        gbc.setState(0xe975, 0x1d1e, 0xc2c0, 0xc83c, 0x131, 0x3858, 0x1, 0x0);
        gbc.writeMem(0xe975, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1d1e, gbc.sp());
        EXPECT(0xe977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe975));
        EXPECT(0xd, gbc.readMem(0xe976));
        // CB 0D 0207
        gbc.setState(0x6c40, 0xee0d, 0xfd60, 0x3a0c, 0x45e4, 0x19fc, 0x1, 0x0);
        gbc.writeMem(0x6c40, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xee0d, gbc.sp());
        EXPECT(0x6c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0208
        gbc.setState(0xa96f, 0x405f, 0x7de0, 0x56ee, 0xe134, 0x3f86, 0x0, 0x0);
        gbc.writeMem(0xa96f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x405f, gbc.sp());
        EXPECT(0xa971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96f));
        EXPECT(0xd, gbc.readMem(0xa970));
        // CB 0D 0209
        gbc.setState(0x5f5, 0xdc84, 0xca00, 0x5d66, 0x76f6, 0x819b, 0x1, 0x1);
        gbc.writeMem(0x5f5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdc84, gbc.sp());
        EXPECT(0x5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 020A
        gbc.setState(0xde63, 0xfd19, 0xb000, 0x3b4a, 0x8f23, 0x31d8, 0x0, 0x1);
        gbc.writeMem(0xde63, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfd19, gbc.sp());
        EXPECT(0xde65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde63));
        EXPECT(0xd, gbc.readMem(0xde64));
        // CB 0D 020B
        gbc.setState(0x611c, 0xd7fa, 0x9e30, 0x837e, 0xa9d1, 0xea96, 0x0, 0x0);
        gbc.writeMem(0x611c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd7fa, gbc.sp());
        EXPECT(0x611e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 020C
        gbc.setState(0x2bd0, 0xc223, 0x39f0, 0xcc28, 0xb2bb, 0x51cb, 0x0, 0x1);
        gbc.writeMem(0x2bd0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc223, gbc.sp());
        EXPECT(0x2bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 020D
        gbc.setState(0x126c, 0xb177, 0xbca0, 0x8c4d, 0x28e, 0x97ca, 0x0, 0x0);
        gbc.writeMem(0x126c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb177, gbc.sp());
        EXPECT(0x126e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 020E
        gbc.setState(0x353e, 0x4181, 0x1350, 0x8d3a, 0x60ff, 0x99d0, 0x0, 0x1);
        gbc.writeMem(0x353e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4181, gbc.sp());
        EXPECT(0x3540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 020F
        gbc.setState(0x8476, 0x57ac, 0xa5b0, 0xc2e7, 0x8fd1, 0x563a, 0x1, 0x0);
        gbc.writeMem(0x8476, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x57ac, gbc.sp());
        EXPECT(0x8478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8476));
        EXPECT(0xd, gbc.readMem(0x8477));
        // CB 0D 0210
        gbc.setState(0x5042, 0x3e01, 0x46b0, 0x73e0, 0x5399, 0xccb7, 0x0, 0x1);
        gbc.writeMem(0x5042, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3e01, gbc.sp());
        EXPECT(0x5044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0211
        gbc.setState(0x72bb, 0x8dd2, 0x4690, 0xb491, 0x9456, 0xa3ad, 0x1, 0x1);
        gbc.writeMem(0x72bb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8dd2, gbc.sp());
        EXPECT(0x72bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0212
        gbc.setState(0xc2f7, 0xf793, 0xd330, 0xa117, 0xaa03, 0x8898, 0x0, 0x1);
        gbc.writeMem(0xc2f7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf793, gbc.sp());
        EXPECT(0xc2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f7));
        EXPECT(0xd, gbc.readMem(0xc2f8));
        // CB 0D 0213
        gbc.setState(0x713, 0x4147, 0x4bf0, 0x3a6, 0xb8, 0xb138, 0x0, 0x1);
        gbc.writeMem(0x713, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4147, gbc.sp());
        EXPECT(0x715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0214
        gbc.setState(0x6666, 0x39, 0x8640, 0x1153, 0x1742, 0xedf0, 0x1, 0x1);
        gbc.writeMem(0x6666, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x39, gbc.sp());
        EXPECT(0x6668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0215
        gbc.setState(0x618d, 0x7547, 0x4d40, 0x9c8f, 0x7ea0, 0xe23e, 0x1, 0x0);
        gbc.writeMem(0x618d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7547, gbc.sp());
        EXPECT(0x618f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0216
        gbc.setState(0x44f6, 0x2110, 0x4a10, 0x2e7f, 0x7fba, 0x956e, 0x1, 0x1);
        gbc.writeMem(0x44f6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2110, gbc.sp());
        EXPECT(0x44f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0217
        gbc.setState(0x9aa8, 0x72c8, 0xdb90, 0xc4f7, 0x43b7, 0x9655, 0x1, 0x0);
        gbc.writeMem(0x9aa8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x72c8, gbc.sp());
        EXPECT(0x9aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa8));
        EXPECT(0xd, gbc.readMem(0x9aa9));
        // CB 0D 0218
        gbc.setState(0x9f4, 0xdeba, 0x1eb0, 0x3d59, 0x2559, 0x2e70, 0x0, 0x1);
        gbc.writeMem(0x9f4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdeba, gbc.sp());
        EXPECT(0x9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0219
        gbc.setState(0x4573, 0x2a7f, 0x3f20, 0xac15, 0x6e84, 0x7e4b, 0x1, 0x0);
        gbc.writeMem(0x4573, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0x4575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 021A
        gbc.setState(0xabd4, 0x398e, 0x59a0, 0xef7a, 0x27f2, 0xc9f8, 0x1, 0x1);
        gbc.writeMem(0xabd4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x398e, gbc.sp());
        EXPECT(0xabd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd4));
        EXPECT(0xd, gbc.readMem(0xabd5));
        // CB 0D 021B
        gbc.setState(0x604a, 0xe8de, 0x970, 0x2146, 0x46f1, 0xe396, 0x0, 0x0);
        gbc.writeMem(0x604a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe8de, gbc.sp());
        EXPECT(0x604c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 021C
        gbc.setState(0x7880, 0xdd6e, 0xf380, 0x441c, 0xc19f, 0x3434, 0x1, 0x1);
        gbc.writeMem(0x7880, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdd6e, gbc.sp());
        EXPECT(0x7882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 021D
        gbc.setState(0x11b9, 0x5302, 0x61c0, 0x8138, 0x7cfc, 0xf58c, 0x0, 0x0);
        gbc.writeMem(0x11b9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5302, gbc.sp());
        EXPECT(0x11bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 021E
        gbc.setState(0x61f7, 0xdf1e, 0x8dc0, 0x69c3, 0x5d1c, 0x5a21, 0x1, 0x0);
        gbc.writeMem(0x61f7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdf1e, gbc.sp());
        EXPECT(0x61f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 021F
        gbc.setState(0xa41a, 0x8b5a, 0x70, 0x8a1e, 0x5575, 0x5d9f, 0x0, 0x1);
        gbc.writeMem(0xa41a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8b5a, gbc.sp());
        EXPECT(0xa41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41a));
        EXPECT(0xd, gbc.readMem(0xa41b));
        // CB 0D 0220
        gbc.setState(0x4c16, 0xddb2, 0xe460, 0xae52, 0xfaac, 0x119c, 0x0, 0x0);
        gbc.writeMem(0x4c16, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xddb2, gbc.sp());
        EXPECT(0x4c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0221
        gbc.setState(0xc2dc, 0x2410, 0x9b00, 0xf62, 0x3a55, 0x79b6, 0x0, 0x0);
        gbc.writeMem(0xc2dc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2410, gbc.sp());
        EXPECT(0xc2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2dc));
        EXPECT(0xd, gbc.readMem(0xc2dd));
        // CB 0D 0222
        gbc.setState(0x86a4, 0x8b34, 0xffc0, 0xa3c7, 0xcf03, 0xf137, 0x0, 0x1);
        gbc.writeMem(0x86a4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8b34, gbc.sp());
        EXPECT(0x86a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a4));
        EXPECT(0xd, gbc.readMem(0x86a5));
        // CB 0D 0223
        gbc.setState(0x4e1f, 0x7d63, 0x7210, 0xc499, 0x5176, 0x7793, 0x1, 0x0);
        gbc.writeMem(0x4e1f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7d63, gbc.sp());
        EXPECT(0x4e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0224
        gbc.setState(0x1fc5, 0xd3f2, 0xaf20, 0x8291, 0x827d, 0x7066, 0x1, 0x1);
        gbc.writeMem(0x1fc5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd3f2, gbc.sp());
        EXPECT(0x1fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0225
        gbc.setState(0xa6fc, 0xd619, 0x4920, 0xc02b, 0x6fb7, 0x8100, 0x1, 0x1);
        gbc.writeMem(0xa6fc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd619, gbc.sp());
        EXPECT(0xa6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fc));
        EXPECT(0xd, gbc.readMem(0xa6fd));
        // CB 0D 0226
        gbc.setState(0xe908, 0xef68, 0x9500, 0x922a, 0x50d3, 0x6e13, 0x0, 0x1);
        gbc.writeMem(0xe908, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xef68, gbc.sp());
        EXPECT(0xe90a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe908));
        EXPECT(0xd, gbc.readMem(0xe909));
        // CB 0D 0227
        gbc.setState(0x9958, 0x32e0, 0x1830, 0x8970, 0xf2a3, 0x368c, 0x1, 0x1);
        gbc.writeMem(0x9958, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x32e0, gbc.sp());
        EXPECT(0x995a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9958));
        EXPECT(0xd, gbc.readMem(0x9959));
        // CB 0D 0228
        gbc.setState(0x6132, 0x8087, 0x5e70, 0x5182, 0x7f0b, 0xf26d, 0x0, 0x0);
        gbc.writeMem(0x6132, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8087, gbc.sp());
        EXPECT(0x6134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0229
        gbc.setState(0x3a83, 0x7d8d, 0x820, 0xb7d5, 0xc87, 0xa8e9, 0x1, 0x0);
        gbc.writeMem(0x3a83, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7d8d, gbc.sp());
        EXPECT(0x3a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 022A
        gbc.setState(0x4f99, 0x9c20, 0x7d80, 0x55a5, 0x4526, 0x5f80, 0x1, 0x0);
        gbc.writeMem(0x4f99, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9c20, gbc.sp());
        EXPECT(0x4f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 022B
        gbc.setState(0x50d3, 0x7b08, 0xa780, 0x1b11, 0x9d64, 0xf69a, 0x0, 0x1);
        gbc.writeMem(0x50d3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7b08, gbc.sp());
        EXPECT(0x50d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 022C
        gbc.setState(0x1598, 0x86bb, 0xb1f0, 0xf349, 0xca12, 0x9ed4, 0x1, 0x1);
        gbc.writeMem(0x1598, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x86bb, gbc.sp());
        EXPECT(0x159a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 022D
        gbc.setState(0xdc93, 0x19f6, 0xcfb0, 0x9330, 0x2347, 0xf3f0, 0x0, 0x0);
        gbc.writeMem(0xdc93, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x19f6, gbc.sp());
        EXPECT(0xdc95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc93));
        EXPECT(0xd, gbc.readMem(0xdc94));
        // CB 0D 022E
        gbc.setState(0x3cfa, 0xf688, 0xdfc0, 0xba66, 0xc741, 0x50e9, 0x0, 0x1);
        gbc.writeMem(0x3cfa, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf688, gbc.sp());
        EXPECT(0x3cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0230
        gbc.setState(0xbc8e, 0x14f7, 0x8b60, 0x31ec, 0x1527, 0x1b4a, 0x1, 0x1);
        gbc.writeMem(0xbc8e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x14f7, gbc.sp());
        EXPECT(0xbc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8e));
        EXPECT(0xd, gbc.readMem(0xbc8f));
        // CB 0D 0231
        gbc.setState(0x178, 0x2476, 0x8100, 0x5086, 0x6d03, 0x7dc7, 0x0, 0x0);
        gbc.writeMem(0x178, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2476, gbc.sp());
        EXPECT(0x17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0232
        gbc.setState(0xd08f, 0xdd3c, 0x9720, 0xbfbd, 0x6437, 0xbb18, 0x0, 0x1);
        gbc.writeMem(0xd08f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdd3c, gbc.sp());
        EXPECT(0xd091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08f));
        EXPECT(0xd, gbc.readMem(0xd090));
        // CB 0D 0233
        gbc.setState(0xc69f, 0xfc03, 0x9cf0, 0x2d81, 0xbbc, 0xabb5, 0x0, 0x1);
        gbc.writeMem(0xc69f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfc03, gbc.sp());
        EXPECT(0xc6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc69f));
        EXPECT(0xd, gbc.readMem(0xc6a0));
        // CB 0D 0234
        gbc.setState(0x49b4, 0x3ad5, 0x1100, 0xaa9f, 0xb3a0, 0x2b24, 0x0, 0x0);
        gbc.writeMem(0x49b4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3ad5, gbc.sp());
        EXPECT(0x49b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0235
        gbc.setState(0x275a, 0x55b9, 0x9bb0, 0x7314, 0x240c, 0xea51, 0x1, 0x1);
        gbc.writeMem(0x275a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x55b9, gbc.sp());
        EXPECT(0x275c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0237
        gbc.setState(0x6757, 0xfd94, 0x7f10, 0x6035, 0xed9, 0xc662, 0x0, 0x1);
        gbc.writeMem(0x6757, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfd94, gbc.sp());
        EXPECT(0x6759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0238
        gbc.setState(0xad23, 0xf7e0, 0x3a90, 0x3ed3, 0x8fa4, 0x5460, 0x0, 0x1);
        gbc.writeMem(0xad23, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf7e0, gbc.sp());
        EXPECT(0xad25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad23));
        EXPECT(0xd, gbc.readMem(0xad24));
        // CB 0D 0239
        gbc.setState(0x43ea, 0xbd7e, 0xcd50, 0xb7ed, 0xbbbf, 0x80f0, 0x1, 0x0);
        gbc.writeMem(0x43ea, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbd7e, gbc.sp());
        EXPECT(0x43ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 023A
        gbc.setState(0xd171, 0xf33e, 0x8720, 0xe6d1, 0x334c, 0xa428, 0x0, 0x1);
        gbc.writeMem(0xd171, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf33e, gbc.sp());
        EXPECT(0xd173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd171));
        EXPECT(0xd, gbc.readMem(0xd172));
        // CB 0D 023B
        gbc.setState(0x56e3, 0x7d45, 0xa6f0, 0xadd5, 0x6b2b, 0xe100, 0x0, 0x0);
        gbc.writeMem(0x56e3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7d45, gbc.sp());
        EXPECT(0x56e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 023C
        gbc.setState(0x1e9c, 0xd84, 0x23c0, 0x9989, 0x681d, 0x99d7, 0x1, 0x0);
        gbc.writeMem(0x1e9c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd84, gbc.sp());
        EXPECT(0x1e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 023D
        gbc.setState(0x1b70, 0x125a, 0x8bf0, 0xe2a3, 0x7a2a, 0x772, 0x0, 0x1);
        gbc.writeMem(0x1b70, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x125a, gbc.sp());
        EXPECT(0x1b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 023E
        gbc.setState(0x1ded, 0xdcc3, 0x350, 0x7245, 0x616, 0xfba4, 0x0, 0x0);
        gbc.writeMem(0x1ded, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdcc3, gbc.sp());
        EXPECT(0x1def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 023F
        gbc.setState(0xba6a, 0x345d, 0xb50, 0xc317, 0x8d48, 0xfdd6, 0x0, 0x0);
        gbc.writeMem(0xba6a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x345d, gbc.sp());
        EXPECT(0xba6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6a));
        EXPECT(0xd, gbc.readMem(0xba6b));
        // CB 0D 0240
        gbc.setState(0x8b8, 0x437a, 0x7630, 0xf7fd, 0x3375, 0x600b, 0x1, 0x1);
        gbc.writeMem(0x8b8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x437a, gbc.sp());
        EXPECT(0x8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0241
        gbc.setState(0x84, 0xa188, 0x84f0, 0xac61, 0x157b, 0x9f61, 0x0, 0x0);
        gbc.writeMem(0x84, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa188, gbc.sp());
        EXPECT(0x86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0242
        gbc.setState(0xe18d, 0xc13d, 0x7bf0, 0x7a08, 0xf5de, 0xa015, 0x1, 0x0);
        gbc.writeMem(0xe18d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc13d, gbc.sp());
        EXPECT(0xe18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18d));
        EXPECT(0xd, gbc.readMem(0xe18e));
        // CB 0D 0243
        gbc.setState(0xd1e, 0xd56b, 0xab70, 0x4b0f, 0x2f5a, 0xb805, 0x1, 0x0);
        gbc.writeMem(0xd1e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd56b, gbc.sp());
        EXPECT(0xd20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0244
        gbc.setState(0x856a, 0x637a, 0xa120, 0xe00a, 0x5b8d, 0xc5d2, 0x0, 0x0);
        gbc.writeMem(0x856a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x637a, gbc.sp());
        EXPECT(0x856c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856a));
        EXPECT(0xd, gbc.readMem(0x856b));
        // CB 0D 0245
        gbc.setState(0x53f7, 0x7952, 0x2700, 0x6b02, 0xac0d, 0x649d, 0x0, 0x1);
        gbc.writeMem(0x53f7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7952, gbc.sp());
        EXPECT(0x53f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0246
        gbc.setState(0xd6, 0x438, 0x66a0, 0xb35f, 0x8680, 0xf2f1, 0x1, 0x1);
        gbc.writeMem(0xd6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x438, gbc.sp());
        EXPECT(0xd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0247
        gbc.setState(0x73cc, 0xbe0d, 0xa840, 0x4516, 0x2f8d, 0xf7b1, 0x0, 0x1);
        gbc.writeMem(0x73cc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbe0d, gbc.sp());
        EXPECT(0x73ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0248
        gbc.setState(0x141, 0x8049, 0x32c0, 0x542a, 0xd449, 0x475f, 0x1, 0x1);
        gbc.writeMem(0x141, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8049, gbc.sp());
        EXPECT(0x143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0249
        gbc.setState(0xc8a8, 0x973c, 0xc600, 0xe138, 0x172d, 0x381d, 0x1, 0x1);
        gbc.writeMem(0xc8a8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x973c, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a8));
        EXPECT(0xd, gbc.readMem(0xc8a9));
        // CB 0D 024A
        gbc.setState(0xb8ab, 0x27fb, 0x9580, 0x7f6, 0x11a4, 0x4162, 0x0, 0x1);
        gbc.writeMem(0xb8ab, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x27fb, gbc.sp());
        EXPECT(0xb8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ab));
        EXPECT(0xd, gbc.readMem(0xb8ac));
        // CB 0D 024B
        gbc.setState(0x9962, 0x7026, 0xa380, 0xda41, 0x557a, 0x7ada, 0x1, 0x1);
        gbc.writeMem(0x9962, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7026, gbc.sp());
        EXPECT(0x9964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9962));
        EXPECT(0xd, gbc.readMem(0x9963));
        // CB 0D 024C
        gbc.setState(0x3cfb, 0x636d, 0xd030, 0x974b, 0xe26f, 0x3fa5, 0x1, 0x1);
        gbc.writeMem(0x3cfb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x636d, gbc.sp());
        EXPECT(0x3cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 024D
        gbc.setState(0xa2c0, 0xc39, 0xbd10, 0xa8b3, 0x9cb5, 0x510b, 0x0, 0x0);
        gbc.writeMem(0xa2c0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc39, gbc.sp());
        EXPECT(0xa2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c0));
        EXPECT(0xd, gbc.readMem(0xa2c1));
        // CB 0D 024E
        gbc.setState(0xbe98, 0xcc0d, 0x6e40, 0xa0ad, 0x2aaa, 0x73ad, 0x0, 0x0);
        gbc.writeMem(0xbe98, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcc0d, gbc.sp());
        EXPECT(0xbe9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe98));
        EXPECT(0xd, gbc.readMem(0xbe99));
        // CB 0D 024F
        gbc.setState(0xa3bf, 0x6b2a, 0xe7c0, 0x6145, 0x97c1, 0x7a27, 0x1, 0x1);
        gbc.writeMem(0xa3bf, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6b2a, gbc.sp());
        EXPECT(0xa3c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3bf));
        EXPECT(0xd, gbc.readMem(0xa3c0));
        // CB 0D 0250
        gbc.setState(0xae36, 0xa406, 0xb050, 0xdf83, 0x2766, 0xf63c, 0x0, 0x1);
        gbc.writeMem(0xae36, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa406, gbc.sp());
        EXPECT(0xae38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae36));
        EXPECT(0xd, gbc.readMem(0xae37));
        // CB 0D 0251
        gbc.setState(0x2689, 0x4421, 0x4170, 0x45bf, 0x3082, 0x3c71, 0x1, 0x0);
        gbc.writeMem(0x2689, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4421, gbc.sp());
        EXPECT(0x268b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0252
        gbc.setState(0x3104, 0xa1ad, 0x4690, 0x814, 0xf0ef, 0x5e8a, 0x1, 0x1);
        gbc.writeMem(0x3104, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa1ad, gbc.sp());
        EXPECT(0x3106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0253
        gbc.setState(0x9e0f, 0xf6eb, 0x81d0, 0x7d0a, 0xd2cd, 0x8849, 0x0, 0x0);
        gbc.writeMem(0x9e0f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf6eb, gbc.sp());
        EXPECT(0x9e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0f));
        EXPECT(0xd, gbc.readMem(0x9e10));
        // CB 0D 0254
        gbc.setState(0x8c32, 0x598e, 0x5050, 0x9bea, 0xbaeb, 0x6b07, 0x0, 0x0);
        gbc.writeMem(0x8c32, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x598e, gbc.sp());
        EXPECT(0x8c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c32));
        EXPECT(0xd, gbc.readMem(0x8c33));
        // CB 0D 0255
        gbc.setState(0x394e, 0xd59d, 0x75e0, 0xaf50, 0xb013, 0x12b9, 0x0, 0x1);
        gbc.writeMem(0x394e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd59d, gbc.sp());
        EXPECT(0x3950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0256
        gbc.setState(0x3574, 0x1bcb, 0x18b0, 0x2a69, 0x3fd2, 0x993d, 0x0, 0x1);
        gbc.writeMem(0x3574, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1bcb, gbc.sp());
        EXPECT(0x3576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0257
        gbc.setState(0x7dd2, 0x4329, 0x2a40, 0x3ee1, 0xd6e1, 0xb57b, 0x1, 0x0);
        gbc.writeMem(0x7dd2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4329, gbc.sp());
        EXPECT(0x7dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0258
        gbc.setState(0xd59, 0xc459, 0x2700, 0x4067, 0x63aa, 0x125, 0x1, 0x0);
        gbc.writeMem(0xd59, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc459, gbc.sp());
        EXPECT(0xd5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0259
        gbc.setState(0xdde4, 0x5a3e, 0x2b00, 0x4f23, 0x9759, 0xbf3a, 0x0, 0x0);
        gbc.writeMem(0xdde4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5a3e, gbc.sp());
        EXPECT(0xdde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde4));
        EXPECT(0xd, gbc.readMem(0xdde5));
        // CB 0D 025A
        gbc.setState(0x5ba9, 0xe588, 0x3c10, 0x1332, 0x9d81, 0xd09, 0x0, 0x0);
        gbc.writeMem(0x5ba9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe588, gbc.sp());
        EXPECT(0x5bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 025B
        gbc.setState(0x9696, 0xaf6c, 0x83d0, 0xa235, 0x14d8, 0x3958, 0x0, 0x0);
        gbc.writeMem(0x9696, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xaf6c, gbc.sp());
        EXPECT(0x9698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9696));
        EXPECT(0xd, gbc.readMem(0x9697));
        // CB 0D 025C
        gbc.setState(0xe04e, 0x5d4f, 0xdf80, 0x8020, 0x544b, 0x1cba, 0x0, 0x1);
        gbc.writeMem(0xe04e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5d4f, gbc.sp());
        EXPECT(0xe050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04e));
        EXPECT(0xd, gbc.readMem(0xe04f));
        // CB 0D 025D
        gbc.setState(0x6c49, 0x3adb, 0x5e0, 0x5fbd, 0xd620, 0xb17a, 0x0, 0x0);
        gbc.writeMem(0x6c49, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3adb, gbc.sp());
        EXPECT(0x6c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 025F
        gbc.setState(0x6161, 0x2959, 0xbe40, 0x6bb6, 0xf3a4, 0x63ec, 0x1, 0x1);
        gbc.writeMem(0x6161, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2959, gbc.sp());
        EXPECT(0x6163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0260
        gbc.setState(0x3627, 0x635d, 0xbe40, 0xb236, 0x994b, 0x4104, 0x0, 0x0);
        gbc.writeMem(0x3627, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x635d, gbc.sp());
        EXPECT(0x3629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0261
        gbc.setState(0x30fc, 0x190e, 0x9af0, 0x92a, 0xb6a0, 0x5e6c, 0x1, 0x0);
        gbc.writeMem(0x30fc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x190e, gbc.sp());
        EXPECT(0x30fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0263
        gbc.setState(0xc499, 0x5968, 0x880, 0x9171, 0xb46e, 0x58ad, 0x1, 0x0);
        gbc.writeMem(0xc499, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5968, gbc.sp());
        EXPECT(0xc49b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc499));
        EXPECT(0xd, gbc.readMem(0xc49a));
        // CB 0D 0264
        gbc.setState(0x1b01, 0x67e2, 0xd550, 0x4375, 0x1330, 0xc0e9, 0x1, 0x1);
        gbc.writeMem(0x1b01, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x67e2, gbc.sp());
        EXPECT(0x1b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0265
        gbc.setState(0x785e, 0xa300, 0x35b0, 0x79e2, 0x8828, 0xd31, 0x0, 0x0);
        gbc.writeMem(0x785e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa300, gbc.sp());
        EXPECT(0x7860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0266
        gbc.setState(0xd590, 0x6ab7, 0x24b0, 0x4226, 0x7d6, 0x5b66, 0x1, 0x1);
        gbc.writeMem(0xd590, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6ab7, gbc.sp());
        EXPECT(0xd592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd590));
        EXPECT(0xd, gbc.readMem(0xd591));
        // CB 0D 0267
        gbc.setState(0xb4c9, 0x6f0a, 0xe580, 0xfd47, 0x4f31, 0xb9dd, 0x1, 0x0);
        gbc.writeMem(0xb4c9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6f0a, gbc.sp());
        EXPECT(0xb4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c9));
        EXPECT(0xd, gbc.readMem(0xb4ca));
        // CB 0D 0268
        gbc.setState(0x11cd, 0x4209, 0xf1e0, 0x5107, 0x2ea1, 0xe576, 0x0, 0x0);
        gbc.writeMem(0x11cd, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4209, gbc.sp());
        EXPECT(0x11cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0269
        gbc.setState(0xa6db, 0xdab, 0x1810, 0x17ce, 0x2766, 0xb893, 0x0, 0x1);
        gbc.writeMem(0xa6db, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0xa6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6db));
        EXPECT(0xd, gbc.readMem(0xa6dc));
        // CB 0D 026A
        gbc.setState(0x67, 0x7651, 0xae90, 0xe39b, 0xb0d1, 0x2000, 0x1, 0x1);
        gbc.writeMem(0x67, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7651, gbc.sp());
        EXPECT(0x69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 026C
        gbc.setState(0xcc15, 0xf10, 0xf690, 0x3c1f, 0xb9a2, 0xdf8b, 0x1, 0x1);
        gbc.writeMem(0xcc15, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf10, gbc.sp());
        EXPECT(0xcc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc15));
        EXPECT(0xd, gbc.readMem(0xcc16));
        // CB 0D 026D
        gbc.setState(0x85fa, 0x148f, 0x2b10, 0xf20c, 0x171d, 0x27c7, 0x1, 0x1);
        gbc.writeMem(0x85fa, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x148f, gbc.sp());
        EXPECT(0x85fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fa));
        EXPECT(0xd, gbc.readMem(0x85fb));
        // CB 0D 026E
        gbc.setState(0x6927, 0x4f44, 0x9710, 0x56f9, 0x3d6b, 0x89a6, 0x1, 0x0);
        gbc.writeMem(0x6927, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4f44, gbc.sp());
        EXPECT(0x6929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 026F
        gbc.setState(0xa4c3, 0x2da4, 0xb740, 0xf3c2, 0x90f7, 0x4ed2, 0x1, 0x1);
        gbc.writeMem(0xa4c3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2da4, gbc.sp());
        EXPECT(0xa4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c3));
        EXPECT(0xd, gbc.readMem(0xa4c4));
        // CB 0D 0270
        gbc.setState(0x670b, 0x7bd2, 0xb340, 0xbd1d, 0xc00e, 0x41d9, 0x1, 0x0);
        gbc.writeMem(0x670b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7bd2, gbc.sp());
        EXPECT(0x670d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0271
        gbc.setState(0x3a25, 0x9f99, 0xe3b0, 0xcdfa, 0x5a22, 0xa357, 0x0, 0x1);
        gbc.writeMem(0x3a25, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9f99, gbc.sp());
        EXPECT(0x3a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0272
        gbc.setState(0xdee8, 0xd912, 0x4620, 0xb829, 0xfaa0, 0xaae0, 0x0, 0x0);
        gbc.writeMem(0xdee8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd912, gbc.sp());
        EXPECT(0xdeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee8));
        EXPECT(0xd, gbc.readMem(0xdee9));
        // CB 0D 0273
        gbc.setState(0x6097, 0xf03d, 0xbb90, 0xaef5, 0x8ee6, 0x2122, 0x1, 0x0);
        gbc.writeMem(0x6097, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf03d, gbc.sp());
        EXPECT(0x6099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0274
        gbc.setState(0xa49b, 0xfb6a, 0x66a0, 0x1eeb, 0x47de, 0xd512, 0x0, 0x1);
        gbc.writeMem(0xa49b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfb6a, gbc.sp());
        EXPECT(0xa49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49b));
        EXPECT(0xd, gbc.readMem(0xa49c));
        // CB 0D 0275
        gbc.setState(0x2375, 0xa907, 0x7670, 0xd538, 0xbde1, 0x123c, 0x0, 0x0);
        gbc.writeMem(0x2375, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa907, gbc.sp());
        EXPECT(0x2377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0276
        gbc.setState(0xc47e, 0x18d4, 0x74c0, 0xb1ae, 0x2dc2, 0x517d, 0x1, 0x1);
        gbc.writeMem(0xc47e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x18d4, gbc.sp());
        EXPECT(0xc480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47e));
        EXPECT(0xd, gbc.readMem(0xc47f));
        // CB 0D 0277
        gbc.setState(0xd7d8, 0x5c50, 0x21a0, 0x8d71, 0xc25e, 0x6756, 0x1, 0x1);
        gbc.writeMem(0xd7d8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5c50, gbc.sp());
        EXPECT(0xd7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d8));
        EXPECT(0xd, gbc.readMem(0xd7d9));
        // CB 0D 0279
        gbc.setState(0xa3cf, 0xb385, 0x58b0, 0xd942, 0x9096, 0xad7f, 0x0, 0x1);
        gbc.writeMem(0xa3cf, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb385, gbc.sp());
        EXPECT(0xa3d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3cf));
        EXPECT(0xd, gbc.readMem(0xa3d0));
        // CB 0D 027A
        gbc.setState(0x947f, 0xf3ec, 0x8c00, 0xa58e, 0xdd27, 0x7eda, 0x0, 0x1);
        gbc.writeMem(0x947f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0x9481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947f));
        EXPECT(0xd, gbc.readMem(0x9480));
        // CB 0D 027B
        gbc.setState(0x426d, 0xde8, 0x6eb0, 0x878d, 0x58ed, 0x43f5, 0x1, 0x1);
        gbc.writeMem(0x426d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xde8, gbc.sp());
        EXPECT(0x426f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 027C
        gbc.setState(0x3a99, 0x56f9, 0x4000, 0x5439, 0xcd00, 0x4416, 0x0, 0x1);
        gbc.writeMem(0x3a99, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x56f9, gbc.sp());
        EXPECT(0x3a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 027D
        gbc.setState(0xac81, 0x29ac, 0x72b0, 0x2089, 0xb128, 0x7542, 0x1, 0x0);
        gbc.writeMem(0xac81, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x29ac, gbc.sp());
        EXPECT(0xac83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac81));
        EXPECT(0xd, gbc.readMem(0xac82));
        // CB 0D 027E
        gbc.setState(0x2978, 0x20bd, 0x3ac0, 0xce81, 0xc339, 0x9134, 0x0, 0x0);
        gbc.writeMem(0x2978, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x20bd, gbc.sp());
        EXPECT(0x297a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 027F
        gbc.setState(0x1c8a, 0x87ed, 0xf700, 0x7243, 0x106f, 0x96e5, 0x0, 0x0);
        gbc.writeMem(0x1c8a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x87ed, gbc.sp());
        EXPECT(0x1c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0280
        gbc.setState(0xd8a1, 0x7779, 0x2200, 0x3d5c, 0xda0f, 0x563c, 0x0, 0x1);
        gbc.writeMem(0xd8a1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7779, gbc.sp());
        EXPECT(0xd8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a1));
        EXPECT(0xd, gbc.readMem(0xd8a2));
        // CB 0D 0281
        gbc.setState(0x7239, 0xcb70, 0x24e0, 0xc7e8, 0x8cbb, 0x3f78, 0x0, 0x1);
        gbc.writeMem(0x7239, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcb70, gbc.sp());
        EXPECT(0x723b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0282
        gbc.setState(0x44d3, 0x9b25, 0xc540, 0xf7f1, 0x4ecd, 0xc8b4, 0x0, 0x0);
        gbc.writeMem(0x44d3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9b25, gbc.sp());
        EXPECT(0x44d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0283
        gbc.setState(0xbb4d, 0xa014, 0xd4c0, 0xae96, 0x3345, 0xe25a, 0x0, 0x1);
        gbc.writeMem(0xbb4d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa014, gbc.sp());
        EXPECT(0xbb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4d));
        EXPECT(0xd, gbc.readMem(0xbb4e));
        // CB 0D 0284
        gbc.setState(0xdf5e, 0xb4c2, 0xc70, 0x2bdb, 0x2fe9, 0x651d, 0x0, 0x0);
        gbc.writeMem(0xdf5e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb4c2, gbc.sp());
        EXPECT(0xdf60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5e));
        EXPECT(0xd, gbc.readMem(0xdf5f));
        // CB 0D 0285
        gbc.setState(0x1c51, 0x732b, 0x4320, 0x43e5, 0x5498, 0xe170, 0x0, 0x1);
        gbc.writeMem(0x1c51, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x732b, gbc.sp());
        EXPECT(0x1c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0286
        gbc.setState(0xa247, 0x8144, 0xde0, 0x3e63, 0xb807, 0xc68c, 0x1, 0x1);
        gbc.writeMem(0xa247, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8144, gbc.sp());
        EXPECT(0xa249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa247));
        EXPECT(0xd, gbc.readMem(0xa248));
        // CB 0D 0287
        gbc.setState(0xc78d, 0x2891, 0x8bc0, 0xa836, 0xea03, 0xbc4, 0x0, 0x0);
        gbc.writeMem(0xc78d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2891, gbc.sp());
        EXPECT(0xc78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78d));
        EXPECT(0xd, gbc.readMem(0xc78e));
        // CB 0D 0288
        gbc.setState(0xb40a, 0xd465, 0xc7b0, 0x2f4b, 0x65c1, 0x5623, 0x0, 0x1);
        gbc.writeMem(0xb40a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd465, gbc.sp());
        EXPECT(0xb40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40a));
        EXPECT(0xd, gbc.readMem(0xb40b));
        // CB 0D 0289
        gbc.setState(0x49a0, 0xbdb, 0xc7b0, 0x6039, 0x894c, 0xdd15, 0x0, 0x0);
        gbc.writeMem(0x49a0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbdb, gbc.sp());
        EXPECT(0x49a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 028A
        gbc.setState(0xc7d1, 0xe941, 0x88f0, 0xb011, 0xaae7, 0x127, 0x1, 0x1);
        gbc.writeMem(0xc7d1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe941, gbc.sp());
        EXPECT(0xc7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d1));
        EXPECT(0xd, gbc.readMem(0xc7d2));
        // CB 0D 028B
        gbc.setState(0x1f6, 0x43a5, 0x4110, 0x1a14, 0xd2da, 0xda42, 0x1, 0x0);
        gbc.writeMem(0x1f6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x43a5, gbc.sp());
        EXPECT(0x1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 028C
        gbc.setState(0xb18f, 0x4e89, 0x440, 0xb633, 0x5c60, 0xf299, 0x1, 0x0);
        gbc.writeMem(0xb18f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4e89, gbc.sp());
        EXPECT(0xb191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18f));
        EXPECT(0xd, gbc.readMem(0xb190));
        // CB 0D 028E
        gbc.setState(0x4eab, 0x26e3, 0xb7d0, 0xe5cc, 0x97d2, 0xafbb, 0x1, 0x1);
        gbc.writeMem(0x4eab, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x26e3, gbc.sp());
        EXPECT(0x4ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 028F
        gbc.setState(0x5ef, 0x386a, 0xbc40, 0x4371, 0x3e8, 0x845a, 0x0, 0x1);
        gbc.writeMem(0x5ef, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x386a, gbc.sp());
        EXPECT(0x5f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0290
        gbc.setState(0x7ce1, 0x9e4f, 0x1180, 0x23c8, 0x5ca9, 0x41b4, 0x0, 0x1);
        gbc.writeMem(0x7ce1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9e4f, gbc.sp());
        EXPECT(0x7ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0291
        gbc.setState(0xef66, 0x1e45, 0x3490, 0x37d, 0xdd8f, 0x265b, 0x1, 0x1);
        gbc.writeMem(0xef66, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1e45, gbc.sp());
        EXPECT(0xef68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef66));
        EXPECT(0xd, gbc.readMem(0xef67));
        // CB 0D 0292
        gbc.setState(0x1dc4, 0xe86f, 0x83a0, 0x8fce, 0x3895, 0xa4b1, 0x1, 0x1);
        gbc.writeMem(0x1dc4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe86f, gbc.sp());
        EXPECT(0x1dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0293
        gbc.setState(0x3c66, 0x21d9, 0xee30, 0x5087, 0xceb6, 0xc9d9, 0x1, 0x1);
        gbc.writeMem(0x3c66, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x21d9, gbc.sp());
        EXPECT(0x3c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0294
        gbc.setState(0x5339, 0xdad5, 0x2fe0, 0x381d, 0x2396, 0xf91, 0x0, 0x1);
        gbc.writeMem(0x5339, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdad5, gbc.sp());
        EXPECT(0x533b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0295
        gbc.setState(0x809b, 0xdd10, 0x2260, 0x680f, 0x34f5, 0xff93, 0x0, 0x1);
        gbc.writeMem(0x809b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdd10, gbc.sp());
        EXPECT(0x809d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809b));
        EXPECT(0xd, gbc.readMem(0x809c));
        // CB 0D 0296
        gbc.setState(0x2b6b, 0x1685, 0xbd0, 0x2e38, 0xb3a5, 0xf7a2, 0x0, 0x0);
        gbc.writeMem(0x2b6b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1685, gbc.sp());
        EXPECT(0x2b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0297
        gbc.setState(0xa8d0, 0xc098, 0xd870, 0xf4e7, 0x49fb, 0x52ac, 0x0, 0x1);
        gbc.writeMem(0xa8d0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc098, gbc.sp());
        EXPECT(0xa8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d0));
        EXPECT(0xd, gbc.readMem(0xa8d1));
        // CB 0D 0298
        gbc.setState(0xda66, 0x8f9f, 0x50c0, 0xdc9e, 0x6de4, 0x517e, 0x0, 0x1);
        gbc.writeMem(0xda66, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8f9f, gbc.sp());
        EXPECT(0xda68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda66));
        EXPECT(0xd, gbc.readMem(0xda67));
        // CB 0D 0299
        gbc.setState(0xded6, 0xce18, 0x79f0, 0x752a, 0x1809, 0xfb40, 0x1, 0x1);
        gbc.writeMem(0xded6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xce18, gbc.sp());
        EXPECT(0xded8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded6));
        EXPECT(0xd, gbc.readMem(0xded7));
        // CB 0D 029A
        gbc.setState(0x2a28, 0xcf41, 0xcab0, 0xfce2, 0x5b3a, 0xf0, 0x0, 0x1);
        gbc.writeMem(0x2a28, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcf41, gbc.sp());
        EXPECT(0x2a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 029B
        gbc.setState(0x49c6, 0x4b5, 0xc960, 0x7504, 0x61a3, 0x2f6f, 0x1, 0x1);
        gbc.writeMem(0x49c6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4b5, gbc.sp());
        EXPECT(0x49c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 029C
        gbc.setState(0xc0ed, 0x92ac, 0x48e0, 0xd774, 0x2284, 0x9bdf, 0x1, 0x0);
        gbc.writeMem(0xc0ed, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x92ac, gbc.sp());
        EXPECT(0xc0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ed));
        EXPECT(0xd, gbc.readMem(0xc0ee));
        // CB 0D 029D
        gbc.setState(0xc0ae, 0x4a91, 0x70f0, 0xf0b4, 0x799b, 0x8d40, 0x1, 0x0);
        gbc.writeMem(0xc0ae, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4a91, gbc.sp());
        EXPECT(0xc0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ae));
        EXPECT(0xd, gbc.readMem(0xc0af));
        // CB 0D 029F
        gbc.setState(0xb0b6, 0x3083, 0xf990, 0xa069, 0x2926, 0xe486, 0x1, 0x0);
        gbc.writeMem(0xb0b6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3083, gbc.sp());
        EXPECT(0xb0b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b6));
        EXPECT(0xd, gbc.readMem(0xb0b7));
        // CB 0D 02A0
        gbc.setState(0x88d5, 0x426c, 0xd0c0, 0x9a33, 0x834b, 0xae30, 0x0, 0x0);
        gbc.writeMem(0x88d5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x426c, gbc.sp());
        EXPECT(0x88d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d5));
        EXPECT(0xd, gbc.readMem(0x88d6));
        // CB 0D 02A1
        gbc.setState(0x4e6f, 0x607c, 0xf2f0, 0x199c, 0x1d1d, 0x544f, 0x0, 0x0);
        gbc.writeMem(0x4e6f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x607c, gbc.sp());
        EXPECT(0x4e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02A2
        gbc.setState(0xfe8, 0x22c4, 0xe420, 0x9ef3, 0x43d3, 0xac3, 0x1, 0x0);
        gbc.writeMem(0xfe8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x22c4, gbc.sp());
        EXPECT(0xfea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02A3
        gbc.setState(0x5ec5, 0x7c3c, 0xabe0, 0xa184, 0x3c67, 0x89bc, 0x1, 0x1);
        gbc.writeMem(0x5ec5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7c3c, gbc.sp());
        EXPECT(0x5ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02A4
        gbc.setState(0x4b96, 0x1e2a, 0xd5f0, 0xd26d, 0x8932, 0x4154, 0x0, 0x1);
        gbc.writeMem(0x4b96, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1e2a, gbc.sp());
        EXPECT(0x4b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02A5
        gbc.setState(0x4c8d, 0xab89, 0x2bf0, 0x480f, 0xf33a, 0x77b4, 0x0, 0x1);
        gbc.writeMem(0x4c8d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xab89, gbc.sp());
        EXPECT(0x4c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02A6
        gbc.setState(0x9cfa, 0x64c9, 0xb520, 0x1209, 0xea10, 0xf9f4, 0x0, 0x0);
        gbc.writeMem(0x9cfa, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x64c9, gbc.sp());
        EXPECT(0x9cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfa));
        EXPECT(0xd, gbc.readMem(0x9cfb));
        // CB 0D 02A7
        gbc.setState(0x86fc, 0x94af, 0x38a0, 0x8945, 0x544, 0x486, 0x0, 0x1);
        gbc.writeMem(0x86fc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x94af, gbc.sp());
        EXPECT(0x86fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fc));
        EXPECT(0xd, gbc.readMem(0x86fd));
        // CB 0D 02A8
        gbc.setState(0x6f91, 0x104d, 0x7150, 0x126c, 0xf52a, 0x6e67, 0x1, 0x1);
        gbc.writeMem(0x6f91, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x104d, gbc.sp());
        EXPECT(0x6f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02A9
        gbc.setState(0x717f, 0xd95e, 0x20, 0x2f56, 0x2150, 0xbe6b, 0x1, 0x1);
        gbc.writeMem(0x717f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd95e, gbc.sp());
        EXPECT(0x7181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02AA
        gbc.setState(0xb2aa, 0x17cc, 0x8870, 0xce87, 0xa7b6, 0x93fb, 0x1, 0x1);
        gbc.writeMem(0xb2aa, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x17cc, gbc.sp());
        EXPECT(0xb2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2aa));
        EXPECT(0xd, gbc.readMem(0xb2ab));
        // CB 0D 02AB
        gbc.setState(0xa3ec, 0x390e, 0x61f0, 0xe7bb, 0x484c, 0x2645, 0x0, 0x0);
        gbc.writeMem(0xa3ec, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x390e, gbc.sp());
        EXPECT(0xa3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ec));
        EXPECT(0xd, gbc.readMem(0xa3ed));
        // CB 0D 02AC
        gbc.setState(0x3ec9, 0x9c74, 0x5880, 0x2025, 0x8302, 0xdc2e, 0x1, 0x1);
        gbc.writeMem(0x3ec9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9c74, gbc.sp());
        EXPECT(0x3ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02AD
        gbc.setState(0x5f30, 0x993c, 0xdca0, 0x3b7b, 0x34d1, 0xd386, 0x1, 0x1);
        gbc.writeMem(0x5f30, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x993c, gbc.sp());
        EXPECT(0x5f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02AE
        gbc.setState(0x9264, 0x9d25, 0x6500, 0xd223, 0x990d, 0x383, 0x1, 0x1);
        gbc.writeMem(0x9264, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9d25, gbc.sp());
        EXPECT(0x9266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9264));
        EXPECT(0xd, gbc.readMem(0x9265));
        // CB 0D 02AF
        gbc.setState(0x4ea9, 0xd3da, 0xf180, 0xaf42, 0xed9d, 0x9ef4, 0x1, 0x0);
        gbc.writeMem(0x4ea9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd3da, gbc.sp());
        EXPECT(0x4eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02B0
        gbc.setState(0xc050, 0x87f1, 0xe540, 0xe7a2, 0x6520, 0xc268, 0x0, 0x0);
        gbc.writeMem(0xc050, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x87f1, gbc.sp());
        EXPECT(0xc052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc050));
        EXPECT(0xd, gbc.readMem(0xc051));
        // CB 0D 02B1
        gbc.setState(0xc3b3, 0x2a21, 0xaf60, 0xb6f4, 0x1bb, 0xdb24, 0x0, 0x0);
        gbc.writeMem(0xc3b3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2a21, gbc.sp());
        EXPECT(0xc3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b3));
        EXPECT(0xd, gbc.readMem(0xc3b4));
        // CB 0D 02B2
        gbc.setState(0x58e5, 0xda18, 0x4f50, 0xbf72, 0x9553, 0x8f8a, 0x1, 0x1);
        gbc.writeMem(0x58e5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xda18, gbc.sp());
        EXPECT(0x58e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02B3
        gbc.setState(0xe6b0, 0x397a, 0xdb10, 0xb2be, 0xab66, 0x737b, 0x1, 0x0);
        gbc.writeMem(0xe6b0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x397a, gbc.sp());
        EXPECT(0xe6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b0));
        EXPECT(0xd, gbc.readMem(0xe6b1));
        // CB 0D 02B4
        gbc.setState(0xe9fe, 0x9b77, 0xbb90, 0x94b3, 0x72c6, 0xcd66, 0x1, 0x0);
        gbc.writeMem(0xe9fe, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9b77, gbc.sp());
        EXPECT(0xea00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9fe));
        EXPECT(0xd, gbc.readMem(0xe9ff));
        // CB 0D 02B5
        gbc.setState(0x2cd2, 0x4bc, 0x38a0, 0x21e5, 0xe407, 0x2904, 0x1, 0x1);
        gbc.writeMem(0x2cd2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4bc, gbc.sp());
        EXPECT(0x2cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02B6
        gbc.setState(0x878f, 0xbd43, 0x9e60, 0x6db9, 0xbbc2, 0xe6fd, 0x0, 0x0);
        gbc.writeMem(0x878f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbd43, gbc.sp());
        EXPECT(0x8791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878f));
        EXPECT(0xd, gbc.readMem(0x8790));
        // CB 0D 02B7
        gbc.setState(0x5fc5, 0x5857, 0xc460, 0xeff5, 0xb2fb, 0x7920, 0x1, 0x0);
        gbc.writeMem(0x5fc5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5857, gbc.sp());
        EXPECT(0x5fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02B8
        gbc.setState(0x1300, 0xead0, 0x39c0, 0x2314, 0x85b3, 0x20a1, 0x1, 0x0);
        gbc.writeMem(0x1300, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xead0, gbc.sp());
        EXPECT(0x1302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02B9
        gbc.setState(0x3e22, 0xcb2d, 0xc340, 0x3d1a, 0x3e33, 0x21b0, 0x1, 0x0);
        gbc.writeMem(0x3e22, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcb2d, gbc.sp());
        EXPECT(0x3e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02BA
        gbc.setState(0xc4fb, 0x448f, 0x6d20, 0x928a, 0x5042, 0x5d75, 0x0, 0x0);
        gbc.writeMem(0xc4fb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x448f, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4fb));
        EXPECT(0xd, gbc.readMem(0xc4fc));
        // CB 0D 02BB
        gbc.setState(0x6a8a, 0xf62d, 0x3420, 0x5988, 0xbfff, 0xa3cf, 0x0, 0x1);
        gbc.writeMem(0x6a8a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf62d, gbc.sp());
        EXPECT(0x6a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02BC
        gbc.setState(0xe477, 0x358a, 0x7f60, 0x5ab6, 0xb2a9, 0xd4fd, 0x1, 0x1);
        gbc.writeMem(0xe477, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x358a, gbc.sp());
        EXPECT(0xe479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe477));
        EXPECT(0xd, gbc.readMem(0xe478));
        // CB 0D 02BD
        gbc.setState(0x2075, 0x306d, 0x3df0, 0x401c, 0xdac3, 0xe84e, 0x0, 0x1);
        gbc.writeMem(0x2075, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x306d, gbc.sp());
        EXPECT(0x2077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02BE
        gbc.setState(0x1bcd, 0xd93b, 0x2850, 0x5442, 0x54e7, 0x4d12, 0x1, 0x1);
        gbc.writeMem(0x1bcd, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd93b, gbc.sp());
        EXPECT(0x1bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02BF
        gbc.setState(0xbc45, 0x29e4, 0x5850, 0xc37b, 0x4968, 0xd4ee, 0x0, 0x1);
        gbc.writeMem(0xbc45, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x29e4, gbc.sp());
        EXPECT(0xbc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc45));
        EXPECT(0xd, gbc.readMem(0xbc46));
        // CB 0D 02C0
        gbc.setState(0x218a, 0xb465, 0x46a0, 0xae63, 0x4969, 0x35de, 0x0, 0x0);
        gbc.writeMem(0x218a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb465, gbc.sp());
        EXPECT(0x218c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02C1
        gbc.setState(0xcd5d, 0xf03c, 0x3a10, 0x5cca, 0xf568, 0x2bb2, 0x0, 0x0);
        gbc.writeMem(0xcd5d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf03c, gbc.sp());
        EXPECT(0xcd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5d));
        EXPECT(0xd, gbc.readMem(0xcd5e));
        // CB 0D 02C2
        gbc.setState(0xc9ba, 0x8036, 0xc450, 0xcb87, 0x7404, 0x3485, 0x0, 0x1);
        gbc.writeMem(0xc9ba, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8036, gbc.sp());
        EXPECT(0xc9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ba));
        EXPECT(0xd, gbc.readMem(0xc9bb));
        // CB 0D 02C3
        gbc.setState(0xc5d3, 0xad10, 0x5a40, 0x8765, 0xfc4a, 0x8c6b, 0x0, 0x1);
        gbc.writeMem(0xc5d3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xad10, gbc.sp());
        EXPECT(0xc5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d3));
        EXPECT(0xd, gbc.readMem(0xc5d4));
        // CB 0D 02C4
        gbc.setState(0x33d6, 0xd7cb, 0x8920, 0x1228, 0xc1c, 0x69f7, 0x1, 0x1);
        gbc.writeMem(0x33d6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd7cb, gbc.sp());
        EXPECT(0x33d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02C5
        gbc.setState(0x8b74, 0x862b, 0x7760, 0xf76b, 0x3b88, 0xccf7, 0x0, 0x1);
        gbc.writeMem(0x8b74, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x862b, gbc.sp());
        EXPECT(0x8b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b74));
        EXPECT(0xd, gbc.readMem(0x8b75));
        // CB 0D 02C6
        gbc.setState(0x51d9, 0x3071, 0xee50, 0x4b11, 0x95bf, 0xb25e, 0x1, 0x1);
        gbc.writeMem(0x51d9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3071, gbc.sp());
        EXPECT(0x51db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02C7
        gbc.setState(0xc976, 0xd7cd, 0x1750, 0xe577, 0x4d38, 0x816d, 0x1, 0x1);
        gbc.writeMem(0xc976, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd7cd, gbc.sp());
        EXPECT(0xc978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc976));
        EXPECT(0xd, gbc.readMem(0xc977));
        // CB 0D 02C8
        gbc.setState(0x9d45, 0xdd88, 0xf970, 0xc202, 0x87d1, 0xc5f5, 0x1, 0x0);
        gbc.writeMem(0x9d45, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdd88, gbc.sp());
        EXPECT(0x9d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d45));
        EXPECT(0xd, gbc.readMem(0x9d46));
        // CB 0D 02CA
        gbc.setState(0x3179, 0x536e, 0x4f70, 0x70e7, 0x6ab1, 0x7d90, 0x1, 0x1);
        gbc.writeMem(0x3179, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x536e, gbc.sp());
        EXPECT(0x317b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02CB
        gbc.setState(0xb2a3, 0x3bf, 0xe820, 0x9d48, 0xc78a, 0xf06e, 0x1, 0x1);
        gbc.writeMem(0xb2a3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3bf, gbc.sp());
        EXPECT(0xb2a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a3));
        EXPECT(0xd, gbc.readMem(0xb2a4));
        // CB 0D 02CC
        gbc.setState(0x219f, 0xefa7, 0xd670, 0xd2c1, 0xfa9b, 0x3fee, 0x1, 0x1);
        gbc.writeMem(0x219f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xefa7, gbc.sp());
        EXPECT(0x21a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02CE
        gbc.setState(0xe35, 0x1b37, 0x7a20, 0xc976, 0x43c1, 0x29b, 0x1, 0x1);
        gbc.writeMem(0xe35, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1b37, gbc.sp());
        EXPECT(0xe37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02CF
        gbc.setState(0x27c1, 0xf76a, 0x8e70, 0x30bf, 0x4a79, 0x3f11, 0x0, 0x1);
        gbc.writeMem(0x27c1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf76a, gbc.sp());
        EXPECT(0x27c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02D0
        gbc.setState(0xa0bc, 0x3089, 0x56d0, 0x89df, 0xcf44, 0x2434, 0x1, 0x1);
        gbc.writeMem(0xa0bc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3089, gbc.sp());
        EXPECT(0xa0be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0bc));
        EXPECT(0xd, gbc.readMem(0xa0bd));
        // CB 0D 02D1
        gbc.setState(0x4797, 0x6a58, 0x560, 0xf72f, 0xa95, 0xd86e, 0x0, 0x1);
        gbc.writeMem(0x4797, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6a58, gbc.sp());
        EXPECT(0x4799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02D2
        gbc.setState(0x4764, 0x9980, 0xebf0, 0xebfb, 0x6c67, 0xfd73, 0x1, 0x0);
        gbc.writeMem(0x4764, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9980, gbc.sp());
        EXPECT(0x4766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02D4
        gbc.setState(0x23e9, 0x33c, 0xbcc0, 0x6a0, 0x7ff0, 0x20cd, 0x1, 0x0);
        gbc.writeMem(0x23e9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x33c, gbc.sp());
        EXPECT(0x23eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02D5
        gbc.setState(0xb248, 0x9ce0, 0x1330, 0x8af1, 0x8985, 0x2f45, 0x0, 0x1);
        gbc.writeMem(0xb248, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9ce0, gbc.sp());
        EXPECT(0xb24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb248));
        EXPECT(0xd, gbc.readMem(0xb249));
        // CB 0D 02D6
        gbc.setState(0x70eb, 0xde41, 0xe950, 0xbed1, 0xc1fd, 0xeb84, 0x1, 0x1);
        gbc.writeMem(0x70eb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xde41, gbc.sp());
        EXPECT(0x70ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02D7
        gbc.setState(0x2053, 0x9f1a, 0x41b0, 0xc55f, 0xa63, 0x99c, 0x1, 0x1);
        gbc.writeMem(0x2053, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9f1a, gbc.sp());
        EXPECT(0x2055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02D8
        gbc.setState(0x7661, 0x9516, 0x8a20, 0x51ea, 0xe396, 0xb6d9, 0x0, 0x1);
        gbc.writeMem(0x7661, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9516, gbc.sp());
        EXPECT(0x7663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02DA
        gbc.setState(0x5398, 0x169f, 0x14c0, 0x73b8, 0xe76, 0xe10, 0x0, 0x0);
        gbc.writeMem(0x5398, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x169f, gbc.sp());
        EXPECT(0x539a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02DB
        gbc.setState(0xa431, 0xff89, 0x90, 0x19ef, 0xa24a, 0xe0dc, 0x0, 0x0);
        gbc.writeMem(0xa431, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xff89, gbc.sp());
        EXPECT(0xa433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa431));
        EXPECT(0xd, gbc.readMem(0xa432));
        // CB 0D 02DC
        gbc.setState(0xb15d, 0x9483, 0x8220, 0xee41, 0xdec8, 0x858, 0x1, 0x1);
        gbc.writeMem(0xb15d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9483, gbc.sp());
        EXPECT(0xb15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb15d));
        EXPECT(0xd, gbc.readMem(0xb15e));
        // CB 0D 02DD
        gbc.setState(0x72a2, 0xdef5, 0xf210, 0xe15a, 0xe9ba, 0x270c, 0x1, 0x1);
        gbc.writeMem(0x72a2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdef5, gbc.sp());
        EXPECT(0x72a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02DE
        gbc.setState(0x519a, 0x17c0, 0xb5d0, 0xd8c7, 0x1680, 0x5968, 0x1, 0x1);
        gbc.writeMem(0x519a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x17c0, gbc.sp());
        EXPECT(0x519c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02DF
        gbc.setState(0xce7d, 0x4f8d, 0x2880, 0xa972, 0x47c4, 0xe37f, 0x1, 0x0);
        gbc.writeMem(0xce7d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4f8d, gbc.sp());
        EXPECT(0xce7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7d));
        EXPECT(0xd, gbc.readMem(0xce7e));
        // CB 0D 02E0
        gbc.setState(0xaa8f, 0x6350, 0xf850, 0x3d08, 0x4ba6, 0x49b, 0x1, 0x0);
        gbc.writeMem(0xaa8f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6350, gbc.sp());
        EXPECT(0xaa91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8f));
        EXPECT(0xd, gbc.readMem(0xaa90));
        // CB 0D 02E1
        gbc.setState(0x2242, 0x583b, 0x5130, 0x47ce, 0x528, 0xa7f9, 0x1, 0x0);
        gbc.writeMem(0x2242, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x583b, gbc.sp());
        EXPECT(0x2244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02E2
        gbc.setState(0x3d48, 0xd564, 0x2100, 0xd994, 0xe363, 0x5eff, 0x0, 0x0);
        gbc.writeMem(0x3d48, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd564, gbc.sp());
        EXPECT(0x3d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02E3
        gbc.setState(0x8c3e, 0x3f41, 0x8510, 0x6897, 0x9547, 0x7e72, 0x1, 0x0);
        gbc.writeMem(0x8c3e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3f41, gbc.sp());
        EXPECT(0x8c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3e));
        EXPECT(0xd, gbc.readMem(0x8c3f));
        // CB 0D 02E4
        gbc.setState(0x5c, 0xafe3, 0x1a20, 0x8d8c, 0x1c01, 0x98d9, 0x0, 0x0);
        gbc.writeMem(0x5c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xafe3, gbc.sp());
        EXPECT(0x5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02E5
        gbc.setState(0x88cf, 0xee65, 0x1c20, 0x1858, 0xefd3, 0xe82e, 0x1, 0x1);
        gbc.writeMem(0x88cf, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xee65, gbc.sp());
        EXPECT(0x88d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cf));
        EXPECT(0xd, gbc.readMem(0x88d0));
        // CB 0D 02E6
        gbc.setState(0xdff7, 0xb07a, 0x1710, 0xcbaa, 0x5d38, 0xf8a4, 0x0, 0x1);
        gbc.writeMem(0xdff7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb07a, gbc.sp());
        EXPECT(0xdff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff7));
        EXPECT(0xd, gbc.readMem(0xdff8));
        // CB 0D 02E7
        gbc.setState(0x8b2f, 0x2d63, 0x9c70, 0xf7f0, 0x76e6, 0xd991, 0x1, 0x1);
        gbc.writeMem(0x8b2f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2d63, gbc.sp());
        EXPECT(0x8b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b2f));
        EXPECT(0xd, gbc.readMem(0x8b30));
        // CB 0D 02E9
        gbc.setState(0x8c8b, 0x836e, 0xdf80, 0xd0de, 0x43b8, 0x7d91, 0x0, 0x0);
        gbc.writeMem(0x8c8b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x836e, gbc.sp());
        EXPECT(0x8c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8b));
        EXPECT(0xd, gbc.readMem(0x8c8c));
        // CB 0D 02EA
        gbc.setState(0x7ab8, 0x7695, 0x9b10, 0x4f1b, 0x68f1, 0x90b4, 0x0, 0x1);
        gbc.writeMem(0x7ab8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7695, gbc.sp());
        EXPECT(0x7aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02EB
        gbc.setState(0x7da3, 0xf4d8, 0x960, 0x6f20, 0xc072, 0x81d9, 0x0, 0x0);
        gbc.writeMem(0x7da3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf4d8, gbc.sp());
        EXPECT(0x7da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02EC
        gbc.setState(0xae0, 0xfb89, 0x68b0, 0x49fb, 0x278b, 0xe5e8, 0x0, 0x1);
        gbc.writeMem(0xae0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfb89, gbc.sp());
        EXPECT(0xae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02ED
        gbc.setState(0x1c3e, 0x62a2, 0xcbf0, 0xcc3f, 0xaed, 0x17ca, 0x0, 0x0);
        gbc.writeMem(0x1c3e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x62a2, gbc.sp());
        EXPECT(0x1c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02EE
        gbc.setState(0xbe64, 0x497c, 0xf130, 0xdaaf, 0xa4e7, 0x643c, 0x1, 0x1);
        gbc.writeMem(0xbe64, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x497c, gbc.sp());
        EXPECT(0xbe66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe64));
        EXPECT(0xd, gbc.readMem(0xbe65));
        // CB 0D 02EF
        gbc.setState(0x6b1d, 0x3458, 0xbb60, 0x3833, 0x40ba, 0xb179, 0x1, 0x1);
        gbc.writeMem(0x6b1d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3458, gbc.sp());
        EXPECT(0x6b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02F0
        gbc.setState(0x27de, 0xd82c, 0x2ba0, 0x99c2, 0xd3d8, 0x6370, 0x1, 0x0);
        gbc.writeMem(0x27de, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd82c, gbc.sp());
        EXPECT(0x27e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02F1
        gbc.setState(0x6327, 0xa256, 0x4ca0, 0xe381, 0xad43, 0xb51, 0x0, 0x1);
        gbc.writeMem(0x6327, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa256, gbc.sp());
        EXPECT(0x6329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02F2
        gbc.setState(0xa2db, 0xf70b, 0x85c0, 0xffff, 0xd469, 0xb481, 0x1, 0x0);
        gbc.writeMem(0xa2db, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf70b, gbc.sp());
        EXPECT(0xa2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2db));
        EXPECT(0xd, gbc.readMem(0xa2dc));
        // CB 0D 02F3
        gbc.setState(0x7b2f, 0x415b, 0x3c40, 0x659a, 0xe61c, 0x6aff, 0x0, 0x1);
        gbc.writeMem(0x7b2f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x415b, gbc.sp());
        EXPECT(0x7b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02F4
        gbc.setState(0xc19, 0x9d6f, 0xb640, 0xa11c, 0xd80e, 0x5474, 0x1, 0x1);
        gbc.writeMem(0xc19, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9d6f, gbc.sp());
        EXPECT(0xc1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02F5
        gbc.setState(0x7915, 0x83bf, 0x1f80, 0xfee8, 0x43e9, 0xcfc5, 0x1, 0x0);
        gbc.writeMem(0x7915, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x83bf, gbc.sp());
        EXPECT(0x7917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02F6
        gbc.setState(0xcd6, 0x1cca, 0x1500, 0xf971, 0x51f3, 0xd598, 0x0, 0x0);
        gbc.writeMem(0xcd6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1cca, gbc.sp());
        EXPECT(0xcd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02F7
        gbc.setState(0x103b, 0x4eeb, 0x9e70, 0x5e11, 0x349f, 0x3043, 0x0, 0x1);
        gbc.writeMem(0x103b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4eeb, gbc.sp());
        EXPECT(0x103d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02F8
        gbc.setState(0x618e, 0xca09, 0x3c80, 0x9e39, 0x212e, 0x9ad3, 0x1, 0x0);
        gbc.writeMem(0x618e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xca09, gbc.sp());
        EXPECT(0x6190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02F9
        gbc.setState(0x3512, 0x49b7, 0x5e00, 0x19d6, 0x59c3, 0x697e, 0x1, 0x1);
        gbc.writeMem(0x3512, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x49b7, gbc.sp());
        EXPECT(0x3514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02FA
        gbc.setState(0x4f8c, 0x119a, 0x2370, 0xc9f, 0xbc3e, 0xdda, 0x0, 0x0);
        gbc.writeMem(0x4f8c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x119a, gbc.sp());
        EXPECT(0x4f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 02FB
        gbc.setState(0xae85, 0x1f78, 0xfd10, 0x3cf8, 0xca6d, 0x66cf, 0x1, 0x0);
        gbc.writeMem(0xae85, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1f78, gbc.sp());
        EXPECT(0xae87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae85));
        EXPECT(0xd, gbc.readMem(0xae86));
        // CB 0D 02FC
        gbc.setState(0xab5f, 0xd9a0, 0xbd80, 0x22de, 0xfa1c, 0x475e, 0x0, 0x0);
        gbc.writeMem(0xab5f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd9a0, gbc.sp());
        EXPECT(0xab61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5f));
        EXPECT(0xd, gbc.readMem(0xab60));
        // CB 0D 02FD
        gbc.setState(0x5821, 0x5a20, 0xdf20, 0xf981, 0x830f, 0x204b, 0x1, 0x1);
        gbc.writeMem(0x5821, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5a20, gbc.sp());
        EXPECT(0x5823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 02FE
        gbc.setState(0xb914, 0x9eff, 0x890, 0x8c59, 0x571, 0x6842, 0x0, 0x1);
        gbc.writeMem(0xb914, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9eff, gbc.sp());
        EXPECT(0xb916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb914));
        EXPECT(0xd, gbc.readMem(0xb915));
        // CB 0D 02FF
        gbc.setState(0xd66d, 0xdacc, 0xafc0, 0x3705, 0xf573, 0xc095, 0x0, 0x0);
        gbc.writeMem(0xd66d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdacc, gbc.sp());
        EXPECT(0xd66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66d));
        EXPECT(0xd, gbc.readMem(0xd66e));
        // CB 0D 0300
        gbc.setState(0xe77b, 0x1f0c, 0x6140, 0x8a51, 0xaef5, 0x283c, 0x0, 0x1);
        gbc.writeMem(0xe77b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0xe77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77b));
        EXPECT(0xd, gbc.readMem(0xe77c));
        // CB 0D 0301
        gbc.setState(0x7b61, 0x4eb6, 0xbb80, 0x1eda, 0xb8ea, 0x2c16, 0x1, 0x0);
        gbc.writeMem(0x7b61, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4eb6, gbc.sp());
        EXPECT(0x7b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0302
        gbc.setState(0x29c, 0xecb0, 0x1bd0, 0xc0c0, 0x59e8, 0x1c43, 0x1, 0x0);
        gbc.writeMem(0x29c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xecb0, gbc.sp());
        EXPECT(0x29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0304
        gbc.setState(0x5a8b, 0x7bb6, 0x4eb0, 0x48f5, 0x980a, 0x7843, 0x1, 0x1);
        gbc.writeMem(0x5a8b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7bb6, gbc.sp());
        EXPECT(0x5a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0305
        gbc.setState(0x6519, 0xdf9f, 0x2240, 0xcbdb, 0xd9c5, 0xaf78, 0x0, 0x1);
        gbc.writeMem(0x6519, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdf9f, gbc.sp());
        EXPECT(0x651b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0306
        gbc.setState(0x4b62, 0x5877, 0x1060, 0x87c9, 0xded, 0x8e35, 0x1, 0x1);
        gbc.writeMem(0x4b62, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5877, gbc.sp());
        EXPECT(0x4b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0307
        gbc.setState(0xeb45, 0x2720, 0x9180, 0x7158, 0xa70, 0x1fde, 0x0, 0x1);
        gbc.writeMem(0xeb45, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2720, gbc.sp());
        EXPECT(0xeb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb45));
        EXPECT(0xd, gbc.readMem(0xeb46));
        // CB 0D 0308
        gbc.setState(0x8032, 0xf7bd, 0x7690, 0x415d, 0x15b6, 0x44d7, 0x1, 0x1);
        gbc.writeMem(0x8032, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf7bd, gbc.sp());
        EXPECT(0x8034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8032));
        EXPECT(0xd, gbc.readMem(0x8033));
        // CB 0D 0309
        gbc.setState(0x7f20, 0xecdf, 0x3490, 0xd20d, 0x85ce, 0x452a, 0x1, 0x1);
        gbc.writeMem(0x7f20, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xecdf, gbc.sp());
        EXPECT(0x7f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 030A
        gbc.setState(0x79c2, 0x9187, 0xb130, 0xf128, 0xa860, 0x722, 0x0, 0x0);
        gbc.writeMem(0x79c2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9187, gbc.sp());
        EXPECT(0x79c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 030B
        gbc.setState(0x2962, 0xced3, 0x3530, 0xf520, 0xd02b, 0xa1c8, 0x1, 0x1);
        gbc.writeMem(0x2962, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xced3, gbc.sp());
        EXPECT(0x2964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 030C
        gbc.setState(0xb7dd, 0xe092, 0x6650, 0x435a, 0x6642, 0xf7f5, 0x1, 0x0);
        gbc.writeMem(0xb7dd, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe092, gbc.sp());
        EXPECT(0xb7df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7dd));
        EXPECT(0xd, gbc.readMem(0xb7de));
        // CB 0D 030D
        gbc.setState(0x6013, 0x8f87, 0x2c30, 0xb4c1, 0x1e38, 0xc32f, 0x0, 0x0);
        gbc.writeMem(0x6013, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8f87, gbc.sp());
        EXPECT(0x6015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 030E
        gbc.setState(0x5bd4, 0xbbaa, 0x63f0, 0x1ce9, 0xc2db, 0x552, 0x0, 0x1);
        gbc.writeMem(0x5bd4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbbaa, gbc.sp());
        EXPECT(0x5bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 030F
        gbc.setState(0x11b1, 0xc643, 0x7840, 0x1acf, 0x760d, 0x49b6, 0x1, 0x1);
        gbc.writeMem(0x11b1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc643, gbc.sp());
        EXPECT(0x11b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0310
        gbc.setState(0x2c5f, 0x110d, 0x1c0, 0x99e3, 0x966, 0x85ce, 0x1, 0x0);
        gbc.writeMem(0x2c5f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x110d, gbc.sp());
        EXPECT(0x2c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0311
        gbc.setState(0xcfd9, 0x7719, 0xc6b0, 0xa7ba, 0x83ee, 0x6a4, 0x1, 0x0);
        gbc.writeMem(0xcfd9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7719, gbc.sp());
        EXPECT(0xcfdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd9));
        EXPECT(0xd, gbc.readMem(0xcfda));
        // CB 0D 0312
        gbc.setState(0x66af, 0x86d3, 0x8710, 0x2fb8, 0x6c33, 0xdc1c, 0x1, 0x1);
        gbc.writeMem(0x66af, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x86d3, gbc.sp());
        EXPECT(0x66b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0313
        gbc.setState(0x6a8d, 0x7cc, 0xd0b0, 0x8d5e, 0xed5d, 0xd168, 0x0, 0x0);
        gbc.writeMem(0x6a8d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7cc, gbc.sp());
        EXPECT(0x6a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0314
        gbc.setState(0x81e1, 0xcfd0, 0xd650, 0xfaee, 0x9ca8, 0x30d8, 0x0, 0x1);
        gbc.writeMem(0x81e1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcfd0, gbc.sp());
        EXPECT(0x81e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e1));
        EXPECT(0xd, gbc.readMem(0x81e2));
        // CB 0D 0315
        gbc.setState(0x815a, 0x3ff3, 0x5b20, 0xe5fe, 0x4875, 0xe4dd, 0x0, 0x1);
        gbc.writeMem(0x815a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3ff3, gbc.sp());
        EXPECT(0x815c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815a));
        EXPECT(0xd, gbc.readMem(0x815b));
        // CB 0D 0316
        gbc.setState(0xde38, 0x7776, 0x3530, 0x9b34, 0x1ae1, 0x2592, 0x0, 0x0);
        gbc.writeMem(0xde38, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7776, gbc.sp());
        EXPECT(0xde3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde38));
        EXPECT(0xd, gbc.readMem(0xde39));
        // CB 0D 0317
        gbc.setState(0x529e, 0x239e, 0x76d0, 0xf823, 0xd76c, 0xca6f, 0x0, 0x0);
        gbc.writeMem(0x529e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x239e, gbc.sp());
        EXPECT(0x52a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0318
        gbc.setState(0x43a8, 0x4921, 0xa070, 0x715e, 0x108f, 0xb8ff, 0x1, 0x1);
        gbc.writeMem(0x43a8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4921, gbc.sp());
        EXPECT(0x43aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0319
        gbc.setState(0x6399, 0xd557, 0x3800, 0x6105, 0x1082, 0x483e, 0x1, 0x0);
        gbc.writeMem(0x6399, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd557, gbc.sp());
        EXPECT(0x639b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 031A
        gbc.setState(0xdd52, 0x6d59, 0x2360, 0x6200, 0xc5de, 0xe8b, 0x1, 0x0);
        gbc.writeMem(0xdd52, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6d59, gbc.sp());
        EXPECT(0xdd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd52));
        EXPECT(0xd, gbc.readMem(0xdd53));
        // CB 0D 031B
        gbc.setState(0xb91d, 0xcb1e, 0xd670, 0xad33, 0x7414, 0x3222, 0x0, 0x1);
        gbc.writeMem(0xb91d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xcb1e, gbc.sp());
        EXPECT(0xb91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91d));
        EXPECT(0xd, gbc.readMem(0xb91e));
        // CB 0D 031C
        gbc.setState(0xb59e, 0x4189, 0x11a0, 0xbf0f, 0x3e32, 0x13b2, 0x0, 0x1);
        gbc.writeMem(0xb59e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4189, gbc.sp());
        EXPECT(0xb5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59e));
        EXPECT(0xd, gbc.readMem(0xb59f));
        // CB 0D 031D
        gbc.setState(0xccb8, 0x1adb, 0x5380, 0xf9f2, 0xe606, 0xa31b, 0x0, 0x0);
        gbc.writeMem(0xccb8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1adb, gbc.sp());
        EXPECT(0xccba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb8));
        EXPECT(0xd, gbc.readMem(0xccb9));
        // CB 0D 031E
        gbc.setState(0x6553, 0x606f, 0x90f0, 0x813, 0x7f0e, 0xb206, 0x1, 0x1);
        gbc.writeMem(0x6553, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x606f, gbc.sp());
        EXPECT(0x6555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 031F
        gbc.setState(0x1e2e, 0x573a, 0xd470, 0x6dd5, 0x7419, 0xa47a, 0x0, 0x0);
        gbc.writeMem(0x1e2e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x573a, gbc.sp());
        EXPECT(0x1e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0320
        gbc.setState(0xb418, 0x640f, 0xbe40, 0xbb0f, 0xe21e, 0x1770, 0x0, 0x0);
        gbc.writeMem(0xb418, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x640f, gbc.sp());
        EXPECT(0xb41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb418));
        EXPECT(0xd, gbc.readMem(0xb419));
        // CB 0D 0321
        gbc.setState(0x4354, 0xf613, 0x2120, 0x5042, 0xab1b, 0x2061, 0x0, 0x0);
        gbc.writeMem(0x4354, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf613, gbc.sp());
        EXPECT(0x4356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0322
        gbc.setState(0x3e22, 0xd4a6, 0x1de0, 0x98fd, 0x1869, 0x1dcf, 0x1, 0x0);
        gbc.writeMem(0x3e22, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd4a6, gbc.sp());
        EXPECT(0x3e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0323
        gbc.setState(0xd938, 0xfea6, 0x6760, 0x5252, 0xe59c, 0xed77, 0x0, 0x1);
        gbc.writeMem(0xd938, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfea6, gbc.sp());
        EXPECT(0xd93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd938));
        EXPECT(0xd, gbc.readMem(0xd939));
        // CB 0D 0324
        gbc.setState(0x276a, 0x5aee, 0x28c0, 0x70f6, 0xc9e5, 0xbf17, 0x1, 0x1);
        gbc.writeMem(0x276a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5aee, gbc.sp());
        EXPECT(0x276c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0325
        gbc.setState(0x3180, 0x5e48, 0x2440, 0xd5bd, 0xe205, 0xf26a, 0x1, 0x0);
        gbc.writeMem(0x3180, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5e48, gbc.sp());
        EXPECT(0x3182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0326
        gbc.setState(0x154, 0x86af, 0x6100, 0xd136, 0xabaa, 0x1738, 0x1, 0x0);
        gbc.writeMem(0x154, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x86af, gbc.sp());
        EXPECT(0x156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0327
        gbc.setState(0x3792, 0xc2fa, 0x7390, 0xfe34, 0x747a, 0x868d, 0x1, 0x1);
        gbc.writeMem(0x3792, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc2fa, gbc.sp());
        EXPECT(0x3794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0328
        gbc.setState(0x8a8f, 0xc29a, 0x4a20, 0x18e, 0x618a, 0x57ef, 0x1, 0x0);
        gbc.writeMem(0x8a8f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc29a, gbc.sp());
        EXPECT(0x8a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8f));
        EXPECT(0xd, gbc.readMem(0x8a90));
        // CB 0D 0329
        gbc.setState(0x35e, 0x4ca0, 0xd780, 0xab0a, 0x4550, 0xcb03, 0x0, 0x0);
        gbc.writeMem(0x35e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4ca0, gbc.sp());
        EXPECT(0x360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 032A
        gbc.setState(0xe938, 0xdb57, 0x63e0, 0x8af2, 0xa275, 0xa6a, 0x0, 0x1);
        gbc.writeMem(0xe938, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdb57, gbc.sp());
        EXPECT(0xe93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe938));
        EXPECT(0xd, gbc.readMem(0xe939));
        // CB 0D 032B
        gbc.setState(0xbdd8, 0xcef9, 0x7950, 0x6c6b, 0x2f30, 0xaf1d, 0x0, 0x1);
        gbc.writeMem(0xbdd8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcef9, gbc.sp());
        EXPECT(0xbdda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd8));
        EXPECT(0xd, gbc.readMem(0xbdd9));
        // CB 0D 032C
        gbc.setState(0x4883, 0xfcfc, 0x8190, 0x107b, 0xe2eb, 0xa108, 0x0, 0x0);
        gbc.writeMem(0x4883, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfcfc, gbc.sp());
        EXPECT(0x4885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 032D
        gbc.setState(0xce05, 0x2dc7, 0xf5e0, 0xb7e8, 0x6a71, 0x1b02, 0x1, 0x0);
        gbc.writeMem(0xce05, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2dc7, gbc.sp());
        EXPECT(0xce07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce05));
        EXPECT(0xd, gbc.readMem(0xce06));
        // CB 0D 032E
        gbc.setState(0x13b9, 0x31a5, 0xb950, 0x4a68, 0x7bae, 0x4c73, 0x0, 0x0);
        gbc.writeMem(0x13b9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x31a5, gbc.sp());
        EXPECT(0x13bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 032F
        gbc.setState(0xaec4, 0xa95b, 0x2940, 0x731c, 0x7c37, 0x17bd, 0x0, 0x0);
        gbc.writeMem(0xaec4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa95b, gbc.sp());
        EXPECT(0xaec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec4));
        EXPECT(0xd, gbc.readMem(0xaec5));
        // CB 0D 0330
        gbc.setState(0x3c44, 0x4e3d, 0x2110, 0xb538, 0x9bde, 0xfdc9, 0x1, 0x0);
        gbc.writeMem(0x3c44, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4e3d, gbc.sp());
        EXPECT(0x3c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0331
        gbc.setState(0xa24a, 0x49ea, 0xd430, 0x7214, 0x3373, 0xa3a3, 0x0, 0x0);
        gbc.writeMem(0xa24a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x49ea, gbc.sp());
        EXPECT(0xa24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24a));
        EXPECT(0xd, gbc.readMem(0xa24b));
        // CB 0D 0332
        gbc.setState(0x12b8, 0xa7ca, 0xdb50, 0x4714, 0xd126, 0x8822, 0x1, 0x1);
        gbc.writeMem(0x12b8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa7ca, gbc.sp());
        EXPECT(0x12ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0333
        gbc.setState(0x67d0, 0xcde, 0xd2b0, 0x7e5c, 0x516c, 0x2af9, 0x1, 0x1);
        gbc.writeMem(0x67d0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcde, gbc.sp());
        EXPECT(0x67d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0334
        gbc.setState(0xe6bb, 0x98f5, 0x2010, 0xc019, 0xec0, 0x3a46, 0x1, 0x1);
        gbc.writeMem(0xe6bb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x98f5, gbc.sp());
        EXPECT(0xe6bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6bb));
        EXPECT(0xd, gbc.readMem(0xe6bc));
        // CB 0D 0335
        gbc.setState(0x6e7a, 0x11d9, 0x88b0, 0xf02f, 0xd3ee, 0xcb9e, 0x0, 0x1);
        gbc.writeMem(0x6e7a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x11d9, gbc.sp());
        EXPECT(0x6e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0336
        gbc.setState(0x8184, 0x65fe, 0x96d0, 0x9a69, 0xfe5c, 0x65c0, 0x0, 0x0);
        gbc.writeMem(0x8184, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x65fe, gbc.sp());
        EXPECT(0x8186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8184));
        EXPECT(0xd, gbc.readMem(0x8185));
        // CB 0D 0337
        gbc.setState(0x2ce0, 0x8170, 0x2f60, 0xa3ce, 0x7e4b, 0xb830, 0x0, 0x0);
        gbc.writeMem(0x2ce0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8170, gbc.sp());
        EXPECT(0x2ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0338
        gbc.setState(0x5814, 0xec3c, 0xc170, 0xa7b6, 0x175d, 0x7226, 0x0, 0x1);
        gbc.writeMem(0x5814, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xec3c, gbc.sp());
        EXPECT(0x5816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0339
        gbc.setState(0x9357, 0xfe6b, 0xc330, 0xb01, 0x5ae1, 0xadd0, 0x1, 0x0);
        gbc.writeMem(0x9357, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfe6b, gbc.sp());
        EXPECT(0x9359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9357));
        EXPECT(0xd, gbc.readMem(0x9358));
        // CB 0D 033A
        gbc.setState(0x8325, 0x1753, 0x7ab0, 0x28d9, 0xd45b, 0xe3ef, 0x0, 0x0);
        gbc.writeMem(0x8325, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1753, gbc.sp());
        EXPECT(0x8327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8325));
        EXPECT(0xd, gbc.readMem(0x8326));
        // CB 0D 033C
        gbc.setState(0x338f, 0xecac, 0x5e60, 0x75bb, 0x6311, 0x3459, 0x0, 0x0);
        gbc.writeMem(0x338f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xecac, gbc.sp());
        EXPECT(0x3391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 033D
        gbc.setState(0x72a9, 0x9de2, 0xbcc0, 0xa4de, 0x10c3, 0x59e2, 0x1, 0x0);
        gbc.writeMem(0x72a9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9de2, gbc.sp());
        EXPECT(0x72ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 033E
        gbc.setState(0xeed8, 0x21d2, 0xb6f0, 0x6779, 0x205b, 0x6108, 0x0, 0x1);
        gbc.writeMem(0xeed8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x21d2, gbc.sp());
        EXPECT(0xeeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed8));
        EXPECT(0xd, gbc.readMem(0xeed9));
        // CB 0D 033F
        gbc.setState(0xe134, 0x1d04, 0x4810, 0x8152, 0xe927, 0x52aa, 0x1, 0x0);
        gbc.writeMem(0xe134, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1d04, gbc.sp());
        EXPECT(0xe136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe134));
        EXPECT(0xd, gbc.readMem(0xe135));
        // CB 0D 0340
        gbc.setState(0xb312, 0x4ee9, 0xcae0, 0x111e, 0xa7ee, 0xc5bb, 0x1, 0x1);
        gbc.writeMem(0xb312, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4ee9, gbc.sp());
        EXPECT(0xb314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb312));
        EXPECT(0xd, gbc.readMem(0xb313));
        // CB 0D 0341
        gbc.setState(0x5d0a, 0x7609, 0x9cf0, 0x2644, 0x2726, 0x8bd5, 0x0, 0x0);
        gbc.writeMem(0x5d0a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7609, gbc.sp());
        EXPECT(0x5d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0342
        gbc.setState(0x69db, 0x18fa, 0xe1a0, 0xedf4, 0x885, 0xd808, 0x0, 0x1);
        gbc.writeMem(0x69db, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x18fa, gbc.sp());
        EXPECT(0x69dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0343
        gbc.setState(0xc7f6, 0x4afc, 0x1e10, 0x7380, 0x51e8, 0xbdee, 0x1, 0x1);
        gbc.writeMem(0xc7f6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4afc, gbc.sp());
        EXPECT(0xc7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f6));
        EXPECT(0xd, gbc.readMem(0xc7f7));
        // CB 0D 0344
        gbc.setState(0x2f, 0x9a27, 0xbc80, 0x99b, 0xcc01, 0x47ee, 0x0, 0x0);
        gbc.writeMem(0x2f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9a27, gbc.sp());
        EXPECT(0x31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0345
        gbc.setState(0x23c7, 0xb54, 0x2860, 0x36d5, 0xa14f, 0x2642, 0x1, 0x0);
        gbc.writeMem(0x23c7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb54, gbc.sp());
        EXPECT(0x23c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0346
        gbc.setState(0x11f9, 0x6da8, 0x100, 0x856e, 0x2436, 0x9aad, 0x1, 0x0);
        gbc.writeMem(0x11f9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6da8, gbc.sp());
        EXPECT(0x11fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0348
        gbc.setState(0x7420, 0xd4f8, 0x10a0, 0x3e19, 0x61f6, 0x9934, 0x1, 0x0);
        gbc.writeMem(0x7420, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd4f8, gbc.sp());
        EXPECT(0x7422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0349
        gbc.setState(0x6ae2, 0xe9bd, 0xeda0, 0xbca6, 0xd666, 0x5cea, 0x0, 0x0);
        gbc.writeMem(0x6ae2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe9bd, gbc.sp());
        EXPECT(0x6ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 034A
        gbc.setState(0x46ae, 0x2d8a, 0x9c70, 0x28ba, 0x4016, 0x7ee3, 0x0, 0x0);
        gbc.writeMem(0x46ae, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2d8a, gbc.sp());
        EXPECT(0x46b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 034B
        gbc.setState(0x1871, 0xbcc8, 0xb760, 0x6be0, 0x47af, 0xa082, 0x0, 0x0);
        gbc.writeMem(0x1871, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbcc8, gbc.sp());
        EXPECT(0x1873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 034C
        gbc.setState(0x244d, 0xd02b, 0x4aa0, 0x4934, 0xf7b3, 0xb406, 0x1, 0x0);
        gbc.writeMem(0x244d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd02b, gbc.sp());
        EXPECT(0x244f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 034D
        gbc.setState(0xc84c, 0xce86, 0x3630, 0x81fe, 0x5d5a, 0xb72e, 0x1, 0x1);
        gbc.writeMem(0xc84c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xce86, gbc.sp());
        EXPECT(0xc84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84c));
        EXPECT(0xd, gbc.readMem(0xc84d));
        // CB 0D 034E
        gbc.setState(0x260d, 0xfbc0, 0x4820, 0xd263, 0x74c9, 0xe99f, 0x1, 0x0);
        gbc.writeMem(0x260d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfbc0, gbc.sp());
        EXPECT(0x260f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 034F
        gbc.setState(0x7b31, 0xcc82, 0x9250, 0xcc3a, 0xd534, 0x99a3, 0x0, 0x1);
        gbc.writeMem(0x7b31, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcc82, gbc.sp());
        EXPECT(0x7b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0350
        gbc.setState(0xc036, 0xc78d, 0xbc80, 0x6d04, 0x5610, 0x5dbd, 0x1, 0x0);
        gbc.writeMem(0xc036, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc78d, gbc.sp());
        EXPECT(0xc038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc036));
        EXPECT(0xd, gbc.readMem(0xc037));
        // CB 0D 0352
        gbc.setState(0xa69b, 0x891b, 0xd10, 0x20ca, 0xb6a5, 0x270b, 0x0, 0x1);
        gbc.writeMem(0xa69b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x891b, gbc.sp());
        EXPECT(0xa69d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa69b));
        EXPECT(0xd, gbc.readMem(0xa69c));
        // CB 0D 0353
        gbc.setState(0x3f79, 0x800e, 0xf950, 0x5ddf, 0xd128, 0x857a, 0x1, 0x0);
        gbc.writeMem(0x3f79, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x800e, gbc.sp());
        EXPECT(0x3f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0354
        gbc.setState(0xe0a5, 0x165c, 0xc340, 0xd5d0, 0x30f3, 0x2321, 0x1, 0x1);
        gbc.writeMem(0xe0a5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x165c, gbc.sp());
        EXPECT(0xe0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a5));
        EXPECT(0xd, gbc.readMem(0xe0a6));
        // CB 0D 0355
        gbc.setState(0xde49, 0xff18, 0xe630, 0x9efd, 0xbde8, 0x1a71, 0x0, 0x0);
        gbc.writeMem(0xde49, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xff18, gbc.sp());
        EXPECT(0xde4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde49));
        EXPECT(0xd, gbc.readMem(0xde4a));
        // CB 0D 0356
        gbc.setState(0xe79, 0xd331, 0xbd20, 0xdad4, 0x4d57, 0x3dbc, 0x1, 0x1);
        gbc.writeMem(0xe79, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd331, gbc.sp());
        EXPECT(0xe7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0357
        gbc.setState(0x4c95, 0x67bb, 0x66a0, 0x490d, 0x812d, 0x4188, 0x0, 0x1);
        gbc.writeMem(0x4c95, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x67bb, gbc.sp());
        EXPECT(0x4c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0358
        gbc.setState(0xbcb2, 0xebc8, 0xe2e0, 0x132a, 0x2a9e, 0x777f, 0x0, 0x0);
        gbc.writeMem(0xbcb2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xebc8, gbc.sp());
        EXPECT(0xbcb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb2));
        EXPECT(0xd, gbc.readMem(0xbcb3));
        // CB 0D 0359
        gbc.setState(0x27b3, 0x2dc8, 0xbd00, 0xa71e, 0x5551, 0x6d11, 0x1, 0x1);
        gbc.writeMem(0x27b3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2dc8, gbc.sp());
        EXPECT(0x27b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 035B
        gbc.setState(0x1f79, 0xea74, 0x30f0, 0xdeb8, 0x5097, 0x5eb8, 0x1, 0x1);
        gbc.writeMem(0x1f79, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xea74, gbc.sp());
        EXPECT(0x1f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 035C
        gbc.setState(0xc429, 0xadc3, 0x7c20, 0xac35, 0xcbca, 0x75f, 0x0, 0x1);
        gbc.writeMem(0xc429, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xadc3, gbc.sp());
        EXPECT(0xc42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc429));
        EXPECT(0xd, gbc.readMem(0xc42a));
        // CB 0D 035D
        gbc.setState(0xc354, 0x2ae, 0xf570, 0xa8c, 0xf09d, 0xaa2d, 0x0, 0x0);
        gbc.writeMem(0xc354, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2ae, gbc.sp());
        EXPECT(0xc356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc354));
        EXPECT(0xd, gbc.readMem(0xc355));
        // CB 0D 035F
        gbc.setState(0x7f2e, 0x49bf, 0x5b90, 0xf5ef, 0x8993, 0x992a, 0x0, 0x0);
        gbc.writeMem(0x7f2e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x49bf, gbc.sp());
        EXPECT(0x7f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0360
        gbc.setState(0x98e2, 0xe375, 0x5c10, 0xbdc0, 0x2a41, 0xd8b8, 0x1, 0x1);
        gbc.writeMem(0x98e2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe375, gbc.sp());
        EXPECT(0x98e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e2));
        EXPECT(0xd, gbc.readMem(0x98e3));
        // CB 0D 0361
        gbc.setState(0x6884, 0x4218, 0x24f0, 0x9ec9, 0xeb68, 0x287c, 0x1, 0x1);
        gbc.writeMem(0x6884, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4218, gbc.sp());
        EXPECT(0x6886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0362
        gbc.setState(0xb700, 0xdd6e, 0x2230, 0x3992, 0x3c2, 0x9859, 0x1, 0x1);
        gbc.writeMem(0xb700, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdd6e, gbc.sp());
        EXPECT(0xb702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb700));
        EXPECT(0xd, gbc.readMem(0xb701));
        // CB 0D 0363
        gbc.setState(0xd56e, 0xed59, 0x4460, 0xbf35, 0xe419, 0xbf57, 0x1, 0x0);
        gbc.writeMem(0xd56e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xed59, gbc.sp());
        EXPECT(0xd570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd56e));
        EXPECT(0xd, gbc.readMem(0xd56f));
        // CB 0D 0364
        gbc.setState(0xb356, 0xe729, 0xb500, 0x7643, 0xcbac, 0x27cb, 0x1, 0x1);
        gbc.writeMem(0xb356, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe729, gbc.sp());
        EXPECT(0xb358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb356));
        EXPECT(0xd, gbc.readMem(0xb357));
        // CB 0D 0365
        gbc.setState(0x1687, 0xd01e, 0x41b0, 0x85fb, 0x655b, 0x98eb, 0x0, 0x0);
        gbc.writeMem(0x1687, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd01e, gbc.sp());
        EXPECT(0x1689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0366
        gbc.setState(0xa1d5, 0x94db, 0x3d40, 0x5606, 0x29d0, 0x3946, 0x0, 0x0);
        gbc.writeMem(0xa1d5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x94db, gbc.sp());
        EXPECT(0xa1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d5));
        EXPECT(0xd, gbc.readMem(0xa1d6));
        // CB 0D 0367
        gbc.setState(0x5e76, 0xc60f, 0x62a0, 0xdd1e, 0xf8b0, 0x35cb, 0x1, 0x0);
        gbc.writeMem(0x5e76, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc60f, gbc.sp());
        EXPECT(0x5e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0368
        gbc.setState(0x958b, 0x7d5e, 0x8eb0, 0x5526, 0xb34c, 0x456a, 0x0, 0x1);
        gbc.writeMem(0x958b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7d5e, gbc.sp());
        EXPECT(0x958d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x958b));
        EXPECT(0xd, gbc.readMem(0x958c));
        // CB 0D 0369
        gbc.setState(0x10e5, 0x771, 0x8c60, 0xba39, 0x4a99, 0x576c, 0x1, 0x1);
        gbc.writeMem(0x10e5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x771, gbc.sp());
        EXPECT(0x10e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 036A
        gbc.setState(0xddf, 0xaf02, 0xb2b0, 0x951e, 0xfc83, 0x1395, 0x0, 0x0);
        gbc.writeMem(0xddf, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaf02, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 036B
        gbc.setState(0x3da, 0xe485, 0xb100, 0x47be, 0x5f0f, 0xc57, 0x0, 0x1);
        gbc.writeMem(0x3da, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe485, gbc.sp());
        EXPECT(0x3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 036C
        gbc.setState(0x4a3d, 0x7334, 0xd5b0, 0x1e95, 0xb4c5, 0xfc90, 0x1, 0x0);
        gbc.writeMem(0x4a3d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7334, gbc.sp());
        EXPECT(0x4a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 036D
        gbc.setState(0xe21a, 0xf622, 0x6f10, 0x89a3, 0x240f, 0xddc6, 0x0, 0x0);
        gbc.writeMem(0xe21a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf622, gbc.sp());
        EXPECT(0xe21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21a));
        EXPECT(0xd, gbc.readMem(0xe21b));
        // CB 0D 036E
        gbc.setState(0x98d4, 0xed87, 0x60b0, 0xe71b, 0x44ed, 0xe047, 0x0, 0x1);
        gbc.writeMem(0x98d4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xed87, gbc.sp());
        EXPECT(0x98d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d4));
        EXPECT(0xd, gbc.readMem(0x98d5));
        // CB 0D 036F
        gbc.setState(0x27b2, 0x1e7b, 0xb4c0, 0xb6bd, 0x8c7a, 0x863d, 0x0, 0x0);
        gbc.writeMem(0x27b2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1e7b, gbc.sp());
        EXPECT(0x27b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0370
        gbc.setState(0x1a58, 0x7f6f, 0x42b0, 0x8d2c, 0xc867, 0x9ecc, 0x0, 0x1);
        gbc.writeMem(0x1a58, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7f6f, gbc.sp());
        EXPECT(0x1a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0371
        gbc.setState(0xabd1, 0x8261, 0xeb70, 0x2020, 0x57b5, 0xd978, 0x1, 0x0);
        gbc.writeMem(0xabd1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8261, gbc.sp());
        EXPECT(0xabd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd1));
        EXPECT(0xd, gbc.readMem(0xabd2));
        // CB 0D 0372
        gbc.setState(0x204e, 0x7ce7, 0x8f60, 0x1d5a, 0x6f11, 0x2382, 0x1, 0x0);
        gbc.writeMem(0x204e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7ce7, gbc.sp());
        EXPECT(0x2050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0373
        gbc.setState(0x91f2, 0x958, 0xd530, 0x4f6f, 0xd1d6, 0xdbca, 0x1, 0x1);
        gbc.writeMem(0x91f2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x958, gbc.sp());
        EXPECT(0x91f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f2));
        EXPECT(0xd, gbc.readMem(0x91f3));
        // CB 0D 0374
        gbc.setState(0xcb2c, 0x40c1, 0x8350, 0xcd92, 0xd29c, 0x218f, 0x1, 0x0);
        gbc.writeMem(0xcb2c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x40c1, gbc.sp());
        EXPECT(0xcb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2c));
        EXPECT(0xd, gbc.readMem(0xcb2d));
        // CB 0D 0375
        gbc.setState(0xdb2b, 0x8037, 0xe6a0, 0x8669, 0xe26b, 0x627, 0x0, 0x1);
        gbc.writeMem(0xdb2b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8037, gbc.sp());
        EXPECT(0xdb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2b));
        EXPECT(0xd, gbc.readMem(0xdb2c));
        // CB 0D 0377
        gbc.setState(0x6611, 0x309f, 0x6e10, 0xabc9, 0x8699, 0x8256, 0x1, 0x0);
        gbc.writeMem(0x6611, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x309f, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0378
        gbc.setState(0x6802, 0x5c46, 0x82c0, 0x4093, 0xa997, 0x9130, 0x1, 0x1);
        gbc.writeMem(0x6802, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5c46, gbc.sp());
        EXPECT(0x6804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0379
        gbc.setState(0xa407, 0x5c39, 0x6d30, 0x2a29, 0xcdb, 0x66ca, 0x0, 0x0);
        gbc.writeMem(0xa407, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5c39, gbc.sp());
        EXPECT(0xa409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa407));
        EXPECT(0xd, gbc.readMem(0xa408));
        // CB 0D 037A
        gbc.setState(0xcd86, 0x1b0, 0x1f10, 0x1a99, 0xe80b, 0xf8b4, 0x0, 0x1);
        gbc.writeMem(0xcd86, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1b0, gbc.sp());
        EXPECT(0xcd88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd86));
        EXPECT(0xd, gbc.readMem(0xcd87));
        // CB 0D 037B
        gbc.setState(0xcf5f, 0xd84f, 0xb420, 0xb273, 0x64c3, 0xf7f9, 0x1, 0x0);
        gbc.writeMem(0xcf5f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd84f, gbc.sp());
        EXPECT(0xcf61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf5f));
        EXPECT(0xd, gbc.readMem(0xcf60));
        // CB 0D 037C
        gbc.setState(0x535, 0x24e1, 0x5ba0, 0x6064, 0xb0ce, 0x2aab, 0x0, 0x0);
        gbc.writeMem(0x535, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x24e1, gbc.sp());
        EXPECT(0x537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 037D
        gbc.setState(0xb807, 0x3fee, 0x7470, 0x6be4, 0x486e, 0x9873, 0x1, 0x1);
        gbc.writeMem(0xb807, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3fee, gbc.sp());
        EXPECT(0xb809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb807));
        EXPECT(0xd, gbc.readMem(0xb808));
        // CB 0D 037E
        gbc.setState(0xe7f3, 0x312a, 0xb610, 0xcc93, 0xe21c, 0xae02, 0x0, 0x0);
        gbc.writeMem(0xe7f3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x312a, gbc.sp());
        EXPECT(0xe7f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f3));
        EXPECT(0xd, gbc.readMem(0xe7f4));
        // CB 0D 037F
        gbc.setState(0x6dfe, 0x9bad, 0x4d60, 0x5cf, 0xd29f, 0x9cfe, 0x0, 0x1);
        gbc.writeMem(0x6dfe, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9bad, gbc.sp());
        EXPECT(0x6e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0380
        gbc.setState(0x1b8b, 0x8a49, 0xc940, 0xcdf5, 0xa676, 0x717b, 0x1, 0x0);
        gbc.writeMem(0x1b8b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8a49, gbc.sp());
        EXPECT(0x1b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0381
        gbc.setState(0x267d, 0x67a2, 0xe350, 0xf823, 0x4074, 0x3c1c, 0x0, 0x1);
        gbc.writeMem(0x267d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x67a2, gbc.sp());
        EXPECT(0x267f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0382
        gbc.setState(0xe91d, 0xc8ab, 0x18c0, 0x5d35, 0xe752, 0xb302, 0x1, 0x0);
        gbc.writeMem(0xe91d, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc8ab, gbc.sp());
        EXPECT(0xe91f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91d));
        EXPECT(0xd, gbc.readMem(0xe91e));
        // CB 0D 0383
        gbc.setState(0xceec, 0x1606, 0xcc80, 0xccae, 0xc9db, 0x9f43, 0x1, 0x0);
        gbc.writeMem(0xceec, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1606, gbc.sp());
        EXPECT(0xceee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceec));
        EXPECT(0xd, gbc.readMem(0xceed));
        // CB 0D 0384
        gbc.setState(0x655a, 0xc8dd, 0x7400, 0xe4f1, 0x6a3, 0x1892, 0x0, 0x0);
        gbc.writeMem(0x655a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc8dd, gbc.sp());
        EXPECT(0x655c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0385
        gbc.setState(0xe51b, 0xfa27, 0x20a0, 0x34d1, 0xecce, 0x5142, 0x1, 0x0);
        gbc.writeMem(0xe51b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfa27, gbc.sp());
        EXPECT(0xe51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51b));
        EXPECT(0xd, gbc.readMem(0xe51c));
        // CB 0D 0386
        gbc.setState(0xb772, 0xd0cb, 0x1e70, 0xc99, 0x6318, 0xc907, 0x0, 0x1);
        gbc.writeMem(0xb772, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd0cb, gbc.sp());
        EXPECT(0xb774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb772));
        EXPECT(0xd, gbc.readMem(0xb773));
        // CB 0D 0387
        gbc.setState(0x4c6e, 0x65c2, 0x3e0, 0x9583, 0x1963, 0x3fe2, 0x0, 0x0);
        gbc.writeMem(0x4c6e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x65c2, gbc.sp());
        EXPECT(0x4c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0389
        gbc.setState(0xb2db, 0x35a8, 0x84e0, 0xc224, 0xe941, 0x2ec6, 0x1, 0x1);
        gbc.writeMem(0xb2db, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x35a8, gbc.sp());
        EXPECT(0xb2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2db));
        EXPECT(0xd, gbc.readMem(0xb2dc));
        // CB 0D 038A
        gbc.setState(0x4462, 0x951, 0xdd70, 0x8b1e, 0x9471, 0xef31, 0x0, 0x0);
        gbc.writeMem(0x4462, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x951, gbc.sp());
        EXPECT(0x4464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 038B
        gbc.setState(0x7fd2, 0xab6c, 0xa1a0, 0xc088, 0xffae, 0xf178, 0x0, 0x0);
        gbc.writeMem(0x7fd2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xab6c, gbc.sp());
        EXPECT(0x7fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 038C
        gbc.setState(0x99fb, 0x188b, 0xbaf0, 0x9abe, 0xa7cc, 0x8b0, 0x0, 0x1);
        gbc.writeMem(0x99fb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x188b, gbc.sp());
        EXPECT(0x99fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fb));
        EXPECT(0xd, gbc.readMem(0x99fc));
        // CB 0D 038D
        gbc.setState(0xec8e, 0x7970, 0x5630, 0xe1d5, 0x59a9, 0x613b, 0x0, 0x1);
        gbc.writeMem(0xec8e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7970, gbc.sp());
        EXPECT(0xec90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec8e));
        EXPECT(0xd, gbc.readMem(0xec8f));
        // CB 0D 038E
        gbc.setState(0x3f21, 0xcd7a, 0x7e30, 0x2575, 0xf9e4, 0xf356, 0x1, 0x1);
        gbc.writeMem(0x3f21, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcd7a, gbc.sp());
        EXPECT(0x3f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 038F
        gbc.setState(0x68cd, 0x53f1, 0xeec0, 0xf541, 0xba1e, 0xa639, 0x0, 0x0);
        gbc.writeMem(0x68cd, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x53f1, gbc.sp());
        EXPECT(0x68cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0390
        gbc.setState(0xa516, 0x89c4, 0x9650, 0xa26c, 0x5cad, 0x8cb3, 0x0, 0x0);
        gbc.writeMem(0xa516, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x89c4, gbc.sp());
        EXPECT(0xa518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa516));
        EXPECT(0xd, gbc.readMem(0xa517));
        // CB 0D 0391
        gbc.setState(0xd0c8, 0x4aa9, 0xb100, 0xe87b, 0xdff7, 0xb0b8, 0x1, 0x0);
        gbc.writeMem(0xd0c8, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4aa9, gbc.sp());
        EXPECT(0xd0ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c8));
        EXPECT(0xd, gbc.readMem(0xd0c9));
        // CB 0D 0392
        gbc.setState(0x19c7, 0xdb03, 0xb820, 0x2173, 0x714d, 0x5b36, 0x0, 0x1);
        gbc.writeMem(0x19c7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdb03, gbc.sp());
        EXPECT(0x19c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0393
        gbc.setState(0xe06b, 0x29fe, 0x4cb0, 0xef6c, 0x67af, 0xd84e, 0x0, 0x0);
        gbc.writeMem(0xe06b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x29fe, gbc.sp());
        EXPECT(0xe06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06b));
        EXPECT(0xd, gbc.readMem(0xe06c));
        // CB 0D 0394
        gbc.setState(0x9284, 0xdde2, 0x2230, 0xcd34, 0x6902, 0xb0eb, 0x0, 0x1);
        gbc.writeMem(0x9284, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdde2, gbc.sp());
        EXPECT(0x9286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9284));
        EXPECT(0xd, gbc.readMem(0x9285));
        // CB 0D 0395
        gbc.setState(0x1cec, 0x29e7, 0xb620, 0x4ee9, 0xfb05, 0x9d55, 0x0, 0x0);
        gbc.writeMem(0x1cec, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x29e7, gbc.sp());
        EXPECT(0x1cee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0396
        gbc.setState(0x6f34, 0xa33b, 0xcfe0, 0xd19b, 0x8606, 0x665c, 0x0, 0x0);
        gbc.writeMem(0x6f34, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa33b, gbc.sp());
        EXPECT(0x6f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 0397
        gbc.setState(0x54ca, 0x5120, 0x2e40, 0x314e, 0x4d98, 0x5145, 0x1, 0x1);
        gbc.writeMem(0x54ca, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5120, gbc.sp());
        EXPECT(0x54cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 0398
        gbc.setState(0xccb9, 0xa90b, 0x9c30, 0x73d6, 0x7b5, 0x5727, 0x1, 0x1);
        gbc.writeMem(0xccb9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa90b, gbc.sp());
        EXPECT(0xccbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb9));
        EXPECT(0xd, gbc.readMem(0xccba));
        // CB 0D 0399
        gbc.setState(0x107a, 0x89f4, 0x78e0, 0x8cab, 0x1f04, 0x6e64, 0x0, 0x1);
        gbc.writeMem(0x107a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x89f4, gbc.sp());
        EXPECT(0x107c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 039A
        gbc.setState(0xdd53, 0x2342, 0xc630, 0x4d17, 0xfb9c, 0xc619, 0x1, 0x0);
        gbc.writeMem(0xdd53, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2342, gbc.sp());
        EXPECT(0xdd55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd53));
        EXPECT(0xd, gbc.readMem(0xdd54));
        // CB 0D 039C
        gbc.setState(0xd7c1, 0x7e1b, 0xfe20, 0xf874, 0xfa33, 0xfcc5, 0x0, 0x1);
        gbc.writeMem(0xd7c1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7e1b, gbc.sp());
        EXPECT(0xd7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c1));
        EXPECT(0xd, gbc.readMem(0xd7c2));
        // CB 0D 039D
        gbc.setState(0x803a, 0x7347, 0x19f0, 0x11fc, 0xa68e, 0xa98, 0x1, 0x0);
        gbc.writeMem(0x803a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7347, gbc.sp());
        EXPECT(0x803c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803a));
        EXPECT(0xd, gbc.readMem(0x803b));
        // CB 0D 039E
        gbc.setState(0x8b0, 0xa4db, 0xb000, 0xd792, 0x4790, 0x1da9, 0x0, 0x0);
        gbc.writeMem(0x8b0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa4db, gbc.sp());
        EXPECT(0x8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 039F
        gbc.setState(0xefd3, 0x8322, 0xa10, 0x3bef, 0x1c0d, 0x9ab3, 0x0, 0x0);
        gbc.writeMem(0xefd3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8322, gbc.sp());
        EXPECT(0xefd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd3));
        EXPECT(0xd, gbc.readMem(0xefd4));
        // CB 0D 03A0
        gbc.setState(0x7b82, 0xead9, 0xfff0, 0xd6c9, 0x490c, 0xa661, 0x0, 0x0);
        gbc.writeMem(0x7b82, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xead9, gbc.sp());
        EXPECT(0x7b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03A1
        gbc.setState(0x4cbd, 0xd7a9, 0x8eb0, 0xa5b1, 0x569b, 0xe6a8, 0x0, 0x1);
        gbc.writeMem(0x4cbd, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd7a9, gbc.sp());
        EXPECT(0x4cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03A4
        gbc.setState(0xda76, 0xede8, 0x59c0, 0x93df, 0xd63, 0xdbb, 0x1, 0x0);
        gbc.writeMem(0xda76, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xede8, gbc.sp());
        EXPECT(0xda78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda76));
        EXPECT(0xd, gbc.readMem(0xda77));
        // CB 0D 03A5
        gbc.setState(0xb7dc, 0x58bd, 0x7cc0, 0x4af8, 0x9e41, 0xa4c8, 0x1, 0x0);
        gbc.writeMem(0xb7dc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x58bd, gbc.sp());
        EXPECT(0xb7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7dc));
        EXPECT(0xd, gbc.readMem(0xb7dd));
        // CB 0D 03A6
        gbc.setState(0x2bcb, 0x6cf, 0x42f0, 0xa16e, 0xe653, 0x122a, 0x1, 0x0);
        gbc.writeMem(0x2bcb, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6cf, gbc.sp());
        EXPECT(0x2bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03A7
        gbc.setState(0x8c6f, 0x4908, 0x5f90, 0xdfb4, 0x2e46, 0xb235, 0x1, 0x0);
        gbc.writeMem(0x8c6f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4908, gbc.sp());
        EXPECT(0x8c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6f));
        EXPECT(0xd, gbc.readMem(0x8c70));
        // CB 0D 03A8
        gbc.setState(0x6543, 0x4f89, 0x8860, 0x9fe7, 0x54f3, 0x3377, 0x1, 0x0);
        gbc.writeMem(0x6543, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4f89, gbc.sp());
        EXPECT(0x6545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03A9
        gbc.setState(0x847e, 0x4c82, 0x38e0, 0x381e, 0xaa0c, 0xddee, 0x0, 0x1);
        gbc.writeMem(0x847e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4c82, gbc.sp());
        EXPECT(0x8480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847e));
        EXPECT(0xd, gbc.readMem(0x847f));
        // CB 0D 03AA
        gbc.setState(0x99f1, 0x3f66, 0x3370, 0x1ef2, 0x9b9f, 0xa32a, 0x1, 0x1);
        gbc.writeMem(0x99f1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3f66, gbc.sp());
        EXPECT(0x99f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f1));
        EXPECT(0xd, gbc.readMem(0x99f2));
        // CB 0D 03AB
        gbc.setState(0x6534, 0x64a0, 0x70e0, 0xd87, 0x4f78, 0x3852, 0x0, 0x0);
        gbc.writeMem(0x6534, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x64a0, gbc.sp());
        EXPECT(0x6536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03AC
        gbc.setState(0x4c14, 0xfa54, 0xd160, 0x8584, 0xbde6, 0x569e, 0x0, 0x1);
        gbc.writeMem(0x4c14, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfa54, gbc.sp());
        EXPECT(0x4c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03AD
        gbc.setState(0x46d4, 0xb130, 0xa8f0, 0xa294, 0xb4d, 0x5ad3, 0x1, 0x0);
        gbc.writeMem(0x46d4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb130, gbc.sp());
        EXPECT(0x46d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03AE
        gbc.setState(0xef31, 0xca02, 0xfe20, 0x233c, 0xa20, 0x7529, 0x1, 0x0);
        gbc.writeMem(0xef31, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xca02, gbc.sp());
        EXPECT(0xef33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef31));
        EXPECT(0xd, gbc.readMem(0xef32));
        // CB 0D 03AF
        gbc.setState(0x9f0, 0x3649, 0x8670, 0xb8a3, 0x2b58, 0x36ee, 0x1, 0x0);
        gbc.writeMem(0x9f0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3649, gbc.sp());
        EXPECT(0x9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03B0
        gbc.setState(0xa76f, 0xd45, 0xd80, 0x92a, 0xe1a5, 0x96b3, 0x0, 0x1);
        gbc.writeMem(0xa76f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd45, gbc.sp());
        EXPECT(0xa771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76f));
        EXPECT(0xd, gbc.readMem(0xa770));
        // CB 0D 03B1
        gbc.setState(0x17e5, 0xc92c, 0x98b0, 0x8c9a, 0xe9ec, 0xb8db, 0x0, 0x0);
        gbc.writeMem(0x17e5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc92c, gbc.sp());
        EXPECT(0x17e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03B2
        gbc.setState(0x1cd4, 0x7fc8, 0x7f20, 0x18d3, 0xd706, 0x5017, 0x1, 0x1);
        gbc.writeMem(0x1cd4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7fc8, gbc.sp());
        EXPECT(0x1cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03B3
        gbc.setState(0x7582, 0x9b2b, 0xa9d0, 0xec0a, 0x1398, 0xc19c, 0x0, 0x0);
        gbc.writeMem(0x7582, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9b2b, gbc.sp());
        EXPECT(0x7584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03B4
        gbc.setState(0x14f6, 0xf8bb, 0x9540, 0xdb45, 0x8eb9, 0xfbe7, 0x0, 0x0);
        gbc.writeMem(0x14f6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf8bb, gbc.sp());
        EXPECT(0x14f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03B5
        gbc.setState(0xe7f7, 0x3785, 0xcec0, 0x33c1, 0xdcec, 0xef2c, 0x1, 0x1);
        gbc.writeMem(0xe7f7, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3785, gbc.sp());
        EXPECT(0xe7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f7));
        EXPECT(0xd, gbc.readMem(0xe7f8));
        // CB 0D 03B6
        gbc.setState(0xdea3, 0xbab7, 0xc620, 0x55d9, 0x3d5a, 0xcc39, 0x1, 0x1);
        gbc.writeMem(0xdea3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbab7, gbc.sp());
        EXPECT(0xdea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea3));
        EXPECT(0xd, gbc.readMem(0xdea4));
        // CB 0D 03B7
        gbc.setState(0xaee9, 0x943, 0xad40, 0x6c94, 0x8da0, 0xa946, 0x0, 0x0);
        gbc.writeMem(0xaee9, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x943, gbc.sp());
        EXPECT(0xaeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee9));
        EXPECT(0xd, gbc.readMem(0xaeea));
        // CB 0D 03B8
        gbc.setState(0x7ad4, 0x96ac, 0xa320, 0xeaa7, 0x276d, 0xb32f, 0x1, 0x0);
        gbc.writeMem(0x7ad4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x96ac, gbc.sp());
        EXPECT(0x7ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03B9
        gbc.setState(0x3655, 0x76cc, 0x8f40, 0x334f, 0x87ad, 0x9273, 0x1, 0x0);
        gbc.writeMem(0x3655, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x76cc, gbc.sp());
        EXPECT(0x3657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03BA
        gbc.setState(0x7126, 0x926b, 0x5fe0, 0x2582, 0x45e5, 0xc2aa, 0x0, 0x0);
        gbc.writeMem(0x7126, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x926b, gbc.sp());
        EXPECT(0x7128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03BB
        gbc.setState(0xb39, 0x7e7c, 0x8a70, 0x6df6, 0x3312, 0x52b5, 0x1, 0x1);
        gbc.writeMem(0xb39, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7e7c, gbc.sp());
        EXPECT(0xb3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03BC
        gbc.setState(0x6ee4, 0x3053, 0x2240, 0xd052, 0x845d, 0x6140, 0x0, 0x1);
        gbc.writeMem(0x6ee4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3053, gbc.sp());
        EXPECT(0x6ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03BE
        gbc.setState(0x9afa, 0x6a4a, 0x5100, 0xbce7, 0x4e02, 0xc1c4, 0x1, 0x1);
        gbc.writeMem(0x9afa, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6a4a, gbc.sp());
        EXPECT(0x9afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afa));
        EXPECT(0xd, gbc.readMem(0x9afb));
        // CB 0D 03BF
        gbc.setState(0x9397, 0x6f54, 0x60, 0x9fdd, 0xde9e, 0x9aa7, 0x0, 0x0);
        gbc.writeMem(0x9397, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6f54, gbc.sp());
        EXPECT(0x9399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9397));
        EXPECT(0xd, gbc.readMem(0x9398));
        // CB 0D 03C0
        gbc.setState(0xe5aa, 0x4c66, 0x3890, 0x5ad8, 0x7045, 0x9962, 0x1, 0x1);
        gbc.writeMem(0xe5aa, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4c66, gbc.sp());
        EXPECT(0xe5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5aa));
        EXPECT(0xd, gbc.readMem(0xe5ab));
        // CB 0D 03C1
        gbc.setState(0x59a4, 0x5ec1, 0x3450, 0x71a4, 0xaa6a, 0xa14, 0x0, 0x1);
        gbc.writeMem(0x59a4, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5ec1, gbc.sp());
        EXPECT(0x59a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03C2
        gbc.setState(0x159c, 0x82b8, 0x75b0, 0x3632, 0x6e92, 0x4bd0, 0x1, 0x1);
        gbc.writeMem(0x159c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x82b8, gbc.sp());
        EXPECT(0x159e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03C4
        gbc.setState(0x7cd0, 0x6d9f, 0x98b0, 0x6d31, 0x34c0, 0xf2d3, 0x1, 0x0);
        gbc.writeMem(0x7cd0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6d9f, gbc.sp());
        EXPECT(0x7cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03C5
        gbc.setState(0x262c, 0xda41, 0x4540, 0xbfdc, 0xe23f, 0xa308, 0x0, 0x0);
        gbc.writeMem(0x262c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xda41, gbc.sp());
        EXPECT(0x262e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03C6
        gbc.setState(0x3666, 0xb5ec, 0x66a0, 0xc80f, 0x2978, 0x57f0, 0x1, 0x1);
        gbc.writeMem(0x3666, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb5ec, gbc.sp());
        EXPECT(0x3668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03C7
        gbc.setState(0x8c52, 0x45ff, 0xc260, 0xff6f, 0x2231, 0x4cf8, 0x1, 0x0);
        gbc.writeMem(0x8c52, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x45ff, gbc.sp());
        EXPECT(0x8c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c52));
        EXPECT(0xd, gbc.readMem(0x8c53));
        // CB 0D 03C8
        gbc.setState(0xa3c2, 0xe309, 0xe3d0, 0xde66, 0x3a08, 0x6da0, 0x0, 0x0);
        gbc.writeMem(0xa3c2, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe309, gbc.sp());
        EXPECT(0xa3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c2));
        EXPECT(0xd, gbc.readMem(0xa3c3));
        // CB 0D 03C9
        gbc.setState(0x4464, 0xb23c, 0x49a0, 0x9d50, 0x307b, 0x8b4c, 0x0, 0x0);
        gbc.writeMem(0x4464, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb23c, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03CA
        gbc.setState(0x566a, 0x3c8f, 0xc7d0, 0x9d70, 0x62e6, 0x901a, 0x1, 0x1);
        gbc.writeMem(0x566a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3c8f, gbc.sp());
        EXPECT(0x566c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03CB
        gbc.setState(0x3733, 0x530c, 0xabc0, 0xb541, 0x5d33, 0x54f8, 0x0, 0x1);
        gbc.writeMem(0x3733, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x530c, gbc.sp());
        EXPECT(0x3735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03CC
        gbc.setState(0xd672, 0xd021, 0x4060, 0x3e3e, 0xf76f, 0x248a, 0x1, 0x1);
        gbc.writeMem(0xd672, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd021, gbc.sp());
        EXPECT(0xd674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd672));
        EXPECT(0xd, gbc.readMem(0xd673));
        // CB 0D 03CE
        gbc.setState(0x952b, 0x3cc8, 0xbf20, 0x3302, 0xcf44, 0xcb82, 0x0, 0x1);
        gbc.writeMem(0x952b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3cc8, gbc.sp());
        EXPECT(0x952d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952b));
        EXPECT(0xd, gbc.readMem(0x952c));
        // CB 0D 03CF
        gbc.setState(0xdd6f, 0xe76b, 0x1470, 0x6be9, 0x204f, 0xb432, 0x0, 0x1);
        gbc.writeMem(0xdd6f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe76b, gbc.sp());
        EXPECT(0xdd71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd6f));
        EXPECT(0xd, gbc.readMem(0xdd70));
        // CB 0D 03D0
        gbc.setState(0x63b, 0x92fe, 0xf080, 0x9d14, 0xe3c5, 0x1ecd, 0x1, 0x1);
        gbc.writeMem(0x63b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x92fe, gbc.sp());
        EXPECT(0x63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03D1
        gbc.setState(0x7ea1, 0x911c, 0x79a0, 0x647b, 0x4408, 0xf639, 0x0, 0x1);
        gbc.writeMem(0x7ea1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x911c, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03D2
        gbc.setState(0x7850, 0xf548, 0x65a0, 0xb104, 0x8a60, 0x784e, 0x1, 0x1);
        gbc.writeMem(0x7850, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf548, gbc.sp());
        EXPECT(0x7852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03D4
        gbc.setState(0xc8ae, 0x13c8, 0x2bd0, 0x2726, 0x5306, 0xa3be, 0x0, 0x0);
        gbc.writeMem(0xc8ae, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x13c8, gbc.sp());
        EXPECT(0xc8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ae));
        EXPECT(0xd, gbc.readMem(0xc8af));
        // CB 0D 03D5
        gbc.setState(0x3a03, 0xbe29, 0xd2f0, 0x875c, 0x7fd1, 0x3d92, 0x1, 0x1);
        gbc.writeMem(0x3a03, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbe29, gbc.sp());
        EXPECT(0x3a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03D6
        gbc.setState(0xb0ef, 0x834c, 0x95f0, 0xfe31, 0xe344, 0x7081, 0x1, 0x0);
        gbc.writeMem(0xb0ef, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x834c, gbc.sp());
        EXPECT(0xb0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ef));
        EXPECT(0xd, gbc.readMem(0xb0f0));
        // CB 0D 03D7
        gbc.setState(0x7af6, 0x992f, 0x61d0, 0x5dcf, 0x461a, 0xe397, 0x1, 0x1);
        gbc.writeMem(0x7af6, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x992f, gbc.sp());
        EXPECT(0x7af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03D8
        gbc.setState(0xb811, 0xcd8f, 0xcd30, 0xa911, 0x8946, 0xec49, 0x0, 0x1);
        gbc.writeMem(0xb811, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcd8f, gbc.sp());
        EXPECT(0xb813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb811));
        EXPECT(0xd, gbc.readMem(0xb812));
        // CB 0D 03D9
        gbc.setState(0xbd2b, 0xa932, 0xb1d0, 0x5226, 0xe63d, 0x205, 0x0, 0x0);
        gbc.writeMem(0xbd2b, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa932, gbc.sp());
        EXPECT(0xbd2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2b));
        EXPECT(0xd, gbc.readMem(0xbd2c));
        // CB 0D 03DA
        gbc.setState(0xcd1f, 0xc0b2, 0xd800, 0xb3ee, 0xcfdf, 0xeb07, 0x1, 0x1);
        gbc.writeMem(0xcd1f, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc0b2, gbc.sp());
        EXPECT(0xcd21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1f));
        EXPECT(0xd, gbc.readMem(0xcd20));
        // CB 0D 03DB
        gbc.setState(0xbab0, 0x85c5, 0xab50, 0xfe25, 0xd760, 0x32af, 0x0, 0x1);
        gbc.writeMem(0xbab0, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x85c5, gbc.sp());
        EXPECT(0xbab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab0));
        EXPECT(0xd, gbc.readMem(0xbab1));
        // CB 0D 03DC
        gbc.setState(0x37a, 0x63c4, 0x5340, 0xc526, 0xda50, 0x99bc, 0x1, 0x1);
        gbc.writeMem(0x37a, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x63c4, gbc.sp());
        EXPECT(0x37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03DD
        gbc.setState(0x4a02, 0x762, 0xc2b0, 0x16e5, 0x303a, 0x9b09, 0x0, 0x0);
        gbc.writeMem(0x4a02, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x762, gbc.sp());
        EXPECT(0x4a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03DE
        gbc.setState(0xa2a5, 0xfd2e, 0x68e0, 0xab3d, 0x5359, 0xb74e, 0x0, 0x0);
        gbc.writeMem(0xa2a5, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfd2e, gbc.sp());
        EXPECT(0xa2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a5));
        EXPECT(0xd, gbc.readMem(0xa2a6));
        // CB 0D 03DF
        gbc.setState(0x1e3e, 0xd9fd, 0x7fd0, 0x3fb0, 0xcdfc, 0x77bb, 0x0, 0x1);
        gbc.writeMem(0x1e3e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd9fd, gbc.sp());
        EXPECT(0x1e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03E0
        gbc.setState(0x14fa, 0x8541, 0xdc70, 0x36a1, 0x17ef, 0x2940, 0x1, 0x0);
        gbc.writeMem(0x14fa, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8541, gbc.sp());
        EXPECT(0x14fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03E2
        gbc.setState(0xabdc, 0x83a8, 0xf20, 0x1384, 0x5e88, 0xd0c, 0x0, 0x1);
        gbc.writeMem(0xabdc, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x83a8, gbc.sp());
        EXPECT(0xabde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabdc));
        EXPECT(0xd, gbc.readMem(0xabdd));
        // CB 0D 03E3
        gbc.setState(0x149e, 0x93f9, 0x2910, 0x3042, 0x5dca, 0x81da, 0x0, 0x1);
        gbc.writeMem(0x149e, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x93f9, gbc.sp());
        EXPECT(0x14a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03E4
        gbc.setState(0x464c, 0x2df9, 0x9ab0, 0x51ea, 0xd490, 0x26e9, 0x0, 0x1);
        gbc.writeMem(0x464c, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2df9, gbc.sp());
        EXPECT(0x464e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 0D 03E5
        gbc.setState(0x60a1, 0xdc46, 0x1210, 0x48fe, 0x3e54, 0x23ae, 0x1, 0x1);
        gbc.writeMem(0x60a1, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdc46, gbc.sp());
        EXPECT(0x60a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 0D 03E6
        gbc.setState(0x7e3, 0xe788, 0xd970, 0x66e4, 0x4067, 0xa553, 0x1, 0x0);
        gbc.writeMem(0x7e3, { 0xcb, 0xd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe788, gbc.sp());
        EXPECT(0x7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
