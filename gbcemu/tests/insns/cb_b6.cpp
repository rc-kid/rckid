#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_b6)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_b6) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B6 0000
        gbc.setState(0x4f40, 0x4898, 0xde0, 0x5ed, 0xe55f, 0xf03f, 0x1, 0x1);
        gbc.writeMem(0x4f40, { 0xcb, 0xb6 });
        gbc.writeMem(0xf03f, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4898);
        EXPECT(gbc.pc(), 0x4f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf03f), 0x35);
        // CB B6 0001
        gbc.setState(0x3074, 0xd48a, 0xecb0, 0xe06c, 0x650f, 0x3378, 0x0, 0x1);
        gbc.writeMem(0x3074, { 0xcb, 0xb6 });
        gbc.writeMem(0x3378, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd48a);
        EXPECT(gbc.pc(), 0x3076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0002
        gbc.setState(0xb9a6, 0xf83b, 0xbb90, 0x1eda, 0x420a, 0x129e, 0x1, 0x1);
        gbc.writeMem(0x129e, { 0x1b });
        gbc.writeMem(0xb9a6, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf83b);
        EXPECT(gbc.pc(), 0xb9a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a6), 0xcb);
        EXPECT(gbc.readMem(0xb9a7), 0xb6);
        // CB B6 0003
        gbc.setState(0xa963, 0x3a5a, 0x1a50, 0xb1bd, 0x7f5f, 0x7a87, 0x1, 0x1);
        gbc.writeMem(0x7a87, { 0xbe });
        gbc.writeMem(0xa963, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3a5a);
        EXPECT(gbc.pc(), 0xa965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa963), 0xcb);
        EXPECT(gbc.readMem(0xa964), 0xb6);
        // CB B6 0005
        gbc.setState(0xbe4e, 0x749b, 0x1ad0, 0x9abc, 0xcf7f, 0x96e4, 0x1, 0x0);
        gbc.writeMem(0x96e4, { 0x9f });
        gbc.writeMem(0xbe4e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x749b);
        EXPECT(gbc.pc(), 0xbe50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e4), 0x9f);
        EXPECT(gbc.readMem(0xbe4e), 0xcb);
        EXPECT(gbc.readMem(0xbe4f), 0xb6);
        // CB B6 0009
        gbc.setState(0x9e85, 0x6cb8, 0x1880, 0x2984, 0x1193, 0x4558, 0x0, 0x1);
        gbc.writeMem(0x4558, { 0xa8 });
        gbc.writeMem(0x9e85, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6cb8);
        EXPECT(gbc.pc(), 0x9e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e85), 0xcb);
        EXPECT(gbc.readMem(0x9e86), 0xb6);
        // CB B6 000A
        gbc.setState(0x863, 0x53f2, 0xc810, 0xe7f3, 0x1ed1, 0xe87e, 0x0, 0x1);
        gbc.writeMem(0x863, { 0xcb, 0xb6 });
        gbc.writeMem(0xe87e, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x53f2);
        EXPECT(gbc.pc(), 0x865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe87e), 0x28);
        // CB B6 000C
        gbc.setState(0x1226, 0x7d08, 0x6df0, 0xa38, 0xb200, 0xc0c9, 0x1, 0x1);
        gbc.writeMem(0x1226, { 0xcb, 0xb6 });
        gbc.writeMem(0xc0c9, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7d08);
        EXPECT(gbc.pc(), 0x1228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c9), 0xa2);
        // CB B6 000E
        gbc.setState(0x8540, 0x5dd8, 0x5000, 0x7036, 0xf59a, 0x5851, 0x1, 0x0);
        gbc.writeMem(0x5851, { 0xb });
        gbc.writeMem(0x8540, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5dd8);
        EXPECT(gbc.pc(), 0x8542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8540), 0xcb);
        EXPECT(gbc.readMem(0x8541), 0xb6);
        // CB B6 000F
        gbc.setState(0x8bc1, 0xdbb1, 0x9260, 0x7914, 0x7b5d, 0xf750, 0x1, 0x0);
        gbc.writeMem(0x8bc1, { 0xcb, 0xb6 });
        gbc.writeMem(0xf750, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xdbb1);
        EXPECT(gbc.pc(), 0x8bc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc1), 0xcb);
        EXPECT(gbc.readMem(0x8bc2), 0xb6);
        EXPECT(gbc.readMem(0xf750), 0x8a);
        // CB B6 0010
        gbc.setState(0x64a2, 0x2961, 0xd7e0, 0x77f1, 0x2b10, 0x4f28, 0x0, 0x0);
        gbc.writeMem(0x4f28, { 0xab });
        gbc.writeMem(0x64a2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2961);
        EXPECT(gbc.pc(), 0x64a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0011
        gbc.setState(0x25d, 0x8aed, 0xa630, 0xce32, 0x3b08, 0x8ad, 0x1, 0x0);
        gbc.writeMem(0x25d, { 0xcb, 0xb6 });
        gbc.writeMem(0x8ad, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8aed);
        EXPECT(gbc.pc(), 0x25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0012
        gbc.setState(0x26e4, 0xd9bd, 0xd920, 0xb59e, 0x6136, 0x601, 0x0, 0x0);
        gbc.writeMem(0x601, { 0x1c });
        gbc.writeMem(0x26e4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd9bd);
        EXPECT(gbc.pc(), 0x26e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0013
        gbc.setState(0xefa3, 0xb7b6, 0x8a00, 0x9368, 0xc73f, 0x74d7, 0x1, 0x1);
        gbc.writeMem(0x74d7, { 0x94 });
        gbc.writeMem(0xefa3, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb7b6);
        EXPECT(gbc.pc(), 0xefa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa3), 0xcb);
        EXPECT(gbc.readMem(0xefa4), 0xb6);
        // CB B6 0014
        gbc.setState(0x80b0, 0xd707, 0x77c0, 0x3406, 0x8250, 0xbbcd, 0x0, 0x0);
        gbc.writeMem(0x80b0, { 0xcb, 0xb6 });
        gbc.writeMem(0xbbcd, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd707);
        EXPECT(gbc.pc(), 0x80b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80b0), 0xcb);
        EXPECT(gbc.readMem(0x80b1), 0xb6);
        EXPECT(gbc.readMem(0xbbcd), 0x8d);
        // CB B6 0015
        gbc.setState(0xa8f1, 0xa0b1, 0xd060, 0x9b19, 0xd60, 0xdda9, 0x1, 0x1);
        gbc.writeMem(0xa8f1, { 0xcb, 0xb6 });
        gbc.writeMem(0xdda9, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa0b1);
        EXPECT(gbc.pc(), 0xa8f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f1), 0xcb);
        EXPECT(gbc.readMem(0xa8f2), 0xb6);
        EXPECT(gbc.readMem(0xdda9), 0x3c);
        // CB B6 0016
        gbc.setState(0xda, 0x6817, 0x5b00, 0x68a0, 0x211a, 0xa5bb, 0x0, 0x0);
        gbc.writeMem(0xda, { 0xcb, 0xb6 });
        gbc.writeMem(0xa5bb, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6817);
        EXPECT(gbc.pc(), 0xdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5bb), 0x33);
        // CB B6 0018
        gbc.setState(0xc8f9, 0xf015, 0x3450, 0xe9a4, 0x87a0, 0xf5cf, 0x1, 0x0);
        gbc.writeMem(0xc8f9, { 0xcb, 0xb6 });
        gbc.writeMem(0xf5cf, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf015);
        EXPECT(gbc.pc(), 0xc8fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f9), 0xcb);
        EXPECT(gbc.readMem(0xc8fa), 0xb6);
        EXPECT(gbc.readMem(0xf5cf), 0x3a);
        // CB B6 001B
        gbc.setState(0xb97e, 0xa015, 0x4210, 0x3e75, 0x3b2b, 0x17e2, 0x1, 0x0);
        gbc.writeMem(0x17e2, { 0xb4 });
        gbc.writeMem(0xb97e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa015);
        EXPECT(gbc.pc(), 0xb980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97e), 0xcb);
        EXPECT(gbc.readMem(0xb97f), 0xb6);
        // CB B6 001C
        gbc.setState(0x6a7c, 0x494e, 0x32c0, 0xe755, 0x2243, 0xc901, 0x1, 0x0);
        gbc.writeMem(0x6a7c, { 0xcb, 0xb6 });
        gbc.writeMem(0xc901, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x494e);
        EXPECT(gbc.pc(), 0x6a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc901), 0x2f);
        // CB B6 001D
        gbc.setState(0x4962, 0x1847, 0xb570, 0x7c8b, 0x76d3, 0x4396, 0x1, 0x0);
        gbc.writeMem(0x4396, { 0xa1 });
        gbc.writeMem(0x4962, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1847);
        EXPECT(gbc.pc(), 0x4964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 001E
        gbc.setState(0x55fd, 0x8caa, 0xa370, 0xc092, 0xbb5e, 0x9e98, 0x1, 0x1);
        gbc.writeMem(0x55fd, { 0xcb, 0xb6 });
        gbc.writeMem(0x9e98, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8caa);
        EXPECT(gbc.pc(), 0x55ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e98), 0x2);
        // CB B6 001F
        gbc.setState(0xeb89, 0xd6b4, 0xbdf0, 0x95e5, 0x2869, 0xb6af, 0x0, 0x1);
        gbc.writeMem(0xb6af, { 0xb6 });
        gbc.writeMem(0xeb89, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd6b4);
        EXPECT(gbc.pc(), 0xeb8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6af), 0xb6);
        EXPECT(gbc.readMem(0xeb89), 0xcb);
        EXPECT(gbc.readMem(0xeb8a), 0xb6);
        // CB B6 0020
        gbc.setState(0xe21c, 0xee5b, 0x2250, 0xd3c3, 0x94c0, 0xf39f, 0x1, 0x1);
        gbc.writeMem(0xe21c, { 0xcb, 0xb6 });
        gbc.writeMem(0xf39f, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xee5b);
        EXPECT(gbc.pc(), 0xe21e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe21c), 0xcb);
        EXPECT(gbc.readMem(0xe21d), 0xb6);
        EXPECT(gbc.readMem(0xf39f), 0xb3);
        // CB B6 0021
        gbc.setState(0xa818, 0x5eb4, 0x2c80, 0x1546, 0x67a7, 0xc303, 0x1, 0x1);
        gbc.writeMem(0xa818, { 0xcb, 0xb6 });
        gbc.writeMem(0xc303, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5eb4);
        EXPECT(gbc.pc(), 0xa81a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa818), 0xcb);
        EXPECT(gbc.readMem(0xa819), 0xb6);
        EXPECT(gbc.readMem(0xc303), 0x31);
        // CB B6 0023
        gbc.setState(0xa746, 0xcc2e, 0xe850, 0xc323, 0xd69b, 0xe9ee, 0x1, 0x0);
        gbc.writeMem(0xa746, { 0xcb, 0xb6 });
        gbc.writeMem(0xe9ee, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcc2e);
        EXPECT(gbc.pc(), 0xa748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa746), 0xcb);
        EXPECT(gbc.readMem(0xa747), 0xb6);
        EXPECT(gbc.readMem(0xe9ee), 0x98);
        // CB B6 0024
        gbc.setState(0x324, 0x4e21, 0x5f50, 0xeb0b, 0xcdd2, 0x96f0, 0x1, 0x0);
        gbc.writeMem(0x324, { 0xcb, 0xb6 });
        gbc.writeMem(0x96f0, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4e21);
        EXPECT(gbc.pc(), 0x326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96f0), 0x8c);
        // CB B6 0025
        gbc.setState(0x162, 0xb7fe, 0x4780, 0x1c2c, 0x9f62, 0x8b6f, 0x1, 0x0);
        gbc.writeMem(0x162, { 0xcb, 0xb6 });
        gbc.writeMem(0x8b6f, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb7fe);
        EXPECT(gbc.pc(), 0x164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b6f), 0xab);
        // CB B6 0026
        gbc.setState(0xdb9d, 0x15d, 0x84b0, 0xf5ec, 0xd85e, 0x9976, 0x1, 0x0);
        gbc.writeMem(0x9976, { 0xdb });
        gbc.writeMem(0xdb9d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x15d);
        EXPECT(gbc.pc(), 0xdb9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9976), 0x9b);
        EXPECT(gbc.readMem(0xdb9d), 0xcb);
        EXPECT(gbc.readMem(0xdb9e), 0xb6);
        // CB B6 0027
        gbc.setState(0x130b, 0x68b4, 0xbcc0, 0xfb51, 0xbc31, 0xdc29, 0x0, 0x1);
        gbc.writeMem(0x130b, { 0xcb, 0xb6 });
        gbc.writeMem(0xdc29, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x68b4);
        EXPECT(gbc.pc(), 0x130d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc29), 0x88);
        // CB B6 0028
        gbc.setState(0x69d8, 0xa92b, 0x71b0, 0x9b49, 0xb307, 0xdca7, 0x1, 0x1);
        gbc.writeMem(0x69d8, { 0xcb, 0xb6 });
        gbc.writeMem(0xdca7, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa92b);
        EXPECT(gbc.pc(), 0x69da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdca7), 0x81);
        // CB B6 002A
        gbc.setState(0x668, 0x8b44, 0x1c80, 0x1d4a, 0x63dc, 0xb5de, 0x1, 0x0);
        gbc.writeMem(0x668, { 0xcb, 0xb6 });
        gbc.writeMem(0xb5de, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8b44);
        EXPECT(gbc.pc(), 0x66a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5de), 0xab);
        // CB B6 002B
        gbc.setState(0xc083, 0x1ce5, 0x9080, 0xf96a, 0x9247, 0x3422, 0x1, 0x0);
        gbc.writeMem(0x3422, { 0x93 });
        gbc.writeMem(0xc083, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1ce5);
        EXPECT(gbc.pc(), 0xc085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc083), 0xcb);
        EXPECT(gbc.readMem(0xc084), 0xb6);
        // CB B6 002C
        gbc.setState(0x2e59, 0xba9f, 0x7bf0, 0x27a6, 0xc0fd, 0xba49, 0x0, 0x0);
        gbc.writeMem(0x2e59, { 0xcb, 0xb6 });
        gbc.writeMem(0xba49, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xba9f);
        EXPECT(gbc.pc(), 0x2e5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba49), 0x33);
        // CB B6 002D
        gbc.setState(0x100b, 0xe014, 0xccc0, 0xb1be, 0x287f, 0xe262, 0x0, 0x0);
        gbc.writeMem(0x100b, { 0xcb, 0xb6 });
        gbc.writeMem(0xe262, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe014);
        EXPECT(gbc.pc(), 0x100d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe262), 0x3b);
        // CB B6 002F
        gbc.setState(0xc53c, 0x5971, 0xaff0, 0xc089, 0x500e, 0x19e5, 0x1, 0x0);
        gbc.writeMem(0x19e5, { 0x7 });
        gbc.writeMem(0xc53c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5971);
        EXPECT(gbc.pc(), 0xc53e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc53c), 0xcb);
        EXPECT(gbc.readMem(0xc53d), 0xb6);
        // CB B6 0030
        gbc.setState(0x63c8, 0x8252, 0xf090, 0xf0e6, 0x9621, 0xfcfc, 0x1, 0x0);
        gbc.writeMem(0x63c8, { 0xcb, 0xb6 });
        gbc.writeMem(0xfcfc, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8252);
        EXPECT(gbc.pc(), 0x63ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfcfc), 0xb7);
        // CB B6 0031
        gbc.setState(0xb32a, 0xcc41, 0xd950, 0x22b4, 0xd8d2, 0xd79, 0x0, 0x0);
        gbc.writeMem(0xd79, { 0x9 });
        gbc.writeMem(0xb32a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcc41);
        EXPECT(gbc.pc(), 0xb32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32a), 0xcb);
        EXPECT(gbc.readMem(0xb32b), 0xb6);
        // CB B6 0032
        gbc.setState(0xc6f7, 0x2804, 0x3db0, 0x9b50, 0xcc08, 0xacf2, 0x0, 0x0);
        gbc.writeMem(0xacf2, { 0x30 });
        gbc.writeMem(0xc6f7, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2804);
        EXPECT(gbc.pc(), 0xc6f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf2), 0x30);
        EXPECT(gbc.readMem(0xc6f7), 0xcb);
        EXPECT(gbc.readMem(0xc6f8), 0xb6);
        // CB B6 0033
        gbc.setState(0xe3c5, 0xd694, 0xb430, 0x1c28, 0x3d37, 0x9196, 0x1, 0x0);
        gbc.writeMem(0x9196, { 0x40 });
        gbc.writeMem(0xe3c5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd694);
        EXPECT(gbc.pc(), 0xe3c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9196), 0x0);
        EXPECT(gbc.readMem(0xe3c5), 0xcb);
        EXPECT(gbc.readMem(0xe3c6), 0xb6);
        // CB B6 0034
        gbc.setState(0xd05b, 0xe594, 0x3f30, 0x6ed7, 0x9d4a, 0x1c45, 0x0, 0x0);
        gbc.writeMem(0x1c45, { 0x3d });
        gbc.writeMem(0xd05b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe594);
        EXPECT(gbc.pc(), 0xd05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd05b), 0xcb);
        EXPECT(gbc.readMem(0xd05c), 0xb6);
        // CB B6 0036
        gbc.setState(0x1cb4, 0xc583, 0x1ed0, 0xef88, 0xd43d, 0x3d14, 0x1, 0x1);
        gbc.writeMem(0x1cb4, { 0xcb, 0xb6 });
        gbc.writeMem(0x3d14, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc583);
        EXPECT(gbc.pc(), 0x1cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0037
        gbc.setState(0xa36b, 0xb1ec, 0x9c70, 0x39a3, 0xe3e7, 0x5cae, 0x1, 0x0);
        gbc.writeMem(0x5cae, { 0x24 });
        gbc.writeMem(0xa36b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb1ec);
        EXPECT(gbc.pc(), 0xa36d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa36b), 0xcb);
        EXPECT(gbc.readMem(0xa36c), 0xb6);
        // CB B6 0038
        gbc.setState(0x55b9, 0x471a, 0xca70, 0x933f, 0x776d, 0x8885, 0x1, 0x0);
        gbc.writeMem(0x55b9, { 0xcb, 0xb6 });
        gbc.writeMem(0x8885, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x471a);
        EXPECT(gbc.pc(), 0x55bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8885), 0x86);
        // CB B6 003B
        gbc.setState(0xeb04, 0xfccb, 0x3d00, 0x9fb6, 0xcbc7, 0xd5fd, 0x0, 0x0);
        gbc.writeMem(0xd5fd, { 0x8e });
        gbc.writeMem(0xeb04, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xfccb);
        EXPECT(gbc.pc(), 0xeb06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5fd), 0x8e);
        EXPECT(gbc.readMem(0xeb04), 0xcb);
        EXPECT(gbc.readMem(0xeb05), 0xb6);
        // CB B6 003C
        gbc.setState(0xb692, 0x43fd, 0x7ea0, 0xaa6f, 0x316e, 0x84fc, 0x0, 0x0);
        gbc.writeMem(0x84fc, { 0x71 });
        gbc.writeMem(0xb692, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x43fd);
        EXPECT(gbc.pc(), 0xb694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fc), 0x31);
        EXPECT(gbc.readMem(0xb692), 0xcb);
        EXPECT(gbc.readMem(0xb693), 0xb6);
        // CB B6 003F
        gbc.setState(0x5646, 0x4957, 0x1900, 0x58f6, 0xa06, 0xeadb, 0x1, 0x1);
        gbc.writeMem(0x5646, { 0xcb, 0xb6 });
        gbc.writeMem(0xeadb, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4957);
        EXPECT(gbc.pc(), 0x5648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeadb), 0x13);
        // CB B6 0041
        gbc.setState(0x27d9, 0x643c, 0x3510, 0xadfe, 0x3168, 0xbe8e, 0x0, 0x1);
        gbc.writeMem(0x27d9, { 0xcb, 0xb6 });
        gbc.writeMem(0xbe8e, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x643c);
        EXPECT(gbc.pc(), 0x27db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe8e), 0x2e);
        // CB B6 0042
        gbc.setState(0xdbff, 0x4c2b, 0x62b0, 0x5a78, 0x8883, 0x23eb, 0x0, 0x0);
        gbc.writeMem(0x23eb, { 0xaa });
        gbc.writeMem(0xdbff, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4c2b);
        EXPECT(gbc.pc(), 0xdc01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbff), 0xcb);
        EXPECT(gbc.readMem(0xdc00), 0xb6);
        // CB B6 0044
        gbc.setState(0x151d, 0x76fa, 0x7d90, 0x628a, 0x4fbb, 0x40a, 0x1, 0x1);
        gbc.writeMem(0x40a, { 0xb5 });
        gbc.writeMem(0x151d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x76fa);
        EXPECT(gbc.pc(), 0x151f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0045
        gbc.setState(0x51b9, 0x82dd, 0xc4c0, 0x81e5, 0xf28e, 0xff8b, 0x0, 0x0);
        gbc.writeMem(0x51b9, { 0xcb, 0xb6 });
        gbc.writeMem(0xff8b, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x82dd);
        EXPECT(gbc.pc(), 0x51bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff8b), 0x23);
        // CB B6 0046
        gbc.setState(0x4052, 0xf3cd, 0x8e60, 0x9cf4, 0x921f, 0xb93b, 0x0, 0x1);
        gbc.writeMem(0x4052, { 0xcb, 0xb6 });
        gbc.writeMem(0xb93b, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf3cd);
        EXPECT(gbc.pc(), 0x4054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93b), 0x88);
        // CB B6 0048
        gbc.setState(0x7fe5, 0x730d, 0xe180, 0x7853, 0xb1ba, 0xe16a, 0x1, 0x0);
        gbc.writeMem(0x7fe5, { 0xcb, 0xb6 });
        gbc.writeMem(0xe16a, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x730d);
        EXPECT(gbc.pc(), 0x7fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16a), 0x6);
        // CB B6 0049
        gbc.setState(0x174d, 0x8ee2, 0x3670, 0xb871, 0x5bee, 0x97e2, 0x1, 0x0);
        gbc.writeMem(0x174d, { 0xcb, 0xb6 });
        gbc.writeMem(0x97e2, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8ee2);
        EXPECT(gbc.pc(), 0x174f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e2), 0x88);
        // CB B6 004A
        gbc.setState(0xa29d, 0x4fd5, 0xc1a0, 0x42e3, 0xd4f2, 0x2c96, 0x0, 0x1);
        gbc.writeMem(0x2c96, { 0x8f });
        gbc.writeMem(0xa29d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4fd5);
        EXPECT(gbc.pc(), 0xa29f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29d), 0xcb);
        EXPECT(gbc.readMem(0xa29e), 0xb6);
        // CB B6 004B
        gbc.setState(0xd832, 0x9d9e, 0x4190, 0x2c0c, 0x8c1a, 0xf7aa, 0x1, 0x0);
        gbc.writeMem(0xd832, { 0xcb, 0xb6 });
        gbc.writeMem(0xf7aa, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9d9e);
        EXPECT(gbc.pc(), 0xd834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd832), 0xcb);
        EXPECT(gbc.readMem(0xd833), 0xb6);
        EXPECT(gbc.readMem(0xf7aa), 0x9c);
        // CB B6 004D
        gbc.setState(0xd009, 0x3f39, 0xff60, 0x6e5d, 0xc7ce, 0xa323, 0x1, 0x0);
        gbc.writeMem(0xa323, { 0x57 });
        gbc.writeMem(0xd009, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3f39);
        EXPECT(gbc.pc(), 0xd00b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa323), 0x17);
        EXPECT(gbc.readMem(0xd009), 0xcb);
        EXPECT(gbc.readMem(0xd00a), 0xb6);
        // CB B6 004E
        gbc.setState(0xd164, 0x9756, 0x57e0, 0x6de6, 0x6c49, 0x9a98, 0x1, 0x0);
        gbc.writeMem(0x9a98, { 0x62 });
        gbc.writeMem(0xd164, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9756);
        EXPECT(gbc.pc(), 0xd166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a98), 0x22);
        EXPECT(gbc.readMem(0xd164), 0xcb);
        EXPECT(gbc.readMem(0xd165), 0xb6);
        // CB B6 004F
        gbc.setState(0x50ad, 0xed51, 0xd7c0, 0x3f19, 0x80f4, 0x7360, 0x1, 0x1);
        gbc.writeMem(0x50ad, { 0xcb, 0xb6 });
        gbc.writeMem(0x7360, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xed51);
        EXPECT(gbc.pc(), 0x50af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0050
        gbc.setState(0x2e53, 0x86bb, 0x1840, 0x5663, 0x37f1, 0x9ce, 0x1, 0x1);
        gbc.writeMem(0x9ce, { 0x3d });
        gbc.writeMem(0x2e53, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x86bb);
        EXPECT(gbc.pc(), 0x2e55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0051
        gbc.setState(0xd861, 0x2dc, 0xd200, 0x9a0f, 0xe906, 0x9a39, 0x0, 0x1);
        gbc.writeMem(0x9a39, { 0xbb });
        gbc.writeMem(0xd861, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2dc);
        EXPECT(gbc.pc(), 0xd863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a39), 0xbb);
        EXPECT(gbc.readMem(0xd861), 0xcb);
        EXPECT(gbc.readMem(0xd862), 0xb6);
        // CB B6 0052
        gbc.setState(0x4277, 0xd23d, 0xaca0, 0x4fbc, 0xad24, 0xac3d, 0x1, 0x0);
        gbc.writeMem(0x4277, { 0xcb, 0xb6 });
        gbc.writeMem(0xac3d, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd23d);
        EXPECT(gbc.pc(), 0x4279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac3d), 0x1e);
        // CB B6 0053
        gbc.setState(0xdd3, 0x7a81, 0x8920, 0x87a1, 0xca2a, 0x437e, 0x1, 0x1);
        gbc.writeMem(0xdd3, { 0xcb, 0xb6 });
        gbc.writeMem(0x437e, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7a81);
        EXPECT(gbc.pc(), 0xdd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0055
        gbc.setState(0xde89, 0x6c63, 0xf8c0, 0xcdf5, 0xfe79, 0x47dc, 0x1, 0x1);
        gbc.writeMem(0x47dc, { 0x87 });
        gbc.writeMem(0xde89, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6c63);
        EXPECT(gbc.pc(), 0xde8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde89), 0xcb);
        EXPECT(gbc.readMem(0xde8a), 0xb6);
        // CB B6 0056
        gbc.setState(0xa09b, 0xe986, 0xce0, 0x29d, 0xf1f0, 0x4f8b, 0x1, 0x0);
        gbc.writeMem(0x4f8b, { 0xb7 });
        gbc.writeMem(0xa09b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe986);
        EXPECT(gbc.pc(), 0xa09d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09b), 0xcb);
        EXPECT(gbc.readMem(0xa09c), 0xb6);
        // CB B6 0059
        gbc.setState(0xee2c, 0xd99c, 0xff0, 0x2259, 0xae84, 0x645b, 0x1, 0x1);
        gbc.writeMem(0x645b, { 0xae });
        gbc.writeMem(0xee2c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd99c);
        EXPECT(gbc.pc(), 0xee2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee2c), 0xcb);
        EXPECT(gbc.readMem(0xee2d), 0xb6);
        // CB B6 005A
        gbc.setState(0xb9b4, 0x72a, 0xb2d0, 0x2c65, 0xedf0, 0xd574, 0x0, 0x0);
        gbc.writeMem(0xb9b4, { 0xcb, 0xb6 });
        gbc.writeMem(0xd574, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x72a);
        EXPECT(gbc.pc(), 0xb9b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b4), 0xcb);
        EXPECT(gbc.readMem(0xb9b5), 0xb6);
        EXPECT(gbc.readMem(0xd574), 0xa4);
        // CB B6 005B
        gbc.setState(0x1442, 0xf74a, 0x5850, 0x3b96, 0x6fd9, 0x2a9f, 0x1, 0x0);
        gbc.writeMem(0x1442, { 0xcb, 0xb6 });
        gbc.writeMem(0x2a9f, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf74a);
        EXPECT(gbc.pc(), 0x1444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 005C
        gbc.setState(0x164b, 0x9821, 0xd610, 0x7d54, 0x4d17, 0x833e, 0x1, 0x0);
        gbc.writeMem(0x164b, { 0xcb, 0xb6 });
        gbc.writeMem(0x833e, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9821);
        EXPECT(gbc.pc(), 0x164d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x833e), 0x33);
        // CB B6 005D
        gbc.setState(0x532a, 0xc3d3, 0x56e0, 0x8e4a, 0x2fbf, 0xbb14, 0x1, 0x0);
        gbc.writeMem(0x532a, { 0xcb, 0xb6 });
        gbc.writeMem(0xbb14, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc3d3);
        EXPECT(gbc.pc(), 0x532c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb14), 0x11);
        // CB B6 005E
        gbc.setState(0x6749, 0x7f4c, 0x4700, 0x3775, 0x82f8, 0x3a3c, 0x0, 0x1);
        gbc.writeMem(0x3a3c, { 0x97 });
        gbc.writeMem(0x6749, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7f4c);
        EXPECT(gbc.pc(), 0x674b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 005F
        gbc.setState(0x48de, 0x2626, 0xfa60, 0x7066, 0x717f, 0xd12d, 0x1, 0x1);
        gbc.writeMem(0x48de, { 0xcb, 0xb6 });
        gbc.writeMem(0xd12d, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2626);
        EXPECT(gbc.pc(), 0x48e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd12d), 0x3f);
        // CB B6 0060
        gbc.setState(0x58bc, 0x5467, 0x8ae0, 0x4445, 0x49f4, 0xfff2, 0x1, 0x1);
        gbc.writeMem(0x58bc, { 0xcb, 0xb6 });
        gbc.writeMem(0xfff2, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5467);
        EXPECT(gbc.pc(), 0x58be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfff2), 0x98);
        // CB B6 0062
        gbc.setState(0xe608, 0xc5d2, 0xae0, 0x73b5, 0x230e, 0x43d5, 0x0, 0x1);
        gbc.writeMem(0x43d5, { 0x8f });
        gbc.writeMem(0xe608, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc5d2);
        EXPECT(gbc.pc(), 0xe60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe608), 0xcb);
        EXPECT(gbc.readMem(0xe609), 0xb6);
        // CB B6 0063
        gbc.setState(0x7eb0, 0xbfc, 0xbdb0, 0xcdbb, 0xaec3, 0xf37b, 0x1, 0x0);
        gbc.writeMem(0x7eb0, { 0xcb, 0xb6 });
        gbc.writeMem(0xf37b, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbfc);
        EXPECT(gbc.pc(), 0x7eb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf37b), 0x1f);
        // CB B6 0064
        gbc.setState(0x44ec, 0xb6e1, 0x8b70, 0xb5d5, 0x681, 0xa395, 0x0, 0x0);
        gbc.writeMem(0x44ec, { 0xcb, 0xb6 });
        gbc.writeMem(0xa395, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb6e1);
        EXPECT(gbc.pc(), 0x44ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa395), 0xad);
        // CB B6 0066
        gbc.setState(0x85f, 0xd6da, 0x2670, 0x2d20, 0xd51d, 0xe994, 0x1, 0x0);
        gbc.writeMem(0x85f, { 0xcb, 0xb6 });
        gbc.writeMem(0xe994, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd6da);
        EXPECT(gbc.pc(), 0x861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe994), 0xbf);
        // CB B6 0068
        gbc.setState(0xb8a3, 0x118a, 0x37e0, 0x4841, 0x7b53, 0xcaeb, 0x1, 0x1);
        gbc.writeMem(0xb8a3, { 0xcb, 0xb6 });
        gbc.writeMem(0xcaeb, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x118a);
        EXPECT(gbc.pc(), 0xb8a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8a3), 0xcb);
        EXPECT(gbc.readMem(0xb8a4), 0xb6);
        EXPECT(gbc.readMem(0xcaeb), 0x86);
        // CB B6 0069
        gbc.setState(0xc5e2, 0xa12b, 0xff50, 0x7d9d, 0x17e4, 0xa709, 0x0, 0x1);
        gbc.writeMem(0xa709, { 0xae });
        gbc.writeMem(0xc5e2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa12b);
        EXPECT(gbc.pc(), 0xc5e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa709), 0xae);
        EXPECT(gbc.readMem(0xc5e2), 0xcb);
        EXPECT(gbc.readMem(0xc5e3), 0xb6);
        // CB B6 006B
        gbc.setState(0x19be, 0x9af4, 0x4010, 0xf32, 0x64ca, 0xd47f, 0x0, 0x0);
        gbc.writeMem(0x19be, { 0xcb, 0xb6 });
        gbc.writeMem(0xd47f, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9af4);
        EXPECT(gbc.pc(), 0x19c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47f), 0xa2);
        // CB B6 006C
        gbc.setState(0x8e6b, 0x5672, 0xda20, 0x1272, 0xd735, 0xdb42, 0x1, 0x0);
        gbc.writeMem(0x8e6b, { 0xcb, 0xb6 });
        gbc.writeMem(0xdb42, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5672);
        EXPECT(gbc.pc(), 0x8e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e6b), 0xcb);
        EXPECT(gbc.readMem(0x8e6c), 0xb6);
        EXPECT(gbc.readMem(0xdb42), 0xae);
        // CB B6 006E
        gbc.setState(0x995b, 0x3c7c, 0x7700, 0xc887, 0x6cd7, 0xb231, 0x0, 0x0);
        gbc.writeMem(0x995b, { 0xcb, 0xb6 });
        gbc.writeMem(0xb231, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3c7c);
        EXPECT(gbc.pc(), 0x995d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x995b), 0xcb);
        EXPECT(gbc.readMem(0x995c), 0xb6);
        EXPECT(gbc.readMem(0xb231), 0x3c);
        // CB B6 006F
        gbc.setState(0x3d31, 0x681d, 0x1a50, 0xaa63, 0xd74a, 0xbd21, 0x0, 0x0);
        gbc.writeMem(0x3d31, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd21, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x681d);
        EXPECT(gbc.pc(), 0x3d33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd21), 0x9c);
        // CB B6 0071
        gbc.setState(0x35d6, 0xf3a9, 0x75a0, 0x6e50, 0x8003, 0xe028, 0x0, 0x0);
        gbc.writeMem(0x35d6, { 0xcb, 0xb6 });
        gbc.writeMem(0xe028, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf3a9);
        EXPECT(gbc.pc(), 0x35d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe028), 0x3);
        // CB B6 0072
        gbc.setState(0x1b96, 0xa99c, 0xb620, 0x55ab, 0xac84, 0x8c53, 0x0, 0x0);
        gbc.writeMem(0x1b96, { 0xcb, 0xb6 });
        gbc.writeMem(0x8c53, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa99c);
        EXPECT(gbc.pc(), 0x1b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c53), 0x20);
        // CB B6 0073
        gbc.setState(0xdb84, 0x754d, 0xdc00, 0xad1, 0x78eb, 0x3938, 0x0, 0x1);
        gbc.writeMem(0x3938, { 0xd });
        gbc.writeMem(0xdb84, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x754d);
        EXPECT(gbc.pc(), 0xdb86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb84), 0xcb);
        EXPECT(gbc.readMem(0xdb85), 0xb6);
        // CB B6 0074
        gbc.setState(0x27cb, 0xbe5a, 0xbab0, 0xfb9, 0x84b2, 0x5252, 0x0, 0x0);
        gbc.writeMem(0x27cb, { 0xcb, 0xb6 });
        gbc.writeMem(0x5252, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbe5a);
        EXPECT(gbc.pc(), 0x27cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0075
        gbc.setState(0xbee2, 0x568d, 0x8ff0, 0x8915, 0x2d3b, 0x5623, 0x1, 0x0);
        gbc.writeMem(0x5623, { 0xb0 });
        gbc.writeMem(0xbee2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x568d);
        EXPECT(gbc.pc(), 0xbee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee2), 0xcb);
        EXPECT(gbc.readMem(0xbee3), 0xb6);
        // CB B6 0076
        gbc.setState(0x21a9, 0xaaa5, 0x1af0, 0x8339, 0x2ce1, 0xad71, 0x1, 0x1);
        gbc.writeMem(0x21a9, { 0xcb, 0xb6 });
        gbc.writeMem(0xad71, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xaaa5);
        EXPECT(gbc.pc(), 0x21ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad71), 0x9a);
        // CB B6 007A
        gbc.setState(0x56ab, 0x1069, 0xac50, 0xc437, 0x36b8, 0x17eb, 0x1, 0x1);
        gbc.writeMem(0x17eb, { 0xbd });
        gbc.writeMem(0x56ab, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1069);
        EXPECT(gbc.pc(), 0x56ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 007B
        gbc.setState(0x53d8, 0xcdeb, 0x9e80, 0x25c, 0xfd3e, 0xbd43, 0x1, 0x0);
        gbc.writeMem(0x53d8, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd43, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcdeb);
        EXPECT(gbc.pc(), 0x53da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd43), 0x9b);
        // CB B6 007C
        gbc.setState(0xc0ec, 0xb1c0, 0x5c90, 0x4198, 0xc92a, 0x81b0, 0x0, 0x0);
        gbc.writeMem(0x81b0, { 0x45 });
        gbc.writeMem(0xc0ec, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb1c0);
        EXPECT(gbc.pc(), 0xc0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b0), 0x5);
        EXPECT(gbc.readMem(0xc0ec), 0xcb);
        EXPECT(gbc.readMem(0xc0ed), 0xb6);
        // CB B6 007F
        gbc.setState(0x224, 0x8f82, 0x9520, 0x1c33, 0x4a1a, 0xd1b6, 0x0, 0x0);
        gbc.writeMem(0x224, { 0xcb, 0xb6 });
        gbc.writeMem(0xd1b6, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8f82);
        EXPECT(gbc.pc(), 0x226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b6), 0x24);
        // CB B6 0081
        gbc.setState(0xa705, 0x90a8, 0x8b30, 0x1695, 0xe934, 0x863c, 0x1, 0x0);
        gbc.writeMem(0x863c, { 0x58 });
        gbc.writeMem(0xa705, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x90a8);
        EXPECT(gbc.pc(), 0xa707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x863c), 0x18);
        EXPECT(gbc.readMem(0xa705), 0xcb);
        EXPECT(gbc.readMem(0xa706), 0xb6);
        // CB B6 0082
        gbc.setState(0x9160, 0xb96d, 0x8af0, 0x78e0, 0x4622, 0xa4cb, 0x0, 0x0);
        gbc.writeMem(0x9160, { 0xcb, 0xb6 });
        gbc.writeMem(0xa4cb, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb96d);
        EXPECT(gbc.pc(), 0x9162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9160), 0xcb);
        EXPECT(gbc.readMem(0x9161), 0xb6);
        EXPECT(gbc.readMem(0xa4cb), 0x9d);
        // CB B6 0083
        gbc.setState(0x2e27, 0xaaa5, 0x6880, 0x8ac1, 0x7693, 0xe898, 0x0, 0x0);
        gbc.writeMem(0x2e27, { 0xcb, 0xb6 });
        gbc.writeMem(0xe898, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xaaa5);
        EXPECT(gbc.pc(), 0x2e29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe898), 0x2c);
        // CB B6 0086
        gbc.setState(0xacb0, 0x28bf, 0x4a10, 0xaacd, 0x9821, 0x8ee6, 0x1, 0x0);
        gbc.writeMem(0x8ee6, { 0x7c });
        gbc.writeMem(0xacb0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x28bf);
        EXPECT(gbc.pc(), 0xacb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ee6), 0x3c);
        EXPECT(gbc.readMem(0xacb0), 0xcb);
        EXPECT(gbc.readMem(0xacb1), 0xb6);
        // CB B6 0087
        gbc.setState(0xc79b, 0xca3, 0xf090, 0xf070, 0x8212, 0x311e, 0x0, 0x0);
        gbc.writeMem(0x311e, { 0x17 });
        gbc.writeMem(0xc79b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xca3);
        EXPECT(gbc.pc(), 0xc79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc79b), 0xcb);
        EXPECT(gbc.readMem(0xc79c), 0xb6);
        // CB B6 0089
        gbc.setState(0x9056, 0xb54b, 0x9710, 0x6eff, 0x4a38, 0xbafd, 0x0, 0x0);
        gbc.writeMem(0x9056, { 0xcb, 0xb6 });
        gbc.writeMem(0xbafd, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb54b);
        EXPECT(gbc.pc(), 0x9058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9056), 0xcb);
        EXPECT(gbc.readMem(0x9057), 0xb6);
        EXPECT(gbc.readMem(0xbafd), 0xa0);
        // CB B6 008A
        gbc.setState(0xadb5, 0xea85, 0x4c70, 0xcdb8, 0x4338, 0xe6c6, 0x1, 0x1);
        gbc.writeMem(0xadb5, { 0xcb, 0xb6 });
        gbc.writeMem(0xe6c6, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xea85);
        EXPECT(gbc.pc(), 0xadb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadb5), 0xcb);
        EXPECT(gbc.readMem(0xadb6), 0xb6);
        EXPECT(gbc.readMem(0xe6c6), 0x5);
        // CB B6 008B
        gbc.setState(0x4316, 0x6d52, 0x1180, 0x386c, 0xf21c, 0x2a5a, 0x1, 0x1);
        gbc.writeMem(0x2a5a, { 0x95 });
        gbc.writeMem(0x4316, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6d52);
        EXPECT(gbc.pc(), 0x4318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 008C
        gbc.setState(0xe436, 0xb8c1, 0x88e0, 0xb30c, 0x6883, 0x1f00, 0x1, 0x0);
        gbc.writeMem(0x1f00, { 0xa });
        gbc.writeMem(0xe436, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb8c1);
        EXPECT(gbc.pc(), 0xe438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe436), 0xcb);
        EXPECT(gbc.readMem(0xe437), 0xb6);
        // CB B6 008E
        gbc.setState(0x9fab, 0xf44f, 0x5f60, 0x46b7, 0xd4bd, 0x131, 0x0, 0x1);
        gbc.writeMem(0x131, { 0x21 });
        gbc.writeMem(0x9fab, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf44f);
        EXPECT(gbc.pc(), 0x9fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fab), 0xcb);
        EXPECT(gbc.readMem(0x9fac), 0xb6);
        // CB B6 0090
        gbc.setState(0xca4c, 0x96d4, 0x8fa0, 0x469f, 0x2586, 0xa3fd, 0x1, 0x0);
        gbc.writeMem(0xa3fd, { 0x4b });
        gbc.writeMem(0xca4c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x96d4);
        EXPECT(gbc.pc(), 0xca4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3fd), 0xb);
        EXPECT(gbc.readMem(0xca4c), 0xcb);
        EXPECT(gbc.readMem(0xca4d), 0xb6);
        // CB B6 0091
        gbc.setState(0xddd9, 0x972d, 0xdfd0, 0xa908, 0xf453, 0xc8fb, 0x0, 0x1);
        gbc.writeMem(0xc8fb, { 0xdd });
        gbc.writeMem(0xddd9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x972d);
        EXPECT(gbc.pc(), 0xdddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8fb), 0x9d);
        EXPECT(gbc.readMem(0xddd9), 0xcb);
        EXPECT(gbc.readMem(0xddda), 0xb6);
        // CB B6 0092
        gbc.setState(0x4b26, 0x7631, 0x5690, 0x8752, 0xdb5d, 0x246, 0x1, 0x1);
        gbc.writeMem(0x246, { 0x86 });
        gbc.writeMem(0x4b26, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7631);
        EXPECT(gbc.pc(), 0x4b28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0093
        gbc.setState(0x3da6, 0x5a16, 0x9f20, 0xd9f8, 0xff35, 0x4988, 0x0, 0x1);
        gbc.writeMem(0x3da6, { 0xcb, 0xb6 });
        gbc.writeMem(0x4988, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5a16);
        EXPECT(gbc.pc(), 0x3da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0094
        gbc.setState(0xe337, 0x1956, 0x4340, 0xfc1c, 0x2407, 0x43d2, 0x0, 0x1);
        gbc.writeMem(0x43d2, { 0x25 });
        gbc.writeMem(0xe337, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1956);
        EXPECT(gbc.pc(), 0xe339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe337), 0xcb);
        EXPECT(gbc.readMem(0xe338), 0xb6);
        // CB B6 0098
        gbc.setState(0x8aef, 0x530d, 0x2470, 0x354d, 0xd746, 0x3340, 0x0, 0x1);
        gbc.writeMem(0x3340, { 0x92 });
        gbc.writeMem(0x8aef, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x530d);
        EXPECT(gbc.pc(), 0x8af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aef), 0xcb);
        EXPECT(gbc.readMem(0x8af0), 0xb6);
        // CB B6 0099
        gbc.setState(0x9bd2, 0x3e4c, 0x7530, 0x7d87, 0x5764, 0x70cf, 0x0, 0x1);
        gbc.writeMem(0x70cf, { 0x32 });
        gbc.writeMem(0x9bd2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3e4c);
        EXPECT(gbc.pc(), 0x9bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd2), 0xcb);
        EXPECT(gbc.readMem(0x9bd3), 0xb6);
        // CB B6 009C
        gbc.setState(0xb546, 0xe8dc, 0x6580, 0x875c, 0x3662, 0x968e, 0x0, 0x1);
        gbc.writeMem(0x968e, { 0x62 });
        gbc.writeMem(0xb546, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe8dc);
        EXPECT(gbc.pc(), 0xb548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968e), 0x22);
        EXPECT(gbc.readMem(0xb546), 0xcb);
        EXPECT(gbc.readMem(0xb547), 0xb6);
        // CB B6 009E
        gbc.setState(0x34dd, 0x6bd7, 0x1320, 0xd768, 0x69c2, 0x4cb, 0x1, 0x1);
        gbc.writeMem(0x4cb, { 0xad });
        gbc.writeMem(0x34dd, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6bd7);
        EXPECT(gbc.pc(), 0x34df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 009F
        gbc.setState(0xc2a5, 0x1675, 0xf90, 0xb01c, 0x84b8, 0xe09f, 0x0, 0x0);
        gbc.writeMem(0xc2a5, { 0xcb, 0xb6 });
        gbc.writeMem(0xe09f, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1675);
        EXPECT(gbc.pc(), 0xc2a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2a5), 0xcb);
        EXPECT(gbc.readMem(0xc2a6), 0xb6);
        EXPECT(gbc.readMem(0xe09f), 0x13);
        // CB B6 00A0
        gbc.setState(0x3af0, 0x112f, 0x4e40, 0xc7fe, 0xce1e, 0xeede, 0x0, 0x1);
        gbc.writeMem(0x3af0, { 0xcb, 0xb6 });
        gbc.writeMem(0xeede, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x112f);
        EXPECT(gbc.pc(), 0x3af2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeede), 0x86);
        // CB B6 00A1
        gbc.setState(0x45ab, 0x8671, 0x5920, 0xc0a, 0x2737, 0x165b, 0x1, 0x1);
        gbc.writeMem(0x165b, { 0x2b });
        gbc.writeMem(0x45ab, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8671);
        EXPECT(gbc.pc(), 0x45ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 00A2
        gbc.setState(0x544a, 0xe036, 0xbd10, 0x4861, 0x3ed4, 0xe3b9, 0x1, 0x1);
        gbc.writeMem(0x544a, { 0xcb, 0xb6 });
        gbc.writeMem(0xe3b9, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe036);
        EXPECT(gbc.pc(), 0x544c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b9), 0x3e);
        // CB B6 00A3
        gbc.setState(0xac8a, 0xf30, 0xddc0, 0x141b, 0xabc4, 0x6e9a, 0x0, 0x1);
        gbc.writeMem(0x6e9a, { 0x2f });
        gbc.writeMem(0xac8a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf30);
        EXPECT(gbc.pc(), 0xac8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac8a), 0xcb);
        EXPECT(gbc.readMem(0xac8b), 0xb6);
        // CB B6 00A4
        gbc.setState(0x4cf6, 0xc6c1, 0xc60, 0x38e5, 0xee30, 0xb791, 0x1, 0x1);
        gbc.writeMem(0x4cf6, { 0xcb, 0xb6 });
        gbc.writeMem(0xb791, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc6c1);
        EXPECT(gbc.pc(), 0x4cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb791), 0x3a);
        // CB B6 00A5
        gbc.setState(0x6e03, 0x17e0, 0x5410, 0xbf31, 0x1bf4, 0x945e, 0x0, 0x0);
        gbc.writeMem(0x6e03, { 0xcb, 0xb6 });
        gbc.writeMem(0x945e, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x17e0);
        EXPECT(gbc.pc(), 0x6e05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945e), 0x9c);
        // CB B6 00A6
        gbc.setState(0xbac6, 0x94aa, 0x7cf0, 0xa97d, 0x63a3, 0x8d9b, 0x0, 0x1);
        gbc.writeMem(0x8d9b, { 0xbb });
        gbc.writeMem(0xbac6, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x94aa);
        EXPECT(gbc.pc(), 0xbac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d9b), 0xbb);
        EXPECT(gbc.readMem(0xbac6), 0xcb);
        EXPECT(gbc.readMem(0xbac7), 0xb6);
        // CB B6 00A8
        gbc.setState(0xcbaa, 0x50e8, 0x6640, 0xf09a, 0x56d9, 0xf635, 0x1, 0x1);
        gbc.writeMem(0xcbaa, { 0xcb, 0xb6 });
        gbc.writeMem(0xf635, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x50e8);
        EXPECT(gbc.pc(), 0xcbac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbaa), 0xcb);
        EXPECT(gbc.readMem(0xcbab), 0xb6);
        EXPECT(gbc.readMem(0xf635), 0xac);
        // CB B6 00A9
        gbc.setState(0x756d, 0xbc89, 0xa630, 0xa42e, 0xcca5, 0xe30c, 0x0, 0x0);
        gbc.writeMem(0x756d, { 0xcb, 0xb6 });
        gbc.writeMem(0xe30c, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbc89);
        EXPECT(gbc.pc(), 0x756f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe30c), 0xa6);
        // CB B6 00AC
        gbc.setState(0xd6a3, 0xb27e, 0x36d0, 0xcbec, 0x51d4, 0xdc0c, 0x1, 0x0);
        gbc.writeMem(0xd6a3, { 0xcb, 0xb6 });
        gbc.writeMem(0xdc0c, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb27e);
        EXPECT(gbc.pc(), 0xd6a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a3), 0xcb);
        EXPECT(gbc.readMem(0xd6a4), 0xb6);
        EXPECT(gbc.readMem(0xdc0c), 0x2c);
        // CB B6 00AD
        gbc.setState(0xaa51, 0x2fa, 0xd850, 0xca4b, 0xef2d, 0xf04f, 0x1, 0x1);
        gbc.writeMem(0xaa51, { 0xcb, 0xb6 });
        gbc.writeMem(0xf04f, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2fa);
        EXPECT(gbc.pc(), 0xaa53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa51), 0xcb);
        EXPECT(gbc.readMem(0xaa52), 0xb6);
        EXPECT(gbc.readMem(0xf04f), 0x1f);
        // CB B6 00AE
        gbc.setState(0x1b37, 0x8057, 0xc270, 0x79fb, 0xb1a4, 0xbd44, 0x1, 0x1);
        gbc.writeMem(0x1b37, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd44, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8057);
        EXPECT(gbc.pc(), 0x1b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd44), 0xbc);
        // CB B6 00AF
        gbc.setState(0xd89f, 0xef83, 0x8090, 0x1fe9, 0x17b9, 0xa71d, 0x0, 0x1);
        gbc.writeMem(0xa71d, { 0x46 });
        gbc.writeMem(0xd89f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xef83);
        EXPECT(gbc.pc(), 0xd8a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa71d), 0x6);
        EXPECT(gbc.readMem(0xd89f), 0xcb);
        EXPECT(gbc.readMem(0xd8a0), 0xb6);
        // CB B6 00B1
        gbc.setState(0xa8b0, 0x6bd3, 0x98a0, 0x9124, 0xd677, 0xb2c1, 0x0, 0x1);
        gbc.writeMem(0xa8b0, { 0xcb, 0xb6 });
        gbc.writeMem(0xb2c1, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6bd3);
        EXPECT(gbc.pc(), 0xa8b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b0), 0xcb);
        EXPECT(gbc.readMem(0xa8b1), 0xb6);
        EXPECT(gbc.readMem(0xb2c1), 0x8);
        // CB B6 00B2
        gbc.setState(0xdb94, 0x1d37, 0xab10, 0x70d5, 0x4cd3, 0x1789, 0x1, 0x0);
        gbc.writeMem(0x1789, { 0xbd });
        gbc.writeMem(0xdb94, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1d37);
        EXPECT(gbc.pc(), 0xdb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb94), 0xcb);
        EXPECT(gbc.readMem(0xdb95), 0xb6);
        // CB B6 00B3
        gbc.setState(0xe8a0, 0x43b4, 0x4720, 0x2a12, 0xd2a3, 0xf7e1, 0x0, 0x1);
        gbc.writeMem(0xe8a0, { 0xcb, 0xb6 });
        gbc.writeMem(0xf7e1, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x43b4);
        EXPECT(gbc.pc(), 0xe8a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a0), 0xcb);
        EXPECT(gbc.readMem(0xe8a1), 0xb6);
        EXPECT(gbc.readMem(0xf7e1), 0x37);
        // CB B6 00B5
        gbc.setState(0xbba6, 0x4ca7, 0xf60, 0x1f10, 0xdf26, 0xe896, 0x0, 0x1);
        gbc.writeMem(0xbba6, { 0xcb, 0xb6 });
        gbc.writeMem(0xe896, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4ca7);
        EXPECT(gbc.pc(), 0xbba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba6), 0xcb);
        EXPECT(gbc.readMem(0xbba7), 0xb6);
        EXPECT(gbc.readMem(0xe896), 0x1f);
        // CB B6 00B6
        gbc.setState(0xa657, 0xa97f, 0xf210, 0x44cd, 0x334e, 0xfdd2, 0x0, 0x0);
        gbc.writeMem(0xa657, { 0xcb, 0xb6 });
        gbc.writeMem(0xfdd2, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa97f);
        EXPECT(gbc.pc(), 0xa659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa657), 0xcb);
        EXPECT(gbc.readMem(0xa658), 0xb6);
        EXPECT(gbc.readMem(0xfdd2), 0x18);
        // CB B6 00B7
        gbc.setState(0x635e, 0x1829, 0xcd70, 0xf76b, 0x32e2, 0x145, 0x1, 0x0);
        gbc.writeMem(0x145, { 0x1e });
        gbc.writeMem(0x635e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1829);
        EXPECT(gbc.pc(), 0x6360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 00B8
        gbc.setState(0xe94d, 0x1713, 0x4390, 0x767f, 0xceff, 0xe50c, 0x1, 0x1);
        gbc.writeMem(0xe50c, { 0x77 });
        gbc.writeMem(0xe94d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1713);
        EXPECT(gbc.pc(), 0xe94f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe50c), 0x37);
        EXPECT(gbc.readMem(0xe94d), 0xcb);
        EXPECT(gbc.readMem(0xe94e), 0xb6);
        // CB B6 00BC
        gbc.setState(0x96de, 0x28dd, 0xb9c0, 0x40ab, 0x9602, 0x2a92, 0x0, 0x1);
        gbc.writeMem(0x2a92, { 0x31 });
        gbc.writeMem(0x96de, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x28dd);
        EXPECT(gbc.pc(), 0x96e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96de), 0xcb);
        EXPECT(gbc.readMem(0x96df), 0xb6);
        // CB B6 00BD
        gbc.setState(0xa71, 0x9833, 0x7eb0, 0xe09e, 0xf4be, 0x960b, 0x0, 0x1);
        gbc.writeMem(0xa71, { 0xcb, 0xb6 });
        gbc.writeMem(0x960b, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9833);
        EXPECT(gbc.pc(), 0xa73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x960b), 0x1b);
        // CB B6 00BE
        gbc.setState(0x26ee, 0x5804, 0xde60, 0x2d2, 0x2099, 0x7088, 0x1, 0x1);
        gbc.writeMem(0x26ee, { 0xcb, 0xb6 });
        gbc.writeMem(0x7088, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5804);
        EXPECT(gbc.pc(), 0x26f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 00BF
        gbc.setState(0x8559, 0xfd80, 0x1200, 0x23ae, 0x3d80, 0xffae, 0x1, 0x0);
        gbc.writeMem(0x8559, { 0xcb, 0xb6 });
        gbc.writeMem(0xffae, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfd80);
        EXPECT(gbc.pc(), 0x855b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8559), 0xcb);
        EXPECT(gbc.readMem(0x855a), 0xb6);
        EXPECT(gbc.readMem(0xffae), 0x39);
        // CB B6 00C0
        gbc.setState(0x8b88, 0xcd40, 0x3090, 0x9101, 0xb5d7, 0xb690, 0x0, 0x1);
        gbc.writeMem(0x8b88, { 0xcb, 0xb6 });
        gbc.writeMem(0xb690, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xcd40);
        EXPECT(gbc.pc(), 0x8b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b88), 0xcb);
        EXPECT(gbc.readMem(0x8b89), 0xb6);
        EXPECT(gbc.readMem(0xb690), 0x26);
        // CB B6 00C1
        gbc.setState(0x5cd1, 0x733f, 0x9140, 0x961f, 0x42e8, 0xaded, 0x0, 0x1);
        gbc.writeMem(0x5cd1, { 0xcb, 0xb6 });
        gbc.writeMem(0xaded, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x733f);
        EXPECT(gbc.pc(), 0x5cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaded), 0xc);
        // CB B6 00C3
        gbc.setState(0xe4c9, 0x442b, 0xbaa0, 0x2811, 0xdf5e, 0xf0f1, 0x0, 0x1);
        gbc.writeMem(0xe4c9, { 0xcb, 0xb6 });
        gbc.writeMem(0xf0f1, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x442b);
        EXPECT(gbc.pc(), 0xe4cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c9), 0xcb);
        EXPECT(gbc.readMem(0xe4ca), 0xb6);
        EXPECT(gbc.readMem(0xf0f1), 0x32);
        // CB B6 00C4
        gbc.setState(0xdde, 0xd7f2, 0xcda0, 0x6a57, 0xe4be, 0x84d1, 0x1, 0x0);
        gbc.writeMem(0xdde, { 0xcb, 0xb6 });
        gbc.writeMem(0x84d1, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd7f2);
        EXPECT(gbc.pc(), 0xde0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d1), 0x3);
        // CB B6 00C5
        gbc.setState(0x55a3, 0xdac3, 0x3b20, 0x6d45, 0xb60e, 0x97da, 0x0, 0x1);
        gbc.writeMem(0x55a3, { 0xcb, 0xb6 });
        gbc.writeMem(0x97da, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdac3);
        EXPECT(gbc.pc(), 0x55a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97da), 0x7);
        // CB B6 00C8
        gbc.setState(0x773a, 0xa9b8, 0xfea0, 0x957, 0xbb03, 0x5acd, 0x0, 0x1);
        gbc.writeMem(0x5acd, { 0x1 });
        gbc.writeMem(0x773a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa9b8);
        EXPECT(gbc.pc(), 0x773c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 00C9
        gbc.setState(0x6c4b, 0xad35, 0x9260, 0x4258, 0xdcdb, 0x4840, 0x0, 0x1);
        gbc.writeMem(0x4840, { 0x1e });
        gbc.writeMem(0x6c4b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xad35);
        EXPECT(gbc.pc(), 0x6c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 00CB
        gbc.setState(0x9af5, 0xa159, 0x6810, 0xd46d, 0xefe2, 0x6dca, 0x1, 0x1);
        gbc.writeMem(0x6dca, { 0xae });
        gbc.writeMem(0x9af5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa159);
        EXPECT(gbc.pc(), 0x9af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af5), 0xcb);
        EXPECT(gbc.readMem(0x9af6), 0xb6);
        // CB B6 00CC
        gbc.setState(0xa53d, 0x2c9e, 0x5e50, 0x6165, 0xf49e, 0x990d, 0x1, 0x0);
        gbc.writeMem(0x990d, { 0x48 });
        gbc.writeMem(0xa53d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2c9e);
        EXPECT(gbc.pc(), 0xa53f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990d), 0x8);
        EXPECT(gbc.readMem(0xa53d), 0xcb);
        EXPECT(gbc.readMem(0xa53e), 0xb6);
        // CB B6 00CD
        gbc.setState(0x7e77, 0xa30, 0x61d0, 0x5214, 0xf302, 0x2e64, 0x0, 0x0);
        gbc.writeMem(0x2e64, { 0x99 });
        gbc.writeMem(0x7e77, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa30);
        EXPECT(gbc.pc(), 0x7e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 00CE
        gbc.setState(0xc2ee, 0x58ca, 0xdd20, 0xe9d4, 0x577e, 0xf74a, 0x1, 0x1);
        gbc.writeMem(0xc2ee, { 0xcb, 0xb6 });
        gbc.writeMem(0xf74a, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x58ca);
        EXPECT(gbc.pc(), 0xc2f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ee), 0xcb);
        EXPECT(gbc.readMem(0xc2ef), 0xb6);
        EXPECT(gbc.readMem(0xf74a), 0x85);
        // CB B6 00D0
        gbc.setState(0xd539, 0x8f10, 0xf220, 0xb025, 0x20ba, 0xc722, 0x1, 0x0);
        gbc.writeMem(0xc722, { 0xf2 });
        gbc.writeMem(0xd539, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8f10);
        EXPECT(gbc.pc(), 0xd53b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc722), 0xb2);
        EXPECT(gbc.readMem(0xd539), 0xcb);
        EXPECT(gbc.readMem(0xd53a), 0xb6);
        // CB B6 00D1
        gbc.setState(0x9147, 0x2205, 0xfd20, 0x1631, 0x450e, 0x3650, 0x0, 0x0);
        gbc.writeMem(0x3650, { 0x1e });
        gbc.writeMem(0x9147, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2205);
        EXPECT(gbc.pc(), 0x9149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9147), 0xcb);
        EXPECT(gbc.readMem(0x9148), 0xb6);
        // CB B6 00D2
        gbc.setState(0x5ea9, 0xab7, 0xb6a0, 0xe3ae, 0xbed, 0xdf2b, 0x0, 0x0);
        gbc.writeMem(0x5ea9, { 0xcb, 0xb6 });
        gbc.writeMem(0xdf2b, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xab7);
        EXPECT(gbc.pc(), 0x5eab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf2b), 0x20);
        // CB B6 00D3
        gbc.setState(0x3130, 0xcb5e, 0x59f0, 0x2b6b, 0x6fd0, 0xbee9, 0x0, 0x0);
        gbc.writeMem(0x3130, { 0xcb, 0xb6 });
        gbc.writeMem(0xbee9, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcb5e);
        EXPECT(gbc.pc(), 0x3132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee9), 0x22);
        // CB B6 00D5
        gbc.setState(0x6037, 0xeaa2, 0x39f0, 0x1732, 0x7a40, 0x68c5, 0x0, 0x0);
        gbc.writeMem(0x6037, { 0xcb, 0xb6 });
        gbc.writeMem(0x68c5, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xeaa2);
        EXPECT(gbc.pc(), 0x6039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 00D7
        gbc.setState(0xa6e2, 0x30b0, 0x2aa0, 0x5e8a, 0xedc5, 0xf86f, 0x0, 0x0);
        gbc.writeMem(0xa6e2, { 0xcb, 0xb6 });
        gbc.writeMem(0xf86f, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x30b0);
        EXPECT(gbc.pc(), 0xa6e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e2), 0xcb);
        EXPECT(gbc.readMem(0xa6e3), 0xb6);
        EXPECT(gbc.readMem(0xf86f), 0xe);
        // CB B6 00D8
        gbc.setState(0xcd77, 0xd29e, 0xcf80, 0x8c39, 0xa84a, 0x4610, 0x1, 0x0);
        gbc.writeMem(0x4610, { 0x1a });
        gbc.writeMem(0xcd77, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd29e);
        EXPECT(gbc.pc(), 0xcd79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd77), 0xcb);
        EXPECT(gbc.readMem(0xcd78), 0xb6);
        // CB B6 00D9
        gbc.setState(0x452, 0x10e5, 0xa2d0, 0xed50, 0xdc1e, 0x68d, 0x1, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0xb6 });
        gbc.writeMem(0x68d, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x10e5);
        EXPECT(gbc.pc(), 0x454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 00DD
        gbc.setState(0xe5f, 0xeab7, 0xa310, 0xeded, 0x136b, 0xfd20, 0x0, 0x0);
        gbc.writeMem(0xe5f, { 0xcb, 0xb6 });
        gbc.writeMem(0xfd20, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xeab7);
        EXPECT(gbc.pc(), 0xe61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd20), 0x33);
        // CB B6 00DE
        gbc.setState(0x6788, 0x789a, 0x9090, 0x967f, 0x6f3c, 0x1e84, 0x0, 0x0);
        gbc.writeMem(0x1e84, { 0x8e });
        gbc.writeMem(0x6788, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x789a);
        EXPECT(gbc.pc(), 0x678a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 00E0
        gbc.setState(0x6dda, 0x12c9, 0xa950, 0xaabf, 0xcc4d, 0x606, 0x0, 0x0);
        gbc.writeMem(0x606, { 0x23 });
        gbc.writeMem(0x6dda, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x12c9);
        EXPECT(gbc.pc(), 0x6ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 00E1
        gbc.setState(0xc422, 0xe34a, 0x10f0, 0xeb, 0xb2fc, 0xdf34, 0x1, 0x0);
        gbc.writeMem(0xc422, { 0xcb, 0xb6 });
        gbc.writeMem(0xdf34, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe34a);
        EXPECT(gbc.pc(), 0xc424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc422), 0xcb);
        EXPECT(gbc.readMem(0xc423), 0xb6);
        EXPECT(gbc.readMem(0xdf34), 0x8b);
        // CB B6 00E2
        gbc.setState(0xe1e7, 0xe0fe, 0x2ac0, 0xda00, 0x72cf, 0xc54c, 0x1, 0x0);
        gbc.writeMem(0xc54c, { 0x39 });
        gbc.writeMem(0xe1e7, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe0fe);
        EXPECT(gbc.pc(), 0xe1e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc54c), 0x39);
        EXPECT(gbc.readMem(0xe1e7), 0xcb);
        EXPECT(gbc.readMem(0xe1e8), 0xb6);
        // CB B6 00E4
        gbc.setState(0x9e00, 0x5f51, 0x5210, 0x3dda, 0x2c0e, 0x560e, 0x0, 0x1);
        gbc.writeMem(0x560e, { 0x91 });
        gbc.writeMem(0x9e00, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5f51);
        EXPECT(gbc.pc(), 0x9e02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e00), 0xcb);
        EXPECT(gbc.readMem(0x9e01), 0xb6);
        // CB B6 00E5
        gbc.setState(0x63d2, 0x555e, 0x5050, 0x2473, 0x9192, 0x451f, 0x1, 0x1);
        gbc.writeMem(0x451f, { 0x4 });
        gbc.writeMem(0x63d2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x555e);
        EXPECT(gbc.pc(), 0x63d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 00E6
        gbc.setState(0x6abb, 0xdf27, 0x8fc0, 0xad3c, 0x6388, 0xf244, 0x1, 0x1);
        gbc.writeMem(0x6abb, { 0xcb, 0xb6 });
        gbc.writeMem(0xf244, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdf27);
        EXPECT(gbc.pc(), 0x6abd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf244), 0x3);
        // CB B6 00E7
        gbc.setState(0x2d35, 0x7770, 0x5cf0, 0x9ae2, 0xefcd, 0xe586, 0x0, 0x0);
        gbc.writeMem(0x2d35, { 0xcb, 0xb6 });
        gbc.writeMem(0xe586, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7770);
        EXPECT(gbc.pc(), 0x2d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe586), 0x36);
        // CB B6 00E8
        gbc.setState(0xc4d9, 0x8702, 0xcad0, 0x9907, 0x2118, 0x1116, 0x0, 0x0);
        gbc.writeMem(0x1116, { 0x9a });
        gbc.writeMem(0xc4d9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8702);
        EXPECT(gbc.pc(), 0xc4db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d9), 0xcb);
        EXPECT(gbc.readMem(0xc4da), 0xb6);
        // CB B6 00E9
        gbc.setState(0xd022, 0x3926, 0x9f90, 0xacd2, 0xb8c, 0x2a4f, 0x1, 0x0);
        gbc.writeMem(0x2a4f, { 0x38 });
        gbc.writeMem(0xd022, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3926);
        EXPECT(gbc.pc(), 0xd024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd022), 0xcb);
        EXPECT(gbc.readMem(0xd023), 0xb6);
        // CB B6 00EA
        gbc.setState(0x3ab9, 0xfcfa, 0x1470, 0x2cc7, 0x57ac, 0x90ae, 0x0, 0x1);
        gbc.writeMem(0x3ab9, { 0xcb, 0xb6 });
        gbc.writeMem(0x90ae, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfcfa);
        EXPECT(gbc.pc(), 0x3abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ae), 0x9d);
        // CB B6 00EB
        gbc.setState(0x6b3a, 0x83a5, 0x12a0, 0x38de, 0x8a08, 0x940e, 0x0, 0x1);
        gbc.writeMem(0x6b3a, { 0xcb, 0xb6 });
        gbc.writeMem(0x940e, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x83a5);
        EXPECT(gbc.pc(), 0x6b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940e), 0xaf);
        // CB B6 00EC
        gbc.setState(0xa80, 0x9031, 0xddc0, 0x13a6, 0xd8e1, 0x8b36, 0x0, 0x0);
        gbc.writeMem(0xa80, { 0xcb, 0xb6 });
        gbc.writeMem(0x8b36, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9031);
        EXPECT(gbc.pc(), 0xa82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b36), 0x18);
        // CB B6 00EE
        gbc.setState(0x4343, 0xc03d, 0x1b90, 0x95a8, 0x9e88, 0xb4b8, 0x0, 0x0);
        gbc.writeMem(0x4343, { 0xcb, 0xb6 });
        gbc.writeMem(0xb4b8, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc03d);
        EXPECT(gbc.pc(), 0x4345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b8), 0x1d);
        // CB B6 00F0
        gbc.setState(0x2caa, 0x4d13, 0xaa70, 0x139c, 0xd6a4, 0x172b, 0x1, 0x1);
        gbc.writeMem(0x172b, { 0xa });
        gbc.writeMem(0x2caa, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4d13);
        EXPECT(gbc.pc(), 0x2cac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 00F1
        gbc.setState(0x7c96, 0x6c3, 0x48d0, 0xe5ae, 0xb206, 0x7f5c, 0x0, 0x1);
        gbc.writeMem(0x7c96, { 0xcb, 0xb6 });
        gbc.writeMem(0x7f5c, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6c3);
        EXPECT(gbc.pc(), 0x7c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 00F2
        gbc.setState(0x7358, 0x8b07, 0xe20, 0xd531, 0x1b34, 0xe474, 0x0, 0x1);
        gbc.writeMem(0x7358, { 0xcb, 0xb6 });
        gbc.writeMem(0xe474, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8b07);
        EXPECT(gbc.pc(), 0x735a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe474), 0xa6);
        // CB B6 00F3
        gbc.setState(0xc22d, 0xd299, 0x3960, 0x16ba, 0x179, 0x570d, 0x0, 0x1);
        gbc.writeMem(0x570d, { 0x21 });
        gbc.writeMem(0xc22d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd299);
        EXPECT(gbc.pc(), 0xc22f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc22d), 0xcb);
        EXPECT(gbc.readMem(0xc22e), 0xb6);
        // CB B6 00F4
        gbc.setState(0xb4df, 0x422b, 0x3da0, 0x1dfc, 0xdd9e, 0xe602, 0x0, 0x0);
        gbc.writeMem(0xb4df, { 0xcb, 0xb6 });
        gbc.writeMem(0xe602, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x422b);
        EXPECT(gbc.pc(), 0xb4e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4df), 0xcb);
        EXPECT(gbc.readMem(0xb4e0), 0xb6);
        EXPECT(gbc.readMem(0xe602), 0xa8);
        // CB B6 00F5
        gbc.setState(0x1ff3, 0x881a, 0xf280, 0x3914, 0x80ed, 0xf3ac, 0x0, 0x1);
        gbc.writeMem(0x1ff3, { 0xcb, 0xb6 });
        gbc.writeMem(0xf3ac, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x881a);
        EXPECT(gbc.pc(), 0x1ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf3ac), 0xd);
        // CB B6 00F6
        gbc.setState(0xdf61, 0x2ac2, 0x45c0, 0x79b0, 0x1f3e, 0x32fa, 0x1, 0x0);
        gbc.writeMem(0x32fa, { 0x92 });
        gbc.writeMem(0xdf61, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2ac2);
        EXPECT(gbc.pc(), 0xdf63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf61), 0xcb);
        EXPECT(gbc.readMem(0xdf62), 0xb6);
        // CB B6 00F7
        gbc.setState(0xc515, 0x3d06, 0x3100, 0x8836, 0x7cf6, 0xa08c, 0x1, 0x0);
        gbc.writeMem(0xa08c, { 0x13 });
        gbc.writeMem(0xc515, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3d06);
        EXPECT(gbc.pc(), 0xc517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08c), 0x13);
        EXPECT(gbc.readMem(0xc515), 0xcb);
        EXPECT(gbc.readMem(0xc516), 0xb6);
        // CB B6 00F9
        gbc.setState(0x6a2c, 0xe430, 0x64d0, 0x958b, 0x4569, 0x28d8, 0x1, 0x1);
        gbc.writeMem(0x28d8, { 0x1c });
        gbc.writeMem(0x6a2c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe430);
        EXPECT(gbc.pc(), 0x6a2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 00FC
        gbc.setState(0xb943, 0xa7d8, 0x6f10, 0x9a05, 0x2c1d, 0x1a68, 0x1, 0x1);
        gbc.writeMem(0x1a68, { 0xac });
        gbc.writeMem(0xb943, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa7d8);
        EXPECT(gbc.pc(), 0xb945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb943), 0xcb);
        EXPECT(gbc.readMem(0xb944), 0xb6);
        // CB B6 00FD
        gbc.setState(0xac2c, 0x7835, 0xff30, 0xbe19, 0xae1e, 0x181f, 0x0, 0x1);
        gbc.writeMem(0x181f, { 0xb });
        gbc.writeMem(0xac2c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7835);
        EXPECT(gbc.pc(), 0xac2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2c), 0xcb);
        EXPECT(gbc.readMem(0xac2d), 0xb6);
        // CB B6 00FF
        gbc.setState(0xc99, 0xeb6d, 0xe810, 0xdf98, 0x5ac4, 0x66d2, 0x1, 0x0);
        gbc.writeMem(0xc99, { 0xcb, 0xb6 });
        gbc.writeMem(0x66d2, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xeb6d);
        EXPECT(gbc.pc(), 0xc9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0100
        gbc.setState(0x3493, 0xa701, 0x6ae0, 0x9f6b, 0x6a34, 0xe93c, 0x1, 0x0);
        gbc.writeMem(0x3493, { 0xcb, 0xb6 });
        gbc.writeMem(0xe93c, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa701);
        EXPECT(gbc.pc(), 0x3495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93c), 0x1b);
        // CB B6 0101
        gbc.setState(0x7a0e, 0x4b2a, 0xf170, 0x2033, 0x5db4, 0xd1f5, 0x0, 0x0);
        gbc.writeMem(0x7a0e, { 0xcb, 0xb6 });
        gbc.writeMem(0xd1f5, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4b2a);
        EXPECT(gbc.pc(), 0x7a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f5), 0x6);
        // CB B6 0102
        gbc.setState(0x49d0, 0x375, 0x8980, 0x1d0d, 0x3f27, 0x9e85, 0x1, 0x1);
        gbc.writeMem(0x49d0, { 0xcb, 0xb6 });
        gbc.writeMem(0x9e85, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x375);
        EXPECT(gbc.pc(), 0x49d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e85), 0x83);
        // CB B6 0103
        gbc.setState(0xc0f3, 0xb311, 0x9780, 0xabd8, 0x497f, 0x8841, 0x1, 0x1);
        gbc.writeMem(0x8841, { 0xff });
        gbc.writeMem(0xc0f3, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb311);
        EXPECT(gbc.pc(), 0xc0f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8841), 0xbf);
        EXPECT(gbc.readMem(0xc0f3), 0xcb);
        EXPECT(gbc.readMem(0xc0f4), 0xb6);
        // CB B6 0106
        gbc.setState(0x8895, 0xe5cc, 0xe6e0, 0xb436, 0x6a8c, 0xd021, 0x0, 0x0);
        gbc.writeMem(0x8895, { 0xcb, 0xb6 });
        gbc.writeMem(0xd021, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe5cc);
        EXPECT(gbc.pc(), 0x8897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8895), 0xcb);
        EXPECT(gbc.readMem(0x8896), 0xb6);
        EXPECT(gbc.readMem(0xd021), 0x80);
        // CB B6 0107
        gbc.setState(0x857d, 0x1350, 0xaef0, 0x97a1, 0xaf2e, 0x6e72, 0x1, 0x0);
        gbc.writeMem(0x6e72, { 0xab });
        gbc.writeMem(0x857d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1350);
        EXPECT(gbc.pc(), 0x857f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x857d), 0xcb);
        EXPECT(gbc.readMem(0x857e), 0xb6);
        // CB B6 010C
        gbc.setState(0x4c03, 0x500c, 0x8f0, 0x391f, 0xb313, 0xd06f, 0x1, 0x1);
        gbc.writeMem(0x4c03, { 0xcb, 0xb6 });
        gbc.writeMem(0xd06f, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x500c);
        EXPECT(gbc.pc(), 0x4c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd06f), 0x9d);
        // CB B6 010D
        gbc.setState(0xe881, 0x770c, 0xc3f0, 0x2afd, 0x22f5, 0x684, 0x0, 0x0);
        gbc.writeMem(0x684, { 0x8c });
        gbc.writeMem(0xe881, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x770c);
        EXPECT(gbc.pc(), 0xe883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe881), 0xcb);
        EXPECT(gbc.readMem(0xe882), 0xb6);
        // CB B6 010F
        gbc.setState(0x164c, 0xd538, 0x3a10, 0xd080, 0xbffa, 0xee5d, 0x1, 0x0);
        gbc.writeMem(0x164c, { 0xcb, 0xb6 });
        gbc.writeMem(0xee5d, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd538);
        EXPECT(gbc.pc(), 0x164e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee5d), 0x3c);
        // CB B6 0110
        gbc.setState(0x5ca1, 0x44c2, 0x8f40, 0xd351, 0xf05, 0x98d3, 0x1, 0x1);
        gbc.writeMem(0x5ca1, { 0xcb, 0xb6 });
        gbc.writeMem(0x98d3, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x44c2);
        EXPECT(gbc.pc(), 0x5ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d3), 0xb5);
        // CB B6 0111
        gbc.setState(0xb194, 0xa5ca, 0x20e0, 0x3490, 0xde71, 0x9947, 0x1, 0x1);
        gbc.writeMem(0x9947, { 0xb8 });
        gbc.writeMem(0xb194, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa5ca);
        EXPECT(gbc.pc(), 0xb196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9947), 0xb8);
        EXPECT(gbc.readMem(0xb194), 0xcb);
        EXPECT(gbc.readMem(0xb195), 0xb6);
        // CB B6 0113
        gbc.setState(0xbae8, 0xc007, 0xa130, 0xa9ec, 0x438f, 0xacd7, 0x1, 0x1);
        gbc.writeMem(0xacd7, { 0x66 });
        gbc.writeMem(0xbae8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc007);
        EXPECT(gbc.pc(), 0xbaea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacd7), 0x26);
        EXPECT(gbc.readMem(0xbae8), 0xcb);
        EXPECT(gbc.readMem(0xbae9), 0xb6);
        // CB B6 0114
        gbc.setState(0x1a3, 0x3b0b, 0x8960, 0xdb2, 0x9044, 0xf19e, 0x0, 0x1);
        gbc.writeMem(0x1a3, { 0xcb, 0xb6 });
        gbc.writeMem(0xf19e, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3b0b);
        EXPECT(gbc.pc(), 0x1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf19e), 0x31);
        // CB B6 0115
        gbc.setState(0x82cd, 0x142a, 0xd970, 0x8dc0, 0xb2a5, 0xb7e3, 0x1, 0x0);
        gbc.writeMem(0x82cd, { 0xcb, 0xb6 });
        gbc.writeMem(0xb7e3, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x142a);
        EXPECT(gbc.pc(), 0x82cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cd), 0xcb);
        EXPECT(gbc.readMem(0x82ce), 0xb6);
        EXPECT(gbc.readMem(0xb7e3), 0xa4);
        // CB B6 0116
        gbc.setState(0xad03, 0x3b4e, 0xb580, 0xa9ff, 0xaa83, 0xe23d, 0x1, 0x0);
        gbc.writeMem(0xad03, { 0xcb, 0xb6 });
        gbc.writeMem(0xe23d, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3b4e);
        EXPECT(gbc.pc(), 0xad05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad03), 0xcb);
        EXPECT(gbc.readMem(0xad04), 0xb6);
        EXPECT(gbc.readMem(0xe23d), 0x6);
        // CB B6 0117
        gbc.setState(0x89cf, 0x27c7, 0x7b80, 0x8e73, 0x7c8e, 0x98e2, 0x0, 0x1);
        gbc.writeMem(0x89cf, { 0xcb, 0xb6 });
        gbc.writeMem(0x98e2, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x27c7);
        EXPECT(gbc.pc(), 0x89d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89cf), 0xcb);
        EXPECT(gbc.readMem(0x89d0), 0xb6);
        EXPECT(gbc.readMem(0x98e2), 0x9d);
        // CB B6 0118
        gbc.setState(0x393f, 0x11a, 0xbd0, 0x8f62, 0xf3a3, 0x89b7, 0x1, 0x0);
        gbc.writeMem(0x393f, { 0xcb, 0xb6 });
        gbc.writeMem(0x89b7, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x11a);
        EXPECT(gbc.pc(), 0x3941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89b7), 0xb2);
        // CB B6 011B
        gbc.setState(0x51a2, 0xa122, 0xaf10, 0x5b4d, 0xce0a, 0x73e9, 0x0, 0x1);
        gbc.writeMem(0x51a2, { 0xcb, 0xb6 });
        gbc.writeMem(0x73e9, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa122);
        EXPECT(gbc.pc(), 0x51a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 011E
        gbc.setState(0x47d7, 0x5512, 0x3bc0, 0x2382, 0x950d, 0xa273, 0x1, 0x1);
        gbc.writeMem(0x47d7, { 0xcb, 0xb6 });
        gbc.writeMem(0xa273, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5512);
        EXPECT(gbc.pc(), 0x47d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa273), 0xa1);
        // CB B6 011F
        gbc.setState(0xb42a, 0xb9ca, 0xe520, 0xcea6, 0x75dc, 0x7a7a, 0x1, 0x0);
        gbc.writeMem(0x7a7a, { 0x1f });
        gbc.writeMem(0xb42a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb9ca);
        EXPECT(gbc.pc(), 0xb42c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb42a), 0xcb);
        EXPECT(gbc.readMem(0xb42b), 0xb6);
        // CB B6 0120
        gbc.setState(0xe48a, 0xfdfd, 0xdb80, 0xa780, 0xda2b, 0xd6a0, 0x1, 0x0);
        gbc.writeMem(0xd6a0, { 0x5d });
        gbc.writeMem(0xe48a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfdfd);
        EXPECT(gbc.pc(), 0xe48c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a0), 0x1d);
        EXPECT(gbc.readMem(0xe48a), 0xcb);
        EXPECT(gbc.readMem(0xe48b), 0xb6);
        // CB B6 0121
        gbc.setState(0x780b, 0x195d, 0x82f0, 0xa358, 0xe6e2, 0x9dc1, 0x1, 0x0);
        gbc.writeMem(0x780b, { 0xcb, 0xb6 });
        gbc.writeMem(0x9dc1, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x195d);
        EXPECT(gbc.pc(), 0x780d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc1), 0x3d);
        // CB B6 0122
        gbc.setState(0x2705, 0xe44a, 0x8140, 0xb7a2, 0xa34b, 0x1939, 0x1, 0x0);
        gbc.writeMem(0x1939, { 0xa1 });
        gbc.writeMem(0x2705, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe44a);
        EXPECT(gbc.pc(), 0x2707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0123
        gbc.setState(0x9eba, 0x12e7, 0x1340, 0x8dda, 0xa6ed, 0xbc54, 0x0, 0x1);
        gbc.writeMem(0x9eba, { 0xcb, 0xb6 });
        gbc.writeMem(0xbc54, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x12e7);
        EXPECT(gbc.pc(), 0x9ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eba), 0xcb);
        EXPECT(gbc.readMem(0x9ebb), 0xb6);
        EXPECT(gbc.readMem(0xbc54), 0x37);
        // CB B6 0124
        gbc.setState(0x1630, 0x8537, 0x5a80, 0x835e, 0x87d1, 0xde4a, 0x0, 0x0);
        gbc.writeMem(0x1630, { 0xcb, 0xb6 });
        gbc.writeMem(0xde4a, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8537);
        EXPECT(gbc.pc(), 0x1632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4a), 0x88);
        // CB B6 0125
        gbc.setState(0xb843, 0xed26, 0x4d90, 0xce63, 0x1a9f, 0xec36, 0x0, 0x1);
        gbc.writeMem(0xb843, { 0xcb, 0xb6 });
        gbc.writeMem(0xec36, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xed26);
        EXPECT(gbc.pc(), 0xb845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb843), 0xcb);
        EXPECT(gbc.readMem(0xb844), 0xb6);
        EXPECT(gbc.readMem(0xec36), 0x28);
        // CB B6 0127
        gbc.setState(0xfd1, 0x403e, 0x5430, 0xb9d5, 0x8238, 0xe660, 0x1, 0x0);
        gbc.writeMem(0xfd1, { 0xcb, 0xb6 });
        gbc.writeMem(0xe660, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x403e);
        EXPECT(gbc.pc(), 0xfd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe660), 0x82);
        // CB B6 0128
        gbc.setState(0x9972, 0x8299, 0x4bd0, 0x60c5, 0x4ab5, 0x92aa, 0x0, 0x1);
        gbc.writeMem(0x92aa, { 0x98 });
        gbc.writeMem(0x9972, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8299);
        EXPECT(gbc.pc(), 0x9974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92aa), 0x98);
        EXPECT(gbc.readMem(0x9972), 0xcb);
        EXPECT(gbc.readMem(0x9973), 0xb6);
        // CB B6 0129
        gbc.setState(0xb8e4, 0x3422, 0xf8b0, 0x67a8, 0xc516, 0x90b7, 0x1, 0x1);
        gbc.writeMem(0x90b7, { 0xe0 });
        gbc.writeMem(0xb8e4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3422);
        EXPECT(gbc.pc(), 0xb8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b7), 0xa0);
        EXPECT(gbc.readMem(0xb8e4), 0xcb);
        EXPECT(gbc.readMem(0xb8e5), 0xb6);
        // CB B6 012A
        gbc.setState(0x5863, 0x73d, 0xac90, 0xcea9, 0x3fc3, 0xc8c6, 0x0, 0x1);
        gbc.writeMem(0x5863, { 0xcb, 0xb6 });
        gbc.writeMem(0xc8c6, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x73d);
        EXPECT(gbc.pc(), 0x5865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c6), 0xba);
        // CB B6 012C
        gbc.setState(0xa5e1, 0xc49b, 0x4330, 0x8207, 0xac88, 0xcc4f, 0x1, 0x0);
        gbc.writeMem(0xa5e1, { 0xcb, 0xb6 });
        gbc.writeMem(0xcc4f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc49b);
        EXPECT(gbc.pc(), 0xa5e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e1), 0xcb);
        EXPECT(gbc.readMem(0xa5e2), 0xb6);
        EXPECT(gbc.readMem(0xcc4f), 0x99);
        // CB B6 012D
        gbc.setState(0x77ec, 0xd7a1, 0x3650, 0x523f, 0x9ee7, 0xfca7, 0x1, 0x0);
        gbc.writeMem(0x77ec, { 0xcb, 0xb6 });
        gbc.writeMem(0xfca7, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd7a1);
        EXPECT(gbc.pc(), 0x77ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfca7), 0x30);
        // CB B6 012F
        gbc.setState(0xca71, 0x1a2d, 0xdc40, 0x2247, 0xc535, 0x92e5, 0x1, 0x1);
        gbc.writeMem(0x92e5, { 0x72 });
        gbc.writeMem(0xca71, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1a2d);
        EXPECT(gbc.pc(), 0xca73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e5), 0x32);
        EXPECT(gbc.readMem(0xca71), 0xcb);
        EXPECT(gbc.readMem(0xca72), 0xb6);
        // CB B6 0131
        gbc.setState(0x3b53, 0xa24d, 0xbba0, 0xf61f, 0x6a58, 0x25a9, 0x1, 0x1);
        gbc.writeMem(0x25a9, { 0x3a });
        gbc.writeMem(0x3b53, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa24d);
        EXPECT(gbc.pc(), 0x3b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0132
        gbc.setState(0x4300, 0xdc26, 0x90d0, 0xb63b, 0x9ec9, 0x3143, 0x0, 0x1);
        gbc.writeMem(0x3143, { 0xaa });
        gbc.writeMem(0x4300, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xdc26);
        EXPECT(gbc.pc(), 0x4302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0134
        gbc.setState(0x1d72, 0x6cb9, 0x92d0, 0x7783, 0xa702, 0xa82f, 0x0, 0x1);
        gbc.writeMem(0x1d72, { 0xcb, 0xb6 });
        gbc.writeMem(0xa82f, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6cb9);
        EXPECT(gbc.pc(), 0x1d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82f), 0xa2);
        // CB B6 0135
        gbc.setState(0x938e, 0x9173, 0xf810, 0xa9e6, 0x335e, 0xa992, 0x0, 0x1);
        gbc.writeMem(0x938e, { 0xcb, 0xb6 });
        gbc.writeMem(0xa992, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9173);
        EXPECT(gbc.pc(), 0x9390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x938e), 0xcb);
        EXPECT(gbc.readMem(0x938f), 0xb6);
        EXPECT(gbc.readMem(0xa992), 0xab);
        // CB B6 0136
        gbc.setState(0x610c, 0xf53f, 0xf160, 0x22a1, 0x211c, 0x2769, 0x0, 0x1);
        gbc.writeMem(0x2769, { 0x83 });
        gbc.writeMem(0x610c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf53f);
        EXPECT(gbc.pc(), 0x610e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0138
        gbc.setState(0xcf0f, 0xffed, 0x1f20, 0x70c1, 0x1b8f, 0xa77f, 0x1, 0x1);
        gbc.writeMem(0xa77f, { 0x53 });
        gbc.writeMem(0xcf0f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xffed);
        EXPECT(gbc.pc(), 0xcf11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa77f), 0x13);
        EXPECT(gbc.readMem(0xcf0f), 0xcb);
        EXPECT(gbc.readMem(0xcf10), 0xb6);
        // CB B6 0139
        gbc.setState(0xaf32, 0xfe38, 0x8700, 0x473f, 0x4076, 0xd348, 0x1, 0x1);
        gbc.writeMem(0xaf32, { 0xcb, 0xb6 });
        gbc.writeMem(0xd348, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfe38);
        EXPECT(gbc.pc(), 0xaf34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf32), 0xcb);
        EXPECT(gbc.readMem(0xaf33), 0xb6);
        EXPECT(gbc.readMem(0xd348), 0x88);
        // CB B6 013A
        gbc.setState(0xc9bc, 0x92c2, 0xec90, 0x5ba9, 0x7fdb, 0x847b, 0x0, 0x1);
        gbc.writeMem(0x847b, { 0x2f });
        gbc.writeMem(0xc9bc, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x92c2);
        EXPECT(gbc.pc(), 0xc9be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x847b), 0x2f);
        EXPECT(gbc.readMem(0xc9bc), 0xcb);
        EXPECT(gbc.readMem(0xc9bd), 0xb6);
        // CB B6 013B
        gbc.setState(0xb1ee, 0xd6dd, 0xb40, 0x4d9c, 0x77b0, 0xf022, 0x1, 0x0);
        gbc.writeMem(0xb1ee, { 0xcb, 0xb6 });
        gbc.writeMem(0xf022, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd6dd);
        EXPECT(gbc.pc(), 0xb1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ee), 0xcb);
        EXPECT(gbc.readMem(0xb1ef), 0xb6);
        EXPECT(gbc.readMem(0xf022), 0xa3);
        // CB B6 013C
        gbc.setState(0x365c, 0x4a7d, 0x80, 0x7639, 0xd9ec, 0x8ea8, 0x0, 0x0);
        gbc.writeMem(0x365c, { 0xcb, 0xb6 });
        gbc.writeMem(0x8ea8, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4a7d);
        EXPECT(gbc.pc(), 0x365e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea8), 0x3e);
        // CB B6 013D
        gbc.setState(0x2bf1, 0x7283, 0x3a60, 0x1f6, 0x7f91, 0xbb4a, 0x0, 0x1);
        gbc.writeMem(0x2bf1, { 0xcb, 0xb6 });
        gbc.writeMem(0xbb4a, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7283);
        EXPECT(gbc.pc(), 0x2bf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb4a), 0x3f);
        // CB B6 013E
        gbc.setState(0x4070, 0x5583, 0x720, 0x3d4d, 0x5248, 0xfba5, 0x1, 0x1);
        gbc.writeMem(0x4070, { 0xcb, 0xb6 });
        gbc.writeMem(0xfba5, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5583);
        EXPECT(gbc.pc(), 0x4072);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfba5), 0x21);
        // CB B6 013F
        gbc.setState(0xfcc, 0xd30c, 0xfb30, 0x63dd, 0xf3b4, 0xea74, 0x0, 0x1);
        gbc.writeMem(0xfcc, { 0xcb, 0xb6 });
        gbc.writeMem(0xea74, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd30c);
        EXPECT(gbc.pc(), 0xfce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea74), 0xaa);
        // CB B6 0140
        gbc.setState(0x490a, 0xdfc0, 0x75c0, 0x24d0, 0xcbc5, 0x9feb, 0x0, 0x1);
        gbc.writeMem(0x490a, { 0xcb, 0xb6 });
        gbc.writeMem(0x9feb, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xdfc0);
        EXPECT(gbc.pc(), 0x490c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9feb), 0x22);
        // CB B6 0141
        gbc.setState(0x978a, 0x9741, 0x360, 0xa587, 0x22a8, 0xb39c, 0x1, 0x1);
        gbc.writeMem(0x978a, { 0xcb, 0xb6 });
        gbc.writeMem(0xb39c, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9741);
        EXPECT(gbc.pc(), 0x978c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978a), 0xcb);
        EXPECT(gbc.readMem(0x978b), 0xb6);
        EXPECT(gbc.readMem(0xb39c), 0x3a);
        // CB B6 0142
        gbc.setState(0xa993, 0x76fd, 0xfcd0, 0x2137, 0xba59, 0x625c, 0x0, 0x1);
        gbc.writeMem(0x625c, { 0x5 });
        gbc.writeMem(0xa993, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x76fd);
        EXPECT(gbc.pc(), 0xa995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa993), 0xcb);
        EXPECT(gbc.readMem(0xa994), 0xb6);
        // CB B6 0145
        gbc.setState(0x9ca9, 0xe8af, 0xfdf0, 0xcdee, 0xe169, 0x39fb, 0x1, 0x0);
        gbc.writeMem(0x39fb, { 0x4 });
        gbc.writeMem(0x9ca9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe8af);
        EXPECT(gbc.pc(), 0x9cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca9), 0xcb);
        EXPECT(gbc.readMem(0x9caa), 0xb6);
        // CB B6 0146
        gbc.setState(0xeb77, 0xc53, 0x2900, 0x6a54, 0x2740, 0xc124, 0x0, 0x1);
        gbc.writeMem(0xc124, { 0xdd });
        gbc.writeMem(0xeb77, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc53);
        EXPECT(gbc.pc(), 0xeb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc124), 0x9d);
        EXPECT(gbc.readMem(0xeb77), 0xcb);
        EXPECT(gbc.readMem(0xeb78), 0xb6);
        // CB B6 0147
        gbc.setState(0x6df5, 0x2bb7, 0xe560, 0x63cf, 0x8751, 0xd2e7, 0x1, 0x0);
        gbc.writeMem(0x6df5, { 0xcb, 0xb6 });
        gbc.writeMem(0xd2e7, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2bb7);
        EXPECT(gbc.pc(), 0x6df7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e7), 0x18);
        // CB B6 0148
        gbc.setState(0xab0c, 0x9d81, 0x3860, 0x826a, 0xa7f7, 0x8b49, 0x0, 0x0);
        gbc.writeMem(0x8b49, { 0xcb });
        gbc.writeMem(0xab0c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9d81);
        EXPECT(gbc.pc(), 0xab0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b49), 0x8b);
        EXPECT(gbc.readMem(0xab0c), 0xcb);
        EXPECT(gbc.readMem(0xab0d), 0xb6);
        // CB B6 0149
        gbc.setState(0x8208, 0xac66, 0x5c40, 0xec4c, 0x1bda, 0xebab, 0x1, 0x0);
        gbc.writeMem(0x8208, { 0xcb, 0xb6 });
        gbc.writeMem(0xebab, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xac66);
        EXPECT(gbc.pc(), 0x820a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8208), 0xcb);
        EXPECT(gbc.readMem(0x8209), 0xb6);
        EXPECT(gbc.readMem(0xebab), 0x9e);
        // CB B6 014A
        gbc.setState(0x1174, 0x8731, 0xbe60, 0x7477, 0xa4c, 0xa070, 0x1, 0x1);
        gbc.writeMem(0x1174, { 0xcb, 0xb6 });
        gbc.writeMem(0xa070, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8731);
        EXPECT(gbc.pc(), 0x1176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa070), 0x20);
        // CB B6 014B
        gbc.setState(0xda15, 0x8dd6, 0xb6e0, 0xf31f, 0x90e7, 0xc838, 0x0, 0x1);
        gbc.writeMem(0xc838, { 0x1c });
        gbc.writeMem(0xda15, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8dd6);
        EXPECT(gbc.pc(), 0xda17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc838), 0x1c);
        EXPECT(gbc.readMem(0xda15), 0xcb);
        EXPECT(gbc.readMem(0xda16), 0xb6);
        // CB B6 014C
        gbc.setState(0x1253, 0xff42, 0x4790, 0xeb07, 0x570, 0xa41c, 0x1, 0x1);
        gbc.writeMem(0x1253, { 0xcb, 0xb6 });
        gbc.writeMem(0xa41c, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xff42);
        EXPECT(gbc.pc(), 0x1255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa41c), 0x25);
        // CB B6 014E
        gbc.setState(0x4744, 0x343b, 0xb070, 0x93ef, 0x4b4d, 0xa9b7, 0x1, 0x0);
        gbc.writeMem(0x4744, { 0xcb, 0xb6 });
        gbc.writeMem(0xa9b7, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x343b);
        EXPECT(gbc.pc(), 0x4746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9b7), 0x9f);
        // CB B6 014F
        gbc.setState(0xe2f8, 0x2232, 0x46e0, 0x5edf, 0xa9e3, 0xbb5f, 0x1, 0x0);
        gbc.writeMem(0xbb5f, { 0x31 });
        gbc.writeMem(0xe2f8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2232);
        EXPECT(gbc.pc(), 0xe2fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb5f), 0x31);
        EXPECT(gbc.readMem(0xe2f8), 0xcb);
        EXPECT(gbc.readMem(0xe2f9), 0xb6);
        // CB B6 0150
        gbc.setState(0x8a21, 0xe00b, 0xa460, 0xa176, 0x404a, 0x93c9, 0x0, 0x1);
        gbc.writeMem(0x8a21, { 0xcb, 0xb6 });
        gbc.writeMem(0x93c9, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe00b);
        EXPECT(gbc.pc(), 0x8a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a21), 0xcb);
        EXPECT(gbc.readMem(0x8a22), 0xb6);
        EXPECT(gbc.readMem(0x93c9), 0xbf);
        // CB B6 0151
        gbc.setState(0xa7d0, 0x716b, 0xe4c0, 0x4060, 0x529d, 0xf4a, 0x0, 0x0);
        gbc.writeMem(0xf4a, { 0x88 });
        gbc.writeMem(0xa7d0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x716b);
        EXPECT(gbc.pc(), 0xa7d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d0), 0xcb);
        EXPECT(gbc.readMem(0xa7d1), 0xb6);
        // CB B6 0152
        gbc.setState(0x1954, 0xa8a8, 0xa240, 0xf2ee, 0x1356, 0xb55f, 0x1, 0x0);
        gbc.writeMem(0x1954, { 0xcb, 0xb6 });
        gbc.writeMem(0xb55f, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa8a8);
        EXPECT(gbc.pc(), 0x1956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb55f), 0x2);
        // CB B6 0156
        gbc.setState(0xc45a, 0x46b0, 0x7ff0, 0xaf37, 0x9927, 0x71b4, 0x0, 0x0);
        gbc.writeMem(0x71b4, { 0xb3 });
        gbc.writeMem(0xc45a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x46b0);
        EXPECT(gbc.pc(), 0xc45c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45a), 0xcb);
        EXPECT(gbc.readMem(0xc45b), 0xb6);
        // CB B6 0157
        gbc.setState(0x206c, 0x9364, 0x5f90, 0x224d, 0x6f1, 0xa363, 0x1, 0x0);
        gbc.writeMem(0x206c, { 0xcb, 0xb6 });
        gbc.writeMem(0xa363, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9364);
        EXPECT(gbc.pc(), 0x206e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa363), 0xba);
        // CB B6 015A
        gbc.setState(0x3d2a, 0x5251, 0x68b0, 0x4f4d, 0x5ad9, 0xb4df, 0x1, 0x0);
        gbc.writeMem(0x3d2a, { 0xcb, 0xb6 });
        gbc.writeMem(0xb4df, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5251);
        EXPECT(gbc.pc(), 0x3d2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4df), 0xa2);
        // CB B6 015B
        gbc.setState(0x2f79, 0x5db7, 0x6480, 0xbeb1, 0xa489, 0x99db, 0x1, 0x0);
        gbc.writeMem(0x2f79, { 0xcb, 0xb6 });
        gbc.writeMem(0x99db, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5db7);
        EXPECT(gbc.pc(), 0x2f7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99db), 0x9c);
        // CB B6 015C
        gbc.setState(0xd9d5, 0x9be4, 0x5300, 0x1fe2, 0xc5ec, 0xd6b8, 0x1, 0x1);
        gbc.writeMem(0xd6b8, { 0x29 });
        gbc.writeMem(0xd9d5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9be4);
        EXPECT(gbc.pc(), 0xd9d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b8), 0x29);
        EXPECT(gbc.readMem(0xd9d5), 0xcb);
        EXPECT(gbc.readMem(0xd9d6), 0xb6);
        // CB B6 015D
        gbc.setState(0xae9f, 0x7ebc, 0x9d00, 0x5b84, 0xb17c, 0x7085, 0x1, 0x0);
        gbc.writeMem(0x7085, { 0x96 });
        gbc.writeMem(0xae9f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7ebc);
        EXPECT(gbc.pc(), 0xaea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae9f), 0xcb);
        EXPECT(gbc.readMem(0xaea0), 0xb6);
        // CB B6 015F
        gbc.setState(0x8af3, 0x289d, 0x9b90, 0x59ae, 0x760b, 0xe950, 0x1, 0x1);
        gbc.writeMem(0x8af3, { 0xcb, 0xb6 });
        gbc.writeMem(0xe950, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x289d);
        EXPECT(gbc.pc(), 0x8af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af3), 0xcb);
        EXPECT(gbc.readMem(0x8af4), 0xb6);
        EXPECT(gbc.readMem(0xe950), 0x2c);
        // CB B6 0161
        gbc.setState(0x617, 0x1862, 0x690, 0xc616, 0xe160, 0x1922, 0x0, 0x1);
        gbc.writeMem(0x617, { 0xcb, 0xb6 });
        gbc.writeMem(0x1922, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1862);
        EXPECT(gbc.pc(), 0x619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0163
        gbc.setState(0x8cb2, 0x61d9, 0x50f0, 0xd5f6, 0x5c72, 0x1acf, 0x1, 0x0);
        gbc.writeMem(0x1acf, { 0x89 });
        gbc.writeMem(0x8cb2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x61d9);
        EXPECT(gbc.pc(), 0x8cb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb2), 0xcb);
        EXPECT(gbc.readMem(0x8cb3), 0xb6);
        // CB B6 0165
        gbc.setState(0x3699, 0x1632, 0x5ae0, 0x1628, 0x7a1e, 0xe7ec, 0x0, 0x0);
        gbc.writeMem(0x3699, { 0xcb, 0xb6 });
        gbc.writeMem(0xe7ec, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1632);
        EXPECT(gbc.pc(), 0x369b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ec), 0x9a);
        // CB B6 0166
        gbc.setState(0xe265, 0x1725, 0xf420, 0xb6b3, 0xf14d, 0xd3fa, 0x0, 0x0);
        gbc.writeMem(0xd3fa, { 0x2f });
        gbc.writeMem(0xe265, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1725);
        EXPECT(gbc.pc(), 0xe267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3fa), 0x2f);
        EXPECT(gbc.readMem(0xe265), 0xcb);
        EXPECT(gbc.readMem(0xe266), 0xb6);
        // CB B6 0167
        gbc.setState(0xa5c7, 0x613, 0x3ef0, 0xf9c7, 0xdc84, 0x4314, 0x1, 0x1);
        gbc.writeMem(0x4314, { 0x9 });
        gbc.writeMem(0xa5c7, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x613);
        EXPECT(gbc.pc(), 0xa5c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c7), 0xcb);
        EXPECT(gbc.readMem(0xa5c8), 0xb6);
        // CB B6 0168
        gbc.setState(0x5a8a, 0x6f6a, 0x2a60, 0xfb4e, 0xd9da, 0x7d74, 0x0, 0x1);
        gbc.writeMem(0x5a8a, { 0xcb, 0xb6 });
        gbc.writeMem(0x7d74, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6f6a);
        EXPECT(gbc.pc(), 0x5a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0169
        gbc.setState(0x6c23, 0x790e, 0x8a0, 0x693b, 0xc7ac, 0x8c10, 0x0, 0x0);
        gbc.writeMem(0x6c23, { 0xcb, 0xb6 });
        gbc.writeMem(0x8c10, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x790e);
        EXPECT(gbc.pc(), 0x6c25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c10), 0x2f);
        // CB B6 016B
        gbc.setState(0x19e9, 0x5ca, 0xaae0, 0xd1f7, 0xe8c1, 0xea72, 0x0, 0x1);
        gbc.writeMem(0x19e9, { 0xcb, 0xb6 });
        gbc.writeMem(0xea72, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5ca);
        EXPECT(gbc.pc(), 0x19eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea72), 0xac);
        // CB B6 016C
        gbc.setState(0x6bdf, 0xf3cb, 0xbaf0, 0xf0ef, 0x4311, 0x5a72, 0x0, 0x0);
        gbc.writeMem(0x5a72, { 0xac });
        gbc.writeMem(0x6bdf, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf3cb);
        EXPECT(gbc.pc(), 0x6be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 016D
        gbc.setState(0xe567, 0x4fb4, 0x7070, 0xd47f, 0x646c, 0xa33a, 0x1, 0x1);
        gbc.writeMem(0xa33a, { 0x8b });
        gbc.writeMem(0xe567, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4fb4);
        EXPECT(gbc.pc(), 0xe569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa33a), 0x8b);
        EXPECT(gbc.readMem(0xe567), 0xcb);
        EXPECT(gbc.readMem(0xe568), 0xb6);
        // CB B6 016E
        gbc.setState(0xc839, 0xf0b4, 0x5870, 0x9ef9, 0x5748, 0x818, 0x0, 0x0);
        gbc.writeMem(0x818, { 0xd });
        gbc.writeMem(0xc839, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf0b4);
        EXPECT(gbc.pc(), 0xc83b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc839), 0xcb);
        EXPECT(gbc.readMem(0xc83a), 0xb6);
        // CB B6 016F
        gbc.setState(0x328c, 0x80bd, 0x1980, 0x1349, 0xbedc, 0xde42, 0x0, 0x1);
        gbc.writeMem(0x328c, { 0xcb, 0xb6 });
        gbc.writeMem(0xde42, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x80bd);
        EXPECT(gbc.pc(), 0x328e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde42), 0x8a);
        // CB B6 0172
        gbc.setState(0x6b24, 0x887f, 0x4510, 0xf4b7, 0x2c22, 0xfd75, 0x1, 0x1);
        gbc.writeMem(0x6b24, { 0xcb, 0xb6 });
        gbc.writeMem(0xfd75, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x887f);
        EXPECT(gbc.pc(), 0x6b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd75), 0xad);
        // CB B6 0173
        gbc.setState(0x9adb, 0xf462, 0x9da0, 0xe161, 0xce15, 0x4181, 0x1, 0x0);
        gbc.writeMem(0x4181, { 0x87 });
        gbc.writeMem(0x9adb, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf462);
        EXPECT(gbc.pc(), 0x9add);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9adb), 0xcb);
        EXPECT(gbc.readMem(0x9adc), 0xb6);
        // CB B6 0174
        gbc.setState(0x7c8, 0x90b9, 0x62b0, 0xdcd5, 0x52bb, 0x8090, 0x0, 0x0);
        gbc.writeMem(0x7c8, { 0xcb, 0xb6 });
        gbc.writeMem(0x8090, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x90b9);
        EXPECT(gbc.pc(), 0x7ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8090), 0x6);
        // CB B6 0175
        gbc.setState(0xd8f1, 0xb614, 0x1830, 0xeea2, 0xf72d, 0x3174, 0x0, 0x1);
        gbc.writeMem(0x3174, { 0x8 });
        gbc.writeMem(0xd8f1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb614);
        EXPECT(gbc.pc(), 0xd8f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f1), 0xcb);
        EXPECT(gbc.readMem(0xd8f2), 0xb6);
        // CB B6 0176
        gbc.setState(0xb05c, 0xcabb, 0xc960, 0xc3d5, 0x3d06, 0xc43e, 0x0, 0x0);
        gbc.writeMem(0xb05c, { 0xcb, 0xb6 });
        gbc.writeMem(0xc43e, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xcabb);
        EXPECT(gbc.pc(), 0xb05e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb05c), 0xcb);
        EXPECT(gbc.readMem(0xb05d), 0xb6);
        EXPECT(gbc.readMem(0xc43e), 0x8f);
        // CB B6 0177
        gbc.setState(0xa6c8, 0xbc97, 0xdce0, 0x6ab3, 0x4b65, 0xd334, 0x1, 0x0);
        gbc.writeMem(0xa6c8, { 0xcb, 0xb6 });
        gbc.writeMem(0xd334, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbc97);
        EXPECT(gbc.pc(), 0xa6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c8), 0xcb);
        EXPECT(gbc.readMem(0xa6c9), 0xb6);
        EXPECT(gbc.readMem(0xd334), 0xa0);
        // CB B6 0178
        gbc.setState(0xe562, 0xaa69, 0x2f40, 0x1b40, 0xa99c, 0xaa30, 0x1, 0x1);
        gbc.writeMem(0xaa30, { 0x79 });
        gbc.writeMem(0xe562, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xaa69);
        EXPECT(gbc.pc(), 0xe564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa30), 0x39);
        EXPECT(gbc.readMem(0xe562), 0xcb);
        EXPECT(gbc.readMem(0xe563), 0xb6);
        // CB B6 0179
        gbc.setState(0x3c1a, 0xca5, 0xd8b0, 0x5225, 0xe392, 0xbd03, 0x0, 0x0);
        gbc.writeMem(0x3c1a, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd03, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xca5);
        EXPECT(gbc.pc(), 0x3c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd03), 0x9c);
        // CB B6 017A
        gbc.setState(0xb304, 0x2c70, 0xa190, 0x5e41, 0xf728, 0x3ae0, 0x0, 0x0);
        gbc.writeMem(0x3ae0, { 0x2 });
        gbc.writeMem(0xb304, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2c70);
        EXPECT(gbc.pc(), 0xb306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb304), 0xcb);
        EXPECT(gbc.readMem(0xb305), 0xb6);
        // CB B6 017C
        gbc.setState(0x661b, 0x353e, 0xc6f0, 0x2b37, 0x5df6, 0xb83, 0x0, 0x0);
        gbc.writeMem(0xb83, { 0xb0 });
        gbc.writeMem(0x661b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x353e);
        EXPECT(gbc.pc(), 0x661d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 017D
        gbc.setState(0xc2b9, 0xbdd4, 0x7a90, 0x68f0, 0x8520, 0x70df, 0x0, 0x0);
        gbc.writeMem(0x70df, { 0xbf });
        gbc.writeMem(0xc2b9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbdd4);
        EXPECT(gbc.pc(), 0xc2bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b9), 0xcb);
        EXPECT(gbc.readMem(0xc2ba), 0xb6);
        // CB B6 0181
        gbc.setState(0xd42d, 0x488d, 0xa5f0, 0x3902, 0x3bb3, 0xf0de, 0x1, 0x1);
        gbc.writeMem(0xd42d, { 0xcb, 0xb6 });
        gbc.writeMem(0xf0de, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x488d);
        EXPECT(gbc.pc(), 0xd42f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd42d), 0xcb);
        EXPECT(gbc.readMem(0xd42e), 0xb6);
        EXPECT(gbc.readMem(0xf0de), 0x36);
        // CB B6 0183
        gbc.setState(0x7fc9, 0x169c, 0x36c0, 0xfb67, 0xdecb, 0xfed1, 0x1, 0x1);
        gbc.writeMem(0x7fc9, { 0xcb, 0xb6 });
        gbc.writeMem(0xfed1, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x169c);
        EXPECT(gbc.pc(), 0x7fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfed1), 0x17);
        // CB B6 0184
        gbc.setState(0xdf5b, 0x749d, 0x33d0, 0x7dac, 0x3262, 0xac9a, 0x1, 0x0);
        gbc.writeMem(0xac9a, { 0x95 });
        gbc.writeMem(0xdf5b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x749d);
        EXPECT(gbc.pc(), 0xdf5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac9a), 0x95);
        EXPECT(gbc.readMem(0xdf5b), 0xcb);
        EXPECT(gbc.readMem(0xdf5c), 0xb6);
        // CB B6 0185
        gbc.setState(0x41a8, 0xe1a1, 0x8ef0, 0xbb86, 0x8832, 0x1805, 0x1, 0x1);
        gbc.writeMem(0x1805, { 0xa1 });
        gbc.writeMem(0x41a8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe1a1);
        EXPECT(gbc.pc(), 0x41aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0187
        gbc.setState(0x8a81, 0xd947, 0x6680, 0x2bd0, 0x9a4b, 0xcd9, 0x1, 0x1);
        gbc.writeMem(0xcd9, { 0x8 });
        gbc.writeMem(0x8a81, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd947);
        EXPECT(gbc.pc(), 0x8a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a81), 0xcb);
        EXPECT(gbc.readMem(0x8a82), 0xb6);
        // CB B6 0188
        gbc.setState(0xbb26, 0x789, 0x3840, 0x68b4, 0x4365, 0xf06f, 0x1, 0x1);
        gbc.writeMem(0xbb26, { 0xcb, 0xb6 });
        gbc.writeMem(0xf06f, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x789);
        EXPECT(gbc.pc(), 0xbb28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb26), 0xcb);
        EXPECT(gbc.readMem(0xbb27), 0xb6);
        EXPECT(gbc.readMem(0xf06f), 0x10);
        // CB B6 0189
        gbc.setState(0x77e, 0xa3ce, 0xfc30, 0x42c1, 0xe1ae, 0xf02d, 0x0, 0x0);
        gbc.writeMem(0x77e, { 0xcb, 0xb6 });
        gbc.writeMem(0xf02d, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa3ce);
        EXPECT(gbc.pc(), 0x780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf02d), 0x37);
        // CB B6 018A
        gbc.setState(0xa2c3, 0xea52, 0xeb60, 0xd636, 0x8cfe, 0xe3e1, 0x1, 0x0);
        gbc.writeMem(0xa2c3, { 0xcb, 0xb6 });
        gbc.writeMem(0xe3e1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xea52);
        EXPECT(gbc.pc(), 0xa2c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c3), 0xcb);
        EXPECT(gbc.readMem(0xa2c4), 0xb6);
        EXPECT(gbc.readMem(0xe3e1), 0xb8);
        // CB B6 018B
        gbc.setState(0x1b35, 0x5625, 0x8de0, 0x71ac, 0xeca6, 0x6893, 0x0, 0x0);
        gbc.writeMem(0x1b35, { 0xcb, 0xb6 });
        gbc.writeMem(0x6893, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5625);
        EXPECT(gbc.pc(), 0x1b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 018C
        gbc.setState(0x3211, 0x70ad, 0x4c10, 0x182b, 0x9d6c, 0x974e, 0x0, 0x0);
        gbc.writeMem(0x3211, { 0xcb, 0xb6 });
        gbc.writeMem(0x974e, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x70ad);
        EXPECT(gbc.pc(), 0x3213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x974e), 0x18);
        // CB B6 018D
        gbc.setState(0xe86a, 0x381, 0x3a0, 0xf20, 0x27f0, 0xda33, 0x1, 0x0);
        gbc.writeMem(0xda33, { 0xfd });
        gbc.writeMem(0xe86a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x381);
        EXPECT(gbc.pc(), 0xe86c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda33), 0xbd);
        EXPECT(gbc.readMem(0xe86a), 0xcb);
        EXPECT(gbc.readMem(0xe86b), 0xb6);
        // CB B6 018E
        gbc.setState(0xd006, 0x6ee4, 0x2fc0, 0x10d, 0x6206, 0x4974, 0x1, 0x1);
        gbc.writeMem(0x4974, { 0x39 });
        gbc.writeMem(0xd006, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6ee4);
        EXPECT(gbc.pc(), 0xd008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd006), 0xcb);
        EXPECT(gbc.readMem(0xd007), 0xb6);
        // CB B6 0190
        gbc.setState(0x16b6, 0x45, 0x50c0, 0x2c9a, 0xdcad, 0xfcd2, 0x1, 0x0);
        gbc.writeMem(0x16b6, { 0xcb, 0xb6 });
        gbc.writeMem(0xfcd2, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x45);
        EXPECT(gbc.pc(), 0x16b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfcd2), 0x6);
        // CB B6 0191
        gbc.setState(0xc928, 0xe8ca, 0x74e0, 0x1124, 0xe72b, 0x996, 0x0, 0x1);
        gbc.writeMem(0x996, { 0x3a });
        gbc.writeMem(0xc928, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe8ca);
        EXPECT(gbc.pc(), 0xc92a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc928), 0xcb);
        EXPECT(gbc.readMem(0xc929), 0xb6);
        // CB B6 0192
        gbc.setState(0x22be, 0xef6a, 0xd480, 0x5fc0, 0xc75b, 0x9e2b, 0x0, 0x0);
        gbc.writeMem(0x22be, { 0xcb, 0xb6 });
        gbc.writeMem(0x9e2b, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xef6a);
        EXPECT(gbc.pc(), 0x22c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e2b), 0x3d);
        // CB B6 0193
        gbc.setState(0x569f, 0x6cd3, 0x4b50, 0x5fa9, 0xada3, 0xf859, 0x0, 0x1);
        gbc.writeMem(0x569f, { 0xcb, 0xb6 });
        gbc.writeMem(0xf859, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6cd3);
        EXPECT(gbc.pc(), 0x56a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf859), 0xba);
        // CB B6 0194
        gbc.setState(0x6f95, 0xbe8f, 0xb0c0, 0x2d58, 0x128b, 0xabdd, 0x1, 0x1);
        gbc.writeMem(0x6f95, { 0xcb, 0xb6 });
        gbc.writeMem(0xabdd, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xbe8f);
        EXPECT(gbc.pc(), 0x6f97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabdd), 0x93);
        // CB B6 0195
        gbc.setState(0x7e8a, 0xa73d, 0xcc20, 0x8671, 0xbc62, 0x624c, 0x0, 0x0);
        gbc.writeMem(0x624c, { 0xaf });
        gbc.writeMem(0x7e8a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa73d);
        EXPECT(gbc.pc(), 0x7e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0196
        gbc.setState(0xe3b8, 0x2a57, 0x260, 0x6bf, 0xfee1, 0xb0cc, 0x0, 0x1);
        gbc.writeMem(0xb0cc, { 0x2e });
        gbc.writeMem(0xe3b8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2a57);
        EXPECT(gbc.pc(), 0xe3ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0cc), 0x2e);
        EXPECT(gbc.readMem(0xe3b8), 0xcb);
        EXPECT(gbc.readMem(0xe3b9), 0xb6);
        // CB B6 0198
        gbc.setState(0xab24, 0xc325, 0x8300, 0xa307, 0xb42c, 0xc85b, 0x0, 0x0);
        gbc.writeMem(0xab24, { 0xcb, 0xb6 });
        gbc.writeMem(0xc85b, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc325);
        EXPECT(gbc.pc(), 0xab26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab24), 0xcb);
        EXPECT(gbc.readMem(0xab25), 0xb6);
        EXPECT(gbc.readMem(0xc85b), 0xb8);
        // CB B6 0199
        gbc.setState(0xe1f5, 0x8218, 0x83b0, 0xdf3a, 0xddd9, 0x4f4d, 0x0, 0x0);
        gbc.writeMem(0x4f4d, { 0xa9 });
        gbc.writeMem(0xe1f5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8218);
        EXPECT(gbc.pc(), 0xe1f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f5), 0xcb);
        EXPECT(gbc.readMem(0xe1f6), 0xb6);
        // CB B6 019A
        gbc.setState(0x73dc, 0x9f9, 0x3520, 0xe0c0, 0x6e6b, 0x2dfe, 0x0, 0x1);
        gbc.writeMem(0x2dfe, { 0xb8 });
        gbc.writeMem(0x73dc, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9f9);
        EXPECT(gbc.pc(), 0x73de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 019B
        gbc.setState(0x8f3, 0x5ee7, 0xa560, 0xe5ec, 0x4455, 0xbc8d, 0x1, 0x1);
        gbc.writeMem(0x8f3, { 0xcb, 0xb6 });
        gbc.writeMem(0xbc8d, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5ee7);
        EXPECT(gbc.pc(), 0x8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc8d), 0x33);
        // CB B6 019D
        gbc.setState(0xbcd0, 0x2a52, 0x6de0, 0x47b9, 0x1cc3, 0x6ae4, 0x0, 0x0);
        gbc.writeMem(0x6ae4, { 0x2f });
        gbc.writeMem(0xbcd0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2a52);
        EXPECT(gbc.pc(), 0xbcd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd0), 0xcb);
        EXPECT(gbc.readMem(0xbcd1), 0xb6);
        // CB B6 019E
        gbc.setState(0xc84, 0xc5d6, 0x6d90, 0xec55, 0x7df3, 0xd2b3, 0x1, 0x0);
        gbc.writeMem(0xc84, { 0xcb, 0xb6 });
        gbc.writeMem(0xd2b3, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc5d6);
        EXPECT(gbc.pc(), 0xc86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2b3), 0x31);
        // CB B6 019F
        gbc.setState(0x18d7, 0x789, 0xb0e0, 0x2b0f, 0xc3db, 0x98b, 0x0, 0x1);
        gbc.writeMem(0x98b, { 0x26 });
        gbc.writeMem(0x18d7, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x789);
        EXPECT(gbc.pc(), 0x18d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01A1
        gbc.setState(0xc574, 0x4464, 0x23f0, 0xf868, 0xc12e, 0x9b1a, 0x0, 0x0);
        gbc.writeMem(0x9b1a, { 0xa4 });
        gbc.writeMem(0xc574, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4464);
        EXPECT(gbc.pc(), 0xc576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1a), 0xa4);
        EXPECT(gbc.readMem(0xc574), 0xcb);
        EXPECT(gbc.readMem(0xc575), 0xb6);
        // CB B6 01A2
        gbc.setState(0x2123, 0xc290, 0x5b60, 0x8d3c, 0xa00a, 0x49f2, 0x0, 0x1);
        gbc.writeMem(0x2123, { 0xcb, 0xb6 });
        gbc.writeMem(0x49f2, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc290);
        EXPECT(gbc.pc(), 0x2125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01A3
        gbc.setState(0x803d, 0x9510, 0xf890, 0xd7a5, 0xf840, 0x3dbc, 0x0, 0x0);
        gbc.writeMem(0x3dbc, { 0x3 });
        gbc.writeMem(0x803d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9510);
        EXPECT(gbc.pc(), 0x803f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803d), 0xcb);
        EXPECT(gbc.readMem(0x803e), 0xb6);
        // CB B6 01A5
        gbc.setState(0x478, 0x1fc0, 0x7a00, 0xdd0c, 0x28cc, 0xbbe3, 0x0, 0x1);
        gbc.writeMem(0x478, { 0xcb, 0xb6 });
        gbc.writeMem(0xbbe3, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1fc0);
        EXPECT(gbc.pc(), 0x47a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe3), 0x27);
        // CB B6 01A6
        gbc.setState(0x7e74, 0xea2f, 0x7a60, 0xcb67, 0xe89b, 0x1e57, 0x0, 0x0);
        gbc.writeMem(0x1e57, { 0x27 });
        gbc.writeMem(0x7e74, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xea2f);
        EXPECT(gbc.pc(), 0x7e76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01A7
        gbc.setState(0xa97b, 0x7359, 0x8b20, 0x4135, 0x948b, 0xf76a, 0x1, 0x1);
        gbc.writeMem(0xa97b, { 0xcb, 0xb6 });
        gbc.writeMem(0xf76a, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7359);
        EXPECT(gbc.pc(), 0xa97d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97b), 0xcb);
        EXPECT(gbc.readMem(0xa97c), 0xb6);
        EXPECT(gbc.readMem(0xf76a), 0xad);
        // CB B6 01AA
        gbc.setState(0xded9, 0x9966, 0x8ac0, 0x52ff, 0xa121, 0xb4a6, 0x0, 0x0);
        gbc.writeMem(0xb4a6, { 0xe0 });
        gbc.writeMem(0xded9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9966);
        EXPECT(gbc.pc(), 0xdedb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4a6), 0xa0);
        EXPECT(gbc.readMem(0xded9), 0xcb);
        EXPECT(gbc.readMem(0xdeda), 0xb6);
        // CB B6 01AB
        gbc.setState(0xbb16, 0x31ac, 0x8df0, 0x34aa, 0x1035, 0x2744, 0x0, 0x0);
        gbc.writeMem(0x2744, { 0xa4 });
        gbc.writeMem(0xbb16, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x31ac);
        EXPECT(gbc.pc(), 0xbb18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb16), 0xcb);
        EXPECT(gbc.readMem(0xbb17), 0xb6);
        // CB B6 01AD
        gbc.setState(0x4ec2, 0xf50f, 0x6f50, 0x33d7, 0x670e, 0x4b7f, 0x0, 0x0);
        gbc.writeMem(0x4b7f, { 0xc });
        gbc.writeMem(0x4ec2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf50f);
        EXPECT(gbc.pc(), 0x4ec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 01AE
        gbc.setState(0x3c07, 0xac9c, 0xe120, 0x54c8, 0x336a, 0x7a02, 0x1, 0x1);
        gbc.writeMem(0x3c07, { 0xcb, 0xb6 });
        gbc.writeMem(0x7a02, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xac9c);
        EXPECT(gbc.pc(), 0x3c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01AF
        gbc.setState(0x5e9c, 0x1eb8, 0xfc70, 0x13fb, 0x2722, 0xee84, 0x1, 0x1);
        gbc.writeMem(0x5e9c, { 0xcb, 0xb6 });
        gbc.writeMem(0xee84, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1eb8);
        EXPECT(gbc.pc(), 0x5e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee84), 0x38);
        // CB B6 01B0
        gbc.setState(0x5c8a, 0x6f77, 0x7660, 0x301, 0x377f, 0x53ba, 0x1, 0x0);
        gbc.writeMem(0x53ba, { 0x3d });
        gbc.writeMem(0x5c8a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6f77);
        EXPECT(gbc.pc(), 0x5c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01B1
        gbc.setState(0x3d9b, 0xf250, 0xe500, 0xe591, 0x2c98, 0xcb06, 0x0, 0x0);
        gbc.writeMem(0x3d9b, { 0xcb, 0xb6 });
        gbc.writeMem(0xcb06, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf250);
        EXPECT(gbc.pc(), 0x3d9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb06), 0x90);
        // CB B6 01B2
        gbc.setState(0xb66f, 0x9b3a, 0xa360, 0xb1de, 0xc152, 0xd3db, 0x1, 0x0);
        gbc.writeMem(0xb66f, { 0xcb, 0xb6 });
        gbc.writeMem(0xd3db, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9b3a);
        EXPECT(gbc.pc(), 0xb671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb66f), 0xcb);
        EXPECT(gbc.readMem(0xb670), 0xb6);
        EXPECT(gbc.readMem(0xd3db), 0x98);
        // CB B6 01B4
        gbc.setState(0x8eb1, 0x2c4c, 0xef50, 0x28df, 0x26a, 0x3c68, 0x1, 0x0);
        gbc.writeMem(0x3c68, { 0xbb });
        gbc.writeMem(0x8eb1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2c4c);
        EXPECT(gbc.pc(), 0x8eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb1), 0xcb);
        EXPECT(gbc.readMem(0x8eb2), 0xb6);
        // CB B6 01B5
        gbc.setState(0xe6b6, 0x544f, 0xd6e0, 0x6a14, 0x791f, 0xf795, 0x1, 0x0);
        gbc.writeMem(0xe6b6, { 0xcb, 0xb6 });
        gbc.writeMem(0xf795, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x544f);
        EXPECT(gbc.pc(), 0xe6b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b6), 0xcb);
        EXPECT(gbc.readMem(0xe6b7), 0xb6);
        EXPECT(gbc.readMem(0xf795), 0x26);
        // CB B6 01B7
        gbc.setState(0xcba, 0xa21, 0x1fa0, 0xfaeb, 0xb53f, 0x4169, 0x0, 0x1);
        gbc.writeMem(0xcba, { 0xcb, 0xb6 });
        gbc.writeMem(0x4169, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa21);
        EXPECT(gbc.pc(), 0xcbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01B9
        gbc.setState(0xc111, 0x2772, 0x5f20, 0xb250, 0x3bff, 0x997c, 0x1, 0x0);
        gbc.writeMem(0x997c, { 0x1b });
        gbc.writeMem(0xc111, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2772);
        EXPECT(gbc.pc(), 0xc113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997c), 0x1b);
        EXPECT(gbc.readMem(0xc111), 0xcb);
        EXPECT(gbc.readMem(0xc112), 0xb6);
        // CB B6 01BC
        gbc.setState(0x3321, 0xac3, 0x8540, 0xf55f, 0xeca6, 0x8298, 0x1, 0x0);
        gbc.writeMem(0x3321, { 0xcb, 0xb6 });
        gbc.writeMem(0x8298, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xac3);
        EXPECT(gbc.pc(), 0x3323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8298), 0x5);
        // CB B6 01BD
        gbc.setState(0xc954, 0x5b16, 0xdfa0, 0x1ce, 0xcdb1, 0xaa5b, 0x1, 0x0);
        gbc.writeMem(0xaa5b, { 0xa0 });
        gbc.writeMem(0xc954, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5b16);
        EXPECT(gbc.pc(), 0xc956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa5b), 0xa0);
        EXPECT(gbc.readMem(0xc954), 0xcb);
        EXPECT(gbc.readMem(0xc955), 0xb6);
        // CB B6 01C0
        gbc.setState(0x442a, 0x8214, 0xc5d0, 0xcde4, 0xdcb, 0x99aa, 0x0, 0x1);
        gbc.writeMem(0x442a, { 0xcb, 0xb6 });
        gbc.writeMem(0x99aa, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8214);
        EXPECT(gbc.pc(), 0x442c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99aa), 0x3d);
        // CB B6 01C2
        gbc.setState(0x1e7f, 0x7431, 0x1b20, 0x4ff5, 0xf9e3, 0xa471, 0x0, 0x1);
        gbc.writeMem(0x1e7f, { 0xcb, 0xb6 });
        gbc.writeMem(0xa471, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7431);
        EXPECT(gbc.pc(), 0x1e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa471), 0x21);
        // CB B6 01C3
        gbc.setState(0xacb1, 0x8968, 0x8a00, 0xa732, 0x1e68, 0x2111, 0x0, 0x0);
        gbc.writeMem(0x2111, { 0x18 });
        gbc.writeMem(0xacb1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8968);
        EXPECT(gbc.pc(), 0xacb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacb1), 0xcb);
        EXPECT(gbc.readMem(0xacb2), 0xb6);
        // CB B6 01C4
        gbc.setState(0xa453, 0x20ca, 0xd660, 0xe775, 0x3c13, 0xd893, 0x1, 0x0);
        gbc.writeMem(0xa453, { 0xcb, 0xb6 });
        gbc.writeMem(0xd893, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x20ca);
        EXPECT(gbc.pc(), 0xa455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa453), 0xcb);
        EXPECT(gbc.readMem(0xa454), 0xb6);
        EXPECT(gbc.readMem(0xd893), 0x1e);
        // CB B6 01C5
        gbc.setState(0x5c38, 0xf535, 0x1130, 0x500c, 0xa00d, 0xe42f, 0x1, 0x1);
        gbc.writeMem(0x5c38, { 0xcb, 0xb6 });
        gbc.writeMem(0xe42f, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf535);
        EXPECT(gbc.pc(), 0x5c3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe42f), 0x1d);
        // CB B6 01C6
        gbc.setState(0xe580, 0x8354, 0xd1d0, 0x820e, 0xd605, 0x3db9, 0x1, 0x0);
        gbc.writeMem(0x3db9, { 0xb5 });
        gbc.writeMem(0xe580, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8354);
        EXPECT(gbc.pc(), 0xe582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe580), 0xcb);
        EXPECT(gbc.readMem(0xe581), 0xb6);
        // CB B6 01C8
        gbc.setState(0xdcb1, 0x1d02, 0x4840, 0xb1ef, 0xaa2f, 0x12a7, 0x1, 0x0);
        gbc.writeMem(0x12a7, { 0x84 });
        gbc.writeMem(0xdcb1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1d02);
        EXPECT(gbc.pc(), 0xdcb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb1), 0xcb);
        EXPECT(gbc.readMem(0xdcb2), 0xb6);
        // CB B6 01CC
        gbc.setState(0x68d2, 0xbb77, 0x38a0, 0xa22e, 0x1155, 0x37fa, 0x0, 0x1);
        gbc.writeMem(0x37fa, { 0xad });
        gbc.writeMem(0x68d2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xbb77);
        EXPECT(gbc.pc(), 0x68d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01CD
        gbc.setState(0x360e, 0xede3, 0x8c30, 0xe832, 0x6742, 0xfc0d, 0x1, 0x1);
        gbc.writeMem(0x360e, { 0xcb, 0xb6 });
        gbc.writeMem(0xfc0d, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xede3);
        EXPECT(gbc.pc(), 0x3610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc0d), 0xae);
        // CB B6 01CF
        gbc.setState(0xc4f8, 0x4f96, 0x7bd0, 0x408e, 0xe45e, 0xd74c, 0x1, 0x1);
        gbc.writeMem(0xc4f8, { 0xcb, 0xb6 });
        gbc.writeMem(0xd74c, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4f96);
        EXPECT(gbc.pc(), 0xc4fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4f8), 0xcb);
        EXPECT(gbc.readMem(0xc4f9), 0xb6);
        EXPECT(gbc.readMem(0xd74c), 0xa7);
        // CB B6 01D0
        gbc.setState(0xcecc, 0x6d71, 0x2fd0, 0x92dc, 0xdda0, 0xbc9d, 0x1, 0x1);
        gbc.writeMem(0xbc9d, { 0x8 });
        gbc.writeMem(0xcecc, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6d71);
        EXPECT(gbc.pc(), 0xcece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc9d), 0x8);
        EXPECT(gbc.readMem(0xcecc), 0xcb);
        EXPECT(gbc.readMem(0xcecd), 0xb6);
        // CB B6 01D1
        gbc.setState(0xddab, 0x8703, 0xcb90, 0x87b5, 0x16a0, 0xe6c1, 0x1, 0x1);
        gbc.writeMem(0xddab, { 0xcb, 0xb6 });
        gbc.writeMem(0xe6c1, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8703);
        EXPECT(gbc.pc(), 0xddad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddab), 0xcb);
        EXPECT(gbc.readMem(0xddac), 0xb6);
        EXPECT(gbc.readMem(0xe6c1), 0x34);
        // CB B6 01D2
        gbc.setState(0xb8e5, 0xeb7, 0xd180, 0x9b78, 0x754, 0x55c0, 0x1, 0x0);
        gbc.writeMem(0x55c0, { 0x86 });
        gbc.writeMem(0xb8e5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xeb7);
        EXPECT(gbc.pc(), 0xb8e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8e5), 0xcb);
        EXPECT(gbc.readMem(0xb8e6), 0xb6);
        // CB B6 01D3
        gbc.setState(0xda8d, 0x246, 0x70f0, 0xfc7e, 0xe21c, 0x5933, 0x0, 0x1);
        gbc.writeMem(0x5933, { 0x16 });
        gbc.writeMem(0xda8d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x246);
        EXPECT(gbc.pc(), 0xda8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda8d), 0xcb);
        EXPECT(gbc.readMem(0xda8e), 0xb6);
        // CB B6 01D4
        gbc.setState(0xbe11, 0x8581, 0x94a0, 0x15ac, 0x6f8c, 0xa6f8, 0x1, 0x0);
        gbc.writeMem(0xa6f8, { 0x9f });
        gbc.writeMem(0xbe11, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8581);
        EXPECT(gbc.pc(), 0xbe13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f8), 0x9f);
        EXPECT(gbc.readMem(0xbe11), 0xcb);
        EXPECT(gbc.readMem(0xbe12), 0xb6);
        // CB B6 01D5
        gbc.setState(0xc3a6, 0xbc2d, 0xb820, 0x3ee1, 0xf9d5, 0x7229, 0x1, 0x1);
        gbc.writeMem(0x7229, { 0x8 });
        gbc.writeMem(0xc3a6, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbc2d);
        EXPECT(gbc.pc(), 0xc3a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a6), 0xcb);
        EXPECT(gbc.readMem(0xc3a7), 0xb6);
        // CB B6 01D6
        gbc.setState(0xb333, 0x8775, 0xe7e0, 0xf49d, 0x168e, 0xcea8, 0x0, 0x0);
        gbc.writeMem(0xb333, { 0xcb, 0xb6 });
        gbc.writeMem(0xcea8, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8775);
        EXPECT(gbc.pc(), 0xb335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb333), 0xcb);
        EXPECT(gbc.readMem(0xb334), 0xb6);
        EXPECT(gbc.readMem(0xcea8), 0xb);
        // CB B6 01D7
        gbc.setState(0x69b8, 0x95fc, 0x21e0, 0x4491, 0x6b52, 0x9dab, 0x1, 0x0);
        gbc.writeMem(0x69b8, { 0xcb, 0xb6 });
        gbc.writeMem(0x9dab, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x95fc);
        EXPECT(gbc.pc(), 0x69ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dab), 0x8e);
        // CB B6 01D8
        gbc.setState(0xdf5e, 0x76fa, 0xdb50, 0xe40f, 0x8ec6, 0xdccd, 0x1, 0x1);
        gbc.writeMem(0xdccd, { 0x36 });
        gbc.writeMem(0xdf5e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x76fa);
        EXPECT(gbc.pc(), 0xdf60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdccd), 0x36);
        EXPECT(gbc.readMem(0xdf5e), 0xcb);
        EXPECT(gbc.readMem(0xdf5f), 0xb6);
        // CB B6 01DA
        gbc.setState(0xd4a4, 0x922a, 0x98a0, 0x2eb1, 0xfc34, 0x2d28, 0x1, 0x0);
        gbc.writeMem(0x2d28, { 0x91 });
        gbc.writeMem(0xd4a4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x922a);
        EXPECT(gbc.pc(), 0xd4a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a4), 0xcb);
        EXPECT(gbc.readMem(0xd4a5), 0xb6);
        // CB B6 01DB
        gbc.setState(0x9e9e, 0x788d, 0xfbd0, 0x762a, 0x4f86, 0xf040, 0x1, 0x0);
        gbc.writeMem(0x9e9e, { 0xcb, 0xb6 });
        gbc.writeMem(0xf040, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x788d);
        EXPECT(gbc.pc(), 0x9ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9e), 0xcb);
        EXPECT(gbc.readMem(0x9e9f), 0xb6);
        EXPECT(gbc.readMem(0xf040), 0x34);
        // CB B6 01DC
        gbc.setState(0x1a52, 0x8ec5, 0x5fc0, 0x245c, 0x1a2, 0xb823, 0x1, 0x1);
        gbc.writeMem(0x1a52, { 0xcb, 0xb6 });
        gbc.writeMem(0xb823, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8ec5);
        EXPECT(gbc.pc(), 0x1a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb823), 0x38);
        // CB B6 01DD
        gbc.setState(0x36e0, 0x9ad4, 0x3ca0, 0xd2fd, 0xe016, 0x4dcd, 0x0, 0x1);
        gbc.writeMem(0x36e0, { 0xcb, 0xb6 });
        gbc.writeMem(0x4dcd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9ad4);
        EXPECT(gbc.pc(), 0x36e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01DF
        gbc.setState(0xbd22, 0xe927, 0xf3d0, 0xd600, 0xac5d, 0x8534, 0x0, 0x0);
        gbc.writeMem(0x8534, { 0x38 });
        gbc.writeMem(0xbd22, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe927);
        EXPECT(gbc.pc(), 0xbd24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8534), 0x38);
        EXPECT(gbc.readMem(0xbd22), 0xcb);
        EXPECT(gbc.readMem(0xbd23), 0xb6);
        // CB B6 01E0
        gbc.setState(0x27ea, 0x9b9, 0xa620, 0x25c4, 0xd671, 0xa30, 0x0, 0x0);
        gbc.writeMem(0xa30, { 0x4 });
        gbc.writeMem(0x27ea, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9b9);
        EXPECT(gbc.pc(), 0x27ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01E1
        gbc.setState(0x97c2, 0x6853, 0xe7a0, 0x6988, 0xb441, 0x25eb, 0x1, 0x1);
        gbc.writeMem(0x25eb, { 0x98 });
        gbc.writeMem(0x97c2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6853);
        EXPECT(gbc.pc(), 0x97c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97c2), 0xcb);
        EXPECT(gbc.readMem(0x97c3), 0xb6);
        // CB B6 01E2
        gbc.setState(0x13ae, 0xbff2, 0x4820, 0xb089, 0x3ef2, 0x5585, 0x1, 0x0);
        gbc.writeMem(0x13ae, { 0xcb, 0xb6 });
        gbc.writeMem(0x5585, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xbff2);
        EXPECT(gbc.pc(), 0x13b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01E5
        gbc.setState(0xad57, 0x4236, 0x6360, 0xdf1e, 0x303, 0x8083, 0x1, 0x0);
        gbc.writeMem(0x8083, { 0xb5 });
        gbc.writeMem(0xad57, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4236);
        EXPECT(gbc.pc(), 0xad59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8083), 0xb5);
        EXPECT(gbc.readMem(0xad57), 0xcb);
        EXPECT(gbc.readMem(0xad58), 0xb6);
        // CB B6 01E6
        gbc.setState(0x4559, 0x7379, 0x6bd0, 0xc71c, 0xd3b9, 0xdd19, 0x0, 0x1);
        gbc.writeMem(0x4559, { 0xcb, 0xb6 });
        gbc.writeMem(0xdd19, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7379);
        EXPECT(gbc.pc(), 0x455b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd19), 0x4);
        // CB B6 01E7
        gbc.setState(0xac84, 0x80b, 0xff30, 0xb447, 0x1a48, 0x3a9f, 0x1, 0x0);
        gbc.writeMem(0x3a9f, { 0x3f });
        gbc.writeMem(0xac84, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x80b);
        EXPECT(gbc.pc(), 0xac86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac84), 0xcb);
        EXPECT(gbc.readMem(0xac85), 0xb6);
        // CB B6 01E8
        gbc.setState(0x9f7b, 0xf3db, 0xb890, 0x228a, 0xc32c, 0x9f4b, 0x0, 0x0);
        gbc.writeMem(0x9f4b, { 0x4 });
        gbc.writeMem(0x9f7b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf3db);
        EXPECT(gbc.pc(), 0x9f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f4b), 0x4);
        EXPECT(gbc.readMem(0x9f7b), 0xcb);
        EXPECT(gbc.readMem(0x9f7c), 0xb6);
        // CB B6 01E9
        gbc.setState(0x3294, 0x2b20, 0xe1f0, 0xefdd, 0x76f5, 0xd752, 0x0, 0x0);
        gbc.writeMem(0x3294, { 0xcb, 0xb6 });
        gbc.writeMem(0xd752, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2b20);
        EXPECT(gbc.pc(), 0x3296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd752), 0x9e);
        // CB B6 01EA
        gbc.setState(0x4641, 0x47ee, 0xc720, 0xf60f, 0x56fc, 0x89a3, 0x1, 0x1);
        gbc.writeMem(0x4641, { 0xcb, 0xb6 });
        gbc.writeMem(0x89a3, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x47ee);
        EXPECT(gbc.pc(), 0x4643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a3), 0x8);
        // CB B6 01EB
        gbc.setState(0xdb91, 0x626d, 0x5ba0, 0x18a5, 0x1b5b, 0xe0b8, 0x0, 0x1);
        gbc.writeMem(0xdb91, { 0xcb, 0xb6 });
        gbc.writeMem(0xe0b8, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x626d);
        EXPECT(gbc.pc(), 0xdb93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb91), 0xcb);
        EXPECT(gbc.readMem(0xdb92), 0xb6);
        EXPECT(gbc.readMem(0xe0b8), 0xa9);
        // CB B6 01EF
        gbc.setState(0x429e, 0x88a9, 0xe0, 0x392b, 0x7df0, 0xa2b6, 0x1, 0x0);
        gbc.writeMem(0x429e, { 0xcb, 0xb6 });
        gbc.writeMem(0xa2b6, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x88a9);
        EXPECT(gbc.pc(), 0x42a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b6), 0x3f);
        // CB B6 01F0
        gbc.setState(0x2f6c, 0xa7a7, 0xac30, 0xe347, 0x692e, 0xe84e, 0x0, 0x1);
        gbc.writeMem(0x2f6c, { 0xcb, 0xb6 });
        gbc.writeMem(0xe84e, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa7a7);
        EXPECT(gbc.pc(), 0x2f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe84e), 0x94);
        // CB B6 01F1
        gbc.setState(0x4e1d, 0x4559, 0x9930, 0x2401, 0xf408, 0x385f, 0x0, 0x1);
        gbc.writeMem(0x385f, { 0x20 });
        gbc.writeMem(0x4e1d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4559);
        EXPECT(gbc.pc(), 0x4e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 01F2
        gbc.setState(0xa9d4, 0x9617, 0xb2c0, 0xe744, 0x48d, 0xe1c2, 0x1, 0x1);
        gbc.writeMem(0xa9d4, { 0xcb, 0xb6 });
        gbc.writeMem(0xe1c2, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9617);
        EXPECT(gbc.pc(), 0xa9d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9d4), 0xcb);
        EXPECT(gbc.readMem(0xa9d5), 0xb6);
        EXPECT(gbc.readMem(0xe1c2), 0xb2);
        // CB B6 01F3
        gbc.setState(0x8430, 0xf2ba, 0x670, 0xda0b, 0xe6ef, 0xa25d, 0x1, 0x1);
        gbc.writeMem(0x8430, { 0xcb, 0xb6 });
        gbc.writeMem(0xa25d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf2ba);
        EXPECT(gbc.pc(), 0x8432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8430), 0xcb);
        EXPECT(gbc.readMem(0x8431), 0xb6);
        EXPECT(gbc.readMem(0xa25d), 0x96);
        // CB B6 01F4
        gbc.setState(0x9d24, 0x2494, 0x2670, 0xe995, 0x5e30, 0x9793, 0x1, 0x1);
        gbc.writeMem(0x9793, { 0x39 });
        gbc.writeMem(0x9d24, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2494);
        EXPECT(gbc.pc(), 0x9d26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9793), 0x39);
        EXPECT(gbc.readMem(0x9d24), 0xcb);
        EXPECT(gbc.readMem(0x9d25), 0xb6);
        // CB B6 01F5
        gbc.setState(0x1d88, 0x43c3, 0xc240, 0x63be, 0x2ab8, 0x1b89, 0x1, 0x1);
        gbc.writeMem(0x1b89, { 0xb });
        gbc.writeMem(0x1d88, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x43c3);
        EXPECT(gbc.pc(), 0x1d8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01F6
        gbc.setState(0x54c8, 0xb6d0, 0xeb80, 0xd2e, 0xe429, 0xc426, 0x1, 0x0);
        gbc.writeMem(0x54c8, { 0xcb, 0xb6 });
        gbc.writeMem(0xc426, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb6d0);
        EXPECT(gbc.pc(), 0x54ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc426), 0x3);
        // CB B6 01F7
        gbc.setState(0xe798, 0xd4d0, 0xd4d0, 0x437, 0x782, 0x1e73, 0x0, 0x0);
        gbc.writeMem(0x1e73, { 0x3 });
        gbc.writeMem(0xe798, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd4d0);
        EXPECT(gbc.pc(), 0xe79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe798), 0xcb);
        EXPECT(gbc.readMem(0xe799), 0xb6);
        // CB B6 01F8
        gbc.setState(0xd1b3, 0x76d4, 0xb040, 0x8e25, 0xa5b2, 0xbc1b, 0x0, 0x0);
        gbc.writeMem(0xbc1b, { 0xfa });
        gbc.writeMem(0xd1b3, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x76d4);
        EXPECT(gbc.pc(), 0xd1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc1b), 0xba);
        EXPECT(gbc.readMem(0xd1b3), 0xcb);
        EXPECT(gbc.readMem(0xd1b4), 0xb6);
        // CB B6 01F9
        gbc.setState(0xb1d1, 0xaf78, 0x130, 0xe37e, 0x96ab, 0x929b, 0x0, 0x0);
        gbc.writeMem(0x929b, { 0xe8 });
        gbc.writeMem(0xb1d1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xaf78);
        EXPECT(gbc.pc(), 0xb1d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x929b), 0xa8);
        EXPECT(gbc.readMem(0xb1d1), 0xcb);
        EXPECT(gbc.readMem(0xb1d2), 0xb6);
        // CB B6 01FA
        gbc.setState(0x2739, 0x2e95, 0x2240, 0x5b72, 0xcb7c, 0x3de9, 0x0, 0x1);
        gbc.writeMem(0x2739, { 0xcb, 0xb6 });
        gbc.writeMem(0x3de9, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2e95);
        EXPECT(gbc.pc(), 0x273b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01FB
        gbc.setState(0x30b9, 0x9129, 0x28b0, 0x6363, 0x5a67, 0xf519, 0x1, 0x0);
        gbc.writeMem(0x30b9, { 0xcb, 0xb6 });
        gbc.writeMem(0xf519, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9129);
        EXPECT(gbc.pc(), 0x30bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf519), 0xbb);
        // CB B6 01FC
        gbc.setState(0x61c5, 0xf5ad, 0x8680, 0xef94, 0x2b44, 0x7969, 0x1, 0x1);
        gbc.writeMem(0x61c5, { 0xcb, 0xb6 });
        gbc.writeMem(0x7969, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf5ad);
        EXPECT(gbc.pc(), 0x61c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 01FD
        gbc.setState(0x86fd, 0x5817, 0xb6b0, 0x4ef2, 0xbf85, 0xda86, 0x0, 0x1);
        gbc.writeMem(0x86fd, { 0xcb, 0xb6 });
        gbc.writeMem(0xda86, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5817);
        EXPECT(gbc.pc(), 0x86ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fd), 0xcb);
        EXPECT(gbc.readMem(0x86fe), 0xb6);
        EXPECT(gbc.readMem(0xda86), 0x37);
        // CB B6 01FE
        gbc.setState(0x59c8, 0x234f, 0x64f0, 0xd039, 0xc820, 0x1842, 0x1, 0x1);
        gbc.writeMem(0x1842, { 0xb0 });
        gbc.writeMem(0x59c8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x234f);
        EXPECT(gbc.pc(), 0x59ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 01FF
        gbc.setState(0x3a33, 0x674, 0x70f0, 0x61a3, 0xb947, 0xf744, 0x1, 0x0);
        gbc.writeMem(0x3a33, { 0xcb, 0xb6 });
        gbc.writeMem(0xf744, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x674);
        EXPECT(gbc.pc(), 0x3a35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf744), 0xa4);
        // CB B6 0200
        gbc.setState(0x7f60, 0x3bef, 0xafa0, 0xd632, 0xafc, 0x6c8a, 0x0, 0x0);
        gbc.writeMem(0x6c8a, { 0x89 });
        gbc.writeMem(0x7f60, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3bef);
        EXPECT(gbc.pc(), 0x7f62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0201
        gbc.setState(0xeb45, 0x3f94, 0x1f80, 0x1d46, 0x64b3, 0x4ef2, 0x0, 0x1);
        gbc.writeMem(0x4ef2, { 0x10 });
        gbc.writeMem(0xeb45, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3f94);
        EXPECT(gbc.pc(), 0xeb47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb45), 0xcb);
        EXPECT(gbc.readMem(0xeb46), 0xb6);
        // CB B6 0202
        gbc.setState(0x2b2d, 0x2249, 0xa9a0, 0x266d, 0x681c, 0x74da, 0x1, 0x1);
        gbc.writeMem(0x2b2d, { 0xcb, 0xb6 });
        gbc.writeMem(0x74da, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2249);
        EXPECT(gbc.pc(), 0x2b2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0203
        gbc.setState(0x7c4c, 0xb324, 0x4100, 0x2c68, 0x6b05, 0x8531, 0x0, 0x0);
        gbc.writeMem(0x7c4c, { 0xcb, 0xb6 });
        gbc.writeMem(0x8531, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb324);
        EXPECT(gbc.pc(), 0x7c4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8531), 0x22);
        // CB B6 0205
        gbc.setState(0x6bbd, 0x393, 0xfce0, 0xcb50, 0x3864, 0xebc, 0x1, 0x1);
        gbc.writeMem(0xebc, { 0x6 });
        gbc.writeMem(0x6bbd, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x393);
        EXPECT(gbc.pc(), 0x6bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0206
        gbc.setState(0x89e9, 0xe7a5, 0xca80, 0xbb47, 0x8f0f, 0xf4c6, 0x1, 0x1);
        gbc.writeMem(0x89e9, { 0xcb, 0xb6 });
        gbc.writeMem(0xf4c6, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe7a5);
        EXPECT(gbc.pc(), 0x89eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e9), 0xcb);
        EXPECT(gbc.readMem(0x89ea), 0xb6);
        EXPECT(gbc.readMem(0xf4c6), 0x7);
        // CB B6 020A
        gbc.setState(0xd0e5, 0x3b77, 0x7850, 0xd8d9, 0xa3b6, 0x8eac, 0x1, 0x0);
        gbc.writeMem(0x8eac, { 0xcc });
        gbc.writeMem(0xd0e5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3b77);
        EXPECT(gbc.pc(), 0xd0e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eac), 0x8c);
        EXPECT(gbc.readMem(0xd0e5), 0xcb);
        EXPECT(gbc.readMem(0xd0e6), 0xb6);
        // CB B6 020B
        gbc.setState(0xe54b, 0x3e35, 0x78e0, 0x23b2, 0xd999, 0xf46f, 0x0, 0x1);
        gbc.writeMem(0xe54b, { 0xcb, 0xb6 });
        gbc.writeMem(0xf46f, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3e35);
        EXPECT(gbc.pc(), 0xe54d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe54b), 0xcb);
        EXPECT(gbc.readMem(0xe54c), 0xb6);
        EXPECT(gbc.readMem(0xf46f), 0xb4);
        // CB B6 020C
        gbc.setState(0x7cfb, 0x4dea, 0x4320, 0x59fd, 0x4b5c, 0xfe3, 0x0, 0x1);
        gbc.writeMem(0xfe3, { 0xbe });
        gbc.writeMem(0x7cfb, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4dea);
        EXPECT(gbc.pc(), 0x7cfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 020D
        gbc.setState(0xe260, 0x32c6, 0x9070, 0x35b8, 0x9b97, 0x9e15, 0x1, 0x0);
        gbc.writeMem(0x9e15, { 0x60 });
        gbc.writeMem(0xe260, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x32c6);
        EXPECT(gbc.pc(), 0xe262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e15), 0x20);
        EXPECT(gbc.readMem(0xe260), 0xcb);
        EXPECT(gbc.readMem(0xe261), 0xb6);
        // CB B6 020E
        gbc.setState(0x689c, 0x3483, 0x4240, 0x4ad5, 0xc106, 0x9007, 0x1, 0x0);
        gbc.writeMem(0x689c, { 0xcb, 0xb6 });
        gbc.writeMem(0x9007, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3483);
        EXPECT(gbc.pc(), 0x689e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9007), 0x80);
        // CB B6 020F
        gbc.setState(0x79da, 0xbd11, 0xc6f0, 0xcc10, 0xf7da, 0x6d13, 0x1, 0x1);
        gbc.writeMem(0x6d13, { 0x8d });
        gbc.writeMem(0x79da, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbd11);
        EXPECT(gbc.pc(), 0x79dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0210
        gbc.setState(0xbfcf, 0x20f6, 0x9090, 0xd3e3, 0x35f3, 0xcf1d, 0x0, 0x0);
        gbc.writeMem(0xbfcf, { 0xcb, 0xb6 });
        gbc.writeMem(0xcf1d, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x20f6);
        EXPECT(gbc.pc(), 0xbfd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfcf), 0xcb);
        EXPECT(gbc.readMem(0xbfd0), 0xb6);
        EXPECT(gbc.readMem(0xcf1d), 0x7);
        // CB B6 0211
        gbc.setState(0x9484, 0x43c8, 0x5d0, 0x55d6, 0x8ba5, 0xd236, 0x0, 0x1);
        gbc.writeMem(0x9484, { 0xcb, 0xb6 });
        gbc.writeMem(0xd236, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x43c8);
        EXPECT(gbc.pc(), 0x9486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9484), 0xcb);
        EXPECT(gbc.readMem(0x9485), 0xb6);
        EXPECT(gbc.readMem(0xd236), 0x6);
        // CB B6 0213
        gbc.setState(0x9595, 0x59c6, 0x12b0, 0x6fe0, 0x56ab, 0x8034, 0x1, 0x0);
        gbc.writeMem(0x8034, { 0x44 });
        gbc.writeMem(0x9595, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x59c6);
        EXPECT(gbc.pc(), 0x9597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8034), 0x4);
        EXPECT(gbc.readMem(0x9595), 0xcb);
        EXPECT(gbc.readMem(0x9596), 0xb6);
        // CB B6 0214
        gbc.setState(0xe857, 0x895c, 0xa910, 0x9a86, 0xd67b, 0x5bc6, 0x1, 0x0);
        gbc.writeMem(0x5bc6, { 0x5 });
        gbc.writeMem(0xe857, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x895c);
        EXPECT(gbc.pc(), 0xe859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe857), 0xcb);
        EXPECT(gbc.readMem(0xe858), 0xb6);
        // CB B6 0215
        gbc.setState(0xc305, 0xa302, 0x1270, 0x1d27, 0xa25a, 0x83ff, 0x1, 0x1);
        gbc.writeMem(0x83ff, { 0x2a });
        gbc.writeMem(0xc305, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa302);
        EXPECT(gbc.pc(), 0xc307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ff), 0x2a);
        EXPECT(gbc.readMem(0xc305), 0xcb);
        EXPECT(gbc.readMem(0xc306), 0xb6);
        // CB B6 0216
        gbc.setState(0x9ddf, 0x1ea1, 0x6220, 0xbb28, 0xe9d0, 0x2c6e, 0x0, 0x0);
        gbc.writeMem(0x2c6e, { 0x12 });
        gbc.writeMem(0x9ddf, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1ea1);
        EXPECT(gbc.pc(), 0x9de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ddf), 0xcb);
        EXPECT(gbc.readMem(0x9de0), 0xb6);
        // CB B6 0217
        gbc.setState(0x33fa, 0x2a4c, 0xb450, 0x6ca1, 0x489, 0xf286, 0x0, 0x0);
        gbc.writeMem(0x33fa, { 0xcb, 0xb6 });
        gbc.writeMem(0xf286, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2a4c);
        EXPECT(gbc.pc(), 0x33fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf286), 0x94);
        // CB B6 0218
        gbc.setState(0x895d, 0xc041, 0xf370, 0x3456, 0xaf55, 0xabab, 0x1, 0x0);
        gbc.writeMem(0x895d, { 0xcb, 0xb6 });
        gbc.writeMem(0xabab, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc041);
        EXPECT(gbc.pc(), 0x895f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x895d), 0xcb);
        EXPECT(gbc.readMem(0x895e), 0xb6);
        EXPECT(gbc.readMem(0xabab), 0x98);
        // CB B6 021B
        gbc.setState(0xd08a, 0xdd31, 0xb250, 0xb336, 0x5fa6, 0x2b84, 0x0, 0x1);
        gbc.writeMem(0x2b84, { 0x3f });
        gbc.writeMem(0xd08a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xdd31);
        EXPECT(gbc.pc(), 0xd08c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd08a), 0xcb);
        EXPECT(gbc.readMem(0xd08b), 0xb6);
        // CB B6 021C
        gbc.setState(0x21ff, 0xdbb4, 0x3720, 0x3d12, 0xd1f5, 0x1779, 0x0, 0x0);
        gbc.writeMem(0x1779, { 0x15 });
        gbc.writeMem(0x21ff, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdbb4);
        EXPECT(gbc.pc(), 0x2201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 021E
        gbc.setState(0xa778, 0xdbb2, 0xc080, 0x7456, 0x77ec, 0xd3bd, 0x0, 0x1);
        gbc.writeMem(0xa778, { 0xcb, 0xb6 });
        gbc.writeMem(0xd3bd, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdbb2);
        EXPECT(gbc.pc(), 0xa77a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa778), 0xcb);
        EXPECT(gbc.readMem(0xa779), 0xb6);
        EXPECT(gbc.readMem(0xd3bd), 0x16);
        // CB B6 021F
        gbc.setState(0x3d1, 0x7fb3, 0x5330, 0x709f, 0xd535, 0xa405, 0x1, 0x1);
        gbc.writeMem(0x3d1, { 0xcb, 0xb6 });
        gbc.writeMem(0xa405, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7fb3);
        EXPECT(gbc.pc(), 0x3d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa405), 0x16);
        // CB B6 0220
        gbc.setState(0xc3d8, 0x3c20, 0x4e0, 0x9962, 0x22e4, 0x2e04, 0x0, 0x1);
        gbc.writeMem(0x2e04, { 0x4 });
        gbc.writeMem(0xc3d8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3c20);
        EXPECT(gbc.pc(), 0xc3da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d8), 0xcb);
        EXPECT(gbc.readMem(0xc3d9), 0xb6);
        // CB B6 0221
        gbc.setState(0x3d2a, 0x7669, 0xbf10, 0xbc82, 0x89af, 0xb0d, 0x0, 0x0);
        gbc.writeMem(0xb0d, { 0x12 });
        gbc.writeMem(0x3d2a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7669);
        EXPECT(gbc.pc(), 0x3d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0224
        gbc.setState(0xc6f8, 0x4632, 0x5fa0, 0xdc13, 0x5f5b, 0x9269, 0x1, 0x0);
        gbc.writeMem(0x9269, { 0x1b });
        gbc.writeMem(0xc6f8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4632);
        EXPECT(gbc.pc(), 0xc6fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9269), 0x1b);
        EXPECT(gbc.readMem(0xc6f8), 0xcb);
        EXPECT(gbc.readMem(0xc6f9), 0xb6);
        // CB B6 0225
        gbc.setState(0xa7ae, 0xdc10, 0xfe30, 0x845e, 0xd3fd, 0x156e, 0x1, 0x1);
        gbc.writeMem(0x156e, { 0xa9 });
        gbc.writeMem(0xa7ae, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdc10);
        EXPECT(gbc.pc(), 0xa7b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ae), 0xcb);
        EXPECT(gbc.readMem(0xa7af), 0xb6);
        // CB B6 0227
        gbc.setState(0x7422, 0xe556, 0xd6e0, 0xb352, 0x611d, 0x7f76, 0x0, 0x0);
        gbc.writeMem(0x7422, { 0xcb, 0xb6 });
        gbc.writeMem(0x7f76, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe556);
        EXPECT(gbc.pc(), 0x7424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0229
        gbc.setState(0xb4ff, 0x118f, 0x1f70, 0xa0b7, 0x9518, 0x8ae4, 0x0, 0x1);
        gbc.writeMem(0x8ae4, { 0x2c });
        gbc.writeMem(0xb4ff, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x118f);
        EXPECT(gbc.pc(), 0xb501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae4), 0x2c);
        EXPECT(gbc.readMem(0xb4ff), 0xcb);
        EXPECT(gbc.readMem(0xb500), 0xb6);
        // CB B6 022A
        gbc.setState(0x6924, 0xa3f4, 0xa800, 0xac5c, 0xab2c, 0xef28, 0x0, 0x1);
        gbc.writeMem(0x6924, { 0xcb, 0xb6 });
        gbc.writeMem(0xef28, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa3f4);
        EXPECT(gbc.pc(), 0x6926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef28), 0xac);
        // CB B6 022B
        gbc.setState(0x400f, 0x54d9, 0x67b0, 0xdf87, 0x493d, 0x2038, 0x0, 0x1);
        gbc.writeMem(0x2038, { 0xa6 });
        gbc.writeMem(0x400f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x54d9);
        EXPECT(gbc.pc(), 0x4011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 022C
        gbc.setState(0x3a11, 0x9600, 0x9af0, 0xcbff, 0x8025, 0xfe91, 0x0, 0x1);
        gbc.writeMem(0x3a11, { 0xcb, 0xb6 });
        gbc.writeMem(0xfe91, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9600);
        EXPECT(gbc.pc(), 0x3a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe91), 0x10);
        // CB B6 022D
        gbc.setState(0x6826, 0x7c79, 0x64b0, 0x7352, 0xb73e, 0x2f84, 0x0, 0x1);
        gbc.writeMem(0x2f84, { 0x98 });
        gbc.writeMem(0x6826, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7c79);
        EXPECT(gbc.pc(), 0x6828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 022E
        gbc.setState(0x4d17, 0x8c49, 0xcda0, 0xd0ed, 0x6782, 0xd964, 0x1, 0x0);
        gbc.writeMem(0x4d17, { 0xcb, 0xb6 });
        gbc.writeMem(0xd964, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8c49);
        EXPECT(gbc.pc(), 0x4d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd964), 0x2a);
        // CB B6 022F
        gbc.setState(0x69f1, 0x2d71, 0xf260, 0x5060, 0x6c3b, 0xd867, 0x1, 0x1);
        gbc.writeMem(0x69f1, { 0xcb, 0xb6 });
        gbc.writeMem(0xd867, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2d71);
        EXPECT(gbc.pc(), 0x69f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd867), 0x81);
        // CB B6 0230
        gbc.setState(0xbae0, 0x640e, 0x7920, 0x6dd3, 0x37ec, 0xbb32, 0x1, 0x0);
        gbc.writeMem(0xbae0, { 0xcb, 0xb6 });
        gbc.writeMem(0xbb32, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x640e);
        EXPECT(gbc.pc(), 0xbae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbae0), 0xcb);
        EXPECT(gbc.readMem(0xbae1), 0xb6);
        EXPECT(gbc.readMem(0xbb32), 0xa3);
        // CB B6 0231
        gbc.setState(0xa778, 0x5c72, 0x52e0, 0xcec1, 0xa1d7, 0xba1f, 0x0, 0x0);
        gbc.writeMem(0xa778, { 0xcb, 0xb6 });
        gbc.writeMem(0xba1f, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5c72);
        EXPECT(gbc.pc(), 0xa77a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa778), 0xcb);
        EXPECT(gbc.readMem(0xa779), 0xb6);
        EXPECT(gbc.readMem(0xba1f), 0xd);
        // CB B6 0233
        gbc.setState(0x37a4, 0xa113, 0xa970, 0xab4d, 0x1343, 0xac97, 0x0, 0x1);
        gbc.writeMem(0x37a4, { 0xcb, 0xb6 });
        gbc.writeMem(0xac97, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa113);
        EXPECT(gbc.pc(), 0x37a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac97), 0x3b);
        // CB B6 0235
        gbc.setState(0xee68, 0xf250, 0xb950, 0xe95d, 0x86bc, 0x2845, 0x0, 0x0);
        gbc.writeMem(0x2845, { 0x9e });
        gbc.writeMem(0xee68, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf250);
        EXPECT(gbc.pc(), 0xee6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee68), 0xcb);
        EXPECT(gbc.readMem(0xee69), 0xb6);
        // CB B6 0238
        gbc.setState(0xd81f, 0x2b77, 0xf6c0, 0x419e, 0x594e, 0xc2b5, 0x0, 0x0);
        gbc.writeMem(0xc2b5, { 0x58 });
        gbc.writeMem(0xd81f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2b77);
        EXPECT(gbc.pc(), 0xd821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b5), 0x18);
        EXPECT(gbc.readMem(0xd81f), 0xcb);
        EXPECT(gbc.readMem(0xd820), 0xb6);
        // CB B6 0239
        gbc.setState(0x2c8b, 0x9f22, 0x8d80, 0x25b1, 0x9deb, 0xd72a, 0x1, 0x1);
        gbc.writeMem(0x2c8b, { 0xcb, 0xb6 });
        gbc.writeMem(0xd72a, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9f22);
        EXPECT(gbc.pc(), 0x2c8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd72a), 0x8f);
        // CB B6 023A
        gbc.setState(0x9f90, 0x3e7, 0xdeb0, 0xdf09, 0xc1, 0xc9d4, 0x0, 0x0);
        gbc.writeMem(0x9f90, { 0xcb, 0xb6 });
        gbc.writeMem(0xc9d4, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3e7);
        EXPECT(gbc.pc(), 0x9f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f90), 0xcb);
        EXPECT(gbc.readMem(0x9f91), 0xb6);
        EXPECT(gbc.readMem(0xc9d4), 0x84);
        // CB B6 023C
        gbc.setState(0xbe4e, 0x7507, 0x2cf0, 0x6c8f, 0x36eb, 0x464c, 0x1, 0x0);
        gbc.writeMem(0x464c, { 0x2a });
        gbc.writeMem(0xbe4e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7507);
        EXPECT(gbc.pc(), 0xbe50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe4e), 0xcb);
        EXPECT(gbc.readMem(0xbe4f), 0xb6);
        // CB B6 023D
        gbc.setState(0x395a, 0x14bf, 0x7ac0, 0x9c9d, 0xae42, 0x6771, 0x1, 0x0);
        gbc.writeMem(0x395a, { 0xcb, 0xb6 });
        gbc.writeMem(0x6771, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x14bf);
        EXPECT(gbc.pc(), 0x395c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 023E
        gbc.setState(0xc4e, 0x39bd, 0x2520, 0xf8, 0xb17b, 0x864d, 0x1, 0x1);
        gbc.writeMem(0xc4e, { 0xcb, 0xb6 });
        gbc.writeMem(0x864d, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x39bd);
        EXPECT(gbc.pc(), 0xc50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x864d), 0x94);
        // CB B6 023F
        gbc.setState(0x886, 0x3e75, 0x39e0, 0x2bfe, 0xfab0, 0xba35, 0x1, 0x1);
        gbc.writeMem(0x886, { 0xcb, 0xb6 });
        gbc.writeMem(0xba35, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3e75);
        EXPECT(gbc.pc(), 0x888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba35), 0x8d);
        // CB B6 0240
        gbc.setState(0xb020, 0x5125, 0xb3c0, 0xc774, 0x5f4b, 0xd76d, 0x1, 0x1);
        gbc.writeMem(0xb020, { 0xcb, 0xb6 });
        gbc.writeMem(0xd76d, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5125);
        EXPECT(gbc.pc(), 0xb022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb020), 0xcb);
        EXPECT(gbc.readMem(0xb021), 0xb6);
        EXPECT(gbc.readMem(0xd76d), 0x9d);
        // CB B6 0241
        gbc.setState(0x4fef, 0xa57c, 0xdef0, 0x263d, 0xd4f2, 0xb687, 0x0, 0x0);
        gbc.writeMem(0x4fef, { 0xcb, 0xb6 });
        gbc.writeMem(0xb687, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa57c);
        EXPECT(gbc.pc(), 0x4ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb687), 0x34);
        // CB B6 0243
        gbc.setState(0xad9f, 0x9fde, 0xb120, 0x2a10, 0xff6f, 0x510c, 0x0, 0x1);
        gbc.writeMem(0x510c, { 0x17 });
        gbc.writeMem(0xad9f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9fde);
        EXPECT(gbc.pc(), 0xada1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad9f), 0xcb);
        EXPECT(gbc.readMem(0xada0), 0xb6);
        // CB B6 0244
        gbc.setState(0xbe39, 0xf3c5, 0x9500, 0xd28c, 0x2f86, 0xc536, 0x0, 0x0);
        gbc.writeMem(0xbe39, { 0xcb, 0xb6 });
        gbc.writeMem(0xc536, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf3c5);
        EXPECT(gbc.pc(), 0xbe3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe39), 0xcb);
        EXPECT(gbc.readMem(0xbe3a), 0xb6);
        EXPECT(gbc.readMem(0xc536), 0x89);
        // CB B6 0245
        gbc.setState(0xd1ac, 0xdba7, 0x7030, 0x409, 0xd069, 0xec8d, 0x1, 0x1);
        gbc.writeMem(0xd1ac, { 0xcb, 0xb6 });
        gbc.writeMem(0xec8d, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xdba7);
        EXPECT(gbc.pc(), 0xd1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ac), 0xcb);
        EXPECT(gbc.readMem(0xd1ad), 0xb6);
        EXPECT(gbc.readMem(0xec8d), 0x3b);
        // CB B6 0248
        gbc.setState(0xd37a, 0xb589, 0x65d0, 0xeb0e, 0xacd1, 0xd1b8, 0x1, 0x1);
        gbc.writeMem(0xd1b8, { 0xd4 });
        gbc.writeMem(0xd37a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb589);
        EXPECT(gbc.pc(), 0xd37c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b8), 0x94);
        EXPECT(gbc.readMem(0xd37a), 0xcb);
        EXPECT(gbc.readMem(0xd37b), 0xb6);
        // CB B6 0249
        gbc.setState(0x2de9, 0x130, 0x5870, 0x61ea, 0xef2a, 0xfa93, 0x1, 0x0);
        gbc.writeMem(0x2de9, { 0xcb, 0xb6 });
        gbc.writeMem(0xfa93, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x130);
        EXPECT(gbc.pc(), 0x2deb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa93), 0xbf);
        // CB B6 024A
        gbc.setState(0x1ea9, 0xc5b3, 0x8840, 0x16d7, 0xaca6, 0xb8a2, 0x1, 0x0);
        gbc.writeMem(0x1ea9, { 0xcb, 0xb6 });
        gbc.writeMem(0xb8a2, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc5b3);
        EXPECT(gbc.pc(), 0x1eab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8a2), 0xa9);
        // CB B6 024C
        gbc.setState(0x1aa7, 0x3f19, 0x80d0, 0xece8, 0x4145, 0x9b1f, 0x0, 0x1);
        gbc.writeMem(0x1aa7, { 0xcb, 0xb6 });
        gbc.writeMem(0x9b1f, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3f19);
        EXPECT(gbc.pc(), 0x1aa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1f), 0xbd);
        // CB B6 024D
        gbc.setState(0xe6fe, 0xa175, 0x8060, 0x81f7, 0x68db, 0x5f5c, 0x1, 0x1);
        gbc.writeMem(0x5f5c, { 0x8c });
        gbc.writeMem(0xe6fe, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa175);
        EXPECT(gbc.pc(), 0xe700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6fe), 0xcb);
        EXPECT(gbc.readMem(0xe6ff), 0xb6);
        // CB B6 024F
        gbc.setState(0x51ec, 0x791c, 0x7600, 0x8a59, 0x8532, 0xebde, 0x0, 0x1);
        gbc.writeMem(0x51ec, { 0xcb, 0xb6 });
        gbc.writeMem(0xebde, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x791c);
        EXPECT(gbc.pc(), 0x51ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebde), 0x2e);
        // CB B6 0250
        gbc.setState(0x4840, 0xb99c, 0xa590, 0x68d7, 0x525a, 0xfbf3, 0x1, 0x0);
        gbc.writeMem(0x4840, { 0xcb, 0xb6 });
        gbc.writeMem(0xfbf3, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb99c);
        EXPECT(gbc.pc(), 0x4842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfbf3), 0x8c);
        // CB B6 0252
        gbc.setState(0x31a8, 0x1226, 0x6290, 0x3129, 0x7dc7, 0x2f37, 0x1, 0x1);
        gbc.writeMem(0x2f37, { 0xb9 });
        gbc.writeMem(0x31a8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1226);
        EXPECT(gbc.pc(), 0x31aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0254
        gbc.setState(0xb47f, 0x134f, 0xb240, 0x892d, 0xd93a, 0x176a, 0x0, 0x1);
        gbc.writeMem(0x176a, { 0x1f });
        gbc.writeMem(0xb47f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x134f);
        EXPECT(gbc.pc(), 0xb481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb47f), 0xcb);
        EXPECT(gbc.readMem(0xb480), 0xb6);
        // CB B6 0256
        gbc.setState(0xe62, 0x3cfe, 0x54a0, 0x661e, 0x60d2, 0x7d13, 0x1, 0x1);
        gbc.writeMem(0xe62, { 0xcb, 0xb6 });
        gbc.writeMem(0x7d13, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3cfe);
        EXPECT(gbc.pc(), 0xe64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0258
        gbc.setState(0x7218, 0xe76e, 0x30a0, 0x8a80, 0x69b2, 0x2001, 0x0, 0x1);
        gbc.writeMem(0x2001, { 0x18 });
        gbc.writeMem(0x7218, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe76e);
        EXPECT(gbc.pc(), 0x721a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0259
        gbc.setState(0x11e, 0xe9aa, 0x7490, 0xc618, 0x1565, 0x92cb, 0x1, 0x0);
        gbc.writeMem(0x11e, { 0xcb, 0xb6 });
        gbc.writeMem(0x92cb, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe9aa);
        EXPECT(gbc.pc(), 0x120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92cb), 0x25);
        // CB B6 025C
        gbc.setState(0xdad8, 0x83dc, 0x3320, 0xaf15, 0x6dbc, 0xf683, 0x1, 0x0);
        gbc.writeMem(0xdad8, { 0xcb, 0xb6 });
        gbc.writeMem(0xf683, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x83dc);
        EXPECT(gbc.pc(), 0xdada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad8), 0xcb);
        EXPECT(gbc.readMem(0xdad9), 0xb6);
        EXPECT(gbc.readMem(0xf683), 0x30);
        // CB B6 025D
        gbc.setState(0x573a, 0x4230, 0x4200, 0xdbf, 0x3b02, 0x91c3, 0x1, 0x0);
        gbc.writeMem(0x573a, { 0xcb, 0xb6 });
        gbc.writeMem(0x91c3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4230);
        EXPECT(gbc.pc(), 0x573c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c3), 0x23);
        // CB B6 025E
        gbc.setState(0xe325, 0x8d8b, 0xfa00, 0xa27e, 0xe157, 0xa640, 0x0, 0x1);
        gbc.writeMem(0xa640, { 0x5d });
        gbc.writeMem(0xe325, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8d8b);
        EXPECT(gbc.pc(), 0xe327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa640), 0x1d);
        EXPECT(gbc.readMem(0xe325), 0xcb);
        EXPECT(gbc.readMem(0xe326), 0xb6);
        // CB B6 025F
        gbc.setState(0xcca7, 0xa482, 0x5160, 0xde6a, 0xe04, 0xff4a, 0x1, 0x1);
        gbc.writeMem(0xcca7, { 0xcb, 0xb6 });
        gbc.writeMem(0xff4a, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa482);
        EXPECT(gbc.pc(), 0xcca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcca7), 0xcb);
        EXPECT(gbc.readMem(0xcca8), 0xb6);
        EXPECT(gbc.readMem(0xff4a), 0x3e);
        // CB B6 0260
        gbc.setState(0xd9d6, 0xdc9c, 0x1a10, 0x4946, 0x21bc, 0xe6d0, 0x0, 0x0);
        gbc.writeMem(0xd9d6, { 0xcb, 0xb6 });
        gbc.writeMem(0xe6d0, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdc9c);
        EXPECT(gbc.pc(), 0xd9d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d6), 0xcb);
        EXPECT(gbc.readMem(0xd9d7), 0xb6);
        EXPECT(gbc.readMem(0xe6d0), 0x7);
        // CB B6 0261
        gbc.setState(0xb546, 0x72f6, 0x9ea0, 0x3ce2, 0x3c5b, 0xdb16, 0x0, 0x0);
        gbc.writeMem(0xb546, { 0xcb, 0xb6 });
        gbc.writeMem(0xdb16, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x72f6);
        EXPECT(gbc.pc(), 0xb548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb546), 0xcb);
        EXPECT(gbc.readMem(0xb547), 0xb6);
        EXPECT(gbc.readMem(0xdb16), 0x84);
        // CB B6 0262
        gbc.setState(0x610d, 0x1f76, 0xdad0, 0xf277, 0x891d, 0xb52b, 0x0, 0x1);
        gbc.writeMem(0x610d, { 0xcb, 0xb6 });
        gbc.writeMem(0xb52b, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1f76);
        EXPECT(gbc.pc(), 0x610f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52b), 0x29);
        // CB B6 0263
        gbc.setState(0x3fb5, 0x4c3a, 0xb1e0, 0xbc47, 0xee7e, 0x5260, 0x0, 0x1);
        gbc.writeMem(0x3fb5, { 0xcb, 0xb6 });
        gbc.writeMem(0x5260, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4c3a);
        EXPECT(gbc.pc(), 0x3fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0264
        gbc.setState(0xe57e, 0x4276, 0xc170, 0xbf7d, 0xd6f6, 0xcd00, 0x0, 0x1);
        gbc.writeMem(0xcd00, { 0xbe });
        gbc.writeMem(0xe57e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4276);
        EXPECT(gbc.pc(), 0xe580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd00), 0xbe);
        EXPECT(gbc.readMem(0xe57e), 0xcb);
        EXPECT(gbc.readMem(0xe57f), 0xb6);
        // CB B6 0265
        gbc.setState(0xc9ac, 0x6535, 0x5820, 0x2e1b, 0x52f, 0xea7e, 0x1, 0x0);
        gbc.writeMem(0xc9ac, { 0xcb, 0xb6 });
        gbc.writeMem(0xea7e, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6535);
        EXPECT(gbc.pc(), 0xc9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ac), 0xcb);
        EXPECT(gbc.readMem(0xc9ad), 0xb6);
        EXPECT(gbc.readMem(0xea7e), 0x11);
        // CB B6 0267
        gbc.setState(0xd9d1, 0xd4bc, 0x7a80, 0xf07c, 0xbfb3, 0xfee, 0x1, 0x0);
        gbc.writeMem(0xfee, { 0x10 });
        gbc.writeMem(0xd9d1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd4bc);
        EXPECT(gbc.pc(), 0xd9d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d1), 0xcb);
        EXPECT(gbc.readMem(0xd9d2), 0xb6);
        // CB B6 0268
        gbc.setState(0x7610, 0x95c7, 0x7850, 0x25d, 0xb07d, 0x86a2, 0x1, 0x1);
        gbc.writeMem(0x7610, { 0xcb, 0xb6 });
        gbc.writeMem(0x86a2, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x95c7);
        EXPECT(gbc.pc(), 0x7612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86a2), 0x81);
        // CB B6 026A
        gbc.setState(0x3618, 0xf832, 0xe060, 0x8762, 0xbf21, 0x44de, 0x0, 0x1);
        gbc.writeMem(0x3618, { 0xcb, 0xb6 });
        gbc.writeMem(0x44de, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf832);
        EXPECT(gbc.pc(), 0x361a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 026B
        gbc.setState(0xfd9, 0xeb67, 0x5020, 0x1b2a, 0xeb85, 0xf496, 0x1, 0x1);
        gbc.writeMem(0xfd9, { 0xcb, 0xb6 });
        gbc.writeMem(0xf496, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xeb67);
        EXPECT(gbc.pc(), 0xfdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf496), 0x96);
        // CB B6 026C
        gbc.setState(0x2b2a, 0x72a, 0x6d70, 0xe33f, 0x65e6, 0x566b, 0x1, 0x1);
        gbc.writeMem(0x2b2a, { 0xcb, 0xb6 });
        gbc.writeMem(0x566b, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x72a);
        EXPECT(gbc.pc(), 0x2b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 026D
        gbc.setState(0x9ba2, 0xa4c7, 0x2460, 0xb9f7, 0x8985, 0xb920, 0x1, 0x1);
        gbc.writeMem(0x9ba2, { 0xcb, 0xb6 });
        gbc.writeMem(0xb920, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa4c7);
        EXPECT(gbc.pc(), 0x9ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ba2), 0xcb);
        EXPECT(gbc.readMem(0x9ba3), 0xb6);
        EXPECT(gbc.readMem(0xb920), 0xd);
        // CB B6 026E
        gbc.setState(0xb724, 0x1757, 0x5160, 0x471b, 0xe04c, 0xe94d, 0x0, 0x1);
        gbc.writeMem(0xb724, { 0xcb, 0xb6 });
        gbc.writeMem(0xe94d, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1757);
        EXPECT(gbc.pc(), 0xb726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb724), 0xcb);
        EXPECT(gbc.readMem(0xb725), 0xb6);
        EXPECT(gbc.readMem(0xe94d), 0xb1);
        // CB B6 0270
        gbc.setState(0x7e9b, 0xc64f, 0x7040, 0xbfdb, 0x4936, 0xe6b0, 0x0, 0x0);
        gbc.writeMem(0x7e9b, { 0xcb, 0xb6 });
        gbc.writeMem(0xe6b0, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc64f);
        EXPECT(gbc.pc(), 0x7e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b0), 0x2d);
        // CB B6 0271
        gbc.setState(0x6cd, 0xb82c, 0x170, 0x6d53, 0xf384, 0xfbca, 0x0, 0x0);
        gbc.writeMem(0x6cd, { 0xcb, 0xb6 });
        gbc.writeMem(0xfbca, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb82c);
        EXPECT(gbc.pc(), 0x6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfbca), 0x1);
        // CB B6 0272
        gbc.setState(0x67df, 0x1662, 0x7220, 0x55f5, 0x39a4, 0xd7f3, 0x1, 0x1);
        gbc.writeMem(0x67df, { 0xcb, 0xb6 });
        gbc.writeMem(0xd7f3, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1662);
        EXPECT(gbc.pc(), 0x67e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f3), 0x26);
        // CB B6 0274
        gbc.setState(0x83e0, 0xcef7, 0x5820, 0x3b49, 0x115b, 0x3295, 0x0, 0x0);
        gbc.writeMem(0x3295, { 0xb8 });
        gbc.writeMem(0x83e0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xcef7);
        EXPECT(gbc.pc(), 0x83e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e0), 0xcb);
        EXPECT(gbc.readMem(0x83e1), 0xb6);
        // CB B6 0275
        gbc.setState(0x42c0, 0x7e97, 0x3230, 0xe25, 0xbb8, 0xc9fd, 0x1, 0x0);
        gbc.writeMem(0x42c0, { 0xcb, 0xb6 });
        gbc.writeMem(0xc9fd, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7e97);
        EXPECT(gbc.pc(), 0x42c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9fd), 0x1e);
        // CB B6 0276
        gbc.setState(0xd20a, 0x2db4, 0x58c0, 0xe660, 0x1a38, 0x248a, 0x1, 0x0);
        gbc.writeMem(0x248a, { 0xa1 });
        gbc.writeMem(0xd20a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2db4);
        EXPECT(gbc.pc(), 0xd20c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20a), 0xcb);
        EXPECT(gbc.readMem(0xd20b), 0xb6);
        // CB B6 0277
        gbc.setState(0x1e39, 0x7bd5, 0xe670, 0xfd74, 0x4789, 0xb142, 0x0, 0x0);
        gbc.writeMem(0x1e39, { 0xcb, 0xb6 });
        gbc.writeMem(0xb142, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7bd5);
        EXPECT(gbc.pc(), 0x1e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb142), 0x14);
        // CB B6 0278
        gbc.setState(0x1192, 0x8ab9, 0xd8e0, 0xd9a9, 0xc907, 0xdda5, 0x1, 0x1);
        gbc.writeMem(0x1192, { 0xcb, 0xb6 });
        gbc.writeMem(0xdda5, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8ab9);
        EXPECT(gbc.pc(), 0x1194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda5), 0x93);
        // CB B6 0279
        gbc.setState(0xb3aa, 0x5e75, 0x68c0, 0x7ea4, 0xe78d, 0x10b7, 0x0, 0x0);
        gbc.writeMem(0x10b7, { 0x36 });
        gbc.writeMem(0xb3aa, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5e75);
        EXPECT(gbc.pc(), 0xb3ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3aa), 0xcb);
        EXPECT(gbc.readMem(0xb3ab), 0xb6);
        // CB B6 027B
        gbc.setState(0x8bc6, 0x9f6c, 0x6830, 0xb0ae, 0xd7ce, 0x9dbd, 0x1, 0x1);
        gbc.writeMem(0x8bc6, { 0xcb, 0xb6 });
        gbc.writeMem(0x9dbd, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9f6c);
        EXPECT(gbc.pc(), 0x8bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc6), 0xcb);
        EXPECT(gbc.readMem(0x8bc7), 0xb6);
        EXPECT(gbc.readMem(0x9dbd), 0x24);
        // CB B6 027D
        gbc.setState(0xd8f1, 0x1b6c, 0x4f20, 0x515a, 0xf917, 0xb3bb, 0x1, 0x1);
        gbc.writeMem(0xb3bb, { 0x7c });
        gbc.writeMem(0xd8f1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1b6c);
        EXPECT(gbc.pc(), 0xd8f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3bb), 0x3c);
        EXPECT(gbc.readMem(0xd8f1), 0xcb);
        EXPECT(gbc.readMem(0xd8f2), 0xb6);
        // CB B6 027E
        gbc.setState(0x2181, 0x102d, 0xa530, 0x4ba1, 0x6c43, 0x61cc, 0x0, 0x0);
        gbc.writeMem(0x2181, { 0xcb, 0xb6 });
        gbc.writeMem(0x61cc, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x102d);
        EXPECT(gbc.pc(), 0x2183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0280
        gbc.setState(0x5952, 0xd8f7, 0xeae0, 0xce00, 0xb11b, 0x397, 0x0, 0x0);
        gbc.writeMem(0x397, { 0x9c });
        gbc.writeMem(0x5952, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd8f7);
        EXPECT(gbc.pc(), 0x5954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0281
        gbc.setState(0x179c, 0x887a, 0xd7d0, 0x13a0, 0xd85f, 0xdeec, 0x0, 0x1);
        gbc.writeMem(0x179c, { 0xcb, 0xb6 });
        gbc.writeMem(0xdeec, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x887a);
        EXPECT(gbc.pc(), 0x179e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeec), 0x32);
        // CB B6 0282
        gbc.setState(0x636a, 0x8df, 0xcc30, 0x1bb2, 0x9fae, 0x4b02, 0x0, 0x1);
        gbc.writeMem(0x4b02, { 0x24 });
        gbc.writeMem(0x636a, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8df);
        EXPECT(gbc.pc(), 0x636c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0285
        gbc.setState(0x45d5, 0x6b7e, 0x2a30, 0x1309, 0x7b91, 0xed22, 0x1, 0x0);
        gbc.writeMem(0x45d5, { 0xcb, 0xb6 });
        gbc.writeMem(0xed22, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6b7e);
        EXPECT(gbc.pc(), 0x45d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed22), 0xaf);
        // CB B6 0286
        gbc.setState(0x105f, 0x2127, 0x2090, 0x2c7, 0xe72a, 0x219b, 0x1, 0x0);
        gbc.writeMem(0x105f, { 0xcb, 0xb6 });
        gbc.writeMem(0x219b, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2127);
        EXPECT(gbc.pc(), 0x1061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0289
        gbc.setState(0x4495, 0xe299, 0xd4e0, 0x742f, 0x1430, 0x212a, 0x1, 0x1);
        gbc.writeMem(0x212a, { 0x23 });
        gbc.writeMem(0x4495, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe299);
        EXPECT(gbc.pc(), 0x4497);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 028A
        gbc.setState(0xeee4, 0x7832, 0x5f90, 0xbbd1, 0xc76a, 0x9515, 0x1, 0x0);
        gbc.writeMem(0x9515, { 0xa7 });
        gbc.writeMem(0xeee4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7832);
        EXPECT(gbc.pc(), 0xeee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9515), 0xa7);
        EXPECT(gbc.readMem(0xeee4), 0xcb);
        EXPECT(gbc.readMem(0xeee5), 0xb6);
        // CB B6 028B
        gbc.setState(0x5ad4, 0x7205, 0xff30, 0x4457, 0xddb7, 0x6347, 0x1, 0x1);
        gbc.writeMem(0x5ad4, { 0xcb, 0xb6 });
        gbc.writeMem(0x6347, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7205);
        EXPECT(gbc.pc(), 0x5ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 028E
        gbc.setState(0x8438, 0x44d5, 0x1fc0, 0x53b9, 0xb313, 0xbc5b, 0x0, 0x1);
        gbc.writeMem(0x8438, { 0xcb, 0xb6 });
        gbc.writeMem(0xbc5b, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x44d5);
        EXPECT(gbc.pc(), 0x843a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8438), 0xcb);
        EXPECT(gbc.readMem(0x8439), 0xb6);
        EXPECT(gbc.readMem(0xbc5b), 0x35);
        // CB B6 0290
        gbc.setState(0xd84b, 0x566a, 0xb3e0, 0x6daf, 0xff3f, 0xecac, 0x0, 0x0);
        gbc.writeMem(0xd84b, { 0xcb, 0xb6 });
        gbc.writeMem(0xecac, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x566a);
        EXPECT(gbc.pc(), 0xd84d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd84b), 0xcb);
        EXPECT(gbc.readMem(0xd84c), 0xb6);
        EXPECT(gbc.readMem(0xecac), 0x82);
        // CB B6 0292
        gbc.setState(0xa586, 0xe520, 0x44c0, 0xb96d, 0x119e, 0xfeb4, 0x1, 0x0);
        gbc.writeMem(0xa586, { 0xcb, 0xb6 });
        gbc.writeMem(0xfeb4, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe520);
        EXPECT(gbc.pc(), 0xa588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa586), 0xcb);
        EXPECT(gbc.readMem(0xa587), 0xb6);
        EXPECT(gbc.readMem(0xfeb4), 0xbd);
        // CB B6 0293
        gbc.setState(0x8231, 0x58fb, 0x9290, 0xb622, 0xffbc, 0x8ed3, 0x1, 0x0);
        gbc.writeMem(0x8231, { 0xcb, 0xb6 });
        gbc.writeMem(0x8ed3, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x58fb);
        EXPECT(gbc.pc(), 0x8233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8231), 0xcb);
        EXPECT(gbc.readMem(0x8232), 0xb6);
        EXPECT(gbc.readMem(0x8ed3), 0x13);
        // CB B6 0294
        gbc.setState(0x34a7, 0x2f74, 0x88c0, 0x6ca3, 0x3b69, 0xde3b, 0x0, 0x1);
        gbc.writeMem(0x34a7, { 0xcb, 0xb6 });
        gbc.writeMem(0xde3b, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2f74);
        EXPECT(gbc.pc(), 0x34a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde3b), 0xe);
        // CB B6 0295
        gbc.setState(0x6083, 0x87b9, 0x67a0, 0xeebe, 0x4778, 0x4028, 0x0, 0x1);
        gbc.writeMem(0x4028, { 0x11 });
        gbc.writeMem(0x6083, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x87b9);
        EXPECT(gbc.pc(), 0x6085);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0296
        gbc.setState(0x1706, 0xf053, 0xc270, 0x7387, 0xfa34, 0x5e1b, 0x0, 0x1);
        gbc.writeMem(0x1706, { 0xcb, 0xb6 });
        gbc.writeMem(0x5e1b, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf053);
        EXPECT(gbc.pc(), 0x1708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0297
        gbc.setState(0x6fe8, 0x87c2, 0xc810, 0x5b17, 0xc2d7, 0x90af, 0x0, 0x0);
        gbc.writeMem(0x6fe8, { 0xcb, 0xb6 });
        gbc.writeMem(0x90af, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x87c2);
        EXPECT(gbc.pc(), 0x6fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90af), 0x82);
        // CB B6 0298
        gbc.setState(0x2e7d, 0xce02, 0x9f0, 0x7124, 0x228f, 0xc30f, 0x0, 0x0);
        gbc.writeMem(0x2e7d, { 0xcb, 0xb6 });
        gbc.writeMem(0xc30f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xce02);
        EXPECT(gbc.pc(), 0x2e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc30f), 0x98);
        // CB B6 0299
        gbc.setState(0x7cc6, 0x5fa7, 0x4e70, 0x2a8c, 0x12e0, 0xd3a, 0x0, 0x1);
        gbc.writeMem(0xd3a, { 0x2 });
        gbc.writeMem(0x7cc6, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5fa7);
        EXPECT(gbc.pc(), 0x7cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 029A
        gbc.setState(0x2fcc, 0x2cb5, 0x7520, 0x66b4, 0xf3c5, 0xd399, 0x0, 0x1);
        gbc.writeMem(0x2fcc, { 0xcb, 0xb6 });
        gbc.writeMem(0xd399, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2cb5);
        EXPECT(gbc.pc(), 0x2fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd399), 0xa3);
        // CB B6 029D
        gbc.setState(0xb0bd, 0x311e, 0x950, 0x42ee, 0xd1d, 0xc7eb, 0x1, 0x0);
        gbc.writeMem(0xb0bd, { 0xcb, 0xb6 });
        gbc.writeMem(0xc7eb, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x311e);
        EXPECT(gbc.pc(), 0xb0bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0bd), 0xcb);
        EXPECT(gbc.readMem(0xb0be), 0xb6);
        EXPECT(gbc.readMem(0xc7eb), 0x39);
        // CB B6 029F
        gbc.setState(0xddd1, 0x593b, 0xe0e0, 0xbcf2, 0x6926, 0x89f7, 0x1, 0x0);
        gbc.writeMem(0x89f7, { 0xb5 });
        gbc.writeMem(0xddd1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x593b);
        EXPECT(gbc.pc(), 0xddd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f7), 0xb5);
        EXPECT(gbc.readMem(0xddd1), 0xcb);
        EXPECT(gbc.readMem(0xddd2), 0xb6);
        // CB B6 02A0
        gbc.setState(0x137c, 0xcb8, 0xc550, 0x144e, 0xd97b, 0xd22b, 0x1, 0x1);
        gbc.writeMem(0x137c, { 0xcb, 0xb6 });
        gbc.writeMem(0xd22b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcb8);
        EXPECT(gbc.pc(), 0x137e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd22b), 0x38);
        // CB B6 02A1
        gbc.setState(0x9a98, 0x7ed8, 0x5830, 0x5677, 0xb6d1, 0xb9b8, 0x0, 0x1);
        gbc.writeMem(0x9a98, { 0xcb, 0xb6 });
        gbc.writeMem(0xb9b8, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7ed8);
        EXPECT(gbc.pc(), 0x9a9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a98), 0xcb);
        EXPECT(gbc.readMem(0x9a99), 0xb6);
        EXPECT(gbc.readMem(0xb9b8), 0x9d);
        // CB B6 02A2
        gbc.setState(0xa8e5, 0xf65a, 0xf510, 0x6a75, 0xc638, 0xdf07, 0x0, 0x0);
        gbc.writeMem(0xa8e5, { 0xcb, 0xb6 });
        gbc.writeMem(0xdf07, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf65a);
        EXPECT(gbc.pc(), 0xa8e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e5), 0xcb);
        EXPECT(gbc.readMem(0xa8e6), 0xb6);
        EXPECT(gbc.readMem(0xdf07), 0xa8);
        // CB B6 02A3
        gbc.setState(0x5f5b, 0x6777, 0x6900, 0xc8f1, 0x1164, 0xc307, 0x0, 0x0);
        gbc.writeMem(0x5f5b, { 0xcb, 0xb6 });
        gbc.writeMem(0xc307, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6777);
        EXPECT(gbc.pc(), 0x5f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc307), 0xb3);
        // CB B6 02A4
        gbc.setState(0xa952, 0x5fd4, 0x290, 0x4658, 0x3ead, 0xa152, 0x0, 0x0);
        gbc.writeMem(0xa152, { 0x6a });
        gbc.writeMem(0xa952, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5fd4);
        EXPECT(gbc.pc(), 0xa954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa152), 0x2a);
        EXPECT(gbc.readMem(0xa952), 0xcb);
        EXPECT(gbc.readMem(0xa953), 0xb6);
        // CB B6 02A5
        gbc.setState(0x5e19, 0x2c05, 0x77f0, 0x740, 0x7de, 0x65db, 0x0, 0x0);
        gbc.writeMem(0x5e19, { 0xcb, 0xb6 });
        gbc.writeMem(0x65db, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2c05);
        EXPECT(gbc.pc(), 0x5e1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 02A6
        gbc.setState(0x4e56, 0xf437, 0x1090, 0x14, 0x4516, 0xc35c, 0x1, 0x0);
        gbc.writeMem(0x4e56, { 0xcb, 0xb6 });
        gbc.writeMem(0xc35c, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf437);
        EXPECT(gbc.pc(), 0x4e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc35c), 0x3a);
        // CB B6 02A7
        gbc.setState(0x703a, 0x48bd, 0x6a70, 0xa7b0, 0xfbc4, 0xd23c, 0x1, 0x1);
        gbc.writeMem(0x703a, { 0xcb, 0xb6 });
        gbc.writeMem(0xd23c, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x48bd);
        EXPECT(gbc.pc(), 0x703c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23c), 0x98);
        // CB B6 02A9
        gbc.setState(0xe148, 0x27ab, 0xee60, 0xf2e6, 0xbe85, 0xd216, 0x1, 0x0);
        gbc.writeMem(0xd216, { 0x45 });
        gbc.writeMem(0xe148, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x27ab);
        EXPECT(gbc.pc(), 0xe14a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd216), 0x5);
        EXPECT(gbc.readMem(0xe148), 0xcb);
        EXPECT(gbc.readMem(0xe149), 0xb6);
        // CB B6 02AA
        gbc.setState(0x88b9, 0x1c7a, 0x41a0, 0x5973, 0xdeed, 0x402a, 0x1, 0x1);
        gbc.writeMem(0x402a, { 0x12 });
        gbc.writeMem(0x88b9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1c7a);
        EXPECT(gbc.pc(), 0x88bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b9), 0xcb);
        EXPECT(gbc.readMem(0x88ba), 0xb6);
        // CB B6 02AD
        gbc.setState(0xa39c, 0x64f5, 0xc190, 0xa781, 0xd8fb, 0xc09f, 0x1, 0x1);
        gbc.writeMem(0xa39c, { 0xcb, 0xb6 });
        gbc.writeMem(0xc09f, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x64f5);
        EXPECT(gbc.pc(), 0xa39e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa39c), 0xcb);
        EXPECT(gbc.readMem(0xa39d), 0xb6);
        EXPECT(gbc.readMem(0xc09f), 0x8b);
        // CB B6 02AE
        gbc.setState(0xc847, 0xf72b, 0x8670, 0x1409, 0x4346, 0xfccd, 0x1, 0x1);
        gbc.writeMem(0xc847, { 0xcb, 0xb6 });
        gbc.writeMem(0xfccd, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf72b);
        EXPECT(gbc.pc(), 0xc849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc847), 0xcb);
        EXPECT(gbc.readMem(0xc848), 0xb6);
        EXPECT(gbc.readMem(0xfccd), 0xa4);
        // CB B6 02AF
        gbc.setState(0xcb40, 0x184, 0x45f0, 0x8fad, 0xe536, 0x8c4, 0x0, 0x1);
        gbc.writeMem(0x8c4, { 0x38 });
        gbc.writeMem(0xcb40, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x184);
        EXPECT(gbc.pc(), 0xcb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb40), 0xcb);
        EXPECT(gbc.readMem(0xcb41), 0xb6);
        // CB B6 02B1
        gbc.setState(0xb455, 0xf07e, 0x8320, 0x471c, 0x1c62, 0x875c, 0x1, 0x0);
        gbc.writeMem(0x875c, { 0xf1 });
        gbc.writeMem(0xb455, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf07e);
        EXPECT(gbc.pc(), 0xb457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x875c), 0xb1);
        EXPECT(gbc.readMem(0xb455), 0xcb);
        EXPECT(gbc.readMem(0xb456), 0xb6);
        // CB B6 02B2
        gbc.setState(0x6959, 0x7a88, 0x94d0, 0xc4b0, 0xbf15, 0x507a, 0x0, 0x1);
        gbc.writeMem(0x507a, { 0xa4 });
        gbc.writeMem(0x6959, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7a88);
        EXPECT(gbc.pc(), 0x695b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 02B3
        gbc.setState(0x91fe, 0xa9cf, 0x870, 0x83e4, 0x8f78, 0xd00b, 0x0, 0x0);
        gbc.writeMem(0x91fe, { 0xcb, 0xb6 });
        gbc.writeMem(0xd00b, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa9cf);
        EXPECT(gbc.pc(), 0x9200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91fe), 0xcb);
        EXPECT(gbc.readMem(0x91ff), 0xb6);
        EXPECT(gbc.readMem(0xd00b), 0x1e);
        // CB B6 02B5
        gbc.setState(0x35cb, 0xea7, 0x26f0, 0x7e91, 0xb5eb, 0xd6e9, 0x1, 0x0);
        gbc.writeMem(0x35cb, { 0xcb, 0xb6 });
        gbc.writeMem(0xd6e9, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xea7);
        EXPECT(gbc.pc(), 0x35cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e9), 0x2d);
        // CB B6 02B6
        gbc.setState(0xe847, 0x7c37, 0x1b40, 0x7e7a, 0x391d, 0xcee6, 0x0, 0x1);
        gbc.writeMem(0xcee6, { 0x8 });
        gbc.writeMem(0xe847, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7c37);
        EXPECT(gbc.pc(), 0xe849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee6), 0x8);
        EXPECT(gbc.readMem(0xe847), 0xcb);
        EXPECT(gbc.readMem(0xe848), 0xb6);
        // CB B6 02B7
        gbc.setState(0x591a, 0xa00f, 0xb840, 0x2ec2, 0x35e1, 0x9c33, 0x0, 0x0);
        gbc.writeMem(0x591a, { 0xcb, 0xb6 });
        gbc.writeMem(0x9c33, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa00f);
        EXPECT(gbc.pc(), 0x591c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c33), 0x3b);
        // CB B6 02B9
        gbc.setState(0x4d7e, 0xa095, 0x7690, 0x1c49, 0x6aa4, 0x3778, 0x0, 0x1);
        gbc.writeMem(0x3778, { 0x33 });
        gbc.writeMem(0x4d7e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa095);
        EXPECT(gbc.pc(), 0x4d80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 02BA
        gbc.setState(0x2cc0, 0x3940, 0xa8c0, 0x951d, 0x143e, 0x95d2, 0x1, 0x0);
        gbc.writeMem(0x2cc0, { 0xcb, 0xb6 });
        gbc.writeMem(0x95d2, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3940);
        EXPECT(gbc.pc(), 0x2cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d2), 0x85);
        // CB B6 02BB
        gbc.setState(0x27fd, 0xd40a, 0x9540, 0xd419, 0xd2dc, 0x12de, 0x0, 0x1);
        gbc.writeMem(0x12de, { 0xa8 });
        gbc.writeMem(0x27fd, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd40a);
        EXPECT(gbc.pc(), 0x27ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 02BC
        gbc.setState(0x8953, 0xe80e, 0x5910, 0x872f, 0x463e, 0x4201, 0x0, 0x0);
        gbc.writeMem(0x4201, { 0x33 });
        gbc.writeMem(0x8953, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe80e);
        EXPECT(gbc.pc(), 0x8955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8953), 0xcb);
        EXPECT(gbc.readMem(0x8954), 0xb6);
        // CB B6 02BD
        gbc.setState(0xdb6b, 0x85bb, 0x2a20, 0x9ac0, 0xae89, 0x725b, 0x1, 0x0);
        gbc.writeMem(0x725b, { 0x1c });
        gbc.writeMem(0xdb6b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x85bb);
        EXPECT(gbc.pc(), 0xdb6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb6b), 0xcb);
        EXPECT(gbc.readMem(0xdb6c), 0xb6);
        // CB B6 02BE
        gbc.setState(0xeca3, 0x1142, 0x12f0, 0x9d27, 0xd7f7, 0xbac0, 0x0, 0x0);
        gbc.writeMem(0xbac0, { 0xf3 });
        gbc.writeMem(0xeca3, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1142);
        EXPECT(gbc.pc(), 0xeca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac0), 0xb3);
        EXPECT(gbc.readMem(0xeca3), 0xcb);
        EXPECT(gbc.readMem(0xeca4), 0xb6);
        // CB B6 02BF
        gbc.setState(0x5ad9, 0x457, 0x9050, 0x9f67, 0xc993, 0x4495, 0x1, 0x0);
        gbc.writeMem(0x4495, { 0x9b });
        gbc.writeMem(0x5ad9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x457);
        EXPECT(gbc.pc(), 0x5adb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 02C0
        gbc.setState(0x228b, 0x7f38, 0x1250, 0x508f, 0xb130, 0x4c22, 0x1, 0x1);
        gbc.writeMem(0x228b, { 0xcb, 0xb6 });
        gbc.writeMem(0x4c22, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7f38);
        EXPECT(gbc.pc(), 0x228d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 02C2
        gbc.setState(0x4140, 0xbdbe, 0xd610, 0xee81, 0x84a, 0x3204, 0x0, 0x1);
        gbc.writeMem(0x3204, { 0xb0 });
        gbc.writeMem(0x4140, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbdbe);
        EXPECT(gbc.pc(), 0x4142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 02C3
        gbc.setState(0xbb4c, 0x4dad, 0xf130, 0xc38a, 0x4574, 0x3db2, 0x1, 0x1);
        gbc.writeMem(0x3db2, { 0xa1 });
        gbc.writeMem(0xbb4c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4dad);
        EXPECT(gbc.pc(), 0xbb4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4c), 0xcb);
        EXPECT(gbc.readMem(0xbb4d), 0xb6);
        // CB B6 02C4
        gbc.setState(0xe7ee, 0x779f, 0xc200, 0xeaf1, 0x2558, 0x8d0c, 0x1, 0x0);
        gbc.writeMem(0x8d0c, { 0x6 });
        gbc.writeMem(0xe7ee, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x779f);
        EXPECT(gbc.pc(), 0xe7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0c), 0x6);
        EXPECT(gbc.readMem(0xe7ee), 0xcb);
        EXPECT(gbc.readMem(0xe7ef), 0xb6);
        // CB B6 02C5
        gbc.setState(0x8fd9, 0xe654, 0x8860, 0x5db5, 0x9624, 0xd3fc, 0x1, 0x0);
        gbc.writeMem(0x8fd9, { 0xcb, 0xb6 });
        gbc.writeMem(0xd3fc, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe654);
        EXPECT(gbc.pc(), 0x8fdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd9), 0xcb);
        EXPECT(gbc.readMem(0x8fda), 0xb6);
        EXPECT(gbc.readMem(0xd3fc), 0xa6);
        // CB B6 02C6
        gbc.setState(0x9f14, 0x6a4a, 0x1a70, 0xfb58, 0xc896, 0x4f2b, 0x1, 0x0);
        gbc.writeMem(0x4f2b, { 0xb2 });
        gbc.writeMem(0x9f14, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6a4a);
        EXPECT(gbc.pc(), 0x9f16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f14), 0xcb);
        EXPECT(gbc.readMem(0x9f15), 0xb6);
        // CB B6 02C7
        gbc.setState(0x2aad, 0x3c6d, 0x5860, 0x71f8, 0x2a7a, 0xcbb2, 0x0, 0x1);
        gbc.writeMem(0x2aad, { 0xcb, 0xb6 });
        gbc.writeMem(0xcbb2, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3c6d);
        EXPECT(gbc.pc(), 0x2aaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb2), 0xbf);
        // CB B6 02C8
        gbc.setState(0x5e47, 0xf344, 0x2be0, 0x3a07, 0x6045, 0xa880, 0x0, 0x1);
        gbc.writeMem(0x5e47, { 0xcb, 0xb6 });
        gbc.writeMem(0xa880, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf344);
        EXPECT(gbc.pc(), 0x5e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa880), 0x1b);
        // CB B6 02C9
        gbc.setState(0x169a, 0x2288, 0x4d00, 0xb4df, 0x8809, 0x9dad, 0x1, 0x0);
        gbc.writeMem(0x169a, { 0xcb, 0xb6 });
        gbc.writeMem(0x9dad, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2288);
        EXPECT(gbc.pc(), 0x169c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dad), 0x97);
        // CB B6 02CB
        gbc.setState(0x84f1, 0xffdb, 0xaa30, 0xba6b, 0x1b69, 0xda54, 0x0, 0x0);
        gbc.writeMem(0x84f1, { 0xcb, 0xb6 });
        gbc.writeMem(0xda54, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xffdb);
        EXPECT(gbc.pc(), 0x84f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f1), 0xcb);
        EXPECT(gbc.readMem(0x84f2), 0xb6);
        EXPECT(gbc.readMem(0xda54), 0xac);
        // CB B6 02CD
        gbc.setState(0x40d5, 0xdddd, 0xc840, 0xf105, 0xe535, 0x1ef3, 0x1, 0x0);
        gbc.writeMem(0x1ef3, { 0xb1 });
        gbc.writeMem(0x40d5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xdddd);
        EXPECT(gbc.pc(), 0x40d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 02CE
        gbc.setState(0x4ef9, 0x7c31, 0x25f0, 0x3b73, 0x5a81, 0x48db, 0x0, 0x1);
        gbc.writeMem(0x48db, { 0x9c });
        gbc.writeMem(0x4ef9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7c31);
        EXPECT(gbc.pc(), 0x4efb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 02CF
        gbc.setState(0xdee2, 0xb6e2, 0x2290, 0x2d7a, 0x9eb2, 0xbd0a, 0x0, 0x1);
        gbc.writeMem(0xbd0a, { 0x8c });
        gbc.writeMem(0xdee2, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb6e2);
        EXPECT(gbc.pc(), 0xdee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0a), 0x8c);
        EXPECT(gbc.readMem(0xdee2), 0xcb);
        EXPECT(gbc.readMem(0xdee3), 0xb6);
        // CB B6 02D0
        gbc.setState(0xabf4, 0x216b, 0xa340, 0xdb26, 0x5466, 0x42bb, 0x1, 0x0);
        gbc.writeMem(0x42bb, { 0x85 });
        gbc.writeMem(0xabf4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x216b);
        EXPECT(gbc.pc(), 0xabf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf4), 0xcb);
        EXPECT(gbc.readMem(0xabf5), 0xb6);
        // CB B6 02D1
        gbc.setState(0x1dfb, 0xd6af, 0x7730, 0xbdb7, 0x932f, 0x621d, 0x1, 0x1);
        gbc.writeMem(0x1dfb, { 0xcb, 0xb6 });
        gbc.writeMem(0x621d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd6af);
        EXPECT(gbc.pc(), 0x1dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 02D2
        gbc.setState(0x2c74, 0xc220, 0x1000, 0x16c6, 0x1c1d, 0x8ef3, 0x0, 0x1);
        gbc.writeMem(0x2c74, { 0xcb, 0xb6 });
        gbc.writeMem(0x8ef3, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc220);
        EXPECT(gbc.pc(), 0x2c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef3), 0x31);
        // CB B6 02D3
        gbc.setState(0x8460, 0xe436, 0xfa50, 0x241e, 0x9a67, 0xdcc8, 0x1, 0x0);
        gbc.writeMem(0x8460, { 0xcb, 0xb6 });
        gbc.writeMem(0xdcc8, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe436);
        EXPECT(gbc.pc(), 0x8462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8460), 0xcb);
        EXPECT(gbc.readMem(0x8461), 0xb6);
        EXPECT(gbc.readMem(0xdcc8), 0x30);
        // CB B6 02D6
        gbc.setState(0xaefb, 0x3d6e, 0x89f0, 0x3820, 0xb05c, 0xb358, 0x0, 0x1);
        gbc.writeMem(0xaefb, { 0xcb, 0xb6 });
        gbc.writeMem(0xb358, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3d6e);
        EXPECT(gbc.pc(), 0xaefd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaefb), 0xcb);
        EXPECT(gbc.readMem(0xaefc), 0xb6);
        EXPECT(gbc.readMem(0xb358), 0x24);
        // CB B6 02D7
        gbc.setState(0xd22b, 0x7245, 0x6f80, 0xe9a6, 0x8c0b, 0x9b3, 0x0, 0x0);
        gbc.writeMem(0x9b3, { 0x9e });
        gbc.writeMem(0xd22b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7245);
        EXPECT(gbc.pc(), 0xd22d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22b), 0xcb);
        EXPECT(gbc.readMem(0xd22c), 0xb6);
        // CB B6 02DA
        gbc.setState(0x5bba, 0xa02b, 0xa860, 0xb75f, 0x8760, 0x9945, 0x1, 0x1);
        gbc.writeMem(0x5bba, { 0xcb, 0xb6 });
        gbc.writeMem(0x9945, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa02b);
        EXPECT(gbc.pc(), 0x5bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9945), 0x9d);
        // CB B6 02DC
        gbc.setState(0x7e4e, 0xbc24, 0xe70, 0x6f93, 0xc2aa, 0x4290, 0x1, 0x0);
        gbc.writeMem(0x4290, { 0x17 });
        gbc.writeMem(0x7e4e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xbc24);
        EXPECT(gbc.pc(), 0x7e50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 02DE
        gbc.setState(0x9a7b, 0xc54c, 0xfdb0, 0xedfb, 0x9235, 0x1853, 0x0, 0x1);
        gbc.writeMem(0x1853, { 0xe });
        gbc.writeMem(0x9a7b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc54c);
        EXPECT(gbc.pc(), 0x9a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a7b), 0xcb);
        EXPECT(gbc.readMem(0x9a7c), 0xb6);
        // CB B6 02DF
        gbc.setState(0xa71c, 0x2162, 0x2710, 0x5f3a, 0x1a33, 0xd089, 0x1, 0x1);
        gbc.writeMem(0xa71c, { 0xcb, 0xb6 });
        gbc.writeMem(0xd089, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2162);
        EXPECT(gbc.pc(), 0xa71e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa71c), 0xcb);
        EXPECT(gbc.readMem(0xa71d), 0xb6);
        EXPECT(gbc.readMem(0xd089), 0x94);
        // CB B6 02E0
        gbc.setState(0xd2a7, 0x3f43, 0x1d20, 0x2af3, 0xf175, 0xcc62, 0x1, 0x1);
        gbc.writeMem(0xcc62, { 0x15 });
        gbc.writeMem(0xd2a7, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3f43);
        EXPECT(gbc.pc(), 0xd2a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc62), 0x15);
        EXPECT(gbc.readMem(0xd2a7), 0xcb);
        EXPECT(gbc.readMem(0xd2a8), 0xb6);
        // CB B6 02E1
        gbc.setState(0x2b9b, 0x475b, 0x9e60, 0xc01f, 0x3d8b, 0x7ec4, 0x1, 0x1);
        gbc.writeMem(0x2b9b, { 0xcb, 0xb6 });
        gbc.writeMem(0x7ec4, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x475b);
        EXPECT(gbc.pc(), 0x2b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 02E3
        gbc.setState(0xd87b, 0x85ac, 0x3d20, 0x862, 0x8785, 0x8433, 0x1, 0x0);
        gbc.writeMem(0x8433, { 0x5c });
        gbc.writeMem(0xd87b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x85ac);
        EXPECT(gbc.pc(), 0xd87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8433), 0x1c);
        EXPECT(gbc.readMem(0xd87b), 0xcb);
        EXPECT(gbc.readMem(0xd87c), 0xb6);
        // CB B6 02E4
        gbc.setState(0x4325, 0x3b09, 0xf540, 0x3372, 0xbbff, 0xeb4e, 0x0, 0x1);
        gbc.writeMem(0x4325, { 0xcb, 0xb6 });
        gbc.writeMem(0xeb4e, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3b09);
        EXPECT(gbc.pc(), 0x4327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb4e), 0xa5);
        // CB B6 02E5
        gbc.setState(0xa3d6, 0x34c3, 0xdcb0, 0x8734, 0xf1cf, 0x841d, 0x1, 0x0);
        gbc.writeMem(0x841d, { 0xb4 });
        gbc.writeMem(0xa3d6, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x34c3);
        EXPECT(gbc.pc(), 0xa3d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841d), 0xb4);
        EXPECT(gbc.readMem(0xa3d6), 0xcb);
        EXPECT(gbc.readMem(0xa3d7), 0xb6);
        // CB B6 02E7
        gbc.setState(0x6433, 0x3004, 0x1f80, 0x5b99, 0x7c26, 0x6ec0, 0x0, 0x0);
        gbc.writeMem(0x6433, { 0xcb, 0xb6 });
        gbc.writeMem(0x6ec0, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3004);
        EXPECT(gbc.pc(), 0x6435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 02E8
        gbc.setState(0xbf03, 0x9bb6, 0x1d00, 0x99dd, 0x2cb, 0x72eb, 0x0, 0x0);
        gbc.writeMem(0x72eb, { 0x8e });
        gbc.writeMem(0xbf03, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9bb6);
        EXPECT(gbc.pc(), 0xbf05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf03), 0xcb);
        EXPECT(gbc.readMem(0xbf04), 0xb6);
        // CB B6 02E9
        gbc.setState(0x4deb, 0xd561, 0xff40, 0x3641, 0x7c20, 0xeb02, 0x1, 0x0);
        gbc.writeMem(0x4deb, { 0xcb, 0xb6 });
        gbc.writeMem(0xeb02, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd561);
        EXPECT(gbc.pc(), 0x4ded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb02), 0x97);
        // CB B6 02EA
        gbc.setState(0x11dc, 0x6ef8, 0x3730, 0xeb62, 0xa34f, 0xaaae, 0x0, 0x0);
        gbc.writeMem(0x11dc, { 0xcb, 0xb6 });
        gbc.writeMem(0xaaae, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6ef8);
        EXPECT(gbc.pc(), 0x11de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaae), 0x16);
        // CB B6 02EC
        gbc.setState(0x170b, 0xd975, 0x1740, 0xbde6, 0x914c, 0x21e0, 0x1, 0x0);
        gbc.writeMem(0x170b, { 0xcb, 0xb6 });
        gbc.writeMem(0x21e0, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd975);
        EXPECT(gbc.pc(), 0x170d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 02EF
        gbc.setState(0x18cc, 0x1729, 0x63e0, 0x2ad0, 0xa52e, 0x9708, 0x1, 0x0);
        gbc.writeMem(0x18cc, { 0xcb, 0xb6 });
        gbc.writeMem(0x9708, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1729);
        EXPECT(gbc.pc(), 0x18ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9708), 0x92);
        // CB B6 02F0
        gbc.setState(0xcf70, 0x2839, 0x820, 0x1c31, 0x8800, 0xc074, 0x1, 0x0);
        gbc.writeMem(0xc074, { 0xa3 });
        gbc.writeMem(0xcf70, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2839);
        EXPECT(gbc.pc(), 0xcf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc074), 0xa3);
        EXPECT(gbc.readMem(0xcf70), 0xcb);
        EXPECT(gbc.readMem(0xcf71), 0xb6);
        // CB B6 02F1
        gbc.setState(0xc215, 0xcfe3, 0x250, 0x2cac, 0x7ad8, 0xbb59, 0x1, 0x1);
        gbc.writeMem(0xbb59, { 0x9f });
        gbc.writeMem(0xc215, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcfe3);
        EXPECT(gbc.pc(), 0xc217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb59), 0x9f);
        EXPECT(gbc.readMem(0xc215), 0xcb);
        EXPECT(gbc.readMem(0xc216), 0xb6);
        // CB B6 02F3
        gbc.setState(0x380e, 0x25be, 0x1f0, 0x4508, 0x21ea, 0xed06, 0x0, 0x1);
        gbc.writeMem(0x380e, { 0xcb, 0xb6 });
        gbc.writeMem(0xed06, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x25be);
        EXPECT(gbc.pc(), 0x3810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed06), 0x3c);
        // CB B6 02F5
        gbc.setState(0xc7b0, 0xbed6, 0xe660, 0x895c, 0x305a, 0x9382, 0x0, 0x0);
        gbc.writeMem(0x9382, { 0x41 });
        gbc.writeMem(0xc7b0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbed6);
        EXPECT(gbc.pc(), 0xc7b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9382), 0x1);
        EXPECT(gbc.readMem(0xc7b0), 0xcb);
        EXPECT(gbc.readMem(0xc7b1), 0xb6);
        // CB B6 02F8
        gbc.setState(0x6cca, 0xb650, 0xdd50, 0xb2a, 0x991, 0xb660, 0x1, 0x1);
        gbc.writeMem(0x6cca, { 0xcb, 0xb6 });
        gbc.writeMem(0xb660, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb650);
        EXPECT(gbc.pc(), 0x6ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb660), 0x3e);
        // CB B6 02FA
        gbc.setState(0xbf61, 0xf8a4, 0xe2b0, 0x6a47, 0x746, 0xa714, 0x0, 0x1);
        gbc.writeMem(0xa714, { 0xa2 });
        gbc.writeMem(0xbf61, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf8a4);
        EXPECT(gbc.pc(), 0xbf63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa714), 0xa2);
        EXPECT(gbc.readMem(0xbf61), 0xcb);
        EXPECT(gbc.readMem(0xbf62), 0xb6);
        // CB B6 02FB
        gbc.setState(0x48e4, 0x1ab6, 0x43b0, 0xb756, 0xb928, 0xff26, 0x1, 0x1);
        gbc.writeMem(0x48e4, { 0xcb, 0xb6 });
        gbc.writeMem(0xff26, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1ab6);
        EXPECT(gbc.pc(), 0x48e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff26), 0x17);
        // CB B6 02FD
        gbc.setState(0x1953, 0xb239, 0xb020, 0x8f21, 0xe252, 0xc2e3, 0x0, 0x1);
        gbc.writeMem(0x1953, { 0xcb, 0xb6 });
        gbc.writeMem(0xc2e3, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb239);
        EXPECT(gbc.pc(), 0x1955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e3), 0x9f);
        // CB B6 02FF
        gbc.setState(0x6e8e, 0x264b, 0x5160, 0x4641, 0x70f4, 0x28e0, 0x1, 0x1);
        gbc.writeMem(0x28e0, { 0x35 });
        gbc.writeMem(0x6e8e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x264b);
        EXPECT(gbc.pc(), 0x6e90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0300
        gbc.setState(0x5f7f, 0x6b81, 0x9ce0, 0x2699, 0x2993, 0xf5e, 0x0, 0x1);
        gbc.writeMem(0xf5e, { 0x33 });
        gbc.writeMem(0x5f7f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6b81);
        EXPECT(gbc.pc(), 0x5f81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0305
        gbc.setState(0x6236, 0x3132, 0x8800, 0xf30e, 0xddb1, 0x7faa, 0x1, 0x0);
        gbc.writeMem(0x6236, { 0xcb, 0xb6 });
        gbc.writeMem(0x7faa, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3132);
        EXPECT(gbc.pc(), 0x6238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0306
        gbc.setState(0x43a9, 0xaed3, 0x7890, 0x8d90, 0x897a, 0xa2e4, 0x0, 0x0);
        gbc.writeMem(0x43a9, { 0xcb, 0xb6 });
        gbc.writeMem(0xa2e4, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xaed3);
        EXPECT(gbc.pc(), 0x43ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e4), 0xf);
        // CB B6 0307
        gbc.setState(0xa72f, 0x75ac, 0xcf70, 0xa834, 0x4809, 0x249d, 0x0, 0x0);
        gbc.writeMem(0x249d, { 0x83 });
        gbc.writeMem(0xa72f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x75ac);
        EXPECT(gbc.pc(), 0xa731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa72f), 0xcb);
        EXPECT(gbc.readMem(0xa730), 0xb6);
        // CB B6 0308
        gbc.setState(0xa699, 0x232c, 0x5bf0, 0xa6ad, 0xf0bb, 0x4fc2, 0x0, 0x1);
        gbc.writeMem(0x4fc2, { 0xa7 });
        gbc.writeMem(0xa699, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x232c);
        EXPECT(gbc.pc(), 0xa69b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa699), 0xcb);
        EXPECT(gbc.readMem(0xa69a), 0xb6);
        // CB B6 0309
        gbc.setState(0x5c1, 0xc0ae, 0x84b0, 0x75ae, 0xe3a, 0xd563, 0x1, 0x1);
        gbc.writeMem(0x5c1, { 0xcb, 0xb6 });
        gbc.writeMem(0xd563, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc0ae);
        EXPECT(gbc.pc(), 0x5c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd563), 0x19);
        // CB B6 030A
        gbc.setState(0x6813, 0xad25, 0x1a00, 0x5173, 0xf1f4, 0x2583, 0x1, 0x1);
        gbc.writeMem(0x2583, { 0xb2 });
        gbc.writeMem(0x6813, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xad25);
        EXPECT(gbc.pc(), 0x6815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 030B
        gbc.setState(0x91cd, 0xa3e6, 0xea70, 0x9191, 0x193d, 0xc05a, 0x1, 0x1);
        gbc.writeMem(0x91cd, { 0xcb, 0xb6 });
        gbc.writeMem(0xc05a, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa3e6);
        EXPECT(gbc.pc(), 0x91cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91cd), 0xcb);
        EXPECT(gbc.readMem(0x91ce), 0xb6);
        EXPECT(gbc.readMem(0xc05a), 0x26);
        // CB B6 030C
        gbc.setState(0x44e9, 0xaaac, 0xf410, 0xec89, 0xec88, 0xcc5, 0x0, 0x0);
        gbc.writeMem(0xcc5, { 0x2e });
        gbc.writeMem(0x44e9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xaaac);
        EXPECT(gbc.pc(), 0x44eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 030D
        gbc.setState(0xe2da, 0x614, 0xe890, 0x8e29, 0x1e64, 0xa1b6, 0x0, 0x0);
        gbc.writeMem(0xa1b6, { 0xc0 });
        gbc.writeMem(0xe2da, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x614);
        EXPECT(gbc.pc(), 0xe2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b6), 0x80);
        EXPECT(gbc.readMem(0xe2da), 0xcb);
        EXPECT(gbc.readMem(0xe2db), 0xb6);
        // CB B6 030E
        gbc.setState(0xe971, 0x8193, 0x33f0, 0x4805, 0xa43f, 0x2d7a, 0x1, 0x0);
        gbc.writeMem(0x2d7a, { 0x8a });
        gbc.writeMem(0xe971, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8193);
        EXPECT(gbc.pc(), 0xe973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe971), 0xcb);
        EXPECT(gbc.readMem(0xe972), 0xb6);
        // CB B6 030F
        gbc.setState(0x3e4d, 0xfedf, 0x4560, 0x21cb, 0xb260, 0x67e3, 0x1, 0x0);
        gbc.writeMem(0x3e4d, { 0xcb, 0xb6 });
        gbc.writeMem(0x67e3, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfedf);
        EXPECT(gbc.pc(), 0x3e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0310
        gbc.setState(0xbbb1, 0x4de3, 0xa3d0, 0xb11b, 0xf4cf, 0xd1a5, 0x0, 0x0);
        gbc.writeMem(0xbbb1, { 0xcb, 0xb6 });
        gbc.writeMem(0xd1a5, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4de3);
        EXPECT(gbc.pc(), 0xbbb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb1), 0xcb);
        EXPECT(gbc.readMem(0xbbb2), 0xb6);
        EXPECT(gbc.readMem(0xd1a5), 0x2d);
        // CB B6 0311
        gbc.setState(0xdafc, 0x9693, 0xc7d0, 0x7b84, 0xf45d, 0x822f, 0x0, 0x0);
        gbc.writeMem(0x822f, { 0xf6 });
        gbc.writeMem(0xdafc, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9693);
        EXPECT(gbc.pc(), 0xdafe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822f), 0xb6);
        EXPECT(gbc.readMem(0xdafc), 0xcb);
        EXPECT(gbc.readMem(0xdafd), 0xb6);
        // CB B6 0313
        gbc.setState(0x5657, 0xba4f, 0xb4a0, 0xbc80, 0x1e25, 0xe7f7, 0x1, 0x1);
        gbc.writeMem(0x5657, { 0xcb, 0xb6 });
        gbc.writeMem(0xe7f7, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xba4f);
        EXPECT(gbc.pc(), 0x5659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f7), 0xb);
        // CB B6 0314
        gbc.setState(0x6100, 0xb2b5, 0xb9b0, 0xdf02, 0x4de2, 0x8f4f, 0x0, 0x1);
        gbc.writeMem(0x6100, { 0xcb, 0xb6 });
        gbc.writeMem(0x8f4f, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb2b5);
        EXPECT(gbc.pc(), 0x6102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f4f), 0x19);
        // CB B6 0317
        gbc.setState(0xe7fb, 0xa407, 0x8f10, 0x949b, 0x34fa, 0x4dc6, 0x0, 0x0);
        gbc.writeMem(0x4dc6, { 0x10 });
        gbc.writeMem(0xe7fb, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa407);
        EXPECT(gbc.pc(), 0xe7fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7fb), 0xcb);
        EXPECT(gbc.readMem(0xe7fc), 0xb6);
        // CB B6 031A
        gbc.setState(0x4381, 0xff73, 0xdaa0, 0x9f40, 0xc25, 0xbfa7, 0x0, 0x0);
        gbc.writeMem(0x4381, { 0xcb, 0xb6 });
        gbc.writeMem(0xbfa7, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xff73);
        EXPECT(gbc.pc(), 0x4383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfa7), 0x83);
        // CB B6 031C
        gbc.setState(0x8a6a, 0x538f, 0x3910, 0x66f7, 0x5a24, 0xcff3, 0x1, 0x1);
        gbc.writeMem(0x8a6a, { 0xcb, 0xb6 });
        gbc.writeMem(0xcff3, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x538f);
        EXPECT(gbc.pc(), 0x8a6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a6a), 0xcb);
        EXPECT(gbc.readMem(0x8a6b), 0xb6);
        EXPECT(gbc.readMem(0xcff3), 0x1b);
        // CB B6 031E
        gbc.setState(0x52ca, 0x94d6, 0xec60, 0x70b8, 0x65b0, 0x34c9, 0x1, 0x1);
        gbc.writeMem(0x34c9, { 0x1c });
        gbc.writeMem(0x52ca, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x94d6);
        EXPECT(gbc.pc(), 0x52cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0320
        gbc.setState(0x406f, 0x824b, 0xac60, 0xf529, 0x2be7, 0xae91, 0x1, 0x0);
        gbc.writeMem(0x406f, { 0xcb, 0xb6 });
        gbc.writeMem(0xae91, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x824b);
        EXPECT(gbc.pc(), 0x4071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae91), 0x18);
        // CB B6 0322
        gbc.setState(0xce38, 0x1d70, 0x8230, 0xce97, 0xbcc, 0xa0b7, 0x0, 0x0);
        gbc.writeMem(0xa0b7, { 0x57 });
        gbc.writeMem(0xce38, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1d70);
        EXPECT(gbc.pc(), 0xce3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0b7), 0x17);
        EXPECT(gbc.readMem(0xce38), 0xcb);
        EXPECT(gbc.readMem(0xce39), 0xb6);
        // CB B6 0323
        gbc.setState(0xd1ba, 0x960e, 0xbc20, 0x4384, 0x1bb9, 0xef1b, 0x0, 0x0);
        gbc.writeMem(0xd1ba, { 0xcb, 0xb6 });
        gbc.writeMem(0xef1b, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x960e);
        EXPECT(gbc.pc(), 0xd1bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ba), 0xcb);
        EXPECT(gbc.readMem(0xd1bb), 0xb6);
        EXPECT(gbc.readMem(0xef1b), 0x82);
        // CB B6 0324
        gbc.setState(0xede, 0x40ae, 0x83b0, 0x80a0, 0xb10c, 0xddc7, 0x1, 0x1);
        gbc.writeMem(0xede, { 0xcb, 0xb6 });
        gbc.writeMem(0xddc7, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x40ae);
        EXPECT(gbc.pc(), 0xee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddc7), 0x22);
        // CB B6 0325
        gbc.setState(0x52b2, 0x8bed, 0x7a0, 0xdd2f, 0x2373, 0xe65f, 0x0, 0x1);
        gbc.writeMem(0x52b2, { 0xcb, 0xb6 });
        gbc.writeMem(0xe65f, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8bed);
        EXPECT(gbc.pc(), 0x52b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe65f), 0x39);
        // CB B6 0328
        gbc.setState(0xd7d1, 0x34b3, 0xc710, 0x381e, 0x2e56, 0x79cb, 0x1, 0x0);
        gbc.writeMem(0x79cb, { 0x4 });
        gbc.writeMem(0xd7d1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x34b3);
        EXPECT(gbc.pc(), 0xd7d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d1), 0xcb);
        EXPECT(gbc.readMem(0xd7d2), 0xb6);
        // CB B6 0329
        gbc.setState(0xb077, 0xc1a8, 0xe870, 0x9082, 0x2b46, 0x5184, 0x1, 0x0);
        gbc.writeMem(0x5184, { 0x3 });
        gbc.writeMem(0xb077, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc1a8);
        EXPECT(gbc.pc(), 0xb079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb077), 0xcb);
        EXPECT(gbc.readMem(0xb078), 0xb6);
        // CB B6 032B
        gbc.setState(0x5c9e, 0x4cd8, 0xf6c0, 0x1901, 0xfda2, 0x545e, 0x0, 0x0);
        gbc.writeMem(0x545e, { 0x98 });
        gbc.writeMem(0x5c9e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4cd8);
        EXPECT(gbc.pc(), 0x5ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 032D
        gbc.setState(0x29b3, 0x3ed5, 0xc7a0, 0x10d0, 0x29a6, 0x4f84, 0x1, 0x1);
        gbc.writeMem(0x29b3, { 0xcb, 0xb6 });
        gbc.writeMem(0x4f84, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3ed5);
        EXPECT(gbc.pc(), 0x29b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 032E
        gbc.setState(0x46b5, 0x479a, 0x4c70, 0x90b9, 0x4f31, 0x575a, 0x1, 0x1);
        gbc.writeMem(0x46b5, { 0xcb, 0xb6 });
        gbc.writeMem(0x575a, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x479a);
        EXPECT(gbc.pc(), 0x46b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 032F
        gbc.setState(0x6872, 0x56f5, 0x2aa0, 0x7de8, 0x16db, 0xa627, 0x0, 0x0);
        gbc.writeMem(0x6872, { 0xcb, 0xb6 });
        gbc.writeMem(0xa627, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x56f5);
        EXPECT(gbc.pc(), 0x6874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa627), 0xa);
        // CB B6 0330
        gbc.setState(0x6abe, 0x76a1, 0xb670, 0x3ede, 0xb5e3, 0xd6a7, 0x0, 0x1);
        gbc.writeMem(0x6abe, { 0xcb, 0xb6 });
        gbc.writeMem(0xd6a7, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x76a1);
        EXPECT(gbc.pc(), 0x6ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a7), 0x39);
        // CB B6 0334
        gbc.setState(0x410d, 0x1546, 0xec80, 0x9511, 0x319d, 0xb4db, 0x1, 0x0);
        gbc.writeMem(0x410d, { 0xcb, 0xb6 });
        gbc.writeMem(0xb4db, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1546);
        EXPECT(gbc.pc(), 0x410f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4db), 0x2);
        // CB B6 0337
        gbc.setState(0x1bd8, 0x43eb, 0x82d0, 0x31a, 0x6be2, 0x34b2, 0x1, 0x0);
        gbc.writeMem(0x1bd8, { 0xcb, 0xb6 });
        gbc.writeMem(0x34b2, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x43eb);
        EXPECT(gbc.pc(), 0x1bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0339
        gbc.setState(0x2db8, 0x273e, 0x6530, 0x2d8d, 0x6804, 0x48f6, 0x1, 0x0);
        gbc.writeMem(0x2db8, { 0xcb, 0xb6 });
        gbc.writeMem(0x48f6, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x273e);
        EXPECT(gbc.pc(), 0x2dba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 033A
        gbc.setState(0x8bc, 0x9399, 0xe240, 0x88, 0xf975, 0x35d2, 0x1, 0x0);
        gbc.writeMem(0x8bc, { 0xcb, 0xb6 });
        gbc.writeMem(0x35d2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9399);
        EXPECT(gbc.pc(), 0x8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 033C
        gbc.setState(0xd078, 0x7e88, 0xd010, 0xf1d4, 0xd2f4, 0xdd65, 0x0, 0x1);
        gbc.writeMem(0xd078, { 0xcb, 0xb6 });
        gbc.writeMem(0xdd65, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7e88);
        EXPECT(gbc.pc(), 0xd07a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd078), 0xcb);
        EXPECT(gbc.readMem(0xd079), 0xb6);
        EXPECT(gbc.readMem(0xdd65), 0xb0);
        // CB B6 033D
        gbc.setState(0x12a8, 0x6c83, 0x7700, 0x6d4b, 0xecc4, 0x4178, 0x1, 0x0);
        gbc.writeMem(0x12a8, { 0xcb, 0xb6 });
        gbc.writeMem(0x4178, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6c83);
        EXPECT(gbc.pc(), 0x12aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 033F
        gbc.setState(0x8fcf, 0xb831, 0x7740, 0xee36, 0x5e42, 0x6b51, 0x1, 0x0);
        gbc.writeMem(0x6b51, { 0xb5 });
        gbc.writeMem(0x8fcf, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb831);
        EXPECT(gbc.pc(), 0x8fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fcf), 0xcb);
        EXPECT(gbc.readMem(0x8fd0), 0xb6);
        // CB B6 0342
        gbc.setState(0x1416, 0xd7a2, 0xaed0, 0xb71d, 0xc868, 0x1b76, 0x1, 0x1);
        gbc.writeMem(0x1416, { 0xcb, 0xb6 });
        gbc.writeMem(0x1b76, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd7a2);
        EXPECT(gbc.pc(), 0x1418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0343
        gbc.setState(0x9322, 0xb7c1, 0xa80, 0xda28, 0x867a, 0x4d2c, 0x1, 0x0);
        gbc.writeMem(0x4d2c, { 0x32 });
        gbc.writeMem(0x9322, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb7c1);
        EXPECT(gbc.pc(), 0x9324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9322), 0xcb);
        EXPECT(gbc.readMem(0x9323), 0xb6);
        // CB B6 0344
        gbc.setState(0x6b75, 0x36d4, 0xad00, 0x8100, 0xbdc5, 0x35d2, 0x0, 0x1);
        gbc.writeMem(0x35d2, { 0x2a });
        gbc.writeMem(0x6b75, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x36d4);
        EXPECT(gbc.pc(), 0x6b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0346
        gbc.setState(0xbd96, 0x171f, 0x5e20, 0xb706, 0x9f9d, 0xc1d3, 0x1, 0x0);
        gbc.writeMem(0xbd96, { 0xcb, 0xb6 });
        gbc.writeMem(0xc1d3, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x171f);
        EXPECT(gbc.pc(), 0xbd98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd96), 0xcb);
        EXPECT(gbc.readMem(0xbd97), 0xb6);
        EXPECT(gbc.readMem(0xc1d3), 0xd);
        // CB B6 0347
        gbc.setState(0xe181, 0xf3c5, 0x72c0, 0xbc8, 0xe0f7, 0x4a57, 0x0, 0x1);
        gbc.writeMem(0x4a57, { 0xab });
        gbc.writeMem(0xe181, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf3c5);
        EXPECT(gbc.pc(), 0xe183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe181), 0xcb);
        EXPECT(gbc.readMem(0xe182), 0xb6);
        // CB B6 0348
        gbc.setState(0x5ef9, 0x8383, 0x93c0, 0xc32b, 0x2082, 0xa836, 0x0, 0x1);
        gbc.writeMem(0x5ef9, { 0xcb, 0xb6 });
        gbc.writeMem(0xa836, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8383);
        EXPECT(gbc.pc(), 0x5efb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa836), 0x83);
        // CB B6 0349
        gbc.setState(0x71b5, 0xca42, 0xf2a0, 0x5492, 0x8351, 0xecb1, 0x1, 0x1);
        gbc.writeMem(0x71b5, { 0xcb, 0xb6 });
        gbc.writeMem(0xecb1, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xca42);
        EXPECT(gbc.pc(), 0x71b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecb1), 0x3d);
        // CB B6 034A
        gbc.setState(0xbeb0, 0x113f, 0xa610, 0xf69a, 0xec38, 0xaa48, 0x0, 0x1);
        gbc.writeMem(0xaa48, { 0xd5 });
        gbc.writeMem(0xbeb0, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x113f);
        EXPECT(gbc.pc(), 0xbeb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa48), 0x95);
        EXPECT(gbc.readMem(0xbeb0), 0xcb);
        EXPECT(gbc.readMem(0xbeb1), 0xb6);
        // CB B6 034C
        gbc.setState(0xc19c, 0x1379, 0xaab0, 0xed7c, 0x9662, 0x8a3f, 0x0, 0x0);
        gbc.writeMem(0x8a3f, { 0x79 });
        gbc.writeMem(0xc19c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1379);
        EXPECT(gbc.pc(), 0xc19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3f), 0x39);
        EXPECT(gbc.readMem(0xc19c), 0xcb);
        EXPECT(gbc.readMem(0xc19d), 0xb6);
        // CB B6 034D
        gbc.setState(0x7431, 0xf3ce, 0x9190, 0x7c93, 0x6959, 0xac0c, 0x1, 0x0);
        gbc.writeMem(0x7431, { 0xcb, 0xb6 });
        gbc.writeMem(0xac0c, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf3ce);
        EXPECT(gbc.pc(), 0x7433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0c), 0x6);
        // CB B6 0351
        gbc.setState(0x49d5, 0xef7c, 0xed0, 0xba92, 0x4a6a, 0x6a2, 0x1, 0x1);
        gbc.writeMem(0x6a2, { 0x6 });
        gbc.writeMem(0x49d5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xef7c);
        EXPECT(gbc.pc(), 0x49d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0352
        gbc.setState(0x542b, 0x3790, 0x82e0, 0xba8c, 0x4903, 0x95fe, 0x1, 0x0);
        gbc.writeMem(0x542b, { 0xcb, 0xb6 });
        gbc.writeMem(0x95fe, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3790);
        EXPECT(gbc.pc(), 0x542d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95fe), 0xb0);
        // CB B6 0354
        gbc.setState(0xed96, 0xea67, 0xc840, 0x64f3, 0xf34, 0x4c40, 0x0, 0x0);
        gbc.writeMem(0x4c40, { 0x38 });
        gbc.writeMem(0xed96, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xea67);
        EXPECT(gbc.pc(), 0xed98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed96), 0xcb);
        EXPECT(gbc.readMem(0xed97), 0xb6);
        // CB B6 0356
        gbc.setState(0x5d3a, 0x6391, 0xb2f0, 0xe83b, 0x16c5, 0xacd4, 0x1, 0x1);
        gbc.writeMem(0x5d3a, { 0xcb, 0xb6 });
        gbc.writeMem(0xacd4, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6391);
        EXPECT(gbc.pc(), 0x5d3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacd4), 0xbb);
        // CB B6 0357
        gbc.setState(0x37b3, 0xf33f, 0xb480, 0xfdfb, 0x221a, 0x7943, 0x1, 0x1);
        gbc.writeMem(0x37b3, { 0xcb, 0xb6 });
        gbc.writeMem(0x7943, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf33f);
        EXPECT(gbc.pc(), 0x37b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0358
        gbc.setState(0x8f30, 0x37dd, 0xa870, 0x4473, 0x419b, 0xddd3, 0x0, 0x1);
        gbc.writeMem(0x8f30, { 0xcb, 0xb6 });
        gbc.writeMem(0xddd3, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x37dd);
        EXPECT(gbc.pc(), 0x8f32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f30), 0xcb);
        EXPECT(gbc.readMem(0x8f31), 0xb6);
        EXPECT(gbc.readMem(0xddd3), 0xc);
        // CB B6 035A
        gbc.setState(0xa1d4, 0x2ea1, 0x4930, 0xb9c7, 0xf1d7, 0xd96c, 0x1, 0x1);
        gbc.writeMem(0xa1d4, { 0xcb, 0xb6 });
        gbc.writeMem(0xd96c, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2ea1);
        EXPECT(gbc.pc(), 0xa1d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d4), 0xcb);
        EXPECT(gbc.readMem(0xa1d5), 0xb6);
        EXPECT(gbc.readMem(0xd96c), 0xb4);
        // CB B6 035C
        gbc.setState(0xa0f7, 0x8cdc, 0x7c10, 0x7831, 0xd4be, 0xbd91, 0x0, 0x1);
        gbc.writeMem(0xa0f7, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd91, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8cdc);
        EXPECT(gbc.pc(), 0xa0f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f7), 0xcb);
        EXPECT(gbc.readMem(0xa0f8), 0xb6);
        EXPECT(gbc.readMem(0xbd91), 0xb1);
        // CB B6 035D
        gbc.setState(0x397c, 0x1dea, 0x82d0, 0x6b52, 0x8a11, 0xefff, 0x1, 0x1);
        gbc.writeMem(0x397c, { 0xcb, 0xb6 });
        gbc.writeMem(0xefff, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1dea);
        EXPECT(gbc.pc(), 0x397e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefff), 0x3e);
        // CB B6 035E
        gbc.setState(0xd289, 0xc8f, 0x3370, 0xe336, 0xc168, 0x27fc, 0x0, 0x1);
        gbc.writeMem(0x27fc, { 0xb1 });
        gbc.writeMem(0xd289, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc8f);
        EXPECT(gbc.pc(), 0xd28b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd289), 0xcb);
        EXPECT(gbc.readMem(0xd28a), 0xb6);
        // CB B6 035F
        gbc.setState(0x5ef0, 0xa01d, 0xc4f0, 0x4963, 0x366f, 0xf8d6, 0x1, 0x1);
        gbc.writeMem(0x5ef0, { 0xcb, 0xb6 });
        gbc.writeMem(0xf8d6, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa01d);
        EXPECT(gbc.pc(), 0x5ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf8d6), 0x17);
        // CB B6 0360
        gbc.setState(0x745d, 0x4ef3, 0x7c40, 0xe60e, 0x752a, 0xe8c8, 0x0, 0x0);
        gbc.writeMem(0x745d, { 0xcb, 0xb6 });
        gbc.writeMem(0xe8c8, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4ef3);
        EXPECT(gbc.pc(), 0x745f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c8), 0x8a);
        // CB B6 0361
        gbc.setState(0xb6ae, 0xc303, 0x34a0, 0x9f3, 0x530a, 0x9d8a, 0x1, 0x1);
        gbc.writeMem(0x9d8a, { 0xc5 });
        gbc.writeMem(0xb6ae, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc303);
        EXPECT(gbc.pc(), 0xb6b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d8a), 0x85);
        EXPECT(gbc.readMem(0xb6ae), 0xcb);
        EXPECT(gbc.readMem(0xb6af), 0xb6);
        // CB B6 0362
        gbc.setState(0x96f5, 0x3345, 0x2da0, 0x313e, 0x6b4c, 0x756c, 0x1, 0x1);
        gbc.writeMem(0x756c, { 0xac });
        gbc.writeMem(0x96f5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3345);
        EXPECT(gbc.pc(), 0x96f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96f5), 0xcb);
        EXPECT(gbc.readMem(0x96f6), 0xb6);
        // CB B6 0363
        gbc.setState(0x956e, 0x5ff4, 0x9d80, 0xcd20, 0xe6c0, 0xc431, 0x0, 0x0);
        gbc.writeMem(0x956e, { 0xcb, 0xb6 });
        gbc.writeMem(0xc431, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5ff4);
        EXPECT(gbc.pc(), 0x9570);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x956e), 0xcb);
        EXPECT(gbc.readMem(0x956f), 0xb6);
        EXPECT(gbc.readMem(0xc431), 0xb6);
        // CB B6 0364
        gbc.setState(0x9993, 0xc045, 0xed20, 0xac66, 0xfcd4, 0xd454, 0x1, 0x0);
        gbc.writeMem(0x9993, { 0xcb, 0xb6 });
        gbc.writeMem(0xd454, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc045);
        EXPECT(gbc.pc(), 0x9995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9993), 0xcb);
        EXPECT(gbc.readMem(0x9994), 0xb6);
        EXPECT(gbc.readMem(0xd454), 0x2);
        // CB B6 0365
        gbc.setState(0xafb8, 0xb05e, 0x2120, 0x4e92, 0x3438, 0x54d8, 0x0, 0x1);
        gbc.writeMem(0x54d8, { 0x2e });
        gbc.writeMem(0xafb8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb05e);
        EXPECT(gbc.pc(), 0xafba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb8), 0xcb);
        EXPECT(gbc.readMem(0xafb9), 0xb6);
        // CB B6 0366
        gbc.setState(0x302e, 0x7f40, 0x3ed0, 0x3ec7, 0xffbe, 0x96e5, 0x1, 0x0);
        gbc.writeMem(0x302e, { 0xcb, 0xb6 });
        gbc.writeMem(0x96e5, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7f40);
        EXPECT(gbc.pc(), 0x3030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e5), 0x16);
        // CB B6 0368
        gbc.setState(0x7602, 0x422b, 0x6000, 0xf501, 0x9753, 0xcb51, 0x1, 0x1);
        gbc.writeMem(0x7602, { 0xcb, 0xb6 });
        gbc.writeMem(0xcb51, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x422b);
        EXPECT(gbc.pc(), 0x7604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb51), 0x86);
        // CB B6 0369
        gbc.setState(0xb852, 0xc835, 0x8a80, 0x7062, 0xb840, 0x67c0, 0x0, 0x0);
        gbc.writeMem(0x67c0, { 0x1 });
        gbc.writeMem(0xb852, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc835);
        EXPECT(gbc.pc(), 0xb854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb852), 0xcb);
        EXPECT(gbc.readMem(0xb853), 0xb6);
        // CB B6 036C
        gbc.setState(0x383d, 0xf480, 0xa180, 0x7f2d, 0x6152, 0x6bb0, 0x1, 0x1);
        gbc.writeMem(0x383d, { 0xcb, 0xb6 });
        gbc.writeMem(0x6bb0, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf480);
        EXPECT(gbc.pc(), 0x383f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 036E
        gbc.setState(0x7adc, 0x53aa, 0x7050, 0x5e77, 0xaa76, 0x916, 0x1, 0x1);
        gbc.writeMem(0x916, { 0x26 });
        gbc.writeMem(0x7adc, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x53aa);
        EXPECT(gbc.pc(), 0x7ade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 036F
        gbc.setState(0x969f, 0x478c, 0x9f10, 0x3dc4, 0x1a7e, 0x884e, 0x0, 0x1);
        gbc.writeMem(0x884e, { 0xe7 });
        gbc.writeMem(0x969f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x478c);
        EXPECT(gbc.pc(), 0x96a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884e), 0xa7);
        EXPECT(gbc.readMem(0x969f), 0xcb);
        EXPECT(gbc.readMem(0x96a0), 0xb6);
        // CB B6 0370
        gbc.setState(0xb39, 0x9625, 0xe830, 0x72a4, 0x6d11, 0x6c19, 0x1, 0x1);
        gbc.writeMem(0xb39, { 0xcb, 0xb6 });
        gbc.writeMem(0x6c19, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9625);
        EXPECT(gbc.pc(), 0xb3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0371
        gbc.setState(0xebcb, 0xa7b4, 0xbad0, 0x356f, 0xc613, 0xcbdf, 0x0, 0x1);
        gbc.writeMem(0xcbdf, { 0xcf });
        gbc.writeMem(0xebcb, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa7b4);
        EXPECT(gbc.pc(), 0xebcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbdf), 0x8f);
        EXPECT(gbc.readMem(0xebcb), 0xcb);
        EXPECT(gbc.readMem(0xebcc), 0xb6);
        // CB B6 0372
        gbc.setState(0x7be9, 0xfe36, 0x82b0, 0x674d, 0xbd26, 0x5476, 0x1, 0x1);
        gbc.writeMem(0x5476, { 0x5 });
        gbc.writeMem(0x7be9, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfe36);
        EXPECT(gbc.pc(), 0x7beb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0373
        gbc.setState(0xc018, 0x1dd3, 0x67d0, 0x4c3b, 0x7c53, 0x7574, 0x0, 0x1);
        gbc.writeMem(0x7574, { 0x3d });
        gbc.writeMem(0xc018, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1dd3);
        EXPECT(gbc.pc(), 0xc01a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc018), 0xcb);
        EXPECT(gbc.readMem(0xc019), 0xb6);
        // CB B6 0374
        gbc.setState(0x113a, 0x9095, 0x3cc0, 0x3f69, 0x52b4, 0xb861, 0x1, 0x0);
        gbc.writeMem(0x113a, { 0xcb, 0xb6 });
        gbc.writeMem(0xb861, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9095);
        EXPECT(gbc.pc(), 0x113c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb861), 0x36);
        // CB B6 0375
        gbc.setState(0x75d9, 0xc597, 0x6aa0, 0x1d7, 0xe061, 0x8d5f, 0x0, 0x0);
        gbc.writeMem(0x75d9, { 0xcb, 0xb6 });
        gbc.writeMem(0x8d5f, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc597);
        EXPECT(gbc.pc(), 0x75db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5f), 0x21);
        // CB B6 0376
        gbc.setState(0xa3df, 0xbc9, 0xb7b0, 0x76a7, 0x2665, 0x4fbf, 0x1, 0x0);
        gbc.writeMem(0x4fbf, { 0x2e });
        gbc.writeMem(0xa3df, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbc9);
        EXPECT(gbc.pc(), 0xa3e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3df), 0xcb);
        EXPECT(gbc.readMem(0xa3e0), 0xb6);
        // CB B6 0377
        gbc.setState(0x1abb, 0x1170, 0xfca0, 0xc3d, 0x84f2, 0xbd65, 0x0, 0x1);
        gbc.writeMem(0x1abb, { 0xcb, 0xb6 });
        gbc.writeMem(0xbd65, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1170);
        EXPECT(gbc.pc(), 0x1abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd65), 0xbc);
        // CB B6 0378
        gbc.setState(0xdbea, 0xed34, 0x7010, 0x247a, 0xae68, 0x91da, 0x1, 0x0);
        gbc.writeMem(0x91da, { 0xdb });
        gbc.writeMem(0xdbea, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xed34);
        EXPECT(gbc.pc(), 0xdbec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91da), 0x9b);
        EXPECT(gbc.readMem(0xdbea), 0xcb);
        EXPECT(gbc.readMem(0xdbeb), 0xb6);
        // CB B6 0379
        gbc.setState(0x5cf9, 0xfdee, 0x5730, 0x3a9a, 0x75d7, 0x8e48, 0x0, 0x1);
        gbc.writeMem(0x5cf9, { 0xcb, 0xb6 });
        gbc.writeMem(0x8e48, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfdee);
        EXPECT(gbc.pc(), 0x5cfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e48), 0x3a);
        // CB B6 037A
        gbc.setState(0xa471, 0x477, 0xb500, 0x96f4, 0x7ac, 0xb7c7, 0x1, 0x1);
        gbc.writeMem(0xa471, { 0xcb, 0xb6 });
        gbc.writeMem(0xb7c7, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x477);
        EXPECT(gbc.pc(), 0xa473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa471), 0xcb);
        EXPECT(gbc.readMem(0xa472), 0xb6);
        EXPECT(gbc.readMem(0xb7c7), 0x2d);
        // CB B6 037B
        gbc.setState(0x11f1, 0xa021, 0xa00, 0xdad2, 0xc253, 0x5bcb, 0x0, 0x0);
        gbc.writeMem(0x11f1, { 0xcb, 0xb6 });
        gbc.writeMem(0x5bcb, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa021);
        EXPECT(gbc.pc(), 0x11f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 037C
        gbc.setState(0xe69e, 0x469d, 0xa450, 0xcbb6, 0xa081, 0x4ce, 0x1, 0x0);
        gbc.writeMem(0x4ce, { 0xbb });
        gbc.writeMem(0xe69e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x469d);
        EXPECT(gbc.pc(), 0xe6a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe69e), 0xcb);
        EXPECT(gbc.readMem(0xe69f), 0xb6);
        // CB B6 037E
        gbc.setState(0x818e, 0x4c42, 0x5df0, 0xd56a, 0x3ebd, 0x9eb0, 0x0, 0x0);
        gbc.writeMem(0x818e, { 0xcb, 0xb6 });
        gbc.writeMem(0x9eb0, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4c42);
        EXPECT(gbc.pc(), 0x8190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x818e), 0xcb);
        EXPECT(gbc.readMem(0x818f), 0xb6);
        EXPECT(gbc.readMem(0x9eb0), 0x93);
        // CB B6 037F
        gbc.setState(0x4c3, 0x8046, 0xa170, 0x5eca, 0x58c2, 0xfa79, 0x1, 0x1);
        gbc.writeMem(0x4c3, { 0xcb, 0xb6 });
        gbc.writeMem(0xfa79, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8046);
        EXPECT(gbc.pc(), 0x4c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa79), 0x94);
        // CB B6 0381
        gbc.setState(0x556e, 0x80b8, 0x5730, 0xae50, 0x8c92, 0xff5c, 0x1, 0x0);
        gbc.writeMem(0x556e, { 0xcb, 0xb6 });
        gbc.writeMem(0xff5c, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x80b8);
        EXPECT(gbc.pc(), 0x5570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff5c), 0x83);
        // CB B6 0382
        gbc.setState(0x5e68, 0xd67, 0x5200, 0x36a5, 0x2afa, 0x6cf0, 0x1, 0x0);
        gbc.writeMem(0x5e68, { 0xcb, 0xb6 });
        gbc.writeMem(0x6cf0, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd67);
        EXPECT(gbc.pc(), 0x5e6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0383
        gbc.setState(0x768c, 0x23b2, 0xdbb0, 0x9388, 0x43ff, 0x37fa, 0x0, 0x1);
        gbc.writeMem(0x37fa, { 0xad });
        gbc.writeMem(0x768c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x23b2);
        EXPECT(gbc.pc(), 0x768e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0384
        gbc.setState(0x5b48, 0x7445, 0xda0, 0x9aec, 0xe069, 0x5e12, 0x0, 0x0);
        gbc.writeMem(0x5b48, { 0xcb, 0xb6 });
        gbc.writeMem(0x5e12, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7445);
        EXPECT(gbc.pc(), 0x5b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 0385
        gbc.setState(0x5230, 0xa28d, 0x1ed0, 0x7e56, 0x18c3, 0x94e4, 0x0, 0x0);
        gbc.writeMem(0x5230, { 0xcb, 0xb6 });
        gbc.writeMem(0x94e4, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa28d);
        EXPECT(gbc.pc(), 0x5232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94e4), 0x2b);
        // CB B6 0387
        gbc.setState(0xcf12, 0x518c, 0xfdb0, 0x92ad, 0x5b3b, 0x6ad4, 0x1, 0x1);
        gbc.writeMem(0x6ad4, { 0x20 });
        gbc.writeMem(0xcf12, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x518c);
        EXPECT(gbc.pc(), 0xcf14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf12), 0xcb);
        EXPECT(gbc.readMem(0xcf13), 0xb6);
        // CB B6 0388
        gbc.setState(0x9549, 0x620, 0xd170, 0x48a, 0xaaeb, 0x8f, 0x1, 0x1);
        gbc.writeMem(0x8f, { 0x1 });
        gbc.writeMem(0x9549, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x620);
        EXPECT(gbc.pc(), 0x954b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9549), 0xcb);
        EXPECT(gbc.readMem(0x954a), 0xb6);
        // CB B6 0389
        gbc.setState(0xd12c, 0x61ad, 0xce70, 0xd9c, 0x96e4, 0x3c91, 0x0, 0x0);
        gbc.writeMem(0x3c91, { 0xbf });
        gbc.writeMem(0xd12c, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x61ad);
        EXPECT(gbc.pc(), 0xd12e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd12c), 0xcb);
        EXPECT(gbc.readMem(0xd12d), 0xb6);
        // CB B6 038E
        gbc.setState(0xed2e, 0xf40, 0xf4b0, 0xe433, 0x145a, 0x9df7, 0x0, 0x1);
        gbc.writeMem(0x9df7, { 0x40 });
        gbc.writeMem(0xed2e, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf40);
        EXPECT(gbc.pc(), 0xed30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df7), 0x0);
        EXPECT(gbc.readMem(0xed2e), 0xcb);
        EXPECT(gbc.readMem(0xed2f), 0xb6);
        // CB B6 038F
        gbc.setState(0xb184, 0xef4b, 0x510, 0x920f, 0x478d, 0xca1a, 0x0, 0x0);
        gbc.writeMem(0xb184, { 0xcb, 0xb6 });
        gbc.writeMem(0xca1a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xef4b);
        EXPECT(gbc.pc(), 0xb186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb184), 0xcb);
        EXPECT(gbc.readMem(0xb185), 0xb6);
        EXPECT(gbc.readMem(0xca1a), 0x97);
        // CB B6 0390
        gbc.setState(0x8bff, 0x4e19, 0x9f40, 0xc857, 0xec6f, 0xf202, 0x0, 0x1);
        gbc.writeMem(0x8bff, { 0xcb, 0xb6 });
        gbc.writeMem(0xf202, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4e19);
        EXPECT(gbc.pc(), 0x8c01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bff), 0xcb);
        EXPECT(gbc.readMem(0x8c00), 0xb6);
        EXPECT(gbc.readMem(0xf202), 0xbd);
        // CB B6 0391
        gbc.setState(0x22b4, 0x6b1, 0x9a90, 0x8e5, 0x31e2, 0xaad, 0x1, 0x0);
        gbc.writeMem(0xaad, { 0x9 });
        gbc.writeMem(0x22b4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6b1);
        EXPECT(gbc.pc(), 0x22b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 0393
        gbc.setState(0x7c48, 0xbab0, 0xb8f0, 0x73a3, 0xddb, 0x83ed, 0x0, 0x0);
        gbc.writeMem(0x7c48, { 0xcb, 0xb6 });
        gbc.writeMem(0x83ed, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbab0);
        EXPECT(gbc.pc(), 0x7c4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ed), 0x18);
        // CB B6 0394
        gbc.setState(0xb775, 0x65a5, 0x4a40, 0xa427, 0x35e5, 0x29ae, 0x1, 0x1);
        gbc.writeMem(0x29ae, { 0x7 });
        gbc.writeMem(0xb775, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x65a5);
        EXPECT(gbc.pc(), 0xb777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb775), 0xcb);
        EXPECT(gbc.readMem(0xb776), 0xb6);
        // CB B6 0397
        gbc.setState(0x1670, 0x26cf, 0x8fa0, 0x7e50, 0x4f16, 0xefa7, 0x1, 0x1);
        gbc.writeMem(0x1670, { 0xcb, 0xb6 });
        gbc.writeMem(0xefa7, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x26cf);
        EXPECT(gbc.pc(), 0x1672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa7), 0xbf);
        // CB B6 0398
        gbc.setState(0xda66, 0x7cbb, 0x41d0, 0x7112, 0xc430, 0x64f6, 0x0, 0x0);
        gbc.writeMem(0x64f6, { 0x9 });
        gbc.writeMem(0xda66, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7cbb);
        EXPECT(gbc.pc(), 0xda68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda66), 0xcb);
        EXPECT(gbc.readMem(0xda67), 0xb6);
        // CB B6 039B
        gbc.setState(0x319c, 0xce42, 0x5f10, 0xd66c, 0x1532, 0xe8f4, 0x1, 0x1);
        gbc.writeMem(0x319c, { 0xcb, 0xb6 });
        gbc.writeMem(0xe8f4, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xce42);
        EXPECT(gbc.pc(), 0x319e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8f4), 0xa);
        // CB B6 039C
        gbc.setState(0x65c1, 0x76d2, 0x410, 0x7d3d, 0x2977, 0xd369, 0x0, 0x1);
        gbc.writeMem(0x65c1, { 0xcb, 0xb6 });
        gbc.writeMem(0xd369, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x76d2);
        EXPECT(gbc.pc(), 0x65c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd369), 0x25);
        // CB B6 039D
        gbc.setState(0x3481, 0xfab1, 0xf30, 0xd497, 0x43c5, 0xf107, 0x0, 0x0);
        gbc.writeMem(0x3481, { 0xcb, 0xb6 });
        gbc.writeMem(0xf107, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xfab1);
        EXPECT(gbc.pc(), 0x3483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf107), 0x3a);
        // CB B6 039E
        gbc.setState(0x9802, 0x3567, 0x6ce0, 0x4eae, 0xc5eb, 0xf267, 0x0, 0x1);
        gbc.writeMem(0x9802, { 0xcb, 0xb6 });
        gbc.writeMem(0xf267, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3567);
        EXPECT(gbc.pc(), 0x9804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9802), 0xcb);
        EXPECT(gbc.readMem(0x9803), 0xb6);
        EXPECT(gbc.readMem(0xf267), 0xb1);
        // CB B6 03A0
        gbc.setState(0x53ba, 0x2501, 0xf620, 0xad8b, 0xd8f8, 0xa18b, 0x1, 0x1);
        gbc.writeMem(0x53ba, { 0xcb, 0xb6 });
        gbc.writeMem(0xa18b, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2501);
        EXPECT(gbc.pc(), 0x53bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18b), 0x3a);
        // CB B6 03A1
        gbc.setState(0xe582, 0x864f, 0x1060, 0xe3b, 0x72f8, 0x97f8, 0x1, 0x1);
        gbc.writeMem(0x97f8, { 0x4e });
        gbc.writeMem(0xe582, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x864f);
        EXPECT(gbc.pc(), 0xe584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f8), 0xe);
        EXPECT(gbc.readMem(0xe582), 0xcb);
        EXPECT(gbc.readMem(0xe583), 0xb6);
        // CB B6 03A2
        gbc.setState(0x675f, 0xfaa7, 0x2d80, 0x2009, 0xa8ec, 0x6b5, 0x0, 0x1);
        gbc.writeMem(0x6b5, { 0x16 });
        gbc.writeMem(0x675f, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfaa7);
        EXPECT(gbc.pc(), 0x6761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 03A4
        gbc.setState(0xdbb8, 0x65a2, 0x2f0, 0x621c, 0x9059, 0xa84a, 0x1, 0x1);
        gbc.writeMem(0xa84a, { 0xb2 });
        gbc.writeMem(0xdbb8, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x65a2);
        EXPECT(gbc.pc(), 0xdbba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa84a), 0xb2);
        EXPECT(gbc.readMem(0xdbb8), 0xcb);
        EXPECT(gbc.readMem(0xdbb9), 0xb6);
        // CB B6 03A5
        gbc.setState(0x427b, 0xf470, 0x9140, 0x8734, 0xa5ad, 0xf009, 0x1, 0x0);
        gbc.writeMem(0x427b, { 0xcb, 0xb6 });
        gbc.writeMem(0xf009, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf470);
        EXPECT(gbc.pc(), 0x427d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf009), 0x1c);
        // CB B6 03A6
        gbc.setState(0x8bdf, 0xfce7, 0xb4e0, 0x23b3, 0xae14, 0x3f1c, 0x0, 0x0);
        gbc.writeMem(0x3f1c, { 0x1b });
        gbc.writeMem(0x8bdf, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfce7);
        EXPECT(gbc.pc(), 0x8be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bdf), 0xcb);
        EXPECT(gbc.readMem(0x8be0), 0xb6);
        // CB B6 03A7
        gbc.setState(0x840, 0x396c, 0xb300, 0xd663, 0x4f9a, 0xc943, 0x1, 0x1);
        gbc.writeMem(0x840, { 0xcb, 0xb6 });
        gbc.writeMem(0xc943, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x396c);
        EXPECT(gbc.pc(), 0x842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc943), 0x9c);
        // CB B6 03A8
        gbc.setState(0x2f61, 0x31e0, 0x84b0, 0xba4e, 0x4de1, 0xc776, 0x0, 0x1);
        gbc.writeMem(0x2f61, { 0xcb, 0xb6 });
        gbc.writeMem(0xc776, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x31e0);
        EXPECT(gbc.pc(), 0x2f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc776), 0x2d);
        // CB B6 03A9
        gbc.setState(0x85c5, 0x70f4, 0xc870, 0xc4bf, 0xf885, 0xfd96, 0x1, 0x1);
        gbc.writeMem(0x85c5, { 0xcb, 0xb6 });
        gbc.writeMem(0xfd96, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x70f4);
        EXPECT(gbc.pc(), 0x85c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c5), 0xcb);
        EXPECT(gbc.readMem(0x85c6), 0xb6);
        EXPECT(gbc.readMem(0xfd96), 0xa1);
        // CB B6 03AB
        gbc.setState(0x4d05, 0xb2eb, 0x9300, 0xf390, 0x1f9e, 0xd8e6, 0x0, 0x0);
        gbc.writeMem(0x4d05, { 0xcb, 0xb6 });
        gbc.writeMem(0xd8e6, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb2eb);
        EXPECT(gbc.pc(), 0x4d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e6), 0x86);
        // CB B6 03AD
        gbc.setState(0x9c17, 0xac3c, 0xd930, 0x6b3f, 0xb684, 0x7920, 0x1, 0x0);
        gbc.writeMem(0x7920, { 0x9d });
        gbc.writeMem(0x9c17, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xac3c);
        EXPECT(gbc.pc(), 0x9c19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c17), 0xcb);
        EXPECT(gbc.readMem(0x9c18), 0xb6);
        // CB B6 03AE
        gbc.setState(0x95a2, 0x614e, 0xc00, 0xedd4, 0x63a6, 0xb52e, 0x0, 0x0);
        gbc.writeMem(0x95a2, { 0xcb, 0xb6 });
        gbc.writeMem(0xb52e, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x614e);
        EXPECT(gbc.pc(), 0x95a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a2), 0xcb);
        EXPECT(gbc.readMem(0x95a3), 0xb6);
        EXPECT(gbc.readMem(0xb52e), 0x3d);
        // CB B6 03AF
        gbc.setState(0xe523, 0x3c45, 0x7c90, 0x18e2, 0xb7fd, 0xa20c, 0x0, 0x0);
        gbc.writeMem(0xa20c, { 0xda });
        gbc.writeMem(0xe523, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3c45);
        EXPECT(gbc.pc(), 0xe525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa20c), 0x9a);
        EXPECT(gbc.readMem(0xe523), 0xcb);
        EXPECT(gbc.readMem(0xe524), 0xb6);
        // CB B6 03B0
        gbc.setState(0xb6ad, 0xd59e, 0x1a00, 0x5cc5, 0xa289, 0xa784, 0x1, 0x1);
        gbc.writeMem(0xa784, { 0x81 });
        gbc.writeMem(0xb6ad, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd59e);
        EXPECT(gbc.pc(), 0xb6af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa784), 0x81);
        EXPECT(gbc.readMem(0xb6ad), 0xcb);
        EXPECT(gbc.readMem(0xb6ae), 0xb6);
        // CB B6 03B1
        gbc.setState(0xeb1, 0xdfa5, 0xf680, 0x7c96, 0xae14, 0xecfb, 0x1, 0x0);
        gbc.writeMem(0xeb1, { 0xcb, 0xb6 });
        gbc.writeMem(0xecfb, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xdfa5);
        EXPECT(gbc.pc(), 0xeb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfb), 0x7);
        // CB B6 03B3
        gbc.setState(0x49ff, 0xf54d, 0x2c00, 0x7876, 0x2f8d, 0xa9cb, 0x0, 0x0);
        gbc.writeMem(0x49ff, { 0xcb, 0xb6 });
        gbc.writeMem(0xa9cb, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf54d);
        EXPECT(gbc.pc(), 0x4a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9cb), 0x82);
        // CB B6 03B4
        gbc.setState(0x7024, 0x6c2d, 0xb400, 0xbcc4, 0x683f, 0x6f67, 0x0, 0x0);
        gbc.writeMem(0x6f67, { 0x2d });
        gbc.writeMem(0x7024, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6c2d);
        EXPECT(gbc.pc(), 0x7026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 03B6
        gbc.setState(0x8041, 0x6c87, 0xa500, 0xa7d8, 0x54e, 0xdd10, 0x0, 0x0);
        gbc.writeMem(0x8041, { 0xcb, 0xb6 });
        gbc.writeMem(0xdd10, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6c87);
        EXPECT(gbc.pc(), 0x8043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8041), 0xcb);
        EXPECT(gbc.readMem(0x8042), 0xb6);
        EXPECT(gbc.readMem(0xdd10), 0x32);
        // CB B6 03B8
        gbc.setState(0x62e3, 0x7511, 0x30e0, 0x1424, 0xcf7b, 0xc890, 0x0, 0x0);
        gbc.writeMem(0x62e3, { 0xcb, 0xb6 });
        gbc.writeMem(0xc890, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7511);
        EXPECT(gbc.pc(), 0x62e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc890), 0x9b);
        // CB B6 03B9
        gbc.setState(0xeeff, 0x2f53, 0x6730, 0x8f48, 0xf93, 0xa78f, 0x0, 0x1);
        gbc.writeMem(0xa78f, { 0xb7 });
        gbc.writeMem(0xeeff, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2f53);
        EXPECT(gbc.pc(), 0xef01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78f), 0xb7);
        EXPECT(gbc.readMem(0xeeff), 0xcb);
        EXPECT(gbc.readMem(0xef00), 0xb6);
        // CB B6 03BB
        gbc.setState(0x5b3c, 0x78d1, 0x8fc0, 0xd81, 0x4c46, 0x8133, 0x0, 0x0);
        gbc.writeMem(0x5b3c, { 0xcb, 0xb6 });
        gbc.writeMem(0x8133, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x78d1);
        EXPECT(gbc.pc(), 0x5b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8133), 0x0);
        // CB B6 03BC
        gbc.setState(0x437e, 0x10f0, 0x5920, 0xf104, 0x9217, 0xe057, 0x0, 0x1);
        gbc.writeMem(0x437e, { 0xcb, 0xb6 });
        gbc.writeMem(0xe057, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x10f0);
        EXPECT(gbc.pc(), 0x4380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe057), 0x86);
        // CB B6 03BD
        gbc.setState(0xd123, 0x24b3, 0xe700, 0x196e, 0x1b7c, 0x727d, 0x0, 0x0);
        gbc.writeMem(0x727d, { 0xaf });
        gbc.writeMem(0xd123, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x24b3);
        EXPECT(gbc.pc(), 0xd125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd123), 0xcb);
        EXPECT(gbc.readMem(0xd124), 0xb6);
        // CB B6 03BE
        gbc.setState(0xe6c1, 0x1f54, 0xafb0, 0x5fab, 0xb89a, 0x3a72, 0x1, 0x0);
        gbc.writeMem(0x3a72, { 0x2a });
        gbc.writeMem(0xe6c1, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1f54);
        EXPECT(gbc.pc(), 0xe6c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c1), 0xcb);
        EXPECT(gbc.readMem(0xe6c2), 0xb6);
        // CB B6 03BF
        gbc.setState(0x77ab, 0xb674, 0x5e20, 0x291d, 0x4924, 0x304b, 0x1, 0x0);
        gbc.writeMem(0x304b, { 0xa2 });
        gbc.writeMem(0x77ab, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb674);
        EXPECT(gbc.pc(), 0x77ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 03C0
        gbc.setState(0x4f7, 0x668d, 0x95e0, 0x3e35, 0xdcf7, 0xea16, 0x1, 0x1);
        gbc.writeMem(0x4f7, { 0xcb, 0xb6 });
        gbc.writeMem(0xea16, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x668d);
        EXPECT(gbc.pc(), 0x4f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea16), 0x2a);
        // CB B6 03C1
        gbc.setState(0x2068, 0x6c29, 0xdb40, 0xbcf8, 0xd439, 0xc3d2, 0x0, 0x0);
        gbc.writeMem(0x2068, { 0xcb, 0xb6 });
        gbc.writeMem(0xc3d2, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6c29);
        EXPECT(gbc.pc(), 0x206a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d2), 0x81);
        // CB B6 03C3
        gbc.setState(0x2c7d, 0x741, 0x75a0, 0x81e5, 0x8025, 0xab3c, 0x0, 0x0);
        gbc.writeMem(0x2c7d, { 0xcb, 0xb6 });
        gbc.writeMem(0xab3c, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x741);
        EXPECT(gbc.pc(), 0x2c7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab3c), 0x8e);
        // CB B6 03C4
        gbc.setState(0x7a5e, 0x4481, 0xb320, 0x4d02, 0xd3c9, 0xa196, 0x0, 0x1);
        gbc.writeMem(0x7a5e, { 0xcb, 0xb6 });
        gbc.writeMem(0xa196, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4481);
        EXPECT(gbc.pc(), 0x7a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa196), 0x30);
        // CB B6 03C5
        gbc.setState(0xa79, 0x2f2e, 0x6fe0, 0xa602, 0x8194, 0x2357, 0x1, 0x1);
        gbc.writeMem(0xa79, { 0xcb, 0xb6 });
        gbc.writeMem(0x2357, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2f2e);
        EXPECT(gbc.pc(), 0xa7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 03C6
        gbc.setState(0x7aed, 0x269a, 0x2ff0, 0x613f, 0x63f1, 0xf867, 0x1, 0x0);
        gbc.writeMem(0x7aed, { 0xcb, 0xb6 });
        gbc.writeMem(0xf867, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x269a);
        EXPECT(gbc.pc(), 0x7aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf867), 0x87);
        // CB B6 03C8
        gbc.setState(0xa6b4, 0xc187, 0xea30, 0xd714, 0x6fe1, 0xd2a2, 0x1, 0x0);
        gbc.writeMem(0xa6b4, { 0xcb, 0xb6 });
        gbc.writeMem(0xd2a2, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc187);
        EXPECT(gbc.pc(), 0xa6b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b4), 0xcb);
        EXPECT(gbc.readMem(0xa6b5), 0xb6);
        EXPECT(gbc.readMem(0xd2a2), 0xa5);
        // CB B6 03CA
        gbc.setState(0x9c3f, 0xd39d, 0xf810, 0x17d, 0x9420, 0xca21, 0x0, 0x0);
        gbc.writeMem(0x9c3f, { 0xcb, 0xb6 });
        gbc.writeMem(0xca21, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd39d);
        EXPECT(gbc.pc(), 0x9c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c3f), 0xcb);
        EXPECT(gbc.readMem(0x9c40), 0xb6);
        EXPECT(gbc.readMem(0xca21), 0x8a);
        // CB B6 03CB
        gbc.setState(0xef9b, 0x7eaf, 0x3b70, 0xd2a0, 0xf0c1, 0x96c7, 0x1, 0x0);
        gbc.writeMem(0x96c7, { 0xfb });
        gbc.writeMem(0xef9b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7eaf);
        EXPECT(gbc.pc(), 0xef9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c7), 0xbb);
        EXPECT(gbc.readMem(0xef9b), 0xcb);
        EXPECT(gbc.readMem(0xef9c), 0xb6);
        // CB B6 03CC
        gbc.setState(0xb696, 0xd1a9, 0xf9b0, 0xc63a, 0x25d7, 0x232e, 0x0, 0x1);
        gbc.writeMem(0x232e, { 0xb1 });
        gbc.writeMem(0xb696, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd1a9);
        EXPECT(gbc.pc(), 0xb698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb696), 0xcb);
        EXPECT(gbc.readMem(0xb697), 0xb6);
        // CB B6 03CD
        gbc.setState(0xd537, 0x88fb, 0xc1a0, 0x9a4e, 0x1d45, 0x8930, 0x1, 0x0);
        gbc.writeMem(0x8930, { 0x94 });
        gbc.writeMem(0xd537, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x88fb);
        EXPECT(gbc.pc(), 0xd539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8930), 0x94);
        EXPECT(gbc.readMem(0xd537), 0xcb);
        EXPECT(gbc.readMem(0xd538), 0xb6);
        // CB B6 03CE
        gbc.setState(0x88bc, 0x32e4, 0x5960, 0x45fb, 0xac08, 0x9194, 0x0, 0x0);
        gbc.writeMem(0x88bc, { 0xcb, 0xb6 });
        gbc.writeMem(0x9194, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x32e4);
        EXPECT(gbc.pc(), 0x88be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bc), 0xcb);
        EXPECT(gbc.readMem(0x88bd), 0xb6);
        EXPECT(gbc.readMem(0x9194), 0xbf);
        // CB B6 03CF
        gbc.setState(0x568b, 0xb339, 0xf240, 0x17a8, 0xf21f, 0xc52, 0x1, 0x1);
        gbc.writeMem(0xc52, { 0xbf });
        gbc.writeMem(0x568b, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb339);
        EXPECT(gbc.pc(), 0x568d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B6 03D3
        gbc.setState(0x8723, 0xa083, 0x73c0, 0xc41d, 0xe4c0, 0xb87d, 0x0, 0x0);
        gbc.writeMem(0x8723, { 0xcb, 0xb6 });
        gbc.writeMem(0xb87d, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa083);
        EXPECT(gbc.pc(), 0x8725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8723), 0xcb);
        EXPECT(gbc.readMem(0x8724), 0xb6);
        EXPECT(gbc.readMem(0xb87d), 0xa9);
        // CB B6 03D4
        gbc.setState(0xac, 0x3a9d, 0x4a50, 0x41f8, 0xcf91, 0x92f7, 0x1, 0x0);
        gbc.writeMem(0xac, { 0xcb, 0xb6 });
        gbc.writeMem(0x92f7, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3a9d);
        EXPECT(gbc.pc(), 0xae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f7), 0x19);
        // CB B6 03D5
        gbc.setState(0x5725, 0x9035, 0x64e0, 0xde02, 0xd35d, 0xad75, 0x1, 0x1);
        gbc.writeMem(0x5725, { 0xcb, 0xb6 });
        gbc.writeMem(0xad75, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9035);
        EXPECT(gbc.pc(), 0x5727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad75), 0xb8);
        // CB B6 03D6
        gbc.setState(0x99a8, 0xd30c, 0x2130, 0x25b6, 0x5987, 0xc913, 0x0, 0x0);
        gbc.writeMem(0x99a8, { 0xcb, 0xb6 });
        gbc.writeMem(0xc913, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd30c);
        EXPECT(gbc.pc(), 0x99aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99a8), 0xcb);
        EXPECT(gbc.readMem(0x99a9), 0xb6);
        EXPECT(gbc.readMem(0xc913), 0x88);
        // CB B6 03D7
        gbc.setState(0x3a3d, 0xdea4, 0x9910, 0x9e2e, 0x92a2, 0xa5f1, 0x1, 0x0);
        gbc.writeMem(0x3a3d, { 0xcb, 0xb6 });
        gbc.writeMem(0xa5f1, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xdea4);
        EXPECT(gbc.pc(), 0x3a3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f1), 0x4);
        // CB B6 03D8
        gbc.setState(0x5743, 0x1ef8, 0xf570, 0x66b4, 0x94e2, 0xa891, 0x0, 0x1);
        gbc.writeMem(0x5743, { 0xcb, 0xb6 });
        gbc.writeMem(0xa891, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1ef8);
        EXPECT(gbc.pc(), 0x5745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa891), 0x3b);
        // CB B6 03D9
        gbc.setState(0x1609, 0x1700, 0x9560, 0x1924, 0xf10d, 0x5f6e, 0x1, 0x0);
        gbc.writeMem(0x1609, { 0xcb, 0xb6 });
        gbc.writeMem(0x5f6e, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1700);
        EXPECT(gbc.pc(), 0x160b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B6 03DA
        gbc.setState(0x462, 0xf659, 0xf300, 0x650e, 0x8bba, 0xa70d, 0x0, 0x1);
        gbc.writeMem(0x462, { 0xcb, 0xb6 });
        gbc.writeMem(0xa70d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf659);
        EXPECT(gbc.pc(), 0x464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa70d), 0x20);
        // CB B6 03DC
        gbc.setState(0x44d8, 0x81ca, 0x1080, 0xd473, 0x29fe, 0xb4a6, 0x0, 0x0);
        gbc.writeMem(0x44d8, { 0xcb, 0xb6 });
        gbc.writeMem(0xb4a6, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x81ca);
        EXPECT(gbc.pc(), 0x44da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4a6), 0xa0);
        // CB B6 03DD
        gbc.setState(0x1944, 0xe599, 0xc290, 0x4561, 0x27ee, 0x24bf, 0x1, 0x0);
        gbc.writeMem(0x1944, { 0xcb, 0xb6 });
        gbc.writeMem(0x24bf, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe599);
        EXPECT(gbc.pc(), 0x1946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B6 03DF
        gbc.setState(0xee3c, 0xecdd, 0x63b0, 0x34c9, 0xf759, 0xf8e0, 0x0, 0x1);
        gbc.writeMem(0xee3c, { 0xcb, 0xb6 });
        gbc.writeMem(0xf8e0, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xecdd);
        EXPECT(gbc.pc(), 0xee3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3c), 0xcb);
        EXPECT(gbc.readMem(0xee3d), 0xb6);
        EXPECT(gbc.readMem(0xf8e0), 0x37);
        // CB B6 03E0
        gbc.setState(0x769, 0x8dd7, 0xc80, 0xb573, 0x3f52, 0xeb70, 0x1, 0x1);
        gbc.writeMem(0x769, { 0xcb, 0xb6 });
        gbc.writeMem(0xeb70, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8dd7);
        EXPECT(gbc.pc(), 0x76b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb70), 0xa5);
        // CB B6 03E1
        gbc.setState(0xa9a4, 0x9922, 0x3090, 0x2547, 0x2f2a, 0xa24f, 0x0, 0x1);
        gbc.writeMem(0xa24f, { 0x8e });
        gbc.writeMem(0xa9a4, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9922);
        EXPECT(gbc.pc(), 0xa9a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa24f), 0x8e);
        EXPECT(gbc.readMem(0xa9a4), 0xcb);
        EXPECT(gbc.readMem(0xa9a5), 0xb6);
        // CB B6 03E2
        gbc.setState(0x815d, 0x22a8, 0xe700, 0xb2f9, 0x3242, 0x6e9e, 0x0, 0x0);
        gbc.writeMem(0x6e9e, { 0xba });
        gbc.writeMem(0x815d, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x22a8);
        EXPECT(gbc.pc(), 0x815f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x815d), 0xcb);
        EXPECT(gbc.readMem(0x815e), 0xb6);
        // CB B6 03E3
        gbc.setState(0xd1d5, 0xc3be, 0xfe70, 0x98bf, 0x5c33, 0x7d6f, 0x0, 0x0);
        gbc.writeMem(0x7d6f, { 0x17 });
        gbc.writeMem(0xd1d5, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc3be);
        EXPECT(gbc.pc(), 0xd1d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d5), 0xcb);
        EXPECT(gbc.readMem(0xd1d6), 0xb6);
        // CB B6 03E6
        gbc.setState(0xb779, 0xee83, 0xb730, 0xc579, 0x2a60, 0x9ac, 0x0, 0x1);
        gbc.writeMem(0x9ac, { 0x9b });
        gbc.writeMem(0xb779, { 0xcb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xee83);
        EXPECT(gbc.pc(), 0xb77b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb779), 0xcb);
        EXPECT(gbc.readMem(0xb77a), 0xb6);
        // CB B6 03E7
        gbc.setState(0x1209, 0xcdd9, 0x60a0, 0x15ab, 0x6bc0, 0x8f64, 0x0, 0x1);
        gbc.writeMem(0x1209, { 0xcb, 0xb6 });
        gbc.writeMem(0x8f64, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xcdd9);
        EXPECT(gbc.pc(), 0x120b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f64), 0x8e);
    }
}
#endif
