#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_d3)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_d3) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB D3 0001
        gbc.setState(0x82fe, 0x9980, 0x1310, 0x6069, 0xfe24, 0x44d4, 0x1, 0x0);
        gbc.writeMem(0x82fe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9980);
        EXPECT(gbc.pc(), 0x8300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82fe), 0xcb);
        EXPECT(gbc.readMem(0x82ff), 0xd3);
        // CB D3 0002
        gbc.setState(0xd1ab, 0x4f7d, 0x32b0, 0x78af, 0xf477, 0x343f, 0x1, 0x0);
        gbc.writeMem(0xd1ab, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4f7d);
        EXPECT(gbc.pc(), 0xd1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ab), 0xcb);
        EXPECT(gbc.readMem(0xd1ac), 0xd3);
        // CB D3 0003
        gbc.setState(0x27e2, 0x590c, 0x7350, 0x6b94, 0x30ac, 0x8810, 0x1, 0x0);
        gbc.writeMem(0x27e2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x590c);
        EXPECT(gbc.pc(), 0x27e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0004
        gbc.setState(0xbe79, 0xeaa0, 0x36e0, 0x5aa, 0xfe87, 0x4b75, 0x1, 0x1);
        gbc.writeMem(0xbe79, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xeaa0);
        EXPECT(gbc.pc(), 0xbe7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe79), 0xcb);
        EXPECT(gbc.readMem(0xbe7a), 0xd3);
        // CB D3 0005
        gbc.setState(0xa82e, 0xbc37, 0x3ba0, 0x1b2, 0xda, 0xc38, 0x1, 0x1);
        gbc.writeMem(0xa82e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbc37);
        EXPECT(gbc.pc(), 0xa830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82e), 0xcb);
        EXPECT(gbc.readMem(0xa82f), 0xd3);
        // CB D3 0006
        gbc.setState(0xabbc, 0x72a, 0xd530, 0x7b2a, 0x8d36, 0x67ea, 0x1, 0x0);
        gbc.writeMem(0xabbc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x72a);
        EXPECT(gbc.pc(), 0xabbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabbc), 0xcb);
        EXPECT(gbc.readMem(0xabbd), 0xd3);
        // CB D3 0007
        gbc.setState(0x9ee5, 0x1942, 0x1240, 0xc459, 0x2a26, 0xcf6e, 0x0, 0x0);
        gbc.writeMem(0x9ee5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1942);
        EXPECT(gbc.pc(), 0x9ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee5), 0xcb);
        EXPECT(gbc.readMem(0x9ee6), 0xd3);
        // CB D3 0008
        gbc.setState(0xd67b, 0x88c4, 0xeef0, 0x176d, 0xaa94, 0xece2, 0x0, 0x1);
        gbc.writeMem(0xd67b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x88c4);
        EXPECT(gbc.pc(), 0xd67d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd67b), 0xcb);
        EXPECT(gbc.readMem(0xd67c), 0xd3);
        // CB D3 0009
        gbc.setState(0x88fc, 0xce7d, 0x48f0, 0xe2bf, 0xa363, 0xa35c, 0x0, 0x1);
        gbc.writeMem(0x88fc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xce7d);
        EXPECT(gbc.pc(), 0x88fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88fc), 0xcb);
        EXPECT(gbc.readMem(0x88fd), 0xd3);
        // CB D3 000A
        gbc.setState(0x4682, 0x76ec, 0x39d0, 0x464e, 0x134f, 0x558a, 0x0, 0x0);
        gbc.writeMem(0x4682, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x76ec);
        EXPECT(gbc.pc(), 0x4684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 000B
        gbc.setState(0x3a94, 0x6def, 0x3bc0, 0x1bfc, 0x33a2, 0x95fb, 0x0, 0x1);
        gbc.writeMem(0x3a94, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6def);
        EXPECT(gbc.pc(), 0x3a96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 000C
        gbc.setState(0x199, 0x5767, 0x73a0, 0xef20, 0x9b9b, 0x95f5, 0x1, 0x1);
        gbc.writeMem(0x199, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5767);
        EXPECT(gbc.pc(), 0x19b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 000D
        gbc.setState(0x9355, 0x76ee, 0x7760, 0x745d, 0x9ffc, 0x8853, 0x0, 0x0);
        gbc.writeMem(0x9355, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x76ee);
        EXPECT(gbc.pc(), 0x9357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9355), 0xcb);
        EXPECT(gbc.readMem(0x9356), 0xd3);
        // CB D3 000E
        gbc.setState(0x611e, 0xf70f, 0xab80, 0x9b4b, 0x996d, 0x8980, 0x1, 0x0);
        gbc.writeMem(0x611e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf70f);
        EXPECT(gbc.pc(), 0x6120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 000F
        gbc.setState(0x5425, 0xb414, 0x2b80, 0x3bc9, 0xdedd, 0xbb00, 0x1, 0x0);
        gbc.writeMem(0x5425, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb414);
        EXPECT(gbc.pc(), 0x5427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0010
        gbc.setState(0x3522, 0xbcf8, 0x3820, 0x14e1, 0x9d14, 0x85b3, 0x1, 0x0);
        gbc.writeMem(0x3522, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xbcf8);
        EXPECT(gbc.pc(), 0x3524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0011
        gbc.setState(0xa5d1, 0xb941, 0xe9b0, 0x14c4, 0x5358, 0x1d47, 0x1, 0x1);
        gbc.writeMem(0xa5d1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb941);
        EXPECT(gbc.pc(), 0xa5d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d1), 0xcb);
        EXPECT(gbc.readMem(0xa5d2), 0xd3);
        // CB D3 0012
        gbc.setState(0xd68a, 0xbb9, 0xa1d0, 0x3e7c, 0xe002, 0x298, 0x1, 0x1);
        gbc.writeMem(0xd68a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbb9);
        EXPECT(gbc.pc(), 0xd68c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd68a), 0xcb);
        EXPECT(gbc.readMem(0xd68b), 0xd3);
        // CB D3 0013
        gbc.setState(0x4b10, 0x68c5, 0x9720, 0xae38, 0x8e2e, 0xfe19, 0x1, 0x1);
        gbc.writeMem(0x4b10, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x68c5);
        EXPECT(gbc.pc(), 0x4b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0014
        gbc.setState(0x8afd, 0x46ba, 0x7f50, 0x9765, 0xb3f1, 0x86d, 0x0, 0x1);
        gbc.writeMem(0x8afd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x46ba);
        EXPECT(gbc.pc(), 0x8aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8afd), 0xcb);
        EXPECT(gbc.readMem(0x8afe), 0xd3);
        // CB D3 0015
        gbc.setState(0x3dfe, 0xff0e, 0xb380, 0xc77, 0xcde0, 0x2951, 0x1, 0x1);
        gbc.writeMem(0x3dfe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xff0e);
        EXPECT(gbc.pc(), 0x3e00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0016
        gbc.setState(0x1d88, 0x6f65, 0x78b0, 0xe7c2, 0x8eb5, 0x214b, 0x0, 0x0);
        gbc.writeMem(0x1d88, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6f65);
        EXPECT(gbc.pc(), 0x1d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0017
        gbc.setState(0x1041, 0xae8f, 0x4e20, 0x7665, 0x1945, 0xd737, 0x1, 0x1);
        gbc.writeMem(0x1041, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xae8f);
        EXPECT(gbc.pc(), 0x1043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0018
        gbc.setState(0xe900, 0x7010, 0x7710, 0x6fc6, 0x7da1, 0xa923, 0x1, 0x1);
        gbc.writeMem(0xe900, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7010);
        EXPECT(gbc.pc(), 0xe902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe900), 0xcb);
        EXPECT(gbc.readMem(0xe901), 0xd3);
        // CB D3 0019
        gbc.setState(0xe9ae, 0x8fb9, 0x46a0, 0x3859, 0xb41c, 0xbc3e, 0x1, 0x1);
        gbc.writeMem(0xe9ae, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8fb9);
        EXPECT(gbc.pc(), 0xe9b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ae), 0xcb);
        EXPECT(gbc.readMem(0xe9af), 0xd3);
        // CB D3 001A
        gbc.setState(0x5d9f, 0xf321, 0xc190, 0x3227, 0xcc91, 0xce37, 0x1, 0x0);
        gbc.writeMem(0x5d9f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf321);
        EXPECT(gbc.pc(), 0x5da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 001B
        gbc.setState(0x1886, 0x95c6, 0x740, 0x5169, 0x6d15, 0xdd93, 0x1, 0x0);
        gbc.writeMem(0x1886, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x95c6);
        EXPECT(gbc.pc(), 0x1888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 001C
        gbc.setState(0x2ede, 0x2db5, 0xfae0, 0xd78e, 0x8af0, 0x80a8, 0x1, 0x0);
        gbc.writeMem(0x2ede, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2db5);
        EXPECT(gbc.pc(), 0x2ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 001D
        gbc.setState(0x2274, 0xa2b2, 0x6cb0, 0x9dd8, 0x9351, 0xcecc, 0x0, 0x1);
        gbc.writeMem(0x2274, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa2b2);
        EXPECT(gbc.pc(), 0x2276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 001E
        gbc.setState(0xceb, 0xd6e6, 0x9f70, 0x685e, 0x659e, 0x1693, 0x1, 0x1);
        gbc.writeMem(0xceb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd6e6);
        EXPECT(gbc.pc(), 0xced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 001F
        gbc.setState(0x7fdf, 0x4bba, 0x3190, 0xbf0d, 0x23fb, 0xf0d5, 0x1, 0x0);
        gbc.writeMem(0x7fdf, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4bba);
        EXPECT(gbc.pc(), 0x7fe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0020
        gbc.setState(0xcf5a, 0x6ea2, 0xa040, 0x38cf, 0xd550, 0xab3f, 0x1, 0x1);
        gbc.writeMem(0xcf5a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6ea2);
        EXPECT(gbc.pc(), 0xcf5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf5a), 0xcb);
        EXPECT(gbc.readMem(0xcf5b), 0xd3);
        // CB D3 0021
        gbc.setState(0x9294, 0xc988, 0x15e0, 0x694e, 0x8a55, 0xff17, 0x1, 0x1);
        gbc.writeMem(0x9294, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc988);
        EXPECT(gbc.pc(), 0x9296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9294), 0xcb);
        EXPECT(gbc.readMem(0x9295), 0xd3);
        // CB D3 0022
        gbc.setState(0x884f, 0xc67, 0x8940, 0xeff1, 0x7318, 0xc192, 0x0, 0x1);
        gbc.writeMem(0x884f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc67);
        EXPECT(gbc.pc(), 0x8851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x884f), 0xcb);
        EXPECT(gbc.readMem(0x8850), 0xd3);
        // CB D3 0023
        gbc.setState(0x2e57, 0xd419, 0xf3e0, 0x5258, 0xbd34, 0x138c, 0x0, 0x1);
        gbc.writeMem(0x2e57, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd419);
        EXPECT(gbc.pc(), 0x2e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0024
        gbc.setState(0x4079, 0x2d31, 0x1c40, 0x4030, 0x64e7, 0x9fd9, 0x0, 0x1);
        gbc.writeMem(0x4079, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2d31);
        EXPECT(gbc.pc(), 0x407b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0025
        gbc.setState(0x63bd, 0xfff8, 0x7000, 0x39d7, 0x7d4, 0xedc6, 0x1, 0x1);
        gbc.writeMem(0x63bd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfff8);
        EXPECT(gbc.pc(), 0x63bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0026
        gbc.setState(0xac1f, 0x27e2, 0xe0c0, 0xd10e, 0x4a08, 0xaf38, 0x0, 0x1);
        gbc.writeMem(0xac1f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x27e2);
        EXPECT(gbc.pc(), 0xac21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac1f), 0xcb);
        EXPECT(gbc.readMem(0xac20), 0xd3);
        // CB D3 0027
        gbc.setState(0x8fa0, 0x37ea, 0x1f40, 0x2e06, 0xf4a6, 0xb8ce, 0x0, 0x0);
        gbc.writeMem(0x8fa0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x37ea);
        EXPECT(gbc.pc(), 0x8fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fa0), 0xcb);
        EXPECT(gbc.readMem(0x8fa1), 0xd3);
        // CB D3 0028
        gbc.setState(0x5545, 0x8e39, 0xce80, 0x1189, 0xd3c4, 0x1c16, 0x0, 0x1);
        gbc.writeMem(0x5545, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8e39);
        EXPECT(gbc.pc(), 0x5547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0029
        gbc.setState(0xd2e6, 0x2b07, 0xeba0, 0x9680, 0xa821, 0x154d, 0x1, 0x0);
        gbc.writeMem(0xd2e6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2b07);
        EXPECT(gbc.pc(), 0xd2e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e6), 0xcb);
        EXPECT(gbc.readMem(0xd2e7), 0xd3);
        // CB D3 002A
        gbc.setState(0x2e7f, 0xf21b, 0xbb50, 0x9ba9, 0xf35e, 0xba96, 0x1, 0x1);
        gbc.writeMem(0x2e7f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf21b);
        EXPECT(gbc.pc(), 0x2e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 002B
        gbc.setState(0x2cad, 0x1245, 0x6a40, 0x5387, 0x4322, 0x7b5b, 0x1, 0x1);
        gbc.writeMem(0x2cad, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1245);
        EXPECT(gbc.pc(), 0x2caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 002C
        gbc.setState(0x5add, 0x2fc9, 0xa740, 0x23bf, 0x4c98, 0x6728, 0x1, 0x1);
        gbc.writeMem(0x5add, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2fc9);
        EXPECT(gbc.pc(), 0x5adf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 002D
        gbc.setState(0x9134, 0xeb2c, 0x4160, 0x78a2, 0x1e77, 0x42e6, 0x1, 0x0);
        gbc.writeMem(0x9134, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xeb2c);
        EXPECT(gbc.pc(), 0x9136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9134), 0xcb);
        EXPECT(gbc.readMem(0x9135), 0xd3);
        // CB D3 002E
        gbc.setState(0x599a, 0x5ef1, 0xc630, 0xdcb1, 0xbe98, 0x518a, 0x1, 0x0);
        gbc.writeMem(0x599a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5ef1);
        EXPECT(gbc.pc(), 0x599c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 002F
        gbc.setState(0x9a79, 0x8c2d, 0x5330, 0x2edc, 0xffa0, 0xaa18, 0x0, 0x1);
        gbc.writeMem(0x9a79, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8c2d);
        EXPECT(gbc.pc(), 0x9a7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a79), 0xcb);
        EXPECT(gbc.readMem(0x9a7a), 0xd3);
        // CB D3 0030
        gbc.setState(0xb0d5, 0xbae0, 0xeb70, 0xbf8e, 0x68b8, 0xae89, 0x1, 0x1);
        gbc.writeMem(0xb0d5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbae0);
        EXPECT(gbc.pc(), 0xb0d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d5), 0xcb);
        EXPECT(gbc.readMem(0xb0d6), 0xd3);
        // CB D3 0031
        gbc.setState(0x2f30, 0x5660, 0x2020, 0x5fd5, 0x3424, 0xeea9, 0x1, 0x1);
        gbc.writeMem(0x2f30, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5660);
        EXPECT(gbc.pc(), 0x2f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0032
        gbc.setState(0xc218, 0xd045, 0xb5f0, 0x4098, 0x72fe, 0x6e3, 0x1, 0x0);
        gbc.writeMem(0xc218, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd045);
        EXPECT(gbc.pc(), 0xc21a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc218), 0xcb);
        EXPECT(gbc.readMem(0xc219), 0xd3);
        // CB D3 0033
        gbc.setState(0x1a0, 0x91d, 0xc4c0, 0xa3d8, 0x2aca, 0xb366, 0x0, 0x0);
        gbc.writeMem(0x1a0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x91d);
        EXPECT(gbc.pc(), 0x1a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0034
        gbc.setState(0x934b, 0xc37f, 0x5fc0, 0x74a1, 0xdfcd, 0xb001, 0x0, 0x0);
        gbc.writeMem(0x934b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc37f);
        EXPECT(gbc.pc(), 0x934d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x934b), 0xcb);
        EXPECT(gbc.readMem(0x934c), 0xd3);
        // CB D3 0035
        gbc.setState(0x39b0, 0x6150, 0xc710, 0xc735, 0x1348, 0x6396, 0x1, 0x0);
        gbc.writeMem(0x39b0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6150);
        EXPECT(gbc.pc(), 0x39b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0036
        gbc.setState(0x516c, 0x6e09, 0xc250, 0x27b1, 0x7120, 0xef74, 0x1, 0x1);
        gbc.writeMem(0x516c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6e09);
        EXPECT(gbc.pc(), 0x516e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0037
        gbc.setState(0x8978, 0x349d, 0xcc00, 0xef33, 0xdefd, 0x8837, 0x1, 0x1);
        gbc.writeMem(0x8978, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x349d);
        EXPECT(gbc.pc(), 0x897a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8978), 0xcb);
        EXPECT(gbc.readMem(0x8979), 0xd3);
        // CB D3 0039
        gbc.setState(0xc3b, 0xfbc, 0x93f0, 0xb687, 0xf8ba, 0xf43e, 0x0, 0x0);
        gbc.writeMem(0xc3b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfbc);
        EXPECT(gbc.pc(), 0xc3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 003A
        gbc.setState(0x801e, 0xf57e, 0x69b0, 0x8de0, 0x4dde, 0xfe09, 0x0, 0x0);
        gbc.writeMem(0x801e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf57e);
        EXPECT(gbc.pc(), 0x8020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801e), 0xcb);
        EXPECT(gbc.readMem(0x801f), 0xd3);
        // CB D3 003B
        gbc.setState(0x535b, 0x1e56, 0x3e30, 0xdd42, 0xc534, 0xf555, 0x1, 0x1);
        gbc.writeMem(0x535b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1e56);
        EXPECT(gbc.pc(), 0x535d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 003C
        gbc.setState(0x6bf, 0xc96c, 0x7e0, 0x6a01, 0xc385, 0xcf1, 0x0, 0x0);
        gbc.writeMem(0x6bf, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc96c);
        EXPECT(gbc.pc(), 0x6c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 003D
        gbc.setState(0x5229, 0x6079, 0xf790, 0xc832, 0x44de, 0x5714, 0x0, 0x0);
        gbc.writeMem(0x5229, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6079);
        EXPECT(gbc.pc(), 0x522b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 003E
        gbc.setState(0x78b2, 0xa6c, 0x3b90, 0x581a, 0xb12f, 0x6878, 0x0, 0x1);
        gbc.writeMem(0x78b2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa6c);
        EXPECT(gbc.pc(), 0x78b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 003F
        gbc.setState(0xb413, 0x5162, 0x1690, 0xc4c6, 0x58c7, 0x1a09, 0x1, 0x1);
        gbc.writeMem(0xb413, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5162);
        EXPECT(gbc.pc(), 0xb415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb413), 0xcb);
        EXPECT(gbc.readMem(0xb414), 0xd3);
        // CB D3 0040
        gbc.setState(0xc6b, 0x7677, 0xfb30, 0x8c2e, 0x1e5c, 0x227e, 0x0, 0x0);
        gbc.writeMem(0xc6b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7677);
        EXPECT(gbc.pc(), 0xc6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0041
        gbc.setState(0xe880, 0xa3a6, 0xea80, 0x20c2, 0x320f, 0xf7cc, 0x1, 0x0);
        gbc.writeMem(0xe880, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa3a6);
        EXPECT(gbc.pc(), 0xe882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe880), 0xcb);
        EXPECT(gbc.readMem(0xe881), 0xd3);
        // CB D3 0042
        gbc.setState(0x159a, 0x346e, 0x1ef0, 0x13d0, 0xc8ab, 0x2a0c, 0x0, 0x0);
        gbc.writeMem(0x159a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x346e);
        EXPECT(gbc.pc(), 0x159c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0043
        gbc.setState(0xbf8b, 0xd778, 0x1dc0, 0x8980, 0xac30, 0xa5db, 0x0, 0x0);
        gbc.writeMem(0xbf8b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd778);
        EXPECT(gbc.pc(), 0xbf8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf8b), 0xcb);
        EXPECT(gbc.readMem(0xbf8c), 0xd3);
        // CB D3 0044
        gbc.setState(0x199f, 0xccc5, 0x510, 0x7bb7, 0x9081, 0x3ebe, 0x1, 0x1);
        gbc.writeMem(0x199f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xccc5);
        EXPECT(gbc.pc(), 0x19a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0045
        gbc.setState(0x5509, 0x776, 0xe40, 0x8ab5, 0xb424, 0x4baa, 0x0, 0x1);
        gbc.writeMem(0x5509, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x776);
        EXPECT(gbc.pc(), 0x550b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0046
        gbc.setState(0x6fa6, 0xe317, 0x87a0, 0xdbe8, 0x1e59, 0xf792, 0x1, 0x1);
        gbc.writeMem(0x6fa6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe317);
        EXPECT(gbc.pc(), 0x6fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0047
        gbc.setState(0x829f, 0x5158, 0xd930, 0xdcda, 0x1e06, 0x24fb, 0x1, 0x1);
        gbc.writeMem(0x829f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5158);
        EXPECT(gbc.pc(), 0x82a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x829f), 0xcb);
        EXPECT(gbc.readMem(0x82a0), 0xd3);
        // CB D3 0048
        gbc.setState(0x5f19, 0x3cbf, 0xa600, 0xaa5c, 0x3bbc, 0xdf73, 0x0, 0x1);
        gbc.writeMem(0x5f19, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3cbf);
        EXPECT(gbc.pc(), 0x5f1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0049
        gbc.setState(0x9000, 0x1d13, 0x3050, 0x1165, 0x57f8, 0x4b09, 0x1, 0x1);
        gbc.writeMem(0x9000, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1d13);
        EXPECT(gbc.pc(), 0x9002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9000), 0xcb);
        EXPECT(gbc.readMem(0x9001), 0xd3);
        // CB D3 004A
        gbc.setState(0x1709, 0x3cb, 0x7ba0, 0x74e2, 0xd6f6, 0x4d0b, 0x1, 0x0);
        gbc.writeMem(0x1709, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3cb);
        EXPECT(gbc.pc(), 0x170b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 004B
        gbc.setState(0x33ac, 0x3d60, 0x6990, 0xffe6, 0x6fc6, 0x4898, 0x1, 0x0);
        gbc.writeMem(0x33ac, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3d60);
        EXPECT(gbc.pc(), 0x33ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 004C
        gbc.setState(0xae3, 0xeabe, 0x6420, 0xc37c, 0xc863, 0x471d, 0x1, 0x0);
        gbc.writeMem(0xae3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xeabe);
        EXPECT(gbc.pc(), 0xae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 004D
        gbc.setState(0x4bcc, 0xd580, 0xbab0, 0x7fb, 0x7e46, 0xb7e6, 0x1, 0x1);
        gbc.writeMem(0x4bcc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd580);
        EXPECT(gbc.pc(), 0x4bce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 004F
        gbc.setState(0xb9e0, 0x4df, 0xbfa0, 0xe3e5, 0x2585, 0xc385, 0x1, 0x1);
        gbc.writeMem(0xb9e0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4df);
        EXPECT(gbc.pc(), 0xb9e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e0), 0xcb);
        EXPECT(gbc.readMem(0xb9e1), 0xd3);
        // CB D3 0050
        gbc.setState(0x5f47, 0xa72a, 0xb250, 0xfb6b, 0x9662, 0x4843, 0x0, 0x1);
        gbc.writeMem(0x5f47, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa72a);
        EXPECT(gbc.pc(), 0x5f49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0052
        gbc.setState(0x2ec3, 0x75f4, 0xfed0, 0x5d52, 0x2821, 0xb6dc, 0x1, 0x1);
        gbc.writeMem(0x2ec3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x75f4);
        EXPECT(gbc.pc(), 0x2ec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0053
        gbc.setState(0xc8dd, 0xde4e, 0xbf90, 0xb337, 0xa28e, 0xdd56, 0x0, 0x1);
        gbc.writeMem(0xc8dd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xde4e);
        EXPECT(gbc.pc(), 0xc8df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8dd), 0xcb);
        EXPECT(gbc.readMem(0xc8de), 0xd3);
        // CB D3 0055
        gbc.setState(0xa949, 0x32ba, 0x7dc0, 0xfd4, 0x3561, 0x9b16, 0x0, 0x0);
        gbc.writeMem(0xa949, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x32ba);
        EXPECT(gbc.pc(), 0xa94b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa949), 0xcb);
        EXPECT(gbc.readMem(0xa94a), 0xd3);
        // CB D3 0056
        gbc.setState(0xb276, 0x8690, 0xc8c0, 0x4571, 0x4cc4, 0x974f, 0x1, 0x1);
        gbc.writeMem(0xb276, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8690);
        EXPECT(gbc.pc(), 0xb278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb276), 0xcb);
        EXPECT(gbc.readMem(0xb277), 0xd3);
        // CB D3 0057
        gbc.setState(0x35a1, 0xaba6, 0xf1c0, 0xf941, 0x214b, 0x46e1, 0x0, 0x1);
        gbc.writeMem(0x35a1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xaba6);
        EXPECT(gbc.pc(), 0x35a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0058
        gbc.setState(0x1aa, 0x3d62, 0x1240, 0x27a6, 0xdee7, 0xf2c, 0x0, 0x0);
        gbc.writeMem(0x1aa, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3d62);
        EXPECT(gbc.pc(), 0x1ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0059
        gbc.setState(0x99c5, 0x15c2, 0x380, 0xabb5, 0x67fc, 0xc93c, 0x1, 0x1);
        gbc.writeMem(0x99c5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x15c2);
        EXPECT(gbc.pc(), 0x99c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c5), 0xcb);
        EXPECT(gbc.readMem(0x99c6), 0xd3);
        // CB D3 005A
        gbc.setState(0x27eb, 0x677, 0xb850, 0x8989, 0xf1aa, 0xc0a5, 0x1, 0x1);
        gbc.writeMem(0x27eb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x677);
        EXPECT(gbc.pc(), 0x27ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 005B
        gbc.setState(0x9496, 0x1a03, 0x41c0, 0xd750, 0x2252, 0x3add, 0x0, 0x0);
        gbc.writeMem(0x9496, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1a03);
        EXPECT(gbc.pc(), 0x9498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9496), 0xcb);
        EXPECT(gbc.readMem(0x9497), 0xd3);
        // CB D3 005C
        gbc.setState(0x923d, 0x52f9, 0xe1d0, 0xf41b, 0x1f52, 0xb269, 0x0, 0x0);
        gbc.writeMem(0x923d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x52f9);
        EXPECT(gbc.pc(), 0x923f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x923d), 0xcb);
        EXPECT(gbc.readMem(0x923e), 0xd3);
        // CB D3 005D
        gbc.setState(0x5ad7, 0x5f59, 0xad30, 0x46c9, 0x8b43, 0xc9e3, 0x1, 0x1);
        gbc.writeMem(0x5ad7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5f59);
        EXPECT(gbc.pc(), 0x5ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 005E
        gbc.setState(0x6ad2, 0x6ac, 0x52a0, 0xe211, 0x1f36, 0x5c5f, 0x0, 0x0);
        gbc.writeMem(0x6ad2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6ac);
        EXPECT(gbc.pc(), 0x6ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 005F
        gbc.setState(0x21cd, 0xc2d6, 0x58e0, 0x2545, 0x32c3, 0xe6bd, 0x0, 0x1);
        gbc.writeMem(0x21cd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc2d6);
        EXPECT(gbc.pc(), 0x21cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0061
        gbc.setState(0x62ba, 0x8c2c, 0x8710, 0x1fb5, 0xc6da, 0x8748, 0x0, 0x0);
        gbc.writeMem(0x62ba, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8c2c);
        EXPECT(gbc.pc(), 0x62bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0062
        gbc.setState(0xc4ec, 0xe9bb, 0x88e0, 0xbb9, 0xe7bc, 0x4ee8, 0x1, 0x0);
        gbc.writeMem(0xc4ec, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe9bb);
        EXPECT(gbc.pc(), 0xc4ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ec), 0xcb);
        EXPECT(gbc.readMem(0xc4ed), 0xd3);
        // CB D3 0063
        gbc.setState(0x2c58, 0x9563, 0xd720, 0xaae3, 0x333b, 0xc51a, 0x1, 0x0);
        gbc.writeMem(0x2c58, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9563);
        EXPECT(gbc.pc(), 0x2c5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0064
        gbc.setState(0x20d0, 0xd0bd, 0x98f0, 0x3c18, 0x23fd, 0x8bd7, 0x1, 0x1);
        gbc.writeMem(0x20d0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd0bd);
        EXPECT(gbc.pc(), 0x20d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0065
        gbc.setState(0x91b8, 0xdfcf, 0x6310, 0xd212, 0xfefe, 0xa3e4, 0x1, 0x1);
        gbc.writeMem(0x91b8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdfcf);
        EXPECT(gbc.pc(), 0x91ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91b8), 0xcb);
        EXPECT(gbc.readMem(0x91b9), 0xd3);
        // CB D3 0066
        gbc.setState(0xd836, 0x7f1d, 0x22f0, 0xea0d, 0xf6f0, 0x4f5a, 0x1, 0x1);
        gbc.writeMem(0xd836, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7f1d);
        EXPECT(gbc.pc(), 0xd838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd836), 0xcb);
        EXPECT(gbc.readMem(0xd837), 0xd3);
        // CB D3 0067
        gbc.setState(0x2fda, 0x8de7, 0xf870, 0x7d2, 0x56fb, 0x342b, 0x1, 0x0);
        gbc.writeMem(0x2fda, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8de7);
        EXPECT(gbc.pc(), 0x2fdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0068
        gbc.setState(0x82db, 0x9c1, 0x6080, 0x326c, 0x77c4, 0x7dc0, 0x0, 0x0);
        gbc.writeMem(0x82db, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9c1);
        EXPECT(gbc.pc(), 0x82dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82db), 0xcb);
        EXPECT(gbc.readMem(0x82dc), 0xd3);
        // CB D3 0069
        gbc.setState(0x104f, 0xa6b9, 0x3850, 0xd1d5, 0x1b1c, 0x6d40, 0x0, 0x0);
        gbc.writeMem(0x104f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa6b9);
        EXPECT(gbc.pc(), 0x1051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 006A
        gbc.setState(0x15f0, 0x18f7, 0x550, 0x7cf5, 0x3f68, 0xab0c, 0x0, 0x0);
        gbc.writeMem(0x15f0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x18f7);
        EXPECT(gbc.pc(), 0x15f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 006B
        gbc.setState(0x8bd0, 0xd7e6, 0x1ff0, 0xba54, 0xf089, 0xe3ab, 0x0, 0x0);
        gbc.writeMem(0x8bd0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd7e6);
        EXPECT(gbc.pc(), 0x8bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd0), 0xcb);
        EXPECT(gbc.readMem(0x8bd1), 0xd3);
        // CB D3 006C
        gbc.setState(0x5af4, 0x1e34, 0x8c20, 0xfcc7, 0x15eb, 0x2a00, 0x1, 0x1);
        gbc.writeMem(0x5af4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1e34);
        EXPECT(gbc.pc(), 0x5af6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 006D
        gbc.setState(0xcada, 0x1e8b, 0x3780, 0xd34d, 0x675f, 0x9d4c, 0x1, 0x0);
        gbc.writeMem(0xcada, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1e8b);
        EXPECT(gbc.pc(), 0xcadc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcada), 0xcb);
        EXPECT(gbc.readMem(0xcadb), 0xd3);
        // CB D3 006E
        gbc.setState(0xbd7a, 0x6d8, 0xc4a0, 0x5911, 0xb1ec, 0x23ad, 0x0, 0x0);
        gbc.writeMem(0xbd7a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6d8);
        EXPECT(gbc.pc(), 0xbd7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7a), 0xcb);
        EXPECT(gbc.readMem(0xbd7b), 0xd3);
        // CB D3 006F
        gbc.setState(0x4c9f, 0xdb3a, 0x1970, 0x5946, 0xd36e, 0xd3da, 0x1, 0x1);
        gbc.writeMem(0x4c9f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdb3a);
        EXPECT(gbc.pc(), 0x4ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0070
        gbc.setState(0x955c, 0xef69, 0x6b30, 0x8175, 0x60cb, 0x8caf, 0x1, 0x0);
        gbc.writeMem(0x955c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xef69);
        EXPECT(gbc.pc(), 0x955e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955c), 0xcb);
        EXPECT(gbc.readMem(0x955d), 0xd3);
        // CB D3 0071
        gbc.setState(0x74d8, 0xef25, 0x8bd0, 0x70bb, 0x637b, 0x37c4, 0x1, 0x1);
        gbc.writeMem(0x74d8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xef25);
        EXPECT(gbc.pc(), 0x74da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0072
        gbc.setState(0x5a4d, 0xc3a2, 0xecd0, 0x1e20, 0x5363, 0xf18a, 0x1, 0x0);
        gbc.writeMem(0x5a4d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc3a2);
        EXPECT(gbc.pc(), 0x5a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0073
        gbc.setState(0x70a5, 0xa37c, 0xd610, 0xe373, 0xda93, 0x8bcc, 0x0, 0x1);
        gbc.writeMem(0x70a5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa37c);
        EXPECT(gbc.pc(), 0x70a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0074
        gbc.setState(0x282c, 0xff57, 0xe2d0, 0xff4c, 0x590a, 0x3f67, 0x1, 0x0);
        gbc.writeMem(0x282c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xff57);
        EXPECT(gbc.pc(), 0x282e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0075
        gbc.setState(0x18b2, 0xf2e7, 0xecb0, 0xce70, 0xa734, 0x485f, 0x1, 0x1);
        gbc.writeMem(0x18b2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf2e7);
        EXPECT(gbc.pc(), 0x18b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0076
        gbc.setState(0xbfb5, 0xd6f8, 0x7de0, 0xb5fc, 0x7be5, 0xc573, 0x1, 0x1);
        gbc.writeMem(0xbfb5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd6f8);
        EXPECT(gbc.pc(), 0xbfb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb5), 0xcb);
        EXPECT(gbc.readMem(0xbfb6), 0xd3);
        // CB D3 0078
        gbc.setState(0xb326, 0x846a, 0xbba0, 0xf27d, 0xd051, 0x3bec, 0x0, 0x1);
        gbc.writeMem(0xb326, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x846a);
        EXPECT(gbc.pc(), 0xb328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb326), 0xcb);
        EXPECT(gbc.readMem(0xb327), 0xd3);
        // CB D3 0079
        gbc.setState(0xd3c4, 0x7911, 0x3090, 0x3c8, 0x8dc0, 0xab7f, 0x0, 0x1);
        gbc.writeMem(0xd3c4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7911);
        EXPECT(gbc.pc(), 0xd3c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c4), 0xcb);
        EXPECT(gbc.readMem(0xd3c5), 0xd3);
        // CB D3 007A
        gbc.setState(0x7146, 0x8b82, 0x7b0, 0xf56a, 0x3627, 0xa4be, 0x1, 0x0);
        gbc.writeMem(0x7146, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8b82);
        EXPECT(gbc.pc(), 0x7148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 007B
        gbc.setState(0x88dc, 0xd9c9, 0x3960, 0x4c59, 0xe502, 0xe362, 0x0, 0x0);
        gbc.writeMem(0x88dc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd9c9);
        EXPECT(gbc.pc(), 0x88de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88dc), 0xcb);
        EXPECT(gbc.readMem(0x88dd), 0xd3);
        // CB D3 007C
        gbc.setState(0x6f8a, 0x44c0, 0xafc0, 0xdc64, 0xdd95, 0xc784, 0x1, 0x1);
        gbc.writeMem(0x6f8a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x44c0);
        EXPECT(gbc.pc(), 0x6f8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 007D
        gbc.setState(0x1d68, 0x3bbe, 0xe190, 0x766f, 0x9f23, 0x7758, 0x1, 0x1);
        gbc.writeMem(0x1d68, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3bbe);
        EXPECT(gbc.pc(), 0x1d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 007E
        gbc.setState(0x2f3a, 0x3d18, 0xd330, 0xb4c, 0x6b9b, 0x9af0, 0x1, 0x1);
        gbc.writeMem(0x2f3a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3d18);
        EXPECT(gbc.pc(), 0x2f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 007F
        gbc.setState(0x3d19, 0xc38d, 0xdc50, 0xd402, 0x9577, 0x8ed7, 0x0, 0x1);
        gbc.writeMem(0x3d19, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc38d);
        EXPECT(gbc.pc(), 0x3d1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0081
        gbc.setState(0x2f61, 0xd866, 0x1400, 0xbc11, 0xa167, 0x53ac, 0x0, 0x1);
        gbc.writeMem(0x2f61, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd866);
        EXPECT(gbc.pc(), 0x2f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0082
        gbc.setState(0x2ae5, 0x7857, 0x20a0, 0xa69f, 0xbd47, 0xc051, 0x0, 0x1);
        gbc.writeMem(0x2ae5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7857);
        EXPECT(gbc.pc(), 0x2ae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0083
        gbc.setState(0x592b, 0xb101, 0x65c0, 0xc93c, 0x6f07, 0xe37a, 0x0, 0x0);
        gbc.writeMem(0x592b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb101);
        EXPECT(gbc.pc(), 0x592d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0084
        gbc.setState(0x6906, 0x9216, 0xf420, 0x3379, 0x19e1, 0xc312, 0x0, 0x0);
        gbc.writeMem(0x6906, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9216);
        EXPECT(gbc.pc(), 0x6908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0085
        gbc.setState(0xc636, 0x3cfe, 0x9b00, 0xb6c2, 0xc9b3, 0x5820, 0x0, 0x1);
        gbc.writeMem(0xc636, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3cfe);
        EXPECT(gbc.pc(), 0xc638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc636), 0xcb);
        EXPECT(gbc.readMem(0xc637), 0xd3);
        // CB D3 0086
        gbc.setState(0x8115, 0xd030, 0x39b0, 0x5042, 0x9c7, 0xf7e1, 0x1, 0x0);
        gbc.writeMem(0x8115, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd030);
        EXPECT(gbc.pc(), 0x8117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8115), 0xcb);
        EXPECT(gbc.readMem(0x8116), 0xd3);
        // CB D3 0087
        gbc.setState(0x69b7, 0x790, 0xe610, 0x498d, 0xcc66, 0xa0ba, 0x0, 0x1);
        gbc.writeMem(0x69b7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x790);
        EXPECT(gbc.pc(), 0x69b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0088
        gbc.setState(0x8083, 0xf8b8, 0x67d0, 0xa3fa, 0xd429, 0xcaa, 0x1, 0x1);
        gbc.writeMem(0x8083, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf8b8);
        EXPECT(gbc.pc(), 0x8085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8083), 0xcb);
        EXPECT(gbc.readMem(0x8084), 0xd3);
        // CB D3 0089
        gbc.setState(0xe01, 0xafd6, 0x9bb0, 0xade5, 0x141e, 0xcad0, 0x1, 0x0);
        gbc.writeMem(0xe01, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xafd6);
        EXPECT(gbc.pc(), 0xe03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 008B
        gbc.setState(0xcd26, 0x7052, 0xda00, 0x258c, 0x78cf, 0xbf60, 0x1, 0x0);
        gbc.writeMem(0xcd26, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7052);
        EXPECT(gbc.pc(), 0xcd28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd26), 0xcb);
        EXPECT(gbc.readMem(0xcd27), 0xd3);
        // CB D3 008C
        gbc.setState(0xc8a, 0xdb49, 0x490, 0x9a, 0x4159, 0x1812, 0x1, 0x0);
        gbc.writeMem(0xc8a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdb49);
        EXPECT(gbc.pc(), 0xc8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 008E
        gbc.setState(0xb5c1, 0x5cf3, 0x10d0, 0x807d, 0x9ac, 0x1e01, 0x1, 0x0);
        gbc.writeMem(0xb5c1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5cf3);
        EXPECT(gbc.pc(), 0xb5c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c1), 0xcb);
        EXPECT(gbc.readMem(0xb5c2), 0xd3);
        // CB D3 008F
        gbc.setState(0x62eb, 0x3616, 0xbb80, 0xf872, 0x2614, 0x788f, 0x0, 0x0);
        gbc.writeMem(0x62eb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3616);
        EXPECT(gbc.pc(), 0x62ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0090
        gbc.setState(0xb5d6, 0xd815, 0xa00, 0x78a2, 0x3f45, 0x8d25, 0x1, 0x1);
        gbc.writeMem(0xb5d6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd815);
        EXPECT(gbc.pc(), 0xb5d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5d6), 0xcb);
        EXPECT(gbc.readMem(0xb5d7), 0xd3);
        // CB D3 0092
        gbc.setState(0x1da, 0x8641, 0x5a30, 0x667c, 0xc62a, 0x7a30, 0x0, 0x0);
        gbc.writeMem(0x1da, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8641);
        EXPECT(gbc.pc(), 0x1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0093
        gbc.setState(0x14bf, 0x894a, 0xd790, 0xc9eb, 0x9408, 0x1c27, 0x0, 0x0);
        gbc.writeMem(0x14bf, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x894a);
        EXPECT(gbc.pc(), 0x14c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0094
        gbc.setState(0xd804, 0xe1f1, 0x7080, 0xb99d, 0x6876, 0x781d, 0x0, 0x0);
        gbc.writeMem(0xd804, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe1f1);
        EXPECT(gbc.pc(), 0xd806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd804), 0xcb);
        EXPECT(gbc.readMem(0xd805), 0xd3);
        // CB D3 0095
        gbc.setState(0x1b35, 0xee1f, 0x96b0, 0xd936, 0x34ac, 0x2e43, 0x1, 0x0);
        gbc.writeMem(0x1b35, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xee1f);
        EXPECT(gbc.pc(), 0x1b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0096
        gbc.setState(0x920e, 0x6626, 0x66c0, 0x293d, 0xfbff, 0xbc3, 0x1, 0x1);
        gbc.writeMem(0x920e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6626);
        EXPECT(gbc.pc(), 0x9210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x920e), 0xcb);
        EXPECT(gbc.readMem(0x920f), 0xd3);
        // CB D3 0097
        gbc.setState(0x812d, 0xe65a, 0x6070, 0xeffe, 0x43b9, 0x2c06, 0x0, 0x1);
        gbc.writeMem(0x812d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe65a);
        EXPECT(gbc.pc(), 0x812f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x812d), 0xcb);
        EXPECT(gbc.readMem(0x812e), 0xd3);
        // CB D3 0098
        gbc.setState(0x88c2, 0xb4d2, 0x8bd0, 0x4731, 0xcd13, 0xb0d, 0x1, 0x1);
        gbc.writeMem(0x88c2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb4d2);
        EXPECT(gbc.pc(), 0x88c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c2), 0xcb);
        EXPECT(gbc.readMem(0x88c3), 0xd3);
        // CB D3 009A
        gbc.setState(0x6da1, 0x9e7a, 0x5e30, 0x7e2b, 0x8a60, 0xa819, 0x0, 0x1);
        gbc.writeMem(0x6da1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9e7a);
        EXPECT(gbc.pc(), 0x6da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 009B
        gbc.setState(0xb434, 0x4a0f, 0x5fa0, 0xa5bd, 0x3f53, 0x47e7, 0x0, 0x0);
        gbc.writeMem(0xb434, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4a0f);
        EXPECT(gbc.pc(), 0xb436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb434), 0xcb);
        EXPECT(gbc.readMem(0xb435), 0xd3);
        // CB D3 009C
        gbc.setState(0xebfc, 0x297, 0x1bb0, 0x9750, 0xa235, 0x3c2, 0x1, 0x1);
        gbc.writeMem(0xebfc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x297);
        EXPECT(gbc.pc(), 0xebfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfc), 0xcb);
        EXPECT(gbc.readMem(0xebfd), 0xd3);
        // CB D3 009D
        gbc.setState(0xe67a, 0x2d10, 0xe710, 0x4388, 0xdc32, 0xce33, 0x1, 0x0);
        gbc.writeMem(0xe67a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2d10);
        EXPECT(gbc.pc(), 0xe67c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe67a), 0xcb);
        EXPECT(gbc.readMem(0xe67b), 0xd3);
        // CB D3 009E
        gbc.setState(0xda4b, 0x250e, 0x6f80, 0xafbd, 0xd115, 0xf14b, 0x0, 0x0);
        gbc.writeMem(0xda4b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x250e);
        EXPECT(gbc.pc(), 0xda4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda4b), 0xcb);
        EXPECT(gbc.readMem(0xda4c), 0xd3);
        // CB D3 009F
        gbc.setState(0x43be, 0xdedd, 0xdff0, 0x4f01, 0xf0ee, 0x2bc5, 0x1, 0x0);
        gbc.writeMem(0x43be, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xdedd);
        EXPECT(gbc.pc(), 0x43c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00A0
        gbc.setState(0xaa35, 0x1ad6, 0x4350, 0x178b, 0x3ade, 0xd22f, 0x0, 0x0);
        gbc.writeMem(0xaa35, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1ad6);
        EXPECT(gbc.pc(), 0xaa37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa35), 0xcb);
        EXPECT(gbc.readMem(0xaa36), 0xd3);
        // CB D3 00A1
        gbc.setState(0xdd8c, 0x3e49, 0xcfb0, 0x6ae7, 0x49e5, 0x81e, 0x0, 0x1);
        gbc.writeMem(0xdd8c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3e49);
        EXPECT(gbc.pc(), 0xdd8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd8c), 0xcb);
        EXPECT(gbc.readMem(0xdd8d), 0xd3);
        // CB D3 00A2
        gbc.setState(0xe9bb, 0xee0c, 0x4020, 0x1424, 0x3350, 0xdc41, 0x1, 0x0);
        gbc.writeMem(0xe9bb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xee0c);
        EXPECT(gbc.pc(), 0xe9bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9bb), 0xcb);
        EXPECT(gbc.readMem(0xe9bc), 0xd3);
        // CB D3 00A3
        gbc.setState(0x67c9, 0x393f, 0x8280, 0x6d14, 0xe768, 0x144e, 0x1, 0x1);
        gbc.writeMem(0x67c9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x393f);
        EXPECT(gbc.pc(), 0x67cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00A4
        gbc.setState(0xb511, 0xdf47, 0x4b50, 0xb02b, 0x9694, 0x2ee6, 0x0, 0x0);
        gbc.writeMem(0xb511, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdf47);
        EXPECT(gbc.pc(), 0xb513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb511), 0xcb);
        EXPECT(gbc.readMem(0xb512), 0xd3);
        // CB D3 00A5
        gbc.setState(0x25e4, 0x91e4, 0x6f80, 0xd2f8, 0xa03, 0xc258, 0x1, 0x0);
        gbc.writeMem(0x25e4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x91e4);
        EXPECT(gbc.pc(), 0x25e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00A6
        gbc.setState(0x9f1c, 0xd8c0, 0x6c30, 0xe249, 0x6ec1, 0x66fd, 0x0, 0x1);
        gbc.writeMem(0x9f1c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd8c0);
        EXPECT(gbc.pc(), 0x9f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f1c), 0xcb);
        EXPECT(gbc.readMem(0x9f1d), 0xd3);
        // CB D3 00A7
        gbc.setState(0x998e, 0x9fb, 0x8570, 0x50da, 0x5402, 0xe723, 0x1, 0x0);
        gbc.writeMem(0x998e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9fb);
        EXPECT(gbc.pc(), 0x9990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998e), 0xcb);
        EXPECT(gbc.readMem(0x998f), 0xd3);
        // CB D3 00A8
        gbc.setState(0xec16, 0x38c8, 0xcce0, 0xfb89, 0xd7a9, 0x6efb, 0x0, 0x1);
        gbc.writeMem(0xec16, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x38c8);
        EXPECT(gbc.pc(), 0xec18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec16), 0xcb);
        EXPECT(gbc.readMem(0xec17), 0xd3);
        // CB D3 00A9
        gbc.setState(0xe207, 0x669e, 0xeac0, 0x4cf0, 0x640c, 0x965b, 0x0, 0x1);
        gbc.writeMem(0xe207, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x669e);
        EXPECT(gbc.pc(), 0xe209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe207), 0xcb);
        EXPECT(gbc.readMem(0xe208), 0xd3);
        // CB D3 00AA
        gbc.setState(0x762a, 0xc042, 0xc940, 0x8152, 0x97f1, 0x7e3e, 0x1, 0x1);
        gbc.writeMem(0x762a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc042);
        EXPECT(gbc.pc(), 0x762c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00AB
        gbc.setState(0xd87c, 0xdd21, 0x3a50, 0x4a91, 0xca2, 0x35a, 0x0, 0x0);
        gbc.writeMem(0xd87c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdd21);
        EXPECT(gbc.pc(), 0xd87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd87c), 0xcb);
        EXPECT(gbc.readMem(0xd87d), 0xd3);
        // CB D3 00AC
        gbc.setState(0x23d5, 0xed00, 0x3010, 0x541d, 0x4da1, 0x66e7, 0x1, 0x0);
        gbc.writeMem(0x23d5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xed00);
        EXPECT(gbc.pc(), 0x23d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00AD
        gbc.setState(0xbf01, 0xf3e7, 0xb940, 0xdaa3, 0x392f, 0x5481, 0x1, 0x0);
        gbc.writeMem(0xbf01, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf3e7);
        EXPECT(gbc.pc(), 0xbf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf01), 0xcb);
        EXPECT(gbc.readMem(0xbf02), 0xd3);
        // CB D3 00AE
        gbc.setState(0x40e, 0xe266, 0x59a0, 0x3751, 0xabf1, 0x2fda, 0x0, 0x0);
        gbc.writeMem(0x40e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe266);
        EXPECT(gbc.pc(), 0x410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00AF
        gbc.setState(0xd684, 0x9a46, 0xda30, 0x8d52, 0xc342, 0x18d8, 0x1, 0x1);
        gbc.writeMem(0xd684, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9a46);
        EXPECT(gbc.pc(), 0xd686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd684), 0xcb);
        EXPECT(gbc.readMem(0xd685), 0xd3);
        // CB D3 00B0
        gbc.setState(0x81ae, 0x74a1, 0x6980, 0xfa24, 0xf2f3, 0x6987, 0x0, 0x1);
        gbc.writeMem(0x81ae, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x74a1);
        EXPECT(gbc.pc(), 0x81b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ae), 0xcb);
        EXPECT(gbc.readMem(0x81af), 0xd3);
        // CB D3 00B2
        gbc.setState(0xd47, 0x7386, 0x4c10, 0x73fe, 0x426d, 0xb610, 0x0, 0x1);
        gbc.writeMem(0xd47, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7386);
        EXPECT(gbc.pc(), 0xd49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00B3
        gbc.setState(0x715e, 0x2a5f, 0x19b0, 0x75f, 0xaec3, 0x8985, 0x1, 0x1);
        gbc.writeMem(0x715e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2a5f);
        EXPECT(gbc.pc(), 0x7160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00B4
        gbc.setState(0x3273, 0x9c54, 0x1b80, 0xda0, 0x44da, 0xbca4, 0x0, 0x0);
        gbc.writeMem(0x3273, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9c54);
        EXPECT(gbc.pc(), 0x3275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00B6
        gbc.setState(0x8d4c, 0xf506, 0x7ea0, 0x323b, 0x806b, 0xbc39, 0x1, 0x1);
        gbc.writeMem(0x8d4c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf506);
        EXPECT(gbc.pc(), 0x8d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4c), 0xcb);
        EXPECT(gbc.readMem(0x8d4d), 0xd3);
        // CB D3 00B7
        gbc.setState(0x2f5f, 0xb904, 0x44c0, 0x6e8b, 0xde0e, 0x65c6, 0x1, 0x1);
        gbc.writeMem(0x2f5f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb904);
        EXPECT(gbc.pc(), 0x2f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00B8
        gbc.setState(0x5294, 0x2359, 0x29b0, 0xf10c, 0xef44, 0x8c36, 0x1, 0x0);
        gbc.writeMem(0x5294, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2359);
        EXPECT(gbc.pc(), 0x5296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00B9
        gbc.setState(0x1d3b, 0x5ba8, 0xc410, 0xce8f, 0xfe4b, 0x68d1, 0x0, 0x1);
        gbc.writeMem(0x1d3b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5ba8);
        EXPECT(gbc.pc(), 0x1d3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00BA
        gbc.setState(0xb136, 0x161f, 0x7220, 0x1d94, 0x73bd, 0xd97, 0x0, 0x1);
        gbc.writeMem(0xb136, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x161f);
        EXPECT(gbc.pc(), 0xb138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb136), 0xcb);
        EXPECT(gbc.readMem(0xb137), 0xd3);
        // CB D3 00BB
        gbc.setState(0xb4a, 0x128e, 0x9a80, 0x27aa, 0x52f9, 0xca1b, 0x0, 0x0);
        gbc.writeMem(0xb4a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x128e);
        EXPECT(gbc.pc(), 0xb4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00BC
        gbc.setState(0x7bc8, 0x2c07, 0x4c90, 0xb841, 0x7d, 0x6314, 0x1, 0x0);
        gbc.writeMem(0x7bc8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2c07);
        EXPECT(gbc.pc(), 0x7bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00BD
        gbc.setState(0xd13f, 0x52b, 0xbfc0, 0xc5c2, 0xedb5, 0xceef, 0x1, 0x0);
        gbc.writeMem(0xd13f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x52b);
        EXPECT(gbc.pc(), 0xd141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13f), 0xcb);
        EXPECT(gbc.readMem(0xd140), 0xd3);
        // CB D3 00BE
        gbc.setState(0x883d, 0x2c88, 0xe9b0, 0xb5e5, 0x4abe, 0xf2f0, 0x0, 0x0);
        gbc.writeMem(0x883d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2c88);
        EXPECT(gbc.pc(), 0x883f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x883d), 0xcb);
        EXPECT(gbc.readMem(0x883e), 0xd3);
        // CB D3 00BF
        gbc.setState(0x3812, 0xc940, 0x9a0, 0xdbc3, 0x1548, 0xc6c5, 0x0, 0x0);
        gbc.writeMem(0x3812, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc940);
        EXPECT(gbc.pc(), 0x3814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00C0
        gbc.setState(0xdc1f, 0x6986, 0x7e60, 0x4b90, 0x24a9, 0x2ac0, 0x1, 0x1);
        gbc.writeMem(0xdc1f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6986);
        EXPECT(gbc.pc(), 0xdc21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc1f), 0xcb);
        EXPECT(gbc.readMem(0xdc20), 0xd3);
        // CB D3 00C1
        gbc.setState(0x617c, 0x3b1, 0x1a20, 0x95a4, 0x6858, 0x3547, 0x1, 0x0);
        gbc.writeMem(0x617c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3b1);
        EXPECT(gbc.pc(), 0x617e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00C2
        gbc.setState(0x88f8, 0xd39, 0x500, 0x3d58, 0xb2da, 0x85d2, 0x1, 0x0);
        gbc.writeMem(0x88f8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd39);
        EXPECT(gbc.pc(), 0x88fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f8), 0xcb);
        EXPECT(gbc.readMem(0x88f9), 0xd3);
        // CB D3 00C3
        gbc.setState(0x7bee, 0x6b83, 0x5380, 0x1a21, 0x2bcc, 0x31f7, 0x0, 0x1);
        gbc.writeMem(0x7bee, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6b83);
        EXPECT(gbc.pc(), 0x7bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00C4
        gbc.setState(0xea50, 0x88c5, 0xd920, 0x7a8c, 0x8a54, 0x3499, 0x1, 0x0);
        gbc.writeMem(0xea50, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x88c5);
        EXPECT(gbc.pc(), 0xea52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea50), 0xcb);
        EXPECT(gbc.readMem(0xea51), 0xd3);
        // CB D3 00C5
        gbc.setState(0xea27, 0xa26e, 0xf020, 0x7dbc, 0xa261, 0x47c7, 0x1, 0x1);
        gbc.writeMem(0xea27, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa26e);
        EXPECT(gbc.pc(), 0xea29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea27), 0xcb);
        EXPECT(gbc.readMem(0xea28), 0xd3);
        // CB D3 00C6
        gbc.setState(0xd95c, 0xf611, 0xf610, 0x4fdb, 0xcbcf, 0x7cda, 0x0, 0x1);
        gbc.writeMem(0xd95c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf611);
        EXPECT(gbc.pc(), 0xd95e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd95c), 0xcb);
        EXPECT(gbc.readMem(0xd95d), 0xd3);
        // CB D3 00C7
        gbc.setState(0xd6b5, 0x28ed, 0x5dc0, 0x400b, 0x8194, 0x235f, 0x0, 0x0);
        gbc.writeMem(0xd6b5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x28ed);
        EXPECT(gbc.pc(), 0xd6b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b5), 0xcb);
        EXPECT(gbc.readMem(0xd6b6), 0xd3);
        // CB D3 00C8
        gbc.setState(0x3bb5, 0xe29b, 0xa9f0, 0x633a, 0x9aa, 0x8e48, 0x1, 0x0);
        gbc.writeMem(0x3bb5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe29b);
        EXPECT(gbc.pc(), 0x3bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00C9
        gbc.setState(0x21f0, 0x2fb5, 0xe850, 0xbb82, 0xf865, 0x7743, 0x0, 0x0);
        gbc.writeMem(0x21f0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2fb5);
        EXPECT(gbc.pc(), 0x21f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00CA
        gbc.setState(0xa194, 0x7d2b, 0xd990, 0x1586, 0x738b, 0x9fe1, 0x1, 0x1);
        gbc.writeMem(0xa194, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7d2b);
        EXPECT(gbc.pc(), 0xa196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa194), 0xcb);
        EXPECT(gbc.readMem(0xa195), 0xd3);
        // CB D3 00CB
        gbc.setState(0x9ca9, 0xfe66, 0xd370, 0x8bd0, 0xd526, 0x4a5c, 0x1, 0x0);
        gbc.writeMem(0x9ca9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xfe66);
        EXPECT(gbc.pc(), 0x9cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca9), 0xcb);
        EXPECT(gbc.readMem(0x9caa), 0xd3);
        // CB D3 00CC
        gbc.setState(0xd85c, 0x396a, 0x6580, 0x19e2, 0xd18e, 0xa195, 0x1, 0x1);
        gbc.writeMem(0xd85c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x396a);
        EXPECT(gbc.pc(), 0xd85e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd85c), 0xcb);
        EXPECT(gbc.readMem(0xd85d), 0xd3);
        // CB D3 00CD
        gbc.setState(0xd34f, 0xb65, 0x6d50, 0xd2d2, 0xab2d, 0xfde7, 0x0, 0x1);
        gbc.writeMem(0xd34f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb65);
        EXPECT(gbc.pc(), 0xd351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd34f), 0xcb);
        EXPECT(gbc.readMem(0xd350), 0xd3);
        // CB D3 00CE
        gbc.setState(0x9c0b, 0x6d6, 0xf780, 0xe231, 0x6b18, 0x8be4, 0x1, 0x1);
        gbc.writeMem(0x9c0b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6d6);
        EXPECT(gbc.pc(), 0x9c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0b), 0xcb);
        EXPECT(gbc.readMem(0x9c0c), 0xd3);
        // CB D3 00CF
        gbc.setState(0xe8c1, 0x5ea6, 0x9f50, 0x92b2, 0xfc47, 0xc0e3, 0x0, 0x0);
        gbc.writeMem(0xe8c1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5ea6);
        EXPECT(gbc.pc(), 0xe8c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c1), 0xcb);
        EXPECT(gbc.readMem(0xe8c2), 0xd3);
        // CB D3 00D0
        gbc.setState(0xe94f, 0x3b1e, 0x34b0, 0x1e47, 0x7d84, 0xbb49, 0x0, 0x0);
        gbc.writeMem(0xe94f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3b1e);
        EXPECT(gbc.pc(), 0xe951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe94f), 0xcb);
        EXPECT(gbc.readMem(0xe950), 0xd3);
        // CB D3 00D1
        gbc.setState(0x7288, 0x43b8, 0x0, 0x62a6, 0xbfea, 0xa46f, 0x1, 0x0);
        gbc.writeMem(0x7288, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x43b8);
        EXPECT(gbc.pc(), 0x728a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00D2
        gbc.setState(0x9762, 0x56ca, 0xac80, 0xbbab, 0xaa0d, 0x7717, 0x0, 0x0);
        gbc.writeMem(0x9762, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x56ca);
        EXPECT(gbc.pc(), 0x9764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9762), 0xcb);
        EXPECT(gbc.readMem(0x9763), 0xd3);
        // CB D3 00D3
        gbc.setState(0x5249, 0x3f4d, 0x51f0, 0x132c, 0x3ef6, 0x7ae4, 0x1, 0x0);
        gbc.writeMem(0x5249, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3f4d);
        EXPECT(gbc.pc(), 0x524b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00D4
        gbc.setState(0x5bfe, 0x2d82, 0xa160, 0xbb2a, 0xb977, 0x8999, 0x0, 0x1);
        gbc.writeMem(0x5bfe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2d82);
        EXPECT(gbc.pc(), 0x5c00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00D5
        gbc.setState(0xc350, 0x7913, 0xd780, 0x5455, 0x792d, 0x6187, 0x1, 0x1);
        gbc.writeMem(0xc350, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7913);
        EXPECT(gbc.pc(), 0xc352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc350), 0xcb);
        EXPECT(gbc.readMem(0xc351), 0xd3);
        // CB D3 00D6
        gbc.setState(0x58cd, 0x16d9, 0x2a60, 0x9e1d, 0xb498, 0x1d3a, 0x1, 0x0);
        gbc.writeMem(0x58cd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x16d9);
        EXPECT(gbc.pc(), 0x58cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00D7
        gbc.setState(0x3f4, 0xa718, 0x7bb0, 0x1572, 0x8728, 0x496a, 0x1, 0x1);
        gbc.writeMem(0x3f4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa718);
        EXPECT(gbc.pc(), 0x3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00D8
        gbc.setState(0x13b2, 0x14a7, 0x8a10, 0x251e, 0x8659, 0xd207, 0x0, 0x0);
        gbc.writeMem(0x13b2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x14a7);
        EXPECT(gbc.pc(), 0x13b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00D9
        gbc.setState(0xce6f, 0x8a28, 0x8290, 0xc07f, 0xcbbf, 0x56d8, 0x1, 0x1);
        gbc.writeMem(0xce6f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8a28);
        EXPECT(gbc.pc(), 0xce71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce6f), 0xcb);
        EXPECT(gbc.readMem(0xce70), 0xd3);
        // CB D3 00DA
        gbc.setState(0x71a6, 0xa139, 0x5fd0, 0x8f64, 0x2e6e, 0x8480, 0x1, 0x1);
        gbc.writeMem(0x71a6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa139);
        EXPECT(gbc.pc(), 0x71a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00DB
        gbc.setState(0x3b94, 0xfb1d, 0xafb0, 0x4759, 0xbfbb, 0xec86, 0x0, 0x0);
        gbc.writeMem(0x3b94, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xfb1d);
        EXPECT(gbc.pc(), 0x3b96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00DC
        gbc.setState(0xd7fd, 0x5c13, 0xdcd0, 0x2708, 0x7cd6, 0x9607, 0x1, 0x1);
        gbc.writeMem(0xd7fd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5c13);
        EXPECT(gbc.pc(), 0xd7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7fd), 0xcb);
        EXPECT(gbc.readMem(0xd7fe), 0xd3);
        // CB D3 00DD
        gbc.setState(0x41df, 0xfff4, 0x8e40, 0x7391, 0x9a24, 0x126f, 0x1, 0x1);
        gbc.writeMem(0x41df, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfff4);
        EXPECT(gbc.pc(), 0x41e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00DE
        gbc.setState(0x2a02, 0x39a7, 0x4ca0, 0xd14e, 0x9b17, 0x65b0, 0x0, 0x1);
        gbc.writeMem(0x2a02, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x39a7);
        EXPECT(gbc.pc(), 0x2a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00DF
        gbc.setState(0x639, 0x1908, 0x66c0, 0xa8fc, 0x7615, 0xdf40, 0x0, 0x1);
        gbc.writeMem(0x639, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1908);
        EXPECT(gbc.pc(), 0x63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00E0
        gbc.setState(0x2498, 0x57f5, 0x1b80, 0x432b, 0x8221, 0xd423, 0x0, 0x1);
        gbc.writeMem(0x2498, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x57f5);
        EXPECT(gbc.pc(), 0x249a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00E1
        gbc.setState(0x577, 0x66cc, 0xe3f0, 0x383a, 0x9504, 0x9b96, 0x1, 0x1);
        gbc.writeMem(0x577, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x66cc);
        EXPECT(gbc.pc(), 0x579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00E2
        gbc.setState(0x5956, 0x6f11, 0x8d50, 0xf825, 0x5acd, 0xb8bc, 0x1, 0x0);
        gbc.writeMem(0x5956, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6f11);
        EXPECT(gbc.pc(), 0x5958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00E3
        gbc.setState(0x3a39, 0xbc3d, 0x24d0, 0x9cf2, 0x8761, 0xe4bc, 0x0, 0x0);
        gbc.writeMem(0x3a39, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbc3d);
        EXPECT(gbc.pc(), 0x3a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00E4
        gbc.setState(0xd5d, 0x5184, 0xe340, 0xa5a7, 0xe3ff, 0xb3b8, 0x0, 0x1);
        gbc.writeMem(0xd5d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5184);
        EXPECT(gbc.pc(), 0xd5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00E5
        gbc.setState(0xab63, 0x5ef, 0xde70, 0x77c3, 0x2228, 0x440d, 0x0, 0x0);
        gbc.writeMem(0xab63, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5ef);
        EXPECT(gbc.pc(), 0xab65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab63), 0xcb);
        EXPECT(gbc.readMem(0xab64), 0xd3);
        // CB D3 00E6
        gbc.setState(0xc06, 0xa094, 0x6be0, 0xccc5, 0x2a40, 0xecdd, 0x0, 0x1);
        gbc.writeMem(0xc06, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa094);
        EXPECT(gbc.pc(), 0xc08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00E7
        gbc.setState(0x130b, 0xbd1, 0x1a00, 0x6e51, 0x5173, 0xa7da, 0x0, 0x1);
        gbc.writeMem(0x130b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xbd1);
        EXPECT(gbc.pc(), 0x130d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00E8
        gbc.setState(0xd9a3, 0x976b, 0xcc60, 0x6e28, 0x902f, 0xa99a, 0x0, 0x0);
        gbc.writeMem(0xd9a3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x976b);
        EXPECT(gbc.pc(), 0xd9a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a3), 0xcb);
        EXPECT(gbc.readMem(0xd9a4), 0xd3);
        // CB D3 00E9
        gbc.setState(0x7296, 0x1be2, 0x7e0, 0x433d, 0x92b8, 0x73f9, 0x1, 0x1);
        gbc.writeMem(0x7296, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1be2);
        EXPECT(gbc.pc(), 0x7298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00EA
        gbc.setState(0x5208, 0x5cef, 0xd570, 0x897a, 0xe815, 0xf74e, 0x1, 0x1);
        gbc.writeMem(0x5208, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5cef);
        EXPECT(gbc.pc(), 0x520a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00EB
        gbc.setState(0x377a, 0xb867, 0x2c30, 0x143a, 0x2cb2, 0x926e, 0x1, 0x1);
        gbc.writeMem(0x377a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb867);
        EXPECT(gbc.pc(), 0x377c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00EC
        gbc.setState(0xe008, 0xc5d8, 0xe590, 0xcc26, 0xe3e9, 0xf529, 0x0, 0x0);
        gbc.writeMem(0xe008, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc5d8);
        EXPECT(gbc.pc(), 0xe00a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe008), 0xcb);
        EXPECT(gbc.readMem(0xe009), 0xd3);
        // CB D3 00ED
        gbc.setState(0x1244, 0x4699, 0xb40, 0xc233, 0x8534, 0x2079, 0x0, 0x0);
        gbc.writeMem(0x1244, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4699);
        EXPECT(gbc.pc(), 0x1246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00EE
        gbc.setState(0x773f, 0xc62e, 0xbff0, 0x73cd, 0x2ba, 0x1318, 0x1, 0x1);
        gbc.writeMem(0x773f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc62e);
        EXPECT(gbc.pc(), 0x7741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00EF
        gbc.setState(0x7c86, 0x8b83, 0xf210, 0x708, 0xcbdd, 0x40ca, 0x1, 0x1);
        gbc.writeMem(0x7c86, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8b83);
        EXPECT(gbc.pc(), 0x7c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00F0
        gbc.setState(0x3d0d, 0xfd62, 0xe1f0, 0x40a2, 0x483e, 0x211d, 0x1, 0x0);
        gbc.writeMem(0x3d0d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfd62);
        EXPECT(gbc.pc(), 0x3d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00F1
        gbc.setState(0x82fa, 0x3bbf, 0x7c80, 0x775d, 0x7091, 0xb498, 0x1, 0x0);
        gbc.writeMem(0x82fa, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3bbf);
        EXPECT(gbc.pc(), 0x82fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82fa), 0xcb);
        EXPECT(gbc.readMem(0x82fb), 0xd3);
        // CB D3 00F2
        gbc.setState(0x585e, 0x4bc5, 0x3650, 0xe85a, 0xe4df, 0xc234, 0x0, 0x0);
        gbc.writeMem(0x585e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4bc5);
        EXPECT(gbc.pc(), 0x5860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00F3
        gbc.setState(0x26da, 0x4309, 0x1e70, 0xb2d2, 0xfd7f, 0x4b33, 0x0, 0x1);
        gbc.writeMem(0x26da, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4309);
        EXPECT(gbc.pc(), 0x26dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00F4
        gbc.setState(0x90cb, 0x2088, 0x50a0, 0xbe97, 0xe570, 0x7240, 0x0, 0x0);
        gbc.writeMem(0x90cb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2088);
        EXPECT(gbc.pc(), 0x90cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90cb), 0xcb);
        EXPECT(gbc.readMem(0x90cc), 0xd3);
        // CB D3 00F5
        gbc.setState(0xedf4, 0x8e82, 0x6790, 0x9138, 0xeb14, 0x334b, 0x1, 0x0);
        gbc.writeMem(0xedf4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8e82);
        EXPECT(gbc.pc(), 0xedf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf4), 0xcb);
        EXPECT(gbc.readMem(0xedf5), 0xd3);
        // CB D3 00F6
        gbc.setState(0x5c87, 0xcf3a, 0x4c10, 0x75b7, 0x5ad8, 0x25b1, 0x0, 0x0);
        gbc.writeMem(0x5c87, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcf3a);
        EXPECT(gbc.pc(), 0x5c89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00F7
        gbc.setState(0x71e, 0xb1e7, 0x4820, 0x776, 0x1ed1, 0xacce, 0x0, 0x1);
        gbc.writeMem(0x71e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb1e7);
        EXPECT(gbc.pc(), 0x720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00F8
        gbc.setState(0x510c, 0xf307, 0x93d0, 0x4896, 0xfda6, 0x31c3, 0x1, 0x1);
        gbc.writeMem(0x510c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf307);
        EXPECT(gbc.pc(), 0x510e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00F9
        gbc.setState(0x7b6a, 0xdd5b, 0xcf60, 0x807, 0x4b8a, 0xc637, 0x1, 0x1);
        gbc.writeMem(0x7b6a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdd5b);
        EXPECT(gbc.pc(), 0x7b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00FA
        gbc.setState(0x72e4, 0xcc2a, 0x7a20, 0x1232, 0xb0cb, 0x4dd8, 0x1, 0x0);
        gbc.writeMem(0x72e4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcc2a);
        EXPECT(gbc.pc(), 0x72e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 00FB
        gbc.setState(0x9615, 0xd4e6, 0x9750, 0xd934, 0x9ebc, 0x5edd, 0x1, 0x0);
        gbc.writeMem(0x9615, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd4e6);
        EXPECT(gbc.pc(), 0x9617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9615), 0xcb);
        EXPECT(gbc.readMem(0x9616), 0xd3);
        // CB D3 00FC
        gbc.setState(0xb2e8, 0x7764, 0xc940, 0x5ed1, 0x6bf0, 0x7b7e, 0x0, 0x1);
        gbc.writeMem(0xb2e8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7764);
        EXPECT(gbc.pc(), 0xb2ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e8), 0xcb);
        EXPECT(gbc.readMem(0xb2e9), 0xd3);
        // CB D3 00FD
        gbc.setState(0xdd0c, 0x9988, 0xbc40, 0x4f4f, 0x8fbb, 0xdbdf, 0x0, 0x1);
        gbc.writeMem(0xdd0c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9988);
        EXPECT(gbc.pc(), 0xdd0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd0c), 0xcb);
        EXPECT(gbc.readMem(0xdd0d), 0xd3);
        // CB D3 00FE
        gbc.setState(0x53c2, 0xe9c0, 0x5eb0, 0xfea7, 0x44ef, 0x79c8, 0x0, 0x1);
        gbc.writeMem(0x53c2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe9c0);
        EXPECT(gbc.pc(), 0x53c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 00FF
        gbc.setState(0x7ec5, 0xe885, 0x120, 0xc45a, 0x37e5, 0x5af2, 0x1, 0x0);
        gbc.writeMem(0x7ec5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe885);
        EXPECT(gbc.pc(), 0x7ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0100
        gbc.setState(0xdc3, 0xaa4, 0x9010, 0x18f4, 0x2926, 0x8e67, 0x1, 0x1);
        gbc.writeMem(0xdc3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xaa4);
        EXPECT(gbc.pc(), 0xdc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0101
        gbc.setState(0xa68c, 0xaec4, 0x70f0, 0x47c9, 0x7cdb, 0xb445, 0x1, 0x0);
        gbc.writeMem(0xa68c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xaec4);
        EXPECT(gbc.pc(), 0xa68e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa68c), 0xcb);
        EXPECT(gbc.readMem(0xa68d), 0xd3);
        // CB D3 0103
        gbc.setState(0xe2d8, 0x4ba2, 0xc910, 0x8065, 0x1480, 0x62a, 0x0, 0x0);
        gbc.writeMem(0xe2d8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4ba2);
        EXPECT(gbc.pc(), 0xe2da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d8), 0xcb);
        EXPECT(gbc.readMem(0xe2d9), 0xd3);
        // CB D3 0104
        gbc.setState(0x6232, 0x1fee, 0x41c0, 0x2f74, 0xae97, 0xc04e, 0x1, 0x1);
        gbc.writeMem(0x6232, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1fee);
        EXPECT(gbc.pc(), 0x6234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0105
        gbc.setState(0xda4, 0x6eb, 0x820, 0xadb0, 0xbacd, 0xee8e, 0x0, 0x1);
        gbc.writeMem(0xda4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6eb);
        EXPECT(gbc.pc(), 0xda6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0106
        gbc.setState(0x5f2e, 0x7fbb, 0x18d0, 0xe6d3, 0x3c65, 0x226d, 0x1, 0x1);
        gbc.writeMem(0x5f2e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7fbb);
        EXPECT(gbc.pc(), 0x5f30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0107
        gbc.setState(0xb13f, 0x40ef, 0x51c0, 0x790f, 0x339d, 0x3ad4, 0x0, 0x1);
        gbc.writeMem(0xb13f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x40ef);
        EXPECT(gbc.pc(), 0xb141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb13f), 0xcb);
        EXPECT(gbc.readMem(0xb140), 0xd3);
        // CB D3 0108
        gbc.setState(0x70b2, 0x1816, 0x1f10, 0x7f12, 0x18c6, 0x6bb9, 0x1, 0x0);
        gbc.writeMem(0x70b2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1816);
        EXPECT(gbc.pc(), 0x70b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0109
        gbc.setState(0x234b, 0x8692, 0x52e0, 0x4fd5, 0xb968, 0x9239, 0x1, 0x0);
        gbc.writeMem(0x234b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8692);
        EXPECT(gbc.pc(), 0x234d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 010A
        gbc.setState(0x55b8, 0xf82a, 0x5c50, 0x138d, 0xb347, 0x4c4c, 0x0, 0x0);
        gbc.writeMem(0x55b8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf82a);
        EXPECT(gbc.pc(), 0x55ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 010B
        gbc.setState(0x1e33, 0x3052, 0xf180, 0x5915, 0x6741, 0x4958, 0x1, 0x1);
        gbc.writeMem(0x1e33, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3052);
        EXPECT(gbc.pc(), 0x1e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 010C
        gbc.setState(0x6746, 0x959, 0x9bd0, 0xd1be, 0xf81a, 0x6fb6, 0x0, 0x0);
        gbc.writeMem(0x6746, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x959);
        EXPECT(gbc.pc(), 0x6748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 010D
        gbc.setState(0x68f2, 0x417c, 0x5e0, 0x2973, 0xc52b, 0x10c5, 0x0, 0x1);
        gbc.writeMem(0x68f2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x417c);
        EXPECT(gbc.pc(), 0x68f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 010F
        gbc.setState(0x415, 0xeb45, 0x31b0, 0x9b35, 0x2f6b, 0x35f4, 0x0, 0x0);
        gbc.writeMem(0x415, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xeb45);
        EXPECT(gbc.pc(), 0x417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0110
        gbc.setState(0x84d0, 0x2a7d, 0x4420, 0x8b76, 0x2909, 0xe097, 0x0, 0x0);
        gbc.writeMem(0x84d0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2a7d);
        EXPECT(gbc.pc(), 0x84d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d0), 0xcb);
        EXPECT(gbc.readMem(0x84d1), 0xd3);
        // CB D3 0111
        gbc.setState(0xcfad, 0x4589, 0xc7e0, 0x3f05, 0x7958, 0x6f0d, 0x0, 0x0);
        gbc.writeMem(0xcfad, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4589);
        EXPECT(gbc.pc(), 0xcfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfad), 0xcb);
        EXPECT(gbc.readMem(0xcfae), 0xd3);
        // CB D3 0113
        gbc.setState(0x9a0b, 0x8603, 0x4230, 0x71d1, 0x1b4b, 0xa65d, 0x0, 0x1);
        gbc.writeMem(0x9a0b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8603);
        EXPECT(gbc.pc(), 0x9a0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a0b), 0xcb);
        EXPECT(gbc.readMem(0x9a0c), 0xd3);
        // CB D3 0114
        gbc.setState(0x29a6, 0xa488, 0x58c0, 0xa944, 0xd46f, 0xf650, 0x0, 0x0);
        gbc.writeMem(0x29a6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa488);
        EXPECT(gbc.pc(), 0x29a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0115
        gbc.setState(0xa8da, 0x4a34, 0xf950, 0x6782, 0x27c4, 0xbc26, 0x0, 0x0);
        gbc.writeMem(0xa8da, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4a34);
        EXPECT(gbc.pc(), 0xa8dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8da), 0xcb);
        EXPECT(gbc.readMem(0xa8db), 0xd3);
        // CB D3 0116
        gbc.setState(0x6864, 0x641e, 0x4c70, 0xf393, 0x53d1, 0x86d0, 0x1, 0x1);
        gbc.writeMem(0x6864, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x641e);
        EXPECT(gbc.pc(), 0x6866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0117
        gbc.setState(0xd044, 0x6375, 0x82e0, 0xf0ac, 0xa926, 0x665d, 0x1, 0x1);
        gbc.writeMem(0xd044, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6375);
        EXPECT(gbc.pc(), 0xd046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd044), 0xcb);
        EXPECT(gbc.readMem(0xd045), 0xd3);
        // CB D3 0118
        gbc.setState(0xb337, 0xfd0c, 0xed40, 0x5a5c, 0x75c5, 0x126, 0x1, 0x0);
        gbc.writeMem(0xb337, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xfd0c);
        EXPECT(gbc.pc(), 0xb339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb337), 0xcb);
        EXPECT(gbc.readMem(0xb338), 0xd3);
        // CB D3 0119
        gbc.setState(0xc91a, 0x5354, 0x9e20, 0x6012, 0x6ffc, 0x3fe7, 0x1, 0x0);
        gbc.writeMem(0xc91a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5354);
        EXPECT(gbc.pc(), 0xc91c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91a), 0xcb);
        EXPECT(gbc.readMem(0xc91b), 0xd3);
        // CB D3 011B
        gbc.setState(0x45c7, 0x4817, 0x3690, 0x5376, 0xa847, 0xe42f, 0x1, 0x0);
        gbc.writeMem(0x45c7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4817);
        EXPECT(gbc.pc(), 0x45c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 011C
        gbc.setState(0xca52, 0x9a40, 0x7c90, 0xaadf, 0xaafd, 0x7a8c, 0x1, 0x1);
        gbc.writeMem(0xca52, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9a40);
        EXPECT(gbc.pc(), 0xca54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca52), 0xcb);
        EXPECT(gbc.readMem(0xca53), 0xd3);
        // CB D3 011D
        gbc.setState(0xecfe, 0x85e0, 0xe910, 0x1b05, 0x79ae, 0x5a00, 0x0, 0x0);
        gbc.writeMem(0xecfe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x85e0);
        EXPECT(gbc.pc(), 0xed00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecfe), 0xcb);
        EXPECT(gbc.readMem(0xecff), 0xd3);
        // CB D3 011E
        gbc.setState(0x7124, 0x7e10, 0x4af0, 0x2ad7, 0x7640, 0xd97, 0x0, 0x0);
        gbc.writeMem(0x7124, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7e10);
        EXPECT(gbc.pc(), 0x7126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 011F
        gbc.setState(0x90ff, 0xa4c2, 0x8420, 0x2782, 0x14b2, 0xf65, 0x0, 0x0);
        gbc.writeMem(0x90ff, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa4c2);
        EXPECT(gbc.pc(), 0x9101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ff), 0xcb);
        EXPECT(gbc.readMem(0x9100), 0xd3);
        // CB D3 0120
        gbc.setState(0x713f, 0x21ad, 0x79d0, 0xdaf0, 0x5eb0, 0xeef6, 0x0, 0x1);
        gbc.writeMem(0x713f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x21ad);
        EXPECT(gbc.pc(), 0x7141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0121
        gbc.setState(0xbe70, 0x8372, 0x8c90, 0xca73, 0xfc51, 0xe6af, 0x1, 0x0);
        gbc.writeMem(0xbe70, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8372);
        EXPECT(gbc.pc(), 0xbe72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe70), 0xcb);
        EXPECT(gbc.readMem(0xbe71), 0xd3);
        // CB D3 0122
        gbc.setState(0xade8, 0x62c7, 0x6d70, 0x5ca1, 0x733f, 0x7505, 0x0, 0x1);
        gbc.writeMem(0xade8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x62c7);
        EXPECT(gbc.pc(), 0xadea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade8), 0xcb);
        EXPECT(gbc.readMem(0xade9), 0xd3);
        // CB D3 0123
        gbc.setState(0x2e61, 0xf0da, 0x1110, 0x3829, 0x2181, 0x8007, 0x1, 0x0);
        gbc.writeMem(0x2e61, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf0da);
        EXPECT(gbc.pc(), 0x2e63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0124
        gbc.setState(0x67ed, 0x4731, 0xf460, 0x5f93, 0xde6a, 0x2d37, 0x1, 0x0);
        gbc.writeMem(0x67ed, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4731);
        EXPECT(gbc.pc(), 0x67ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0125
        gbc.setState(0xc2e9, 0xbe07, 0x46c0, 0xc4ae, 0xe07c, 0x2b9c, 0x1, 0x1);
        gbc.writeMem(0xc2e9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbe07);
        EXPECT(gbc.pc(), 0xc2eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e9), 0xcb);
        EXPECT(gbc.readMem(0xc2ea), 0xd3);
        // CB D3 0126
        gbc.setState(0x7bb9, 0x1918, 0x73e0, 0xdfaf, 0xf416, 0x55a2, 0x1, 0x0);
        gbc.writeMem(0x7bb9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1918);
        EXPECT(gbc.pc(), 0x7bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0127
        gbc.setState(0x8a1e, 0xf1e9, 0xc110, 0xaa7f, 0x87a6, 0x4d91, 0x0, 0x0);
        gbc.writeMem(0x8a1e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf1e9);
        EXPECT(gbc.pc(), 0x8a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1e), 0xcb);
        EXPECT(gbc.readMem(0x8a1f), 0xd3);
        // CB D3 0128
        gbc.setState(0xa024, 0xe636, 0xa740, 0x698a, 0x63cd, 0xdd95, 0x1, 0x1);
        gbc.writeMem(0xa024, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe636);
        EXPECT(gbc.pc(), 0xa026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa024), 0xcb);
        EXPECT(gbc.readMem(0xa025), 0xd3);
        // CB D3 0129
        gbc.setState(0xd122, 0x295c, 0x3f80, 0xa420, 0x9d8b, 0xc776, 0x0, 0x0);
        gbc.writeMem(0xd122, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x295c);
        EXPECT(gbc.pc(), 0xd124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd122), 0xcb);
        EXPECT(gbc.readMem(0xd123), 0xd3);
        // CB D3 012A
        gbc.setState(0xa00d, 0x267b, 0xbf50, 0x45d9, 0xb9cc, 0xf1c8, 0x1, 0x0);
        gbc.writeMem(0xa00d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x267b);
        EXPECT(gbc.pc(), 0xa00f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa00d), 0xcb);
        EXPECT(gbc.readMem(0xa00e), 0xd3);
        // CB D3 012B
        gbc.setState(0xab1, 0xe7dc, 0xf570, 0xf26d, 0xde18, 0x6f50, 0x0, 0x0);
        gbc.writeMem(0xab1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe7dc);
        EXPECT(gbc.pc(), 0xab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 012C
        gbc.setState(0xacd4, 0xe258, 0xdd20, 0x4e98, 0x959b, 0x6435, 0x0, 0x1);
        gbc.writeMem(0xacd4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe258);
        EXPECT(gbc.pc(), 0xacd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacd4), 0xcb);
        EXPECT(gbc.readMem(0xacd5), 0xd3);
        // CB D3 012D
        gbc.setState(0x1e9f, 0x9859, 0xd030, 0x924e, 0x434f, 0x157f, 0x1, 0x0);
        gbc.writeMem(0x1e9f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9859);
        EXPECT(gbc.pc(), 0x1ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 012E
        gbc.setState(0x667d, 0xc47c, 0x7eb0, 0x7b7, 0xbfc2, 0x5ecd, 0x1, 0x1);
        gbc.writeMem(0x667d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc47c);
        EXPECT(gbc.pc(), 0x667f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 012F
        gbc.setState(0x5bb8, 0xdd71, 0xafd0, 0x182d, 0x7cda, 0x8825, 0x1, 0x0);
        gbc.writeMem(0x5bb8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xdd71);
        EXPECT(gbc.pc(), 0x5bba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0130
        gbc.setState(0x83cc, 0x443d, 0xeef0, 0xae2f, 0x272d, 0xd14c, 0x0, 0x1);
        gbc.writeMem(0x83cc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x443d);
        EXPECT(gbc.pc(), 0x83ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83cc), 0xcb);
        EXPECT(gbc.readMem(0x83cd), 0xd3);
        // CB D3 0131
        gbc.setState(0xc9ed, 0x5e8, 0xa350, 0x2af0, 0x2f5, 0xdb19, 0x1, 0x0);
        gbc.writeMem(0xc9ed, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5e8);
        EXPECT(gbc.pc(), 0xc9ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ed), 0xcb);
        EXPECT(gbc.readMem(0xc9ee), 0xd3);
        // CB D3 0132
        gbc.setState(0x7a77, 0xfad8, 0xdc90, 0x6195, 0xbdf3, 0xf636, 0x1, 0x1);
        gbc.writeMem(0x7a77, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfad8);
        EXPECT(gbc.pc(), 0x7a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0133
        gbc.setState(0xbe46, 0xba4f, 0xdc80, 0xaad, 0x55a5, 0x9c44, 0x1, 0x1);
        gbc.writeMem(0xbe46, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xba4f);
        EXPECT(gbc.pc(), 0xbe48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe46), 0xcb);
        EXPECT(gbc.readMem(0xbe47), 0xd3);
        // CB D3 0134
        gbc.setState(0xd40, 0x20bf, 0xbe90, 0x7944, 0x789a, 0x3e66, 0x1, 0x1);
        gbc.writeMem(0xd40, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x20bf);
        EXPECT(gbc.pc(), 0xd42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0135
        gbc.setState(0x87f1, 0x7b37, 0x7a60, 0xf222, 0x35df, 0x9f71, 0x0, 0x1);
        gbc.writeMem(0x87f1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7b37);
        EXPECT(gbc.pc(), 0x87f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f1), 0xcb);
        EXPECT(gbc.readMem(0x87f2), 0xd3);
        // CB D3 0136
        gbc.setState(0x2fb1, 0x8bb3, 0x5ce0, 0xc8e3, 0x171, 0x4075, 0x1, 0x0);
        gbc.writeMem(0x2fb1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8bb3);
        EXPECT(gbc.pc(), 0x2fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0137
        gbc.setState(0x795b, 0xe6cc, 0x9ea0, 0xbe0d, 0x4987, 0xa797, 0x0, 0x1);
        gbc.writeMem(0x795b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe6cc);
        EXPECT(gbc.pc(), 0x795d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0138
        gbc.setState(0x8453, 0xc137, 0x4760, 0x1a37, 0x8000, 0x224c, 0x0, 0x0);
        gbc.writeMem(0x8453, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc137);
        EXPECT(gbc.pc(), 0x8455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8453), 0xcb);
        EXPECT(gbc.readMem(0x8454), 0xd3);
        // CB D3 0139
        gbc.setState(0x4451, 0x1fc1, 0x6db0, 0xe31e, 0x7788, 0xb104, 0x1, 0x1);
        gbc.writeMem(0x4451, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1fc1);
        EXPECT(gbc.pc(), 0x4453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 013A
        gbc.setState(0x3c48, 0x4a07, 0xad00, 0xdf2b, 0x5dc7, 0xe913, 0x1, 0x1);
        gbc.writeMem(0x3c48, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4a07);
        EXPECT(gbc.pc(), 0x3c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 013B
        gbc.setState(0xf6f, 0xf906, 0x7c20, 0x3e78, 0xcc5a, 0x8291, 0x1, 0x1);
        gbc.writeMem(0xf6f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf906);
        EXPECT(gbc.pc(), 0xf71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 013C
        gbc.setState(0xc7b5, 0x12c6, 0x2780, 0xae6, 0xd64e, 0x3772, 0x1, 0x0);
        gbc.writeMem(0xc7b5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x12c6);
        EXPECT(gbc.pc(), 0xc7b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b5), 0xcb);
        EXPECT(gbc.readMem(0xc7b6), 0xd3);
        // CB D3 013D
        gbc.setState(0x68bf, 0x83fd, 0x9720, 0xac49, 0x530b, 0x745e, 0x1, 0x0);
        gbc.writeMem(0x68bf, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x83fd);
        EXPECT(gbc.pc(), 0x68c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 013E
        gbc.setState(0x7aba, 0x9e42, 0x5d80, 0xc478, 0x9796, 0x4d4b, 0x0, 0x1);
        gbc.writeMem(0x7aba, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9e42);
        EXPECT(gbc.pc(), 0x7abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 013F
        gbc.setState(0xd6c5, 0x2ff0, 0xcdd0, 0xbb5f, 0x4df, 0xae52, 0x0, 0x0);
        gbc.writeMem(0xd6c5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2ff0);
        EXPECT(gbc.pc(), 0xd6c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c5), 0xcb);
        EXPECT(gbc.readMem(0xd6c6), 0xd3);
        // CB D3 0140
        gbc.setState(0x91cf, 0x2985, 0x18a0, 0xc87a, 0xd65c, 0xf2b, 0x1, 0x1);
        gbc.writeMem(0x91cf, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2985);
        EXPECT(gbc.pc(), 0x91d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91cf), 0xcb);
        EXPECT(gbc.readMem(0x91d0), 0xd3);
        // CB D3 0141
        gbc.setState(0x6624, 0xf1fb, 0xc340, 0x7f0c, 0x9782, 0x5a4c, 0x0, 0x0);
        gbc.writeMem(0x6624, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf1fb);
        EXPECT(gbc.pc(), 0x6626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0143
        gbc.setState(0x1e99, 0x1142, 0x2bd0, 0xb4f2, 0xc105, 0x92ef, 0x0, 0x0);
        gbc.writeMem(0x1e99, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1142);
        EXPECT(gbc.pc(), 0x1e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0144
        gbc.setState(0x37de, 0x58e2, 0xbed0, 0xaf09, 0xb8ad, 0x1448, 0x0, 0x0);
        gbc.writeMem(0x37de, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x58e2);
        EXPECT(gbc.pc(), 0x37e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0145
        gbc.setState(0x7ee2, 0x2d33, 0xe210, 0xe634, 0x6953, 0x5b6c, 0x1, 0x0);
        gbc.writeMem(0x7ee2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2d33);
        EXPECT(gbc.pc(), 0x7ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0146
        gbc.setState(0x970d, 0xa253, 0x6820, 0x4beb, 0xb046, 0x94c1, 0x0, 0x0);
        gbc.writeMem(0x970d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa253);
        EXPECT(gbc.pc(), 0x970f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970d), 0xcb);
        EXPECT(gbc.readMem(0x970e), 0xd3);
        // CB D3 0147
        gbc.setState(0x3afe, 0xac3e, 0xac30, 0xd338, 0x6797, 0xdb75, 0x1, 0x0);
        gbc.writeMem(0x3afe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xac3e);
        EXPECT(gbc.pc(), 0x3b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0148
        gbc.setState(0x494b, 0x1753, 0x5080, 0x1ee2, 0xb404, 0x3e95, 0x0, 0x1);
        gbc.writeMem(0x494b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1753);
        EXPECT(gbc.pc(), 0x494d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0149
        gbc.setState(0x6f74, 0x4891, 0xa0c0, 0xf261, 0xe2e2, 0xda2a, 0x0, 0x1);
        gbc.writeMem(0x6f74, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4891);
        EXPECT(gbc.pc(), 0x6f76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 014A
        gbc.setState(0xd62a, 0xaa0, 0x9c40, 0x4ac9, 0x857d, 0xa753, 0x0, 0x1);
        gbc.writeMem(0xd62a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xaa0);
        EXPECT(gbc.pc(), 0xd62c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62a), 0xcb);
        EXPECT(gbc.readMem(0xd62b), 0xd3);
        // CB D3 014B
        gbc.setState(0x2364, 0xeb14, 0xb6b0, 0x61b8, 0xa112, 0x683b, 0x1, 0x0);
        gbc.writeMem(0x2364, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xeb14);
        EXPECT(gbc.pc(), 0x2366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 014C
        gbc.setState(0x8675, 0xfbfd, 0x5d60, 0x2105, 0x2b78, 0xc706, 0x1, 0x0);
        gbc.writeMem(0x8675, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfbfd);
        EXPECT(gbc.pc(), 0x8677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8675), 0xcb);
        EXPECT(gbc.readMem(0x8676), 0xd3);
        // CB D3 014D
        gbc.setState(0xd064, 0xfdb, 0x4ef0, 0xcc71, 0x368, 0x91c8, 0x0, 0x1);
        gbc.writeMem(0xd064, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfdb);
        EXPECT(gbc.pc(), 0xd066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd064), 0xcb);
        EXPECT(gbc.readMem(0xd065), 0xd3);
        // CB D3 014E
        gbc.setState(0x7f27, 0xbc66, 0x8520, 0x5c96, 0x88f5, 0xf43c, 0x1, 0x1);
        gbc.writeMem(0x7f27, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xbc66);
        EXPECT(gbc.pc(), 0x7f29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 014F
        gbc.setState(0x47c0, 0xedd8, 0x3610, 0x8423, 0x803d, 0x507d, 0x0, 0x0);
        gbc.writeMem(0x47c0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xedd8);
        EXPECT(gbc.pc(), 0x47c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0150
        gbc.setState(0x198, 0xd317, 0x2100, 0xafc4, 0x67a6, 0xc, 0x1, 0x1);
        gbc.writeMem(0x198, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd317);
        EXPECT(gbc.pc(), 0x19a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0151
        gbc.setState(0xd501, 0xf66d, 0xe350, 0x2382, 0xb66d, 0xf672, 0x0, 0x1);
        gbc.writeMem(0xd501, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf66d);
        EXPECT(gbc.pc(), 0xd503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd501), 0xcb);
        EXPECT(gbc.readMem(0xd502), 0xd3);
        // CB D3 0152
        gbc.setState(0x82a5, 0xfb16, 0x6ac0, 0x3898, 0x5d96, 0x9dd9, 0x1, 0x0);
        gbc.writeMem(0x82a5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfb16);
        EXPECT(gbc.pc(), 0x82a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a5), 0xcb);
        EXPECT(gbc.readMem(0x82a6), 0xd3);
        // CB D3 0153
        gbc.setState(0xb0e9, 0x5b7f, 0x1a90, 0xba4a, 0x23fe, 0xd4b7, 0x1, 0x1);
        gbc.writeMem(0xb0e9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5b7f);
        EXPECT(gbc.pc(), 0xb0eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e9), 0xcb);
        EXPECT(gbc.readMem(0xb0ea), 0xd3);
        // CB D3 0154
        gbc.setState(0x1586, 0x959e, 0xdcd0, 0xcbd, 0x501a, 0xdc2d, 0x1, 0x0);
        gbc.writeMem(0x1586, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x959e);
        EXPECT(gbc.pc(), 0x1588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0155
        gbc.setState(0x651b, 0x674, 0x28c0, 0x43fa, 0xe4e6, 0xd80c, 0x1, 0x0);
        gbc.writeMem(0x651b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x674);
        EXPECT(gbc.pc(), 0x651d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0156
        gbc.setState(0xb90, 0x7171, 0xaf50, 0x7921, 0x9817, 0x7968, 0x1, 0x0);
        gbc.writeMem(0xb90, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7171);
        EXPECT(gbc.pc(), 0xb92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0157
        gbc.setState(0xe85a, 0x72c5, 0xca70, 0xc8e5, 0xcc59, 0x78a2, 0x1, 0x1);
        gbc.writeMem(0xe85a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x72c5);
        EXPECT(gbc.pc(), 0xe85c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85a), 0xcb);
        EXPECT(gbc.readMem(0xe85b), 0xd3);
        // CB D3 0159
        gbc.setState(0x2708, 0xc2e8, 0xba0, 0x140, 0x9303, 0xe12f, 0x1, 0x0);
        gbc.writeMem(0x2708, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc2e8);
        EXPECT(gbc.pc(), 0x270a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 015A
        gbc.setState(0xc84f, 0x1944, 0x5700, 0xfaa, 0x7a72, 0x6061, 0x0, 0x0);
        gbc.writeMem(0xc84f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1944);
        EXPECT(gbc.pc(), 0xc851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84f), 0xcb);
        EXPECT(gbc.readMem(0xc850), 0xd3);
        // CB D3 015B
        gbc.setState(0x27fc, 0x68df, 0x50e0, 0x60fc, 0x146d, 0xa21c, 0x1, 0x1);
        gbc.writeMem(0x27fc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x68df);
        EXPECT(gbc.pc(), 0x27fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 015C
        gbc.setState(0x380b, 0xf4dd, 0xead0, 0xa316, 0xa482, 0x2790, 0x1, 0x1);
        gbc.writeMem(0x380b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf4dd);
        EXPECT(gbc.pc(), 0x380d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 015E
        gbc.setState(0x1e59, 0x1359, 0x3aa0, 0xe2b5, 0xec21, 0xfdd8, 0x1, 0x1);
        gbc.writeMem(0x1e59, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1359);
        EXPECT(gbc.pc(), 0x1e5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 015F
        gbc.setState(0xc71e, 0x14d, 0xd640, 0x8176, 0x4d66, 0x8afa, 0x0, 0x1);
        gbc.writeMem(0xc71e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x14d);
        EXPECT(gbc.pc(), 0xc720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc71e), 0xcb);
        EXPECT(gbc.readMem(0xc71f), 0xd3);
        // CB D3 0160
        gbc.setState(0x97d9, 0xe405, 0xb4c0, 0xd52, 0xb1e3, 0x4072, 0x0, 0x0);
        gbc.writeMem(0x97d9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe405);
        EXPECT(gbc.pc(), 0x97db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d9), 0xcb);
        EXPECT(gbc.readMem(0x97da), 0xd3);
        // CB D3 0161
        gbc.setState(0xc975, 0x311, 0x4f60, 0x3c44, 0xbe6d, 0xda8b, 0x0, 0x1);
        gbc.writeMem(0xc975, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x311);
        EXPECT(gbc.pc(), 0xc977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc975), 0xcb);
        EXPECT(gbc.readMem(0xc976), 0xd3);
        // CB D3 0162
        gbc.setState(0xd690, 0x5ce3, 0xd9c0, 0xb6cc, 0x65dd, 0x9573, 0x0, 0x1);
        gbc.writeMem(0xd690, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5ce3);
        EXPECT(gbc.pc(), 0xd692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd690), 0xcb);
        EXPECT(gbc.readMem(0xd691), 0xd3);
        // CB D3 0163
        gbc.setState(0xef83, 0x4c90, 0x1db0, 0x673c, 0x9954, 0xc434, 0x0, 0x0);
        gbc.writeMem(0xef83, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4c90);
        EXPECT(gbc.pc(), 0xef85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef83), 0xcb);
        EXPECT(gbc.readMem(0xef84), 0xd3);
        // CB D3 0164
        gbc.setState(0xa945, 0x5d25, 0x6d00, 0xe055, 0xfe4a, 0x701f, 0x1, 0x0);
        gbc.writeMem(0xa945, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5d25);
        EXPECT(gbc.pc(), 0xa947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa945), 0xcb);
        EXPECT(gbc.readMem(0xa946), 0xd3);
        // CB D3 0165
        gbc.setState(0xce91, 0xd32f, 0x9220, 0x6e5b, 0x785, 0xdd4d, 0x0, 0x0);
        gbc.writeMem(0xce91, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd32f);
        EXPECT(gbc.pc(), 0xce93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce91), 0xcb);
        EXPECT(gbc.readMem(0xce92), 0xd3);
        // CB D3 0166
        gbc.setState(0x750, 0x13a6, 0x24f0, 0xaca7, 0x5d15, 0xfc2f, 0x0, 0x0);
        gbc.writeMem(0x750, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x13a6);
        EXPECT(gbc.pc(), 0x752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0167
        gbc.setState(0xe66b, 0x7d35, 0xca80, 0xea98, 0x33b7, 0x52ee, 0x0, 0x0);
        gbc.writeMem(0xe66b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7d35);
        EXPECT(gbc.pc(), 0xe66d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe66b), 0xcb);
        EXPECT(gbc.readMem(0xe66c), 0xd3);
        // CB D3 0168
        gbc.setState(0x32d0, 0x94a3, 0x6430, 0x7e80, 0x17fa, 0x52ec, 0x0, 0x0);
        gbc.writeMem(0x32d0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x94a3);
        EXPECT(gbc.pc(), 0x32d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0169
        gbc.setState(0x9875, 0xc30f, 0xbae0, 0xa8d3, 0xf5a3, 0x7f49, 0x1, 0x0);
        gbc.writeMem(0x9875, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc30f);
        EXPECT(gbc.pc(), 0x9877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9875), 0xcb);
        EXPECT(gbc.readMem(0x9876), 0xd3);
        // CB D3 016A
        gbc.setState(0x63af, 0xf8a3, 0x2f30, 0x364e, 0x84b5, 0xc7d9, 0x0, 0x1);
        gbc.writeMem(0x63af, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf8a3);
        EXPECT(gbc.pc(), 0x63b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 016B
        gbc.setState(0x5a7e, 0xbceb, 0x8b20, 0x42d6, 0xda38, 0x9527, 0x1, 0x0);
        gbc.writeMem(0x5a7e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbceb);
        EXPECT(gbc.pc(), 0x5a80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 016C
        gbc.setState(0xeb9b, 0xa80d, 0x4230, 0xa9a, 0x82f3, 0x2a69, 0x1, 0x0);
        gbc.writeMem(0xeb9b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa80d);
        EXPECT(gbc.pc(), 0xeb9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb9b), 0xcb);
        EXPECT(gbc.readMem(0xeb9c), 0xd3);
        // CB D3 016D
        gbc.setState(0x4410, 0xc159, 0x4b50, 0x96e0, 0xd31b, 0x992, 0x0, 0x0);
        gbc.writeMem(0x4410, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc159);
        EXPECT(gbc.pc(), 0x4412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 016E
        gbc.setState(0x962c, 0xd8bc, 0xba20, 0xcb4c, 0xd988, 0x12d, 0x1, 0x0);
        gbc.writeMem(0x962c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd8bc);
        EXPECT(gbc.pc(), 0x962e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x962c), 0xcb);
        EXPECT(gbc.readMem(0x962d), 0xd3);
        // CB D3 016F
        gbc.setState(0xa8b3, 0x8ad3, 0x750, 0x20a0, 0x951e, 0xda16, 0x1, 0x1);
        gbc.writeMem(0xa8b3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8ad3);
        EXPECT(gbc.pc(), 0xa8b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8b3), 0xcb);
        EXPECT(gbc.readMem(0xa8b4), 0xd3);
        // CB D3 0170
        gbc.setState(0x2e50, 0x8b6a, 0x8270, 0x96f5, 0xc866, 0x2b56, 0x0, 0x0);
        gbc.writeMem(0x2e50, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8b6a);
        EXPECT(gbc.pc(), 0x2e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0171
        gbc.setState(0xa76b, 0x4412, 0x1dd0, 0x4a20, 0x99ad, 0xc2e0, 0x0, 0x0);
        gbc.writeMem(0xa76b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4412);
        EXPECT(gbc.pc(), 0xa76d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa76b), 0xcb);
        EXPECT(gbc.readMem(0xa76c), 0xd3);
        // CB D3 0172
        gbc.setState(0x326b, 0x583b, 0x54b0, 0x8d7f, 0x1c15, 0x3e93, 0x0, 0x1);
        gbc.writeMem(0x326b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x583b);
        EXPECT(gbc.pc(), 0x326d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0173
        gbc.setState(0xf4, 0xb5d7, 0x8870, 0x7054, 0xfe6a, 0x2ace, 0x0, 0x1);
        gbc.writeMem(0xf4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb5d7);
        EXPECT(gbc.pc(), 0xf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0174
        gbc.setState(0x1500, 0x90ef, 0xd420, 0x6b11, 0xa05, 0xf9b, 0x0, 0x1);
        gbc.writeMem(0x1500, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x90ef);
        EXPECT(gbc.pc(), 0x1502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0175
        gbc.setState(0xef6b, 0xbd2b, 0x7930, 0x9a5b, 0x2043, 0xbdca, 0x0, 0x0);
        gbc.writeMem(0xef6b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbd2b);
        EXPECT(gbc.pc(), 0xef6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef6b), 0xcb);
        EXPECT(gbc.readMem(0xef6c), 0xd3);
        // CB D3 0176
        gbc.setState(0x931f, 0xc41d, 0xd1a0, 0x9064, 0xe40f, 0x6d76, 0x0, 0x1);
        gbc.writeMem(0x931f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc41d);
        EXPECT(gbc.pc(), 0x9321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x931f), 0xcb);
        EXPECT(gbc.readMem(0x9320), 0xd3);
        // CB D3 0177
        gbc.setState(0x75d5, 0x20b3, 0x5b10, 0xaf94, 0x4d95, 0x372f, 0x0, 0x0);
        gbc.writeMem(0x75d5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x20b3);
        EXPECT(gbc.pc(), 0x75d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0178
        gbc.setState(0x8b36, 0xe484, 0xcba0, 0x7fa, 0xb009, 0x7e55, 0x1, 0x0);
        gbc.writeMem(0x8b36, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe484);
        EXPECT(gbc.pc(), 0x8b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b36), 0xcb);
        EXPECT(gbc.readMem(0x8b37), 0xd3);
        // CB D3 0179
        gbc.setState(0xcdf1, 0xa09e, 0x7700, 0xcb88, 0x12a7, 0x68bc, 0x0, 0x1);
        gbc.writeMem(0xcdf1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa09e);
        EXPECT(gbc.pc(), 0xcdf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf1), 0xcb);
        EXPECT(gbc.readMem(0xcdf2), 0xd3);
        // CB D3 017A
        gbc.setState(0x757e, 0x16bc, 0xb560, 0xb656, 0x577c, 0xb107, 0x1, 0x1);
        gbc.writeMem(0x757e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x16bc);
        EXPECT(gbc.pc(), 0x7580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 017B
        gbc.setState(0x784b, 0xd4e1, 0x6e50, 0x81cc, 0x37f8, 0xe308, 0x0, 0x1);
        gbc.writeMem(0x784b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd4e1);
        EXPECT(gbc.pc(), 0x784d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 017C
        gbc.setState(0x9457, 0xee14, 0x93e0, 0xc49b, 0xc47b, 0x93f8, 0x0, 0x0);
        gbc.writeMem(0x9457, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xee14);
        EXPECT(gbc.pc(), 0x9459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9457), 0xcb);
        EXPECT(gbc.readMem(0x9458), 0xd3);
        // CB D3 017D
        gbc.setState(0xdcbb, 0x8aef, 0x21a0, 0xd862, 0x44b4, 0x11c9, 0x1, 0x1);
        gbc.writeMem(0xdcbb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8aef);
        EXPECT(gbc.pc(), 0xdcbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcbb), 0xcb);
        EXPECT(gbc.readMem(0xdcbc), 0xd3);
        // CB D3 017E
        gbc.setState(0x1abe, 0xf321, 0x9850, 0x37a1, 0x1e83, 0x5649, 0x0, 0x1);
        gbc.writeMem(0x1abe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf321);
        EXPECT(gbc.pc(), 0x1ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 017F
        gbc.setState(0x233e, 0x4a4, 0xc9b0, 0xbb36, 0xc8fd, 0xf6c1, 0x1, 0x1);
        gbc.writeMem(0x233e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4a4);
        EXPECT(gbc.pc(), 0x2340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0180
        gbc.setState(0x5b0a, 0x3d3a, 0xe3f0, 0x8079, 0x1ffd, 0xc166, 0x0, 0x0);
        gbc.writeMem(0x5b0a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3d3a);
        EXPECT(gbc.pc(), 0x5b0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0181
        gbc.setState(0xe1a1, 0x3291, 0xf570, 0x9296, 0x8d26, 0x6a2d, 0x1, 0x1);
        gbc.writeMem(0xe1a1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3291);
        EXPECT(gbc.pc(), 0xe1a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1a1), 0xcb);
        EXPECT(gbc.readMem(0xe1a2), 0xd3);
        // CB D3 0182
        gbc.setState(0x9c45, 0x91e1, 0x8580, 0x3f29, 0x4767, 0xf749, 0x1, 0x0);
        gbc.writeMem(0x9c45, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x91e1);
        EXPECT(gbc.pc(), 0x9c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c45), 0xcb);
        EXPECT(gbc.readMem(0x9c46), 0xd3);
        // CB D3 0183
        gbc.setState(0x7959, 0x7556, 0x3b80, 0x4365, 0x779a, 0x2a8a, 0x0, 0x0);
        gbc.writeMem(0x7959, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7556);
        EXPECT(gbc.pc(), 0x795b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0184
        gbc.setState(0xb831, 0x8d82, 0x230, 0xa4aa, 0x557b, 0x2c7b, 0x1, 0x0);
        gbc.writeMem(0xb831, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8d82);
        EXPECT(gbc.pc(), 0xb833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb831), 0xcb);
        EXPECT(gbc.readMem(0xb832), 0xd3);
        // CB D3 0186
        gbc.setState(0x586, 0xeb14, 0x75f0, 0xa512, 0xcca3, 0xc81e, 0x1, 0x0);
        gbc.writeMem(0x586, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xeb14);
        EXPECT(gbc.pc(), 0x588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0187
        gbc.setState(0xbb07, 0x6128, 0xd9d0, 0x3283, 0xe2, 0x4829, 0x1, 0x1);
        gbc.writeMem(0xbb07, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6128);
        EXPECT(gbc.pc(), 0xbb09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb07), 0xcb);
        EXPECT(gbc.readMem(0xbb08), 0xd3);
        // CB D3 0188
        gbc.setState(0xacbd, 0xddce, 0x7730, 0xaf52, 0x7727, 0x2dc8, 0x0, 0x0);
        gbc.writeMem(0xacbd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xddce);
        EXPECT(gbc.pc(), 0xacbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacbd), 0xcb);
        EXPECT(gbc.readMem(0xacbe), 0xd3);
        // CB D3 0189
        gbc.setState(0x66e4, 0xf6d0, 0xc4c0, 0xfb43, 0x7839, 0x7114, 0x0, 0x0);
        gbc.writeMem(0x66e4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf6d0);
        EXPECT(gbc.pc(), 0x66e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 018B
        gbc.setState(0x7a64, 0xa1a0, 0x82f0, 0x6089, 0x8188, 0xa17d, 0x0, 0x1);
        gbc.writeMem(0x7a64, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa1a0);
        EXPECT(gbc.pc(), 0x7a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 018C
        gbc.setState(0xcb11, 0x9819, 0x6340, 0x5e9f, 0x233d, 0x2790, 0x1, 0x0);
        gbc.writeMem(0xcb11, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9819);
        EXPECT(gbc.pc(), 0xcb13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb11), 0xcb);
        EXPECT(gbc.readMem(0xcb12), 0xd3);
        // CB D3 018D
        gbc.setState(0xa079, 0xcd87, 0x9790, 0xbf15, 0xa15b, 0x8e6c, 0x0, 0x1);
        gbc.writeMem(0xa079, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcd87);
        EXPECT(gbc.pc(), 0xa07b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa079), 0xcb);
        EXPECT(gbc.readMem(0xa07a), 0xd3);
        // CB D3 018E
        gbc.setState(0x10d8, 0x3b5f, 0x8050, 0x75d3, 0x98c1, 0xd4ce, 0x1, 0x0);
        gbc.writeMem(0x10d8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3b5f);
        EXPECT(gbc.pc(), 0x10da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 018F
        gbc.setState(0xd2e9, 0x5220, 0x23c0, 0x4bf0, 0xc2f7, 0xfc95, 0x0, 0x0);
        gbc.writeMem(0xd2e9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5220);
        EXPECT(gbc.pc(), 0xd2eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e9), 0xcb);
        EXPECT(gbc.readMem(0xd2ea), 0xd3);
        // CB D3 0190
        gbc.setState(0x53c9, 0x54a7, 0xff50, 0x17c4, 0xd2dc, 0xddd4, 0x0, 0x1);
        gbc.writeMem(0x53c9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x54a7);
        EXPECT(gbc.pc(), 0x53cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0191
        gbc.setState(0x8bfa, 0x2cf, 0xed60, 0xe59, 0x8e4c, 0x1b9f, 0x0, 0x0);
        gbc.writeMem(0x8bfa, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2cf);
        EXPECT(gbc.pc(), 0x8bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bfa), 0xcb);
        EXPECT(gbc.readMem(0x8bfb), 0xd3);
        // CB D3 0192
        gbc.setState(0x19c2, 0x7ff8, 0x8230, 0x43db, 0x8792, 0xe848, 0x1, 0x1);
        gbc.writeMem(0x19c2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7ff8);
        EXPECT(gbc.pc(), 0x19c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0193
        gbc.setState(0x2159, 0x8e67, 0x5b30, 0x98c2, 0x91a7, 0x5b44, 0x1, 0x1);
        gbc.writeMem(0x2159, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8e67);
        EXPECT(gbc.pc(), 0x215b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0195
        gbc.setState(0x5814, 0x40fe, 0x3260, 0x6545, 0x2aca, 0x189, 0x1, 0x1);
        gbc.writeMem(0x5814, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x40fe);
        EXPECT(gbc.pc(), 0x5816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0196
        gbc.setState(0xbbf0, 0x4cba, 0x7670, 0xe631, 0x9916, 0xee39, 0x1, 0x1);
        gbc.writeMem(0xbbf0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4cba);
        EXPECT(gbc.pc(), 0xbbf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf0), 0xcb);
        EXPECT(gbc.readMem(0xbbf1), 0xd3);
        // CB D3 0197
        gbc.setState(0x2f4a, 0x59bd, 0x5e00, 0x9013, 0x4f1a, 0x33b5, 0x0, 0x0);
        gbc.writeMem(0x2f4a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x59bd);
        EXPECT(gbc.pc(), 0x2f4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0198
        gbc.setState(0xb3fb, 0xe443, 0xb610, 0x1cdc, 0xf74b, 0xbf41, 0x0, 0x1);
        gbc.writeMem(0xb3fb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe443);
        EXPECT(gbc.pc(), 0xb3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3fb), 0xcb);
        EXPECT(gbc.readMem(0xb3fc), 0xd3);
        // CB D3 0199
        gbc.setState(0xdb3b, 0x630f, 0xaa10, 0xc66, 0xb203, 0xee5d, 0x0, 0x1);
        gbc.writeMem(0xdb3b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x630f);
        EXPECT(gbc.pc(), 0xdb3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3b), 0xcb);
        EXPECT(gbc.readMem(0xdb3c), 0xd3);
        // CB D3 019A
        gbc.setState(0xebd4, 0x7945, 0x3ba0, 0x3ae0, 0xaa5f, 0x4d6e, 0x0, 0x1);
        gbc.writeMem(0xebd4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7945);
        EXPECT(gbc.pc(), 0xebd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd4), 0xcb);
        EXPECT(gbc.readMem(0xebd5), 0xd3);
        // CB D3 019B
        gbc.setState(0x175d, 0x2e02, 0xd640, 0x67cf, 0xdd20, 0x7794, 0x1, 0x1);
        gbc.writeMem(0x175d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2e02);
        EXPECT(gbc.pc(), 0x175f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 019C
        gbc.setState(0x24ec, 0xe5df, 0xb9e0, 0x22dc, 0xaa9b, 0xc826, 0x1, 0x1);
        gbc.writeMem(0x24ec, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe5df);
        EXPECT(gbc.pc(), 0x24ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 019D
        gbc.setState(0x2c5e, 0xed83, 0xc6d0, 0xedef, 0x4542, 0xf298, 0x1, 0x0);
        gbc.writeMem(0x2c5e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xed83);
        EXPECT(gbc.pc(), 0x2c60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 019E
        gbc.setState(0xbcc, 0x6bbe, 0xbbb0, 0x2235, 0x6cba, 0x399f, 0x1, 0x0);
        gbc.writeMem(0xbcc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6bbe);
        EXPECT(gbc.pc(), 0xbce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 019F
        gbc.setState(0x3621, 0x78cb, 0xa9e0, 0x4eb7, 0xdba, 0x65a5, 0x0, 0x0);
        gbc.writeMem(0x3621, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x78cb);
        EXPECT(gbc.pc(), 0x3623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01A1
        gbc.setState(0x83b2, 0xdf75, 0xd6e0, 0x4769, 0x7a44, 0x4ae0, 0x1, 0x0);
        gbc.writeMem(0x83b2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xdf75);
        EXPECT(gbc.pc(), 0x83b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83b2), 0xcb);
        EXPECT(gbc.readMem(0x83b3), 0xd3);
        // CB D3 01A2
        gbc.setState(0x7c63, 0xedcc, 0xf070, 0x4378, 0xc278, 0x5ca4, 0x0, 0x1);
        gbc.writeMem(0x7c63, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xedcc);
        EXPECT(gbc.pc(), 0x7c65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01A3
        gbc.setState(0x44a6, 0xd09d, 0x89c0, 0x3f04, 0x6b68, 0x7a73, 0x1, 0x0);
        gbc.writeMem(0x44a6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd09d);
        EXPECT(gbc.pc(), 0x44a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01A4
        gbc.setState(0x53df, 0xfe7, 0xc9f0, 0x71fb, 0x2fd5, 0x6e3c, 0x1, 0x1);
        gbc.writeMem(0x53df, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xfe7);
        EXPECT(gbc.pc(), 0x53e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01A5
        gbc.setState(0x58f1, 0x4695, 0x69d0, 0x13c6, 0x6fcd, 0x4266, 0x0, 0x0);
        gbc.writeMem(0x58f1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4695);
        EXPECT(gbc.pc(), 0x58f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01A6
        gbc.setState(0x2eec, 0xb6c0, 0x1150, 0x3ba, 0xefb3, 0x6eeb, 0x0, 0x0);
        gbc.writeMem(0x2eec, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb6c0);
        EXPECT(gbc.pc(), 0x2eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01A7
        gbc.setState(0x61c8, 0x8741, 0xfd0, 0xa2b0, 0xa281, 0xd72f, 0x0, 0x0);
        gbc.writeMem(0x61c8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8741);
        EXPECT(gbc.pc(), 0x61ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01A8
        gbc.setState(0x67e4, 0xf63e, 0x13d0, 0x46ca, 0x9b65, 0x6e2e, 0x0, 0x0);
        gbc.writeMem(0x67e4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf63e);
        EXPECT(gbc.pc(), 0x67e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01A9
        gbc.setState(0xe635, 0xe0e2, 0xab50, 0x6e2b, 0xfe92, 0x4184, 0x1, 0x0);
        gbc.writeMem(0xe635, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe0e2);
        EXPECT(gbc.pc(), 0xe637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe635), 0xcb);
        EXPECT(gbc.readMem(0xe636), 0xd3);
        // CB D3 01AA
        gbc.setState(0xa11b, 0xbe63, 0xef80, 0xdc14, 0x5c4d, 0x21d8, 0x1, 0x1);
        gbc.writeMem(0xa11b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbe63);
        EXPECT(gbc.pc(), 0xa11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa11b), 0xcb);
        EXPECT(gbc.readMem(0xa11c), 0xd3);
        // CB D3 01AB
        gbc.setState(0xa8a6, 0xfdd5, 0x52e0, 0x570c, 0xa047, 0xff52, 0x0, 0x0);
        gbc.writeMem(0xa8a6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfdd5);
        EXPECT(gbc.pc(), 0xa8a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a6), 0xcb);
        EXPECT(gbc.readMem(0xa8a7), 0xd3);
        // CB D3 01AD
        gbc.setState(0x4243, 0x7592, 0xfee0, 0xf715, 0xe1fa, 0xd038, 0x0, 0x0);
        gbc.writeMem(0x4243, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7592);
        EXPECT(gbc.pc(), 0x4245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01AE
        gbc.setState(0x99, 0xca74, 0xf0f0, 0x6ae, 0xccfb, 0x600f, 0x1, 0x1);
        gbc.writeMem(0x99, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xca74);
        EXPECT(gbc.pc(), 0x9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01AF
        gbc.setState(0x29b1, 0x6ab6, 0x4890, 0x5673, 0x3d98, 0x46fa, 0x1, 0x1);
        gbc.writeMem(0x29b1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6ab6);
        EXPECT(gbc.pc(), 0x29b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01B0
        gbc.setState(0x13d0, 0x8982, 0xc70, 0xeecb, 0x61b, 0xd8e6, 0x0, 0x1);
        gbc.writeMem(0x13d0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8982);
        EXPECT(gbc.pc(), 0x13d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01B1
        gbc.setState(0xe3f5, 0xeb3, 0xdcb0, 0x9b4, 0xbd3, 0x5f1, 0x1, 0x0);
        gbc.writeMem(0xe3f5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xeb3);
        EXPECT(gbc.pc(), 0xe3f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f5), 0xcb);
        EXPECT(gbc.readMem(0xe3f6), 0xd3);
        // CB D3 01B2
        gbc.setState(0x680f, 0x30c3, 0xbf90, 0xf48, 0x82b1, 0x8d84, 0x0, 0x0);
        gbc.writeMem(0x680f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x30c3);
        EXPECT(gbc.pc(), 0x6811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01B3
        gbc.setState(0xdb, 0xeeda, 0x4370, 0xb5b6, 0x7821, 0x6f62, 0x1, 0x1);
        gbc.writeMem(0xdb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xeeda);
        EXPECT(gbc.pc(), 0xdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01B4
        gbc.setState(0xb5cd, 0xfe26, 0x1b0, 0xff3, 0x61a, 0xdc40, 0x0, 0x0);
        gbc.writeMem(0xb5cd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xfe26);
        EXPECT(gbc.pc(), 0xb5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5cd), 0xcb);
        EXPECT(gbc.readMem(0xb5ce), 0xd3);
        // CB D3 01B5
        gbc.setState(0xc77f, 0x7096, 0xee20, 0xe80e, 0x2e6c, 0x8212, 0x0, 0x0);
        gbc.writeMem(0xc77f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7096);
        EXPECT(gbc.pc(), 0xc781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc77f), 0xcb);
        EXPECT(gbc.readMem(0xc780), 0xd3);
        // CB D3 01B6
        gbc.setState(0x40fe, 0xa01f, 0xc7e0, 0x4255, 0xe74b, 0xb573, 0x0, 0x0);
        gbc.writeMem(0x40fe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa01f);
        EXPECT(gbc.pc(), 0x4100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01B7
        gbc.setState(0x8df6, 0x7b3b, 0x3ef0, 0xfa53, 0xf3c4, 0xb3a9, 0x1, 0x0);
        gbc.writeMem(0x8df6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7b3b);
        EXPECT(gbc.pc(), 0x8df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df6), 0xcb);
        EXPECT(gbc.readMem(0x8df7), 0xd3);
        // CB D3 01B8
        gbc.setState(0x2e52, 0x7c22, 0xab90, 0x7de6, 0xc57b, 0xaef3, 0x0, 0x1);
        gbc.writeMem(0x2e52, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7c22);
        EXPECT(gbc.pc(), 0x2e54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01B9
        gbc.setState(0x249d, 0xbb8c, 0xdf50, 0xce7, 0x1640, 0x8370, 0x1, 0x0);
        gbc.writeMem(0x249d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbb8c);
        EXPECT(gbc.pc(), 0x249f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01BA
        gbc.setState(0xb32f, 0x9125, 0x9890, 0x524c, 0x5614, 0xd307, 0x0, 0x1);
        gbc.writeMem(0xb32f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9125);
        EXPECT(gbc.pc(), 0xb331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32f), 0xcb);
        EXPECT(gbc.readMem(0xb330), 0xd3);
        // CB D3 01BB
        gbc.setState(0x1598, 0xf878, 0x5e70, 0xedb4, 0x181e, 0xbae3, 0x1, 0x1);
        gbc.writeMem(0x1598, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf878);
        EXPECT(gbc.pc(), 0x159a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01BC
        gbc.setState(0x767a, 0xea6, 0xe940, 0x806d, 0x2b4b, 0x33be, 0x0, 0x0);
        gbc.writeMem(0x767a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xea6);
        EXPECT(gbc.pc(), 0x767c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01BD
        gbc.setState(0x2b30, 0xf50b, 0xac20, 0x5554, 0xc142, 0x47a8, 0x0, 0x0);
        gbc.writeMem(0x2b30, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf50b);
        EXPECT(gbc.pc(), 0x2b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01BE
        gbc.setState(0x9b7f, 0x1d47, 0x2670, 0xbff3, 0x750f, 0xf46d, 0x1, 0x1);
        gbc.writeMem(0x9b7f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1d47);
        EXPECT(gbc.pc(), 0x9b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7f), 0xcb);
        EXPECT(gbc.readMem(0x9b80), 0xd3);
        // CB D3 01BF
        gbc.setState(0x715d, 0xee80, 0x19a0, 0xef9a, 0x11e4, 0x9e62, 0x0, 0x1);
        gbc.writeMem(0x715d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xee80);
        EXPECT(gbc.pc(), 0x715f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01C0
        gbc.setState(0xbd84, 0x38b9, 0x7270, 0x4c40, 0xf968, 0xa270, 0x0, 0x0);
        gbc.writeMem(0xbd84, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x38b9);
        EXPECT(gbc.pc(), 0xbd86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd84), 0xcb);
        EXPECT(gbc.readMem(0xbd85), 0xd3);
        // CB D3 01C1
        gbc.setState(0x6cf6, 0x50ac, 0xe9c0, 0x5104, 0x8df, 0xabf2, 0x1, 0x0);
        gbc.writeMem(0x6cf6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x50ac);
        EXPECT(gbc.pc(), 0x6cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01C2
        gbc.setState(0x567f, 0xce60, 0x2bf0, 0x30e4, 0xc650, 0x6eae, 0x1, 0x0);
        gbc.writeMem(0x567f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xce60);
        EXPECT(gbc.pc(), 0x5681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01C3
        gbc.setState(0xe7e8, 0x94e9, 0x17b0, 0xf494, 0x1253, 0xcc65, 0x1, 0x1);
        gbc.writeMem(0xe7e8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x94e9);
        EXPECT(gbc.pc(), 0xe7ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7e8), 0xcb);
        EXPECT(gbc.readMem(0xe7e9), 0xd3);
        // CB D3 01C4
        gbc.setState(0xd49e, 0x4b9b, 0xc770, 0x35, 0x5dec, 0x5da3, 0x1, 0x0);
        gbc.writeMem(0xd49e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4b9b);
        EXPECT(gbc.pc(), 0xd4a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49e), 0xcb);
        EXPECT(gbc.readMem(0xd49f), 0xd3);
        // CB D3 01C5
        gbc.setState(0xe739, 0xf0cb, 0x6050, 0x7603, 0xf26c, 0x45f6, 0x0, 0x1);
        gbc.writeMem(0xe739, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf0cb);
        EXPECT(gbc.pc(), 0xe73b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe739), 0xcb);
        EXPECT(gbc.readMem(0xe73a), 0xd3);
        // CB D3 01C6
        gbc.setState(0x86c, 0x2d97, 0x4580, 0x9392, 0x159d, 0x5bc, 0x1, 0x1);
        gbc.writeMem(0x86c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2d97);
        EXPECT(gbc.pc(), 0x86e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01C7
        gbc.setState(0x6a32, 0x2f47, 0xc5d0, 0x650f, 0xc832, 0x41cf, 0x1, 0x0);
        gbc.writeMem(0x6a32, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2f47);
        EXPECT(gbc.pc(), 0x6a34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01C8
        gbc.setState(0xc0c2, 0xbcbf, 0x7b0, 0x77db, 0x85f7, 0xa2c5, 0x0, 0x0);
        gbc.writeMem(0xc0c2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xbcbf);
        EXPECT(gbc.pc(), 0xc0c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c2), 0xcb);
        EXPECT(gbc.readMem(0xc0c3), 0xd3);
        // CB D3 01C9
        gbc.setState(0xc996, 0x229, 0xcb40, 0xf992, 0xf542, 0xc54a, 0x0, 0x0);
        gbc.writeMem(0xc996, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x229);
        EXPECT(gbc.pc(), 0xc998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc996), 0xcb);
        EXPECT(gbc.readMem(0xc997), 0xd3);
        // CB D3 01CA
        gbc.setState(0xa431, 0xd977, 0xcdc0, 0x39e4, 0xe458, 0xb660, 0x0, 0x0);
        gbc.writeMem(0xa431, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd977);
        EXPECT(gbc.pc(), 0xa433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa431), 0xcb);
        EXPECT(gbc.readMem(0xa432), 0xd3);
        // CB D3 01CB
        gbc.setState(0xa050, 0xafb3, 0x52f0, 0x77f3, 0x129b, 0xf74, 0x0, 0x0);
        gbc.writeMem(0xa050, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xafb3);
        EXPECT(gbc.pc(), 0xa052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa050), 0xcb);
        EXPECT(gbc.readMem(0xa051), 0xd3);
        // CB D3 01CC
        gbc.setState(0x512a, 0xfa6d, 0x3a10, 0xbc05, 0x16d5, 0x7787, 0x0, 0x1);
        gbc.writeMem(0x512a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfa6d);
        EXPECT(gbc.pc(), 0x512c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01CD
        gbc.setState(0x9dfd, 0xcadb, 0x8720, 0xd34a, 0xe225, 0x5ea8, 0x0, 0x0);
        gbc.writeMem(0x9dfd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xcadb);
        EXPECT(gbc.pc(), 0x9dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfd), 0xcb);
        EXPECT(gbc.readMem(0x9dfe), 0xd3);
        // CB D3 01CE
        gbc.setState(0x1936, 0x3a7d, 0xd970, 0x69f3, 0x1c37, 0x16e5, 0x0, 0x1);
        gbc.writeMem(0x1936, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3a7d);
        EXPECT(gbc.pc(), 0x1938);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01CF
        gbc.setState(0x7d77, 0x4d96, 0x8e20, 0x2bbe, 0x29ce, 0xf78c, 0x1, 0x0);
        gbc.writeMem(0x7d77, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4d96);
        EXPECT(gbc.pc(), 0x7d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01D0
        gbc.setState(0xeaf2, 0x81f1, 0x3460, 0x5f19, 0xd0f9, 0xe2f, 0x1, 0x1);
        gbc.writeMem(0xeaf2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x81f1);
        EXPECT(gbc.pc(), 0xeaf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf2), 0xcb);
        EXPECT(gbc.readMem(0xeaf3), 0xd3);
        // CB D3 01D1
        gbc.setState(0x6616, 0x52f1, 0x6160, 0xc18a, 0xd0cb, 0xf42a, 0x1, 0x0);
        gbc.writeMem(0x6616, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x52f1);
        EXPECT(gbc.pc(), 0x6618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01D2
        gbc.setState(0x94fe, 0xb196, 0x7190, 0x5e3a, 0xdeaa, 0xf06f, 0x0, 0x1);
        gbc.writeMem(0x94fe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb196);
        EXPECT(gbc.pc(), 0x9500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94fe), 0xcb);
        EXPECT(gbc.readMem(0x94ff), 0xd3);
        // CB D3 01D3
        gbc.setState(0xbd7a, 0x7cc3, 0x26e0, 0xfa42, 0xd7ad, 0xdd7f, 0x0, 0x1);
        gbc.writeMem(0xbd7a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7cc3);
        EXPECT(gbc.pc(), 0xbd7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7a), 0xcb);
        EXPECT(gbc.readMem(0xbd7b), 0xd3);
        // CB D3 01D4
        gbc.setState(0xa56d, 0xe921, 0x6f30, 0x27c0, 0x239d, 0x170d, 0x0, 0x1);
        gbc.writeMem(0xa56d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe921);
        EXPECT(gbc.pc(), 0xa56f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa56d), 0xcb);
        EXPECT(gbc.readMem(0xa56e), 0xd3);
        // CB D3 01D5
        gbc.setState(0x2f2b, 0x47ac, 0x8bc0, 0x7b6d, 0x23b4, 0xf01a, 0x0, 0x1);
        gbc.writeMem(0x2f2b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x47ac);
        EXPECT(gbc.pc(), 0x2f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01D6
        gbc.setState(0x2dfc, 0xfa60, 0x6500, 0xac48, 0xd71f, 0xc364, 0x0, 0x0);
        gbc.writeMem(0x2dfc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfa60);
        EXPECT(gbc.pc(), 0x2dfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01D7
        gbc.setState(0x99e, 0xc145, 0xadc0, 0x7bae, 0x5d90, 0x8438, 0x0, 0x1);
        gbc.writeMem(0x99e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc145);
        EXPECT(gbc.pc(), 0x9a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01D8
        gbc.setState(0x606, 0xb86a, 0x4530, 0xd6cb, 0xcc96, 0x66f7, 0x0, 0x0);
        gbc.writeMem(0x606, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb86a);
        EXPECT(gbc.pc(), 0x608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01D9
        gbc.setState(0xd5e0, 0xa4b4, 0x3fd0, 0xeee0, 0x3bd1, 0xbdb1, 0x1, 0x1);
        gbc.writeMem(0xd5e0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa4b4);
        EXPECT(gbc.pc(), 0xd5e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5e0), 0xcb);
        EXPECT(gbc.readMem(0xd5e1), 0xd3);
        // CB D3 01DA
        gbc.setState(0x15cd, 0x9aed, 0x30b0, 0xa7e7, 0x8eb4, 0xe0f7, 0x0, 0x1);
        gbc.writeMem(0x15cd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9aed);
        EXPECT(gbc.pc(), 0x15cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01DB
        gbc.setState(0xe168, 0xb377, 0xde10, 0xa7c0, 0x1422, 0x30a4, 0x1, 0x0);
        gbc.writeMem(0xe168, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb377);
        EXPECT(gbc.pc(), 0xe16a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe168), 0xcb);
        EXPECT(gbc.readMem(0xe169), 0xd3);
        // CB D3 01DC
        gbc.setState(0x7e71, 0xb57, 0xbdd0, 0x8da6, 0x5fd0, 0x4bd4, 0x1, 0x1);
        gbc.writeMem(0x7e71, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb57);
        EXPECT(gbc.pc(), 0x7e73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01DD
        gbc.setState(0xc008, 0xd88e, 0xe0, 0x9919, 0x9fdf, 0xa0c4, 0x1, 0x1);
        gbc.writeMem(0xc008, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd88e);
        EXPECT(gbc.pc(), 0xc00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc008), 0xcb);
        EXPECT(gbc.readMem(0xc009), 0xd3);
        // CB D3 01DE
        gbc.setState(0x1de2, 0xdbbf, 0x8c20, 0x5a77, 0x610d, 0x7ebc, 0x1, 0x1);
        gbc.writeMem(0x1de2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdbbf);
        EXPECT(gbc.pc(), 0x1de4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01DF
        gbc.setState(0xd3fc, 0x44b0, 0x2770, 0x1691, 0xe144, 0xafb7, 0x1, 0x0);
        gbc.writeMem(0xd3fc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x44b0);
        EXPECT(gbc.pc(), 0xd3fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3fc), 0xcb);
        EXPECT(gbc.readMem(0xd3fd), 0xd3);
        // CB D3 01E0
        gbc.setState(0x193f, 0x2e, 0x1120, 0x31e4, 0xbec5, 0x5ade, 0x0, 0x1);
        gbc.writeMem(0x193f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2e);
        EXPECT(gbc.pc(), 0x1941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01E1
        gbc.setState(0x383c, 0xf2ff, 0x3c20, 0x6188, 0xbb71, 0x3dc9, 0x0, 0x0);
        gbc.writeMem(0x383c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf2ff);
        EXPECT(gbc.pc(), 0x383e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01E2
        gbc.setState(0xc3d, 0x8927, 0x9940, 0x6431, 0xa2d1, 0x6e72, 0x1, 0x1);
        gbc.writeMem(0xc3d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8927);
        EXPECT(gbc.pc(), 0xc3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01E3
        gbc.setState(0xa234, 0xad62, 0x17e0, 0xefdb, 0xc4e8, 0xb581, 0x1, 0x0);
        gbc.writeMem(0xa234, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xad62);
        EXPECT(gbc.pc(), 0xa236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa234), 0xcb);
        EXPECT(gbc.readMem(0xa235), 0xd3);
        // CB D3 01E5
        gbc.setState(0x457b, 0x8508, 0x2630, 0x3c3d, 0x7e15, 0x6a80, 0x1, 0x0);
        gbc.writeMem(0x457b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8508);
        EXPECT(gbc.pc(), 0x457d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01E6
        gbc.setState(0x57e0, 0x1451, 0xb290, 0xff02, 0x5c5b, 0x3ae2, 0x1, 0x1);
        gbc.writeMem(0x57e0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1451);
        EXPECT(gbc.pc(), 0x57e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01E7
        gbc.setState(0x22f7, 0x18fc, 0x71d0, 0x426, 0xc13e, 0xab4b, 0x0, 0x1);
        gbc.writeMem(0x22f7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x18fc);
        EXPECT(gbc.pc(), 0x22f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01E8
        gbc.setState(0x7f4a, 0xf9a, 0xbfd0, 0x2371, 0x33a8, 0x18b0, 0x0, 0x1);
        gbc.writeMem(0x7f4a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf9a);
        EXPECT(gbc.pc(), 0x7f4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01E9
        gbc.setState(0x2294, 0xe508, 0x26e0, 0x4c99, 0x33d5, 0x4d9d, 0x1, 0x1);
        gbc.writeMem(0x2294, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe508);
        EXPECT(gbc.pc(), 0x2296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01EA
        gbc.setState(0x50b9, 0x83f4, 0x1c30, 0x1f05, 0xf934, 0x7577, 0x1, 0x0);
        gbc.writeMem(0x50b9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x83f4);
        EXPECT(gbc.pc(), 0x50bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01EB
        gbc.setState(0x913c, 0x81b1, 0xdd00, 0x6310, 0xc6bf, 0x42dc, 0x1, 0x1);
        gbc.writeMem(0x913c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x81b1);
        EXPECT(gbc.pc(), 0x913e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x913c), 0xcb);
        EXPECT(gbc.readMem(0x913d), 0xd3);
        // CB D3 01EC
        gbc.setState(0x8ad7, 0x81b7, 0xcec0, 0xfdf6, 0x119c, 0x6dc9, 0x0, 0x1);
        gbc.writeMem(0x8ad7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x81b7);
        EXPECT(gbc.pc(), 0x8ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad7), 0xcb);
        EXPECT(gbc.readMem(0x8ad8), 0xd3);
        // CB D3 01EE
        gbc.setState(0x4807, 0xd346, 0x8c50, 0x805, 0x1614, 0xa3c, 0x0, 0x0);
        gbc.writeMem(0x4807, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd346);
        EXPECT(gbc.pc(), 0x4809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01F0
        gbc.setState(0x45d1, 0x6c8e, 0x71d0, 0x8b7b, 0x25, 0x82d6, 0x0, 0x1);
        gbc.writeMem(0x45d1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6c8e);
        EXPECT(gbc.pc(), 0x45d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01F1
        gbc.setState(0x6b2a, 0x7c4c, 0x6ec0, 0x8760, 0x7bfb, 0xc91, 0x0, 0x0);
        gbc.writeMem(0x6b2a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7c4c);
        EXPECT(gbc.pc(), 0x6b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01F2
        gbc.setState(0x4ff1, 0x2518, 0x28c0, 0x442e, 0x202f, 0x53ab, 0x0, 0x0);
        gbc.writeMem(0x4ff1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2518);
        EXPECT(gbc.pc(), 0x4ff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01F3
        gbc.setState(0x7242, 0xe807, 0x3260, 0xc3ed, 0xe90b, 0x4e59, 0x1, 0x0);
        gbc.writeMem(0x7242, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe807);
        EXPECT(gbc.pc(), 0x7244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01F4
        gbc.setState(0xc044, 0xe53b, 0x4c30, 0x67d5, 0xb6e9, 0xf736, 0x1, 0x1);
        gbc.writeMem(0xc044, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe53b);
        EXPECT(gbc.pc(), 0xc046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc044), 0xcb);
        EXPECT(gbc.readMem(0xc045), 0xd3);
        // CB D3 01F6
        gbc.setState(0xc4ab, 0x3b2d, 0xd70, 0xadb5, 0xc30, 0xcd41, 0x1, 0x1);
        gbc.writeMem(0xc4ab, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3b2d);
        EXPECT(gbc.pc(), 0xc4ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ab), 0xcb);
        EXPECT(gbc.readMem(0xc4ac), 0xd3);
        // CB D3 01F7
        gbc.setState(0x7a9a, 0x5738, 0x2ad0, 0x6a72, 0xd150, 0x8904, 0x1, 0x1);
        gbc.writeMem(0x7a9a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5738);
        EXPECT(gbc.pc(), 0x7a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01F8
        gbc.setState(0x231a, 0x110f, 0xa680, 0xf8cb, 0xddff, 0x46cc, 0x0, 0x1);
        gbc.writeMem(0x231a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x110f);
        EXPECT(gbc.pc(), 0x231c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01F9
        gbc.setState(0x98c1, 0x5772, 0x96d0, 0x3fa8, 0xc27a, 0xe8dc, 0x1, 0x0);
        gbc.writeMem(0x98c1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5772);
        EXPECT(gbc.pc(), 0x98c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c1), 0xcb);
        EXPECT(gbc.readMem(0x98c2), 0xd3);
        // CB D3 01FA
        gbc.setState(0xa770, 0xbda2, 0x3c40, 0xbd33, 0x4fb2, 0x8f44, 0x1, 0x0);
        gbc.writeMem(0xa770, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbda2);
        EXPECT(gbc.pc(), 0xa772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa770), 0xcb);
        EXPECT(gbc.readMem(0xa771), 0xd3);
        // CB D3 01FB
        gbc.setState(0x3691, 0x10af, 0x7230, 0xc472, 0xdb10, 0x1464, 0x1, 0x1);
        gbc.writeMem(0x3691, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x10af);
        EXPECT(gbc.pc(), 0x3693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 01FC
        gbc.setState(0x8fb1, 0x2d45, 0x2480, 0x6d71, 0x15d8, 0xf007, 0x1, 0x0);
        gbc.writeMem(0x8fb1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2d45);
        EXPECT(gbc.pc(), 0x8fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb1), 0xcb);
        EXPECT(gbc.readMem(0x8fb2), 0xd3);
        // CB D3 01FD
        gbc.setState(0x2fa6, 0xf0b2, 0x5140, 0xaaba, 0xdf33, 0x130, 0x1, 0x0);
        gbc.writeMem(0x2fa6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf0b2);
        EXPECT(gbc.pc(), 0x2fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 01FE
        gbc.setState(0xe211, 0x3325, 0xc8d0, 0x5c88, 0xd83e, 0x3500, 0x0, 0x0);
        gbc.writeMem(0xe211, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3325);
        EXPECT(gbc.pc(), 0xe213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe211), 0xcb);
        EXPECT(gbc.readMem(0xe212), 0xd3);
        // CB D3 01FF
        gbc.setState(0x2d11, 0xef5b, 0xc180, 0x21cc, 0x990a, 0x5e0, 0x0, 0x1);
        gbc.writeMem(0x2d11, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xef5b);
        EXPECT(gbc.pc(), 0x2d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0200
        gbc.setState(0x4559, 0x1359, 0x4e30, 0xd50, 0xbecc, 0xc025, 0x0, 0x1);
        gbc.writeMem(0x4559, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1359);
        EXPECT(gbc.pc(), 0x455b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0201
        gbc.setState(0xaa32, 0x744e, 0x66a0, 0x854e, 0x1b45, 0x3923, 0x1, 0x1);
        gbc.writeMem(0xaa32, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x744e);
        EXPECT(gbc.pc(), 0xaa34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa32), 0xcb);
        EXPECT(gbc.readMem(0xaa33), 0xd3);
        // CB D3 0202
        gbc.setState(0x874a, 0x7c74, 0x9e50, 0x575a, 0xa878, 0x49e8, 0x0, 0x0);
        gbc.writeMem(0x874a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7c74);
        EXPECT(gbc.pc(), 0x874c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874a), 0xcb);
        EXPECT(gbc.readMem(0x874b), 0xd3);
        // CB D3 0203
        gbc.setState(0x3a66, 0x3b81, 0x7f50, 0x9374, 0xb0c7, 0xeb50, 0x1, 0x1);
        gbc.writeMem(0x3a66, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3b81);
        EXPECT(gbc.pc(), 0x3a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0204
        gbc.setState(0x20a1, 0xc96d, 0x3a30, 0x38e1, 0xef2, 0x18c1, 0x0, 0x0);
        gbc.writeMem(0x20a1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc96d);
        EXPECT(gbc.pc(), 0x20a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0205
        gbc.setState(0xbef5, 0xf3d9, 0xe470, 0xa1c0, 0x275f, 0xf653, 0x0, 0x0);
        gbc.writeMem(0xbef5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf3d9);
        EXPECT(gbc.pc(), 0xbef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef5), 0xcb);
        EXPECT(gbc.readMem(0xbef6), 0xd3);
        // CB D3 0206
        gbc.setState(0x946, 0x3a07, 0x9fd0, 0xcb80, 0x4b02, 0x6e36, 0x0, 0x1);
        gbc.writeMem(0x946, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3a07);
        EXPECT(gbc.pc(), 0x948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0207
        gbc.setState(0x9f9d, 0x43d5, 0x14a0, 0xd708, 0x2f1f, 0x2df, 0x0, 0x1);
        gbc.writeMem(0x9f9d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x43d5);
        EXPECT(gbc.pc(), 0x9f9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f9d), 0xcb);
        EXPECT(gbc.readMem(0x9f9e), 0xd3);
        // CB D3 0209
        gbc.setState(0xe5da, 0x3eb9, 0xdbd0, 0x56cb, 0x2e58, 0x5aa1, 0x0, 0x1);
        gbc.writeMem(0xe5da, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3eb9);
        EXPECT(gbc.pc(), 0xe5dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5da), 0xcb);
        EXPECT(gbc.readMem(0xe5db), 0xd3);
        // CB D3 020A
        gbc.setState(0xbc09, 0xc39f, 0x9ad0, 0xa522, 0x3147, 0x668a, 0x0, 0x1);
        gbc.writeMem(0xbc09, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc39f);
        EXPECT(gbc.pc(), 0xbc0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc09), 0xcb);
        EXPECT(gbc.readMem(0xbc0a), 0xd3);
        // CB D3 020B
        gbc.setState(0x3409, 0x4d07, 0x9c80, 0xd94c, 0xd71c, 0xfd9f, 0x0, 0x1);
        gbc.writeMem(0x3409, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4d07);
        EXPECT(gbc.pc(), 0x340b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 020C
        gbc.setState(0x3da9, 0x83e0, 0xa670, 0xe430, 0x7926, 0x4bb5, 0x0, 0x1);
        gbc.writeMem(0x3da9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x83e0);
        EXPECT(gbc.pc(), 0x3dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 020E
        gbc.setState(0x643b, 0x502b, 0x8350, 0x9618, 0xd3f2, 0xbee0, 0x0, 0x0);
        gbc.writeMem(0x643b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x502b);
        EXPECT(gbc.pc(), 0x643d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 020F
        gbc.setState(0x306e, 0x7476, 0xb90, 0xfb5b, 0x52d2, 0xbff4, 0x1, 0x1);
        gbc.writeMem(0x306e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7476);
        EXPECT(gbc.pc(), 0x3070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0210
        gbc.setState(0x5e0c, 0xdf34, 0x4eb0, 0xf5a3, 0x3c25, 0x7c81, 0x0, 0x0);
        gbc.writeMem(0x5e0c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdf34);
        EXPECT(gbc.pc(), 0x5e0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0211
        gbc.setState(0x1a1f, 0xbad0, 0x5110, 0xf9a9, 0xfdf1, 0xe30e, 0x0, 0x0);
        gbc.writeMem(0x1a1f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xbad0);
        EXPECT(gbc.pc(), 0x1a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0212
        gbc.setState(0x2712, 0x50ff, 0x1210, 0x5f04, 0xa2ba, 0xd51d, 0x1, 0x1);
        gbc.writeMem(0x2712, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x50ff);
        EXPECT(gbc.pc(), 0x2714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0213
        gbc.setState(0xaaf7, 0xf9d6, 0xd2c0, 0xdfec, 0xab18, 0xd0b8, 0x1, 0x0);
        gbc.writeMem(0xaaf7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf9d6);
        EXPECT(gbc.pc(), 0xaaf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf7), 0xcb);
        EXPECT(gbc.readMem(0xaaf8), 0xd3);
        // CB D3 0214
        gbc.setState(0xc809, 0x2c66, 0xe150, 0xc64c, 0xaf3d, 0x68b6, 0x1, 0x1);
        gbc.writeMem(0xc809, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2c66);
        EXPECT(gbc.pc(), 0xc80b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc809), 0xcb);
        EXPECT(gbc.readMem(0xc80a), 0xd3);
        // CB D3 0215
        gbc.setState(0x142c, 0x1e4, 0x6dd0, 0x99ad, 0xecad, 0xdc6b, 0x1, 0x0);
        gbc.writeMem(0x142c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1e4);
        EXPECT(gbc.pc(), 0x142e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0216
        gbc.setState(0xa45e, 0x7459, 0x1740, 0xf5f6, 0x83a2, 0x4e6c, 0x1, 0x1);
        gbc.writeMem(0xa45e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7459);
        EXPECT(gbc.pc(), 0xa460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa45e), 0xcb);
        EXPECT(gbc.readMem(0xa45f), 0xd3);
        // CB D3 0217
        gbc.setState(0xc284, 0xd28e, 0x1830, 0x20bc, 0xd65b, 0x8146, 0x0, 0x1);
        gbc.writeMem(0xc284, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd28e);
        EXPECT(gbc.pc(), 0xc286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc284), 0xcb);
        EXPECT(gbc.readMem(0xc285), 0xd3);
        // CB D3 0218
        gbc.setState(0x75cf, 0x3fca, 0x89f0, 0x1fa2, 0x2227, 0x9b86, 0x0, 0x0);
        gbc.writeMem(0x75cf, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3fca);
        EXPECT(gbc.pc(), 0x75d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0219
        gbc.setState(0xe7, 0x5a5d, 0xa5d0, 0x634a, 0x5e5b, 0xb2b, 0x0, 0x1);
        gbc.writeMem(0xe7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5a5d);
        EXPECT(gbc.pc(), 0xe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 021A
        gbc.setState(0x2ef8, 0xfafd, 0xfb00, 0xdf3c, 0x78b, 0xb787, 0x1, 0x0);
        gbc.writeMem(0x2ef8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfafd);
        EXPECT(gbc.pc(), 0x2efa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 021B
        gbc.setState(0x343c, 0x3e7, 0xcf60, 0x6d6d, 0xfc8b, 0x3b30, 0x1, 0x0);
        gbc.writeMem(0x343c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3e7);
        EXPECT(gbc.pc(), 0x343e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 021C
        gbc.setState(0xbf20, 0xd3a5, 0x8070, 0xa55f, 0x4b63, 0x444d, 0x1, 0x0);
        gbc.writeMem(0xbf20, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd3a5);
        EXPECT(gbc.pc(), 0xbf22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf20), 0xcb);
        EXPECT(gbc.readMem(0xbf21), 0xd3);
        // CB D3 021D
        gbc.setState(0xb822, 0xd3a7, 0x4800, 0x398d, 0x1ba3, 0x4faa, 0x1, 0x0);
        gbc.writeMem(0xb822, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd3a7);
        EXPECT(gbc.pc(), 0xb824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb822), 0xcb);
        EXPECT(gbc.readMem(0xb823), 0xd3);
        // CB D3 021E
        gbc.setState(0x25f, 0x35da, 0x66c0, 0x259d, 0x5bd6, 0x41e7, 0x0, 0x0);
        gbc.writeMem(0x25f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x35da);
        EXPECT(gbc.pc(), 0x261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 021F
        gbc.setState(0x3fbb, 0xe918, 0xd830, 0xd701, 0x3e88, 0x6a6c, 0x0, 0x0);
        gbc.writeMem(0x3fbb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe918);
        EXPECT(gbc.pc(), 0x3fbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0220
        gbc.setState(0x727a, 0xf2fb, 0xd8f0, 0x6e8b, 0x4c4e, 0x6b87, 0x0, 0x1);
        gbc.writeMem(0x727a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf2fb);
        EXPECT(gbc.pc(), 0x727c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0221
        gbc.setState(0xdb48, 0xdc7c, 0x3190, 0xeda9, 0x60c9, 0x685d, 0x1, 0x1);
        gbc.writeMem(0xdb48, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xdc7c);
        EXPECT(gbc.pc(), 0xdb4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb48), 0xcb);
        EXPECT(gbc.readMem(0xdb49), 0xd3);
        // CB D3 0222
        gbc.setState(0xd1a0, 0xc401, 0xa7e0, 0xac7d, 0xf829, 0xbb1e, 0x0, 0x0);
        gbc.writeMem(0xd1a0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc401);
        EXPECT(gbc.pc(), 0xd1a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a0), 0xcb);
        EXPECT(gbc.readMem(0xd1a1), 0xd3);
        // CB D3 0224
        gbc.setState(0x1ca5, 0xf5a9, 0x30e0, 0x5d9e, 0x94ca, 0xf8ae, 0x0, 0x0);
        gbc.writeMem(0x1ca5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf5a9);
        EXPECT(gbc.pc(), 0x1ca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0225
        gbc.setState(0x66a7, 0x990f, 0x1220, 0x9547, 0x5a8c, 0xb9de, 0x1, 0x1);
        gbc.writeMem(0x66a7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x990f);
        EXPECT(gbc.pc(), 0x66a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0226
        gbc.setState(0x8d6a, 0xe78b, 0xed80, 0xcff0, 0xeeef, 0x55c9, 0x0, 0x0);
        gbc.writeMem(0x8d6a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe78b);
        EXPECT(gbc.pc(), 0x8d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d6a), 0xcb);
        EXPECT(gbc.readMem(0x8d6b), 0xd3);
        // CB D3 0227
        gbc.setState(0x32eb, 0xc005, 0xa90, 0x105, 0x707e, 0x3274, 0x0, 0x0);
        gbc.writeMem(0x32eb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc005);
        EXPECT(gbc.pc(), 0x32ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0228
        gbc.setState(0x5d24, 0x9d46, 0x80f0, 0x46b5, 0xb4fd, 0xf042, 0x0, 0x0);
        gbc.writeMem(0x5d24, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9d46);
        EXPECT(gbc.pc(), 0x5d26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0229
        gbc.setState(0x26c0, 0x24d9, 0xe530, 0x43e3, 0xa76d, 0x85cd, 0x1, 0x1);
        gbc.writeMem(0x26c0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x24d9);
        EXPECT(gbc.pc(), 0x26c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 022A
        gbc.setState(0x514f, 0x9036, 0xb290, 0x312b, 0xa48, 0xb8a, 0x1, 0x0);
        gbc.writeMem(0x514f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9036);
        EXPECT(gbc.pc(), 0x5151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 022B
        gbc.setState(0x8854, 0xa510, 0xb560, 0xc449, 0x5b8d, 0xff8d, 0x0, 0x0);
        gbc.writeMem(0x8854, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa510);
        EXPECT(gbc.pc(), 0x8856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8854), 0xcb);
        EXPECT(gbc.readMem(0x8855), 0xd3);
        // CB D3 022C
        gbc.setState(0x60a, 0x4021, 0x1520, 0x97e3, 0x629a, 0x5f6e, 0x0, 0x1);
        gbc.writeMem(0x60a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4021);
        EXPECT(gbc.pc(), 0x60c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 022D
        gbc.setState(0x8e8b, 0xd623, 0x30b0, 0x1be3, 0x4a18, 0xeff0, 0x0, 0x0);
        gbc.writeMem(0x8e8b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd623);
        EXPECT(gbc.pc(), 0x8e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e8b), 0xcb);
        EXPECT(gbc.readMem(0x8e8c), 0xd3);
        // CB D3 022E
        gbc.setState(0x26a2, 0xce12, 0x5e90, 0x9e9c, 0xa0b0, 0x6bb8, 0x0, 0x0);
        gbc.writeMem(0x26a2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xce12);
        EXPECT(gbc.pc(), 0x26a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 022F
        gbc.setState(0x717b, 0x1e4a, 0x4960, 0xfb9, 0xde59, 0xad90, 0x0, 0x0);
        gbc.writeMem(0x717b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1e4a);
        EXPECT(gbc.pc(), 0x717d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0230
        gbc.setState(0x43e1, 0xbf8f, 0xcb0, 0xb327, 0x2337, 0x4e8f, 0x1, 0x0);
        gbc.writeMem(0x43e1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xbf8f);
        EXPECT(gbc.pc(), 0x43e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0231
        gbc.setState(0x19d, 0xa685, 0x85a0, 0xfa01, 0x27f2, 0x9097, 0x0, 0x1);
        gbc.writeMem(0x19d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa685);
        EXPECT(gbc.pc(), 0x19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0232
        gbc.setState(0x2aec, 0x2b64, 0xbc00, 0xddcb, 0xaee7, 0xd58c, 0x0, 0x0);
        gbc.writeMem(0x2aec, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2b64);
        EXPECT(gbc.pc(), 0x2aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0233
        gbc.setState(0xd7ae, 0x1e57, 0xe520, 0xd98f, 0x2776, 0xe768, 0x0, 0x0);
        gbc.writeMem(0xd7ae, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1e57);
        EXPECT(gbc.pc(), 0xd7b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ae), 0xcb);
        EXPECT(gbc.readMem(0xd7af), 0xd3);
        // CB D3 0234
        gbc.setState(0x7c5c, 0x8535, 0x2580, 0x7357, 0x78f8, 0x509a, 0x1, 0x1);
        gbc.writeMem(0x7c5c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8535);
        EXPECT(gbc.pc(), 0x7c5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0235
        gbc.setState(0x3660, 0x8232, 0xef50, 0xb4d0, 0xf197, 0x6ac4, 0x1, 0x1);
        gbc.writeMem(0x3660, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8232);
        EXPECT(gbc.pc(), 0x3662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0236
        gbc.setState(0xe5d8, 0xe16, 0x5c20, 0xe21a, 0xe8cb, 0x4858, 0x1, 0x0);
        gbc.writeMem(0xe5d8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe16);
        EXPECT(gbc.pc(), 0xe5da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d8), 0xcb);
        EXPECT(gbc.readMem(0xe5d9), 0xd3);
        // CB D3 0237
        gbc.setState(0x6f93, 0xbbde, 0x32b0, 0xdf96, 0x13ae, 0xea93, 0x1, 0x1);
        gbc.writeMem(0x6f93, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbbde);
        EXPECT(gbc.pc(), 0x6f95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0239
        gbc.setState(0xcc4b, 0x986, 0x7ee0, 0xfbc3, 0x2d3f, 0x58ef, 0x0, 0x0);
        gbc.writeMem(0xcc4b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x986);
        EXPECT(gbc.pc(), 0xcc4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4b), 0xcb);
        EXPECT(gbc.readMem(0xcc4c), 0xd3);
        // CB D3 023A
        gbc.setState(0x2774, 0x1f60, 0x63a0, 0x909b, 0x45b6, 0x37a1, 0x1, 0x1);
        gbc.writeMem(0x2774, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1f60);
        EXPECT(gbc.pc(), 0x2776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 023B
        gbc.setState(0xaccb, 0x2aac, 0xe310, 0x9893, 0x6669, 0x5e9a, 0x1, 0x0);
        gbc.writeMem(0xaccb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2aac);
        EXPECT(gbc.pc(), 0xaccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaccb), 0xcb);
        EXPECT(gbc.readMem(0xaccc), 0xd3);
        // CB D3 023C
        gbc.setState(0x8321, 0x7f54, 0x17b0, 0x9698, 0x7e2, 0x8ef8, 0x0, 0x1);
        gbc.writeMem(0x8321, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7f54);
        EXPECT(gbc.pc(), 0x8323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8321), 0xcb);
        EXPECT(gbc.readMem(0x8322), 0xd3);
        // CB D3 023D
        gbc.setState(0xad19, 0xcc70, 0xf9c0, 0xc896, 0x68c5, 0x5400, 0x0, 0x0);
        gbc.writeMem(0xad19, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xcc70);
        EXPECT(gbc.pc(), 0xad1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad19), 0xcb);
        EXPECT(gbc.readMem(0xad1a), 0xd3);
        // CB D3 023E
        gbc.setState(0x23f3, 0xdb36, 0xe4d0, 0x15b, 0x7eb9, 0xf928, 0x1, 0x1);
        gbc.writeMem(0x23f3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdb36);
        EXPECT(gbc.pc(), 0x23f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 023F
        gbc.setState(0x919d, 0x1964, 0xf720, 0x36de, 0xfff0, 0x611e, 0x0, 0x0);
        gbc.writeMem(0x919d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1964);
        EXPECT(gbc.pc(), 0x919f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x919d), 0xcb);
        EXPECT(gbc.readMem(0x919e), 0xd3);
        // CB D3 0241
        gbc.setState(0x57d1, 0x9f68, 0x2390, 0x3fb7, 0x88b7, 0xdabd, 0x0, 0x1);
        gbc.writeMem(0x57d1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9f68);
        EXPECT(gbc.pc(), 0x57d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0242
        gbc.setState(0x386c, 0x78cb, 0x4640, 0x871d, 0x6ff8, 0xe7a4, 0x0, 0x1);
        gbc.writeMem(0x386c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x78cb);
        EXPECT(gbc.pc(), 0x386e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0243
        gbc.setState(0x30b4, 0x2a1c, 0x2bd0, 0x446c, 0x812, 0x78cc, 0x0, 0x0);
        gbc.writeMem(0x30b4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2a1c);
        EXPECT(gbc.pc(), 0x30b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0244
        gbc.setState(0xa4e3, 0x5a4f, 0x120, 0xd2b1, 0x6b13, 0xfab, 0x0, 0x0);
        gbc.writeMem(0xa4e3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5a4f);
        EXPECT(gbc.pc(), 0xa4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e3), 0xcb);
        EXPECT(gbc.readMem(0xa4e4), 0xd3);
        // CB D3 0245
        gbc.setState(0x6ab9, 0xc40e, 0xbf10, 0xd29b, 0xd6d8, 0xd542, 0x0, 0x1);
        gbc.writeMem(0x6ab9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc40e);
        EXPECT(gbc.pc(), 0x6abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0247
        gbc.setState(0xa8b2, 0x3dc1, 0xe700, 0x25d4, 0xd527, 0xebd7, 0x1, 0x0);
        gbc.writeMem(0xa8b2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3dc1);
        EXPECT(gbc.pc(), 0xa8b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b2), 0xcb);
        EXPECT(gbc.readMem(0xa8b3), 0xd3);
        // CB D3 0248
        gbc.setState(0x1ca3, 0xb6b8, 0xc4b0, 0x25d5, 0xe3a3, 0x70cb, 0x1, 0x1);
        gbc.writeMem(0x1ca3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb6b8);
        EXPECT(gbc.pc(), 0x1ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0249
        gbc.setState(0x3e0f, 0x24d0, 0x7e20, 0xd555, 0xf0a4, 0xd06b, 0x0, 0x1);
        gbc.writeMem(0x3e0f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x24d0);
        EXPECT(gbc.pc(), 0x3e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 024A
        gbc.setState(0xe340, 0x706b, 0xf610, 0x48c1, 0x7a9c, 0x2045, 0x0, 0x1);
        gbc.writeMem(0xe340, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x706b);
        EXPECT(gbc.pc(), 0xe342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe340), 0xcb);
        EXPECT(gbc.readMem(0xe341), 0xd3);
        // CB D3 024B
        gbc.setState(0x67a2, 0x9ac4, 0xa090, 0x226c, 0x90ab, 0x1f4f, 0x1, 0x0);
        gbc.writeMem(0x67a2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9ac4);
        EXPECT(gbc.pc(), 0x67a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 024C
        gbc.setState(0x5c84, 0x5b, 0x2960, 0xcd23, 0x7ee5, 0x3390, 0x1, 0x1);
        gbc.writeMem(0x5c84, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5b);
        EXPECT(gbc.pc(), 0x5c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 024D
        gbc.setState(0x79f1, 0xa803, 0xdac0, 0x7afa, 0xb986, 0x108f, 0x1, 0x1);
        gbc.writeMem(0x79f1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa803);
        EXPECT(gbc.pc(), 0x79f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 024E
        gbc.setState(0x4f55, 0x758a, 0x9c30, 0x6ee4, 0xae33, 0x2191, 0x0, 0x0);
        gbc.writeMem(0x4f55, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x758a);
        EXPECT(gbc.pc(), 0x4f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 024F
        gbc.setState(0x23de, 0xce8a, 0xf780, 0xd202, 0xb63b, 0xd0b3, 0x0, 0x0);
        gbc.writeMem(0x23de, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xce8a);
        EXPECT(gbc.pc(), 0x23e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0250
        gbc.setState(0xa423, 0x4c4c, 0x3d30, 0x91e1, 0x562a, 0xc335, 0x0, 0x0);
        gbc.writeMem(0xa423, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4c4c);
        EXPECT(gbc.pc(), 0xa425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa423), 0xcb);
        EXPECT(gbc.readMem(0xa424), 0xd3);
        // CB D3 0251
        gbc.setState(0x7a12, 0xa4e8, 0x8940, 0x1dc0, 0x16ba, 0x728, 0x1, 0x0);
        gbc.writeMem(0x7a12, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa4e8);
        EXPECT(gbc.pc(), 0x7a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0252
        gbc.setState(0xa607, 0xfeee, 0xc240, 0xc406, 0x4fec, 0x9a50, 0x0, 0x0);
        gbc.writeMem(0xa607, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xfeee);
        EXPECT(gbc.pc(), 0xa609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa607), 0xcb);
        EXPECT(gbc.readMem(0xa608), 0xd3);
        // CB D3 0253
        gbc.setState(0x8d2a, 0x2e5d, 0xd180, 0x14fb, 0xe052, 0x8841, 0x0, 0x0);
        gbc.writeMem(0x8d2a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2e5d);
        EXPECT(gbc.pc(), 0x8d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d2a), 0xcb);
        EXPECT(gbc.readMem(0x8d2b), 0xd3);
        // CB D3 0254
        gbc.setState(0x34a9, 0x336f, 0xc480, 0x6180, 0x19e7, 0x1553, 0x1, 0x0);
        gbc.writeMem(0x34a9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x336f);
        EXPECT(gbc.pc(), 0x34ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0255
        gbc.setState(0xd20f, 0x208a, 0xf820, 0x84f, 0x7177, 0xa85a, 0x1, 0x0);
        gbc.writeMem(0xd20f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x208a);
        EXPECT(gbc.pc(), 0xd211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20f), 0xcb);
        EXPECT(gbc.readMem(0xd210), 0xd3);
        // CB D3 0256
        gbc.setState(0x55fd, 0x84d3, 0x7d80, 0xfca7, 0xe61c, 0x3e30, 0x1, 0x0);
        gbc.writeMem(0x55fd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x84d3);
        EXPECT(gbc.pc(), 0x55ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0257
        gbc.setState(0x1f1f, 0x5d4, 0xa850, 0xefe3, 0x1bda, 0x328f, 0x1, 0x1);
        gbc.writeMem(0x1f1f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5d4);
        EXPECT(gbc.pc(), 0x1f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0258
        gbc.setState(0xd186, 0x240, 0xbcd0, 0x4706, 0x909e, 0xe933, 0x1, 0x0);
        gbc.writeMem(0xd186, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x240);
        EXPECT(gbc.pc(), 0xd188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd186), 0xcb);
        EXPECT(gbc.readMem(0xd187), 0xd3);
        // CB D3 0259
        gbc.setState(0x8e2b, 0x7086, 0x3f80, 0xc9c9, 0x8430, 0x14d5, 0x1, 0x0);
        gbc.writeMem(0x8e2b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7086);
        EXPECT(gbc.pc(), 0x8e2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e2b), 0xcb);
        EXPECT(gbc.readMem(0x8e2c), 0xd3);
        // CB D3 025A
        gbc.setState(0x5f6d, 0xf632, 0x7310, 0xfa11, 0xd54f, 0xdcff, 0x0, 0x0);
        gbc.writeMem(0x5f6d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf632);
        EXPECT(gbc.pc(), 0x5f6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 025B
        gbc.setState(0xb5a7, 0x300, 0xcf90, 0x59ae, 0x33f, 0xc051, 0x0, 0x1);
        gbc.writeMem(0xb5a7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x300);
        EXPECT(gbc.pc(), 0xb5a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5a7), 0xcb);
        EXPECT(gbc.readMem(0xb5a8), 0xd3);
        // CB D3 025C
        gbc.setState(0x6a54, 0x2cbe, 0x7690, 0x32a6, 0x2db2, 0x34cf, 0x1, 0x1);
        gbc.writeMem(0x6a54, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2cbe);
        EXPECT(gbc.pc(), 0x6a56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 025D
        gbc.setState(0x2e4e, 0x816, 0x6280, 0x49bc, 0x37f9, 0x8a47, 0x1, 0x1);
        gbc.writeMem(0x2e4e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x816);
        EXPECT(gbc.pc(), 0x2e50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 025E
        gbc.setState(0x3899, 0x10e8, 0xafb0, 0x283, 0x614e, 0x905e, 0x0, 0x1);
        gbc.writeMem(0x3899, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x10e8);
        EXPECT(gbc.pc(), 0x389b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 025F
        gbc.setState(0xd725, 0x6e5e, 0xb0e0, 0xdb6, 0x6132, 0x188d, 0x0, 0x0);
        gbc.writeMem(0xd725, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6e5e);
        EXPECT(gbc.pc(), 0xd727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd725), 0xcb);
        EXPECT(gbc.readMem(0xd726), 0xd3);
        // CB D3 0260
        gbc.setState(0x3e31, 0x2772, 0xb8c0, 0x9d02, 0x486d, 0x1ea, 0x0, 0x1);
        gbc.writeMem(0x3e31, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2772);
        EXPECT(gbc.pc(), 0x3e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0261
        gbc.setState(0x6f54, 0xe758, 0x28e0, 0xf9f0, 0xef8b, 0xd4c6, 0x0, 0x1);
        gbc.writeMem(0x6f54, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe758);
        EXPECT(gbc.pc(), 0x6f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0262
        gbc.setState(0xddbc, 0x5512, 0x65f0, 0xbbc0, 0x10e7, 0x929d, 0x1, 0x1);
        gbc.writeMem(0xddbc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5512);
        EXPECT(gbc.pc(), 0xddbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddbc), 0xcb);
        EXPECT(gbc.readMem(0xddbd), 0xd3);
        // CB D3 0263
        gbc.setState(0xc378, 0xa52b, 0x5160, 0xd321, 0xdb39, 0x1d5c, 0x0, 0x0);
        gbc.writeMem(0xc378, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa52b);
        EXPECT(gbc.pc(), 0xc37a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc378), 0xcb);
        EXPECT(gbc.readMem(0xc379), 0xd3);
        // CB D3 0264
        gbc.setState(0x9d01, 0x1479, 0xba10, 0xd9a4, 0x593f, 0xf5d1, 0x0, 0x1);
        gbc.writeMem(0x9d01, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1479);
        EXPECT(gbc.pc(), 0x9d03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d01), 0xcb);
        EXPECT(gbc.readMem(0x9d02), 0xd3);
        // CB D3 0265
        gbc.setState(0x1a8, 0x5e12, 0xbac0, 0x45ac, 0x7b56, 0x8117, 0x0, 0x1);
        gbc.writeMem(0x1a8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5e12);
        EXPECT(gbc.pc(), 0x1aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0266
        gbc.setState(0xd541, 0x847d, 0x9d20, 0x9016, 0x9015, 0xb52d, 0x1, 0x0);
        gbc.writeMem(0xd541, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x847d);
        EXPECT(gbc.pc(), 0xd543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd541), 0xcb);
        EXPECT(gbc.readMem(0xd542), 0xd3);
        // CB D3 0267
        gbc.setState(0xeb00, 0xb162, 0x68f0, 0xe88e, 0x783a, 0x5f9e, 0x1, 0x1);
        gbc.writeMem(0xeb00, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb162);
        EXPECT(gbc.pc(), 0xeb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb00), 0xcb);
        EXPECT(gbc.readMem(0xeb01), 0xd3);
        // CB D3 0268
        gbc.setState(0xaaf8, 0x5943, 0x2350, 0x5b67, 0x898c, 0x9f08, 0x0, 0x1);
        gbc.writeMem(0xaaf8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5943);
        EXPECT(gbc.pc(), 0xaafa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf8), 0xcb);
        EXPECT(gbc.readMem(0xaaf9), 0xd3);
        // CB D3 0269
        gbc.setState(0x2b88, 0xa8ae, 0xa2b0, 0xf365, 0xca18, 0x5842, 0x1, 0x1);
        gbc.writeMem(0x2b88, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa8ae);
        EXPECT(gbc.pc(), 0x2b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 026A
        gbc.setState(0x2559, 0x4f93, 0x5c80, 0xece7, 0xda99, 0xf453, 0x0, 0x0);
        gbc.writeMem(0x2559, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4f93);
        EXPECT(gbc.pc(), 0x255b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 026B
        gbc.setState(0x2d9e, 0xf993, 0x6710, 0x5e39, 0xf15a, 0xfa5d, 0x1, 0x0);
        gbc.writeMem(0x2d9e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf993);
        EXPECT(gbc.pc(), 0x2da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 026C
        gbc.setState(0x40fb, 0x4a3a, 0x2bd0, 0x71a6, 0x8d40, 0x3292, 0x1, 0x1);
        gbc.writeMem(0x40fb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4a3a);
        EXPECT(gbc.pc(), 0x40fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 026D
        gbc.setState(0x6726, 0xc030, 0x50, 0xe80f, 0x3493, 0x402f, 0x0, 0x0);
        gbc.writeMem(0x6726, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc030);
        EXPECT(gbc.pc(), 0x6728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 026E
        gbc.setState(0xa044, 0x6485, 0xcfc0, 0x94af, 0x552b, 0xf4a, 0x0, 0x0);
        gbc.writeMem(0xa044, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6485);
        EXPECT(gbc.pc(), 0xa046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa044), 0xcb);
        EXPECT(gbc.readMem(0xa045), 0xd3);
        // CB D3 026F
        gbc.setState(0x47f0, 0xa30f, 0xf2c0, 0x5ef5, 0x7f7f, 0xc6ae, 0x0, 0x0);
        gbc.writeMem(0x47f0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa30f);
        EXPECT(gbc.pc(), 0x47f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0270
        gbc.setState(0x9af7, 0x6c, 0x36f0, 0xcb17, 0x6c5a, 0xe729, 0x0, 0x1);
        gbc.writeMem(0x9af7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6c);
        EXPECT(gbc.pc(), 0x9af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af7), 0xcb);
        EXPECT(gbc.readMem(0x9af8), 0xd3);
        // CB D3 0271
        gbc.setState(0x9bcf, 0xbe20, 0x2f20, 0x104f, 0xc1a3, 0xe12e, 0x1, 0x1);
        gbc.writeMem(0x9bcf, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbe20);
        EXPECT(gbc.pc(), 0x9bd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bcf), 0xcb);
        EXPECT(gbc.readMem(0x9bd0), 0xd3);
        // CB D3 0272
        gbc.setState(0xef76, 0xe709, 0xc290, 0x9405, 0x83b8, 0xb7f3, 0x0, 0x0);
        gbc.writeMem(0xef76, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe709);
        EXPECT(gbc.pc(), 0xef78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef76), 0xcb);
        EXPECT(gbc.readMem(0xef77), 0xd3);
        // CB D3 0273
        gbc.setState(0x9ff7, 0x17cc, 0xdff0, 0xcd32, 0x17e2, 0xed91, 0x1, 0x1);
        gbc.writeMem(0x9ff7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x17cc);
        EXPECT(gbc.pc(), 0x9ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff7), 0xcb);
        EXPECT(gbc.readMem(0x9ff8), 0xd3);
        // CB D3 0274
        gbc.setState(0x62f4, 0x8209, 0xc890, 0x94f9, 0x1d6b, 0xa33e, 0x0, 0x1);
        gbc.writeMem(0x62f4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8209);
        EXPECT(gbc.pc(), 0x62f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0275
        gbc.setState(0xba65, 0xdfe7, 0xfc30, 0x3e66, 0x2dcd, 0x5897, 0x1, 0x0);
        gbc.writeMem(0xba65, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdfe7);
        EXPECT(gbc.pc(), 0xba67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba65), 0xcb);
        EXPECT(gbc.readMem(0xba66), 0xd3);
        // CB D3 0276
        gbc.setState(0xeefe, 0x396, 0xcd10, 0xc3df, 0x8ca1, 0x8ca9, 0x0, 0x1);
        gbc.writeMem(0xeefe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x396);
        EXPECT(gbc.pc(), 0xef00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeefe), 0xcb);
        EXPECT(gbc.readMem(0xeeff), 0xd3);
        // CB D3 0277
        gbc.setState(0x8ff7, 0xf81e, 0x6ba0, 0x7e9, 0x2eea, 0x1ee8, 0x1, 0x0);
        gbc.writeMem(0x8ff7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf81e);
        EXPECT(gbc.pc(), 0x8ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff7), 0xcb);
        EXPECT(gbc.readMem(0x8ff8), 0xd3);
        // CB D3 0278
        gbc.setState(0xd2e9, 0x2b36, 0x4e90, 0xdf3e, 0xccd8, 0x346c, 0x0, 0x1);
        gbc.writeMem(0xd2e9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2b36);
        EXPECT(gbc.pc(), 0xd2eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2e9), 0xcb);
        EXPECT(gbc.readMem(0xd2ea), 0xd3);
        // CB D3 0279
        gbc.setState(0x8429, 0x2189, 0xcef0, 0x41d8, 0xff3f, 0xfde4, 0x0, 0x0);
        gbc.writeMem(0x8429, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2189);
        EXPECT(gbc.pc(), 0x842b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8429), 0xcb);
        EXPECT(gbc.readMem(0x842a), 0xd3);
        // CB D3 027A
        gbc.setState(0x162c, 0xcf08, 0x1e90, 0xddd, 0x3fbb, 0xb3bb, 0x1, 0x1);
        gbc.writeMem(0x162c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcf08);
        EXPECT(gbc.pc(), 0x162e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 027B
        gbc.setState(0x3e40, 0x2623, 0x3f90, 0xc39, 0x9012, 0xaca9, 0x0, 0x1);
        gbc.writeMem(0x3e40, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2623);
        EXPECT(gbc.pc(), 0x3e42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 027C
        gbc.setState(0xbcb2, 0xef84, 0x6a10, 0x428, 0xe6f7, 0xb4ea, 0x1, 0x1);
        gbc.writeMem(0xbcb2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xef84);
        EXPECT(gbc.pc(), 0xbcb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb2), 0xcb);
        EXPECT(gbc.readMem(0xbcb3), 0xd3);
        // CB D3 027D
        gbc.setState(0xb86a, 0x5084, 0x65d0, 0xf0af, 0xb6c9, 0xaad9, 0x0, 0x1);
        gbc.writeMem(0xb86a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5084);
        EXPECT(gbc.pc(), 0xb86c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb86a), 0xcb);
        EXPECT(gbc.readMem(0xb86b), 0xd3);
        // CB D3 027E
        gbc.setState(0x69f6, 0x8ab5, 0x8610, 0xd550, 0x6443, 0xf4ef, 0x0, 0x1);
        gbc.writeMem(0x69f6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8ab5);
        EXPECT(gbc.pc(), 0x69f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 027F
        gbc.setState(0x456f, 0x8aff, 0x53d0, 0xec83, 0xcae, 0x4fca, 0x1, 0x1);
        gbc.writeMem(0x456f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8aff);
        EXPECT(gbc.pc(), 0x4571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0282
        gbc.setState(0xbf6a, 0x4697, 0xcc10, 0xfb0c, 0x50a1, 0xea60, 0x1, 0x1);
        gbc.writeMem(0xbf6a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4697);
        EXPECT(gbc.pc(), 0xbf6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf6a), 0xcb);
        EXPECT(gbc.readMem(0xbf6b), 0xd3);
        // CB D3 0283
        gbc.setState(0x5be4, 0xc08f, 0xa70, 0x2b8d, 0x7347, 0x51b1, 0x0, 0x1);
        gbc.writeMem(0x5be4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc08f);
        EXPECT(gbc.pc(), 0x5be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0284
        gbc.setState(0x8922, 0x9db9, 0x7170, 0xb542, 0x642b, 0xfadd, 0x1, 0x1);
        gbc.writeMem(0x8922, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9db9);
        EXPECT(gbc.pc(), 0x8924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8922), 0xcb);
        EXPECT(gbc.readMem(0x8923), 0xd3);
        // CB D3 0285
        gbc.setState(0xeeaa, 0x87d4, 0x47c0, 0xa463, 0x99f2, 0x9182, 0x1, 0x0);
        gbc.writeMem(0xeeaa, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x87d4);
        EXPECT(gbc.pc(), 0xeeac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeaa), 0xcb);
        EXPECT(gbc.readMem(0xeeab), 0xd3);
        // CB D3 0286
        gbc.setState(0x4ab4, 0xa621, 0xc510, 0x57b6, 0x27b2, 0x1628, 0x1, 0x0);
        gbc.writeMem(0x4ab4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa621);
        EXPECT(gbc.pc(), 0x4ab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0287
        gbc.setState(0x6a4, 0x7749, 0xe720, 0xa20a, 0x55da, 0x8277, 0x0, 0x0);
        gbc.writeMem(0x6a4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7749);
        EXPECT(gbc.pc(), 0x6a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0288
        gbc.setState(0x1da9, 0xc42d, 0x7a0, 0xa6b4, 0x622d, 0x1777, 0x1, 0x1);
        gbc.writeMem(0x1da9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc42d);
        EXPECT(gbc.pc(), 0x1dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0289
        gbc.setState(0x6e29, 0xcb0e, 0x9fa0, 0x2613, 0xba36, 0xb1e7, 0x1, 0x0);
        gbc.writeMem(0x6e29, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcb0e);
        EXPECT(gbc.pc(), 0x6e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 028A
        gbc.setState(0x4c32, 0x6a93, 0xb3f0, 0x451d, 0x7912, 0x30c2, 0x1, 0x1);
        gbc.writeMem(0x4c32, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6a93);
        EXPECT(gbc.pc(), 0x4c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 028B
        gbc.setState(0x384e, 0xaee, 0x79e0, 0x2019, 0x142c, 0xc990, 0x0, 0x1);
        gbc.writeMem(0x384e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaee);
        EXPECT(gbc.pc(), 0x3850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 028C
        gbc.setState(0x57c7, 0x53fa, 0x6990, 0xcee2, 0x9925, 0xf5b4, 0x0, 0x1);
        gbc.writeMem(0x57c7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x53fa);
        EXPECT(gbc.pc(), 0x57c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 028D
        gbc.setState(0x20b8, 0x2623, 0xa9d0, 0x4ef, 0x8df7, 0xbdab, 0x0, 0x0);
        gbc.writeMem(0x20b8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2623);
        EXPECT(gbc.pc(), 0x20ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 028E
        gbc.setState(0xdd6f, 0x9988, 0xefe0, 0x2e32, 0xd728, 0x8ede, 0x0, 0x0);
        gbc.writeMem(0xdd6f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9988);
        EXPECT(gbc.pc(), 0xdd71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd6f), 0xcb);
        EXPECT(gbc.readMem(0xdd70), 0xd3);
        // CB D3 028F
        gbc.setState(0xb8d5, 0xeb9c, 0x4750, 0x8c60, 0x6552, 0xa344, 0x1, 0x0);
        gbc.writeMem(0xb8d5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xeb9c);
        EXPECT(gbc.pc(), 0xb8d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d5), 0xcb);
        EXPECT(gbc.readMem(0xb8d6), 0xd3);
        // CB D3 0290
        gbc.setState(0x5066, 0xd3ef, 0xea90, 0xc4dc, 0xcfd8, 0xd59c, 0x1, 0x0);
        gbc.writeMem(0x5066, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd3ef);
        EXPECT(gbc.pc(), 0x5068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0291
        gbc.setState(0xb354, 0x7f4f, 0xbbb0, 0x35a5, 0x5dd3, 0xea11, 0x1, 0x1);
        gbc.writeMem(0xb354, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7f4f);
        EXPECT(gbc.pc(), 0xb356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb354), 0xcb);
        EXPECT(gbc.readMem(0xb355), 0xd3);
        // CB D3 0292
        gbc.setState(0x1253, 0x98d9, 0xf8d0, 0x4d94, 0x9946, 0x4d58, 0x1, 0x0);
        gbc.writeMem(0x1253, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x98d9);
        EXPECT(gbc.pc(), 0x1255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0293
        gbc.setState(0x7d39, 0x4936, 0x2670, 0x591d, 0x3b26, 0x8ca2, 0x1, 0x1);
        gbc.writeMem(0x7d39, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4936);
        EXPECT(gbc.pc(), 0x7d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0294
        gbc.setState(0x8783, 0x4de2, 0xba80, 0x2995, 0x777a, 0x5b48, 0x1, 0x1);
        gbc.writeMem(0x8783, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4de2);
        EXPECT(gbc.pc(), 0x8785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8783), 0xcb);
        EXPECT(gbc.readMem(0x8784), 0xd3);
        // CB D3 0295
        gbc.setState(0x4078, 0xda9, 0xcd60, 0x24a0, 0x8664, 0x1f92, 0x1, 0x0);
        gbc.writeMem(0x4078, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xda9);
        EXPECT(gbc.pc(), 0x407a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0296
        gbc.setState(0xa08b, 0x1727, 0xe300, 0x7a8, 0x4471, 0x2879, 0x0, 0x0);
        gbc.writeMem(0xa08b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1727);
        EXPECT(gbc.pc(), 0xa08d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08b), 0xcb);
        EXPECT(gbc.readMem(0xa08c), 0xd3);
        // CB D3 0297
        gbc.setState(0x3912, 0xbf85, 0xd760, 0x4d20, 0x5810, 0x2bfe, 0x0, 0x0);
        gbc.writeMem(0x3912, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbf85);
        EXPECT(gbc.pc(), 0x3914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0298
        gbc.setState(0xbbfa, 0xa06f, 0x7920, 0xb579, 0x6fce, 0x29c4, 0x1, 0x1);
        gbc.writeMem(0xbbfa, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa06f);
        EXPECT(gbc.pc(), 0xbbfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbfa), 0xcb);
        EXPECT(gbc.readMem(0xbbfb), 0xd3);
        // CB D3 0299
        gbc.setState(0x61a7, 0x5408, 0x3c80, 0x3d5, 0xad48, 0xc108, 0x0, 0x1);
        gbc.writeMem(0x61a7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5408);
        EXPECT(gbc.pc(), 0x61a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 029A
        gbc.setState(0x637, 0xcf91, 0x77f0, 0xda49, 0xa371, 0xc8c9, 0x0, 0x1);
        gbc.writeMem(0x637, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xcf91);
        EXPECT(gbc.pc(), 0x639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 029B
        gbc.setState(0xb9cb, 0x402c, 0x58c0, 0xa74a, 0x5da0, 0x4415, 0x0, 0x1);
        gbc.writeMem(0xb9cb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x402c);
        EXPECT(gbc.pc(), 0xb9cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9cb), 0xcb);
        EXPECT(gbc.readMem(0xb9cc), 0xd3);
        // CB D3 029C
        gbc.setState(0xcb8f, 0x1f85, 0xb7c0, 0xb684, 0xa7e5, 0x8e58, 0x1, 0x1);
        gbc.writeMem(0xcb8f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1f85);
        EXPECT(gbc.pc(), 0xcb91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb8f), 0xcb);
        EXPECT(gbc.readMem(0xcb90), 0xd3);
        // CB D3 029D
        gbc.setState(0x210a, 0xe4e9, 0x14e0, 0x15c, 0x370c, 0x84c5, 0x1, 0x0);
        gbc.writeMem(0x210a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe4e9);
        EXPECT(gbc.pc(), 0x210c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 029E
        gbc.setState(0x706b, 0xfa06, 0x8350, 0x21fa, 0xb595, 0x2f40, 0x0, 0x1);
        gbc.writeMem(0x706b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xfa06);
        EXPECT(gbc.pc(), 0x706d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 029F
        gbc.setState(0x49db, 0x38dd, 0x8500, 0xfa32, 0x70e1, 0x547f, 0x1, 0x1);
        gbc.writeMem(0x49db, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x38dd);
        EXPECT(gbc.pc(), 0x49dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02A0
        gbc.setState(0x2ef5, 0xe2a2, 0x330, 0x9f6b, 0x33f1, 0x34e0, 0x1, 0x0);
        gbc.writeMem(0x2ef5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe2a2);
        EXPECT(gbc.pc(), 0x2ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02A1
        gbc.setState(0xc8d2, 0xf1e1, 0xb90, 0x1aa6, 0x6c3f, 0x50d0, 0x1, 0x1);
        gbc.writeMem(0xc8d2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf1e1);
        EXPECT(gbc.pc(), 0xc8d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d2), 0xcb);
        EXPECT(gbc.readMem(0xc8d3), 0xd3);
        // CB D3 02A2
        gbc.setState(0x3b1a, 0x6425, 0x15c0, 0xb75b, 0xfe41, 0x828b, 0x1, 0x1);
        gbc.writeMem(0x3b1a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6425);
        EXPECT(gbc.pc(), 0x3b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02A3
        gbc.setState(0x4e79, 0x6695, 0x4220, 0x33dc, 0x8ec7, 0x9eb3, 0x0, 0x0);
        gbc.writeMem(0x4e79, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6695);
        EXPECT(gbc.pc(), 0x4e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02A4
        gbc.setState(0x4036, 0xdfc8, 0xd20, 0xb2a8, 0x3c41, 0x4c3b, 0x1, 0x1);
        gbc.writeMem(0x4036, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdfc8);
        EXPECT(gbc.pc(), 0x4038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02A5
        gbc.setState(0xccbc, 0x12e8, 0xfd20, 0x6992, 0x9407, 0xc187, 0x1, 0x0);
        gbc.writeMem(0xccbc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x12e8);
        EXPECT(gbc.pc(), 0xccbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccbc), 0xcb);
        EXPECT(gbc.readMem(0xccbd), 0xd3);
        // CB D3 02A6
        gbc.setState(0x97a1, 0x3f25, 0xd1b0, 0x12c6, 0x8448, 0xd5a, 0x1, 0x1);
        gbc.writeMem(0x97a1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3f25);
        EXPECT(gbc.pc(), 0x97a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a1), 0xcb);
        EXPECT(gbc.readMem(0x97a2), 0xd3);
        // CB D3 02A7
        gbc.setState(0xdcf1, 0x674a, 0x29d0, 0x482a, 0x8f6b, 0x421e, 0x1, 0x0);
        gbc.writeMem(0xdcf1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x674a);
        EXPECT(gbc.pc(), 0xdcf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf1), 0xcb);
        EXPECT(gbc.readMem(0xdcf2), 0xd3);
        // CB D3 02A8
        gbc.setState(0x7f28, 0xfdbb, 0xcd30, 0x6e66, 0xbea, 0xa2d6, 0x1, 0x1);
        gbc.writeMem(0x7f28, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xfdbb);
        EXPECT(gbc.pc(), 0x7f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02A9
        gbc.setState(0x4425, 0xee42, 0x6590, 0xc206, 0xf8f4, 0x77cc, 0x1, 0x0);
        gbc.writeMem(0x4425, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xee42);
        EXPECT(gbc.pc(), 0x4427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02AA
        gbc.setState(0x5e49, 0x77e0, 0xce40, 0xbae2, 0xbb21, 0x3cb0, 0x1, 0x1);
        gbc.writeMem(0x5e49, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x77e0);
        EXPECT(gbc.pc(), 0x5e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02AB
        gbc.setState(0xd84b, 0x610b, 0x1c50, 0x2d8b, 0xf605, 0xf8fd, 0x0, 0x1);
        gbc.writeMem(0xd84b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x610b);
        EXPECT(gbc.pc(), 0xd84d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84b), 0xcb);
        EXPECT(gbc.readMem(0xd84c), 0xd3);
        // CB D3 02AC
        gbc.setState(0x6aaa, 0x2d81, 0x3460, 0x6ec8, 0x14ce, 0x590a, 0x1, 0x1);
        gbc.writeMem(0x6aaa, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2d81);
        EXPECT(gbc.pc(), 0x6aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02AD
        gbc.setState(0xa41f, 0x4552, 0x40a0, 0xa1a, 0x6296, 0xeb05, 0x0, 0x0);
        gbc.writeMem(0xa41f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4552);
        EXPECT(gbc.pc(), 0xa421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa41f), 0xcb);
        EXPECT(gbc.readMem(0xa420), 0xd3);
        // CB D3 02AE
        gbc.setState(0xb768, 0xcc1e, 0xf5b0, 0xa620, 0xd668, 0x1afa, 0x0, 0x1);
        gbc.writeMem(0xb768, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xcc1e);
        EXPECT(gbc.pc(), 0xb76a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb768), 0xcb);
        EXPECT(gbc.readMem(0xb769), 0xd3);
        // CB D3 02AF
        gbc.setState(0x89dc, 0xea8c, 0xc0d0, 0x4c93, 0x2dfb, 0x2614, 0x0, 0x1);
        gbc.writeMem(0x89dc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xea8c);
        EXPECT(gbc.pc(), 0x89de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89dc), 0xcb);
        EXPECT(gbc.readMem(0x89dd), 0xd3);
        // CB D3 02B0
        gbc.setState(0xde6, 0x6104, 0xd0, 0x733d, 0x67c9, 0x3e3e, 0x1, 0x0);
        gbc.writeMem(0xde6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6104);
        EXPECT(gbc.pc(), 0xde8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02B1
        gbc.setState(0xc093, 0xea88, 0xe8d0, 0xe890, 0xabe1, 0x42be, 0x1, 0x0);
        gbc.writeMem(0xc093, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xea88);
        EXPECT(gbc.pc(), 0xc095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc093), 0xcb);
        EXPECT(gbc.readMem(0xc094), 0xd3);
        // CB D3 02B2
        gbc.setState(0xc16c, 0xab51, 0x7fa0, 0xf025, 0x1495, 0x12f1, 0x0, 0x1);
        gbc.writeMem(0xc16c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xab51);
        EXPECT(gbc.pc(), 0xc16e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc16c), 0xcb);
        EXPECT(gbc.readMem(0xc16d), 0xd3);
        // CB D3 02B3
        gbc.setState(0x5293, 0xb81c, 0xc6d0, 0x44f0, 0x5bac, 0x22fe, 0x1, 0x0);
        gbc.writeMem(0x5293, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb81c);
        EXPECT(gbc.pc(), 0x5295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02B4
        gbc.setState(0x1909, 0xc3eb, 0xcce0, 0xf7eb, 0x6b46, 0xcac1, 0x0, 0x0);
        gbc.writeMem(0x1909, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc3eb);
        EXPECT(gbc.pc(), 0x190b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02B5
        gbc.setState(0x633c, 0xb455, 0xa2f0, 0xfada, 0x6da5, 0xabf5, 0x1, 0x0);
        gbc.writeMem(0x633c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb455);
        EXPECT(gbc.pc(), 0x633e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02B6
        gbc.setState(0xad0a, 0xb1f5, 0x14d0, 0x768c, 0xe0a9, 0x2760, 0x1, 0x0);
        gbc.writeMem(0xad0a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb1f5);
        EXPECT(gbc.pc(), 0xad0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad0a), 0xcb);
        EXPECT(gbc.readMem(0xad0b), 0xd3);
        // CB D3 02B7
        gbc.setState(0xecac, 0x9506, 0x78b0, 0x8194, 0x69c3, 0x6919, 0x1, 0x0);
        gbc.writeMem(0xecac, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9506);
        EXPECT(gbc.pc(), 0xecae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecac), 0xcb);
        EXPECT(gbc.readMem(0xecad), 0xd3);
        // CB D3 02B8
        gbc.setState(0xc9ec, 0x2d15, 0x35d0, 0x9226, 0xbcb9, 0x8d66, 0x1, 0x1);
        gbc.writeMem(0xc9ec, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2d15);
        EXPECT(gbc.pc(), 0xc9ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ec), 0xcb);
        EXPECT(gbc.readMem(0xc9ed), 0xd3);
        // CB D3 02B9
        gbc.setState(0x3832, 0xdba0, 0xd680, 0x1a4f, 0x8fe9, 0xdda8, 0x0, 0x0);
        gbc.writeMem(0x3832, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xdba0);
        EXPECT(gbc.pc(), 0x3834);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02BA
        gbc.setState(0x8ca7, 0xd51d, 0xb750, 0xf418, 0x2d70, 0x9d29, 0x0, 0x1);
        gbc.writeMem(0x8ca7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd51d);
        EXPECT(gbc.pc(), 0x8ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca7), 0xcb);
        EXPECT(gbc.readMem(0x8ca8), 0xd3);
        // CB D3 02BB
        gbc.setState(0x28bc, 0xb627, 0x2c90, 0x7da3, 0x64bd, 0x7701, 0x1, 0x1);
        gbc.writeMem(0x28bc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb627);
        EXPECT(gbc.pc(), 0x28be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02BC
        gbc.setState(0xd8a7, 0x16ad, 0x5310, 0xee27, 0x5f82, 0x301d, 0x0, 0x1);
        gbc.writeMem(0xd8a7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x16ad);
        EXPECT(gbc.pc(), 0xd8a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a7), 0xcb);
        EXPECT(gbc.readMem(0xd8a8), 0xd3);
        // CB D3 02BD
        gbc.setState(0x6cee, 0x44a0, 0xa930, 0xfe93, 0xd5b, 0x2f05, 0x1, 0x1);
        gbc.writeMem(0x6cee, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x44a0);
        EXPECT(gbc.pc(), 0x6cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02BE
        gbc.setState(0x758d, 0x87e6, 0xeb10, 0x795a, 0xd425, 0x9e62, 0x1, 0x1);
        gbc.writeMem(0x758d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x87e6);
        EXPECT(gbc.pc(), 0x758f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02BF
        gbc.setState(0xc7fe, 0x17e6, 0xce50, 0x66d5, 0xbd7, 0x9572, 0x1, 0x0);
        gbc.writeMem(0xc7fe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x17e6);
        EXPECT(gbc.pc(), 0xc800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7fe), 0xcb);
        EXPECT(gbc.readMem(0xc7ff), 0xd3);
        // CB D3 02C0
        gbc.setState(0x14ba, 0xb549, 0xc190, 0xa243, 0xa39f, 0x7fdc, 0x1, 0x0);
        gbc.writeMem(0x14ba, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb549);
        EXPECT(gbc.pc(), 0x14bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02C1
        gbc.setState(0x1d4d, 0x1bb7, 0x5b30, 0x3612, 0x6ac2, 0x4701, 0x1, 0x0);
        gbc.writeMem(0x1d4d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1bb7);
        EXPECT(gbc.pc(), 0x1d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02C2
        gbc.setState(0x69bb, 0x9fd7, 0xfae0, 0x6332, 0x92a0, 0x8165, 0x1, 0x1);
        gbc.writeMem(0x69bb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9fd7);
        EXPECT(gbc.pc(), 0x69bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02C3
        gbc.setState(0xdafd, 0x8bb4, 0x7980, 0x67c, 0x618c, 0x7e1, 0x0, 0x0);
        gbc.writeMem(0xdafd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8bb4);
        EXPECT(gbc.pc(), 0xdaff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdafd), 0xcb);
        EXPECT(gbc.readMem(0xdafe), 0xd3);
        // CB D3 02C4
        gbc.setState(0xe10, 0x1473, 0x2730, 0x6999, 0x648c, 0xd1bb, 0x1, 0x0);
        gbc.writeMem(0xe10, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1473);
        EXPECT(gbc.pc(), 0xe12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02C5
        gbc.setState(0x1e57, 0x75d5, 0xc950, 0x5945, 0x6926, 0x4939, 0x1, 0x0);
        gbc.writeMem(0x1e57, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x75d5);
        EXPECT(gbc.pc(), 0x1e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02C6
        gbc.setState(0x2779, 0xc549, 0xfc20, 0x73d7, 0x3b94, 0xb7a2, 0x1, 0x0);
        gbc.writeMem(0x2779, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc549);
        EXPECT(gbc.pc(), 0x277b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02C7
        gbc.setState(0x84ac, 0xc21e, 0x590, 0x8df8, 0x27d7, 0x6c65, 0x1, 0x1);
        gbc.writeMem(0x84ac, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc21e);
        EXPECT(gbc.pc(), 0x84ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ac), 0xcb);
        EXPECT(gbc.readMem(0x84ad), 0xd3);
        // CB D3 02C8
        gbc.setState(0xd2d9, 0xf39c, 0x5ec0, 0x7b79, 0x8748, 0x9dc0, 0x1, 0x0);
        gbc.writeMem(0xd2d9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf39c);
        EXPECT(gbc.pc(), 0xd2db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d9), 0xcb);
        EXPECT(gbc.readMem(0xd2da), 0xd3);
        // CB D3 02C9
        gbc.setState(0x21c8, 0x2a51, 0x63d0, 0xc623, 0x6613, 0x7d, 0x1, 0x0);
        gbc.writeMem(0x21c8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2a51);
        EXPECT(gbc.pc(), 0x21ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02CA
        gbc.setState(0xdaaf, 0x30e4, 0x4db0, 0x462d, 0x8e16, 0x3ef4, 0x1, 0x0);
        gbc.writeMem(0xdaaf, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x30e4);
        EXPECT(gbc.pc(), 0xdab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaaf), 0xcb);
        EXPECT(gbc.readMem(0xdab0), 0xd3);
        // CB D3 02CB
        gbc.setState(0x9140, 0x4dd5, 0x7970, 0x7151, 0xdc26, 0xcd91, 0x1, 0x0);
        gbc.writeMem(0x9140, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4dd5);
        EXPECT(gbc.pc(), 0x9142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9140), 0xcb);
        EXPECT(gbc.readMem(0x9141), 0xd3);
        // CB D3 02CC
        gbc.setState(0x6bd9, 0x8128, 0x8c60, 0x1977, 0xff9f, 0x627, 0x0, 0x0);
        gbc.writeMem(0x6bd9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8128);
        EXPECT(gbc.pc(), 0x6bdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02CD
        gbc.setState(0x1d20, 0x8572, 0x7c20, 0x7f6f, 0xdb2d, 0xeeb6, 0x0, 0x1);
        gbc.writeMem(0x1d20, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8572);
        EXPECT(gbc.pc(), 0x1d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02CE
        gbc.setState(0x7985, 0x9bb6, 0x8e00, 0x8f74, 0xf641, 0xadb3, 0x0, 0x0);
        gbc.writeMem(0x7985, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9bb6);
        EXPECT(gbc.pc(), 0x7987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02CF
        gbc.setState(0xbb00, 0x2713, 0x49d0, 0x882, 0x3a61, 0x1467, 0x1, 0x1);
        gbc.writeMem(0xbb00, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2713);
        EXPECT(gbc.pc(), 0xbb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb00), 0xcb);
        EXPECT(gbc.readMem(0xbb01), 0xd3);
        // CB D3 02D0
        gbc.setState(0x9aa0, 0x9166, 0xb0b0, 0xa5a, 0xc555, 0x9097, 0x0, 0x0);
        gbc.writeMem(0x9aa0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9166);
        EXPECT(gbc.pc(), 0x9aa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa0), 0xcb);
        EXPECT(gbc.readMem(0x9aa1), 0xd3);
        // CB D3 02D1
        gbc.setState(0xb5c0, 0x3202, 0x20a0, 0x70ba, 0xc55, 0xf6c8, 0x1, 0x1);
        gbc.writeMem(0xb5c0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3202);
        EXPECT(gbc.pc(), 0xb5c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c0), 0xcb);
        EXPECT(gbc.readMem(0xb5c1), 0xd3);
        // CB D3 02D2
        gbc.setState(0x6ffd, 0x4495, 0xf610, 0xea, 0xa9e3, 0x9467, 0x1, 0x1);
        gbc.writeMem(0x6ffd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4495);
        EXPECT(gbc.pc(), 0x6fff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02D3
        gbc.setState(0xd31e, 0x1a40, 0xfa10, 0x31eb, 0x407f, 0x4cf3, 0x0, 0x1);
        gbc.writeMem(0xd31e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1a40);
        EXPECT(gbc.pc(), 0xd320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd31e), 0xcb);
        EXPECT(gbc.readMem(0xd31f), 0xd3);
        // CB D3 02D4
        gbc.setState(0xb486, 0x232, 0xaef0, 0xabc1, 0x91c2, 0xe9cc, 0x1, 0x0);
        gbc.writeMem(0xb486, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x232);
        EXPECT(gbc.pc(), 0xb488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb486), 0xcb);
        EXPECT(gbc.readMem(0xb487), 0xd3);
        // CB D3 02D5
        gbc.setState(0x343c, 0x456d, 0xc050, 0x8689, 0x7795, 0xb308, 0x0, 0x1);
        gbc.writeMem(0x343c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x456d);
        EXPECT(gbc.pc(), 0x343e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02D6
        gbc.setState(0x79c8, 0x5b35, 0xf0c0, 0x9fa2, 0x7918, 0x3063, 0x1, 0x0);
        gbc.writeMem(0x79c8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5b35);
        EXPECT(gbc.pc(), 0x79ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02D7
        gbc.setState(0xd70d, 0x3035, 0xa3c0, 0xba48, 0x397c, 0x5f73, 0x1, 0x1);
        gbc.writeMem(0xd70d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3035);
        EXPECT(gbc.pc(), 0xd70f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd70d), 0xcb);
        EXPECT(gbc.readMem(0xd70e), 0xd3);
        // CB D3 02D8
        gbc.setState(0xce29, 0x31e5, 0x7150, 0x3b6c, 0x7e0a, 0x1670, 0x0, 0x0);
        gbc.writeMem(0xce29, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x31e5);
        EXPECT(gbc.pc(), 0xce2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce29), 0xcb);
        EXPECT(gbc.readMem(0xce2a), 0xd3);
        // CB D3 02D9
        gbc.setState(0x2d1b, 0xff1b, 0x2fd0, 0x97c3, 0xbf4d, 0x7685, 0x0, 0x0);
        gbc.writeMem(0x2d1b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xff1b);
        EXPECT(gbc.pc(), 0x2d1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02DA
        gbc.setState(0xe129, 0x34c5, 0x3440, 0x2db9, 0x8efe, 0xb600, 0x0, 0x0);
        gbc.writeMem(0xe129, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x34c5);
        EXPECT(gbc.pc(), 0xe12b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe129), 0xcb);
        EXPECT(gbc.readMem(0xe12a), 0xd3);
        // CB D3 02DB
        gbc.setState(0x7a4d, 0xa5a0, 0x55c0, 0x8579, 0x4dd2, 0xc203, 0x1, 0x1);
        gbc.writeMem(0x7a4d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa5a0);
        EXPECT(gbc.pc(), 0x7a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02DC
        gbc.setState(0x99b5, 0x989f, 0xc0e0, 0x486b, 0xb201, 0xf900, 0x0, 0x0);
        gbc.writeMem(0x99b5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x989f);
        EXPECT(gbc.pc(), 0x99b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b5), 0xcb);
        EXPECT(gbc.readMem(0x99b6), 0xd3);
        // CB D3 02DD
        gbc.setState(0xe0c1, 0x6f77, 0x7780, 0x79e0, 0x9fe, 0x571a, 0x1, 0x0);
        gbc.writeMem(0xe0c1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6f77);
        EXPECT(gbc.pc(), 0xe0c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c1), 0xcb);
        EXPECT(gbc.readMem(0xe0c2), 0xd3);
        // CB D3 02DE
        gbc.setState(0xacc8, 0x1591, 0xff00, 0x134b, 0xc605, 0x3440, 0x1, 0x0);
        gbc.writeMem(0xacc8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1591);
        EXPECT(gbc.pc(), 0xacca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc8), 0xcb);
        EXPECT(gbc.readMem(0xacc9), 0xd3);
        // CB D3 02DF
        gbc.setState(0x8215, 0x6bfa, 0x9400, 0xa077, 0x996b, 0x9234, 0x1, 0x0);
        gbc.writeMem(0x8215, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6bfa);
        EXPECT(gbc.pc(), 0x8217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8215), 0xcb);
        EXPECT(gbc.readMem(0x8216), 0xd3);
        // CB D3 02E0
        gbc.setState(0x240a, 0x5749, 0xba40, 0x74ee, 0xa5fe, 0xf892, 0x1, 0x1);
        gbc.writeMem(0x240a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5749);
        EXPECT(gbc.pc(), 0x240c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02E1
        gbc.setState(0x7bd5, 0xb676, 0x9ad0, 0xf815, 0x1f56, 0x7005, 0x1, 0x1);
        gbc.writeMem(0x7bd5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb676);
        EXPECT(gbc.pc(), 0x7bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02E2
        gbc.setState(0x6e5d, 0xdf00, 0x6790, 0xcedd, 0x8532, 0x4413, 0x1, 0x1);
        gbc.writeMem(0x6e5d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdf00);
        EXPECT(gbc.pc(), 0x6e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02E3
        gbc.setState(0x8dff, 0x6e97, 0xc590, 0x308f, 0xc6a8, 0x9774, 0x1, 0x1);
        gbc.writeMem(0x8dff, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6e97);
        EXPECT(gbc.pc(), 0x8e01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dff), 0xcb);
        EXPECT(gbc.readMem(0x8e00), 0xd3);
        // CB D3 02E4
        gbc.setState(0xe275, 0xec0f, 0xa680, 0xe1, 0xc26c, 0xc91f, 0x0, 0x0);
        gbc.writeMem(0xe275, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xec0f);
        EXPECT(gbc.pc(), 0xe277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe275), 0xcb);
        EXPECT(gbc.readMem(0xe276), 0xd3);
        // CB D3 02E5
        gbc.setState(0xb5f8, 0x4cb2, 0xf770, 0xc041, 0xed6e, 0xfcd0, 0x1, 0x1);
        gbc.writeMem(0xb5f8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4cb2);
        EXPECT(gbc.pc(), 0xb5fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f8), 0xcb);
        EXPECT(gbc.readMem(0xb5f9), 0xd3);
        // CB D3 02E7
        gbc.setState(0xdeee, 0x1569, 0x8090, 0x6fe7, 0x24c0, 0x5542, 0x1, 0x1);
        gbc.writeMem(0xdeee, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1569);
        EXPECT(gbc.pc(), 0xdef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeee), 0xcb);
        EXPECT(gbc.readMem(0xdeef), 0xd3);
        // CB D3 02E8
        gbc.setState(0x44ec, 0xfb54, 0xfb0, 0x6c00, 0xd36a, 0x738b, 0x1, 0x0);
        gbc.writeMem(0x44ec, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfb54);
        EXPECT(gbc.pc(), 0x44ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02E9
        gbc.setState(0x7db, 0xb372, 0xed90, 0xe50e, 0x5874, 0xb3e3, 0x1, 0x1);
        gbc.writeMem(0x7db, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb372);
        EXPECT(gbc.pc(), 0x7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02EA
        gbc.setState(0xe888, 0x6ac3, 0x5e10, 0xca8b, 0xde16, 0x84d7, 0x1, 0x1);
        gbc.writeMem(0xe888, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6ac3);
        EXPECT(gbc.pc(), 0xe88a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe888), 0xcb);
        EXPECT(gbc.readMem(0xe889), 0xd3);
        // CB D3 02EB
        gbc.setState(0x2dd, 0x730a, 0xdc50, 0xd3bb, 0x63c9, 0xdd02, 0x0, 0x0);
        gbc.writeMem(0x2dd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x730a);
        EXPECT(gbc.pc(), 0x2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02EC
        gbc.setState(0x525e, 0x44c1, 0x9e50, 0x5cb, 0x72e6, 0x72e8, 0x1, 0x1);
        gbc.writeMem(0x525e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x44c1);
        EXPECT(gbc.pc(), 0x5260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02ED
        gbc.setState(0x2f88, 0x7052, 0x5f20, 0x5f86, 0xe7a, 0xabfc, 0x1, 0x0);
        gbc.writeMem(0x2f88, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7052);
        EXPECT(gbc.pc(), 0x2f8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02EE
        gbc.setState(0xf19, 0x375a, 0x3ed0, 0x51ee, 0x5eb, 0xcc0, 0x0, 0x0);
        gbc.writeMem(0xf19, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x375a);
        EXPECT(gbc.pc(), 0xf1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02EF
        gbc.setState(0xe037, 0x7d0b, 0x9e0, 0x4306, 0x2037, 0x203a, 0x0, 0x1);
        gbc.writeMem(0xe037, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7d0b);
        EXPECT(gbc.pc(), 0xe039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe037), 0xcb);
        EXPECT(gbc.readMem(0xe038), 0xd3);
        // CB D3 02F0
        gbc.setState(0x924, 0xdcd1, 0xb00, 0x53e7, 0xf811, 0x90b7, 0x0, 0x0);
        gbc.writeMem(0x924, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdcd1);
        EXPECT(gbc.pc(), 0x926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02F1
        gbc.setState(0x5506, 0x638d, 0x8810, 0xa0d0, 0x7bdb, 0x8717, 0x0, 0x1);
        gbc.writeMem(0x5506, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x638d);
        EXPECT(gbc.pc(), 0x5508);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02F2
        gbc.setState(0x68aa, 0x2d72, 0x8580, 0xbf09, 0x5f25, 0x53a5, 0x0, 0x0);
        gbc.writeMem(0x68aa, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2d72);
        EXPECT(gbc.pc(), 0x68ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02F3
        gbc.setState(0x9a0f, 0xe78c, 0x50e0, 0x8fd5, 0xc906, 0xbe2a, 0x1, 0x1);
        gbc.writeMem(0x9a0f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe78c);
        EXPECT(gbc.pc(), 0x9a11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a0f), 0xcb);
        EXPECT(gbc.readMem(0x9a10), 0xd3);
        // CB D3 02F4
        gbc.setState(0xa91d, 0xb9dd, 0xfb90, 0xa295, 0x16b5, 0x7230, 0x1, 0x1);
        gbc.writeMem(0xa91d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb9dd);
        EXPECT(gbc.pc(), 0xa91f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa91d), 0xcb);
        EXPECT(gbc.readMem(0xa91e), 0xd3);
        // CB D3 02F5
        gbc.setState(0x493e, 0x6f6c, 0x11e0, 0x3b9d, 0x9d16, 0x96c1, 0x1, 0x1);
        gbc.writeMem(0x493e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6f6c);
        EXPECT(gbc.pc(), 0x4940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02F6
        gbc.setState(0x1e8e, 0x8a69, 0xd90, 0x30e, 0xd304, 0x7a2e, 0x1, 0x0);
        gbc.writeMem(0x1e8e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8a69);
        EXPECT(gbc.pc(), 0x1e90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02F8
        gbc.setState(0xd3a6, 0xdc10, 0xbd90, 0x7932, 0x7645, 0x5e59, 0x0, 0x0);
        gbc.writeMem(0xd3a6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdc10);
        EXPECT(gbc.pc(), 0xd3a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3a6), 0xcb);
        EXPECT(gbc.readMem(0xd3a7), 0xd3);
        // CB D3 02F9
        gbc.setState(0x97e4, 0x6a21, 0x3a60, 0xc4bd, 0x637e, 0x4519, 0x1, 0x0);
        gbc.writeMem(0x97e4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6a21);
        EXPECT(gbc.pc(), 0x97e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e4), 0xcb);
        EXPECT(gbc.readMem(0x97e5), 0xd3);
        // CB D3 02FA
        gbc.setState(0xad0, 0x9c30, 0x8990, 0x50f0, 0x4752, 0x6f36, 0x1, 0x0);
        gbc.writeMem(0xad0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9c30);
        EXPECT(gbc.pc(), 0xad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 02FB
        gbc.setState(0x9c1e, 0x57b5, 0x8da0, 0xd07a, 0x1433, 0x90d5, 0x1, 0x1);
        gbc.writeMem(0x9c1e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x57b5);
        EXPECT(gbc.pc(), 0x9c20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1e), 0xcb);
        EXPECT(gbc.readMem(0x9c1f), 0xd3);
        // CB D3 02FC
        gbc.setState(0x936, 0xd7e5, 0x1ba0, 0x8408, 0xc369, 0xb444, 0x1, 0x1);
        gbc.writeMem(0x936, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd7e5);
        EXPECT(gbc.pc(), 0x938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 02FD
        gbc.setState(0xa2ba, 0xee3b, 0xb130, 0x2c53, 0xff4a, 0xf257, 0x1, 0x1);
        gbc.writeMem(0xa2ba, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xee3b);
        EXPECT(gbc.pc(), 0xa2bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ba), 0xcb);
        EXPECT(gbc.readMem(0xa2bb), 0xd3);
        // CB D3 02FF
        gbc.setState(0xb368, 0x5245, 0x640, 0x80ab, 0x4240, 0xb65e, 0x1, 0x1);
        gbc.writeMem(0xb368, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5245);
        EXPECT(gbc.pc(), 0xb36a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb368), 0xcb);
        EXPECT(gbc.readMem(0xb369), 0xd3);
        // CB D3 0300
        gbc.setState(0x2f6b, 0x9bb3, 0x6600, 0x7d3, 0xe3b8, 0xdb1e, 0x0, 0x0);
        gbc.writeMem(0x2f6b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9bb3);
        EXPECT(gbc.pc(), 0x2f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0301
        gbc.setState(0xe326, 0x90eb, 0xff0, 0x8554, 0xef3a, 0x747f, 0x0, 0x1);
        gbc.writeMem(0xe326, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x90eb);
        EXPECT(gbc.pc(), 0xe328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe326), 0xcb);
        EXPECT(gbc.readMem(0xe327), 0xd3);
        // CB D3 0302
        gbc.setState(0xcafe, 0xf841, 0x38e0, 0xe560, 0x9b2c, 0xfca0, 0x0, 0x1);
        gbc.writeMem(0xcafe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf841);
        EXPECT(gbc.pc(), 0xcb00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafe), 0xcb);
        EXPECT(gbc.readMem(0xcaff), 0xd3);
        // CB D3 0303
        gbc.setState(0x22d2, 0x569e, 0x1c10, 0xf8f4, 0xb959, 0xc260, 0x0, 0x1);
        gbc.writeMem(0x22d2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x569e);
        EXPECT(gbc.pc(), 0x22d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0304
        gbc.setState(0x4d6b, 0x7c5b, 0x1400, 0x1464, 0xda3a, 0xd611, 0x0, 0x1);
        gbc.writeMem(0x4d6b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7c5b);
        EXPECT(gbc.pc(), 0x4d6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0306
        gbc.setState(0x7a34, 0xb032, 0x60e0, 0x6321, 0xb824, 0x3e87, 0x0, 0x1);
        gbc.writeMem(0x7a34, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb032);
        EXPECT(gbc.pc(), 0x7a36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0307
        gbc.setState(0x4733, 0x6242, 0xf320, 0xdc7, 0x7bd8, 0x9fe9, 0x1, 0x0);
        gbc.writeMem(0x4733, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6242);
        EXPECT(gbc.pc(), 0x4735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0308
        gbc.setState(0x7a9f, 0x97a0, 0xf190, 0x7e46, 0x7493, 0xd7a2, 0x0, 0x0);
        gbc.writeMem(0x7a9f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x97a0);
        EXPECT(gbc.pc(), 0x7aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0309
        gbc.setState(0x83ac, 0x3767, 0x5d00, 0x6aa0, 0xab96, 0xc720, 0x1, 0x0);
        gbc.writeMem(0x83ac, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3767);
        EXPECT(gbc.pc(), 0x83ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ac), 0xcb);
        EXPECT(gbc.readMem(0x83ad), 0xd3);
        // CB D3 030A
        gbc.setState(0xb547, 0x285b, 0xd9d0, 0x7f44, 0x6460, 0x2b9, 0x1, 0x1);
        gbc.writeMem(0xb547, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x285b);
        EXPECT(gbc.pc(), 0xb549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb547), 0xcb);
        EXPECT(gbc.readMem(0xb548), 0xd3);
        // CB D3 030C
        gbc.setState(0x4ee0, 0x4ea2, 0x1290, 0x5523, 0x7f52, 0x8b39, 0x1, 0x0);
        gbc.writeMem(0x4ee0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4ea2);
        EXPECT(gbc.pc(), 0x4ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 030E
        gbc.setState(0x6be6, 0x2486, 0x49f0, 0xb4a0, 0xa76e, 0x9cc1, 0x0, 0x0);
        gbc.writeMem(0x6be6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2486);
        EXPECT(gbc.pc(), 0x6be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 030F
        gbc.setState(0xd5fa, 0xc052, 0x6190, 0xe337, 0xdb8b, 0xcf68, 0x0, 0x0);
        gbc.writeMem(0xd5fa, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc052);
        EXPECT(gbc.pc(), 0xd5fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5fa), 0xcb);
        EXPECT(gbc.readMem(0xd5fb), 0xd3);
        // CB D3 0310
        gbc.setState(0x2329, 0xc615, 0x92a0, 0x67b, 0x1f28, 0x991, 0x0, 0x1);
        gbc.writeMem(0x2329, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc615);
        EXPECT(gbc.pc(), 0x232b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0311
        gbc.setState(0x4cb8, 0xfd23, 0xb440, 0x4343, 0x2f28, 0x5170, 0x1, 0x1);
        gbc.writeMem(0x4cb8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfd23);
        EXPECT(gbc.pc(), 0x4cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0312
        gbc.setState(0x206f, 0x5fbb, 0xb9b0, 0xc78b, 0x8c2c, 0xac62, 0x0, 0x0);
        gbc.writeMem(0x206f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5fbb);
        EXPECT(gbc.pc(), 0x2071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0313
        gbc.setState(0xb0d5, 0xe8a2, 0x90d0, 0x66b9, 0x17a1, 0x853a, 0x1, 0x0);
        gbc.writeMem(0xb0d5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe8a2);
        EXPECT(gbc.pc(), 0xb0d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d5), 0xcb);
        EXPECT(gbc.readMem(0xb0d6), 0xd3);
        // CB D3 0314
        gbc.setState(0x4da5, 0xc426, 0x210, 0x9033, 0x797d, 0xa1d5, 0x1, 0x0);
        gbc.writeMem(0x4da5, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc426);
        EXPECT(gbc.pc(), 0x4da7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0315
        gbc.setState(0x1693, 0xaac8, 0xea90, 0xbf61, 0x6719, 0xc5b9, 0x1, 0x1);
        gbc.writeMem(0x1693, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xaac8);
        EXPECT(gbc.pc(), 0x1695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0316
        gbc.setState(0xb4ce, 0xc554, 0x1950, 0x1215, 0x2f02, 0x35a6, 0x0, 0x0);
        gbc.writeMem(0xb4ce, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc554);
        EXPECT(gbc.pc(), 0xb4d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ce), 0xcb);
        EXPECT(gbc.readMem(0xb4cf), 0xd3);
        // CB D3 0317
        gbc.setState(0x3977, 0x9e90, 0xdf80, 0x5058, 0xc49a, 0xe874, 0x1, 0x0);
        gbc.writeMem(0x3977, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9e90);
        EXPECT(gbc.pc(), 0x3979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0318
        gbc.setState(0x23b9, 0x9930, 0x4a70, 0xa415, 0xce4, 0xe4c1, 0x0, 0x0);
        gbc.writeMem(0x23b9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9930);
        EXPECT(gbc.pc(), 0x23bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0319
        gbc.setState(0x8178, 0x5046, 0x87e0, 0xbde1, 0x76ec, 0x94c8, 0x0, 0x0);
        gbc.writeMem(0x8178, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5046);
        EXPECT(gbc.pc(), 0x817a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8178), 0xcb);
        EXPECT(gbc.readMem(0x8179), 0xd3);
        // CB D3 031B
        gbc.setState(0xc860, 0x4703, 0x1a10, 0xeb84, 0xb225, 0xae4b, 0x1, 0x1);
        gbc.writeMem(0xc860, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4703);
        EXPECT(gbc.pc(), 0xc862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc860), 0xcb);
        EXPECT(gbc.readMem(0xc861), 0xd3);
        // CB D3 031C
        gbc.setState(0x9370, 0x4f5e, 0x2f50, 0xbe59, 0xa892, 0x7a1, 0x0, 0x1);
        gbc.writeMem(0x9370, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4f5e);
        EXPECT(gbc.pc(), 0x9372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9370), 0xcb);
        EXPECT(gbc.readMem(0x9371), 0xd3);
        // CB D3 031D
        gbc.setState(0xe5e, 0xadbe, 0xf900, 0xe0f5, 0x2dce, 0xe0ba, 0x1, 0x0);
        gbc.writeMem(0xe5e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xadbe);
        EXPECT(gbc.pc(), 0xe60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 031E
        gbc.setState(0xc49f, 0x7756, 0x3790, 0x4802, 0x6f54, 0x2e7f, 0x0, 0x1);
        gbc.writeMem(0xc49f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7756);
        EXPECT(gbc.pc(), 0xc4a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc49f), 0xcb);
        EXPECT(gbc.readMem(0xc4a0), 0xd3);
        // CB D3 031F
        gbc.setState(0x7cb8, 0x31e7, 0xe390, 0x30a1, 0x709d, 0xd7da, 0x1, 0x0);
        gbc.writeMem(0x7cb8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x31e7);
        EXPECT(gbc.pc(), 0x7cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0320
        gbc.setState(0x4f2d, 0xc772, 0x4d90, 0xf47, 0x4401, 0x414d, 0x0, 0x1);
        gbc.writeMem(0x4f2d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc772);
        EXPECT(gbc.pc(), 0x4f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0321
        gbc.setState(0xb45b, 0xa5b2, 0x8690, 0x3f0d, 0xc950, 0x66b2, 0x1, 0x0);
        gbc.writeMem(0xb45b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa5b2);
        EXPECT(gbc.pc(), 0xb45d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45b), 0xcb);
        EXPECT(gbc.readMem(0xb45c), 0xd3);
        // CB D3 0322
        gbc.setState(0x78e3, 0xa304, 0x5c40, 0x4ae1, 0x3812, 0xdd5a, 0x0, 0x0);
        gbc.writeMem(0x78e3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa304);
        EXPECT(gbc.pc(), 0x78e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0323
        gbc.setState(0xa719, 0xc098, 0xb180, 0x6758, 0xf6f, 0x1060, 0x1, 0x0);
        gbc.writeMem(0xa719, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc098);
        EXPECT(gbc.pc(), 0xa71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa719), 0xcb);
        EXPECT(gbc.readMem(0xa71a), 0xd3);
        // CB D3 0324
        gbc.setState(0xd588, 0x84b4, 0x5260, 0x982f, 0xc468, 0xcac0, 0x0, 0x1);
        gbc.writeMem(0xd588, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x84b4);
        EXPECT(gbc.pc(), 0xd58a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd588), 0xcb);
        EXPECT(gbc.readMem(0xd589), 0xd3);
        // CB D3 0326
        gbc.setState(0xbffd, 0x5218, 0xef90, 0x5642, 0xb51d, 0xec7d, 0x0, 0x0);
        gbc.writeMem(0xbffd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5218);
        EXPECT(gbc.pc(), 0xbfff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbffd), 0xcb);
        EXPECT(gbc.readMem(0xbffe), 0xd3);
        // CB D3 0327
        gbc.setState(0xc547, 0x341a, 0xd670, 0x65d7, 0x2d88, 0xcd33, 0x0, 0x1);
        gbc.writeMem(0xc547, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x341a);
        EXPECT(gbc.pc(), 0xc549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc547), 0xcb);
        EXPECT(gbc.readMem(0xc548), 0xd3);
        // CB D3 0328
        gbc.setState(0xb20b, 0xeb60, 0xd5e0, 0x40de, 0x4d91, 0xc02d, 0x0, 0x0);
        gbc.writeMem(0xb20b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xeb60);
        EXPECT(gbc.pc(), 0xb20d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20b), 0xcb);
        EXPECT(gbc.readMem(0xb20c), 0xd3);
        // CB D3 0329
        gbc.setState(0x4d25, 0xe6d, 0xbc40, 0xef77, 0xf158, 0xb2fc, 0x1, 0x1);
        gbc.writeMem(0x4d25, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe6d);
        EXPECT(gbc.pc(), 0x4d27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 032A
        gbc.setState(0xa951, 0xb14f, 0x1270, 0xb14f, 0x9e32, 0x2cb7, 0x0, 0x1);
        gbc.writeMem(0xa951, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb14f);
        EXPECT(gbc.pc(), 0xa953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa951), 0xcb);
        EXPECT(gbc.readMem(0xa952), 0xd3);
        // CB D3 032B
        gbc.setState(0x1fce, 0xebf1, 0xac80, 0xcb5f, 0xe62b, 0x491f, 0x1, 0x1);
        gbc.writeMem(0x1fce, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xebf1);
        EXPECT(gbc.pc(), 0x1fd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 032C
        gbc.setState(0x6bf, 0xddc2, 0xe6a0, 0x19f, 0x32d3, 0x7655, 0x1, 0x1);
        gbc.writeMem(0x6bf, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xddc2);
        EXPECT(gbc.pc(), 0x6c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 032D
        gbc.setState(0x1ddb, 0x12e3, 0x4a50, 0xb1d2, 0x1ad3, 0xc8d6, 0x1, 0x0);
        gbc.writeMem(0x1ddb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x12e3);
        EXPECT(gbc.pc(), 0x1ddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 032E
        gbc.setState(0xce73, 0xb019, 0xe540, 0x231f, 0xe5f2, 0xbd63, 0x0, 0x0);
        gbc.writeMem(0xce73, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb019);
        EXPECT(gbc.pc(), 0xce75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce73), 0xcb);
        EXPECT(gbc.readMem(0xce74), 0xd3);
        // CB D3 032F
        gbc.setState(0xa41b, 0x7a8c, 0xf380, 0xad7c, 0x69ee, 0xf33a, 0x1, 0x1);
        gbc.writeMem(0xa41b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7a8c);
        EXPECT(gbc.pc(), 0xa41d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa41b), 0xcb);
        EXPECT(gbc.readMem(0xa41c), 0xd3);
        // CB D3 0330
        gbc.setState(0xa837, 0xec38, 0xd740, 0x7ffd, 0x5d2f, 0x3db3, 0x1, 0x0);
        gbc.writeMem(0xa837, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xec38);
        EXPECT(gbc.pc(), 0xa839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa837), 0xcb);
        EXPECT(gbc.readMem(0xa838), 0xd3);
        // CB D3 0331
        gbc.setState(0x344f, 0xc436, 0xe3a0, 0x1fbe, 0x6382, 0x74ec, 0x1, 0x1);
        gbc.writeMem(0x344f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc436);
        EXPECT(gbc.pc(), 0x3451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0332
        gbc.setState(0x427a, 0xf7aa, 0x82b0, 0x67c8, 0x7df5, 0xb429, 0x0, 0x0);
        gbc.writeMem(0x427a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf7aa);
        EXPECT(gbc.pc(), 0x427c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0333
        gbc.setState(0x63ac, 0x28ba, 0xe570, 0x1c17, 0x3128, 0xc609, 0x1, 0x0);
        gbc.writeMem(0x63ac, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x28ba);
        EXPECT(gbc.pc(), 0x63ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0334
        gbc.setState(0x3919, 0x57b1, 0x95b0, 0x55ab, 0x53dd, 0x5f20, 0x0, 0x1);
        gbc.writeMem(0x3919, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x57b1);
        EXPECT(gbc.pc(), 0x391b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0335
        gbc.setState(0x751a, 0x4976, 0xb590, 0x2074, 0xebf5, 0xb881, 0x1, 0x1);
        gbc.writeMem(0x751a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4976);
        EXPECT(gbc.pc(), 0x751c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0336
        gbc.setState(0x40ac, 0x2d94, 0x61e0, 0xd085, 0x2f6f, 0x4d5e, 0x1, 0x0);
        gbc.writeMem(0x40ac, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2d94);
        EXPECT(gbc.pc(), 0x40ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0337
        gbc.setState(0x99dd, 0xbb06, 0x99f0, 0x3866, 0x8181, 0xc127, 0x0, 0x0);
        gbc.writeMem(0x99dd, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbb06);
        EXPECT(gbc.pc(), 0x99df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99dd), 0xcb);
        EXPECT(gbc.readMem(0x99de), 0xd3);
        // CB D3 0338
        gbc.setState(0xcc71, 0x6060, 0x4f0, 0x932e, 0x4b6d, 0xf1f5, 0x1, 0x0);
        gbc.writeMem(0xcc71, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6060);
        EXPECT(gbc.pc(), 0xcc73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc71), 0xcb);
        EXPECT(gbc.readMem(0xcc72), 0xd3);
        // CB D3 0339
        gbc.setState(0x42b0, 0x71f7, 0x81f0, 0x1774, 0xd8e7, 0xce78, 0x0, 0x1);
        gbc.writeMem(0x42b0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x71f7);
        EXPECT(gbc.pc(), 0x42b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 033A
        gbc.setState(0x657c, 0x1869, 0x5e40, 0xd5a7, 0x4e4, 0x1ad1, 0x0, 0x0);
        gbc.writeMem(0x657c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1869);
        EXPECT(gbc.pc(), 0x657e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 033B
        gbc.setState(0x4aac, 0x2f44, 0x1f70, 0xa1ba, 0x51c5, 0x892a, 0x1, 0x1);
        gbc.writeMem(0x4aac, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2f44);
        EXPECT(gbc.pc(), 0x4aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 033C
        gbc.setState(0x97c2, 0xe90b, 0xee50, 0xcca1, 0x287a, 0x50c1, 0x0, 0x1);
        gbc.writeMem(0x97c2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe90b);
        EXPECT(gbc.pc(), 0x97c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c2), 0xcb);
        EXPECT(gbc.readMem(0x97c3), 0xd3);
        // CB D3 033D
        gbc.setState(0x7ede, 0x2e96, 0x6490, 0xe6a3, 0xec2c, 0x963, 0x1, 0x1);
        gbc.writeMem(0x7ede, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2e96);
        EXPECT(gbc.pc(), 0x7ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 033E
        gbc.setState(0x50ef, 0xaf49, 0xed30, 0x6e3e, 0xb2a1, 0xfdf8, 0x0, 0x1);
        gbc.writeMem(0x50ef, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xaf49);
        EXPECT(gbc.pc(), 0x50f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 033F
        gbc.setState(0x1b47, 0x8759, 0x5100, 0x3be5, 0xec1d, 0xdc4d, 0x0, 0x1);
        gbc.writeMem(0x1b47, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8759);
        EXPECT(gbc.pc(), 0x1b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0340
        gbc.setState(0x8c62, 0xa0dc, 0xbf00, 0xfe6f, 0x54eb, 0xd193, 0x1, 0x0);
        gbc.writeMem(0x8c62, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa0dc);
        EXPECT(gbc.pc(), 0x8c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c62), 0xcb);
        EXPECT(gbc.readMem(0x8c63), 0xd3);
        // CB D3 0341
        gbc.setState(0x2d58, 0xb771, 0x47f0, 0x63b7, 0x17b9, 0xd809, 0x0, 0x1);
        gbc.writeMem(0x2d58, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb771);
        EXPECT(gbc.pc(), 0x2d5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0342
        gbc.setState(0x1b34, 0xb436, 0x6a70, 0x2b7a, 0x5d6e, 0xcf89, 0x0, 0x1);
        gbc.writeMem(0x1b34, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb436);
        EXPECT(gbc.pc(), 0x1b36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0343
        gbc.setState(0xded9, 0x978e, 0xb220, 0x52e, 0x1f39, 0xda4e, 0x1, 0x0);
        gbc.writeMem(0xded9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x978e);
        EXPECT(gbc.pc(), 0xdedb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xded9), 0xcb);
        EXPECT(gbc.readMem(0xdeda), 0xd3);
        // CB D3 0344
        gbc.setState(0x8353, 0x47ef, 0xc860, 0x4943, 0x406d, 0x93b2, 0x0, 0x1);
        gbc.writeMem(0x8353, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x47ef);
        EXPECT(gbc.pc(), 0x8355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8353), 0xcb);
        EXPECT(gbc.readMem(0x8354), 0xd3);
        // CB D3 0346
        gbc.setState(0xde4e, 0x6c0a, 0xeb60, 0x626, 0x412, 0xfb74, 0x1, 0x1);
        gbc.writeMem(0xde4e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6c0a);
        EXPECT(gbc.pc(), 0xde50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4e), 0xcb);
        EXPECT(gbc.readMem(0xde4f), 0xd3);
        // CB D3 0347
        gbc.setState(0x7c7a, 0x13ec, 0x8540, 0xdf99, 0xb38f, 0x2789, 0x0, 0x1);
        gbc.writeMem(0x7c7a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x13ec);
        EXPECT(gbc.pc(), 0x7c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0348
        gbc.setState(0x4b65, 0x6136, 0xf2a0, 0xa6da, 0x6a38, 0x89bd, 0x1, 0x1);
        gbc.writeMem(0x4b65, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6136);
        EXPECT(gbc.pc(), 0x4b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0349
        gbc.setState(0x541d, 0xb923, 0x4f10, 0x4b5e, 0xb11, 0xd677, 0x1, 0x0);
        gbc.writeMem(0x541d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb923);
        EXPECT(gbc.pc(), 0x541f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 034A
        gbc.setState(0x6fa8, 0xaf00, 0x8040, 0x2299, 0xc9d8, 0xb5c2, 0x1, 0x0);
        gbc.writeMem(0x6fa8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xaf00);
        EXPECT(gbc.pc(), 0x6faa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 034B
        gbc.setState(0x9827, 0x4281, 0xe8b0, 0xbc0b, 0x5cab, 0x7957, 0x1, 0x1);
        gbc.writeMem(0x9827, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4281);
        EXPECT(gbc.pc(), 0x9829);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9827), 0xcb);
        EXPECT(gbc.readMem(0x9828), 0xd3);
        // CB D3 034C
        gbc.setState(0xd581, 0x1014, 0x6fa0, 0xe09c, 0xac97, 0x8b3b, 0x0, 0x1);
        gbc.writeMem(0xd581, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1014);
        EXPECT(gbc.pc(), 0xd583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd581), 0xcb);
        EXPECT(gbc.readMem(0xd582), 0xd3);
        // CB D3 034D
        gbc.setState(0x145a, 0x97df, 0xe140, 0xa68, 0x483f, 0xe885, 0x1, 0x1);
        gbc.writeMem(0x145a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x97df);
        EXPECT(gbc.pc(), 0x145c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 034E
        gbc.setState(0xe965, 0x628e, 0xd390, 0x9f21, 0x73b9, 0x20b1, 0x0, 0x1);
        gbc.writeMem(0xe965, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x628e);
        EXPECT(gbc.pc(), 0xe967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe965), 0xcb);
        EXPECT(gbc.readMem(0xe966), 0xd3);
        // CB D3 034F
        gbc.setState(0x9ce, 0x4ef4, 0x8f0, 0xacc, 0xf172, 0x1360, 0x0, 0x0);
        gbc.writeMem(0x9ce, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4ef4);
        EXPECT(gbc.pc(), 0x9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0350
        gbc.setState(0x8278, 0xfb48, 0x11e0, 0xf3c9, 0xfb4d, 0x8487, 0x1, 0x1);
        gbc.writeMem(0x8278, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfb48);
        EXPECT(gbc.pc(), 0x827a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8278), 0xcb);
        EXPECT(gbc.readMem(0x8279), 0xd3);
        // CB D3 0351
        gbc.setState(0x139e, 0x169a, 0xe650, 0xf7cc, 0x3ae6, 0x3ff0, 0x0, 0x1);
        gbc.writeMem(0x139e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x169a);
        EXPECT(gbc.pc(), 0x13a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0352
        gbc.setState(0x47ea, 0x869d, 0xa190, 0xc2ad, 0x27fd, 0x9208, 0x1, 0x0);
        gbc.writeMem(0x47ea, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x869d);
        EXPECT(gbc.pc(), 0x47ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0353
        gbc.setState(0xd0ba, 0x343b, 0xf6d0, 0x85d3, 0xb99c, 0x5f4b, 0x0, 0x0);
        gbc.writeMem(0xd0ba, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x343b);
        EXPECT(gbc.pc(), 0xd0bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ba), 0xcb);
        EXPECT(gbc.readMem(0xd0bb), 0xd3);
        // CB D3 0354
        gbc.setState(0xbac3, 0x2d0a, 0xb600, 0xda3e, 0x97df, 0x1b5, 0x0, 0x0);
        gbc.writeMem(0xbac3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2d0a);
        EXPECT(gbc.pc(), 0xbac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac3), 0xcb);
        EXPECT(gbc.readMem(0xbac4), 0xd3);
        // CB D3 0355
        gbc.setState(0x9697, 0x1ecd, 0x5e50, 0x14d1, 0x88fd, 0x590f, 0x1, 0x0);
        gbc.writeMem(0x9697, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1ecd);
        EXPECT(gbc.pc(), 0x9699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9697), 0xcb);
        EXPECT(gbc.readMem(0x9698), 0xd3);
        // CB D3 0356
        gbc.setState(0x623a, 0x32a7, 0x6480, 0xf3c3, 0xfbe3, 0xefab, 0x1, 0x0);
        gbc.writeMem(0x623a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x32a7);
        EXPECT(gbc.pc(), 0x623c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0357
        gbc.setState(0xcf45, 0x80ae, 0x3450, 0x91e8, 0xf570, 0x5055, 0x0, 0x0);
        gbc.writeMem(0xcf45, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x80ae);
        EXPECT(gbc.pc(), 0xcf47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf45), 0xcb);
        EXPECT(gbc.readMem(0xcf46), 0xd3);
        // CB D3 0358
        gbc.setState(0x782a, 0x18ce, 0x6890, 0x80bc, 0x2b68, 0x6bca, 0x1, 0x1);
        gbc.writeMem(0x782a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x18ce);
        EXPECT(gbc.pc(), 0x782c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0359
        gbc.setState(0x881d, 0xf32e, 0x8160, 0x3497, 0x9f75, 0x520, 0x1, 0x0);
        gbc.writeMem(0x881d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf32e);
        EXPECT(gbc.pc(), 0x881f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881d), 0xcb);
        EXPECT(gbc.readMem(0x881e), 0xd3);
        // CB D3 035A
        gbc.setState(0x5036, 0xd1ba, 0x3f10, 0xe6f2, 0xfe09, 0x41e8, 0x0, 0x1);
        gbc.writeMem(0x5036, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd1ba);
        EXPECT(gbc.pc(), 0x5038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 035B
        gbc.setState(0xb6c7, 0x47dc, 0xa5d0, 0xe7bd, 0x9690, 0xe288, 0x1, 0x0);
        gbc.writeMem(0xb6c7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x47dc);
        EXPECT(gbc.pc(), 0xb6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6c7), 0xcb);
        EXPECT(gbc.readMem(0xb6c8), 0xd3);
        // CB D3 035C
        gbc.setState(0xc79e, 0x94fa, 0xb060, 0x73f1, 0x749c, 0x601c, 0x1, 0x0);
        gbc.writeMem(0xc79e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x94fa);
        EXPECT(gbc.pc(), 0xc7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc79e), 0xcb);
        EXPECT(gbc.readMem(0xc79f), 0xd3);
        // CB D3 035E
        gbc.setState(0xb04e, 0x34d1, 0xd2d0, 0x252f, 0x988, 0xdd7a, 0x1, 0x1);
        gbc.writeMem(0xb04e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x34d1);
        EXPECT(gbc.pc(), 0xb050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb04e), 0xcb);
        EXPECT(gbc.readMem(0xb04f), 0xd3);
        // CB D3 035F
        gbc.setState(0x2ff3, 0x7391, 0x760, 0x3b13, 0xf8a2, 0x4767, 0x0, 0x0);
        gbc.writeMem(0x2ff3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7391);
        EXPECT(gbc.pc(), 0x2ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0360
        gbc.setState(0x71df, 0x64d5, 0xfa30, 0xb028, 0x6d05, 0x3fc7, 0x1, 0x0);
        gbc.writeMem(0x71df, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x64d5);
        EXPECT(gbc.pc(), 0x71e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0361
        gbc.setState(0xde57, 0x7a19, 0xc6d0, 0xd19, 0x1df0, 0xb7ca, 0x0, 0x1);
        gbc.writeMem(0xde57, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7a19);
        EXPECT(gbc.pc(), 0xde59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde57), 0xcb);
        EXPECT(gbc.readMem(0xde58), 0xd3);
        // CB D3 0362
        gbc.setState(0xb370, 0x85e6, 0x1da0, 0xa51b, 0x7aa7, 0xdbf5, 0x1, 0x1);
        gbc.writeMem(0xb370, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x85e6);
        EXPECT(gbc.pc(), 0xb372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb370), 0xcb);
        EXPECT(gbc.readMem(0xb371), 0xd3);
        // CB D3 0363
        gbc.setState(0x12d, 0x9e7c, 0x4440, 0x41bb, 0xae00, 0x4134, 0x0, 0x0);
        gbc.writeMem(0x12d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9e7c);
        EXPECT(gbc.pc(), 0x12f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0364
        gbc.setState(0xcf94, 0x7939, 0x6520, 0xa702, 0xe5e5, 0xff0d, 0x1, 0x1);
        gbc.writeMem(0xcf94, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7939);
        EXPECT(gbc.pc(), 0xcf96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf94), 0xcb);
        EXPECT(gbc.readMem(0xcf95), 0xd3);
        // CB D3 0365
        gbc.setState(0x3b41, 0x485f, 0x690, 0xcfb8, 0x24ad, 0x9d03, 0x1, 0x0);
        gbc.writeMem(0x3b41, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x485f);
        EXPECT(gbc.pc(), 0x3b43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0366
        gbc.setState(0x710b, 0x27ca, 0x79c0, 0xcdf2, 0x8f11, 0xbfdc, 0x1, 0x0);
        gbc.writeMem(0x710b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x27ca);
        EXPECT(gbc.pc(), 0x710d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0367
        gbc.setState(0x38b4, 0xd311, 0x6c10, 0xdca3, 0x56e, 0xd318, 0x0, 0x0);
        gbc.writeMem(0x38b4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd311);
        EXPECT(gbc.pc(), 0x38b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0368
        gbc.setState(0x5688, 0x9d07, 0x5490, 0xcfff, 0xb9d6, 0xa359, 0x0, 0x1);
        gbc.writeMem(0x5688, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9d07);
        EXPECT(gbc.pc(), 0x568a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 036A
        gbc.setState(0x427b, 0xe40c, 0x330, 0x7697, 0xa49b, 0xe6cd, 0x1, 0x1);
        gbc.writeMem(0x427b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe40c);
        EXPECT(gbc.pc(), 0x427d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 036B
        gbc.setState(0xdf1, 0xfc12, 0x4850, 0xad62, 0xfda3, 0x6c97, 0x0, 0x1);
        gbc.writeMem(0xdf1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfc12);
        EXPECT(gbc.pc(), 0xdf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 036C
        gbc.setState(0x9ace, 0xc736, 0x85c0, 0x7711, 0x8c16, 0x7733, 0x1, 0x0);
        gbc.writeMem(0x9ace, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc736);
        EXPECT(gbc.pc(), 0x9ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ace), 0xcb);
        EXPECT(gbc.readMem(0x9acf), 0xd3);
        // CB D3 036D
        gbc.setState(0xe9a3, 0xe5e1, 0x3f0, 0x3f1f, 0x251b, 0x7c8c, 0x1, 0x1);
        gbc.writeMem(0xe9a3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe5e1);
        EXPECT(gbc.pc(), 0xe9a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9a3), 0xcb);
        EXPECT(gbc.readMem(0xe9a4), 0xd3);
        // CB D3 036E
        gbc.setState(0xd9f7, 0xcd71, 0x1e60, 0x89c9, 0x458, 0x7908, 0x1, 0x1);
        gbc.writeMem(0xd9f7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xcd71);
        EXPECT(gbc.pc(), 0xd9f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f7), 0xcb);
        EXPECT(gbc.readMem(0xd9f8), 0xd3);
        // CB D3 0370
        gbc.setState(0x8c98, 0xe54c, 0x5d70, 0x3eef, 0x9c5a, 0x465e, 0x0, 0x0);
        gbc.writeMem(0x8c98, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe54c);
        EXPECT(gbc.pc(), 0x8c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c98), 0xcb);
        EXPECT(gbc.readMem(0x8c99), 0xd3);
        // CB D3 0371
        gbc.setState(0x2106, 0xa933, 0xe960, 0x1b6b, 0x4d2d, 0xca90, 0x0, 0x0);
        gbc.writeMem(0x2106, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa933);
        EXPECT(gbc.pc(), 0x2108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0372
        gbc.setState(0x236a, 0x1e0c, 0x3990, 0x2b0e, 0x2b35, 0x74dc, 0x0, 0x0);
        gbc.writeMem(0x236a, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1e0c);
        EXPECT(gbc.pc(), 0x236c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0373
        gbc.setState(0x19d6, 0x450e, 0xd410, 0x8f96, 0x1b1, 0xf755, 0x0, 0x1);
        gbc.writeMem(0x19d6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x450e);
        EXPECT(gbc.pc(), 0x19d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0374
        gbc.setState(0x9dbe, 0xc5af, 0xdde0, 0x6e73, 0x6e2f, 0xf35e, 0x1, 0x0);
        gbc.writeMem(0x9dbe, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc5af);
        EXPECT(gbc.pc(), 0x9dc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbe), 0xcb);
        EXPECT(gbc.readMem(0x9dbf), 0xd3);
        // CB D3 0376
        gbc.setState(0x88c6, 0x464e, 0xdea0, 0xa08d, 0x322c, 0xc23a, 0x1, 0x0);
        gbc.writeMem(0x88c6, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x464e);
        EXPECT(gbc.pc(), 0x88c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c6), 0xcb);
        EXPECT(gbc.readMem(0x88c7), 0xd3);
        // CB D3 0377
        gbc.setState(0xdd8b, 0xa323, 0xd470, 0x2667, 0x47cb, 0xd410, 0x0, 0x0);
        gbc.writeMem(0xdd8b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa323);
        EXPECT(gbc.pc(), 0xdd8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd8b), 0xcb);
        EXPECT(gbc.readMem(0xdd8c), 0xd3);
        // CB D3 0378
        gbc.setState(0x44e9, 0xd9b5, 0xe760, 0x50e0, 0x8315, 0x872, 0x0, 0x0);
        gbc.writeMem(0x44e9, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd9b5);
        EXPECT(gbc.pc(), 0x44eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0379
        gbc.setState(0x62e3, 0x5ce, 0xabf0, 0xc0bc, 0x7793, 0x25bc, 0x0, 0x0);
        gbc.writeMem(0x62e3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5ce);
        EXPECT(gbc.pc(), 0x62e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 037A
        gbc.setState(0x1a72, 0x6e99, 0x4cc0, 0x5e6c, 0xef9f, 0x8ed1, 0x1, 0x0);
        gbc.writeMem(0x1a72, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6e99);
        EXPECT(gbc.pc(), 0x1a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 037B
        gbc.setState(0x362e, 0x6162, 0xb8b0, 0xf75a, 0x5ee0, 0x479c, 0x0, 0x1);
        gbc.writeMem(0x362e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6162);
        EXPECT(gbc.pc(), 0x3630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 037C
        gbc.setState(0x9c98, 0x15ba, 0xf720, 0xb9e0, 0x76e6, 0x3e6, 0x0, 0x1);
        gbc.writeMem(0x9c98, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x15ba);
        EXPECT(gbc.pc(), 0x9c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c98), 0xcb);
        EXPECT(gbc.readMem(0x9c99), 0xd3);
        // CB D3 037D
        gbc.setState(0x14ef, 0xd876, 0x1a0, 0x9af2, 0xa0cd, 0x6bb0, 0x1, 0x1);
        gbc.writeMem(0x14ef, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd876);
        EXPECT(gbc.pc(), 0x14f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 037E
        gbc.setState(0x811c, 0x9b58, 0xb3d0, 0xe283, 0xfd79, 0x869e, 0x0, 0x1);
        gbc.writeMem(0x811c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9b58);
        EXPECT(gbc.pc(), 0x811e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x811c), 0xcb);
        EXPECT(gbc.readMem(0x811d), 0xd3);
        // CB D3 037F
        gbc.setState(0x2ca1, 0x72bf, 0x9230, 0x6304, 0x7cda, 0x41b0, 0x0, 0x0);
        gbc.writeMem(0x2ca1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x72bf);
        EXPECT(gbc.pc(), 0x2ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0380
        gbc.setState(0xbb09, 0x8b88, 0xe4a0, 0x8fd9, 0xc96d, 0xd5bf, 0x1, 0x0);
        gbc.writeMem(0xbb09, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8b88);
        EXPECT(gbc.pc(), 0xbb0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb09), 0xcb);
        EXPECT(gbc.readMem(0xbb0a), 0xd3);
        // CB D3 0381
        gbc.setState(0x81b0, 0xa76f, 0x3dd0, 0x8326, 0xc011, 0x9aad, 0x1, 0x1);
        gbc.writeMem(0x81b0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa76f);
        EXPECT(gbc.pc(), 0x81b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b0), 0xcb);
        EXPECT(gbc.readMem(0x81b1), 0xd3);
        // CB D3 0382
        gbc.setState(0xe842, 0x96aa, 0xd500, 0x4d31, 0x1285, 0x5936, 0x1, 0x1);
        gbc.writeMem(0xe842, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x96aa);
        EXPECT(gbc.pc(), 0xe844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe842), 0xcb);
        EXPECT(gbc.readMem(0xe843), 0xd3);
        // CB D3 0383
        gbc.setState(0x18eb, 0x15f5, 0x2ed0, 0xae34, 0x79f6, 0x4cd, 0x1, 0x0);
        gbc.writeMem(0x18eb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x15f5);
        EXPECT(gbc.pc(), 0x18ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0384
        gbc.setState(0x12f8, 0xa675, 0x6770, 0xd9fd, 0x8af0, 0x275, 0x1, 0x0);
        gbc.writeMem(0x12f8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa675);
        EXPECT(gbc.pc(), 0x12fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0385
        gbc.setState(0xb77, 0x7236, 0x1dc0, 0x715c, 0xe232, 0x1438, 0x0, 0x0);
        gbc.writeMem(0xb77, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7236);
        EXPECT(gbc.pc(), 0xb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0386
        gbc.setState(0x20e0, 0x86d4, 0x2340, 0x7a6f, 0x286a, 0x80e1, 0x1, 0x1);
        gbc.writeMem(0x20e0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x86d4);
        EXPECT(gbc.pc(), 0x20e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0387
        gbc.setState(0x7e56, 0xba18, 0xd6b0, 0x4094, 0xc2c4, 0x776c, 0x0, 0x0);
        gbc.writeMem(0x7e56, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xba18);
        EXPECT(gbc.pc(), 0x7e58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 0388
        gbc.setState(0xeeab, 0x2e23, 0x2120, 0x70f, 0xb9f1, 0x733c, 0x0, 0x0);
        gbc.writeMem(0xeeab, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2e23);
        EXPECT(gbc.pc(), 0xeead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeab), 0xcb);
        EXPECT(gbc.readMem(0xeeac), 0xd3);
        // CB D3 038A
        gbc.setState(0x2ce8, 0x3fa1, 0x5660, 0x4d26, 0x6bc7, 0x1fc2, 0x1, 0x1);
        gbc.writeMem(0x2ce8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3fa1);
        EXPECT(gbc.pc(), 0x2cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 038B
        gbc.setState(0x7544, 0xb57c, 0x9c00, 0x280e, 0x1e10, 0x2e29, 0x0, 0x1);
        gbc.writeMem(0x7544, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb57c);
        EXPECT(gbc.pc(), 0x7546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 038C
        gbc.setState(0xbfa0, 0xc29b, 0x7790, 0x681b, 0xe83a, 0x687f, 0x1, 0x0);
        gbc.writeMem(0xbfa0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc29b);
        EXPECT(gbc.pc(), 0xbfa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa0), 0xcb);
        EXPECT(gbc.readMem(0xbfa1), 0xd3);
        // CB D3 038D
        gbc.setState(0xd3bb, 0x4242, 0xc9d0, 0x8f7b, 0x6d78, 0xecf7, 0x1, 0x0);
        gbc.writeMem(0xd3bb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4242);
        EXPECT(gbc.pc(), 0xd3bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3bb), 0xcb);
        EXPECT(gbc.readMem(0xd3bc), 0xd3);
        // CB D3 038E
        gbc.setState(0xbcd4, 0xaaa9, 0x9e00, 0x99b0, 0xc80a, 0x4038, 0x0, 0x1);
        gbc.writeMem(0xbcd4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xaaa9);
        EXPECT(gbc.pc(), 0xbcd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd4), 0xcb);
        EXPECT(gbc.readMem(0xbcd5), 0xd3);
        // CB D3 038F
        gbc.setState(0xc60c, 0x226b, 0x490, 0x91ea, 0xd618, 0x9d23, 0x0, 0x1);
        gbc.writeMem(0xc60c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x226b);
        EXPECT(gbc.pc(), 0xc60e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc60c), 0xcb);
        EXPECT(gbc.readMem(0xc60d), 0xd3);
        // CB D3 0390
        gbc.setState(0x5e74, 0xe2ed, 0xcf80, 0xeeba, 0xbe62, 0x7185, 0x0, 0x0);
        gbc.writeMem(0x5e74, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe2ed);
        EXPECT(gbc.pc(), 0x5e76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0391
        gbc.setState(0xbfd2, 0xb578, 0xe600, 0x999, 0x1bed, 0x93e1, 0x0, 0x1);
        gbc.writeMem(0xbfd2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb578);
        EXPECT(gbc.pc(), 0xbfd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd2), 0xcb);
        EXPECT(gbc.readMem(0xbfd3), 0xd3);
        // CB D3 0392
        gbc.setState(0x9fba, 0x6428, 0x9da0, 0x564d, 0x78c0, 0x30cd, 0x0, 0x1);
        gbc.writeMem(0x9fba, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6428);
        EXPECT(gbc.pc(), 0x9fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fba), 0xcb);
        EXPECT(gbc.readMem(0x9fbb), 0xd3);
        // CB D3 0393
        gbc.setState(0x8395, 0xa5cc, 0xe5c0, 0x3ab9, 0x8abb, 0xbf72, 0x0, 0x1);
        gbc.writeMem(0x8395, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa5cc);
        EXPECT(gbc.pc(), 0x8397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8395), 0xcb);
        EXPECT(gbc.readMem(0x8396), 0xd3);
        // CB D3 0396
        gbc.setState(0xd14, 0x4f22, 0x3d20, 0x1baf, 0x7c7a, 0x6ef8, 0x1, 0x0);
        gbc.writeMem(0xd14, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4f22);
        EXPECT(gbc.pc(), 0xd16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 0397
        gbc.setState(0xaa0d, 0xb58f, 0xebe0, 0x3cbf, 0xf8f6, 0x60b, 0x0, 0x0);
        gbc.writeMem(0xaa0d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb58f);
        EXPECT(gbc.pc(), 0xaa0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0d), 0xcb);
        EXPECT(gbc.readMem(0xaa0e), 0xd3);
        // CB D3 0399
        gbc.setState(0xb77c, 0x569e, 0x3b10, 0xde57, 0xb699, 0x9c06, 0x0, 0x1);
        gbc.writeMem(0xb77c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x569e);
        EXPECT(gbc.pc(), 0xb77e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77c), 0xcb);
        EXPECT(gbc.readMem(0xb77d), 0xd3);
        // CB D3 039A
        gbc.setState(0x6828, 0xdfd5, 0x2ea0, 0xea87, 0x523b, 0x4051, 0x0, 0x0);
        gbc.writeMem(0x6828, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdfd5);
        EXPECT(gbc.pc(), 0x682a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 039B
        gbc.setState(0x7091, 0xb608, 0x7680, 0xe678, 0x73fe, 0xe1e0, 0x1, 0x0);
        gbc.writeMem(0x7091, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb608);
        EXPECT(gbc.pc(), 0x7093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 039C
        gbc.setState(0xc78b, 0xa15a, 0x69c0, 0x84e5, 0x3f06, 0xf934, 0x1, 0x0);
        gbc.writeMem(0xc78b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa15a);
        EXPECT(gbc.pc(), 0xc78d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78b), 0xcb);
        EXPECT(gbc.readMem(0xc78c), 0xd3);
        // CB D3 039D
        gbc.setState(0xa080, 0x7331, 0xf8f0, 0xbb1a, 0x30df, 0xd793, 0x1, 0x1);
        gbc.writeMem(0xa080, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7331);
        EXPECT(gbc.pc(), 0xa082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa080), 0xcb);
        EXPECT(gbc.readMem(0xa081), 0xd3);
        // CB D3 039E
        gbc.setState(0x1191, 0x4e52, 0xfaa0, 0xf49c, 0xe9bb, 0x2d91, 0x0, 0x1);
        gbc.writeMem(0x1191, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4e52);
        EXPECT(gbc.pc(), 0x1193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 039F
        gbc.setState(0xdae3, 0xe724, 0xa9f0, 0xae2e, 0x23c2, 0xa573, 0x1, 0x0);
        gbc.writeMem(0xdae3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe724);
        EXPECT(gbc.pc(), 0xdae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae3), 0xcb);
        EXPECT(gbc.readMem(0xdae4), 0xd3);
        // CB D3 03A0
        gbc.setState(0x6894, 0x9512, 0xa5c0, 0x6e98, 0xa50c, 0xdf59, 0x1, 0x0);
        gbc.writeMem(0x6894, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9512);
        EXPECT(gbc.pc(), 0x6896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03A1
        gbc.setState(0x3bbb, 0xb8f3, 0xfaf0, 0xf370, 0x46c9, 0x66e1, 0x0, 0x0);
        gbc.writeMem(0x3bbb, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb8f3);
        EXPECT(gbc.pc(), 0x3bbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03A2
        gbc.setState(0xa74b, 0x6d64, 0xf050, 0xb35f, 0xb499, 0x2cc, 0x1, 0x1);
        gbc.writeMem(0xa74b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6d64);
        EXPECT(gbc.pc(), 0xa74d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74b), 0xcb);
        EXPECT(gbc.readMem(0xa74c), 0xd3);
        // CB D3 03A3
        gbc.setState(0x8ee3, 0x7a97, 0xb8b0, 0x4616, 0x98de, 0x72f1, 0x0, 0x1);
        gbc.writeMem(0x8ee3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7a97);
        EXPECT(gbc.pc(), 0x8ee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ee3), 0xcb);
        EXPECT(gbc.readMem(0x8ee4), 0xd3);
        // CB D3 03A4
        gbc.setState(0x154f, 0x4381, 0xf970, 0x30ca, 0x253f, 0x173e, 0x1, 0x1);
        gbc.writeMem(0x154f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4381);
        EXPECT(gbc.pc(), 0x1551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03A5
        gbc.setState(0xa446, 0x8bd3, 0xc260, 0xbb60, 0x26de, 0x8760, 0x0, 0x1);
        gbc.writeMem(0xa446, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8bd3);
        EXPECT(gbc.pc(), 0xa448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa446), 0xcb);
        EXPECT(gbc.readMem(0xa447), 0xd3);
        // CB D3 03A6
        gbc.setState(0x6186, 0x6c80, 0x4200, 0x6dbd, 0x8237, 0xcd04, 0x1, 0x1);
        gbc.writeMem(0x6186, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6c80);
        EXPECT(gbc.pc(), 0x6188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03A7
        gbc.setState(0x3b2d, 0x123d, 0x8580, 0x449c, 0xde23, 0x36e3, 0x0, 0x0);
        gbc.writeMem(0x3b2d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x123d);
        EXPECT(gbc.pc(), 0x3b2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03A8
        gbc.setState(0xcfc2, 0xe32c, 0xc360, 0x444f, 0xce41, 0x4dca, 0x1, 0x1);
        gbc.writeMem(0xcfc2, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe32c);
        EXPECT(gbc.pc(), 0xcfc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc2), 0xcb);
        EXPECT(gbc.readMem(0xcfc3), 0xd3);
        // CB D3 03A9
        gbc.setState(0xe0db, 0xbcc9, 0xc4a0, 0x117b, 0x4da1, 0x7948, 0x0, 0x0);
        gbc.writeMem(0xe0db, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbcc9);
        EXPECT(gbc.pc(), 0xe0dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0db), 0xcb);
        EXPECT(gbc.readMem(0xe0dc), 0xd3);
        // CB D3 03AA
        gbc.setState(0x3d3f, 0xff7f, 0xe3c0, 0x4b3f, 0x5964, 0x620c, 0x0, 0x0);
        gbc.writeMem(0x3d3f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xff7f);
        EXPECT(gbc.pc(), 0x3d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03AC
        gbc.setState(0x5359, 0x7506, 0x8a60, 0x438d, 0xc9a2, 0xe1af, 0x0, 0x0);
        gbc.writeMem(0x5359, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7506);
        EXPECT(gbc.pc(), 0x535b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03AE
        gbc.setState(0x466e, 0x69c6, 0xe600, 0xd4c0, 0xb2f5, 0xd088, 0x1, 0x0);
        gbc.writeMem(0x466e, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x69c6);
        EXPECT(gbc.pc(), 0x4670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03AF
        gbc.setState(0x10e4, 0xa01e, 0x1ed0, 0xe284, 0x91bc, 0x4af1, 0x1, 0x1);
        gbc.writeMem(0x10e4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa01e);
        EXPECT(gbc.pc(), 0x10e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03B0
        gbc.setState(0xce6c, 0xf85f, 0x140, 0x524a, 0xd483, 0x7f15, 0x1, 0x0);
        gbc.writeMem(0xce6c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf85f);
        EXPECT(gbc.pc(), 0xce6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce6c), 0xcb);
        EXPECT(gbc.readMem(0xce6d), 0xd3);
        // CB D3 03B1
        gbc.setState(0x92ca, 0x6850, 0xce60, 0xb39, 0x2157, 0x469f, 0x1, 0x0);
        gbc.writeMem(0x92ca, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6850);
        EXPECT(gbc.pc(), 0x92cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ca), 0xcb);
        EXPECT(gbc.readMem(0x92cb), 0xd3);
        // CB D3 03B2
        gbc.setState(0x431, 0xf683, 0x7b60, 0xef6c, 0x128f, 0xd783, 0x0, 0x1);
        gbc.writeMem(0x431, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf683);
        EXPECT(gbc.pc(), 0x433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03B3
        gbc.setState(0x3210, 0x7937, 0x8b0, 0x7da5, 0xb21, 0xfffb, 0x1, 0x1);
        gbc.writeMem(0x3210, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7937);
        EXPECT(gbc.pc(), 0x3212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03B4
        gbc.setState(0x9d90, 0x72d9, 0x2ba0, 0x6cb5, 0x6e6a, 0xeae9, 0x0, 0x0);
        gbc.writeMem(0x9d90, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x72d9);
        EXPECT(gbc.pc(), 0x9d92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d90), 0xcb);
        EXPECT(gbc.readMem(0x9d91), 0xd3);
        // CB D3 03B5
        gbc.setState(0xee5f, 0xf9f0, 0xe460, 0x6ccb, 0xb0e4, 0x3e3a, 0x0, 0x0);
        gbc.writeMem(0xee5f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf9f0);
        EXPECT(gbc.pc(), 0xee61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee5f), 0xcb);
        EXPECT(gbc.readMem(0xee60), 0xd3);
        // CB D3 03B6
        gbc.setState(0xbd55, 0xc223, 0xe980, 0xe1ce, 0x32ff, 0xebb6, 0x1, 0x0);
        gbc.writeMem(0xbd55, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc223);
        EXPECT(gbc.pc(), 0xbd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd55), 0xcb);
        EXPECT(gbc.readMem(0xbd56), 0xd3);
        // CB D3 03B7
        gbc.setState(0xe448, 0x4fed, 0x1360, 0x7740, 0x68a3, 0x2a71, 0x1, 0x0);
        gbc.writeMem(0xe448, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4fed);
        EXPECT(gbc.pc(), 0xe44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe448), 0xcb);
        EXPECT(gbc.readMem(0xe449), 0xd3);
        // CB D3 03B8
        gbc.setState(0x4e94, 0x2701, 0xb5e0, 0x3aab, 0x204, 0x1b41, 0x0, 0x0);
        gbc.writeMem(0x4e94, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2701);
        EXPECT(gbc.pc(), 0x4e96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03BA
        gbc.setState(0xd828, 0x1c85, 0xd5e0, 0xed0d, 0x450f, 0x6e0f, 0x1, 0x1);
        gbc.writeMem(0xd828, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1c85);
        EXPECT(gbc.pc(), 0xd82a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd828), 0xcb);
        EXPECT(gbc.readMem(0xd829), 0xd3);
        // CB D3 03BC
        gbc.setState(0x8813, 0xcb44, 0x2e80, 0x93d1, 0x231a, 0xb887, 0x0, 0x0);
        gbc.writeMem(0x8813, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcb44);
        EXPECT(gbc.pc(), 0x8815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8813), 0xcb);
        EXPECT(gbc.readMem(0x8814), 0xd3);
        // CB D3 03BD
        gbc.setState(0xc95, 0x2da9, 0xea00, 0xd417, 0x98cb, 0xddad, 0x1, 0x0);
        gbc.writeMem(0xc95, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2da9);
        EXPECT(gbc.pc(), 0xc97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03BE
        gbc.setState(0x8cf3, 0x2e97, 0xf6e0, 0xd23f, 0x48da, 0x58c, 0x0, 0x1);
        gbc.writeMem(0x8cf3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2e97);
        EXPECT(gbc.pc(), 0x8cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf3), 0xcb);
        EXPECT(gbc.readMem(0x8cf4), 0xd3);
        // CB D3 03BF
        gbc.setState(0xe838, 0xceb7, 0x11b0, 0x946d, 0xa31a, 0x7b14, 0x1, 0x0);
        gbc.writeMem(0xe838, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xceb7);
        EXPECT(gbc.pc(), 0xe83a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe838), 0xcb);
        EXPECT(gbc.readMem(0xe839), 0xd3);
        // CB D3 03C1
        gbc.setState(0x6025, 0x1fde, 0x5000, 0x4b93, 0x45cc, 0xddbb, 0x0, 0x0);
        gbc.writeMem(0x6025, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1fde);
        EXPECT(gbc.pc(), 0x6027);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03C2
        gbc.setState(0xcecf, 0x9cb, 0xe020, 0xd15c, 0x4549, 0x116c, 0x0, 0x1);
        gbc.writeMem(0xcecf, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9cb);
        EXPECT(gbc.pc(), 0xced1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcecf), 0xcb);
        EXPECT(gbc.readMem(0xced0), 0xd3);
        // CB D3 03C3
        gbc.setState(0x420b, 0x8255, 0x960, 0x7b1f, 0xc179, 0xf349, 0x1, 0x1);
        gbc.writeMem(0x420b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8255);
        EXPECT(gbc.pc(), 0x420d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03C5
        gbc.setState(0x71fc, 0x5efb, 0x4230, 0xe15e, 0x5ece, 0x873c, 0x0, 0x0);
        gbc.writeMem(0x71fc, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5efb);
        EXPECT(gbc.pc(), 0x71fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03C6
        gbc.setState(0x7a0f, 0xab02, 0xd680, 0xe903, 0x7b15, 0x444d, 0x0, 0x1);
        gbc.writeMem(0x7a0f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xab02);
        EXPECT(gbc.pc(), 0x7a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03C7
        gbc.setState(0x944f, 0xcd79, 0xbb90, 0x320, 0xaff, 0x9758, 0x0, 0x1);
        gbc.writeMem(0x944f, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xcd79);
        EXPECT(gbc.pc(), 0x9451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x944f), 0xcb);
        EXPECT(gbc.readMem(0x9450), 0xd3);
        // CB D3 03C8
        gbc.setState(0xb74b, 0xa749, 0xc0e0, 0x7ca3, 0x9794, 0xd34b, 0x1, 0x1);
        gbc.writeMem(0xb74b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa749);
        EXPECT(gbc.pc(), 0xb74d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb74b), 0xcb);
        EXPECT(gbc.readMem(0xb74c), 0xd3);
        // CB D3 03C9
        gbc.setState(0x268d, 0x1d8a, 0x2220, 0xab8c, 0x73ab, 0x28a8, 0x1, 0x0);
        gbc.writeMem(0x268d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1d8a);
        EXPECT(gbc.pc(), 0x268f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03CA
        gbc.setState(0x41f7, 0xc9e2, 0x41a0, 0x1e40, 0x7dc1, 0xb33f, 0x0, 0x0);
        gbc.writeMem(0x41f7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc9e2);
        EXPECT(gbc.pc(), 0x41f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03CB
        gbc.setState(0xd883, 0x2c36, 0xbd0, 0x9812, 0x34ce, 0x5c0c, 0x0, 0x1);
        gbc.writeMem(0xd883, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2c36);
        EXPECT(gbc.pc(), 0xd885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd883), 0xcb);
        EXPECT(gbc.readMem(0xd884), 0xd3);
        // CB D3 03CC
        gbc.setState(0x3fd8, 0xf090, 0x5770, 0x34fb, 0x9db6, 0xbf6e, 0x1, 0x1);
        gbc.writeMem(0x3fd8, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf090);
        EXPECT(gbc.pc(), 0x3fda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03CD
        gbc.setState(0xe7c7, 0xf1e1, 0x26c0, 0xe979, 0x80ff, 0xf9f9, 0x0, 0x1);
        gbc.writeMem(0xe7c7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf1e1);
        EXPECT(gbc.pc(), 0xe7c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c7), 0xcb);
        EXPECT(gbc.readMem(0xe7c8), 0xd3);
        // CB D3 03CE
        gbc.setState(0xcc0b, 0xbf19, 0x720, 0xa8fa, 0x5693, 0xc270, 0x0, 0x0);
        gbc.writeMem(0xcc0b, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbf19);
        EXPECT(gbc.pc(), 0xcc0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc0b), 0xcb);
        EXPECT(gbc.readMem(0xcc0c), 0xd3);
        // CB D3 03CF
        gbc.setState(0x7878, 0x1de5, 0xe6c0, 0x9dd5, 0x3bdb, 0xfe55, 0x1, 0x0);
        gbc.writeMem(0x7878, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1de5);
        EXPECT(gbc.pc(), 0x787a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03D0
        gbc.setState(0x3296, 0x3362, 0xcd80, 0x39d8, 0xecca, 0x99d7, 0x0, 0x0);
        gbc.writeMem(0x3296, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3362);
        EXPECT(gbc.pc(), 0x3298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03D1
        gbc.setState(0xe898, 0x5cfe, 0x29c0, 0x50c7, 0x8669, 0x8d4c, 0x1, 0x1);
        gbc.writeMem(0xe898, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5cfe);
        EXPECT(gbc.pc(), 0xe89a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe898), 0xcb);
        EXPECT(gbc.readMem(0xe899), 0xd3);
        // CB D3 03D2
        gbc.setState(0xb4a0, 0x8a3d, 0xfee0, 0xb575, 0x74e9, 0x22b1, 0x0, 0x0);
        gbc.writeMem(0xb4a0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8a3d);
        EXPECT(gbc.pc(), 0xb4a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4a0), 0xcb);
        EXPECT(gbc.readMem(0xb4a1), 0xd3);
        // CB D3 03D3
        gbc.setState(0x4f29, 0x1a45, 0x55d0, 0x63f4, 0xffd1, 0xd077, 0x0, 0x0);
        gbc.writeMem(0x4f29, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1a45);
        EXPECT(gbc.pc(), 0x4f2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03D4
        gbc.setState(0xdda0, 0x80d4, 0xa4e0, 0xc2ac, 0x78c6, 0x398b, 0x1, 0x0);
        gbc.writeMem(0xdda0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x80d4);
        EXPECT(gbc.pc(), 0xdda2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda0), 0xcb);
        EXPECT(gbc.readMem(0xdda1), 0xd3);
        // CB D3 03D5
        gbc.setState(0xbe94, 0xba45, 0xa830, 0xb752, 0x179b, 0x7d7c, 0x0, 0x1);
        gbc.writeMem(0xbe94, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xba45);
        EXPECT(gbc.pc(), 0xbe96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe94), 0xcb);
        EXPECT(gbc.readMem(0xbe95), 0xd3);
        // CB D3 03D6
        gbc.setState(0x157c, 0xa75b, 0x8180, 0xf5ac, 0x88fb, 0xcbbf, 0x1, 0x1);
        gbc.writeMem(0x157c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa75b);
        EXPECT(gbc.pc(), 0x157e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03D7
        gbc.setState(0x80e4, 0xe4ba, 0x9690, 0xba13, 0xa013, 0xd61b, 0x0, 0x1);
        gbc.writeMem(0x80e4, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe4ba);
        EXPECT(gbc.pc(), 0x80e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e4), 0xcb);
        EXPECT(gbc.readMem(0x80e5), 0xd3);
        // CB D3 03D8
        gbc.setState(0x5ca3, 0x9e36, 0x3c20, 0xd821, 0xbac5, 0x8b3e, 0x1, 0x1);
        gbc.writeMem(0x5ca3, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9e36);
        EXPECT(gbc.pc(), 0x5ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03D9
        gbc.setState(0x664c, 0x8ed1, 0x1470, 0x1417, 0xfa44, 0xef91, 0x0, 0x1);
        gbc.writeMem(0x664c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8ed1);
        EXPECT(gbc.pc(), 0x664e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03DC
        gbc.setState(0x1af7, 0xe2a9, 0x40d0, 0xa59d, 0xe803, 0xaa88, 0x0, 0x0);
        gbc.writeMem(0x1af7, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe2a9);
        EXPECT(gbc.pc(), 0x1af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03DD
        gbc.setState(0x2526, 0xc4c4, 0x4ba0, 0x1c4e, 0xecf9, 0x3255, 0x0, 0x1);
        gbc.writeMem(0x2526, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc4c4);
        EXPECT(gbc.pc(), 0x2528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D3 03DE
        gbc.setState(0x262d, 0x4120, 0x3b50, 0x184d, 0xb5c8, 0xdbb9, 0x0, 0x1);
        gbc.writeMem(0x262d, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4120);
        EXPECT(gbc.pc(), 0x262f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03DF
        gbc.setState(0x7526, 0x58dd, 0x1a10, 0xcb1, 0xe579, 0x2c59, 0x0, 0x0);
        gbc.writeMem(0x7526, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x58dd);
        EXPECT(gbc.pc(), 0x7528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03E0
        gbc.setState(0xcc4c, 0xc3da, 0x5a10, 0x7551, 0x7542, 0x9c4e, 0x0, 0x1);
        gbc.writeMem(0xcc4c, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc3da);
        EXPECT(gbc.pc(), 0xcc4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc4c), 0xcb);
        EXPECT(gbc.readMem(0xcc4d), 0xd3);
        // CB D3 03E2
        gbc.setState(0xd801, 0x4c75, 0x3070, 0xb952, 0x6509, 0xf3a7, 0x0, 0x1);
        gbc.writeMem(0xd801, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4c75);
        EXPECT(gbc.pc(), 0xd803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd801), 0xcb);
        EXPECT(gbc.readMem(0xd802), 0xd3);
        // CB D3 03E3
        gbc.setState(0xc597, 0x1ad4, 0xd7f0, 0x3dcc, 0x77e9, 0x5324, 0x0, 0x0);
        gbc.writeMem(0xc597, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1ad4);
        EXPECT(gbc.pc(), 0xc599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc597), 0xcb);
        EXPECT(gbc.readMem(0xc598), 0xd3);
        // CB D3 03E4
        gbc.setState(0xaf93, 0xbbd0, 0x7150, 0x6f98, 0x3dd2, 0x7b39, 0x0, 0x0);
        gbc.writeMem(0xaf93, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbbd0);
        EXPECT(gbc.pc(), 0xaf95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf93), 0xcb);
        EXPECT(gbc.readMem(0xaf94), 0xd3);
        // CB D3 03E5
        gbc.setState(0x74e0, 0x5b13, 0xd010, 0xcc4a, 0xcb99, 0x9f5b, 0x1, 0x1);
        gbc.writeMem(0x74e0, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5b13);
        EXPECT(gbc.pc(), 0x74e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D3 03E6
        gbc.setState(0xbed1, 0x6d46, 0x9790, 0x2c57, 0x392f, 0x3bff, 0x1, 0x0);
        gbc.writeMem(0xbed1, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6d46);
        EXPECT(gbc.pc(), 0xbed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed1), 0xcb);
        EXPECT(gbc.readMem(0xbed2), 0xd3);
        // CB D3 03E7
        gbc.setState(0x3362, 0xde9, 0x4ab0, 0x77ac, 0xd118, 0xf31c, 0x0, 0x1);
        gbc.writeMem(0x3362, { 0xcb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xde9);
        EXPECT(gbc.pc(), 0x3364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
