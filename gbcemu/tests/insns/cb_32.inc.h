    TEST(gbcemu, opcode_cb_32) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 32 0000
        gbc.setState(0xb49a, 0x257d, 0x8a70, 0x5ddb, 0x7f25, 0x2478, 0x0, 0x1);
        gbc.writeMem(0xb49a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x257d);
        EXPECT(gbc.pc(), 0xb49c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb49a), 0xcb);
        EXPECT(gbc.readMem(0xb49b), 0x32);
        // CB 32 0001
        gbc.setState(0xd466, 0x2819, 0xae80, 0x6049, 0x617f, 0xff48, 0x1, 0x1);
        gbc.writeMem(0xd466, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2819);
        EXPECT(gbc.pc(), 0xd468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd466), 0xcb);
        EXPECT(gbc.readMem(0xd467), 0x32);
        // CB 32 0002
        gbc.setState(0x9b9b, 0xa098, 0x1e70, 0x29f1, 0x6db2, 0x86ce, 0x1, 0x0);
        gbc.writeMem(0x9b9b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa098);
        EXPECT(gbc.pc(), 0x9b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b9b), 0xcb);
        EXPECT(gbc.readMem(0x9b9c), 0x32);
        // CB 32 0003
        gbc.setState(0x34d, 0x6f40, 0x7f00, 0xefd1, 0x6ed, 0x7e39, 0x0, 0x0);
        gbc.writeMem(0x34d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6f40);
        EXPECT(gbc.pc(), 0x34f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0004
        gbc.setState(0xeca7, 0x49c7, 0x6360, 0xfaa, 0xbde1, 0x9451, 0x0, 0x1);
        gbc.writeMem(0xeca7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x49c7);
        EXPECT(gbc.pc(), 0xeca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca7), 0xcb);
        EXPECT(gbc.readMem(0xeca8), 0x32);
        // CB 32 0005
        gbc.setState(0x63e7, 0x9cb8, 0x9720, 0x1f74, 0x8a0f, 0x7f36, 0x1, 0x1);
        gbc.writeMem(0x63e7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9cb8);
        EXPECT(gbc.pc(), 0x63e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0006
        gbc.setState(0x8a13, 0xaf43, 0xb1a0, 0x81a9, 0xeb3, 0xa9be, 0x0, 0x1);
        gbc.writeMem(0x8a13, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xaf43);
        EXPECT(gbc.pc(), 0x8a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a13), 0xcb);
        EXPECT(gbc.readMem(0x8a14), 0x32);
        // CB 32 0007
        gbc.setState(0xe598, 0x77bc, 0x6430, 0x6f65, 0x149e, 0x2782, 0x0, 0x1);
        gbc.writeMem(0xe598, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x77bc);
        EXPECT(gbc.pc(), 0xe59a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe598), 0xcb);
        EXPECT(gbc.readMem(0xe599), 0x32);
        // CB 32 0008
        gbc.setState(0xcdb, 0xddf5, 0xb040, 0xe000, 0x2c26, 0x6401, 0x1, 0x1);
        gbc.writeMem(0xcdb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xddf5);
        EXPECT(gbc.pc(), 0xcdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0009
        gbc.setState(0x9b5f, 0xa89c, 0x84c0, 0x23bb, 0xab8b, 0xee40, 0x0, 0x1);
        gbc.writeMem(0x9b5f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa89c);
        EXPECT(gbc.pc(), 0x9b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b5f), 0xcb);
        EXPECT(gbc.readMem(0x9b60), 0x32);
        // CB 32 000A
        gbc.setState(0x4538, 0x6867, 0xf690, 0xbcff, 0x64cd, 0xe89e, 0x0, 0x1);
        gbc.writeMem(0x4538, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6867);
        EXPECT(gbc.pc(), 0x453a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 000B
        gbc.setState(0xdca, 0x5194, 0x19c0, 0x2c8d, 0x39bc, 0xaa8c, 0x0, 0x1);
        gbc.writeMem(0xdca, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5194);
        EXPECT(gbc.pc(), 0xdcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 000C
        gbc.setState(0x106, 0x51dc, 0xeed0, 0x5bbf, 0x89a, 0x88a7, 0x1, 0x0);
        gbc.writeMem(0x106, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x51dc);
        EXPECT(gbc.pc(), 0x108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 000D
        gbc.setState(0xd077, 0xe884, 0x3190, 0xec32, 0x1069, 0x5b39, 0x0, 0x1);
        gbc.writeMem(0xd077, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe884);
        EXPECT(gbc.pc(), 0xd079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd077), 0xcb);
        EXPECT(gbc.readMem(0xd078), 0x32);
        // CB 32 000E
        gbc.setState(0x4fb0, 0x4d0d, 0x28f0, 0x1a1c, 0x422e, 0xffaa, 0x1, 0x1);
        gbc.writeMem(0x4fb0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4d0d);
        EXPECT(gbc.pc(), 0x4fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 000F
        gbc.setState(0xd5b, 0xfea0, 0xf330, 0x120d, 0x5bf8, 0xe170, 0x1, 0x1);
        gbc.writeMem(0xd5b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfea0);
        EXPECT(gbc.pc(), 0xd5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0010
        gbc.setState(0x6160, 0x3bdd, 0xca90, 0xf74, 0x151a, 0x8837, 0x1, 0x0);
        gbc.writeMem(0x6160, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3bdd);
        EXPECT(gbc.pc(), 0x6162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0011
        gbc.setState(0xa7b7, 0x30ea, 0x58b0, 0xabf3, 0xe45, 0x2945, 0x0, 0x0);
        gbc.writeMem(0xa7b7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x30ea);
        EXPECT(gbc.pc(), 0xa7b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b7), 0xcb);
        EXPECT(gbc.readMem(0xa7b8), 0x32);
        // CB 32 0012
        gbc.setState(0x9329, 0x997a, 0x4a70, 0x5d5, 0x6ddf, 0xb2ab, 0x0, 0x0);
        gbc.writeMem(0x9329, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x997a);
        EXPECT(gbc.pc(), 0x932b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9329), 0xcb);
        EXPECT(gbc.readMem(0x932a), 0x32);
        // CB 32 0013
        gbc.setState(0x18f, 0x7fdd, 0x6490, 0x2b5d, 0xfdb2, 0x3408, 0x1, 0x0);
        gbc.writeMem(0x18f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7fdd);
        EXPECT(gbc.pc(), 0x191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0014
        gbc.setState(0xb8dd, 0x4bc8, 0x10, 0xfc13, 0x4fb6, 0xfcc, 0x0, 0x1);
        gbc.writeMem(0xb8dd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4bc8);
        EXPECT(gbc.pc(), 0xb8df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8dd), 0xcb);
        EXPECT(gbc.readMem(0xb8de), 0x32);
        // CB 32 0016
        gbc.setState(0x7a50, 0x920a, 0x4690, 0x9933, 0xe14e, 0x5ff2, 0x1, 0x1);
        gbc.writeMem(0x7a50, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x920a);
        EXPECT(gbc.pc(), 0x7a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0017
        gbc.setState(0x6d91, 0x4f81, 0x3480, 0xdeb, 0xb969, 0x829c, 0x1, 0x1);
        gbc.writeMem(0x6d91, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4f81);
        EXPECT(gbc.pc(), 0x6d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0018
        gbc.setState(0x9bdf, 0xeaad, 0xbe20, 0x9687, 0x39b0, 0x8f09, 0x0, 0x0);
        gbc.writeMem(0x9bdf, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xeaad);
        EXPECT(gbc.pc(), 0x9be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bdf), 0xcb);
        EXPECT(gbc.readMem(0x9be0), 0x32);
        // CB 32 0019
        gbc.setState(0x8d18, 0x8ab1, 0xf000, 0x5128, 0x2956, 0x26f6, 0x1, 0x1);
        gbc.writeMem(0x8d18, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8ab1);
        EXPECT(gbc.pc(), 0x8d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d18), 0xcb);
        EXPECT(gbc.readMem(0x8d19), 0x32);
        // CB 32 001A
        gbc.setState(0x8b3d, 0xf780, 0x6680, 0xb33b, 0x7b9d, 0x8768, 0x0, 0x1);
        gbc.writeMem(0x8b3d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf780);
        EXPECT(gbc.pc(), 0x8b3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3d), 0xcb);
        EXPECT(gbc.readMem(0x8b3e), 0x32);
        // CB 32 001B
        gbc.setState(0x208d, 0xb971, 0x48c0, 0xbae9, 0x72af, 0x3506, 0x0, 0x1);
        gbc.writeMem(0x208d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb971);
        EXPECT(gbc.pc(), 0x208f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 001C
        gbc.setState(0xef73, 0x7efd, 0x7c60, 0xb971, 0xf98d, 0x4caf, 0x0, 0x1);
        gbc.writeMem(0xef73, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7efd);
        EXPECT(gbc.pc(), 0xef75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef73), 0xcb);
        EXPECT(gbc.readMem(0xef74), 0x32);
        // CB 32 001D
        gbc.setState(0xe99, 0xad9b, 0x60, 0x8eab, 0x8231, 0xeca4, 0x1, 0x1);
        gbc.writeMem(0xe99, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xad9b);
        EXPECT(gbc.pc(), 0xe9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 001E
        gbc.setState(0x4fa0, 0x82c3, 0xb3a0, 0xd9e6, 0xe4ec, 0xc2d3, 0x0, 0x1);
        gbc.writeMem(0x4fa0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x82c3);
        EXPECT(gbc.pc(), 0x4fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 001F
        gbc.setState(0x25f8, 0xb1ae, 0x6800, 0x396c, 0x87bc, 0xd550, 0x0, 0x1);
        gbc.writeMem(0x25f8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb1ae);
        EXPECT(gbc.pc(), 0x25fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0020
        gbc.setState(0x57e1, 0xf088, 0x7d40, 0x5b43, 0xab88, 0x90a2, 0x1, 0x1);
        gbc.writeMem(0x57e1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf088);
        EXPECT(gbc.pc(), 0x57e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0021
        gbc.setState(0xc69, 0xc9ef, 0xee20, 0x8eb9, 0x97, 0x6bb7, 0x1, 0x0);
        gbc.writeMem(0xc69, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc9ef);
        EXPECT(gbc.pc(), 0xc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0022
        gbc.setState(0x39dd, 0x7690, 0x1670, 0xf989, 0x2a52, 0x9120, 0x1, 0x0);
        gbc.writeMem(0x39dd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7690);
        EXPECT(gbc.pc(), 0x39df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0023
        gbc.setState(0xdaa3, 0xe3eb, 0xe0f0, 0x1f, 0x4a, 0xdd1f, 0x0, 0x0);
        gbc.writeMem(0xdaa3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe3eb);
        EXPECT(gbc.pc(), 0xdaa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa3), 0xcb);
        EXPECT(gbc.readMem(0xdaa4), 0x32);
        // CB 32 0024
        gbc.setState(0x720b, 0xa910, 0x3f70, 0x45aa, 0x1057, 0x8db7, 0x1, 0x0);
        gbc.writeMem(0x720b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa910);
        EXPECT(gbc.pc(), 0x720d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0025
        gbc.setState(0x588b, 0x7101, 0x27f0, 0x50ef, 0x26d5, 0xb057, 0x0, 0x1);
        gbc.writeMem(0x588b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7101);
        EXPECT(gbc.pc(), 0x588d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0026
        gbc.setState(0x3db2, 0x905a, 0x8b50, 0x2f65, 0x6e75, 0x7969, 0x1, 0x0);
        gbc.writeMem(0x3db2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x905a);
        EXPECT(gbc.pc(), 0x3db4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0027
        gbc.setState(0x1f28, 0xeaad, 0x6390, 0x26bc, 0x773a, 0x811c, 0x0, 0x1);
        gbc.writeMem(0x1f28, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xeaad);
        EXPECT(gbc.pc(), 0x1f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0028
        gbc.setState(0x885e, 0xacb8, 0x52f0, 0xb1c1, 0x1d5c, 0xe372, 0x1, 0x0);
        gbc.writeMem(0x885e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xacb8);
        EXPECT(gbc.pc(), 0x8860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x885e), 0xcb);
        EXPECT(gbc.readMem(0x885f), 0x32);
        // CB 32 0029
        gbc.setState(0x5a67, 0xb557, 0x9b0, 0x55a5, 0xb777, 0xb236, 0x1, 0x0);
        gbc.writeMem(0x5a67, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb557);
        EXPECT(gbc.pc(), 0x5a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 002A
        gbc.setState(0x9e05, 0x4d60, 0xfc70, 0x9890, 0x242, 0x24a1, 0x1, 0x1);
        gbc.writeMem(0x9e05, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4d60);
        EXPECT(gbc.pc(), 0x9e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e05), 0xcb);
        EXPECT(gbc.readMem(0x9e06), 0x32);
        // CB 32 002B
        gbc.setState(0xaa9, 0xd547, 0x8cd0, 0xe3d9, 0x5a49, 0x57c7, 0x1, 0x0);
        gbc.writeMem(0xaa9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd547);
        EXPECT(gbc.pc(), 0xaab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 002D
        gbc.setState(0x5884, 0xa291, 0x29e0, 0x1026, 0x3d57, 0x8d0a, 0x1, 0x1);
        gbc.writeMem(0x5884, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa291);
        EXPECT(gbc.pc(), 0x5886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 002E
        gbc.setState(0x8ae7, 0xb9a8, 0xb5e0, 0xf51a, 0x650, 0x3967, 0x1, 0x1);
        gbc.writeMem(0x8ae7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb9a8);
        EXPECT(gbc.pc(), 0x8ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae7), 0xcb);
        EXPECT(gbc.readMem(0x8ae8), 0x32);
        // CB 32 002F
        gbc.setState(0x5272, 0xdfb2, 0x7f40, 0xff36, 0xa95a, 0xd239, 0x0, 0x0);
        gbc.writeMem(0x5272, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xdfb2);
        EXPECT(gbc.pc(), 0x5274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0030
        gbc.setState(0xb511, 0x9fe7, 0x1c40, 0x275f, 0x6a5c, 0xe15d, 0x1, 0x1);
        gbc.writeMem(0xb511, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9fe7);
        EXPECT(gbc.pc(), 0xb513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb511), 0xcb);
        EXPECT(gbc.readMem(0xb512), 0x32);
        // CB 32 0031
        gbc.setState(0x5dba, 0xd2a5, 0x7d60, 0x5982, 0x208a, 0x325c, 0x1, 0x1);
        gbc.writeMem(0x5dba, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd2a5);
        EXPECT(gbc.pc(), 0x5dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0032
        gbc.setState(0x689, 0x4b71, 0xf420, 0x6313, 0x656f, 0x9c73, 0x1, 0x1);
        gbc.writeMem(0x689, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4b71);
        EXPECT(gbc.pc(), 0x68b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0033
        gbc.setState(0x2181, 0xe975, 0x1840, 0xcde2, 0xac63, 0x2707, 0x1, 0x0);
        gbc.writeMem(0x2181, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe975);
        EXPECT(gbc.pc(), 0x2183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0034
        gbc.setState(0xe96e, 0x61a1, 0x1930, 0x8d36, 0x272b, 0x6264, 0x0, 0x1);
        gbc.writeMem(0xe96e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x61a1);
        EXPECT(gbc.pc(), 0xe970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe96e), 0xcb);
        EXPECT(gbc.readMem(0xe96f), 0x32);
        // CB 32 0035
        gbc.setState(0xbc2e, 0xbf03, 0x2e90, 0x5fe8, 0xc7d5, 0x3554, 0x1, 0x1);
        gbc.writeMem(0xbc2e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbf03);
        EXPECT(gbc.pc(), 0xbc30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2e), 0xcb);
        EXPECT(gbc.readMem(0xbc2f), 0x32);
        // CB 32 0036
        gbc.setState(0x1f24, 0xa68c, 0x5330, 0x34f, 0xc94a, 0x4d7e, 0x1, 0x0);
        gbc.writeMem(0x1f24, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa68c);
        EXPECT(gbc.pc(), 0x1f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0037
        gbc.setState(0xd52e, 0x9507, 0xd920, 0x8efe, 0xaad9, 0x79c6, 0x0, 0x0);
        gbc.writeMem(0xd52e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9507);
        EXPECT(gbc.pc(), 0xd530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd52e), 0xcb);
        EXPECT(gbc.readMem(0xd52f), 0x32);
        // CB 32 0038
        gbc.setState(0xe36b, 0x1b7e, 0x990, 0xc50b, 0xaa34, 0x3a37, 0x1, 0x1);
        gbc.writeMem(0xe36b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1b7e);
        EXPECT(gbc.pc(), 0xe36d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe36b), 0xcb);
        EXPECT(gbc.readMem(0xe36c), 0x32);
        // CB 32 0039
        gbc.setState(0xe9b5, 0xed28, 0x1aa0, 0x2de0, 0xd419, 0xf498, 0x1, 0x0);
        gbc.writeMem(0xe9b5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xed28);
        EXPECT(gbc.pc(), 0xe9b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b5), 0xcb);
        EXPECT(gbc.readMem(0xe9b6), 0x32);
        // CB 32 003A
        gbc.setState(0x6793, 0x7b4d, 0x6230, 0x91a8, 0x6265, 0xf1e2, 0x0, 0x1);
        gbc.writeMem(0x6793, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7b4d);
        EXPECT(gbc.pc(), 0x6795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 003B
        gbc.setState(0x4862, 0xe89a, 0x3ee0, 0xc5a1, 0xa22d, 0x665e, 0x0, 0x0);
        gbc.writeMem(0x4862, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe89a);
        EXPECT(gbc.pc(), 0x4864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 003C
        gbc.setState(0xc512, 0x2882, 0xd310, 0xef54, 0x7a8a, 0x25fc, 0x1, 0x1);
        gbc.writeMem(0xc512, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2882);
        EXPECT(gbc.pc(), 0xc514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc512), 0xcb);
        EXPECT(gbc.readMem(0xc513), 0x32);
        // CB 32 003D
        gbc.setState(0xa6d1, 0xac7f, 0xc360, 0x9f4, 0x9a3b, 0xd98f, 0x0, 0x1);
        gbc.writeMem(0xa6d1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xac7f);
        EXPECT(gbc.pc(), 0xa6d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d1), 0xcb);
        EXPECT(gbc.readMem(0xa6d2), 0x32);
        // CB 32 003F
        gbc.setState(0x1f13, 0xc297, 0x6220, 0xce4b, 0x986, 0x7877, 0x1, 0x1);
        gbc.writeMem(0x1f13, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc297);
        EXPECT(gbc.pc(), 0x1f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0040
        gbc.setState(0x41f7, 0x15e, 0x4ef0, 0x834f, 0x965c, 0x3b0f, 0x0, 0x0);
        gbc.writeMem(0x41f7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x15e);
        EXPECT(gbc.pc(), 0x41f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0041
        gbc.setState(0x35bd, 0x2055, 0x85c0, 0xf9de, 0x8461, 0xabc1, 0x1, 0x1);
        gbc.writeMem(0x35bd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2055);
        EXPECT(gbc.pc(), 0x35bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0042
        gbc.setState(0x9557, 0x15ab, 0xed30, 0x899b, 0xc324, 0xe68c, 0x1, 0x0);
        gbc.writeMem(0x9557, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x15ab);
        EXPECT(gbc.pc(), 0x9559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9557), 0xcb);
        EXPECT(gbc.readMem(0x9558), 0x32);
        // CB 32 0043
        gbc.setState(0x46a6, 0xb813, 0x6a20, 0x8e2f, 0x9504, 0xd74a, 0x1, 0x1);
        gbc.writeMem(0x46a6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb813);
        EXPECT(gbc.pc(), 0x46a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0044
        gbc.setState(0x8bf7, 0x24c8, 0x94c0, 0xa39b, 0xc8a, 0x94a, 0x1, 0x1);
        gbc.writeMem(0x8bf7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x24c8);
        EXPECT(gbc.pc(), 0x8bf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bf7), 0xcb);
        EXPECT(gbc.readMem(0x8bf8), 0x32);
        // CB 32 0045
        gbc.setState(0xda9f, 0xce26, 0x21b0, 0x6066, 0x6449, 0x2aa5, 0x0, 0x1);
        gbc.writeMem(0xda9f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xce26);
        EXPECT(gbc.pc(), 0xdaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda9f), 0xcb);
        EXPECT(gbc.readMem(0xdaa0), 0x32);
        // CB 32 0047
        gbc.setState(0x81a5, 0xef36, 0x51c0, 0xa30c, 0xc22a, 0xd14, 0x0, 0x1);
        gbc.writeMem(0x81a5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xef36);
        EXPECT(gbc.pc(), 0x81a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a5), 0xcb);
        EXPECT(gbc.readMem(0x81a6), 0x32);
        // CB 32 0048
        gbc.setState(0xd8eb, 0xd594, 0x42a0, 0x20a2, 0xff0, 0x918b, 0x0, 0x1);
        gbc.writeMem(0xd8eb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd594);
        EXPECT(gbc.pc(), 0xd8ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8eb), 0xcb);
        EXPECT(gbc.readMem(0xd8ec), 0x32);
        // CB 32 0049
        gbc.setState(0x5fe0, 0xe648, 0xbea0, 0x34ad, 0x7f43, 0xc4ec, 0x0, 0x1);
        gbc.writeMem(0x5fe0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe648);
        EXPECT(gbc.pc(), 0x5fe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 004A
        gbc.setState(0x448, 0x7fc2, 0xce20, 0x9ac0, 0x1ea8, 0x1707, 0x1, 0x1);
        gbc.writeMem(0x448, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7fc2);
        EXPECT(gbc.pc(), 0x44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 004B
        gbc.setState(0x7180, 0xb0cc, 0x1f50, 0x74e9, 0x9f22, 0x29da, 0x0, 0x1);
        gbc.writeMem(0x7180, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb0cc);
        EXPECT(gbc.pc(), 0x7182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 004C
        gbc.setState(0x54e7, 0xf51e, 0xf520, 0x746e, 0x6f6, 0x3b49, 0x1, 0x1);
        gbc.writeMem(0x54e7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf51e);
        EXPECT(gbc.pc(), 0x54e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 004D
        gbc.setState(0xec6e, 0x8f92, 0xed40, 0x6962, 0x8f09, 0x557c, 0x0, 0x0);
        gbc.writeMem(0xec6e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8f92);
        EXPECT(gbc.pc(), 0xec70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec6e), 0xcb);
        EXPECT(gbc.readMem(0xec6f), 0x32);
        // CB 32 004E
        gbc.setState(0x3fe6, 0x90c1, 0x2d90, 0x4db6, 0xda43, 0x7df3, 0x0, 0x1);
        gbc.writeMem(0x3fe6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x90c1);
        EXPECT(gbc.pc(), 0x3fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 004F
        gbc.setState(0xe6f7, 0xc92a, 0x1e30, 0x8355, 0x72a9, 0x55c2, 0x0, 0x1);
        gbc.writeMem(0xe6f7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc92a);
        EXPECT(gbc.pc(), 0xe6f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f7), 0xcb);
        EXPECT(gbc.readMem(0xe6f8), 0x32);
        // CB 32 0050
        gbc.setState(0x2c5e, 0xcd9b, 0x4650, 0xe84f, 0xff68, 0x5754, 0x0, 0x0);
        gbc.writeMem(0x2c5e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xcd9b);
        EXPECT(gbc.pc(), 0x2c60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0051
        gbc.setState(0xbba1, 0xfb2, 0xcb90, 0x4fbd, 0xa5c1, 0x64d9, 0x0, 0x0);
        gbc.writeMem(0xbba1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfb2);
        EXPECT(gbc.pc(), 0xbba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba1), 0xcb);
        EXPECT(gbc.readMem(0xbba2), 0x32);
        // CB 32 0052
        gbc.setState(0x51b2, 0xb5cf, 0xa6e0, 0x83a5, 0x9fe4, 0x5726, 0x0, 0x0);
        gbc.writeMem(0x51b2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb5cf);
        EXPECT(gbc.pc(), 0x51b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0053
        gbc.setState(0x168f, 0x9560, 0x7f10, 0x40d1, 0x99e7, 0xff6b, 0x0, 0x1);
        gbc.writeMem(0x168f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9560);
        EXPECT(gbc.pc(), 0x1691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0054
        gbc.setState(0x5ac7, 0xdbac, 0x910, 0xebda, 0x7a15, 0xff, 0x1, 0x1);
        gbc.writeMem(0x5ac7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdbac);
        EXPECT(gbc.pc(), 0x5ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0055
        gbc.setState(0xbf60, 0x1f55, 0xa8a0, 0xdda5, 0x811d, 0xa707, 0x0, 0x0);
        gbc.writeMem(0xbf60, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1f55);
        EXPECT(gbc.pc(), 0xbf62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf60), 0xcb);
        EXPECT(gbc.readMem(0xbf61), 0x32);
        // CB 32 0056
        gbc.setState(0xb889, 0xcc84, 0x4230, 0x6b78, 0xdb48, 0xb29f, 0x1, 0x0);
        gbc.writeMem(0xb889, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xcc84);
        EXPECT(gbc.pc(), 0xb88b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb889), 0xcb);
        EXPECT(gbc.readMem(0xb88a), 0x32);
        // CB 32 0057
        gbc.setState(0x430f, 0x26c7, 0x4ce0, 0x16ef, 0xd8c, 0x5b5b, 0x1, 0x1);
        gbc.writeMem(0x430f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x26c7);
        EXPECT(gbc.pc(), 0x4311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0058
        gbc.setState(0x594e, 0xf920, 0xc50, 0xff17, 0x122e, 0x16fb, 0x0, 0x0);
        gbc.writeMem(0x594e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf920);
        EXPECT(gbc.pc(), 0x5950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0059
        gbc.setState(0x2711, 0x686b, 0x6c80, 0xb333, 0xd65e, 0xfc87, 0x0, 0x0);
        gbc.writeMem(0x2711, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x686b);
        EXPECT(gbc.pc(), 0x2713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 005A
        gbc.setState(0xbf5a, 0x3066, 0xe700, 0x922f, 0x8051, 0x1587, 0x0, 0x1);
        gbc.writeMem(0xbf5a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3066);
        EXPECT(gbc.pc(), 0xbf5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf5a), 0xcb);
        EXPECT(gbc.readMem(0xbf5b), 0x32);
        // CB 32 005B
        gbc.setState(0x3deb, 0xd1f7, 0x23a0, 0xb8e6, 0x22c0, 0xcb83, 0x1, 0x0);
        gbc.writeMem(0x3deb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd1f7);
        EXPECT(gbc.pc(), 0x3ded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 005C
        gbc.setState(0x7954, 0x6801, 0xf640, 0xaa11, 0xc3d6, 0xbd3b, 0x0, 0x1);
        gbc.writeMem(0x7954, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6801);
        EXPECT(gbc.pc(), 0x7956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 005D
        gbc.setState(0x2677, 0x58ea, 0xe850, 0x3f6, 0x2cc2, 0xdd00, 0x1, 0x0);
        gbc.writeMem(0x2677, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x58ea);
        EXPECT(gbc.pc(), 0x2679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 005E
        gbc.setState(0x23d6, 0x3d63, 0x3900, 0xb453, 0x2428, 0x7090, 0x0, 0x0);
        gbc.writeMem(0x23d6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3d63);
        EXPECT(gbc.pc(), 0x23d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 005F
        gbc.setState(0xc1c1, 0xbb74, 0x8fb0, 0x2360, 0xce92, 0x2c6, 0x0, 0x0);
        gbc.writeMem(0xc1c1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbb74);
        EXPECT(gbc.pc(), 0xc1c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c1), 0xcb);
        EXPECT(gbc.readMem(0xc1c2), 0x32);
        // CB 32 0060
        gbc.setState(0xc3ea, 0x7c32, 0xb2d0, 0x6e6b, 0xb47b, 0xbe89, 0x0, 0x0);
        gbc.writeMem(0xc3ea, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7c32);
        EXPECT(gbc.pc(), 0xc3ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ea), 0xcb);
        EXPECT(gbc.readMem(0xc3eb), 0x32);
        // CB 32 0061
        gbc.setState(0x61d9, 0x42f, 0xeb40, 0x1013, 0x5c70, 0x1763, 0x0, 0x1);
        gbc.writeMem(0x61d9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x42f);
        EXPECT(gbc.pc(), 0x61db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0062
        gbc.setState(0xed79, 0x78d2, 0x6780, 0x182, 0xa5ca, 0x917f, 0x0, 0x0);
        gbc.writeMem(0xed79, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x78d2);
        EXPECT(gbc.pc(), 0xed7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed79), 0xcb);
        EXPECT(gbc.readMem(0xed7a), 0x32);
        // CB 32 0063
        gbc.setState(0x2469, 0xc68, 0xe180, 0x4fc, 0x62ec, 0x8c76, 0x1, 0x1);
        gbc.writeMem(0x2469, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc68);
        EXPECT(gbc.pc(), 0x246b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0064
        gbc.setState(0x1f9, 0xa081, 0xf8f0, 0x5ab4, 0x4f8e, 0xa4d3, 0x0, 0x0);
        gbc.writeMem(0x1f9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa081);
        EXPECT(gbc.pc(), 0x1fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0065
        gbc.setState(0xed, 0x505, 0x1510, 0x1496, 0xc1ea, 0xa198, 0x1, 0x0);
        gbc.writeMem(0xed, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x505);
        EXPECT(gbc.pc(), 0xef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0066
        gbc.setState(0x570d, 0xe3e7, 0x9dc0, 0xed29, 0xe64d, 0xadd1, 0x0, 0x1);
        gbc.writeMem(0x570d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe3e7);
        EXPECT(gbc.pc(), 0x570f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0068
        gbc.setState(0x6b9b, 0x3dbb, 0x3a80, 0xd42f, 0x2bb7, 0x4f8c, 0x0, 0x0);
        gbc.writeMem(0x6b9b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3dbb);
        EXPECT(gbc.pc(), 0x6b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0069
        gbc.setState(0x7fe6, 0xed12, 0x2c80, 0xd1ec, 0xf22f, 0x4e63, 0x1, 0x1);
        gbc.writeMem(0x7fe6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xed12);
        EXPECT(gbc.pc(), 0x7fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 006A
        gbc.setState(0x6b08, 0x2748, 0x7d90, 0x484b, 0xcc00, 0x3b2b, 0x1, 0x0);
        gbc.writeMem(0x6b08, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2748);
        EXPECT(gbc.pc(), 0x6b0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 006B
        gbc.setState(0xc23d, 0xddbe, 0x39c0, 0xbca9, 0x7a1b, 0x135d, 0x0, 0x1);
        gbc.writeMem(0xc23d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xddbe);
        EXPECT(gbc.pc(), 0xc23f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc23d), 0xcb);
        EXPECT(gbc.readMem(0xc23e), 0x32);
        // CB 32 006C
        gbc.setState(0xcd3e, 0x92a9, 0xd130, 0x48f, 0x6b4e, 0xe31, 0x1, 0x0);
        gbc.writeMem(0xcd3e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x92a9);
        EXPECT(gbc.pc(), 0xcd40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3e), 0xcb);
        EXPECT(gbc.readMem(0xcd3f), 0x32);
        // CB 32 006D
        gbc.setState(0xa0d0, 0x19b9, 0xed10, 0x540c, 0x94d7, 0xd7e, 0x1, 0x1);
        gbc.writeMem(0xa0d0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x19b9);
        EXPECT(gbc.pc(), 0xa0d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0d0), 0xcb);
        EXPECT(gbc.readMem(0xa0d1), 0x32);
        // CB 32 006E
        gbc.setState(0x425e, 0xb5e1, 0xa280, 0x47fd, 0x88eb, 0xca2c, 0x0, 0x1);
        gbc.writeMem(0x425e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb5e1);
        EXPECT(gbc.pc(), 0x4260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 006F
        gbc.setState(0x9296, 0xf91b, 0x1390, 0x2591, 0xcfb6, 0xb8d6, 0x0, 0x0);
        gbc.writeMem(0x9296, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf91b);
        EXPECT(gbc.pc(), 0x9298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9296), 0xcb);
        EXPECT(gbc.readMem(0x9297), 0x32);
        // CB 32 0070
        gbc.setState(0x73c4, 0x8599, 0x4960, 0xfde3, 0xb047, 0x25ca, 0x1, 0x1);
        gbc.writeMem(0x73c4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8599);
        EXPECT(gbc.pc(), 0x73c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0071
        gbc.setState(0x87cb, 0xdb24, 0x970, 0x5c07, 0x773e, 0xcb46, 0x0, 0x1);
        gbc.writeMem(0x87cb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xdb24);
        EXPECT(gbc.pc(), 0x87cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87cb), 0xcb);
        EXPECT(gbc.readMem(0x87cc), 0x32);
        // CB 32 0072
        gbc.setState(0xc9ff, 0xbce2, 0x6df0, 0x2e66, 0x7de2, 0x8c35, 0x1, 0x0);
        gbc.writeMem(0xc9ff, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbce2);
        EXPECT(gbc.pc(), 0xca01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ff), 0xcb);
        EXPECT(gbc.readMem(0xca00), 0x32);
        // CB 32 0075
        gbc.setState(0x8389, 0x380f, 0xfa70, 0x8b50, 0x4f00, 0xfb3d, 0x1, 0x0);
        gbc.writeMem(0x8389, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x380f);
        EXPECT(gbc.pc(), 0x838b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8389), 0xcb);
        EXPECT(gbc.readMem(0x838a), 0x32);
        // CB 32 0076
        gbc.setState(0x58ab, 0x8b9c, 0xfc60, 0xe9dd, 0x776, 0x15ce, 0x1, 0x1);
        gbc.writeMem(0x58ab, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8b9c);
        EXPECT(gbc.pc(), 0x58ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0077
        gbc.setState(0x73e5, 0xdd55, 0xf210, 0x64c5, 0x1991, 0xd9bf, 0x1, 0x0);
        gbc.writeMem(0x73e5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xdd55);
        EXPECT(gbc.pc(), 0x73e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0078
        gbc.setState(0xa54, 0x835a, 0x7290, 0x6ec, 0xb6ee, 0x855e, 0x1, 0x1);
        gbc.writeMem(0xa54, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x835a);
        EXPECT(gbc.pc(), 0xa56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0079
        gbc.setState(0x9171, 0xe77f, 0xe80, 0x405f, 0xc03a, 0xefbf, 0x0, 0x1);
        gbc.writeMem(0x9171, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe77f);
        EXPECT(gbc.pc(), 0x9173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9171), 0xcb);
        EXPECT(gbc.readMem(0x9172), 0x32);
        // CB 32 007A
        gbc.setState(0xa4a1, 0x8bdb, 0xcd40, 0x668a, 0x18, 0x612d, 0x0, 0x1);
        gbc.writeMem(0xa4a1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8bdb);
        EXPECT(gbc.pc(), 0xa4a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a1), 0xcb);
        EXPECT(gbc.readMem(0xa4a2), 0x32);
        // CB 32 007B
        gbc.setState(0x95dd, 0xcfa3, 0xc90, 0xd1d7, 0x74e4, 0x72cd, 0x1, 0x1);
        gbc.writeMem(0x95dd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xcfa3);
        EXPECT(gbc.pc(), 0x95df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95dd), 0xcb);
        EXPECT(gbc.readMem(0x95de), 0x32);
        // CB 32 007C
        gbc.setState(0xcdc, 0x95d3, 0x5280, 0xb986, 0x70c1, 0xf321, 0x0, 0x0);
        gbc.writeMem(0xcdc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x95d3);
        EXPECT(gbc.pc(), 0xcde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 007D
        gbc.setState(0xaf56, 0xfa46, 0xa680, 0x3377, 0xd22e, 0x3a66, 0x0, 0x0);
        gbc.writeMem(0xaf56, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfa46);
        EXPECT(gbc.pc(), 0xaf58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf56), 0xcb);
        EXPECT(gbc.readMem(0xaf57), 0x32);
        // CB 32 007E
        gbc.setState(0x571f, 0xb9c6, 0x9300, 0x23b8, 0xe2f9, 0xa652, 0x1, 0x1);
        gbc.writeMem(0x571f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb9c6);
        EXPECT(gbc.pc(), 0x5721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 007F
        gbc.setState(0x551c, 0x2f1f, 0x9cd0, 0xb72, 0xdb2b, 0x814d, 0x0, 0x1);
        gbc.writeMem(0x551c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2f1f);
        EXPECT(gbc.pc(), 0x551e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0080
        gbc.setState(0xa356, 0xbfe6, 0x86a0, 0x90ef, 0x2912, 0x27b1, 0x0, 0x1);
        gbc.writeMem(0xa356, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbfe6);
        EXPECT(gbc.pc(), 0xa358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa356), 0xcb);
        EXPECT(gbc.readMem(0xa357), 0x32);
        // CB 32 0081
        gbc.setState(0x6b3d, 0x6811, 0x9bd0, 0x24e, 0x863c, 0x4aab, 0x0, 0x1);
        gbc.writeMem(0x6b3d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6811);
        EXPECT(gbc.pc(), 0x6b3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0082
        gbc.setState(0x7e8a, 0xb7f3, 0x95a0, 0xef2e, 0x4ffb, 0x3076, 0x1, 0x0);
        gbc.writeMem(0x7e8a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb7f3);
        EXPECT(gbc.pc(), 0x7e8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0083
        gbc.setState(0x2bef, 0xe1eb, 0xb860, 0x4af7, 0x4660, 0x3394, 0x1, 0x1);
        gbc.writeMem(0x2bef, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe1eb);
        EXPECT(gbc.pc(), 0x2bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0084
        gbc.setState(0x68fe, 0x46c8, 0x92a0, 0xac8c, 0xead3, 0x4a3d, 0x0, 0x1);
        gbc.writeMem(0x68fe, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x46c8);
        EXPECT(gbc.pc(), 0x6900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0085
        gbc.setState(0x69d9, 0x754f, 0x14c0, 0x7acf, 0x1706, 0xe937, 0x1, 0x0);
        gbc.writeMem(0x69d9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x754f);
        EXPECT(gbc.pc(), 0x69db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0088
        gbc.setState(0x5ae4, 0xaf87, 0x7260, 0x9de0, 0x2ea5, 0x7ac5, 0x0, 0x1);
        gbc.writeMem(0x5ae4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xaf87);
        EXPECT(gbc.pc(), 0x5ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 008A
        gbc.setState(0xed73, 0xf3a, 0x890, 0xc7b7, 0x527a, 0xa6ba, 0x0, 0x1);
        gbc.writeMem(0xed73, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf3a);
        EXPECT(gbc.pc(), 0xed75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed73), 0xcb);
        EXPECT(gbc.readMem(0xed74), 0x32);
        // CB 32 008B
        gbc.setState(0x3014, 0x3d1c, 0xc030, 0x1963, 0xf166, 0xf121, 0x0, 0x1);
        gbc.writeMem(0x3014, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3d1c);
        EXPECT(gbc.pc(), 0x3016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 008C
        gbc.setState(0x15df, 0x6309, 0xaa90, 0x2d13, 0x2457, 0xca, 0x1, 0x0);
        gbc.writeMem(0x15df, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6309);
        EXPECT(gbc.pc(), 0x15e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 008D
        gbc.setState(0x480f, 0x1b20, 0xef0, 0x883a, 0xddea, 0xa2f5, 0x1, 0x1);
        gbc.writeMem(0x480f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1b20);
        EXPECT(gbc.pc(), 0x4811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 008E
        gbc.setState(0x55bd, 0x4f0b, 0x2920, 0xe6c5, 0xe483, 0x1a9a, 0x0, 0x1);
        gbc.writeMem(0x55bd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4f0b);
        EXPECT(gbc.pc(), 0x55bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 008F
        gbc.setState(0xefea, 0x3198, 0x79a0, 0x6532, 0x11a5, 0xd4c6, 0x0, 0x1);
        gbc.writeMem(0xefea, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3198);
        EXPECT(gbc.pc(), 0xefec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefea), 0xcb);
        EXPECT(gbc.readMem(0xefeb), 0x32);
        // CB 32 0090
        gbc.setState(0x61ad, 0x2e92, 0xebd0, 0xe9a4, 0x96c4, 0x3942, 0x1, 0x0);
        gbc.writeMem(0x61ad, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2e92);
        EXPECT(gbc.pc(), 0x61af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0091
        gbc.setState(0xd8a9, 0x8d25, 0xe7a0, 0x7464, 0xc3c9, 0x9ba5, 0x0, 0x0);
        gbc.writeMem(0xd8a9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8d25);
        EXPECT(gbc.pc(), 0xd8ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8a9), 0xcb);
        EXPECT(gbc.readMem(0xd8aa), 0x32);
        // CB 32 0092
        gbc.setState(0x30ef, 0x758d, 0xa290, 0xe148, 0x56b6, 0x9327, 0x1, 0x1);
        gbc.writeMem(0x30ef, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x758d);
        EXPECT(gbc.pc(), 0x30f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0093
        gbc.setState(0x5cb3, 0x9d54, 0x1a10, 0x23c1, 0xc2d1, 0x1c32, 0x0, 0x0);
        gbc.writeMem(0x5cb3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9d54);
        EXPECT(gbc.pc(), 0x5cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0095
        gbc.setState(0xb93e, 0x8fc, 0x1720, 0x21e8, 0x69ed, 0x6e7, 0x0, 0x0);
        gbc.writeMem(0xb93e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8fc);
        EXPECT(gbc.pc(), 0xb940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93e), 0xcb);
        EXPECT(gbc.readMem(0xb93f), 0x32);
        // CB 32 0096
        gbc.setState(0x985d, 0x63e9, 0xae20, 0x8f0a, 0xc946, 0xc85b, 0x1, 0x1);
        gbc.writeMem(0x985d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x63e9);
        EXPECT(gbc.pc(), 0x985f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x985d), 0xcb);
        EXPECT(gbc.readMem(0x985e), 0x32);
        // CB 32 0097
        gbc.setState(0xbe21, 0x1877, 0x9d90, 0x3928, 0x3fe5, 0x9da4, 0x0, 0x1);
        gbc.writeMem(0xbe21, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1877);
        EXPECT(gbc.pc(), 0xbe23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe21), 0xcb);
        EXPECT(gbc.readMem(0xbe22), 0x32);
        // CB 32 0098
        gbc.setState(0xc751, 0xa7b3, 0x4800, 0x974f, 0xc6ef, 0xfb3d, 0x0, 0x1);
        gbc.writeMem(0xc751, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa7b3);
        EXPECT(gbc.pc(), 0xc753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc751), 0xcb);
        EXPECT(gbc.readMem(0xc752), 0x32);
        // CB 32 0099
        gbc.setState(0x2064, 0x7434, 0x8b00, 0x91b1, 0xf776, 0x99c1, 0x1, 0x0);
        gbc.writeMem(0x2064, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7434);
        EXPECT(gbc.pc(), 0x2066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 009A
        gbc.setState(0x61c5, 0xa6bc, 0xa200, 0xfeae, 0x3bbc, 0xa59a, 0x1, 0x0);
        gbc.writeMem(0x61c5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa6bc);
        EXPECT(gbc.pc(), 0x61c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 009B
        gbc.setState(0x9807, 0x579c, 0x7770, 0x76b0, 0xb6dd, 0x318c, 0x1, 0x0);
        gbc.writeMem(0x9807, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x579c);
        EXPECT(gbc.pc(), 0x9809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9807), 0xcb);
        EXPECT(gbc.readMem(0x9808), 0x32);
        // CB 32 009C
        gbc.setState(0xe5e0, 0xd87f, 0x19b0, 0xab98, 0x3422, 0x460a, 0x1, 0x0);
        gbc.writeMem(0xe5e0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd87f);
        EXPECT(gbc.pc(), 0xe5e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e0), 0xcb);
        EXPECT(gbc.readMem(0xe5e1), 0x32);
        // CB 32 009D
        gbc.setState(0x724e, 0x89f3, 0x8b30, 0xc45f, 0x37d9, 0xa149, 0x0, 0x1);
        gbc.writeMem(0x724e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x89f3);
        EXPECT(gbc.pc(), 0x7250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 009E
        gbc.setState(0x511e, 0x23e8, 0x8f80, 0xa013, 0x7962, 0x3671, 0x0, 0x0);
        gbc.writeMem(0x511e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x23e8);
        EXPECT(gbc.pc(), 0x5120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 009F
        gbc.setState(0xec1f, 0xa908, 0xc330, 0x4bca, 0xc417, 0x8919, 0x1, 0x0);
        gbc.writeMem(0xec1f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa908);
        EXPECT(gbc.pc(), 0xec21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec1f), 0xcb);
        EXPECT(gbc.readMem(0xec20), 0x32);
        // CB 32 00A0
        gbc.setState(0xe573, 0x4e, 0x39a0, 0xac25, 0xbae5, 0xe0b6, 0x0, 0x0);
        gbc.writeMem(0xe573, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4e);
        EXPECT(gbc.pc(), 0xe575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe573), 0xcb);
        EXPECT(gbc.readMem(0xe574), 0x32);
        // CB 32 00A1
        gbc.setState(0xa0ad, 0xde79, 0xfc70, 0x51c4, 0xf2c2, 0xc5ca, 0x1, 0x1);
        gbc.writeMem(0xa0ad, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xde79);
        EXPECT(gbc.pc(), 0xa0af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ad), 0xcb);
        EXPECT(gbc.readMem(0xa0ae), 0x32);
        // CB 32 00A2
        gbc.setState(0x26e7, 0x9751, 0x540, 0xa10d, 0x99a4, 0x8939, 0x0, 0x1);
        gbc.writeMem(0x26e7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9751);
        EXPECT(gbc.pc(), 0x26e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00A3
        gbc.setState(0x3016, 0xb8d4, 0xab60, 0x6e6d, 0xda45, 0x28e5, 0x0, 0x1);
        gbc.writeMem(0x3016, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb8d4);
        EXPECT(gbc.pc(), 0x3018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00A4
        gbc.setState(0x7319, 0x6a9b, 0xa620, 0xc0c2, 0x8d97, 0x19e5, 0x0, 0x1);
        gbc.writeMem(0x7319, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6a9b);
        EXPECT(gbc.pc(), 0x731b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00A5
        gbc.setState(0xab2b, 0x852a, 0x3240, 0x67bb, 0x56e3, 0xf04f, 0x1, 0x1);
        gbc.writeMem(0xab2b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x852a);
        EXPECT(gbc.pc(), 0xab2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab2b), 0xcb);
        EXPECT(gbc.readMem(0xab2c), 0x32);
        // CB 32 00A6
        gbc.setState(0x7b59, 0x8692, 0x7640, 0x8fda, 0x683f, 0x4cdd, 0x1, 0x1);
        gbc.writeMem(0x7b59, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8692);
        EXPECT(gbc.pc(), 0x7b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00A7
        gbc.setState(0x3c57, 0xe985, 0x4ca0, 0x3d38, 0x9354, 0x8f64, 0x1, 0x0);
        gbc.writeMem(0x3c57, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe985);
        EXPECT(gbc.pc(), 0x3c59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00A9
        gbc.setState(0xdc53, 0xd96, 0x1b0, 0x1f59, 0x6829, 0x732d, 0x0, 0x0);
        gbc.writeMem(0xdc53, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd96);
        EXPECT(gbc.pc(), 0xdc55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc53), 0xcb);
        EXPECT(gbc.readMem(0xdc54), 0x32);
        // CB 32 00AA
        gbc.setState(0x5e0, 0x4f9, 0x8b10, 0x6b5, 0x5c53, 0xb567, 0x1, 0x0);
        gbc.writeMem(0x5e0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4f9);
        EXPECT(gbc.pc(), 0x5e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00AB
        gbc.setState(0x48ad, 0x64d2, 0x6740, 0x743d, 0x1c87, 0x5748, 0x0, 0x0);
        gbc.writeMem(0x48ad, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x64d2);
        EXPECT(gbc.pc(), 0x48af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00AC
        gbc.setState(0xc2c2, 0xd031, 0x7810, 0x4ff0, 0x32f3, 0xcc9f, 0x0, 0x1);
        gbc.writeMem(0xc2c2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd031);
        EXPECT(gbc.pc(), 0xc2c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c2), 0xcb);
        EXPECT(gbc.readMem(0xc2c3), 0x32);
        // CB 32 00AD
        gbc.setState(0x1a38, 0xedf, 0x5dc0, 0x53cd, 0x5cec, 0x3aee, 0x1, 0x0);
        gbc.writeMem(0x1a38, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xedf);
        EXPECT(gbc.pc(), 0x1a3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00AE
        gbc.setState(0xa053, 0x3df, 0xebe0, 0x965a, 0x61c5, 0x116c, 0x0, 0x1);
        gbc.writeMem(0xa053, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3df);
        EXPECT(gbc.pc(), 0xa055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa053), 0xcb);
        EXPECT(gbc.readMem(0xa054), 0x32);
        // CB 32 00AF
        gbc.setState(0xae55, 0x8653, 0x73e0, 0xb1e6, 0x269f, 0x8bf7, 0x1, 0x1);
        gbc.writeMem(0xae55, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8653);
        EXPECT(gbc.pc(), 0xae57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae55), 0xcb);
        EXPECT(gbc.readMem(0xae56), 0x32);
        // CB 32 00B0
        gbc.setState(0x692, 0x5b81, 0x87b0, 0xeafa, 0x31ac, 0x9a97, 0x1, 0x0);
        gbc.writeMem(0x692, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5b81);
        EXPECT(gbc.pc(), 0x694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00B1
        gbc.setState(0x1542, 0x6902, 0xbcf0, 0x58dc, 0x22d7, 0xfb2c, 0x0, 0x0);
        gbc.writeMem(0x1542, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6902);
        EXPECT(gbc.pc(), 0x1544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00B2
        gbc.setState(0x601c, 0x5a9b, 0xb140, 0x9cdc, 0x2963, 0x51ca, 0x0, 0x1);
        gbc.writeMem(0x601c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5a9b);
        EXPECT(gbc.pc(), 0x601e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00B3
        gbc.setState(0xbc69, 0x33f7, 0x20b0, 0xae93, 0xe088, 0x2b2d, 0x0, 0x1);
        gbc.writeMem(0xbc69, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x33f7);
        EXPECT(gbc.pc(), 0xbc6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc69), 0xcb);
        EXPECT(gbc.readMem(0xbc6a), 0x32);
        // CB 32 00B4
        gbc.setState(0x917f, 0x3a2c, 0xb800, 0xe95e, 0xf5e5, 0xb94, 0x0, 0x1);
        gbc.writeMem(0x917f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3a2c);
        EXPECT(gbc.pc(), 0x9181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x917f), 0xcb);
        EXPECT(gbc.readMem(0x9180), 0x32);
        // CB 32 00B5
        gbc.setState(0x67e5, 0x6420, 0xe7f0, 0x5f59, 0x2634, 0x1af3, 0x1, 0x1);
        gbc.writeMem(0x67e5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6420);
        EXPECT(gbc.pc(), 0x67e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00B6
        gbc.setState(0x2756, 0xc32b, 0xbcf0, 0xb74, 0x72b9, 0xfb2d, 0x1, 0x1);
        gbc.writeMem(0x2756, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc32b);
        EXPECT(gbc.pc(), 0x2758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00B7
        gbc.setState(0xc569, 0xfd3e, 0x9ef0, 0x33e2, 0xbf40, 0xcd13, 0x0, 0x1);
        gbc.writeMem(0xc569, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfd3e);
        EXPECT(gbc.pc(), 0xc56b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc569), 0xcb);
        EXPECT(gbc.readMem(0xc56a), 0x32);
        // CB 32 00B8
        gbc.setState(0x942d, 0x81a8, 0x1f80, 0xa0e6, 0x6e86, 0xa8c9, 0x0, 0x0);
        gbc.writeMem(0x942d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x81a8);
        EXPECT(gbc.pc(), 0x942f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x942d), 0xcb);
        EXPECT(gbc.readMem(0x942e), 0x32);
        // CB 32 00B9
        gbc.setState(0xa40b, 0xe8e5, 0x8080, 0x7b31, 0x3277, 0x87f4, 0x1, 0x0);
        gbc.writeMem(0xa40b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe8e5);
        EXPECT(gbc.pc(), 0xa40d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa40b), 0xcb);
        EXPECT(gbc.readMem(0xa40c), 0x32);
        // CB 32 00BA
        gbc.setState(0x1440, 0x385f, 0x5df0, 0x71c6, 0x68bc, 0xce3c, 0x1, 0x1);
        gbc.writeMem(0x1440, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x385f);
        EXPECT(gbc.pc(), 0x1442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00BC
        gbc.setState(0x853a, 0x7adc, 0x3e00, 0xb347, 0xf25f, 0x8f8e, 0x1, 0x0);
        gbc.writeMem(0x853a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7adc);
        EXPECT(gbc.pc(), 0x853c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x853a), 0xcb);
        EXPECT(gbc.readMem(0x853b), 0x32);
        // CB 32 00BD
        gbc.setState(0x2b21, 0x852f, 0x44d0, 0x2857, 0x2f46, 0xad58, 0x1, 0x1);
        gbc.writeMem(0x2b21, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x852f);
        EXPECT(gbc.pc(), 0x2b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00BE
        gbc.setState(0xa742, 0xc29c, 0xa1e0, 0x831c, 0xad4f, 0xe463, 0x0, 0x0);
        gbc.writeMem(0xa742, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc29c);
        EXPECT(gbc.pc(), 0xa744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa742), 0xcb);
        EXPECT(gbc.readMem(0xa743), 0x32);
        // CB 32 00BF
        gbc.setState(0x65c3, 0xe278, 0x6cb0, 0xcf22, 0x6940, 0x406a, 0x0, 0x0);
        gbc.writeMem(0x65c3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe278);
        EXPECT(gbc.pc(), 0x65c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00C0
        gbc.setState(0x537a, 0x9e53, 0x3c10, 0xffc, 0xdd49, 0x4367, 0x0, 0x1);
        gbc.writeMem(0x537a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9e53);
        EXPECT(gbc.pc(), 0x537c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00C1
        gbc.setState(0xd98d, 0x2a13, 0x32d0, 0x47a0, 0x6fd2, 0x53cb, 0x0, 0x1);
        gbc.writeMem(0xd98d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2a13);
        EXPECT(gbc.pc(), 0xd98f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd98d), 0xcb);
        EXPECT(gbc.readMem(0xd98e), 0x32);
        // CB 32 00C3
        gbc.setState(0x88ea, 0x5672, 0x1fd0, 0x6c28, 0xea3a, 0xfd63, 0x0, 0x0);
        gbc.writeMem(0x88ea, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5672);
        EXPECT(gbc.pc(), 0x88ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ea), 0xcb);
        EXPECT(gbc.readMem(0x88eb), 0x32);
        // CB 32 00C4
        gbc.setState(0x4216, 0xbf5a, 0xb910, 0x6e39, 0xa468, 0x10a4, 0x1, 0x1);
        gbc.writeMem(0x4216, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbf5a);
        EXPECT(gbc.pc(), 0x4218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00C6
        gbc.setState(0xa31c, 0x5dfd, 0x1340, 0x6d5, 0xcb6, 0x5596, 0x1, 0x0);
        gbc.writeMem(0xa31c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5dfd);
        EXPECT(gbc.pc(), 0xa31e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31c), 0xcb);
        EXPECT(gbc.readMem(0xa31d), 0x32);
        // CB 32 00C7
        gbc.setState(0xd622, 0x903b, 0xd0c0, 0x8af6, 0xead9, 0x9797, 0x0, 0x1);
        gbc.writeMem(0xd622, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x903b);
        EXPECT(gbc.pc(), 0xd624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd622), 0xcb);
        EXPECT(gbc.readMem(0xd623), 0x32);
        // CB 32 00C8
        gbc.setState(0xc899, 0x94ac, 0x2340, 0xf320, 0xdfba, 0xcf5d, 0x0, 0x1);
        gbc.writeMem(0xc899, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x94ac);
        EXPECT(gbc.pc(), 0xc89b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc899), 0xcb);
        EXPECT(gbc.readMem(0xc89a), 0x32);
        // CB 32 00C9
        gbc.setState(0xb9da, 0xa08d, 0x40, 0x543e, 0x3b06, 0xe14, 0x1, 0x0);
        gbc.writeMem(0xb9da, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa08d);
        EXPECT(gbc.pc(), 0xb9dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9da), 0xcb);
        EXPECT(gbc.readMem(0xb9db), 0x32);
        // CB 32 00CA
        gbc.setState(0x9f38, 0xc115, 0xc930, 0x6dc1, 0x8e6, 0x524, 0x0, 0x1);
        gbc.writeMem(0x9f38, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc115);
        EXPECT(gbc.pc(), 0x9f3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f38), 0xcb);
        EXPECT(gbc.readMem(0x9f39), 0x32);
        // CB 32 00CB
        gbc.setState(0xa1bf, 0x4eb0, 0x71a0, 0xba67, 0xf670, 0x3f58, 0x0, 0x1);
        gbc.writeMem(0xa1bf, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4eb0);
        EXPECT(gbc.pc(), 0xa1c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1bf), 0xcb);
        EXPECT(gbc.readMem(0xa1c0), 0x32);
        // CB 32 00CC
        gbc.setState(0x4b2c, 0xa5ad, 0xb3a0, 0xfbfc, 0xfa65, 0x54cb, 0x1, 0x0);
        gbc.writeMem(0x4b2c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa5ad);
        EXPECT(gbc.pc(), 0x4b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00CD
        gbc.setState(0xe5be, 0x191a, 0xcdd0, 0x6a20, 0xbcd1, 0x62a8, 0x0, 0x1);
        gbc.writeMem(0xe5be, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x191a);
        EXPECT(gbc.pc(), 0xe5c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5be), 0xcb);
        EXPECT(gbc.readMem(0xe5bf), 0x32);
        // CB 32 00CE
        gbc.setState(0x708d, 0x354f, 0xcb80, 0x2307, 0xff6f, 0x6eea, 0x1, 0x1);
        gbc.writeMem(0x708d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x354f);
        EXPECT(gbc.pc(), 0x708f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00CF
        gbc.setState(0x58a2, 0x7282, 0x740, 0xca34, 0xcc08, 0x867e, 0x0, 0x1);
        gbc.writeMem(0x58a2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7282);
        EXPECT(gbc.pc(), 0x58a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00D0
        gbc.setState(0x3787, 0x55ee, 0xdf90, 0x8e0f, 0x81f0, 0x263b, 0x0, 0x0);
        gbc.writeMem(0x3787, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x55ee);
        EXPECT(gbc.pc(), 0x3789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00D1
        gbc.setState(0x724e, 0x6720, 0x70e0, 0x27fd, 0x4304, 0x7848, 0x0, 0x1);
        gbc.writeMem(0x724e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6720);
        EXPECT(gbc.pc(), 0x7250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00D2
        gbc.setState(0x3572, 0x414a, 0xc580, 0x251c, 0x10fc, 0x93aa, 0x1, 0x1);
        gbc.writeMem(0x3572, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x414a);
        EXPECT(gbc.pc(), 0x3574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00D3
        gbc.setState(0x62a2, 0xc5fc, 0xe480, 0x6464, 0xa966, 0xb502, 0x0, 0x0);
        gbc.writeMem(0x62a2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc5fc);
        EXPECT(gbc.pc(), 0x62a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00D4
        gbc.setState(0x7972, 0xf8a3, 0x8080, 0x5b4f, 0xe537, 0x61d1, 0x1, 0x0);
        gbc.writeMem(0x7972, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf8a3);
        EXPECT(gbc.pc(), 0x7974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00D5
        gbc.setState(0x9e9d, 0x4227, 0xe30, 0xd39f, 0xe28b, 0x6a93, 0x0, 0x0);
        gbc.writeMem(0x9e9d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4227);
        EXPECT(gbc.pc(), 0x9e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e9d), 0xcb);
        EXPECT(gbc.readMem(0x9e9e), 0x32);
        // CB 32 00D6
        gbc.setState(0x4c87, 0xb791, 0x87f0, 0x1540, 0x28f7, 0x6341, 0x1, 0x1);
        gbc.writeMem(0x4c87, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb791);
        EXPECT(gbc.pc(), 0x4c89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00D7
        gbc.setState(0xe76d, 0x317d, 0x3f80, 0xb334, 0x74ee, 0xafec, 0x0, 0x1);
        gbc.writeMem(0xe76d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x317d);
        EXPECT(gbc.pc(), 0xe76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe76d), 0xcb);
        EXPECT(gbc.readMem(0xe76e), 0x32);
        // CB 32 00D8
        gbc.setState(0xa6df, 0x89af, 0xaa80, 0x1778, 0x2da0, 0x6fe4, 0x0, 0x0);
        gbc.writeMem(0xa6df, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x89af);
        EXPECT(gbc.pc(), 0xa6e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6df), 0xcb);
        EXPECT(gbc.readMem(0xa6e0), 0x32);
        // CB 32 00D9
        gbc.setState(0xef83, 0xfd15, 0xb2a0, 0x2278, 0x583e, 0x62c3, 0x0, 0x1);
        gbc.writeMem(0xef83, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfd15);
        EXPECT(gbc.pc(), 0xef85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef83), 0xcb);
        EXPECT(gbc.readMem(0xef84), 0x32);
        // CB 32 00DA
        gbc.setState(0x54e1, 0x911d, 0x60a0, 0x6d54, 0x6877, 0xf40c, 0x1, 0x0);
        gbc.writeMem(0x54e1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x911d);
        EXPECT(gbc.pc(), 0x54e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00DB
        gbc.setState(0xd7cb, 0x74ca, 0xef20, 0x767f, 0x622c, 0xe1f9, 0x1, 0x1);
        gbc.writeMem(0xd7cb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x74ca);
        EXPECT(gbc.pc(), 0xd7cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7cb), 0xcb);
        EXPECT(gbc.readMem(0xd7cc), 0x32);
        // CB 32 00DC
        gbc.setState(0x9881, 0x5ea8, 0x9d70, 0x1dcc, 0xb02c, 0x4728, 0x1, 0x0);
        gbc.writeMem(0x9881, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5ea8);
        EXPECT(gbc.pc(), 0x9883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9881), 0xcb);
        EXPECT(gbc.readMem(0x9882), 0x32);
        // CB 32 00DD
        gbc.setState(0xde3a, 0x1ef4, 0xf9f0, 0x56d0, 0x5ba, 0x49df, 0x0, 0x1);
        gbc.writeMem(0xde3a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1ef4);
        EXPECT(gbc.pc(), 0xde3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde3a), 0xcb);
        EXPECT(gbc.readMem(0xde3b), 0x32);
        // CB 32 00DE
        gbc.setState(0x885a, 0xeb52, 0x5180, 0x6a13, 0x1566, 0xd4da, 0x1, 0x1);
        gbc.writeMem(0x885a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xeb52);
        EXPECT(gbc.pc(), 0x885c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x885a), 0xcb);
        EXPECT(gbc.readMem(0x885b), 0x32);
        // CB 32 00DF
        gbc.setState(0x9244, 0xa954, 0xb1b0, 0x2a67, 0x79e5, 0xed6, 0x0, 0x0);
        gbc.writeMem(0x9244, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa954);
        EXPECT(gbc.pc(), 0x9246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9244), 0xcb);
        EXPECT(gbc.readMem(0x9245), 0x32);
        // CB 32 00E0
        gbc.setState(0x7ffa, 0x6511, 0x7200, 0xc42, 0x3a62, 0x974d, 0x1, 0x0);
        gbc.writeMem(0x7ffa, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6511);
        EXPECT(gbc.pc(), 0x7ffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00E1
        gbc.setState(0xe779, 0xa80, 0xf600, 0xe2c3, 0x9ea6, 0x50f2, 0x0, 0x0);
        gbc.writeMem(0xe779, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa80);
        EXPECT(gbc.pc(), 0xe77b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe779), 0xcb);
        EXPECT(gbc.readMem(0xe77a), 0x32);
        // CB 32 00E3
        gbc.setState(0x25c4, 0xa09e, 0xafb0, 0x7ba7, 0x6154, 0xce92, 0x0, 0x0);
        gbc.writeMem(0x25c4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa09e);
        EXPECT(gbc.pc(), 0x25c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00E4
        gbc.setState(0xcb7a, 0x2063, 0xb780, 0x46f9, 0x8671, 0x629, 0x1, 0x1);
        gbc.writeMem(0xcb7a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2063);
        EXPECT(gbc.pc(), 0xcb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb7a), 0xcb);
        EXPECT(gbc.readMem(0xcb7b), 0x32);
        // CB 32 00E5
        gbc.setState(0x592, 0xd6e5, 0x5710, 0x5129, 0x365b, 0x2e36, 0x0, 0x1);
        gbc.writeMem(0x592, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd6e5);
        EXPECT(gbc.pc(), 0x594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00E6
        gbc.setState(0x16ac, 0xbb27, 0x2dc0, 0xecae, 0x7887, 0xd7e9, 0x1, 0x1);
        gbc.writeMem(0x16ac, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbb27);
        EXPECT(gbc.pc(), 0x16ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00E7
        gbc.setState(0x311e, 0x9ff6, 0x6ff0, 0x5617, 0xf3af, 0x5c10, 0x1, 0x0);
        gbc.writeMem(0x311e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9ff6);
        EXPECT(gbc.pc(), 0x3120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00E8
        gbc.setState(0x4b6f, 0x62fe, 0xcef0, 0x1947, 0xb60f, 0x287, 0x1, 0x1);
        gbc.writeMem(0x4b6f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x62fe);
        EXPECT(gbc.pc(), 0x4b71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00E9
        gbc.setState(0x2a16, 0x485, 0xf1b0, 0x8c2c, 0xd723, 0x133a, 0x1, 0x1);
        gbc.writeMem(0x2a16, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x485);
        EXPECT(gbc.pc(), 0x2a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00EA
        gbc.setState(0x44f, 0xaaaa, 0x8580, 0x114e, 0xec9a, 0xcace, 0x0, 0x0);
        gbc.writeMem(0x44f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xaaaa);
        EXPECT(gbc.pc(), 0x451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00EB
        gbc.setState(0x1be4, 0xbbee, 0xb890, 0x45f5, 0xc9bb, 0x2715, 0x0, 0x1);
        gbc.writeMem(0x1be4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbbee);
        EXPECT(gbc.pc(), 0x1be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00ED
        gbc.setState(0x5cae, 0x574a, 0x9a50, 0x1fd0, 0x16c0, 0xb093, 0x0, 0x1);
        gbc.writeMem(0x5cae, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x574a);
        EXPECT(gbc.pc(), 0x5cb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00EF
        gbc.setState(0xdad2, 0xc02b, 0x8d30, 0xba81, 0x24f4, 0x49f9, 0x0, 0x1);
        gbc.writeMem(0xdad2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc02b);
        EXPECT(gbc.pc(), 0xdad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad2), 0xcb);
        EXPECT(gbc.readMem(0xdad3), 0x32);
        // CB 32 00F0
        gbc.setState(0x85a4, 0xe01b, 0xeea0, 0x6272, 0x7c2b, 0xd7bb, 0x1, 0x0);
        gbc.writeMem(0x85a4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe01b);
        EXPECT(gbc.pc(), 0x85a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a4), 0xcb);
        EXPECT(gbc.readMem(0x85a5), 0x32);
        // CB 32 00F1
        gbc.setState(0x8cad, 0x158b, 0x1e30, 0xf26f, 0x5845, 0xbc98, 0x1, 0x0);
        gbc.writeMem(0x8cad, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x158b);
        EXPECT(gbc.pc(), 0x8caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cad), 0xcb);
        EXPECT(gbc.readMem(0x8cae), 0x32);
        // CB 32 00F2
        gbc.setState(0xb29d, 0x93a5, 0x1f80, 0x608, 0xecd5, 0xb2d1, 0x0, 0x1);
        gbc.writeMem(0xb29d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x93a5);
        EXPECT(gbc.pc(), 0xb29f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29d), 0xcb);
        EXPECT(gbc.readMem(0xb29e), 0x32);
        // CB 32 00F3
        gbc.setState(0x988b, 0x657c, 0x5f40, 0xff2a, 0x342d, 0xee97, 0x0, 0x0);
        gbc.writeMem(0x988b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x657c);
        EXPECT(gbc.pc(), 0x988d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x988b), 0xcb);
        EXPECT(gbc.readMem(0x988c), 0x32);
        // CB 32 00F4
        gbc.setState(0xb482, 0x111e, 0x2da0, 0xad60, 0x6941, 0xd11f, 0x0, 0x0);
        gbc.writeMem(0xb482, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x111e);
        EXPECT(gbc.pc(), 0xb484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb482), 0xcb);
        EXPECT(gbc.readMem(0xb483), 0x32);
        // CB 32 00F5
        gbc.setState(0x5d6d, 0x4b04, 0x8b50, 0x4586, 0xd03, 0xf448, 0x0, 0x1);
        gbc.writeMem(0x5d6d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4b04);
        EXPECT(gbc.pc(), 0x5d6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00F6
        gbc.setState(0xc4c3, 0x2f7b, 0x9580, 0x89cf, 0x9be4, 0xbd9d, 0x0, 0x1);
        gbc.writeMem(0xc4c3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2f7b);
        EXPECT(gbc.pc(), 0xc4c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c3), 0xcb);
        EXPECT(gbc.readMem(0xc4c4), 0x32);
        // CB 32 00F7
        gbc.setState(0x52cc, 0xd4ab, 0x6f10, 0x521a, 0xd775, 0x22ac, 0x0, 0x1);
        gbc.writeMem(0x52cc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd4ab);
        EXPECT(gbc.pc(), 0x52ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00F8
        gbc.setState(0xe491, 0x4cc2, 0xac0, 0x7342, 0xe373, 0xd22a, 0x0, 0x1);
        gbc.writeMem(0xe491, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4cc2);
        EXPECT(gbc.pc(), 0xe493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe491), 0xcb);
        EXPECT(gbc.readMem(0xe492), 0x32);
        // CB 32 00F9
        gbc.setState(0x89b9, 0x8284, 0xd130, 0xabcc, 0x8c7, 0x8bb9, 0x1, 0x0);
        gbc.writeMem(0x89b9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8284);
        EXPECT(gbc.pc(), 0x89bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b9), 0xcb);
        EXPECT(gbc.readMem(0x89ba), 0x32);
        // CB 32 00FA
        gbc.setState(0xe627, 0xd929, 0x55f0, 0xd1cb, 0xb2c8, 0x6a9f, 0x0, 0x0);
        gbc.writeMem(0xe627, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd929);
        EXPECT(gbc.pc(), 0xe629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe627), 0xcb);
        EXPECT(gbc.readMem(0xe628), 0x32);
        // CB 32 00FB
        gbc.setState(0x3f3e, 0x84b2, 0x330, 0xe550, 0xc6a1, 0x311d, 0x0, 0x0);
        gbc.writeMem(0x3f3e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x84b2);
        EXPECT(gbc.pc(), 0x3f40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 00FC
        gbc.setState(0xdf08, 0x6104, 0x6e40, 0xe12e, 0x68ec, 0x17ef, 0x1, 0x0);
        gbc.writeMem(0xdf08, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6104);
        EXPECT(gbc.pc(), 0xdf0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf08), 0xcb);
        EXPECT(gbc.readMem(0xdf09), 0x32);
        // CB 32 00FE
        gbc.setState(0x83e3, 0x62b2, 0xd0f0, 0xf25e, 0xfaa2, 0x9b07, 0x1, 0x1);
        gbc.writeMem(0x83e3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x62b2);
        EXPECT(gbc.pc(), 0x83e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e3), 0xcb);
        EXPECT(gbc.readMem(0x83e4), 0x32);
        // CB 32 00FF
        gbc.setState(0xeef0, 0xe57e, 0x4090, 0x9f92, 0xd11b, 0x37a1, 0x0, 0x1);
        gbc.writeMem(0xeef0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe57e);
        EXPECT(gbc.pc(), 0xeef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeef0), 0xcb);
        EXPECT(gbc.readMem(0xeef1), 0x32);
        // CB 32 0100
        gbc.setState(0x7595, 0xd9ed, 0x4780, 0xba58, 0x6597, 0xa7f8, 0x1, 0x0);
        gbc.writeMem(0x7595, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd9ed);
        EXPECT(gbc.pc(), 0x7597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0101
        gbc.setState(0x1501, 0xdaa3, 0x2c80, 0x7ba4, 0x3688, 0xfefd, 0x1, 0x0);
        gbc.writeMem(0x1501, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdaa3);
        EXPECT(gbc.pc(), 0x1503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0102
        gbc.setState(0x8e06, 0x179e, 0x54e0, 0xe261, 0x30c9, 0xced3, 0x0, 0x1);
        gbc.writeMem(0x8e06, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x179e);
        EXPECT(gbc.pc(), 0x8e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e06), 0xcb);
        EXPECT(gbc.readMem(0x8e07), 0x32);
        // CB 32 0103
        gbc.setState(0xd07, 0xab74, 0xb7b0, 0xadcc, 0x81b7, 0x96d6, 0x1, 0x0);
        gbc.writeMem(0xd07, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xab74);
        EXPECT(gbc.pc(), 0xd09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0104
        gbc.setState(0xeae1, 0xcb85, 0x63a0, 0x3da6, 0xd847, 0xf369, 0x0, 0x1);
        gbc.writeMem(0xeae1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcb85);
        EXPECT(gbc.pc(), 0xeae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae1), 0xcb);
        EXPECT(gbc.readMem(0xeae2), 0x32);
        // CB 32 0106
        gbc.setState(0xe0b8, 0xbbb1, 0xd4e0, 0xbe9c, 0x7255, 0xf622, 0x1, 0x0);
        gbc.writeMem(0xe0b8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbbb1);
        EXPECT(gbc.pc(), 0xe0ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0b8), 0xcb);
        EXPECT(gbc.readMem(0xe0b9), 0x32);
        // CB 32 0107
        gbc.setState(0x3bc5, 0x55b0, 0x11d0, 0xdc79, 0xcf16, 0xa405, 0x1, 0x1);
        gbc.writeMem(0x3bc5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x55b0);
        EXPECT(gbc.pc(), 0x3bc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0108
        gbc.setState(0x46f, 0x102b, 0x7640, 0xff20, 0x924a, 0x28f7, 0x1, 0x1);
        gbc.writeMem(0x46f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x102b);
        EXPECT(gbc.pc(), 0x471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0109
        gbc.setState(0x191, 0xd668, 0xa0d0, 0x5e2d, 0xc69b, 0x76f0, 0x0, 0x1);
        gbc.writeMem(0x191, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd668);
        EXPECT(gbc.pc(), 0x193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 010A
        gbc.setState(0xc502, 0x4990, 0xdc10, 0x7c71, 0xb339, 0x5e1, 0x1, 0x1);
        gbc.writeMem(0xc502, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4990);
        EXPECT(gbc.pc(), 0xc504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc502), 0xcb);
        EXPECT(gbc.readMem(0xc503), 0x32);
        // CB 32 010B
        gbc.setState(0x3dda, 0x8774, 0x9330, 0x95c0, 0xb529, 0xb76f, 0x1, 0x1);
        gbc.writeMem(0x3dda, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8774);
        EXPECT(gbc.pc(), 0x3ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 010C
        gbc.setState(0x8d8a, 0xd28e, 0xb2c0, 0xf070, 0x30b1, 0x379c, 0x1, 0x1);
        gbc.writeMem(0x8d8a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd28e);
        EXPECT(gbc.pc(), 0x8d8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8a), 0xcb);
        EXPECT(gbc.readMem(0x8d8b), 0x32);
        // CB 32 010D
        gbc.setState(0x860b, 0xf168, 0xb730, 0x6337, 0xb4ef, 0xcffd, 0x1, 0x0);
        gbc.writeMem(0x860b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf168);
        EXPECT(gbc.pc(), 0x860d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860b), 0xcb);
        EXPECT(gbc.readMem(0x860c), 0x32);
        // CB 32 010E
        gbc.setState(0x43bb, 0xc496, 0x9b0, 0x404e, 0xe83, 0x327d, 0x0, 0x0);
        gbc.writeMem(0x43bb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc496);
        EXPECT(gbc.pc(), 0x43bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 010F
        gbc.setState(0xc7cb, 0xdc30, 0x6730, 0x41c8, 0x9eb2, 0x59b0, 0x0, 0x0);
        gbc.writeMem(0xc7cb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdc30);
        EXPECT(gbc.pc(), 0xc7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7cb), 0xcb);
        EXPECT(gbc.readMem(0xc7cc), 0x32);
        // CB 32 0110
        gbc.setState(0x7752, 0xf458, 0xd2b0, 0xab81, 0x99e2, 0x24d0, 0x0, 0x1);
        gbc.writeMem(0x7752, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf458);
        EXPECT(gbc.pc(), 0x7754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0111
        gbc.setState(0xdfad, 0x44ed, 0xf450, 0x4ebd, 0x3fb5, 0xdeff, 0x1, 0x0);
        gbc.writeMem(0xdfad, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x44ed);
        EXPECT(gbc.pc(), 0xdfaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfad), 0xcb);
        EXPECT(gbc.readMem(0xdfae), 0x32);
        // CB 32 0112
        gbc.setState(0xed9, 0xc2f3, 0x71a0, 0x1e14, 0x33d5, 0x6694, 0x0, 0x0);
        gbc.writeMem(0xed9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc2f3);
        EXPECT(gbc.pc(), 0xedb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0113
        gbc.setState(0x8061, 0xd377, 0x9e50, 0xbf00, 0x7739, 0xdc3e, 0x0, 0x1);
        gbc.writeMem(0x8061, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd377);
        EXPECT(gbc.pc(), 0x8063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8061), 0xcb);
        EXPECT(gbc.readMem(0x8062), 0x32);
        // CB 32 0114
        gbc.setState(0xb6f8, 0xed6b, 0x4120, 0xfa54, 0x8455, 0x4d6a, 0x1, 0x1);
        gbc.writeMem(0xb6f8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xed6b);
        EXPECT(gbc.pc(), 0xb6fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f8), 0xcb);
        EXPECT(gbc.readMem(0xb6f9), 0x32);
        // CB 32 0115
        gbc.setState(0xaf08, 0xe24b, 0xa910, 0x976a, 0x9aa8, 0xdeb3, 0x1, 0x0);
        gbc.writeMem(0xaf08, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe24b);
        EXPECT(gbc.pc(), 0xaf0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf08), 0xcb);
        EXPECT(gbc.readMem(0xaf09), 0x32);
        // CB 32 0117
        gbc.setState(0x429, 0x97ef, 0xfd20, 0x8862, 0xfa21, 0x14f7, 0x1, 0x0);
        gbc.writeMem(0x429, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x97ef);
        EXPECT(gbc.pc(), 0x42b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0118
        gbc.setState(0x72db, 0x59a8, 0x11f0, 0xe4, 0xa5b1, 0xd6e3, 0x0, 0x1);
        gbc.writeMem(0x72db, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x59a8);
        EXPECT(gbc.pc(), 0x72dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0119
        gbc.setState(0xd5fa, 0x2b87, 0xbbf0, 0x9817, 0x1c8e, 0x7c45, 0x1, 0x1);
        gbc.writeMem(0xd5fa, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2b87);
        EXPECT(gbc.pc(), 0xd5fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5fa), 0xcb);
        EXPECT(gbc.readMem(0xd5fb), 0x32);
        // CB 32 011A
        gbc.setState(0x1592, 0xe45, 0xf570, 0x36bf, 0x4a3b, 0x7a6c, 0x0, 0x1);
        gbc.writeMem(0x1592, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe45);
        EXPECT(gbc.pc(), 0x1594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 011B
        gbc.setState(0xd9e8, 0x249f, 0x67c0, 0x1b78, 0x43c, 0x3604, 0x1, 0x0);
        gbc.writeMem(0xd9e8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x249f);
        EXPECT(gbc.pc(), 0xd9ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e8), 0xcb);
        EXPECT(gbc.readMem(0xd9e9), 0x32);
        // CB 32 011C
        gbc.setState(0x4a9b, 0xf17f, 0x8200, 0x63d7, 0xb437, 0x12dc, 0x0, 0x1);
        gbc.writeMem(0x4a9b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf17f);
        EXPECT(gbc.pc(), 0x4a9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 011D
        gbc.setState(0x200a, 0x1c0d, 0x6260, 0xb1be, 0x30, 0x2d89, 0x0, 0x0);
        gbc.writeMem(0x200a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1c0d);
        EXPECT(gbc.pc(), 0x200c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 011E
        gbc.setState(0xbbac, 0x4f70, 0x9a80, 0x1ebd, 0x112b, 0xef13, 0x1, 0x1);
        gbc.writeMem(0xbbac, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4f70);
        EXPECT(gbc.pc(), 0xbbae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbac), 0xcb);
        EXPECT(gbc.readMem(0xbbad), 0x32);
        // CB 32 011F
        gbc.setState(0xac23, 0x3aac, 0x81c0, 0x97c0, 0x495f, 0x990b, 0x0, 0x1);
        gbc.writeMem(0xac23, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3aac);
        EXPECT(gbc.pc(), 0xac25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac23), 0xcb);
        EXPECT(gbc.readMem(0xac24), 0x32);
        // CB 32 0120
        gbc.setState(0x542f, 0x519a, 0xce80, 0x7b0a, 0x4c0, 0xad48, 0x0, 0x1);
        gbc.writeMem(0x542f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x519a);
        EXPECT(gbc.pc(), 0x5431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0121
        gbc.setState(0x5c0e, 0x7b34, 0xa280, 0x8661, 0xca5d, 0xc41c, 0x1, 0x0);
        gbc.writeMem(0x5c0e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7b34);
        EXPECT(gbc.pc(), 0x5c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0122
        gbc.setState(0xd0a6, 0x5485, 0xc410, 0x4580, 0x57a9, 0xcc4d, 0x1, 0x1);
        gbc.writeMem(0xd0a6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5485);
        EXPECT(gbc.pc(), 0xd0a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a6), 0xcb);
        EXPECT(gbc.readMem(0xd0a7), 0x32);
        // CB 32 0123
        gbc.setState(0x9f2b, 0x9aed, 0xda10, 0xe7b5, 0x9ea9, 0xc2b0, 0x1, 0x0);
        gbc.writeMem(0x9f2b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9aed);
        EXPECT(gbc.pc(), 0x9f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f2b), 0xcb);
        EXPECT(gbc.readMem(0x9f2c), 0x32);
        // CB 32 0124
        gbc.setState(0x5a33, 0x1b8a, 0x6110, 0x93c8, 0x5236, 0x81d, 0x0, 0x1);
        gbc.writeMem(0x5a33, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1b8a);
        EXPECT(gbc.pc(), 0x5a35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0125
        gbc.setState(0x3b75, 0xd6a9, 0x5e0, 0x56da, 0xf3d, 0x8bf6, 0x1, 0x0);
        gbc.writeMem(0x3b75, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd6a9);
        EXPECT(gbc.pc(), 0x3b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0126
        gbc.setState(0xef13, 0x682e, 0x6a90, 0x774a, 0x44c6, 0xefa, 0x1, 0x0);
        gbc.writeMem(0xef13, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x682e);
        EXPECT(gbc.pc(), 0xef15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef13), 0xcb);
        EXPECT(gbc.readMem(0xef14), 0x32);
        // CB 32 0127
        gbc.setState(0x5717, 0x55b, 0x2bf0, 0x7264, 0x16e2, 0x2f93, 0x0, 0x0);
        gbc.writeMem(0x5717, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x55b);
        EXPECT(gbc.pc(), 0x5719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0128
        gbc.setState(0x8b64, 0x9ea1, 0x7c10, 0x8900, 0x214d, 0xf3e0, 0x1, 0x1);
        gbc.writeMem(0x8b64, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9ea1);
        EXPECT(gbc.pc(), 0x8b66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b64), 0xcb);
        EXPECT(gbc.readMem(0x8b65), 0x32);
        // CB 32 0129
        gbc.setState(0x8eab, 0xf372, 0x5b30, 0xd55d, 0x43e3, 0x857e, 0x0, 0x1);
        gbc.writeMem(0x8eab, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf372);
        EXPECT(gbc.pc(), 0x8ead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eab), 0xcb);
        EXPECT(gbc.readMem(0x8eac), 0x32);
        // CB 32 012A
        gbc.setState(0xeb1a, 0x9ed, 0x5190, 0xfbc2, 0x7975, 0x47be, 0x1, 0x1);
        gbc.writeMem(0xeb1a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9ed);
        EXPECT(gbc.pc(), 0xeb1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb1a), 0xcb);
        EXPECT(gbc.readMem(0xeb1b), 0x32);
        // CB 32 012B
        gbc.setState(0x9de1, 0x7885, 0x10c0, 0xdca2, 0xd259, 0x5317, 0x0, 0x0);
        gbc.writeMem(0x9de1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7885);
        EXPECT(gbc.pc(), 0x9de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de1), 0xcb);
        EXPECT(gbc.readMem(0x9de2), 0x32);
        // CB 32 012C
        gbc.setState(0x32d, 0xa065, 0xf700, 0x4eca, 0xdc32, 0x41d7, 0x1, 0x0);
        gbc.writeMem(0x32d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa065);
        EXPECT(gbc.pc(), 0x32f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 012D
        gbc.setState(0xc073, 0x19d0, 0xd260, 0x3cb6, 0xdd8f, 0xc7c4, 0x1, 0x0);
        gbc.writeMem(0xc073, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x19d0);
        EXPECT(gbc.pc(), 0xc075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc073), 0xcb);
        EXPECT(gbc.readMem(0xc074), 0x32);
        // CB 32 012E
        gbc.setState(0x96cb, 0x23b3, 0x71f0, 0xb31a, 0xdd23, 0xc600, 0x1, 0x0);
        gbc.writeMem(0x96cb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x23b3);
        EXPECT(gbc.pc(), 0x96cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96cb), 0xcb);
        EXPECT(gbc.readMem(0x96cc), 0x32);
        // CB 32 012F
        gbc.setState(0x6a54, 0xc4ae, 0x43e0, 0xeec1, 0x5c83, 0x43ee, 0x0, 0x0);
        gbc.writeMem(0x6a54, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc4ae);
        EXPECT(gbc.pc(), 0x6a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0130
        gbc.setState(0xae77, 0xf98b, 0xe150, 0x3b5f, 0x6ae5, 0xa25f, 0x1, 0x0);
        gbc.writeMem(0xae77, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf98b);
        EXPECT(gbc.pc(), 0xae79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae77), 0xcb);
        EXPECT(gbc.readMem(0xae78), 0x32);
        // CB 32 0132
        gbc.setState(0x23ae, 0xd144, 0x7da0, 0x939c, 0x3797, 0x8a2f, 0x1, 0x0);
        gbc.writeMem(0x23ae, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd144);
        EXPECT(gbc.pc(), 0x23b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0133
        gbc.setState(0xa394, 0x74de, 0xe8f0, 0xe149, 0xc92e, 0xfac3, 0x1, 0x0);
        gbc.writeMem(0xa394, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x74de);
        EXPECT(gbc.pc(), 0xa396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa394), 0xcb);
        EXPECT(gbc.readMem(0xa395), 0x32);
        // CB 32 0134
        gbc.setState(0xb947, 0x3591, 0x81f0, 0xdffb, 0x1d66, 0x39af, 0x0, 0x0);
        gbc.writeMem(0xb947, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3591);
        EXPECT(gbc.pc(), 0xb949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb947), 0xcb);
        EXPECT(gbc.readMem(0xb948), 0x32);
        // CB 32 0135
        gbc.setState(0xe1d3, 0xfa98, 0xd1b0, 0xa083, 0x222f, 0x892, 0x0, 0x0);
        gbc.writeMem(0xe1d3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfa98);
        EXPECT(gbc.pc(), 0xe1d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d3), 0xcb);
        EXPECT(gbc.readMem(0xe1d4), 0x32);
        // CB 32 0136
        gbc.setState(0x70d3, 0xf50e, 0x7f60, 0x478f, 0xc0f, 0x41b, 0x1, 0x1);
        gbc.writeMem(0x70d3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf50e);
        EXPECT(gbc.pc(), 0x70d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0137
        gbc.setState(0x2851, 0xa933, 0x2060, 0x3ed1, 0xd93d, 0x7c03, 0x1, 0x1);
        gbc.writeMem(0x2851, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa933);
        EXPECT(gbc.pc(), 0x2853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0138
        gbc.setState(0xeb8c, 0x17e7, 0xb5f0, 0x1c09, 0xcdda, 0xe61f, 0x0, 0x1);
        gbc.writeMem(0xeb8c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x17e7);
        EXPECT(gbc.pc(), 0xeb8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb8c), 0xcb);
        EXPECT(gbc.readMem(0xeb8d), 0x32);
        // CB 32 013A
        gbc.setState(0x438a, 0x8aa5, 0xe9d0, 0x1548, 0x8036, 0x1ef, 0x1, 0x0);
        gbc.writeMem(0x438a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8aa5);
        EXPECT(gbc.pc(), 0x438c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 013B
        gbc.setState(0x6d4, 0x1d06, 0x6880, 0x6e54, 0x61ee, 0xbab9, 0x0, 0x1);
        gbc.writeMem(0x6d4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1d06);
        EXPECT(gbc.pc(), 0x6d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 013C
        gbc.setState(0x4244, 0xe3b5, 0xa800, 0xa7a2, 0x2ca0, 0xa72d, 0x1, 0x1);
        gbc.writeMem(0x4244, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe3b5);
        EXPECT(gbc.pc(), 0x4246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 013D
        gbc.setState(0x95c9, 0x9069, 0x6980, 0x9953, 0x1ec, 0x7d11, 0x1, 0x1);
        gbc.writeMem(0x95c9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9069);
        EXPECT(gbc.pc(), 0x95cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95c9), 0xcb);
        EXPECT(gbc.readMem(0x95ca), 0x32);
        // CB 32 013E
        gbc.setState(0x1e51, 0xe889, 0x5d70, 0xd384, 0x4b80, 0x6b0, 0x1, 0x0);
        gbc.writeMem(0x1e51, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe889);
        EXPECT(gbc.pc(), 0x1e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 013F
        gbc.setState(0xe8c7, 0xf900, 0x3030, 0xa0ce, 0x28fd, 0x4cf5, 0x1, 0x0);
        gbc.writeMem(0xe8c7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf900);
        EXPECT(gbc.pc(), 0xe8c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c7), 0xcb);
        EXPECT(gbc.readMem(0xe8c8), 0x32);
        // CB 32 0140
        gbc.setState(0xe701, 0x69e6, 0xa030, 0xccb1, 0xc98, 0xe204, 0x1, 0x0);
        gbc.writeMem(0xe701, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x69e6);
        EXPECT(gbc.pc(), 0xe703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe701), 0xcb);
        EXPECT(gbc.readMem(0xe702), 0x32);
        // CB 32 0141
        gbc.setState(0x183a, 0x2910, 0x3580, 0xc1e8, 0xaebc, 0x6a44, 0x0, 0x0);
        gbc.writeMem(0x183a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2910);
        EXPECT(gbc.pc(), 0x183c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0142
        gbc.setState(0xe362, 0xb97e, 0xab0, 0xf9b6, 0xdc5c, 0x5a3d, 0x1, 0x0);
        gbc.writeMem(0xe362, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb97e);
        EXPECT(gbc.pc(), 0xe364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe362), 0xcb);
        EXPECT(gbc.readMem(0xe363), 0x32);
        // CB 32 0143
        gbc.setState(0x1f2a, 0x8700, 0x5c50, 0x26d0, 0xc837, 0x4d3e, 0x0, 0x0);
        gbc.writeMem(0x1f2a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8700);
        EXPECT(gbc.pc(), 0x1f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0144
        gbc.setState(0xef5d, 0xc322, 0x86c0, 0xe30d, 0x605a, 0xdc0c, 0x0, 0x1);
        gbc.writeMem(0xef5d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc322);
        EXPECT(gbc.pc(), 0xef5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef5d), 0xcb);
        EXPECT(gbc.readMem(0xef5e), 0x32);
        // CB 32 0145
        gbc.setState(0x78a6, 0x436f, 0xf1d0, 0xa049, 0xa2e6, 0xb7f3, 0x1, 0x0);
        gbc.writeMem(0x78a6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x436f);
        EXPECT(gbc.pc(), 0x78a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0146
        gbc.setState(0xa20, 0x45dd, 0x1460, 0x9d09, 0x3cb1, 0x55d2, 0x1, 0x1);
        gbc.writeMem(0xa20, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x45dd);
        EXPECT(gbc.pc(), 0xa22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0147
        gbc.setState(0x9ee6, 0x6bfe, 0x1f30, 0xb7d5, 0xae0d, 0xd11b, 0x0, 0x1);
        gbc.writeMem(0x9ee6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6bfe);
        EXPECT(gbc.pc(), 0x9ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee6), 0xcb);
        EXPECT(gbc.readMem(0x9ee7), 0x32);
        // CB 32 0148
        gbc.setState(0x705e, 0xc34a, 0x6dd0, 0x9f5e, 0xd9f0, 0x52b6, 0x1, 0x0);
        gbc.writeMem(0x705e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc34a);
        EXPECT(gbc.pc(), 0x7060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0149
        gbc.setState(0x137c, 0x60bc, 0xf230, 0x7fbc, 0x8f8e, 0x5ea, 0x1, 0x0);
        gbc.writeMem(0x137c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x60bc);
        EXPECT(gbc.pc(), 0x137e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 014A
        gbc.setState(0xe955, 0x8f98, 0x1c90, 0x924e, 0x6dd0, 0xae9f, 0x0, 0x0);
        gbc.writeMem(0xe955, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8f98);
        EXPECT(gbc.pc(), 0xe957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe955), 0xcb);
        EXPECT(gbc.readMem(0xe956), 0x32);
        // CB 32 014B
        gbc.setState(0x12f, 0x5a7b, 0xf2b0, 0x589, 0x19f5, 0x6fbc, 0x1, 0x1);
        gbc.writeMem(0x12f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5a7b);
        EXPECT(gbc.pc(), 0x131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 014C
        gbc.setState(0x2708, 0xe83d, 0x4ee0, 0xc702, 0xb78c, 0xe8f9, 0x0, 0x0);
        gbc.writeMem(0x2708, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe83d);
        EXPECT(gbc.pc(), 0x270a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 014D
        gbc.setState(0x3e99, 0xd77f, 0xd340, 0xc393, 0xb725, 0xe8f6, 0x0, 0x0);
        gbc.writeMem(0x3e99, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd77f);
        EXPECT(gbc.pc(), 0x3e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 014E
        gbc.setState(0xa1fd, 0x99a3, 0xad60, 0x7ee6, 0xb973, 0x8283, 0x1, 0x0);
        gbc.writeMem(0xa1fd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x99a3);
        EXPECT(gbc.pc(), 0xa1ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1fd), 0xcb);
        EXPECT(gbc.readMem(0xa1fe), 0x32);
        // CB 32 014F
        gbc.setState(0x92e1, 0x36f8, 0xcef0, 0x97de, 0xaaeb, 0x55c5, 0x1, 0x0);
        gbc.writeMem(0x92e1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x36f8);
        EXPECT(gbc.pc(), 0x92e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e1), 0xcb);
        EXPECT(gbc.readMem(0x92e2), 0x32);
        // CB 32 0150
        gbc.setState(0x65fc, 0xa66b, 0x8fd0, 0x3112, 0xa030, 0x4b11, 0x1, 0x1);
        gbc.writeMem(0x65fc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa66b);
        EXPECT(gbc.pc(), 0x65fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0151
        gbc.setState(0x24af, 0x2acb, 0xa5b0, 0x1003, 0x6413, 0xf18c, 0x1, 0x0);
        gbc.writeMem(0x24af, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2acb);
        EXPECT(gbc.pc(), 0x24b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0152
        gbc.setState(0x8538, 0xc5f9, 0xbb0, 0xbd12, 0xe40a, 0x70c5, 0x0, 0x1);
        gbc.writeMem(0x8538, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc5f9);
        EXPECT(gbc.pc(), 0x853a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8538), 0xcb);
        EXPECT(gbc.readMem(0x8539), 0x32);
        // CB 32 0154
        gbc.setState(0x730f, 0xd165, 0xf1f0, 0xb833, 0x2499, 0x9f3f, 0x1, 0x1);
        gbc.writeMem(0x730f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd165);
        EXPECT(gbc.pc(), 0x7311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0155
        gbc.setState(0x37eb, 0xe56c, 0xed60, 0x17f4, 0xabd0, 0xaae9, 0x0, 0x1);
        gbc.writeMem(0x37eb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe56c);
        EXPECT(gbc.pc(), 0x37ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0156
        gbc.setState(0x1a27, 0x4d6f, 0x9d50, 0xd9d4, 0x70e2, 0x6cc1, 0x0, 0x1);
        gbc.writeMem(0x1a27, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4d6f);
        EXPECT(gbc.pc(), 0x1a29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0157
        gbc.setState(0xce75, 0xcdf7, 0x4390, 0x91a5, 0xfd8f, 0xeb06, 0x1, 0x1);
        gbc.writeMem(0xce75, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xcdf7);
        EXPECT(gbc.pc(), 0xce77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce75), 0xcb);
        EXPECT(gbc.readMem(0xce76), 0x32);
        // CB 32 0158
        gbc.setState(0x72b8, 0x4968, 0xbf10, 0xb560, 0x2fc5, 0xddd, 0x0, 0x1);
        gbc.writeMem(0x72b8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4968);
        EXPECT(gbc.pc(), 0x72ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0159
        gbc.setState(0x3c9, 0x974e, 0x2d10, 0x2cf6, 0x5473, 0x7fe7, 0x0, 0x0);
        gbc.writeMem(0x3c9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x974e);
        EXPECT(gbc.pc(), 0x3cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 015A
        gbc.setState(0xd570, 0x1ff5, 0x9bf0, 0xb06a, 0x2441, 0x83de, 0x1, 0x0);
        gbc.writeMem(0xd570, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1ff5);
        EXPECT(gbc.pc(), 0xd572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd570), 0xcb);
        EXPECT(gbc.readMem(0xd571), 0x32);
        // CB 32 015B
        gbc.setState(0xef55, 0x5b95, 0x8e0, 0xa561, 0x5b97, 0xc4f8, 0x0, 0x0);
        gbc.writeMem(0xef55, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5b95);
        EXPECT(gbc.pc(), 0xef57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef55), 0xcb);
        EXPECT(gbc.readMem(0xef56), 0x32);
        // CB 32 015C
        gbc.setState(0x7c2, 0xe148, 0x9410, 0x9563, 0x9a6b, 0x20c5, 0x1, 0x0);
        gbc.writeMem(0x7c2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe148);
        EXPECT(gbc.pc(), 0x7c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 015D
        gbc.setState(0x3121, 0x65d8, 0xbba0, 0x254c, 0xdc56, 0x902e, 0x0, 0x0);
        gbc.writeMem(0x3121, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x65d8);
        EXPECT(gbc.pc(), 0x3123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 015E
        gbc.setState(0xdfbc, 0x5372, 0x9b20, 0xfe5c, 0x787d, 0xf420, 0x1, 0x0);
        gbc.writeMem(0xdfbc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5372);
        EXPECT(gbc.pc(), 0xdfbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfbc), 0xcb);
        EXPECT(gbc.readMem(0xdfbd), 0x32);
        // CB 32 015F
        gbc.setState(0x3ba7, 0x4361, 0x340, 0xe72, 0xdb3f, 0x1256, 0x1, 0x0);
        gbc.writeMem(0x3ba7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4361);
        EXPECT(gbc.pc(), 0x3ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0160
        gbc.setState(0xcfdc, 0x4a8a, 0xe310, 0x396e, 0x1121, 0x8ec2, 0x1, 0x0);
        gbc.writeMem(0xcfdc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4a8a);
        EXPECT(gbc.pc(), 0xcfde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfdc), 0xcb);
        EXPECT(gbc.readMem(0xcfdd), 0x32);
        // CB 32 0161
        gbc.setState(0x6159, 0x43f3, 0x5380, 0xb663, 0x87b0, 0x4da7, 0x1, 0x0);
        gbc.writeMem(0x6159, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x43f3);
        EXPECT(gbc.pc(), 0x615b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0162
        gbc.setState(0x8952, 0xfe67, 0xbfb0, 0x7246, 0x477d, 0x60f9, 0x0, 0x1);
        gbc.writeMem(0x8952, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfe67);
        EXPECT(gbc.pc(), 0x8954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8952), 0xcb);
        EXPECT(gbc.readMem(0x8953), 0x32);
        // CB 32 0163
        gbc.setState(0x76e5, 0x682f, 0x5140, 0x7b5e, 0xb697, 0x953, 0x1, 0x0);
        gbc.writeMem(0x76e5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x682f);
        EXPECT(gbc.pc(), 0x76e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0164
        gbc.setState(0x1938, 0x58af, 0xf740, 0xe2a3, 0xd030, 0x9b77, 0x0, 0x0);
        gbc.writeMem(0x1938, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x58af);
        EXPECT(gbc.pc(), 0x193a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0165
        gbc.setState(0x5be1, 0x2f4a, 0x9eb0, 0xe92c, 0x30c3, 0x418a, 0x0, 0x0);
        gbc.writeMem(0x5be1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2f4a);
        EXPECT(gbc.pc(), 0x5be3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0166
        gbc.setState(0x7c77, 0x7747, 0xb830, 0x65ac, 0x585, 0x54b3, 0x0, 0x0);
        gbc.writeMem(0x7c77, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7747);
        EXPECT(gbc.pc(), 0x7c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0167
        gbc.setState(0x60c3, 0xeb07, 0xc840, 0x8b20, 0xc013, 0x366a, 0x0, 0x1);
        gbc.writeMem(0x60c3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xeb07);
        EXPECT(gbc.pc(), 0x60c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0168
        gbc.setState(0x6ebb, 0x43cc, 0xebf0, 0x80e2, 0x9753, 0x19bb, 0x1, 0x1);
        gbc.writeMem(0x6ebb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x43cc);
        EXPECT(gbc.pc(), 0x6ebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0169
        gbc.setState(0x7af, 0xbe1, 0xdfd0, 0x7e1a, 0x76e9, 0xfd33, 0x1, 0x0);
        gbc.writeMem(0x7af, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbe1);
        EXPECT(gbc.pc(), 0x7b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 016A
        gbc.setState(0xe323, 0x5a3b, 0xde40, 0xc15e, 0x27ee, 0xe2c7, 0x1, 0x0);
        gbc.writeMem(0xe323, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5a3b);
        EXPECT(gbc.pc(), 0xe325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe323), 0xcb);
        EXPECT(gbc.readMem(0xe324), 0x32);
        // CB 32 016C
        gbc.setState(0x7932, 0xba69, 0xd030, 0x4a98, 0xfcc7, 0x7add, 0x1, 0x0);
        gbc.writeMem(0x7932, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xba69);
        EXPECT(gbc.pc(), 0x7934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 016D
        gbc.setState(0xb282, 0xbd71, 0xb750, 0x4865, 0x8226, 0xb20a, 0x1, 0x0);
        gbc.writeMem(0xb282, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbd71);
        EXPECT(gbc.pc(), 0xb284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb282), 0xcb);
        EXPECT(gbc.readMem(0xb283), 0x32);
        // CB 32 016E
        gbc.setState(0xed0b, 0xcf2b, 0x57e0, 0xa40, 0xbdfe, 0x496f, 0x1, 0x1);
        gbc.writeMem(0xed0b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xcf2b);
        EXPECT(gbc.pc(), 0xed0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed0b), 0xcb);
        EXPECT(gbc.readMem(0xed0c), 0x32);
        // CB 32 016F
        gbc.setState(0x153b, 0xa52a, 0x3100, 0x4110, 0xdb35, 0xe2f6, 0x0, 0x1);
        gbc.writeMem(0x153b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa52a);
        EXPECT(gbc.pc(), 0x153d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0170
        gbc.setState(0xa59e, 0xce5c, 0x3ca0, 0xc1a4, 0xbb56, 0x61c7, 0x0, 0x1);
        gbc.writeMem(0xa59e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xce5c);
        EXPECT(gbc.pc(), 0xa5a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa59e), 0xcb);
        EXPECT(gbc.readMem(0xa59f), 0x32);
        // CB 32 0171
        gbc.setState(0x2c47, 0x6970, 0x2cc0, 0x56d7, 0x19d9, 0xe9c, 0x0, 0x1);
        gbc.writeMem(0x2c47, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6970);
        EXPECT(gbc.pc(), 0x2c49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0172
        gbc.setState(0x4f84, 0x99fe, 0x5190, 0x3eee, 0x3d85, 0x83e5, 0x0, 0x1);
        gbc.writeMem(0x4f84, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x99fe);
        EXPECT(gbc.pc(), 0x4f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0174
        gbc.setState(0x13d8, 0x9ca7, 0x9fd0, 0xa395, 0x2972, 0x419, 0x1, 0x0);
        gbc.writeMem(0x13d8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9ca7);
        EXPECT(gbc.pc(), 0x13da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0175
        gbc.setState(0xe6e0, 0xa5f4, 0x7b80, 0x209, 0x9e05, 0xe833, 0x0, 0x1);
        gbc.writeMem(0xe6e0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa5f4);
        EXPECT(gbc.pc(), 0xe6e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e0), 0xcb);
        EXPECT(gbc.readMem(0xe6e1), 0x32);
        // CB 32 0176
        gbc.setState(0x2200, 0xcc18, 0x5850, 0xe663, 0x7c16, 0x8629, 0x1, 0x1);
        gbc.writeMem(0x2200, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcc18);
        EXPECT(gbc.pc(), 0x2202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0177
        gbc.setState(0x9600, 0x394e, 0x0, 0x3eb, 0xf5bf, 0x1a98, 0x0, 0x1);
        gbc.writeMem(0x9600, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x394e);
        EXPECT(gbc.pc(), 0x9602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9600), 0xcb);
        EXPECT(gbc.readMem(0x9601), 0x32);
        // CB 32 0178
        gbc.setState(0xea8e, 0xfcfd, 0xa6b0, 0xce58, 0x98f5, 0xc13c, 0x1, 0x0);
        gbc.writeMem(0xea8e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xfcfd);
        EXPECT(gbc.pc(), 0xea90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea8e), 0xcb);
        EXPECT(gbc.readMem(0xea8f), 0x32);
        // CB 32 0179
        gbc.setState(0x5f5a, 0x18d, 0xa620, 0x7aa9, 0xb229, 0xf0d9, 0x1, 0x0);
        gbc.writeMem(0x5f5a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x18d);
        EXPECT(gbc.pc(), 0x5f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 017A
        gbc.setState(0x7f85, 0xcb1b, 0x9a50, 0x97a4, 0xf927, 0xa580, 0x0, 0x0);
        gbc.writeMem(0x7f85, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcb1b);
        EXPECT(gbc.pc(), 0x7f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 017B
        gbc.setState(0x7423, 0x6b51, 0x6650, 0xd2dc, 0x8e7e, 0x8efc, 0x1, 0x0);
        gbc.writeMem(0x7423, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6b51);
        EXPECT(gbc.pc(), 0x7425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 017C
        gbc.setState(0x30b3, 0x1de4, 0xd440, 0xcdd4, 0xffa7, 0x4e55, 0x1, 0x1);
        gbc.writeMem(0x30b3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1de4);
        EXPECT(gbc.pc(), 0x30b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 017D
        gbc.setState(0x5700, 0x23ad, 0xd450, 0xff7e, 0x57d8, 0x5a4a, 0x1, 0x0);
        gbc.writeMem(0x5700, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x23ad);
        EXPECT(gbc.pc(), 0x5702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 017E
        gbc.setState(0x7d75, 0xe99b, 0x3dd0, 0x8bf6, 0x880b, 0xb226, 0x1, 0x0);
        gbc.writeMem(0x7d75, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe99b);
        EXPECT(gbc.pc(), 0x7d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 017F
        gbc.setState(0xa13c, 0xf1d3, 0x4840, 0xff9b, 0x54be, 0xd167, 0x0, 0x0);
        gbc.writeMem(0xa13c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf1d3);
        EXPECT(gbc.pc(), 0xa13e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa13c), 0xcb);
        EXPECT(gbc.readMem(0xa13d), 0x32);
        // CB 32 0180
        gbc.setState(0x7e37, 0x5082, 0xf430, 0xebc4, 0x6928, 0xc252, 0x0, 0x1);
        gbc.writeMem(0x7e37, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5082);
        EXPECT(gbc.pc(), 0x7e39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0181
        gbc.setState(0xb768, 0xbf62, 0x68b0, 0x37aa, 0xe391, 0x7e97, 0x1, 0x1);
        gbc.writeMem(0xb768, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbf62);
        EXPECT(gbc.pc(), 0xb76a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb768), 0xcb);
        EXPECT(gbc.readMem(0xb769), 0x32);
        // CB 32 0182
        gbc.setState(0x8d2e, 0xd0b0, 0x9170, 0x54b3, 0x187d, 0x499d, 0x0, 0x1);
        gbc.writeMem(0x8d2e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd0b0);
        EXPECT(gbc.pc(), 0x8d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d2e), 0xcb);
        EXPECT(gbc.readMem(0x8d2f), 0x32);
        // CB 32 0183
        gbc.setState(0xca0a, 0x8799, 0x9990, 0x9bc1, 0x4e48, 0x8be, 0x0, 0x1);
        gbc.writeMem(0xca0a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8799);
        EXPECT(gbc.pc(), 0xca0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca0a), 0xcb);
        EXPECT(gbc.readMem(0xca0b), 0x32);
        // CB 32 0184
        gbc.setState(0xaf0c, 0xb241, 0x82e0, 0x2cb9, 0xcdf5, 0xa5c, 0x1, 0x1);
        gbc.writeMem(0xaf0c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb241);
        EXPECT(gbc.pc(), 0xaf0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0c), 0xcb);
        EXPECT(gbc.readMem(0xaf0d), 0x32);
        // CB 32 0185
        gbc.setState(0x565d, 0xb094, 0x2850, 0x6a96, 0x420e, 0xefa5, 0x1, 0x1);
        gbc.writeMem(0x565d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb094);
        EXPECT(gbc.pc(), 0x565f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0186
        gbc.setState(0x5766, 0xea61, 0xc010, 0xb756, 0xbe9c, 0x836c, 0x0, 0x0);
        gbc.writeMem(0x5766, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xea61);
        EXPECT(gbc.pc(), 0x5768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0187
        gbc.setState(0xb12f, 0x5e45, 0x23c0, 0x499a, 0xb813, 0x79ae, 0x1, 0x1);
        gbc.writeMem(0xb12f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5e45);
        EXPECT(gbc.pc(), 0xb131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb12f), 0xcb);
        EXPECT(gbc.readMem(0xb130), 0x32);
        // CB 32 0188
        gbc.setState(0x6d23, 0x2e16, 0xfd80, 0xba76, 0x696, 0xfaae, 0x1, 0x1);
        gbc.writeMem(0x6d23, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2e16);
        EXPECT(gbc.pc(), 0x6d25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0189
        gbc.setState(0x1f98, 0x8d7f, 0x51a0, 0xcb10, 0x1245, 0xfa0d, 0x1, 0x1);
        gbc.writeMem(0x1f98, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8d7f);
        EXPECT(gbc.pc(), 0x1f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 018A
        gbc.setState(0xd07a, 0x45ef, 0xd500, 0x53dd, 0xfbb4, 0x38b6, 0x1, 0x1);
        gbc.writeMem(0xd07a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x45ef);
        EXPECT(gbc.pc(), 0xd07c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd07a), 0xcb);
        EXPECT(gbc.readMem(0xd07b), 0x32);
        // CB 32 018B
        gbc.setState(0x4e44, 0x51f5, 0x3460, 0x88dd, 0x7788, 0xe5ab, 0x0, 0x1);
        gbc.writeMem(0x4e44, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x51f5);
        EXPECT(gbc.pc(), 0x4e46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 018C
        gbc.setState(0xdcb9, 0xb578, 0x50, 0xe44b, 0xa41f, 0x49f7, 0x1, 0x0);
        gbc.writeMem(0xdcb9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb578);
        EXPECT(gbc.pc(), 0xdcbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb9), 0xcb);
        EXPECT(gbc.readMem(0xdcba), 0x32);
        // CB 32 018D
        gbc.setState(0x8fb2, 0xc049, 0x3740, 0x7b42, 0x9690, 0xfd7d, 0x1, 0x0);
        gbc.writeMem(0x8fb2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc049);
        EXPECT(gbc.pc(), 0x8fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb2), 0xcb);
        EXPECT(gbc.readMem(0x8fb3), 0x32);
        // CB 32 018E
        gbc.setState(0xd936, 0x8a4b, 0xbbb0, 0x8f89, 0xa369, 0x9f4e, 0x1, 0x1);
        gbc.writeMem(0xd936, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8a4b);
        EXPECT(gbc.pc(), 0xd938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd936), 0xcb);
        EXPECT(gbc.readMem(0xd937), 0x32);
        // CB 32 018F
        gbc.setState(0x664d, 0x6ae9, 0x3cf0, 0xc5e9, 0x1f9a, 0x5285, 0x1, 0x1);
        gbc.writeMem(0x664d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6ae9);
        EXPECT(gbc.pc(), 0x664f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0190
        gbc.setState(0xd134, 0xd030, 0x8050, 0xed74, 0xa03e, 0x2e84, 0x1, 0x0);
        gbc.writeMem(0xd134, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd030);
        EXPECT(gbc.pc(), 0xd136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd134), 0xcb);
        EXPECT(gbc.readMem(0xd135), 0x32);
        // CB 32 0191
        gbc.setState(0x7609, 0x4e14, 0xcf60, 0x1ab, 0x286, 0xa449, 0x1, 0x1);
        gbc.writeMem(0x7609, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4e14);
        EXPECT(gbc.pc(), 0x760b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0193
        gbc.setState(0x5f88, 0xb93c, 0x4c50, 0xe798, 0x2835, 0xbfa6, 0x1, 0x1);
        gbc.writeMem(0x5f88, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb93c);
        EXPECT(gbc.pc(), 0x5f8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0194
        gbc.setState(0x633e, 0xb9f0, 0x51b0, 0x38fe, 0x866d, 0xc17f, 0x1, 0x1);
        gbc.writeMem(0x633e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb9f0);
        EXPECT(gbc.pc(), 0x6340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0195
        gbc.setState(0x8882, 0x45d5, 0x7290, 0xc2ed, 0x31ce, 0xbaa0, 0x0, 0x1);
        gbc.writeMem(0x8882, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x45d5);
        EXPECT(gbc.pc(), 0x8884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8882), 0xcb);
        EXPECT(gbc.readMem(0x8883), 0x32);
        // CB 32 0196
        gbc.setState(0x3713, 0xf90a, 0x4ba0, 0x4661, 0x37e8, 0x5f99, 0x0, 0x0);
        gbc.writeMem(0x3713, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf90a);
        EXPECT(gbc.pc(), 0x3715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0197
        gbc.setState(0x5467, 0xf50d, 0x67d0, 0xbcc9, 0x4092, 0x3bee, 0x0, 0x0);
        gbc.writeMem(0x5467, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf50d);
        EXPECT(gbc.pc(), 0x5469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0198
        gbc.setState(0xcb41, 0x1c36, 0x4790, 0xdce3, 0xcb62, 0xe516, 0x0, 0x1);
        gbc.writeMem(0xcb41, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1c36);
        EXPECT(gbc.pc(), 0xcb43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb41), 0xcb);
        EXPECT(gbc.readMem(0xcb42), 0x32);
        // CB 32 0199
        gbc.setState(0x2a4, 0x5177, 0x6a20, 0x5f4a, 0xd2cb, 0xaecb, 0x0, 0x1);
        gbc.writeMem(0x2a4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5177);
        EXPECT(gbc.pc(), 0x2a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 019A
        gbc.setState(0xc945, 0xaa4, 0x5620, 0x8ae9, 0xda90, 0x9bb9, 0x0, 0x0);
        gbc.writeMem(0xc945, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xaa4);
        EXPECT(gbc.pc(), 0xc947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc945), 0xcb);
        EXPECT(gbc.readMem(0xc946), 0x32);
        // CB 32 019B
        gbc.setState(0xc938, 0x9f49, 0x7f40, 0x7621, 0x6880, 0xbc4c, 0x1, 0x1);
        gbc.writeMem(0xc938, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9f49);
        EXPECT(gbc.pc(), 0xc93a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc938), 0xcb);
        EXPECT(gbc.readMem(0xc939), 0x32);
        // CB 32 019C
        gbc.setState(0x4e66, 0xf14f, 0x8980, 0x8ad2, 0xb09a, 0x16ac, 0x0, 0x1);
        gbc.writeMem(0x4e66, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf14f);
        EXPECT(gbc.pc(), 0x4e68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 019D
        gbc.setState(0x77e3, 0x11e1, 0xfa40, 0xc0a7, 0xf7c9, 0x24a7, 0x1, 0x0);
        gbc.writeMem(0x77e3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x11e1);
        EXPECT(gbc.pc(), 0x77e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 019E
        gbc.setState(0x9741, 0x860b, 0x8720, 0xb4b4, 0x57ab, 0x2f37, 0x0, 0x0);
        gbc.writeMem(0x9741, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x860b);
        EXPECT(gbc.pc(), 0x9743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9741), 0xcb);
        EXPECT(gbc.readMem(0x9742), 0x32);
        // CB 32 019F
        gbc.setState(0x5070, 0x80c9, 0x82c0, 0x27e3, 0x3597, 0x52a1, 0x0, 0x1);
        gbc.writeMem(0x5070, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x80c9);
        EXPECT(gbc.pc(), 0x5072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01A0
        gbc.setState(0x36b2, 0x6bdf, 0x57b0, 0x8c08, 0xa04e, 0x4195, 0x1, 0x0);
        gbc.writeMem(0x36b2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6bdf);
        EXPECT(gbc.pc(), 0x36b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01A2
        gbc.setState(0x314b, 0x45c4, 0x1330, 0x29b6, 0x6339, 0x2283, 0x0, 0x0);
        gbc.writeMem(0x314b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x45c4);
        EXPECT(gbc.pc(), 0x314d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01A3
        gbc.setState(0xaa45, 0x116a, 0x20, 0x6ecd, 0xead0, 0xefe7, 0x0, 0x1);
        gbc.writeMem(0xaa45, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x116a);
        EXPECT(gbc.pc(), 0xaa47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa45), 0xcb);
        EXPECT(gbc.readMem(0xaa46), 0x32);
        // CB 32 01A4
        gbc.setState(0xa3fb, 0x334c, 0x2b0, 0xb942, 0x8f52, 0xb8dc, 0x1, 0x0);
        gbc.writeMem(0xa3fb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x334c);
        EXPECT(gbc.pc(), 0xa3fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3fb), 0xcb);
        EXPECT(gbc.readMem(0xa3fc), 0x32);
        // CB 32 01A5
        gbc.setState(0x59fd, 0x3cc6, 0x9a00, 0x866f, 0x1aaf, 0x74f8, 0x0, 0x1);
        gbc.writeMem(0x59fd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3cc6);
        EXPECT(gbc.pc(), 0x59ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01A6
        gbc.setState(0x9f78, 0x4d89, 0xfc00, 0xbcf1, 0x7c6, 0xe7b3, 0x1, 0x0);
        gbc.writeMem(0x9f78, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4d89);
        EXPECT(gbc.pc(), 0x9f7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f78), 0xcb);
        EXPECT(gbc.readMem(0x9f79), 0x32);
        // CB 32 01A7
        gbc.setState(0xecab, 0xe77a, 0xcd0, 0x681b, 0xb91b, 0x3301, 0x0, 0x1);
        gbc.writeMem(0xecab, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe77a);
        EXPECT(gbc.pc(), 0xecad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecab), 0xcb);
        EXPECT(gbc.readMem(0xecac), 0x32);
        // CB 32 01A8
        gbc.setState(0x1bac, 0x5125, 0x20d0, 0x216d, 0xde2a, 0xa540, 0x0, 0x1);
        gbc.writeMem(0x1bac, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5125);
        EXPECT(gbc.pc(), 0x1bae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01A9
        gbc.setState(0xdbe, 0x8a74, 0xa8f0, 0x5040, 0xe780, 0x3b74, 0x1, 0x0);
        gbc.writeMem(0xdbe, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8a74);
        EXPECT(gbc.pc(), 0xdc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01AA
        gbc.setState(0x2190, 0x638e, 0xbca0, 0xcc8e, 0x9d40, 0x429, 0x0, 0x0);
        gbc.writeMem(0x2190, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x638e);
        EXPECT(gbc.pc(), 0x2192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01AB
        gbc.setState(0x73c8, 0xa780, 0x6ae0, 0xeb02, 0x62f6, 0xf0b3, 0x1, 0x0);
        gbc.writeMem(0x73c8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa780);
        EXPECT(gbc.pc(), 0x73ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01AC
        gbc.setState(0x5c8d, 0x8193, 0xda30, 0xab3f, 0x4e5e, 0x7a0b, 0x0, 0x0);
        gbc.writeMem(0x5c8d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8193);
        EXPECT(gbc.pc(), 0x5c8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01AD
        gbc.setState(0xce8e, 0x7cb1, 0x3700, 0x98e0, 0xc609, 0x3810, 0x1, 0x0);
        gbc.writeMem(0xce8e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7cb1);
        EXPECT(gbc.pc(), 0xce90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce8e), 0xcb);
        EXPECT(gbc.readMem(0xce8f), 0x32);
        // CB 32 01AE
        gbc.setState(0x4834, 0x2483, 0xa3b0, 0xda5e, 0xf723, 0x95d, 0x0, 0x0);
        gbc.writeMem(0x4834, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2483);
        EXPECT(gbc.pc(), 0x4836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01B0
        gbc.setState(0x4da8, 0xb86c, 0xf710, 0xcdb4, 0x9ba9, 0xf5ff, 0x0, 0x1);
        gbc.writeMem(0x4da8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb86c);
        EXPECT(gbc.pc(), 0x4daa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01B1
        gbc.setState(0x1a7f, 0x25dc, 0xe700, 0x9cd5, 0xfcab, 0x57f4, 0x1, 0x1);
        gbc.writeMem(0x1a7f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x25dc);
        EXPECT(gbc.pc(), 0x1a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01B2
        gbc.setState(0xc53d, 0xc567, 0xde00, 0xa791, 0x3c38, 0xf408, 0x1, 0x0);
        gbc.writeMem(0xc53d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc567);
        EXPECT(gbc.pc(), 0xc53f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc53d), 0xcb);
        EXPECT(gbc.readMem(0xc53e), 0x32);
        // CB 32 01B3
        gbc.setState(0x9d63, 0xe2a9, 0x3850, 0x1eb8, 0x7ed5, 0x17cf, 0x1, 0x1);
        gbc.writeMem(0x9d63, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe2a9);
        EXPECT(gbc.pc(), 0x9d65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d63), 0xcb);
        EXPECT(gbc.readMem(0x9d64), 0x32);
        // CB 32 01B4
        gbc.setState(0x9eda, 0xbdae, 0x38a0, 0x821c, 0x4cbe, 0x9a58, 0x1, 0x0);
        gbc.writeMem(0x9eda, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbdae);
        EXPECT(gbc.pc(), 0x9edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eda), 0xcb);
        EXPECT(gbc.readMem(0x9edb), 0x32);
        // CB 32 01B5
        gbc.setState(0xdea2, 0xa51e, 0xcaf0, 0x517a, 0x308a, 0x2785, 0x0, 0x0);
        gbc.writeMem(0xdea2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa51e);
        EXPECT(gbc.pc(), 0xdea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea2), 0xcb);
        EXPECT(gbc.readMem(0xdea3), 0x32);
        // CB 32 01B7
        gbc.setState(0x303f, 0x6201, 0xb4d0, 0x20cd, 0x3041, 0x920f, 0x1, 0x0);
        gbc.writeMem(0x303f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6201);
        EXPECT(gbc.pc(), 0x3041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01B8
        gbc.setState(0x34b8, 0x1a78, 0x3e50, 0x9cdd, 0xa9d8, 0x33d1, 0x1, 0x0);
        gbc.writeMem(0x34b8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1a78);
        EXPECT(gbc.pc(), 0x34ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01BA
        gbc.setState(0x5468, 0xadac, 0xd180, 0xd167, 0xbaa6, 0x7ba1, 0x0, 0x1);
        gbc.writeMem(0x5468, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xadac);
        EXPECT(gbc.pc(), 0x546a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01BC
        gbc.setState(0xe541, 0x3f3b, 0xbea0, 0xa13e, 0xa5ce, 0x2bec, 0x0, 0x0);
        gbc.writeMem(0xe541, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3f3b);
        EXPECT(gbc.pc(), 0xe543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe541), 0xcb);
        EXPECT(gbc.readMem(0xe542), 0x32);
        // CB 32 01BD
        gbc.setState(0xe93c, 0xb75b, 0xc260, 0x5561, 0x1ed0, 0xf343, 0x1, 0x1);
        gbc.writeMem(0xe93c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb75b);
        EXPECT(gbc.pc(), 0xe93e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93c), 0xcb);
        EXPECT(gbc.readMem(0xe93d), 0x32);
        // CB 32 01BE
        gbc.setState(0xa09d, 0x6cb2, 0xdcf0, 0x137f, 0x76c7, 0x12d8, 0x0, 0x1);
        gbc.writeMem(0xa09d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6cb2);
        EXPECT(gbc.pc(), 0xa09f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09d), 0xcb);
        EXPECT(gbc.readMem(0xa09e), 0x32);
        // CB 32 01BF
        gbc.setState(0x45e2, 0xda63, 0x9640, 0x92a1, 0xf2d, 0x7108, 0x0, 0x1);
        gbc.writeMem(0x45e2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xda63);
        EXPECT(gbc.pc(), 0x45e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01C0
        gbc.setState(0x663a, 0x2850, 0x6350, 0x5bcf, 0x4665, 0xf0a5, 0x0, 0x0);
        gbc.writeMem(0x663a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2850);
        EXPECT(gbc.pc(), 0x663c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01C1
        gbc.setState(0x22e0, 0xf5a4, 0xe7b0, 0x93e3, 0x14c5, 0x6359, 0x1, 0x1);
        gbc.writeMem(0x22e0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf5a4);
        EXPECT(gbc.pc(), 0x22e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01C2
        gbc.setState(0xce2a, 0x26ed, 0x1380, 0x58b0, 0x24e4, 0x523c, 0x1, 0x1);
        gbc.writeMem(0xce2a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x26ed);
        EXPECT(gbc.pc(), 0xce2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce2a), 0xcb);
        EXPECT(gbc.readMem(0xce2b), 0x32);
        // CB 32 01C3
        gbc.setState(0xcdf1, 0x8596, 0x8520, 0xffb3, 0x99cd, 0x75e3, 0x1, 0x0);
        gbc.writeMem(0xcdf1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8596);
        EXPECT(gbc.pc(), 0xcdf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf1), 0xcb);
        EXPECT(gbc.readMem(0xcdf2), 0x32);
        // CB 32 01C4
        gbc.setState(0xffe, 0xa9ba, 0x5a60, 0x9ec9, 0x2323, 0x849f, 0x0, 0x1);
        gbc.writeMem(0xffe, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa9ba);
        EXPECT(gbc.pc(), 0x1000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01C5
        gbc.setState(0x86a9, 0x6495, 0xd4c0, 0x9438, 0xdfe7, 0x5846, 0x1, 0x1);
        gbc.writeMem(0x86a9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6495);
        EXPECT(gbc.pc(), 0x86ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a9), 0xcb);
        EXPECT(gbc.readMem(0x86aa), 0x32);
        // CB 32 01C6
        gbc.setState(0xc551, 0x13f6, 0xdf0, 0x66e7, 0xb35a, 0x9350, 0x1, 0x0);
        gbc.writeMem(0xc551, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x13f6);
        EXPECT(gbc.pc(), 0xc553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc551), 0xcb);
        EXPECT(gbc.readMem(0xc552), 0x32);
        // CB 32 01C7
        gbc.setState(0x7c6e, 0xe767, 0xb8f0, 0x797, 0xa2e, 0xaebf, 0x0, 0x0);
        gbc.writeMem(0x7c6e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe767);
        EXPECT(gbc.pc(), 0x7c70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01C8
        gbc.setState(0x2b69, 0x4e2, 0x7300, 0x3d0f, 0x86b9, 0x2cb2, 0x0, 0x0);
        gbc.writeMem(0x2b69, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4e2);
        EXPECT(gbc.pc(), 0x2b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01C9
        gbc.setState(0x7c1d, 0x86ad, 0x8b10, 0x1922, 0xada5, 0x53b8, 0x1, 0x1);
        gbc.writeMem(0x7c1d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x86ad);
        EXPECT(gbc.pc(), 0x7c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01CA
        gbc.setState(0x209c, 0x9357, 0x3330, 0x81a7, 0x2b0e, 0xc781, 0x1, 0x1);
        gbc.writeMem(0x209c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9357);
        EXPECT(gbc.pc(), 0x209e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01CB
        gbc.setState(0x2ced, 0xcea5, 0xd820, 0x318e, 0x7470, 0x3998, 0x1, 0x1);
        gbc.writeMem(0x2ced, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcea5);
        EXPECT(gbc.pc(), 0x2cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01CC
        gbc.setState(0x76be, 0x21bd, 0xd650, 0x5470, 0x2119, 0x7bf7, 0x1, 0x1);
        gbc.writeMem(0x76be, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x21bd);
        EXPECT(gbc.pc(), 0x76c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01CD
        gbc.setState(0x8c5f, 0xf9f6, 0xeed0, 0x8d3d, 0x33f0, 0x3b66, 0x0, 0x1);
        gbc.writeMem(0x8c5f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf9f6);
        EXPECT(gbc.pc(), 0x8c61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c5f), 0xcb);
        EXPECT(gbc.readMem(0x8c60), 0x32);
        // CB 32 01CE
        gbc.setState(0x30ec, 0x16a1, 0x7080, 0x8796, 0xd795, 0x5750, 0x0, 0x1);
        gbc.writeMem(0x30ec, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x16a1);
        EXPECT(gbc.pc(), 0x30ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01CF
        gbc.setState(0x2449, 0x6b9c, 0xb5b0, 0x248d, 0xd250, 0x6d69, 0x1, 0x0);
        gbc.writeMem(0x2449, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6b9c);
        EXPECT(gbc.pc(), 0x244b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01D0
        gbc.setState(0xca69, 0x6eb0, 0xeb10, 0x60b6, 0xab49, 0xdcab, 0x1, 0x1);
        gbc.writeMem(0xca69, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6eb0);
        EXPECT(gbc.pc(), 0xca6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca69), 0xcb);
        EXPECT(gbc.readMem(0xca6a), 0x32);
        // CB 32 01D1
        gbc.setState(0x2a1e, 0xa198, 0x4dc0, 0x6eb3, 0x4154, 0xfe52, 0x0, 0x0);
        gbc.writeMem(0x2a1e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa198);
        EXPECT(gbc.pc(), 0x2a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01D2
        gbc.setState(0x3bae, 0xfa47, 0x2540, 0x4fac, 0x6fc8, 0x6b9e, 0x1, 0x0);
        gbc.writeMem(0x3bae, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfa47);
        EXPECT(gbc.pc(), 0x3bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01D3
        gbc.setState(0x1b88, 0xe580, 0xb180, 0x31c8, 0x2f6c, 0xcbee, 0x0, 0x0);
        gbc.writeMem(0x1b88, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe580);
        EXPECT(gbc.pc(), 0x1b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01D4
        gbc.setState(0xac9f, 0x8da, 0xdae0, 0xf5b1, 0x7457, 0xe91e, 0x1, 0x0);
        gbc.writeMem(0xac9f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8da);
        EXPECT(gbc.pc(), 0xaca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9f), 0xcb);
        EXPECT(gbc.readMem(0xaca0), 0x32);
        // CB 32 01D5
        gbc.setState(0x651b, 0xbf8b, 0x40c0, 0x1a1, 0x23d, 0xfe4e, 0x1, 0x1);
        gbc.writeMem(0x651b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbf8b);
        EXPECT(gbc.pc(), 0x651d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01D7
        gbc.setState(0x87c, 0x545e, 0x5bc0, 0x3fc2, 0x25a7, 0xc3d1, 0x0, 0x0);
        gbc.writeMem(0x87c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x545e);
        EXPECT(gbc.pc(), 0x87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01D8
        gbc.setState(0x35d4, 0x3df, 0xddb0, 0x489f, 0xb2b, 0x7d7d, 0x1, 0x1);
        gbc.writeMem(0x35d4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3df);
        EXPECT(gbc.pc(), 0x35d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01D9
        gbc.setState(0x6a20, 0x85f4, 0xa7e0, 0xa09b, 0xe9de, 0x99b2, 0x0, 0x0);
        gbc.writeMem(0x6a20, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x85f4);
        EXPECT(gbc.pc(), 0x6a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01DA
        gbc.setState(0x6f88, 0xda24, 0x76b0, 0xa7b1, 0x2d25, 0xb199, 0x0, 0x0);
        gbc.writeMem(0x6f88, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xda24);
        EXPECT(gbc.pc(), 0x6f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01DB
        gbc.setState(0x76cf, 0xdcff, 0xccb0, 0x3825, 0xf511, 0xf83, 0x0, 0x1);
        gbc.writeMem(0x76cf, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdcff);
        EXPECT(gbc.pc(), 0x76d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01DC
        gbc.setState(0xa63c, 0xcf8f, 0xe290, 0xa6d6, 0xd3f2, 0x15e0, 0x1, 0x1);
        gbc.writeMem(0xa63c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcf8f);
        EXPECT(gbc.pc(), 0xa63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa63c), 0xcb);
        EXPECT(gbc.readMem(0xa63d), 0x32);
        // CB 32 01DD
        gbc.setState(0xa6b6, 0x8d04, 0x7a70, 0xe9a5, 0xdf85, 0xab0b, 0x0, 0x1);
        gbc.writeMem(0xa6b6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8d04);
        EXPECT(gbc.pc(), 0xa6b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b6), 0xcb);
        EXPECT(gbc.readMem(0xa6b7), 0x32);
        // CB 32 01DE
        gbc.setState(0x8ccd, 0x7e1, 0x96f0, 0x8c2c, 0xf77e, 0xa551, 0x0, 0x0);
        gbc.writeMem(0x8ccd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7e1);
        EXPECT(gbc.pc(), 0x8ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ccd), 0xcb);
        EXPECT(gbc.readMem(0x8cce), 0x32);
        // CB 32 01DF
        gbc.setState(0xeba1, 0xf8e1, 0xd130, 0xc4be, 0x8cdb, 0xc437, 0x1, 0x0);
        gbc.writeMem(0xeba1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf8e1);
        EXPECT(gbc.pc(), 0xeba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba1), 0xcb);
        EXPECT(gbc.readMem(0xeba2), 0x32);
        // CB 32 01E0
        gbc.setState(0xab1d, 0x5dc9, 0xc940, 0xf5fa, 0x13d1, 0xd950, 0x0, 0x0);
        gbc.writeMem(0xab1d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5dc9);
        EXPECT(gbc.pc(), 0xab1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1d), 0xcb);
        EXPECT(gbc.readMem(0xab1e), 0x32);
        // CB 32 01E1
        gbc.setState(0xd37, 0xc128, 0x8bc0, 0xaaa0, 0x5df7, 0x18f9, 0x1, 0x0);
        gbc.writeMem(0xd37, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc128);
        EXPECT(gbc.pc(), 0xd39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01E2
        gbc.setState(0x5243, 0x5064, 0xfbe0, 0x3542, 0x780c, 0x6fb4, 0x1, 0x0);
        gbc.writeMem(0x5243, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5064);
        EXPECT(gbc.pc(), 0x5245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01E3
        gbc.setState(0xa18, 0xecca, 0x2af0, 0xe315, 0xde51, 0x9923, 0x0, 0x0);
        gbc.writeMem(0xa18, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xecca);
        EXPECT(gbc.pc(), 0xa1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01E4
        gbc.setState(0xc7a9, 0xcf9c, 0x6c80, 0x249d, 0xfcb2, 0x372, 0x0, 0x1);
        gbc.writeMem(0xc7a9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcf9c);
        EXPECT(gbc.pc(), 0xc7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7a9), 0xcb);
        EXPECT(gbc.readMem(0xc7aa), 0x32);
        // CB 32 01E5
        gbc.setState(0x41a8, 0x11ba, 0x1360, 0x59e9, 0x2b69, 0xca79, 0x0, 0x1);
        gbc.writeMem(0x41a8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x11ba);
        EXPECT(gbc.pc(), 0x41aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01E6
        gbc.setState(0xf90, 0x7766, 0x2b40, 0x21c2, 0xdc1, 0xf676, 0x0, 0x1);
        gbc.writeMem(0xf90, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7766);
        EXPECT(gbc.pc(), 0xf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01E7
        gbc.setState(0x7cdb, 0x1837, 0x5940, 0x66e, 0xa640, 0x11d8, 0x1, 0x1);
        gbc.writeMem(0x7cdb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1837);
        EXPECT(gbc.pc(), 0x7cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01E8
        gbc.setState(0xc1ea, 0xdd5c, 0xbac0, 0x68c4, 0xe25b, 0xde30, 0x1, 0x1);
        gbc.writeMem(0xc1ea, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdd5c);
        EXPECT(gbc.pc(), 0xc1ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ea), 0xcb);
        EXPECT(gbc.readMem(0xc1eb), 0x32);
        // CB 32 01EA
        gbc.setState(0xc0, 0xda0c, 0x9c80, 0x36a4, 0x9ae5, 0x48b0, 0x0, 0x1);
        gbc.writeMem(0xc0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xda0c);
        EXPECT(gbc.pc(), 0xc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01EB
        gbc.setState(0x8c0a, 0x9ee, 0xcb40, 0x2dcc, 0x23c0, 0xdc4a, 0x1, 0x0);
        gbc.writeMem(0x8c0a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9ee);
        EXPECT(gbc.pc(), 0x8c0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c0a), 0xcb);
        EXPECT(gbc.readMem(0x8c0b), 0x32);
        // CB 32 01EC
        gbc.setState(0x482d, 0x6b0b, 0xa9d0, 0xc8fa, 0x2d7c, 0x1d13, 0x0, 0x0);
        gbc.writeMem(0x482d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6b0b);
        EXPECT(gbc.pc(), 0x482f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01ED
        gbc.setState(0x85b7, 0x9e1a, 0x1a80, 0xfc18, 0xa7f9, 0xce87, 0x1, 0x0);
        gbc.writeMem(0x85b7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9e1a);
        EXPECT(gbc.pc(), 0x85b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b7), 0xcb);
        EXPECT(gbc.readMem(0x85b8), 0x32);
        // CB 32 01EE
        gbc.setState(0x3c02, 0xe95, 0xfa0, 0x7230, 0x8645, 0x5dfa, 0x1, 0x0);
        gbc.writeMem(0x3c02, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe95);
        EXPECT(gbc.pc(), 0x3c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01EF
        gbc.setState(0x87b8, 0xc125, 0x2740, 0x597b, 0x62f1, 0x240c, 0x0, 0x0);
        gbc.writeMem(0x87b8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc125);
        EXPECT(gbc.pc(), 0x87ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b8), 0xcb);
        EXPECT(gbc.readMem(0x87b9), 0x32);
        // CB 32 01F0
        gbc.setState(0x9da1, 0xa4d4, 0x6c60, 0x2d13, 0x8f90, 0x4e60, 0x0, 0x0);
        gbc.writeMem(0x9da1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa4d4);
        EXPECT(gbc.pc(), 0x9da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da1), 0xcb);
        EXPECT(gbc.readMem(0x9da2), 0x32);
        // CB 32 01F1
        gbc.setState(0x2b47, 0x3c16, 0x6570, 0xba04, 0xad7a, 0x8a6c, 0x0, 0x0);
        gbc.writeMem(0x2b47, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3c16);
        EXPECT(gbc.pc(), 0x2b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01F2
        gbc.setState(0xe518, 0x8c94, 0x2d60, 0xf509, 0x9c95, 0xccd3, 0x0, 0x0);
        gbc.writeMem(0xe518, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8c94);
        EXPECT(gbc.pc(), 0xe51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe518), 0xcb);
        EXPECT(gbc.readMem(0xe519), 0x32);
        // CB 32 01F3
        gbc.setState(0xc0ae, 0x2d48, 0x88a0, 0x9543, 0x9aa1, 0xb74, 0x1, 0x1);
        gbc.writeMem(0xc0ae, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2d48);
        EXPECT(gbc.pc(), 0xc0b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ae), 0xcb);
        EXPECT(gbc.readMem(0xc0af), 0x32);
        // CB 32 01F4
        gbc.setState(0x3628, 0xa55f, 0x7440, 0xe8fa, 0x89c, 0xce10, 0x0, 0x0);
        gbc.writeMem(0x3628, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa55f);
        EXPECT(gbc.pc(), 0x362a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01F6
        gbc.setState(0xdc7f, 0x6135, 0x1900, 0x34e0, 0xa057, 0x15f5, 0x1, 0x0);
        gbc.writeMem(0xdc7f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6135);
        EXPECT(gbc.pc(), 0xdc81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc7f), 0xcb);
        EXPECT(gbc.readMem(0xdc80), 0x32);
        // CB 32 01F7
        gbc.setState(0x9877, 0xcd71, 0x690, 0x79fd, 0xab5a, 0x6911, 0x0, 0x1);
        gbc.writeMem(0x9877, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcd71);
        EXPECT(gbc.pc(), 0x9879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9877), 0xcb);
        EXPECT(gbc.readMem(0x9878), 0x32);
        // CB 32 01F8
        gbc.setState(0xb70f, 0xf936, 0xe6e0, 0xf66c, 0x2532, 0x5009, 0x1, 0x1);
        gbc.writeMem(0xb70f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf936);
        EXPECT(gbc.pc(), 0xb711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb70f), 0xcb);
        EXPECT(gbc.readMem(0xb710), 0x32);
        // CB 32 01F9
        gbc.setState(0x3436, 0x3533, 0xaad0, 0x341d, 0xf50, 0x82de, 0x0, 0x1);
        gbc.writeMem(0x3436, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3533);
        EXPECT(gbc.pc(), 0x3438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01FA
        gbc.setState(0xc37c, 0x7513, 0x9660, 0x9ca5, 0xe77b, 0x2632, 0x0, 0x1);
        gbc.writeMem(0xc37c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7513);
        EXPECT(gbc.pc(), 0xc37e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc37c), 0xcb);
        EXPECT(gbc.readMem(0xc37d), 0x32);
        // CB 32 01FB
        gbc.setState(0x4ff0, 0xad2f, 0x2470, 0xc9f3, 0x6d1d, 0xce63, 0x1, 0x0);
        gbc.writeMem(0x4ff0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xad2f);
        EXPECT(gbc.pc(), 0x4ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01FC
        gbc.setState(0x8ca3, 0x17b2, 0x19b0, 0xa0f7, 0x5993, 0xd040, 0x0, 0x1);
        gbc.writeMem(0x8ca3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x17b2);
        EXPECT(gbc.pc(), 0x8ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca3), 0xcb);
        EXPECT(gbc.readMem(0x8ca4), 0x32);
        // CB 32 01FD
        gbc.setState(0xcf4c, 0x2c94, 0xe550, 0x6350, 0x802c, 0xd403, 0x0, 0x0);
        gbc.writeMem(0xcf4c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2c94);
        EXPECT(gbc.pc(), 0xcf4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4c), 0xcb);
        EXPECT(gbc.readMem(0xcf4d), 0x32);
        // CB 32 01FE
        gbc.setState(0x96a, 0xf357, 0x1fc0, 0x467d, 0x34a5, 0x37a9, 0x0, 0x0);
        gbc.writeMem(0x96a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf357);
        EXPECT(gbc.pc(), 0x96c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 01FF
        gbc.setState(0x6689, 0xb128, 0x8f00, 0x719e, 0xe144, 0xaa57, 0x1, 0x0);
        gbc.writeMem(0x6689, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb128);
        EXPECT(gbc.pc(), 0x668b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0200
        gbc.setState(0x8f3a, 0xc3e8, 0xe520, 0x1551, 0x693d, 0x1d56, 0x0, 0x0);
        gbc.writeMem(0x8f3a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc3e8);
        EXPECT(gbc.pc(), 0x8f3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f3a), 0xcb);
        EXPECT(gbc.readMem(0x8f3b), 0x32);
        // CB 32 0201
        gbc.setState(0xe43d, 0x4b0f, 0xc480, 0x1117, 0x14d9, 0x2bfe, 0x1, 0x1);
        gbc.writeMem(0xe43d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4b0f);
        EXPECT(gbc.pc(), 0xe43f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe43d), 0xcb);
        EXPECT(gbc.readMem(0xe43e), 0x32);
        // CB 32 0202
        gbc.setState(0x641e, 0x2ba3, 0xae70, 0x3682, 0x95e0, 0xdf54, 0x1, 0x1);
        gbc.writeMem(0x641e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2ba3);
        EXPECT(gbc.pc(), 0x6420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0203
        gbc.setState(0xbf34, 0x4ad, 0x5520, 0x66ab, 0x46f4, 0x3ae5, 0x1, 0x1);
        gbc.writeMem(0xbf34, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4ad);
        EXPECT(gbc.pc(), 0xbf36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf34), 0xcb);
        EXPECT(gbc.readMem(0xbf35), 0x32);
        // CB 32 0204
        gbc.setState(0x19d8, 0xdb44, 0x8cc0, 0xf6a7, 0x263b, 0xa099, 0x1, 0x1);
        gbc.writeMem(0x19d8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdb44);
        EXPECT(gbc.pc(), 0x19da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0205
        gbc.setState(0x6ea4, 0x4e33, 0x970, 0xb21e, 0x767c, 0x5f94, 0x0, 0x1);
        gbc.writeMem(0x6ea4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4e33);
        EXPECT(gbc.pc(), 0x6ea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0206
        gbc.setState(0xe017, 0x8772, 0x51a0, 0x75c2, 0x217d, 0x2f10, 0x1, 0x0);
        gbc.writeMem(0xe017, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8772);
        EXPECT(gbc.pc(), 0xe019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe017), 0xcb);
        EXPECT(gbc.readMem(0xe018), 0x32);
        // CB 32 0207
        gbc.setState(0x40fb, 0xbccc, 0xd3b0, 0x4669, 0x830e, 0xc044, 0x1, 0x0);
        gbc.writeMem(0x40fb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbccc);
        EXPECT(gbc.pc(), 0x40fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0208
        gbc.setState(0xb8f3, 0x45cd, 0xef20, 0xf8f3, 0x35c0, 0xf509, 0x0, 0x1);
        gbc.writeMem(0xb8f3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x45cd);
        EXPECT(gbc.pc(), 0xb8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f3), 0xcb);
        EXPECT(gbc.readMem(0xb8f4), 0x32);
        // CB 32 0209
        gbc.setState(0x95d4, 0x4e8c, 0xa9c0, 0x3357, 0x2ef2, 0x7c3f, 0x1, 0x1);
        gbc.writeMem(0x95d4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4e8c);
        EXPECT(gbc.pc(), 0x95d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d4), 0xcb);
        EXPECT(gbc.readMem(0x95d5), 0x32);
        // CB 32 020A
        gbc.setState(0x7c62, 0xdf19, 0x76d0, 0x1d9c, 0x8a38, 0x234, 0x1, 0x0);
        gbc.writeMem(0x7c62, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdf19);
        EXPECT(gbc.pc(), 0x7c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 020B
        gbc.setState(0x2e95, 0x9212, 0xccd0, 0x636c, 0xf3fe, 0x94ed, 0x0, 0x1);
        gbc.writeMem(0x2e95, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9212);
        EXPECT(gbc.pc(), 0x2e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 020C
        gbc.setState(0xa6d5, 0x4e67, 0x86e0, 0x9310, 0x484c, 0xe64e, 0x1, 0x0);
        gbc.writeMem(0xa6d5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4e67);
        EXPECT(gbc.pc(), 0xa6d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d5), 0xcb);
        EXPECT(gbc.readMem(0xa6d6), 0x32);
        // CB 32 020D
        gbc.setState(0x8d71, 0xe3c8, 0xf770, 0x64df, 0xde89, 0x5078, 0x1, 0x0);
        gbc.writeMem(0x8d71, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe3c8);
        EXPECT(gbc.pc(), 0x8d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d71), 0xcb);
        EXPECT(gbc.readMem(0x8d72), 0x32);
        // CB 32 020E
        gbc.setState(0xd224, 0xb2ee, 0xb600, 0x89f0, 0x680f, 0xae10, 0x0, 0x1);
        gbc.writeMem(0xd224, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb2ee);
        EXPECT(gbc.pc(), 0xd226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd224), 0xcb);
        EXPECT(gbc.readMem(0xd225), 0x32);
        // CB 32 020F
        gbc.setState(0x902b, 0x5af7, 0x6250, 0x1e88, 0x3447, 0xf98a, 0x0, 0x1);
        gbc.writeMem(0x902b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5af7);
        EXPECT(gbc.pc(), 0x902d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x902b), 0xcb);
        EXPECT(gbc.readMem(0x902c), 0x32);
        // CB 32 0211
        gbc.setState(0xc22, 0x1831, 0xc3c0, 0xc969, 0x8297, 0xf31e, 0x1, 0x1);
        gbc.writeMem(0xc22, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1831);
        EXPECT(gbc.pc(), 0xc24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0212
        gbc.setState(0x4c13, 0xf0, 0xae30, 0x5486, 0xca5, 0x521b, 0x1, 0x1);
        gbc.writeMem(0x4c13, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf0);
        EXPECT(gbc.pc(), 0x4c15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0213
        gbc.setState(0x540c, 0xa755, 0xc560, 0xaa5d, 0xd3b, 0xdcdd, 0x0, 0x0);
        gbc.writeMem(0x540c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa755);
        EXPECT(gbc.pc(), 0x540e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0214
        gbc.setState(0x48e4, 0xdc24, 0xb8c0, 0x2182, 0xcd4c, 0x9647, 0x1, 0x1);
        gbc.writeMem(0x48e4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdc24);
        EXPECT(gbc.pc(), 0x48e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0215
        gbc.setState(0x54d6, 0x953, 0x93b0, 0x5a72, 0x6398, 0xddfb, 0x0, 0x1);
        gbc.writeMem(0x54d6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x953);
        EXPECT(gbc.pc(), 0x54d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0216
        gbc.setState(0xd00f, 0x153c, 0xcd20, 0xbf61, 0x9996, 0xcc8a, 0x0, 0x1);
        gbc.writeMem(0xd00f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x153c);
        EXPECT(gbc.pc(), 0xd011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00f), 0xcb);
        EXPECT(gbc.readMem(0xd010), 0x32);
        // CB 32 0217
        gbc.setState(0xd865, 0xae81, 0xe0d0, 0x4c06, 0x1982, 0xf530, 0x0, 0x0);
        gbc.writeMem(0xd865, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xae81);
        EXPECT(gbc.pc(), 0xd867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd865), 0xcb);
        EXPECT(gbc.readMem(0xd866), 0x32);
        // CB 32 0218
        gbc.setState(0x96a2, 0xc30d, 0x66e0, 0xa375, 0xbf18, 0xc682, 0x0, 0x1);
        gbc.writeMem(0x96a2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc30d);
        EXPECT(gbc.pc(), 0x96a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a2), 0xcb);
        EXPECT(gbc.readMem(0x96a3), 0x32);
        // CB 32 0219
        gbc.setState(0x88fc, 0xf13f, 0xfbc0, 0xfefa, 0x7a48, 0x7c29, 0x0, 0x0);
        gbc.writeMem(0x88fc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf13f);
        EXPECT(gbc.pc(), 0x88fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88fc), 0xcb);
        EXPECT(gbc.readMem(0x88fd), 0x32);
        // CB 32 021A
        gbc.setState(0x9ece, 0x8d61, 0xc110, 0x2be2, 0xc47a, 0x9459, 0x0, 0x0);
        gbc.writeMem(0x9ece, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8d61);
        EXPECT(gbc.pc(), 0x9ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ece), 0xcb);
        EXPECT(gbc.readMem(0x9ecf), 0x32);
        // CB 32 021B
        gbc.setState(0x817c, 0x2581, 0x65b0, 0x796a, 0x46c3, 0x75f8, 0x1, 0x1);
        gbc.writeMem(0x817c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2581);
        EXPECT(gbc.pc(), 0x817e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817c), 0xcb);
        EXPECT(gbc.readMem(0x817d), 0x32);
        // CB 32 021C
        gbc.setState(0x64fd, 0x4052, 0x260, 0x1d43, 0xfc9c, 0x548e, 0x0, 0x0);
        gbc.writeMem(0x64fd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4052);
        EXPECT(gbc.pc(), 0x64ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 021D
        gbc.setState(0x4971, 0x6db0, 0xab10, 0x86d5, 0x50ca, 0xb8a0, 0x0, 0x1);
        gbc.writeMem(0x4971, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6db0);
        EXPECT(gbc.pc(), 0x4973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 021E
        gbc.setState(0x662d, 0x284f, 0xd020, 0x6789, 0xb40, 0x9f50, 0x1, 0x1);
        gbc.writeMem(0x662d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x284f);
        EXPECT(gbc.pc(), 0x662f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 021F
        gbc.setState(0x4230, 0x40f3, 0x5b0, 0xd2ef, 0x6224, 0x51a8, 0x0, 0x0);
        gbc.writeMem(0x4230, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x40f3);
        EXPECT(gbc.pc(), 0x4232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0220
        gbc.setState(0x3a0, 0xea9d, 0xf1b0, 0xa144, 0x3569, 0x49f3, 0x0, 0x0);
        gbc.writeMem(0x3a0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xea9d);
        EXPECT(gbc.pc(), 0x3a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0221
        gbc.setState(0x211a, 0x80d0, 0x31e0, 0xa887, 0x6ec4, 0x84f, 0x0, 0x0);
        gbc.writeMem(0x211a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x80d0);
        EXPECT(gbc.pc(), 0x211c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0222
        gbc.setState(0x183d, 0x32f, 0x62b0, 0xb77c, 0x8f8f, 0x491, 0x0, 0x1);
        gbc.writeMem(0x183d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x32f);
        EXPECT(gbc.pc(), 0x183f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0223
        gbc.setState(0xd745, 0xe3e7, 0x87e0, 0xeacb, 0x4127, 0xb258, 0x0, 0x0);
        gbc.writeMem(0xd745, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe3e7);
        EXPECT(gbc.pc(), 0xd747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd745), 0xcb);
        EXPECT(gbc.readMem(0xd746), 0x32);
        // CB 32 0224
        gbc.setState(0x6a65, 0x560a, 0x17a0, 0x3fed, 0x2889, 0xa8a4, 0x1, 0x0);
        gbc.writeMem(0x6a65, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x560a);
        EXPECT(gbc.pc(), 0x6a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0225
        gbc.setState(0x100f, 0xcfec, 0xdfe0, 0x2a78, 0x6a9e, 0xb35e, 0x1, 0x0);
        gbc.writeMem(0x100f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcfec);
        EXPECT(gbc.pc(), 0x1011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0227
        gbc.setState(0x3653, 0xc712, 0xe2f0, 0x198d, 0x60ef, 0xab6, 0x1, 0x0);
        gbc.writeMem(0x3653, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc712);
        EXPECT(gbc.pc(), 0x3655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0228
        gbc.setState(0x63ac, 0x8020, 0x410, 0xa030, 0xfcd, 0xe8db, 0x0, 0x1);
        gbc.writeMem(0x63ac, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8020);
        EXPECT(gbc.pc(), 0x63ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0229
        gbc.setState(0x16c, 0x315e, 0x9e0, 0xb189, 0xd9c4, 0x616a, 0x0, 0x0);
        gbc.writeMem(0x16c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x315e);
        EXPECT(gbc.pc(), 0x16e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 022A
        gbc.setState(0x6c61, 0x37d8, 0xbba0, 0xac36, 0x474c, 0xacd1, 0x1, 0x0);
        gbc.writeMem(0x6c61, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x37d8);
        EXPECT(gbc.pc(), 0x6c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 022B
        gbc.setState(0xb38a, 0x4ec4, 0xf530, 0x68fc, 0x5771, 0xa0a5, 0x1, 0x1);
        gbc.writeMem(0xb38a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4ec4);
        EXPECT(gbc.pc(), 0xb38c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb38a), 0xcb);
        EXPECT(gbc.readMem(0xb38b), 0x32);
        // CB 32 022C
        gbc.setState(0xd09f, 0xa319, 0x46d0, 0xd4bf, 0xce61, 0xd68f, 0x0, 0x0);
        gbc.writeMem(0xd09f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa319);
        EXPECT(gbc.pc(), 0xd0a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd09f), 0xcb);
        EXPECT(gbc.readMem(0xd0a0), 0x32);
        // CB 32 022D
        gbc.setState(0x4ad7, 0x65ea, 0xfa30, 0xd5b9, 0x9ffe, 0x82c0, 0x1, 0x0);
        gbc.writeMem(0x4ad7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x65ea);
        EXPECT(gbc.pc(), 0x4ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 022E
        gbc.setState(0x5637, 0x861f, 0xf520, 0x5b0e, 0xc10, 0x3471, 0x0, 0x0);
        gbc.writeMem(0x5637, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x861f);
        EXPECT(gbc.pc(), 0x5639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 022F
        gbc.setState(0x270a, 0xe432, 0xcf00, 0x9fce, 0xbef0, 0x4647, 0x1, 0x0);
        gbc.writeMem(0x270a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe432);
        EXPECT(gbc.pc(), 0x270c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0230
        gbc.setState(0x778e, 0x1479, 0xa410, 0xcd02, 0xd1eb, 0xad11, 0x0, 0x1);
        gbc.writeMem(0x778e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1479);
        EXPECT(gbc.pc(), 0x7790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0231
        gbc.setState(0x1f60, 0xfb81, 0xca0, 0xf636, 0x4808, 0x8b3e, 0x0, 0x0);
        gbc.writeMem(0x1f60, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfb81);
        EXPECT(gbc.pc(), 0x1f62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0232
        gbc.setState(0x1642, 0x8b90, 0x3ff0, 0xf9e0, 0x2f7, 0xb502, 0x1, 0x1);
        gbc.writeMem(0x1642, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8b90);
        EXPECT(gbc.pc(), 0x1644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0233
        gbc.setState(0x2094, 0xa2d1, 0xd800, 0x22fc, 0xf790, 0x6af4, 0x0, 0x1);
        gbc.writeMem(0x2094, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa2d1);
        EXPECT(gbc.pc(), 0x2096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0234
        gbc.setState(0xeea2, 0xbbf3, 0xcf30, 0x1c8e, 0x7ea9, 0xf6ce, 0x1, 0x0);
        gbc.writeMem(0xeea2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbbf3);
        EXPECT(gbc.pc(), 0xeea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea2), 0xcb);
        EXPECT(gbc.readMem(0xeea3), 0x32);
        // CB 32 0235
        gbc.setState(0xe1f6, 0xfffa, 0x710, 0x6346, 0x43b2, 0x623f, 0x0, 0x1);
        gbc.writeMem(0xe1f6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xfffa);
        EXPECT(gbc.pc(), 0xe1f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f6), 0xcb);
        EXPECT(gbc.readMem(0xe1f7), 0x32);
        // CB 32 0236
        gbc.setState(0x2236, 0xde23, 0x33b0, 0xae2a, 0xf99c, 0x296f, 0x0, 0x0);
        gbc.writeMem(0x2236, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xde23);
        EXPECT(gbc.pc(), 0x2238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0237
        gbc.setState(0x325b, 0x322d, 0x46f0, 0xb3f5, 0x9f38, 0xeb78, 0x1, 0x0);
        gbc.writeMem(0x325b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x322d);
        EXPECT(gbc.pc(), 0x325d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0238
        gbc.setState(0x6edb, 0x627, 0x3330, 0x7042, 0x5266, 0x83cf, 0x1, 0x0);
        gbc.writeMem(0x6edb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x627);
        EXPECT(gbc.pc(), 0x6edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0239
        gbc.setState(0x1eab, 0x4e86, 0x7ae0, 0x7f93, 0xd550, 0x97e2, 0x1, 0x0);
        gbc.writeMem(0x1eab, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4e86);
        EXPECT(gbc.pc(), 0x1ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 023A
        gbc.setState(0x2b51, 0x653, 0xf460, 0xad3d, 0x7418, 0xc6db, 0x1, 0x1);
        gbc.writeMem(0x2b51, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x653);
        EXPECT(gbc.pc(), 0x2b53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 023B
        gbc.setState(0xcbf7, 0xb70c, 0xd8d0, 0xb277, 0xb735, 0x85b2, 0x1, 0x0);
        gbc.writeMem(0xcbf7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb70c);
        EXPECT(gbc.pc(), 0xcbf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf7), 0xcb);
        EXPECT(gbc.readMem(0xcbf8), 0x32);
        // CB 32 023C
        gbc.setState(0x52c4, 0xaeba, 0x8630, 0xc740, 0xed51, 0x4644, 0x1, 0x0);
        gbc.writeMem(0x52c4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xaeba);
        EXPECT(gbc.pc(), 0x52c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 023D
        gbc.setState(0xc715, 0xf4f1, 0x2290, 0x61cf, 0x7120, 0xfbb5, 0x1, 0x1);
        gbc.writeMem(0xc715, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf4f1);
        EXPECT(gbc.pc(), 0xc717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc715), 0xcb);
        EXPECT(gbc.readMem(0xc716), 0x32);
        // CB 32 023E
        gbc.setState(0xd383, 0x9b84, 0x2510, 0xe4f1, 0xd106, 0x7d9, 0x1, 0x1);
        gbc.writeMem(0xd383, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9b84);
        EXPECT(gbc.pc(), 0xd385);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd383), 0xcb);
        EXPECT(gbc.readMem(0xd384), 0x32);
        // CB 32 023F
        gbc.setState(0x57f4, 0x9cc8, 0xd9b0, 0x3c98, 0x6fc7, 0x88b6, 0x1, 0x1);
        gbc.writeMem(0x57f4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9cc8);
        EXPECT(gbc.pc(), 0x57f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0240
        gbc.setState(0x81e9, 0x44e6, 0xcc10, 0xf985, 0xe009, 0x13c5, 0x1, 0x0);
        gbc.writeMem(0x81e9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x44e6);
        EXPECT(gbc.pc(), 0x81eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e9), 0xcb);
        EXPECT(gbc.readMem(0x81ea), 0x32);
        // CB 32 0242
        gbc.setState(0xeb76, 0x8770, 0x3500, 0xf8da, 0x6a37, 0x280f, 0x0, 0x1);
        gbc.writeMem(0xeb76, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8770);
        EXPECT(gbc.pc(), 0xeb78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb76), 0xcb);
        EXPECT(gbc.readMem(0xeb77), 0x32);
        // CB 32 0243
        gbc.setState(0xbdd9, 0x5dcc, 0xb040, 0x4cfa, 0x29e6, 0x400a, 0x1, 0x0);
        gbc.writeMem(0xbdd9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5dcc);
        EXPECT(gbc.pc(), 0xbddb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdd9), 0xcb);
        EXPECT(gbc.readMem(0xbdda), 0x32);
        // CB 32 0244
        gbc.setState(0x2291, 0xbe00, 0x2e80, 0xe97a, 0x10e9, 0xc1de, 0x1, 0x1);
        gbc.writeMem(0x2291, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xbe00);
        EXPECT(gbc.pc(), 0x2293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0245
        gbc.setState(0xc20d, 0x1596, 0x51a0, 0x2dea, 0x910d, 0x556c, 0x0, 0x1);
        gbc.writeMem(0xc20d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1596);
        EXPECT(gbc.pc(), 0xc20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20d), 0xcb);
        EXPECT(gbc.readMem(0xc20e), 0x32);
        // CB 32 0246
        gbc.setState(0x9fc9, 0xfb6a, 0x80, 0x519c, 0xb598, 0x1907, 0x1, 0x0);
        gbc.writeMem(0x9fc9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xfb6a);
        EXPECT(gbc.pc(), 0x9fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc9), 0xcb);
        EXPECT(gbc.readMem(0x9fca), 0x32);
        // CB 32 0247
        gbc.setState(0xd44e, 0x2fef, 0xe5b0, 0x208a, 0xecfa, 0x5567, 0x1, 0x0);
        gbc.writeMem(0xd44e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2fef);
        EXPECT(gbc.pc(), 0xd450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd44e), 0xcb);
        EXPECT(gbc.readMem(0xd44f), 0x32);
        // CB 32 0248
        gbc.setState(0x9e60, 0x84c2, 0x4120, 0xbb20, 0x7ea7, 0xbf48, 0x0, 0x1);
        gbc.writeMem(0x9e60, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x84c2);
        EXPECT(gbc.pc(), 0x9e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e60), 0xcb);
        EXPECT(gbc.readMem(0x9e61), 0x32);
        // CB 32 0249
        gbc.setState(0x6d63, 0xe1cb, 0xb3b0, 0xd1c9, 0x3c41, 0xf476, 0x0, 0x0);
        gbc.writeMem(0x6d63, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe1cb);
        EXPECT(gbc.pc(), 0x6d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 024A
        gbc.setState(0x43eb, 0x6bc4, 0xa670, 0x716c, 0x413a, 0x5b23, 0x0, 0x0);
        gbc.writeMem(0x43eb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6bc4);
        EXPECT(gbc.pc(), 0x43ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 024B
        gbc.setState(0x17a3, 0x69f9, 0x5ef0, 0xa347, 0x9a6a, 0xc348, 0x1, 0x0);
        gbc.writeMem(0x17a3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x69f9);
        EXPECT(gbc.pc(), 0x17a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 024C
        gbc.setState(0x9f4c, 0xa261, 0xe50, 0x362e, 0xc9, 0x81fd, 0x1, 0x1);
        gbc.writeMem(0x9f4c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa261);
        EXPECT(gbc.pc(), 0x9f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f4c), 0xcb);
        EXPECT(gbc.readMem(0x9f4d), 0x32);
        // CB 32 024D
        gbc.setState(0x6308, 0xeb02, 0x38e0, 0x9e60, 0x278d, 0xbf3b, 0x1, 0x1);
        gbc.writeMem(0x6308, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xeb02);
        EXPECT(gbc.pc(), 0x630a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 024E
        gbc.setState(0x704b, 0x24e3, 0xb5c0, 0x7c6a, 0x8c94, 0x4c11, 0x1, 0x0);
        gbc.writeMem(0x704b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x24e3);
        EXPECT(gbc.pc(), 0x704d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 024F
        gbc.setState(0xc848, 0xa949, 0xeea0, 0xf29a, 0x7ffa, 0x9f9b, 0x0, 0x1);
        gbc.writeMem(0xc848, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa949);
        EXPECT(gbc.pc(), 0xc84a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc848), 0xcb);
        EXPECT(gbc.readMem(0xc849), 0x32);
        // CB 32 0250
        gbc.setState(0xb003, 0xce42, 0xa320, 0x210d, 0x826d, 0xd068, 0x0, 0x1);
        gbc.writeMem(0xb003, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xce42);
        EXPECT(gbc.pc(), 0xb005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb003), 0xcb);
        EXPECT(gbc.readMem(0xb004), 0x32);
        // CB 32 0251
        gbc.setState(0x457f, 0x32cf, 0x1900, 0x28d0, 0xcd86, 0xd503, 0x1, 0x1);
        gbc.writeMem(0x457f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x32cf);
        EXPECT(gbc.pc(), 0x4581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0252
        gbc.setState(0xb7d8, 0x35ef, 0x1460, 0x254b, 0x3662, 0xbfe9, 0x0, 0x1);
        gbc.writeMem(0xb7d8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x35ef);
        EXPECT(gbc.pc(), 0xb7da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d8), 0xcb);
        EXPECT(gbc.readMem(0xb7d9), 0x32);
        // CB 32 0253
        gbc.setState(0xbaa5, 0xd5cd, 0xea50, 0x8afc, 0x4a36, 0x5002, 0x0, 0x1);
        gbc.writeMem(0xbaa5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd5cd);
        EXPECT(gbc.pc(), 0xbaa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa5), 0xcb);
        EXPECT(gbc.readMem(0xbaa6), 0x32);
        // CB 32 0254
        gbc.setState(0x711c, 0xe5a6, 0xa940, 0xbd65, 0xba66, 0x418a, 0x0, 0x1);
        gbc.writeMem(0x711c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe5a6);
        EXPECT(gbc.pc(), 0x711e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0255
        gbc.setState(0x61c1, 0x2020, 0x7c10, 0x923e, 0x2855, 0x6995, 0x0, 0x1);
        gbc.writeMem(0x61c1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2020);
        EXPECT(gbc.pc(), 0x61c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0256
        gbc.setState(0x2826, 0x8141, 0x2730, 0xb575, 0xc511, 0xd45c, 0x1, 0x1);
        gbc.writeMem(0x2826, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8141);
        EXPECT(gbc.pc(), 0x2828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0257
        gbc.setState(0x1d0, 0x4821, 0x3930, 0x4835, 0x6f71, 0xcafc, 0x0, 0x1);
        gbc.writeMem(0x1d0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4821);
        EXPECT(gbc.pc(), 0x1d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0258
        gbc.setState(0x5e61, 0xcabb, 0xe3c0, 0x3f23, 0xa27b, 0x3cd1, 0x0, 0x0);
        gbc.writeMem(0x5e61, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcabb);
        EXPECT(gbc.pc(), 0x5e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 025A
        gbc.setState(0xb9aa, 0xba2f, 0x1ab0, 0xf05b, 0xc349, 0x72d5, 0x1, 0x0);
        gbc.writeMem(0xb9aa, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xba2f);
        EXPECT(gbc.pc(), 0xb9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9aa), 0xcb);
        EXPECT(gbc.readMem(0xb9ab), 0x32);
        // CB 32 025B
        gbc.setState(0xd0a3, 0xf705, 0x51b0, 0x957c, 0xa77d, 0x7527, 0x0, 0x1);
        gbc.writeMem(0xd0a3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf705);
        EXPECT(gbc.pc(), 0xd0a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a3), 0xcb);
        EXPECT(gbc.readMem(0xd0a4), 0x32);
        // CB 32 025C
        gbc.setState(0x12a4, 0xf50e, 0xd90, 0x4852, 0x7c84, 0xaa53, 0x1, 0x0);
        gbc.writeMem(0x12a4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf50e);
        EXPECT(gbc.pc(), 0x12a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 025D
        gbc.setState(0x8f35, 0x1fb8, 0xb9a0, 0x687b, 0x388d, 0x666c, 0x0, 0x0);
        gbc.writeMem(0x8f35, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1fb8);
        EXPECT(gbc.pc(), 0x8f37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f35), 0xcb);
        EXPECT(gbc.readMem(0x8f36), 0x32);
        // CB 32 025F
        gbc.setState(0x7327, 0xf738, 0xd380, 0x1467, 0x50e9, 0xa747, 0x1, 0x0);
        gbc.writeMem(0x7327, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf738);
        EXPECT(gbc.pc(), 0x7329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0261
        gbc.setState(0x99ed, 0xbb2b, 0x2a60, 0xe4fb, 0x2ebc, 0x905a, 0x0, 0x1);
        gbc.writeMem(0x99ed, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbb2b);
        EXPECT(gbc.pc(), 0x99ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ed), 0xcb);
        EXPECT(gbc.readMem(0x99ee), 0x32);
        // CB 32 0262
        gbc.setState(0x8d7d, 0x126, 0x79c0, 0xd161, 0x957f, 0x61d5, 0x0, 0x0);
        gbc.writeMem(0x8d7d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x126);
        EXPECT(gbc.pc(), 0x8d7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7d), 0xcb);
        EXPECT(gbc.readMem(0x8d7e), 0x32);
        // CB 32 0263
        gbc.setState(0x6a83, 0xbc98, 0x8ef0, 0xb4cc, 0x8069, 0xf955, 0x0, 0x1);
        gbc.writeMem(0x6a83, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xbc98);
        EXPECT(gbc.pc(), 0x6a85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0264
        gbc.setState(0x2b25, 0xe2e2, 0x8010, 0xe595, 0x9de, 0xe293, 0x1, 0x0);
        gbc.writeMem(0x2b25, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe2e2);
        EXPECT(gbc.pc(), 0x2b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0265
        gbc.setState(0xc330, 0x8076, 0xd430, 0x3edc, 0xf2f3, 0x7aba, 0x1, 0x1);
        gbc.writeMem(0xc330, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8076);
        EXPECT(gbc.pc(), 0xc332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc330), 0xcb);
        EXPECT(gbc.readMem(0xc331), 0x32);
        // CB 32 0266
        gbc.setState(0x98b0, 0x82d5, 0x8ea0, 0xc7f, 0x5fc3, 0xc5c6, 0x1, 0x0);
        gbc.writeMem(0x98b0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x82d5);
        EXPECT(gbc.pc(), 0x98b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b0), 0xcb);
        EXPECT(gbc.readMem(0x98b1), 0x32);
        // CB 32 0267
        gbc.setState(0x99c0, 0xcdc1, 0x1870, 0xa3f0, 0x8180, 0xff32, 0x0, 0x0);
        gbc.writeMem(0x99c0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcdc1);
        EXPECT(gbc.pc(), 0x99c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c0), 0xcb);
        EXPECT(gbc.readMem(0x99c1), 0x32);
        // CB 32 0268
        gbc.setState(0xbf0e, 0x5051, 0x4ea0, 0x65b0, 0x76cd, 0x2330, 0x1, 0x0);
        gbc.writeMem(0xbf0e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5051);
        EXPECT(gbc.pc(), 0xbf10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf0e), 0xcb);
        EXPECT(gbc.readMem(0xbf0f), 0x32);
        // CB 32 0269
        gbc.setState(0x4271, 0xb69f, 0xf6c0, 0xd1e1, 0x8d17, 0xd4dc, 0x0, 0x0);
        gbc.writeMem(0x4271, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb69f);
        EXPECT(gbc.pc(), 0x4273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 026A
        gbc.setState(0x1244, 0x6b65, 0x9360, 0x5854, 0xb577, 0xe1e, 0x1, 0x0);
        gbc.writeMem(0x1244, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6b65);
        EXPECT(gbc.pc(), 0x1246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 026B
        gbc.setState(0xd7a1, 0xbea8, 0xae60, 0x5c9a, 0xa03b, 0x450c, 0x1, 0x1);
        gbc.writeMem(0xd7a1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbea8);
        EXPECT(gbc.pc(), 0xd7a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a1), 0xcb);
        EXPECT(gbc.readMem(0xd7a2), 0x32);
        // CB 32 026C
        gbc.setState(0x68d7, 0x613d, 0xc190, 0x5109, 0xf2df, 0xe444, 0x1, 0x0);
        gbc.writeMem(0x68d7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x613d);
        EXPECT(gbc.pc(), 0x68d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 026D
        gbc.setState(0x9253, 0xb5bc, 0xf520, 0xb86, 0x3407, 0x5e16, 0x0, 0x1);
        gbc.writeMem(0x9253, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb5bc);
        EXPECT(gbc.pc(), 0x9255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9253), 0xcb);
        EXPECT(gbc.readMem(0x9254), 0x32);
        // CB 32 026E
        gbc.setState(0xda1e, 0x44b1, 0xde90, 0x7dbb, 0xabd9, 0xaebb, 0x1, 0x1);
        gbc.writeMem(0xda1e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x44b1);
        EXPECT(gbc.pc(), 0xda20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda1e), 0xcb);
        EXPECT(gbc.readMem(0xda1f), 0x32);
        // CB 32 026F
        gbc.setState(0xa300, 0xb6be, 0x1b20, 0x26c4, 0x4757, 0xb86f, 0x1, 0x1);
        gbc.writeMem(0xa300, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb6be);
        EXPECT(gbc.pc(), 0xa302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa300), 0xcb);
        EXPECT(gbc.readMem(0xa301), 0x32);
        // CB 32 0270
        gbc.setState(0xb2df, 0xccd2, 0x2be0, 0x1604, 0xc8f0, 0xfc96, 0x1, 0x1);
        gbc.writeMem(0xb2df, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xccd2);
        EXPECT(gbc.pc(), 0xb2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2df), 0xcb);
        EXPECT(gbc.readMem(0xb2e0), 0x32);
        // CB 32 0271
        gbc.setState(0x183f, 0x1897, 0xe080, 0x1190, 0x99a, 0xfe69, 0x1, 0x0);
        gbc.writeMem(0x183f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1897);
        EXPECT(gbc.pc(), 0x1841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0272
        gbc.setState(0xd7a3, 0x12ac, 0x1680, 0x9e1, 0x1ec4, 0xcb1d, 0x1, 0x1);
        gbc.writeMem(0xd7a3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x12ac);
        EXPECT(gbc.pc(), 0xd7a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a3), 0xcb);
        EXPECT(gbc.readMem(0xd7a4), 0x32);
        // CB 32 0274
        gbc.setState(0xdd8a, 0xd7d0, 0x82a0, 0xbd0f, 0xe63e, 0x1a48, 0x0, 0x0);
        gbc.writeMem(0xdd8a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd7d0);
        EXPECT(gbc.pc(), 0xdd8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd8a), 0xcb);
        EXPECT(gbc.readMem(0xdd8b), 0x32);
        // CB 32 0275
        gbc.setState(0xcabc, 0x7d8b, 0xf5d0, 0x7e62, 0x6f07, 0xc0b2, 0x1, 0x1);
        gbc.writeMem(0xcabc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7d8b);
        EXPECT(gbc.pc(), 0xcabe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcabc), 0xcb);
        EXPECT(gbc.readMem(0xcabd), 0x32);
        // CB 32 0276
        gbc.setState(0x6a10, 0x53b3, 0xc1c0, 0x895d, 0xd65d, 0xd065, 0x1, 0x1);
        gbc.writeMem(0x6a10, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x53b3);
        EXPECT(gbc.pc(), 0x6a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0277
        gbc.setState(0xcaeb, 0x4d11, 0x4ab0, 0x75, 0x3f21, 0x2468, 0x0, 0x1);
        gbc.writeMem(0xcaeb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4d11);
        EXPECT(gbc.pc(), 0xcaed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaeb), 0xcb);
        EXPECT(gbc.readMem(0xcaec), 0x32);
        // CB 32 0278
        gbc.setState(0x44d2, 0x93d1, 0x61a0, 0xc6fd, 0xa272, 0x7c5d, 0x1, 0x0);
        gbc.writeMem(0x44d2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x93d1);
        EXPECT(gbc.pc(), 0x44d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0279
        gbc.setState(0xb654, 0xa08d, 0xc210, 0x1ee4, 0xeecf, 0x4ca1, 0x0, 0x0);
        gbc.writeMem(0xb654, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa08d);
        EXPECT(gbc.pc(), 0xb656);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb654), 0xcb);
        EXPECT(gbc.readMem(0xb655), 0x32);
        // CB 32 027A
        gbc.setState(0x1c9, 0x7d7f, 0x1e40, 0x4bea, 0x1b5e, 0x3fa9, 0x0, 0x0);
        gbc.writeMem(0x1c9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7d7f);
        EXPECT(gbc.pc(), 0x1cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 027B
        gbc.setState(0xa482, 0xf450, 0xeac0, 0xeec2, 0xd4ec, 0xddfa, 0x1, 0x0);
        gbc.writeMem(0xa482, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf450);
        EXPECT(gbc.pc(), 0xa484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa482), 0xcb);
        EXPECT(gbc.readMem(0xa483), 0x32);
        // CB 32 027C
        gbc.setState(0x8d94, 0x1359, 0xe630, 0x59b2, 0xf1d3, 0x1ae0, 0x0, 0x0);
        gbc.writeMem(0x8d94, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1359);
        EXPECT(gbc.pc(), 0x8d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d94), 0xcb);
        EXPECT(gbc.readMem(0x8d95), 0x32);
        // CB 32 027D
        gbc.setState(0x55a7, 0x697f, 0xc130, 0x940, 0x6af3, 0xb9da, 0x0, 0x1);
        gbc.writeMem(0x55a7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x697f);
        EXPECT(gbc.pc(), 0x55a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 027E
        gbc.setState(0xdc95, 0x5a9f, 0x2310, 0x23fc, 0x9754, 0x3aba, 0x0, 0x1);
        gbc.writeMem(0xdc95, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5a9f);
        EXPECT(gbc.pc(), 0xdc97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc95), 0xcb);
        EXPECT(gbc.readMem(0xdc96), 0x32);
        // CB 32 027F
        gbc.setState(0x11a9, 0x51d5, 0x3990, 0xb078, 0x3709, 0xba26, 0x0, 0x1);
        gbc.writeMem(0x11a9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x51d5);
        EXPECT(gbc.pc(), 0x11ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0280
        gbc.setState(0xe048, 0x5d8, 0x1880, 0x5d93, 0x606b, 0x43f2, 0x1, 0x0);
        gbc.writeMem(0xe048, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5d8);
        EXPECT(gbc.pc(), 0xe04a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe048), 0xcb);
        EXPECT(gbc.readMem(0xe049), 0x32);
        // CB 32 0281
        gbc.setState(0x9c8e, 0xeb48, 0x70b0, 0x59e5, 0x74b6, 0xbe44, 0x1, 0x1);
        gbc.writeMem(0x9c8e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xeb48);
        EXPECT(gbc.pc(), 0x9c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c8e), 0xcb);
        EXPECT(gbc.readMem(0x9c8f), 0x32);
        // CB 32 0282
        gbc.setState(0xcfd3, 0xdcb3, 0x6870, 0xb169, 0xde7f, 0xacc9, 0x1, 0x1);
        gbc.writeMem(0xcfd3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdcb3);
        EXPECT(gbc.pc(), 0xcfd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd3), 0xcb);
        EXPECT(gbc.readMem(0xcfd4), 0x32);
        // CB 32 0283
        gbc.setState(0xe96d, 0x9cfd, 0x2b70, 0xbc33, 0xf6b4, 0xa1f3, 0x1, 0x1);
        gbc.writeMem(0xe96d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9cfd);
        EXPECT(gbc.pc(), 0xe96f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe96d), 0xcb);
        EXPECT(gbc.readMem(0xe96e), 0x32);
        // CB 32 0284
        gbc.setState(0xdc39, 0x5f87, 0x48f0, 0x5a27, 0x8328, 0xfbf5, 0x0, 0x1);
        gbc.writeMem(0xdc39, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5f87);
        EXPECT(gbc.pc(), 0xdc3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc39), 0xcb);
        EXPECT(gbc.readMem(0xdc3a), 0x32);
        // CB 32 0285
        gbc.setState(0x2e6e, 0x6e87, 0xa9a0, 0x76bd, 0x99ba, 0x8b16, 0x0, 0x0);
        gbc.writeMem(0x2e6e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6e87);
        EXPECT(gbc.pc(), 0x2e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0286
        gbc.setState(0x3c6a, 0x6e46, 0x790, 0xd826, 0x7340, 0xf8c6, 0x0, 0x1);
        gbc.writeMem(0x3c6a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6e46);
        EXPECT(gbc.pc(), 0x3c6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0287
        gbc.setState(0xe8a1, 0xce46, 0xe810, 0x9ac9, 0x3dbd, 0x84b, 0x0, 0x1);
        gbc.writeMem(0xe8a1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xce46);
        EXPECT(gbc.pc(), 0xe8a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a1), 0xcb);
        EXPECT(gbc.readMem(0xe8a2), 0x32);
        // CB 32 0288
        gbc.setState(0x42a5, 0xd5e1, 0x8b20, 0x1c05, 0x117e, 0xbf7a, 0x1, 0x1);
        gbc.writeMem(0x42a5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd5e1);
        EXPECT(gbc.pc(), 0x42a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0289
        gbc.setState(0xa157, 0x86f0, 0xd160, 0x3399, 0x4e95, 0x596e, 0x1, 0x1);
        gbc.writeMem(0xa157, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x86f0);
        EXPECT(gbc.pc(), 0xa159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa157), 0xcb);
        EXPECT(gbc.readMem(0xa158), 0x32);
        // CB 32 028A
        gbc.setState(0xe945, 0x33e, 0x32a0, 0x51f1, 0xd7ac, 0xbe0, 0x0, 0x1);
        gbc.writeMem(0xe945, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x33e);
        EXPECT(gbc.pc(), 0xe947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe945), 0xcb);
        EXPECT(gbc.readMem(0xe946), 0x32);
        // CB 32 028C
        gbc.setState(0x6ce3, 0xa455, 0xfb90, 0x80f2, 0x41a8, 0x5841, 0x1, 0x1);
        gbc.writeMem(0x6ce3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa455);
        EXPECT(gbc.pc(), 0x6ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 028D
        gbc.setState(0x447b, 0x339e, 0x8a00, 0xb3fc, 0xd87c, 0x28c2, 0x0, 0x0);
        gbc.writeMem(0x447b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x339e);
        EXPECT(gbc.pc(), 0x447d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 028E
        gbc.setState(0x58c6, 0xdec, 0x4780, 0x1c2c, 0x15dd, 0xdaab, 0x1, 0x1);
        gbc.writeMem(0x58c6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdec);
        EXPECT(gbc.pc(), 0x58c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0290
        gbc.setState(0xe484, 0x10bc, 0x9cd0, 0x61dc, 0xb5d, 0x59aa, 0x1, 0x1);
        gbc.writeMem(0xe484, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x10bc);
        EXPECT(gbc.pc(), 0xe486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe484), 0xcb);
        EXPECT(gbc.readMem(0xe485), 0x32);
        // CB 32 0291
        gbc.setState(0xb6ab, 0x34a8, 0x1ad0, 0x5f6d, 0xcacf, 0x99d, 0x1, 0x0);
        gbc.writeMem(0xb6ab, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x34a8);
        EXPECT(gbc.pc(), 0xb6ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ab), 0xcb);
        EXPECT(gbc.readMem(0xb6ac), 0x32);
        // CB 32 0292
        gbc.setState(0x137b, 0xc65b, 0x64b0, 0x6dbe, 0xcb5b, 0xbdd, 0x0, 0x1);
        gbc.writeMem(0x137b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc65b);
        EXPECT(gbc.pc(), 0x137d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0293
        gbc.setState(0x4aee, 0xab4d, 0x3ff0, 0x9f63, 0x4911, 0x6dc6, 0x0, 0x0);
        gbc.writeMem(0x4aee, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xab4d);
        EXPECT(gbc.pc(), 0x4af0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0294
        gbc.setState(0x2b1e, 0x49ba, 0x9a90, 0xa3e3, 0x31b8, 0x187a, 0x0, 0x1);
        gbc.writeMem(0x2b1e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x49ba);
        EXPECT(gbc.pc(), 0x2b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0295
        gbc.setState(0x510f, 0x9e95, 0x9960, 0x56bc, 0x7cc0, 0xdde4, 0x1, 0x1);
        gbc.writeMem(0x510f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9e95);
        EXPECT(gbc.pc(), 0x5111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0296
        gbc.setState(0x32ce, 0x25a0, 0xc2b0, 0xac02, 0xe63c, 0x2724, 0x0, 0x1);
        gbc.writeMem(0x32ce, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x25a0);
        EXPECT(gbc.pc(), 0x32d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0297
        gbc.setState(0xdf71, 0xf77c, 0x15c0, 0x47d2, 0xb722, 0xb1f3, 0x1, 0x0);
        gbc.writeMem(0xdf71, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf77c);
        EXPECT(gbc.pc(), 0xdf73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf71), 0xcb);
        EXPECT(gbc.readMem(0xdf72), 0x32);
        // CB 32 0298
        gbc.setState(0x185a, 0x7cf8, 0xf4f0, 0xc942, 0xa73c, 0x8214, 0x1, 0x1);
        gbc.writeMem(0x185a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7cf8);
        EXPECT(gbc.pc(), 0x185c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0299
        gbc.setState(0x590, 0x617b, 0x2130, 0x36b, 0x820c, 0x5544, 0x1, 0x0);
        gbc.writeMem(0x590, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x617b);
        EXPECT(gbc.pc(), 0x592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 029A
        gbc.setState(0x9cb9, 0x592f, 0xb570, 0xa6f1, 0x967b, 0xce61, 0x0, 0x1);
        gbc.writeMem(0x9cb9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x592f);
        EXPECT(gbc.pc(), 0x9cbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb9), 0xcb);
        EXPECT(gbc.readMem(0x9cba), 0x32);
        // CB 32 029B
        gbc.setState(0x4ec5, 0xccf9, 0x21d0, 0x1e0e, 0x7ed, 0x9245, 0x1, 0x0);
        gbc.writeMem(0x4ec5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xccf9);
        EXPECT(gbc.pc(), 0x4ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 029C
        gbc.setState(0x4319, 0x394a, 0x1aa0, 0x43dc, 0x145b, 0x4bd7, 0x0, 0x0);
        gbc.writeMem(0x4319, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x394a);
        EXPECT(gbc.pc(), 0x431b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 029D
        gbc.setState(0x751a, 0x1c2c, 0xa0b0, 0x28dd, 0x89f, 0xd169, 0x1, 0x1);
        gbc.writeMem(0x751a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1c2c);
        EXPECT(gbc.pc(), 0x751c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 029E
        gbc.setState(0xaec8, 0xd5b7, 0x3fa0, 0xdd37, 0x88bc, 0xc373, 0x1, 0x0);
        gbc.writeMem(0xaec8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd5b7);
        EXPECT(gbc.pc(), 0xaeca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec8), 0xcb);
        EXPECT(gbc.readMem(0xaec9), 0x32);
        // CB 32 029F
        gbc.setState(0x41d3, 0x59b0, 0xdde0, 0x8a01, 0xa7c2, 0xe315, 0x0, 0x0);
        gbc.writeMem(0x41d3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x59b0);
        EXPECT(gbc.pc(), 0x41d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02A0
        gbc.setState(0x29f9, 0x8302, 0xc7d0, 0xc02d, 0xb995, 0xb4c7, 0x1, 0x0);
        gbc.writeMem(0x29f9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8302);
        EXPECT(gbc.pc(), 0x29fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02A1
        gbc.setState(0x241a, 0xcde0, 0x2b50, 0xb15d, 0x2e57, 0xdac5, 0x1, 0x0);
        gbc.writeMem(0x241a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcde0);
        EXPECT(gbc.pc(), 0x241c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02A2
        gbc.setState(0xd1c2, 0x177d, 0x97a0, 0xf627, 0xdf72, 0x45f1, 0x1, 0x0);
        gbc.writeMem(0xd1c2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x177d);
        EXPECT(gbc.pc(), 0xd1c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c2), 0xcb);
        EXPECT(gbc.readMem(0xd1c3), 0x32);
        // CB 32 02A4
        gbc.setState(0xc1be, 0x8e54, 0x9890, 0xfd4a, 0xb1c5, 0x44d2, 0x1, 0x1);
        gbc.writeMem(0xc1be, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8e54);
        EXPECT(gbc.pc(), 0xc1c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1be), 0xcb);
        EXPECT(gbc.readMem(0xc1bf), 0x32);
        // CB 32 02A5
        gbc.setState(0xd6cc, 0x1465, 0x4890, 0x5ea7, 0xb12d, 0x18cc, 0x0, 0x0);
        gbc.writeMem(0xd6cc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1465);
        EXPECT(gbc.pc(), 0xd6ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6cc), 0xcb);
        EXPECT(gbc.readMem(0xd6cd), 0x32);
        // CB 32 02A6
        gbc.setState(0x78b5, 0x354a, 0x9830, 0x8f9, 0x3d40, 0x5f5, 0x0, 0x0);
        gbc.writeMem(0x78b5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x354a);
        EXPECT(gbc.pc(), 0x78b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02A7
        gbc.setState(0x7f35, 0x2e30, 0xaa0, 0x82bf, 0xb690, 0xd362, 0x1, 0x1);
        gbc.writeMem(0x7f35, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2e30);
        EXPECT(gbc.pc(), 0x7f37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02A9
        gbc.setState(0x104d, 0x6106, 0xdd80, 0x3291, 0xb0ae, 0x464c, 0x0, 0x0);
        gbc.writeMem(0x104d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6106);
        EXPECT(gbc.pc(), 0x104f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02AA
        gbc.setState(0xbf87, 0xaa6c, 0xc640, 0xfbe5, 0xeaa9, 0x2ec9, 0x1, 0x1);
        gbc.writeMem(0xbf87, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xaa6c);
        EXPECT(gbc.pc(), 0xbf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf87), 0xcb);
        EXPECT(gbc.readMem(0xbf88), 0x32);
        // CB 32 02AB
        gbc.setState(0x3c3f, 0x10cf, 0xa580, 0xf65c, 0xeb75, 0x3e99, 0x1, 0x1);
        gbc.writeMem(0x3c3f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x10cf);
        EXPECT(gbc.pc(), 0x3c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02AC
        gbc.setState(0x935b, 0x3541, 0x6be0, 0x2d40, 0x59ad, 0x5d98, 0x1, 0x1);
        gbc.writeMem(0x935b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3541);
        EXPECT(gbc.pc(), 0x935d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x935b), 0xcb);
        EXPECT(gbc.readMem(0x935c), 0x32);
        // CB 32 02AD
        gbc.setState(0x86d3, 0x54f3, 0x7090, 0xf142, 0x1a9c, 0xad4b, 0x1, 0x1);
        gbc.writeMem(0x86d3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x54f3);
        EXPECT(gbc.pc(), 0x86d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d3), 0xcb);
        EXPECT(gbc.readMem(0x86d4), 0x32);
        // CB 32 02AE
        gbc.setState(0x2d01, 0x404, 0xa1e0, 0xeac8, 0xf41a, 0x6251, 0x1, 0x1);
        gbc.writeMem(0x2d01, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x404);
        EXPECT(gbc.pc(), 0x2d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02AF
        gbc.setState(0xa626, 0xa1a5, 0x8cc0, 0xb83b, 0x8001, 0xa870, 0x1, 0x1);
        gbc.writeMem(0xa626, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa1a5);
        EXPECT(gbc.pc(), 0xa628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa626), 0xcb);
        EXPECT(gbc.readMem(0xa627), 0x32);
        // CB 32 02B0
        gbc.setState(0x241e, 0xa5a7, 0x42e0, 0xc7a7, 0x67d5, 0x958a, 0x0, 0x1);
        gbc.writeMem(0x241e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa5a7);
        EXPECT(gbc.pc(), 0x2420);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02B1
        gbc.setState(0xc1d6, 0x9826, 0x360, 0x4e45, 0x6fa, 0x1190, 0x1, 0x0);
        gbc.writeMem(0xc1d6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9826);
        EXPECT(gbc.pc(), 0xc1d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d6), 0xcb);
        EXPECT(gbc.readMem(0xc1d7), 0x32);
        // CB 32 02B2
        gbc.setState(0x1829, 0xcbc8, 0x4b40, 0x6005, 0xc2ae, 0x74b0, 0x0, 0x0);
        gbc.writeMem(0x1829, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcbc8);
        EXPECT(gbc.pc(), 0x182b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02B3
        gbc.setState(0xbe04, 0x7850, 0xd1f0, 0xce03, 0x7f9d, 0xe5a0, 0x1, 0x0);
        gbc.writeMem(0xbe04, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7850);
        EXPECT(gbc.pc(), 0xbe06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe04), 0xcb);
        EXPECT(gbc.readMem(0xbe05), 0x32);
        // CB 32 02B4
        gbc.setState(0x3cfd, 0xa45a, 0x4600, 0x2183, 0x6952, 0x9a20, 0x1, 0x0);
        gbc.writeMem(0x3cfd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa45a);
        EXPECT(gbc.pc(), 0x3cff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02B5
        gbc.setState(0xc42c, 0x6d93, 0xcf40, 0xee8e, 0x837c, 0x28f, 0x1, 0x0);
        gbc.writeMem(0xc42c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6d93);
        EXPECT(gbc.pc(), 0xc42e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc42c), 0xcb);
        EXPECT(gbc.readMem(0xc42d), 0x32);
        // CB 32 02B6
        gbc.setState(0x685, 0x580c, 0xbba0, 0x11d0, 0xc945, 0x97d8, 0x0, 0x0);
        gbc.writeMem(0x685, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x580c);
        EXPECT(gbc.pc(), 0x687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02B7
        gbc.setState(0xd998, 0x6edf, 0x2990, 0x1f91, 0xedbf, 0x25b3, 0x1, 0x0);
        gbc.writeMem(0xd998, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6edf);
        EXPECT(gbc.pc(), 0xd99a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd998), 0xcb);
        EXPECT(gbc.readMem(0xd999), 0x32);
        // CB 32 02B8
        gbc.setState(0xb45b, 0xbac7, 0x4830, 0x7f24, 0xc3b3, 0xe90e, 0x0, 0x1);
        gbc.writeMem(0xb45b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xbac7);
        EXPECT(gbc.pc(), 0xb45d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb45b), 0xcb);
        EXPECT(gbc.readMem(0xb45c), 0x32);
        // CB 32 02B9
        gbc.setState(0x66c8, 0xff53, 0x1dc0, 0x28c6, 0x7532, 0x9a62, 0x1, 0x1);
        gbc.writeMem(0x66c8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xff53);
        EXPECT(gbc.pc(), 0x66ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02BA
        gbc.setState(0xdba0, 0xd19a, 0xff70, 0x177d, 0x4d76, 0xdf45, 0x1, 0x1);
        gbc.writeMem(0xdba0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd19a);
        EXPECT(gbc.pc(), 0xdba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdba0), 0xcb);
        EXPECT(gbc.readMem(0xdba1), 0x32);
        // CB 32 02BB
        gbc.setState(0x7cb0, 0x8ca, 0xbc80, 0x350b, 0x5511, 0x5fe3, 0x0, 0x1);
        gbc.writeMem(0x7cb0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8ca);
        EXPECT(gbc.pc(), 0x7cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02BD
        gbc.setState(0x18a5, 0x1794, 0xed50, 0x23dc, 0x1cd4, 0xa020, 0x1, 0x0);
        gbc.writeMem(0x18a5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1794);
        EXPECT(gbc.pc(), 0x18a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02BE
        gbc.setState(0x6f8a, 0x62a2, 0x2c50, 0xe8e6, 0xac74, 0x29bd, 0x1, 0x0);
        gbc.writeMem(0x6f8a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x62a2);
        EXPECT(gbc.pc(), 0x6f8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02BF
        gbc.setState(0xcbe7, 0xb572, 0xd440, 0x12e7, 0x23fa, 0x655, 0x1, 0x0);
        gbc.writeMem(0xcbe7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb572);
        EXPECT(gbc.pc(), 0xcbe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe7), 0xcb);
        EXPECT(gbc.readMem(0xcbe8), 0x32);
        // CB 32 02C0
        gbc.setState(0x6632, 0x92ec, 0x86a0, 0x973c, 0xdb29, 0xad69, 0x0, 0x0);
        gbc.writeMem(0x6632, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x92ec);
        EXPECT(gbc.pc(), 0x6634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02C1
        gbc.setState(0x326, 0xa852, 0xb0d0, 0xe4bb, 0x4dd, 0xdde7, 0x0, 0x0);
        gbc.writeMem(0x326, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa852);
        EXPECT(gbc.pc(), 0x328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02C2
        gbc.setState(0x533d, 0xfff2, 0x9a00, 0x4ef2, 0x836c, 0x56ad, 0x0, 0x1);
        gbc.writeMem(0x533d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xfff2);
        EXPECT(gbc.pc(), 0x533f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02C3
        gbc.setState(0xe792, 0xe22c, 0x69d0, 0x7b74, 0xee04, 0x97c6, 0x1, 0x0);
        gbc.writeMem(0xe792, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe22c);
        EXPECT(gbc.pc(), 0xe794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe792), 0xcb);
        EXPECT(gbc.readMem(0xe793), 0x32);
        // CB 32 02C4
        gbc.setState(0xb0cb, 0x1721, 0xf0, 0xea82, 0xd77c, 0xee6c, 0x0, 0x1);
        gbc.writeMem(0xb0cb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1721);
        EXPECT(gbc.pc(), 0xb0cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0cb), 0xcb);
        EXPECT(gbc.readMem(0xb0cc), 0x32);
        // CB 32 02C5
        gbc.setState(0x98fe, 0x6f23, 0x5de0, 0x33ce, 0x11d1, 0xaa57, 0x0, 0x1);
        gbc.writeMem(0x98fe, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6f23);
        EXPECT(gbc.pc(), 0x9900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98fe), 0xcb);
        EXPECT(gbc.readMem(0x98ff), 0x32);
        // CB 32 02C6
        gbc.setState(0x5fa, 0x7cf5, 0x7470, 0x6fd9, 0x2848, 0x96ca, 0x1, 0x0);
        gbc.writeMem(0x5fa, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7cf5);
        EXPECT(gbc.pc(), 0x5fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02C8
        gbc.setState(0x8516, 0xc57f, 0x6320, 0x45, 0x9a12, 0x8195, 0x1, 0x0);
        gbc.writeMem(0x8516, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc57f);
        EXPECT(gbc.pc(), 0x8518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8516), 0xcb);
        EXPECT(gbc.readMem(0x8517), 0x32);
        // CB 32 02C9
        gbc.setState(0x77bf, 0xc28b, 0xf1f0, 0x7a7b, 0x991d, 0xe196, 0x1, 0x1);
        gbc.writeMem(0x77bf, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc28b);
        EXPECT(gbc.pc(), 0x77c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02CA
        gbc.setState(0x3dc0, 0x953f, 0xbe30, 0xa4be, 0x9c56, 0x5bd7, 0x1, 0x1);
        gbc.writeMem(0x3dc0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x953f);
        EXPECT(gbc.pc(), 0x3dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02CB
        gbc.setState(0x418c, 0x1410, 0xf1a0, 0x901e, 0x59f7, 0x248f, 0x1, 0x0);
        gbc.writeMem(0x418c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1410);
        EXPECT(gbc.pc(), 0x418e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02CC
        gbc.setState(0x7954, 0x103d, 0x71d0, 0xdb3d, 0xb26b, 0x5ccf, 0x0, 0x1);
        gbc.writeMem(0x7954, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x103d);
        EXPECT(gbc.pc(), 0x7956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02CD
        gbc.setState(0x12a5, 0xbe3, 0x1c10, 0xd030, 0x4660, 0x85ea, 0x1, 0x1);
        gbc.writeMem(0x12a5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbe3);
        EXPECT(gbc.pc(), 0x12a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02CE
        gbc.setState(0xe998, 0xaa94, 0x6c70, 0x8d8c, 0xcdfd, 0x65f6, 0x0, 0x1);
        gbc.writeMem(0xe998, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xaa94);
        EXPECT(gbc.pc(), 0xe99a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe998), 0xcb);
        EXPECT(gbc.readMem(0xe999), 0x32);
        // CB 32 02CF
        gbc.setState(0x8585, 0x28de, 0x4580, 0x6ee3, 0x8254, 0x176a, 0x0, 0x0);
        gbc.writeMem(0x8585, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x28de);
        EXPECT(gbc.pc(), 0x8587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8585), 0xcb);
        EXPECT(gbc.readMem(0x8586), 0x32);
        // CB 32 02D0
        gbc.setState(0xd676, 0x253d, 0xa3e0, 0x129f, 0x5de, 0xc624, 0x0, 0x1);
        gbc.writeMem(0xd676, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x253d);
        EXPECT(gbc.pc(), 0xd678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd676), 0xcb);
        EXPECT(gbc.readMem(0xd677), 0x32);
        // CB 32 02D1
        gbc.setState(0x408, 0x98d7, 0xb160, 0xdf53, 0xe4aa, 0x8d5d, 0x1, 0x0);
        gbc.writeMem(0x408, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x98d7);
        EXPECT(gbc.pc(), 0x40a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02D2
        gbc.setState(0x98ab, 0xa145, 0xc330, 0x2ace, 0x98d, 0x2ea6, 0x0, 0x0);
        gbc.writeMem(0x98ab, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa145);
        EXPECT(gbc.pc(), 0x98ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ab), 0xcb);
        EXPECT(gbc.readMem(0x98ac), 0x32);
        // CB 32 02D3
        gbc.setState(0x4729, 0xe90e, 0x1420, 0x22c8, 0xa8a2, 0xf822, 0x0, 0x1);
        gbc.writeMem(0x4729, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe90e);
        EXPECT(gbc.pc(), 0x472b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02D4
        gbc.setState(0xc34c, 0xa839, 0x8180, 0x5bca, 0x60a6, 0x73d9, 0x0, 0x1);
        gbc.writeMem(0xc34c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa839);
        EXPECT(gbc.pc(), 0xc34e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc34c), 0xcb);
        EXPECT(gbc.readMem(0xc34d), 0x32);
        // CB 32 02D5
        gbc.setState(0xd88e, 0x7932, 0x5f20, 0xf754, 0xa3ef, 0x2019, 0x1, 0x0);
        gbc.writeMem(0xd88e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7932);
        EXPECT(gbc.pc(), 0xd890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88e), 0xcb);
        EXPECT(gbc.readMem(0xd88f), 0x32);
        // CB 32 02D6
        gbc.setState(0xc7f2, 0x1d80, 0x6d60, 0x5637, 0x2414, 0x1598, 0x0, 0x0);
        gbc.writeMem(0xc7f2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1d80);
        EXPECT(gbc.pc(), 0xc7f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f2), 0xcb);
        EXPECT(gbc.readMem(0xc7f3), 0x32);
        // CB 32 02D7
        gbc.setState(0x2b06, 0xbb90, 0x92e0, 0xbe71, 0x4103, 0xdef8, 0x1, 0x1);
        gbc.writeMem(0x2b06, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbb90);
        EXPECT(gbc.pc(), 0x2b08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02D8
        gbc.setState(0xc739, 0xf130, 0x28c0, 0x5751, 0xe9e5, 0x1b09, 0x1, 0x1);
        gbc.writeMem(0xc739, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf130);
        EXPECT(gbc.pc(), 0xc73b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc739), 0xcb);
        EXPECT(gbc.readMem(0xc73a), 0x32);
        // CB 32 02D9
        gbc.setState(0x81d8, 0xad5f, 0x51e0, 0x1c67, 0x69cc, 0xe28b, 0x1, 0x0);
        gbc.writeMem(0x81d8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xad5f);
        EXPECT(gbc.pc(), 0x81da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81d8), 0xcb);
        EXPECT(gbc.readMem(0x81d9), 0x32);
        // CB 32 02DA
        gbc.setState(0x4ceb, 0x6312, 0x1610, 0x509b, 0x38cf, 0x6f38, 0x0, 0x0);
        gbc.writeMem(0x4ceb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6312);
        EXPECT(gbc.pc(), 0x4ced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02DB
        gbc.setState(0x5c14, 0xe3b, 0xd2a0, 0xae07, 0x86ca, 0x88b5, 0x1, 0x1);
        gbc.writeMem(0x5c14, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe3b);
        EXPECT(gbc.pc(), 0x5c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02DC
        gbc.setState(0x1d70, 0x42c7, 0x1960, 0x8cc, 0x9ef8, 0x3856, 0x0, 0x0);
        gbc.writeMem(0x1d70, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x42c7);
        EXPECT(gbc.pc(), 0x1d72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02DD
        gbc.setState(0x9078, 0x59ae, 0x8d90, 0xc458, 0x7b8, 0x74d6, 0x0, 0x1);
        gbc.writeMem(0x9078, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x59ae);
        EXPECT(gbc.pc(), 0x907a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9078), 0xcb);
        EXPECT(gbc.readMem(0x9079), 0x32);
        // CB 32 02DE
        gbc.setState(0x4ea8, 0x936b, 0x4b80, 0x513c, 0x3af2, 0x8d02, 0x1, 0x0);
        gbc.writeMem(0x4ea8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x936b);
        EXPECT(gbc.pc(), 0x4eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02DF
        gbc.setState(0x977e, 0x4d6f, 0xf290, 0x988d, 0xde72, 0xb5c7, 0x1, 0x1);
        gbc.writeMem(0x977e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4d6f);
        EXPECT(gbc.pc(), 0x9780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x977e), 0xcb);
        EXPECT(gbc.readMem(0x977f), 0x32);
        // CB 32 02E0
        gbc.setState(0xa9e0, 0xf6d8, 0x4b10, 0xb69d, 0xe70a, 0x2729, 0x1, 0x1);
        gbc.writeMem(0xa9e0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf6d8);
        EXPECT(gbc.pc(), 0xa9e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e0), 0xcb);
        EXPECT(gbc.readMem(0xa9e1), 0x32);
        // CB 32 02E1
        gbc.setState(0x776c, 0xee3d, 0xc4a0, 0x2684, 0x43ea, 0x5d6b, 0x1, 0x0);
        gbc.writeMem(0x776c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xee3d);
        EXPECT(gbc.pc(), 0x776e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02E2
        gbc.setState(0xb175, 0x63dd, 0x4bb0, 0xf7b3, 0x19a0, 0xa42f, 0x0, 0x0);
        gbc.writeMem(0xb175, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x63dd);
        EXPECT(gbc.pc(), 0xb177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb175), 0xcb);
        EXPECT(gbc.readMem(0xb176), 0x32);
        // CB 32 02E3
        gbc.setState(0x7de5, 0x98ae, 0x7510, 0xbfb7, 0x5247, 0x948a, 0x0, 0x0);
        gbc.writeMem(0x7de5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x98ae);
        EXPECT(gbc.pc(), 0x7de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02E4
        gbc.setState(0x1a6b, 0xc059, 0x7040, 0x48eb, 0xf84e, 0x6b1, 0x1, 0x0);
        gbc.writeMem(0x1a6b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc059);
        EXPECT(gbc.pc(), 0x1a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02E5
        gbc.setState(0x9d19, 0xd10d, 0xb550, 0xf8a6, 0x4a77, 0xc122, 0x1, 0x0);
        gbc.writeMem(0x9d19, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd10d);
        EXPECT(gbc.pc(), 0x9d1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d19), 0xcb);
        EXPECT(gbc.readMem(0x9d1a), 0x32);
        // CB 32 02E6
        gbc.setState(0x2ddb, 0xfda8, 0xd4f0, 0x97cd, 0x86f3, 0xa700, 0x0, 0x0);
        gbc.writeMem(0x2ddb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfda8);
        EXPECT(gbc.pc(), 0x2ddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02E7
        gbc.setState(0x54e9, 0x5987, 0xb4f0, 0xc0c6, 0x2c7e, 0x609, 0x1, 0x0);
        gbc.writeMem(0x54e9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5987);
        EXPECT(gbc.pc(), 0x54eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02E8
        gbc.setState(0x9ee6, 0x6b1f, 0x49a0, 0x23ab, 0xe5e1, 0x23dd, 0x0, 0x0);
        gbc.writeMem(0x9ee6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6b1f);
        EXPECT(gbc.pc(), 0x9ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee6), 0xcb);
        EXPECT(gbc.readMem(0x9ee7), 0x32);
        // CB 32 02E9
        gbc.setState(0x813d, 0xfb1a, 0x6cc0, 0x2d91, 0x45c4, 0x9fa5, 0x0, 0x1);
        gbc.writeMem(0x813d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfb1a);
        EXPECT(gbc.pc(), 0x813f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x813d), 0xcb);
        EXPECT(gbc.readMem(0x813e), 0x32);
        // CB 32 02EA
        gbc.setState(0x85a3, 0xf1e4, 0xe6d0, 0x3043, 0xb350, 0xb7ea, 0x1, 0x1);
        gbc.writeMem(0x85a3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf1e4);
        EXPECT(gbc.pc(), 0x85a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a3), 0xcb);
        EXPECT(gbc.readMem(0x85a4), 0x32);
        // CB 32 02EB
        gbc.setState(0x18e2, 0x8850, 0xcb0, 0x9bf0, 0xf3d2, 0x26e4, 0x0, 0x0);
        gbc.writeMem(0x18e2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8850);
        EXPECT(gbc.pc(), 0x18e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02EC
        gbc.setState(0x20d3, 0x6403, 0xf490, 0x487b, 0xd8a2, 0x8751, 0x1, 0x0);
        gbc.writeMem(0x20d3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6403);
        EXPECT(gbc.pc(), 0x20d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02ED
        gbc.setState(0x2cd2, 0xe19e, 0xeaa0, 0x4221, 0x2893, 0xb4ae, 0x0, 0x0);
        gbc.writeMem(0x2cd2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe19e);
        EXPECT(gbc.pc(), 0x2cd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02EE
        gbc.setState(0x3bae, 0x120f, 0xd2d0, 0x299a, 0xbf3a, 0xcd8e, 0x1, 0x0);
        gbc.writeMem(0x3bae, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x120f);
        EXPECT(gbc.pc(), 0x3bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02EF
        gbc.setState(0x7d2f, 0x1961, 0xf990, 0xf827, 0xba0c, 0x8d26, 0x1, 0x1);
        gbc.writeMem(0x7d2f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1961);
        EXPECT(gbc.pc(), 0x7d31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02F0
        gbc.setState(0xc7ed, 0xf8ce, 0x1000, 0xef14, 0x4860, 0xf966, 0x1, 0x0);
        gbc.writeMem(0xc7ed, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf8ce);
        EXPECT(gbc.pc(), 0xc7ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ed), 0xcb);
        EXPECT(gbc.readMem(0xc7ee), 0x32);
        // CB 32 02F1
        gbc.setState(0xa2b5, 0xfb0a, 0xd780, 0x9b57, 0xf571, 0x6c23, 0x0, 0x0);
        gbc.writeMem(0xa2b5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xfb0a);
        EXPECT(gbc.pc(), 0xa2b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b5), 0xcb);
        EXPECT(gbc.readMem(0xa2b6), 0x32);
        // CB 32 02F2
        gbc.setState(0x33bb, 0x544b, 0x95f0, 0x4fad, 0x3e5c, 0xb406, 0x1, 0x1);
        gbc.writeMem(0x33bb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x544b);
        EXPECT(gbc.pc(), 0x33bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02F3
        gbc.setState(0x14db, 0x3d4c, 0xf020, 0xc5af, 0xa0d5, 0xfc05, 0x1, 0x1);
        gbc.writeMem(0x14db, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3d4c);
        EXPECT(gbc.pc(), 0x14dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02F4
        gbc.setState(0xa1e0, 0xeac7, 0xbf40, 0x9cda, 0x229a, 0xcbe2, 0x1, 0x0);
        gbc.writeMem(0xa1e0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xeac7);
        EXPECT(gbc.pc(), 0xa1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e0), 0xcb);
        EXPECT(gbc.readMem(0xa1e1), 0x32);
        // CB 32 02F5
        gbc.setState(0x707, 0x2a04, 0x3750, 0x23df, 0xa880, 0x135e, 0x1, 0x0);
        gbc.writeMem(0x707, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2a04);
        EXPECT(gbc.pc(), 0x709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02F6
        gbc.setState(0xcd46, 0xe9c1, 0xf590, 0x93eb, 0x25c5, 0xcfd6, 0x0, 0x0);
        gbc.writeMem(0xcd46, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe9c1);
        EXPECT(gbc.pc(), 0xcd48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd46), 0xcb);
        EXPECT(gbc.readMem(0xcd47), 0x32);
        // CB 32 02F7
        gbc.setState(0x74d6, 0x4c24, 0xfca0, 0xb4fa, 0x162f, 0xc86a, 0x1, 0x1);
        gbc.writeMem(0x74d6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4c24);
        EXPECT(gbc.pc(), 0x74d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02F8
        gbc.setState(0x5ebd, 0x7d07, 0xb790, 0x8cbc, 0x976a, 0x6447, 0x0, 0x0);
        gbc.writeMem(0x5ebd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7d07);
        EXPECT(gbc.pc(), 0x5ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02F9
        gbc.setState(0x24e4, 0x4ad1, 0x8890, 0xe4f7, 0xd6c9, 0x5fd2, 0x1, 0x1);
        gbc.writeMem(0x24e4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4ad1);
        EXPECT(gbc.pc(), 0x24e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02FA
        gbc.setState(0x3773, 0x919c, 0xfeb0, 0xae99, 0xbdb8, 0x9ae9, 0x0, 0x1);
        gbc.writeMem(0x3773, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x919c);
        EXPECT(gbc.pc(), 0x3775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02FB
        gbc.setState(0x589, 0xe78b, 0xa760, 0x300c, 0xd326, 0x6691, 0x1, 0x1);
        gbc.writeMem(0x589, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe78b);
        EXPECT(gbc.pc(), 0x58b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 02FC
        gbc.setState(0xcecf, 0x736e, 0x5a00, 0xb612, 0x89ae, 0x9faa, 0x1, 0x1);
        gbc.writeMem(0xcecf, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x736e);
        EXPECT(gbc.pc(), 0xced1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcecf), 0xcb);
        EXPECT(gbc.readMem(0xced0), 0x32);
        // CB 32 02FD
        gbc.setState(0xb9c8, 0x8220, 0x30a0, 0xae74, 0x7272, 0x9d59, 0x1, 0x1);
        gbc.writeMem(0xb9c8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8220);
        EXPECT(gbc.pc(), 0xb9ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c8), 0xcb);
        EXPECT(gbc.readMem(0xb9c9), 0x32);
        // CB 32 02FE
        gbc.setState(0xb87f, 0xb0c8, 0x9a90, 0xbe42, 0xc8e0, 0x92eb, 0x1, 0x0);
        gbc.writeMem(0xb87f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb0c8);
        EXPECT(gbc.pc(), 0xb881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb87f), 0xcb);
        EXPECT(gbc.readMem(0xb880), 0x32);
        // CB 32 02FF
        gbc.setState(0x5e52, 0x8d55, 0x19c0, 0x37e3, 0xacea, 0xff82, 0x1, 0x0);
        gbc.writeMem(0x5e52, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8d55);
        EXPECT(gbc.pc(), 0x5e54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0300
        gbc.setState(0x6db4, 0x71a3, 0xd50, 0xe671, 0xb396, 0x9df3, 0x1, 0x0);
        gbc.writeMem(0x6db4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x71a3);
        EXPECT(gbc.pc(), 0x6db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0301
        gbc.setState(0xb0fb, 0x17b0, 0x9410, 0xa1db, 0x93d5, 0xaa4c, 0x1, 0x0);
        gbc.writeMem(0xb0fb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x17b0);
        EXPECT(gbc.pc(), 0xb0fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fb), 0xcb);
        EXPECT(gbc.readMem(0xb0fc), 0x32);
        // CB 32 0302
        gbc.setState(0x8c24, 0xf5da, 0x8a10, 0x26d2, 0xcc4a, 0x2fac, 0x1, 0x0);
        gbc.writeMem(0x8c24, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf5da);
        EXPECT(gbc.pc(), 0x8c26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c24), 0xcb);
        EXPECT(gbc.readMem(0x8c25), 0x32);
        // CB 32 0303
        gbc.setState(0x3a3a, 0xb90e, 0xeae0, 0x97ef, 0x4bd9, 0x4deb, 0x0, 0x0);
        gbc.writeMem(0x3a3a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb90e);
        EXPECT(gbc.pc(), 0x3a3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0304
        gbc.setState(0x955a, 0xcf25, 0xb50, 0x5e8e, 0x4a3d, 0xe8ed, 0x1, 0x0);
        gbc.writeMem(0x955a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcf25);
        EXPECT(gbc.pc(), 0x955c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x955a), 0xcb);
        EXPECT(gbc.readMem(0x955b), 0x32);
        // CB 32 0305
        gbc.setState(0xcc8c, 0x166, 0xb390, 0xaefb, 0x27d3, 0x6257, 0x1, 0x1);
        gbc.writeMem(0xcc8c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x166);
        EXPECT(gbc.pc(), 0xcc8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc8c), 0xcb);
        EXPECT(gbc.readMem(0xcc8d), 0x32);
        // CB 32 0306
        gbc.setState(0x830a, 0xa53b, 0x35a0, 0x29a3, 0x32da, 0xf4ac, 0x1, 0x1);
        gbc.writeMem(0x830a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa53b);
        EXPECT(gbc.pc(), 0x830c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830a), 0xcb);
        EXPECT(gbc.readMem(0x830b), 0x32);
        // CB 32 0307
        gbc.setState(0x17e3, 0xee3e, 0x4930, 0x3726, 0xb7a, 0x220c, 0x0, 0x0);
        gbc.writeMem(0x17e3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xee3e);
        EXPECT(gbc.pc(), 0x17e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0308
        gbc.setState(0x756a, 0x31d1, 0x5150, 0x3e85, 0x5a62, 0xeb90, 0x1, 0x1);
        gbc.writeMem(0x756a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x31d1);
        EXPECT(gbc.pc(), 0x756c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0309
        gbc.setState(0x8305, 0x3f81, 0x71c0, 0x462a, 0xfe74, 0x648, 0x0, 0x1);
        gbc.writeMem(0x8305, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3f81);
        EXPECT(gbc.pc(), 0x8307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8305), 0xcb);
        EXPECT(gbc.readMem(0x8306), 0x32);
        // CB 32 030A
        gbc.setState(0x4d68, 0xa03c, 0xe050, 0x6509, 0x3bdb, 0x92dd, 0x1, 0x0);
        gbc.writeMem(0x4d68, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa03c);
        EXPECT(gbc.pc(), 0x4d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 030B
        gbc.setState(0x54a4, 0x51cf, 0xd4c0, 0x2520, 0x9988, 0x4ea8, 0x0, 0x1);
        gbc.writeMem(0x54a4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x51cf);
        EXPECT(gbc.pc(), 0x54a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 030C
        gbc.setState(0x4501, 0xcdb, 0xa300, 0x4878, 0x9dda, 0xa9bb, 0x1, 0x1);
        gbc.writeMem(0x4501, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcdb);
        EXPECT(gbc.pc(), 0x4503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 030E
        gbc.setState(0x6a05, 0xa991, 0xcaf0, 0xda71, 0x1b2a, 0xccd6, 0x0, 0x1);
        gbc.writeMem(0x6a05, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa991);
        EXPECT(gbc.pc(), 0x6a07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 030F
        gbc.setState(0x6a3, 0x3b08, 0x9900, 0x1f45, 0x774f, 0xe2d1, 0x0, 0x1);
        gbc.writeMem(0x6a3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3b08);
        EXPECT(gbc.pc(), 0x6a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0310
        gbc.setState(0xd424, 0x6404, 0xb7f0, 0x4d74, 0xceaf, 0x8bad, 0x1, 0x1);
        gbc.writeMem(0xd424, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6404);
        EXPECT(gbc.pc(), 0xd426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd424), 0xcb);
        EXPECT(gbc.readMem(0xd425), 0x32);
        // CB 32 0311
        gbc.setState(0xb474, 0xc329, 0x2aa0, 0x9f94, 0x505d, 0xd30e, 0x0, 0x1);
        gbc.writeMem(0xb474, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc329);
        EXPECT(gbc.pc(), 0xb476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb474), 0xcb);
        EXPECT(gbc.readMem(0xb475), 0x32);
        // CB 32 0312
        gbc.setState(0x70fd, 0x4d1d, 0x1b20, 0xf63, 0xea1, 0xd44d, 0x0, 0x0);
        gbc.writeMem(0x70fd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4d1d);
        EXPECT(gbc.pc(), 0x70ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0313
        gbc.setState(0x6ba0, 0x7e3d, 0x3bb0, 0xdb29, 0xdf0c, 0xef4f, 0x1, 0x0);
        gbc.writeMem(0x6ba0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7e3d);
        EXPECT(gbc.pc(), 0x6ba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0314
        gbc.setState(0x8d3d, 0xcf2c, 0xf3d0, 0xc23a, 0x31ef, 0x946, 0x0, 0x0);
        gbc.writeMem(0x8d3d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcf2c);
        EXPECT(gbc.pc(), 0x8d3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d3d), 0xcb);
        EXPECT(gbc.readMem(0x8d3e), 0x32);
        // CB 32 0315
        gbc.setState(0x7052, 0x6858, 0x7b40, 0x40b7, 0xf760, 0x9570, 0x1, 0x0);
        gbc.writeMem(0x7052, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6858);
        EXPECT(gbc.pc(), 0x7054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0316
        gbc.setState(0x7a2c, 0xecf4, 0x5620, 0xe647, 0x640a, 0x9f7b, 0x1, 0x1);
        gbc.writeMem(0x7a2c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xecf4);
        EXPECT(gbc.pc(), 0x7a2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0317
        gbc.setState(0x258f, 0x977b, 0xd500, 0x5f3a, 0x482d, 0x1e25, 0x0, 0x0);
        gbc.writeMem(0x258f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x977b);
        EXPECT(gbc.pc(), 0x2591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0318
        gbc.setState(0x606d, 0xdf92, 0xa4c0, 0x7550, 0x8fe4, 0xb666, 0x1, 0x0);
        gbc.writeMem(0x606d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdf92);
        EXPECT(gbc.pc(), 0x606f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0319
        gbc.setState(0xec3f, 0x2c7f, 0xbdc0, 0x6ba2, 0x8f07, 0xbb60, 0x0, 0x0);
        gbc.writeMem(0xec3f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2c7f);
        EXPECT(gbc.pc(), 0xec41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3f), 0xcb);
        EXPECT(gbc.readMem(0xec40), 0x32);
        // CB 32 031A
        gbc.setState(0xd40a, 0x3d53, 0x1870, 0xcc9a, 0xd186, 0x3b29, 0x1, 0x1);
        gbc.writeMem(0xd40a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3d53);
        EXPECT(gbc.pc(), 0xd40c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd40a), 0xcb);
        EXPECT(gbc.readMem(0xd40b), 0x32);
        // CB 32 031B
        gbc.setState(0xe706, 0xfa46, 0xad50, 0xf168, 0x8cfc, 0x2861, 0x0, 0x1);
        gbc.writeMem(0xe706, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xfa46);
        EXPECT(gbc.pc(), 0xe708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe706), 0xcb);
        EXPECT(gbc.readMem(0xe707), 0x32);
        // CB 32 031C
        gbc.setState(0x776, 0xb1ea, 0xc760, 0x1c02, 0x4dfb, 0x6793, 0x1, 0x1);
        gbc.writeMem(0x776, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb1ea);
        EXPECT(gbc.pc(), 0x778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 031D
        gbc.setState(0x6d90, 0xa20d, 0x91f0, 0xa3b6, 0xb6d1, 0x1d03, 0x0, 0x1);
        gbc.writeMem(0x6d90, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa20d);
        EXPECT(gbc.pc(), 0x6d92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 031E
        gbc.setState(0x868c, 0x135d, 0xf920, 0x47d1, 0x7e29, 0x73a2, 0x0, 0x0);
        gbc.writeMem(0x868c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x135d);
        EXPECT(gbc.pc(), 0x868e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868c), 0xcb);
        EXPECT(gbc.readMem(0x868d), 0x32);
        // CB 32 0322
        gbc.setState(0x6d5a, 0x6994, 0x30f0, 0x255a, 0x20e9, 0xe1a4, 0x1, 0x1);
        gbc.writeMem(0x6d5a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6994);
        EXPECT(gbc.pc(), 0x6d5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0323
        gbc.setState(0x34fe, 0x1f44, 0x38e0, 0x8286, 0xe60f, 0x494c, 0x1, 0x1);
        gbc.writeMem(0x34fe, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1f44);
        EXPECT(gbc.pc(), 0x3500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0324
        gbc.setState(0xd6ab, 0x5370, 0x7150, 0x7686, 0x7209, 0xa28f, 0x1, 0x1);
        gbc.writeMem(0xd6ab, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5370);
        EXPECT(gbc.pc(), 0xd6ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ab), 0xcb);
        EXPECT(gbc.readMem(0xd6ac), 0x32);
        // CB 32 0325
        gbc.setState(0xcc05, 0xbde8, 0x23a0, 0x2a8c, 0x2273, 0xa265, 0x0, 0x0);
        gbc.writeMem(0xcc05, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbde8);
        EXPECT(gbc.pc(), 0xcc07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc05), 0xcb);
        EXPECT(gbc.readMem(0xcc06), 0x32);
        // CB 32 0326
        gbc.setState(0x3418, 0x8d98, 0xca50, 0x4ead, 0x5c62, 0x4a61, 0x0, 0x1);
        gbc.writeMem(0x3418, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8d98);
        EXPECT(gbc.pc(), 0x341a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0327
        gbc.setState(0x4adc, 0xc44e, 0xe60, 0xdc19, 0xa66e, 0x66f9, 0x0, 0x1);
        gbc.writeMem(0x4adc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc44e);
        EXPECT(gbc.pc(), 0x4ade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0328
        gbc.setState(0x3370, 0xdda6, 0x49c0, 0x6de3, 0x7205, 0x10ef, 0x1, 0x1);
        gbc.writeMem(0x3370, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdda6);
        EXPECT(gbc.pc(), 0x3372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0329
        gbc.setState(0x7f9a, 0xde1e, 0xb5b0, 0x950f, 0x5ded, 0xe2db, 0x0, 0x1);
        gbc.writeMem(0x7f9a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xde1e);
        EXPECT(gbc.pc(), 0x7f9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 032A
        gbc.setState(0x5eb8, 0x7d71, 0x37b0, 0x5c31, 0xd3e2, 0x5e00, 0x1, 0x0);
        gbc.writeMem(0x5eb8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7d71);
        EXPECT(gbc.pc(), 0x5eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 032B
        gbc.setState(0x40c4, 0x12d1, 0xbb80, 0x8822, 0x9da0, 0x8270, 0x1, 0x0);
        gbc.writeMem(0x40c4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x12d1);
        EXPECT(gbc.pc(), 0x40c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 032C
        gbc.setState(0xec5f, 0xe77c, 0xe640, 0x28e2, 0x1cf2, 0xa69a, 0x1, 0x1);
        gbc.writeMem(0xec5f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe77c);
        EXPECT(gbc.pc(), 0xec61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec5f), 0xcb);
        EXPECT(gbc.readMem(0xec60), 0x32);
        // CB 32 032D
        gbc.setState(0x1b, 0x7394, 0xd1b0, 0x1db2, 0xad88, 0xa2a2, 0x1, 0x1);
        gbc.writeMem(0x1b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7394);
        EXPECT(gbc.pc(), 0x1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 032F
        gbc.setState(0xba60, 0x80c1, 0xcad0, 0xadb0, 0x3c3c, 0x991, 0x0, 0x1);
        gbc.writeMem(0xba60, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x80c1);
        EXPECT(gbc.pc(), 0xba62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba60), 0xcb);
        EXPECT(gbc.readMem(0xba61), 0x32);
        // CB 32 0330
        gbc.setState(0x251f, 0xd558, 0x25e0, 0xf081, 0x93a8, 0x520b, 0x1, 0x0);
        gbc.writeMem(0x251f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd558);
        EXPECT(gbc.pc(), 0x2521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0331
        gbc.setState(0x9210, 0xb373, 0xa5b0, 0x47e2, 0x6c99, 0x23c7, 0x0, 0x0);
        gbc.writeMem(0x9210, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb373);
        EXPECT(gbc.pc(), 0x9212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9210), 0xcb);
        EXPECT(gbc.readMem(0x9211), 0x32);
        // CB 32 0332
        gbc.setState(0x8aae, 0x2563, 0x1200, 0xf96, 0x77d1, 0xb16e, 0x0, 0x1);
        gbc.writeMem(0x8aae, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2563);
        EXPECT(gbc.pc(), 0x8ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aae), 0xcb);
        EXPECT(gbc.readMem(0x8aaf), 0x32);
        // CB 32 0333
        gbc.setState(0x4c71, 0x6e18, 0xc0c0, 0x8c01, 0xa489, 0x2388, 0x1, 0x1);
        gbc.writeMem(0x4c71, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6e18);
        EXPECT(gbc.pc(), 0x4c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0334
        gbc.setState(0x7e78, 0x9570, 0x7770, 0x825f, 0x321f, 0x90a7, 0x1, 0x1);
        gbc.writeMem(0x7e78, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9570);
        EXPECT(gbc.pc(), 0x7e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0335
        gbc.setState(0xcd67, 0x9ab8, 0x5a70, 0x9778, 0xf120, 0x6b87, 0x1, 0x0);
        gbc.writeMem(0xcd67, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9ab8);
        EXPECT(gbc.pc(), 0xcd69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd67), 0xcb);
        EXPECT(gbc.readMem(0xcd68), 0x32);
        // CB 32 0336
        gbc.setState(0x7307, 0x3f60, 0x7390, 0xd5b9, 0xfa2d, 0xccc9, 0x0, 0x0);
        gbc.writeMem(0x7307, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3f60);
        EXPECT(gbc.pc(), 0x7309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0337
        gbc.setState(0x4aea, 0xeaa7, 0xec10, 0x32c3, 0x3d51, 0x4196, 0x1, 0x0);
        gbc.writeMem(0x4aea, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xeaa7);
        EXPECT(gbc.pc(), 0x4aec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0338
        gbc.setState(0xdefe, 0x9903, 0x2c40, 0x981b, 0x9cf3, 0xd716, 0x1, 0x0);
        gbc.writeMem(0xdefe, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9903);
        EXPECT(gbc.pc(), 0xdf00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdefe), 0xcb);
        EXPECT(gbc.readMem(0xdeff), 0x32);
        // CB 32 033A
        gbc.setState(0x2991, 0xd05a, 0xd0b0, 0x1677, 0xbc4, 0xa545, 0x0, 0x0);
        gbc.writeMem(0x2991, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd05a);
        EXPECT(gbc.pc(), 0x2993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 033B
        gbc.setState(0x8eab, 0xb7a9, 0x5370, 0xbf24, 0xa156, 0x9f50, 0x1, 0x1);
        gbc.writeMem(0x8eab, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb7a9);
        EXPECT(gbc.pc(), 0x8ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eab), 0xcb);
        EXPECT(gbc.readMem(0x8eac), 0x32);
        // CB 32 033C
        gbc.setState(0xecf0, 0x962f, 0x8150, 0xc179, 0xf9af, 0xf8c2, 0x0, 0x0);
        gbc.writeMem(0xecf0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x962f);
        EXPECT(gbc.pc(), 0xecf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecf0), 0xcb);
        EXPECT(gbc.readMem(0xecf1), 0x32);
        // CB 32 033D
        gbc.setState(0xaa7c, 0xe3ac, 0xca60, 0x41e8, 0x81ca, 0x8a3c, 0x0, 0x1);
        gbc.writeMem(0xaa7c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe3ac);
        EXPECT(gbc.pc(), 0xaa7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa7c), 0xcb);
        EXPECT(gbc.readMem(0xaa7d), 0x32);
        // CB 32 033E
        gbc.setState(0x6dcd, 0xc3e5, 0x1710, 0x4f95, 0x63a8, 0x12f4, 0x1, 0x0);
        gbc.writeMem(0x6dcd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc3e5);
        EXPECT(gbc.pc(), 0x6dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 033F
        gbc.setState(0xce6a, 0xd04b, 0xeae0, 0x8955, 0x9601, 0xdcaf, 0x0, 0x0);
        gbc.writeMem(0xce6a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd04b);
        EXPECT(gbc.pc(), 0xce6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce6a), 0xcb);
        EXPECT(gbc.readMem(0xce6b), 0x32);
        // CB 32 0340
        gbc.setState(0x3e6b, 0xca73, 0x1220, 0x95f9, 0xf6e3, 0xb5e7, 0x0, 0x0);
        gbc.writeMem(0x3e6b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xca73);
        EXPECT(gbc.pc(), 0x3e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0342
        gbc.setState(0x47be, 0x6337, 0xe190, 0xa842, 0x6423, 0x2dc5, 0x1, 0x1);
        gbc.writeMem(0x47be, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6337);
        EXPECT(gbc.pc(), 0x47c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0343
        gbc.setState(0x92b9, 0xd319, 0x1b80, 0xe712, 0x627c, 0x8550, 0x1, 0x1);
        gbc.writeMem(0x92b9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd319);
        EXPECT(gbc.pc(), 0x92bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b9), 0xcb);
        EXPECT(gbc.readMem(0x92ba), 0x32);
        // CB 32 0344
        gbc.setState(0xb685, 0x8abf, 0x73d0, 0xe634, 0xc12b, 0x3066, 0x1, 0x1);
        gbc.writeMem(0xb685, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8abf);
        EXPECT(gbc.pc(), 0xb687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb685), 0xcb);
        EXPECT(gbc.readMem(0xb686), 0x32);
        // CB 32 0345
        gbc.setState(0x4664, 0xe18a, 0x5a50, 0xc58f, 0x2d4b, 0xb3b, 0x0, 0x1);
        gbc.writeMem(0x4664, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe18a);
        EXPECT(gbc.pc(), 0x4666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0346
        gbc.setState(0x9beb, 0x280, 0xff20, 0x4464, 0x8fc, 0xf706, 0x0, 0x1);
        gbc.writeMem(0x9beb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x280);
        EXPECT(gbc.pc(), 0x9bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9beb), 0xcb);
        EXPECT(gbc.readMem(0x9bec), 0x32);
        // CB 32 0347
        gbc.setState(0x8018, 0xb09b, 0x2900, 0x6a12, 0xd5e2, 0x7025, 0x0, 0x1);
        gbc.writeMem(0x8018, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb09b);
        EXPECT(gbc.pc(), 0x801a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8018), 0xcb);
        EXPECT(gbc.readMem(0x8019), 0x32);
        // CB 32 0348
        gbc.setState(0x1613, 0x56ee, 0x9a40, 0x20f7, 0x4c6, 0x52ce, 0x0, 0x0);
        gbc.writeMem(0x1613, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x56ee);
        EXPECT(gbc.pc(), 0x1615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0349
        gbc.setState(0x1436, 0x7bf, 0xdea0, 0x642b, 0xbc1a, 0xc184, 0x1, 0x1);
        gbc.writeMem(0x1436, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7bf);
        EXPECT(gbc.pc(), 0x1438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 034A
        gbc.setState(0xe0ee, 0xd0bc, 0xaa40, 0x9312, 0xa27c, 0x7a0e, 0x1, 0x0);
        gbc.writeMem(0xe0ee, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd0bc);
        EXPECT(gbc.pc(), 0xe0f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ee), 0xcb);
        EXPECT(gbc.readMem(0xe0ef), 0x32);
        // CB 32 034B
        gbc.setState(0x27dc, 0xb32e, 0x8500, 0x574d, 0xe85d, 0xff24, 0x0, 0x0);
        gbc.writeMem(0x27dc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb32e);
        EXPECT(gbc.pc(), 0x27de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 034C
        gbc.setState(0xed59, 0x4a8, 0xe570, 0xae25, 0x3f31, 0xac6b, 0x0, 0x1);
        gbc.writeMem(0xed59, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4a8);
        EXPECT(gbc.pc(), 0xed5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed59), 0xcb);
        EXPECT(gbc.readMem(0xed5a), 0x32);
        // CB 32 034D
        gbc.setState(0xd7ef, 0x6b13, 0x970, 0xdf7c, 0xebbd, 0xdc97, 0x0, 0x0);
        gbc.writeMem(0xd7ef, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6b13);
        EXPECT(gbc.pc(), 0xd7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ef), 0xcb);
        EXPECT(gbc.readMem(0xd7f0), 0x32);
        // CB 32 034F
        gbc.setState(0xaac, 0xc79, 0xfd20, 0xffa0, 0x7d6a, 0x43e8, 0x0, 0x0);
        gbc.writeMem(0xaac, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc79);
        EXPECT(gbc.pc(), 0xaae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0350
        gbc.setState(0x84e3, 0x35a2, 0x86a0, 0x9832, 0x7e8b, 0x8a45, 0x0, 0x0);
        gbc.writeMem(0x84e3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x35a2);
        EXPECT(gbc.pc(), 0x84e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e3), 0xcb);
        EXPECT(gbc.readMem(0x84e4), 0x32);
        // CB 32 0351
        gbc.setState(0xea84, 0x3ed, 0xc2d0, 0x7870, 0x319d, 0x3da8, 0x0, 0x0);
        gbc.writeMem(0xea84, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3ed);
        EXPECT(gbc.pc(), 0xea86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea84), 0xcb);
        EXPECT(gbc.readMem(0xea85), 0x32);
        // CB 32 0352
        gbc.setState(0xa924, 0xf4b3, 0x6890, 0x2992, 0xef16, 0xdd7b, 0x1, 0x1);
        gbc.writeMem(0xa924, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf4b3);
        EXPECT(gbc.pc(), 0xa926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa924), 0xcb);
        EXPECT(gbc.readMem(0xa925), 0x32);
        // CB 32 0353
        gbc.setState(0x10b, 0x848f, 0xaa90, 0x2c5, 0x3dd5, 0x2f62, 0x1, 0x0);
        gbc.writeMem(0x10b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x848f);
        EXPECT(gbc.pc(), 0x10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0354
        gbc.setState(0x770b, 0xfc87, 0x8770, 0x83ac, 0x49f5, 0xf838, 0x0, 0x0);
        gbc.writeMem(0x770b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xfc87);
        EXPECT(gbc.pc(), 0x770d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0355
        gbc.setState(0x97a6, 0xb15b, 0xb1a0, 0x80d6, 0xb259, 0x2404, 0x1, 0x0);
        gbc.writeMem(0x97a6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb15b);
        EXPECT(gbc.pc(), 0x97a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a6), 0xcb);
        EXPECT(gbc.readMem(0x97a7), 0x32);
        // CB 32 0356
        gbc.setState(0x8290, 0x6081, 0x2550, 0xebc8, 0x6af3, 0xbdfe, 0x1, 0x0);
        gbc.writeMem(0x8290, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6081);
        EXPECT(gbc.pc(), 0x8292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8290), 0xcb);
        EXPECT(gbc.readMem(0x8291), 0x32);
        // CB 32 0357
        gbc.setState(0x488c, 0x3ba3, 0x1440, 0x5d18, 0x526b, 0x4a7d, 0x1, 0x0);
        gbc.writeMem(0x488c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3ba3);
        EXPECT(gbc.pc(), 0x488e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0358
        gbc.setState(0xddda, 0x78cd, 0x62e0, 0xa422, 0x6288, 0xcf76, 0x0, 0x1);
        gbc.writeMem(0xddda, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x78cd);
        EXPECT(gbc.pc(), 0xdddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddda), 0xcb);
        EXPECT(gbc.readMem(0xdddb), 0x32);
        // CB 32 0359
        gbc.setState(0x9cb1, 0xafbb, 0xd800, 0x55e3, 0x5674, 0x57c9, 0x1, 0x1);
        gbc.writeMem(0x9cb1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xafbb);
        EXPECT(gbc.pc(), 0x9cb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb1), 0xcb);
        EXPECT(gbc.readMem(0x9cb2), 0x32);
        // CB 32 035A
        gbc.setState(0xd238, 0xa896, 0xdf60, 0xbf41, 0xf5db, 0x8452, 0x1, 0x1);
        gbc.writeMem(0xd238, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa896);
        EXPECT(gbc.pc(), 0xd23a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd238), 0xcb);
        EXPECT(gbc.readMem(0xd239), 0x32);
        // CB 32 035B
        gbc.setState(0x513d, 0x2a3b, 0xf210, 0x9006, 0x93b7, 0x3893, 0x1, 0x0);
        gbc.writeMem(0x513d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2a3b);
        EXPECT(gbc.pc(), 0x513f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 035C
        gbc.setState(0xb8da, 0x6283, 0xb090, 0x85bf, 0x5a10, 0x203d, 0x0, 0x0);
        gbc.writeMem(0xb8da, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6283);
        EXPECT(gbc.pc(), 0xb8dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8da), 0xcb);
        EXPECT(gbc.readMem(0xb8db), 0x32);
        // CB 32 035D
        gbc.setState(0xb225, 0xeed8, 0xe570, 0x42af, 0x63, 0x11bb, 0x0, 0x0);
        gbc.writeMem(0xb225, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xeed8);
        EXPECT(gbc.pc(), 0xb227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb225), 0xcb);
        EXPECT(gbc.readMem(0xb226), 0x32);
        // CB 32 035E
        gbc.setState(0xd99f, 0x64f5, 0x5810, 0xd297, 0x681c, 0xd9b9, 0x1, 0x0);
        gbc.writeMem(0xd99f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x64f5);
        EXPECT(gbc.pc(), 0xd9a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd99f), 0xcb);
        EXPECT(gbc.readMem(0xd9a0), 0x32);
        // CB 32 035F
        gbc.setState(0x7899, 0x68d7, 0x11b0, 0x11c9, 0x6f6f, 0x7333, 0x0, 0x0);
        gbc.writeMem(0x7899, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x68d7);
        EXPECT(gbc.pc(), 0x789b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0360
        gbc.setState(0x69, 0x38a9, 0xe3a0, 0xd593, 0x9c71, 0xc558, 0x0, 0x0);
        gbc.writeMem(0x69, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x38a9);
        EXPECT(gbc.pc(), 0x6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0361
        gbc.setState(0x96d, 0x583c, 0x6990, 0x1338, 0x3fc2, 0xdd93, 0x1, 0x1);
        gbc.writeMem(0x96d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x583c);
        EXPECT(gbc.pc(), 0x96f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0362
        gbc.setState(0x689b, 0xa159, 0x8da0, 0x1280, 0xe725, 0x3331, 0x0, 0x0);
        gbc.writeMem(0x689b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa159);
        EXPECT(gbc.pc(), 0x689d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0363
        gbc.setState(0x93f6, 0x33ee, 0xb8a0, 0x918d, 0x630d, 0xc2ce, 0x1, 0x1);
        gbc.writeMem(0x93f6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x33ee);
        EXPECT(gbc.pc(), 0x93f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f6), 0xcb);
        EXPECT(gbc.readMem(0x93f7), 0x32);
        // CB 32 0364
        gbc.setState(0x3f31, 0xf51, 0x88b0, 0xa082, 0x637b, 0x44a4, 0x0, 0x1);
        gbc.writeMem(0x3f31, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf51);
        EXPECT(gbc.pc(), 0x3f33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0365
        gbc.setState(0x610e, 0x7ac, 0xc1c0, 0x4a7c, 0x4790, 0xd6da, 0x1, 0x1);
        gbc.writeMem(0x610e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7ac);
        EXPECT(gbc.pc(), 0x6110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0366
        gbc.setState(0x7ad5, 0xfe7e, 0x44e0, 0x6001, 0xb735, 0x28ea, 0x0, 0x1);
        gbc.writeMem(0x7ad5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfe7e);
        EXPECT(gbc.pc(), 0x7ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0367
        gbc.setState(0xec01, 0x2118, 0x1610, 0xb300, 0x9903, 0x3ae0, 0x1, 0x0);
        gbc.writeMem(0xec01, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2118);
        EXPECT(gbc.pc(), 0xec03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec01), 0xcb);
        EXPECT(gbc.readMem(0xec02), 0x32);
        // CB 32 0368
        gbc.setState(0xec8f, 0xc9e1, 0xf6d0, 0x58fe, 0xf324, 0xf132, 0x0, 0x0);
        gbc.writeMem(0xec8f, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc9e1);
        EXPECT(gbc.pc(), 0xec91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec8f), 0xcb);
        EXPECT(gbc.readMem(0xec90), 0x32);
        // CB 32 0369
        gbc.setState(0x15f5, 0xed74, 0x920, 0xee84, 0x6ae1, 0x32e5, 0x0, 0x0);
        gbc.writeMem(0x15f5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xed74);
        EXPECT(gbc.pc(), 0x15f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 036A
        gbc.setState(0xd35e, 0x8e3, 0x3210, 0xd402, 0x35f6, 0x1c61, 0x0, 0x0);
        gbc.writeMem(0xd35e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8e3);
        EXPECT(gbc.pc(), 0xd360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd35e), 0xcb);
        EXPECT(gbc.readMem(0xd35f), 0x32);
        // CB 32 036B
        gbc.setState(0xdc8, 0xa5a1, 0xa0, 0x4311, 0x88e2, 0x318a, 0x1, 0x0);
        gbc.writeMem(0xdc8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa5a1);
        EXPECT(gbc.pc(), 0xdca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 036C
        gbc.setState(0xeca2, 0x6ade, 0xf0d0, 0x4c8a, 0xdab9, 0x1022, 0x0, 0x1);
        gbc.writeMem(0xeca2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6ade);
        EXPECT(gbc.pc(), 0xeca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca2), 0xcb);
        EXPECT(gbc.readMem(0xeca3), 0x32);
        // CB 32 036D
        gbc.setState(0x5ab0, 0x12a0, 0x650, 0xaccd, 0xdfc7, 0x3db3, 0x0, 0x0);
        gbc.writeMem(0x5ab0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x12a0);
        EXPECT(gbc.pc(), 0x5ab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 036E
        gbc.setState(0x1281, 0xa6e9, 0x65d0, 0xa314, 0x121d, 0x79fd, 0x1, 0x1);
        gbc.writeMem(0x1281, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa6e9);
        EXPECT(gbc.pc(), 0x1283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 036F
        gbc.setState(0x411b, 0xcf, 0xbc40, 0x5042, 0xf535, 0x4b6, 0x1, 0x0);
        gbc.writeMem(0x411b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcf);
        EXPECT(gbc.pc(), 0x411d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0371
        gbc.setState(0x3518, 0xb479, 0x14e0, 0xf2fd, 0xd18e, 0x13f7, 0x0, 0x0);
        gbc.writeMem(0x3518, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb479);
        EXPECT(gbc.pc(), 0x351a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0372
        gbc.setState(0x6682, 0x4d9c, 0x8b0, 0x6ea4, 0x9df4, 0x691c, 0x0, 0x1);
        gbc.writeMem(0x6682, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4d9c);
        EXPECT(gbc.pc(), 0x6684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0373
        gbc.setState(0x9718, 0x76cd, 0xb40, 0x1f6e, 0x5dee, 0x9988, 0x1, 0x0);
        gbc.writeMem(0x9718, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x76cd);
        EXPECT(gbc.pc(), 0x971a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9718), 0xcb);
        EXPECT(gbc.readMem(0x9719), 0x32);
        // CB 32 0374
        gbc.setState(0x2ecc, 0xdbb9, 0xc90, 0x1646, 0x84f3, 0x7809, 0x1, 0x0);
        gbc.writeMem(0x2ecc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdbb9);
        EXPECT(gbc.pc(), 0x2ece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0375
        gbc.setState(0x2c6d, 0x2cd1, 0xf3b0, 0x8837, 0xdc6c, 0xae81, 0x0, 0x1);
        gbc.writeMem(0x2c6d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2cd1);
        EXPECT(gbc.pc(), 0x2c6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0376
        gbc.setState(0x31ff, 0x5394, 0x6f90, 0x2cd6, 0x8d4, 0x12b6, 0x0, 0x0);
        gbc.writeMem(0x31ff, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5394);
        EXPECT(gbc.pc(), 0x3201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0378
        gbc.setState(0x1ba0, 0x11b9, 0xe7a0, 0xa871, 0x7134, 0xde77, 0x0, 0x1);
        gbc.writeMem(0x1ba0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x11b9);
        EXPECT(gbc.pc(), 0x1ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0379
        gbc.setState(0x184d, 0xa3a1, 0x7680, 0xa4e8, 0xf272, 0x6e16, 0x1, 0x1);
        gbc.writeMem(0x184d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa3a1);
        EXPECT(gbc.pc(), 0x184f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 037A
        gbc.setState(0x3606, 0x5e43, 0x670, 0x5e45, 0x9121, 0x3b4d, 0x0, 0x1);
        gbc.writeMem(0x3606, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5e43);
        EXPECT(gbc.pc(), 0x3608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 037B
        gbc.setState(0xd29a, 0xb0b6, 0x38b0, 0xe1b8, 0x1800, 0x1cdf, 0x0, 0x0);
        gbc.writeMem(0xd29a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb0b6);
        EXPECT(gbc.pc(), 0xd29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd29a), 0xcb);
        EXPECT(gbc.readMem(0xd29b), 0x32);
        // CB 32 037C
        gbc.setState(0x9488, 0xf7eb, 0x1650, 0x6a4b, 0x651d, 0x69f, 0x0, 0x0);
        gbc.writeMem(0x9488, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf7eb);
        EXPECT(gbc.pc(), 0x948a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9488), 0xcb);
        EXPECT(gbc.readMem(0x9489), 0x32);
        // CB 32 037D
        gbc.setState(0x5fad, 0x1997, 0xf8e0, 0xbc3a, 0xf86d, 0xf09e, 0x0, 0x0);
        gbc.writeMem(0x5fad, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1997);
        EXPECT(gbc.pc(), 0x5faf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 037E
        gbc.setState(0x3ac2, 0xf04d, 0xfd30, 0x2b5, 0xda06, 0x6b, 0x0, 0x0);
        gbc.writeMem(0x3ac2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf04d);
        EXPECT(gbc.pc(), 0x3ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 037F
        gbc.setState(0x32b3, 0xa883, 0xc90, 0xed68, 0x2bbc, 0xfe9e, 0x1, 0x1);
        gbc.writeMem(0x32b3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa883);
        EXPECT(gbc.pc(), 0x32b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0380
        gbc.setState(0xab78, 0x6286, 0x7540, 0xf459, 0xd929, 0xda8b, 0x0, 0x0);
        gbc.writeMem(0xab78, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6286);
        EXPECT(gbc.pc(), 0xab7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab78), 0xcb);
        EXPECT(gbc.readMem(0xab79), 0x32);
        // CB 32 0381
        gbc.setState(0x3ba, 0xa674, 0xe7f0, 0x3ec2, 0x72e1, 0xe647, 0x1, 0x1);
        gbc.writeMem(0x3ba, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa674);
        EXPECT(gbc.pc(), 0x3bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0382
        gbc.setState(0x58f7, 0x954e, 0x2ec0, 0xd6c2, 0x711b, 0xd3f3, 0x0, 0x1);
        gbc.writeMem(0x58f7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x954e);
        EXPECT(gbc.pc(), 0x58f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0384
        gbc.setState(0x4258, 0x6e0f, 0x8540, 0x407, 0xfb64, 0x3f07, 0x1, 0x1);
        gbc.writeMem(0x4258, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6e0f);
        EXPECT(gbc.pc(), 0x425a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0385
        gbc.setState(0x66e7, 0xd3a, 0x6a40, 0x945c, 0x34b3, 0x7f76, 0x0, 0x0);
        gbc.writeMem(0x66e7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd3a);
        EXPECT(gbc.pc(), 0x66e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0386
        gbc.setState(0x3577, 0x369a, 0xe4e0, 0x734c, 0x3f16, 0x1c1b, 0x0, 0x0);
        gbc.writeMem(0x3577, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x369a);
        EXPECT(gbc.pc(), 0x3579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0387
        gbc.setState(0x31b, 0xbe4a, 0xd80, 0x9b73, 0x6dad, 0x5d7c, 0x1, 0x1);
        gbc.writeMem(0x31b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbe4a);
        EXPECT(gbc.pc(), 0x31d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0389
        gbc.setState(0xb242, 0x69a1, 0x2440, 0xf70c, 0xd6b7, 0x71ec, 0x1, 0x1);
        gbc.writeMem(0xb242, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x69a1);
        EXPECT(gbc.pc(), 0xb244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb242), 0xcb);
        EXPECT(gbc.readMem(0xb243), 0x32);
        // CB 32 038A
        gbc.setState(0x113d, 0xdc79, 0x1e60, 0xc7c6, 0xe0d7, 0x7672, 0x1, 0x0);
        gbc.writeMem(0x113d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdc79);
        EXPECT(gbc.pc(), 0x113f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 038B
        gbc.setState(0xb330, 0x6d21, 0x7370, 0x5c8, 0xe6cc, 0xade4, 0x0, 0x0);
        gbc.writeMem(0xb330, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6d21);
        EXPECT(gbc.pc(), 0xb332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb330), 0xcb);
        EXPECT(gbc.readMem(0xb331), 0x32);
        // CB 32 038C
        gbc.setState(0x5286, 0x3b36, 0xe0a0, 0x34bf, 0xc48, 0x6770, 0x1, 0x0);
        gbc.writeMem(0x5286, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3b36);
        EXPECT(gbc.pc(), 0x5288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 038D
        gbc.setState(0x1ad, 0x6e55, 0x4ec0, 0xacd1, 0x22f, 0x57b, 0x1, 0x1);
        gbc.writeMem(0x1ad, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6e55);
        EXPECT(gbc.pc(), 0x1af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 038E
        gbc.setState(0xb3b2, 0xb14a, 0x4790, 0xfcd3, 0xd38a, 0x55b2, 0x1, 0x0);
        gbc.writeMem(0xb3b2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb14a);
        EXPECT(gbc.pc(), 0xb3b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3b2), 0xcb);
        EXPECT(gbc.readMem(0xb3b3), 0x32);
        // CB 32 038F
        gbc.setState(0xbe97, 0x52ab, 0x7d90, 0x424e, 0xfc70, 0x530a, 0x0, 0x1);
        gbc.writeMem(0xbe97, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x52ab);
        EXPECT(gbc.pc(), 0xbe99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe97), 0xcb);
        EXPECT(gbc.readMem(0xbe98), 0x32);
        // CB 32 0390
        gbc.setState(0xa023, 0x5e53, 0x8f0, 0xbf5c, 0xa405, 0x2710, 0x1, 0x1);
        gbc.writeMem(0xa023, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5e53);
        EXPECT(gbc.pc(), 0xa025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa023), 0xcb);
        EXPECT(gbc.readMem(0xa024), 0x32);
        // CB 32 0391
        gbc.setState(0xd322, 0xbb0c, 0xa130, 0x197e, 0x6308, 0x7a47, 0x1, 0x1);
        gbc.writeMem(0xd322, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbb0c);
        EXPECT(gbc.pc(), 0xd324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd322), 0xcb);
        EXPECT(gbc.readMem(0xd323), 0x32);
        // CB 32 0392
        gbc.setState(0xaf39, 0x1188, 0x5160, 0x6f64, 0xc8a1, 0x2dd, 0x1, 0x1);
        gbc.writeMem(0xaf39, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1188);
        EXPECT(gbc.pc(), 0xaf3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf39), 0xcb);
        EXPECT(gbc.readMem(0xaf3a), 0x32);
        // CB 32 0393
        gbc.setState(0x5d23, 0xee3d, 0xb6b0, 0x4676, 0x9238, 0x5b64, 0x0, 0x1);
        gbc.writeMem(0x5d23, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xee3d);
        EXPECT(gbc.pc(), 0x5d25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0394
        gbc.setState(0xbf3e, 0x18e3, 0x2c10, 0xb419, 0x5c0a, 0x745c, 0x0, 0x1);
        gbc.writeMem(0xbf3e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x18e3);
        EXPECT(gbc.pc(), 0xbf40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf3e), 0xcb);
        EXPECT(gbc.readMem(0xbf3f), 0x32);
        // CB 32 0395
        gbc.setState(0x8ecc, 0x8a15, 0xb680, 0xd62d, 0x11a6, 0x5394, 0x0, 0x1);
        gbc.writeMem(0x8ecc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8a15);
        EXPECT(gbc.pc(), 0x8ece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ecc), 0xcb);
        EXPECT(gbc.readMem(0x8ecd), 0x32);
        // CB 32 0396
        gbc.setState(0x7065, 0xd857, 0x4310, 0x409e, 0x735f, 0xc7fc, 0x0, 0x0);
        gbc.writeMem(0x7065, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd857);
        EXPECT(gbc.pc(), 0x7067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0397
        gbc.setState(0xdcb7, 0x6953, 0xa7a0, 0x2c43, 0x43a3, 0x2b6c, 0x1, 0x1);
        gbc.writeMem(0xdcb7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6953);
        EXPECT(gbc.pc(), 0xdcb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb7), 0xcb);
        EXPECT(gbc.readMem(0xdcb8), 0x32);
        // CB 32 0398
        gbc.setState(0xb34, 0xd9fe, 0x6c0, 0x212b, 0xa2c1, 0xf516, 0x1, 0x0);
        gbc.writeMem(0xb34, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd9fe);
        EXPECT(gbc.pc(), 0xb36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 0399
        gbc.setState(0x8402, 0x5953, 0xfd40, 0xd799, 0x33c0, 0xf29e, 0x1, 0x1);
        gbc.writeMem(0x8402, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5953);
        EXPECT(gbc.pc(), 0x8404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8402), 0xcb);
        EXPECT(gbc.readMem(0x8403), 0x32);
        // CB 32 039A
        gbc.setState(0xe179, 0xfef8, 0xf860, 0x25b, 0xdd24, 0x707b, 0x1, 0x0);
        gbc.writeMem(0xe179, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xfef8);
        EXPECT(gbc.pc(), 0xe17b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe179), 0xcb);
        EXPECT(gbc.readMem(0xe17a), 0x32);
        // CB 32 039B
        gbc.setState(0xcba3, 0x12b7, 0xbf70, 0x2c9b, 0x60ac, 0x4da4, 0x0, 0x1);
        gbc.writeMem(0xcba3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x12b7);
        EXPECT(gbc.pc(), 0xcba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcba3), 0xcb);
        EXPECT(gbc.readMem(0xcba4), 0x32);
        // CB 32 039C
        gbc.setState(0xe088, 0x8a05, 0xae50, 0xdc0c, 0xfdb2, 0x46e4, 0x1, 0x1);
        gbc.writeMem(0xe088, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8a05);
        EXPECT(gbc.pc(), 0xe08a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe088), 0xcb);
        EXPECT(gbc.readMem(0xe089), 0x32);
        // CB 32 039D
        gbc.setState(0xbb56, 0x5852, 0xf2a0, 0x144c, 0x6095, 0xcc09, 0x0, 0x1);
        gbc.writeMem(0xbb56, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5852);
        EXPECT(gbc.pc(), 0xbb58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb56), 0xcb);
        EXPECT(gbc.readMem(0xbb57), 0x32);
        // CB 32 039E
        gbc.setState(0x5793, 0x1644, 0x8010, 0xe12d, 0x1228, 0x7ba2, 0x1, 0x1);
        gbc.writeMem(0x5793, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1644);
        EXPECT(gbc.pc(), 0x5795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 039F
        gbc.setState(0x452b, 0x92ec, 0xb1a0, 0x5826, 0xfad, 0x2481, 0x0, 0x0);
        gbc.writeMem(0x452b, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x92ec);
        EXPECT(gbc.pc(), 0x452d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03A0
        gbc.setState(0x47e, 0x2b9d, 0x8940, 0xc364, 0x4dfc, 0xf77b, 0x0, 0x1);
        gbc.writeMem(0x47e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2b9d);
        EXPECT(gbc.pc(), 0x480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03A1
        gbc.setState(0xac83, 0x9196, 0x9840, 0xd979, 0xe3d9, 0xab41, 0x0, 0x0);
        gbc.writeMem(0xac83, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9196);
        EXPECT(gbc.pc(), 0xac85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac83), 0xcb);
        EXPECT(gbc.readMem(0xac84), 0x32);
        // CB 32 03A2
        gbc.setState(0x1cf4, 0xe1dd, 0x540, 0x35bf, 0x1830, 0x550e, 0x0, 0x0);
        gbc.writeMem(0x1cf4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe1dd);
        EXPECT(gbc.pc(), 0x1cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03A3
        gbc.setState(0xbac4, 0xad61, 0xdce0, 0xb0ae, 0xa591, 0xab45, 0x1, 0x0);
        gbc.writeMem(0xbac4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xad61);
        EXPECT(gbc.pc(), 0xbac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac4), 0xcb);
        EXPECT(gbc.readMem(0xbac5), 0x32);
        // CB 32 03A4
        gbc.setState(0x6f4a, 0xb2b9, 0x9a40, 0xbbf2, 0x14d7, 0x58b2, 0x0, 0x1);
        gbc.writeMem(0x6f4a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb2b9);
        EXPECT(gbc.pc(), 0x6f4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03A5
        gbc.setState(0x92e5, 0x6c48, 0x8640, 0x283f, 0xfd3f, 0x2742, 0x1, 0x1);
        gbc.writeMem(0x92e5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6c48);
        EXPECT(gbc.pc(), 0x92e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e5), 0xcb);
        EXPECT(gbc.readMem(0x92e6), 0x32);
        // CB 32 03A6
        gbc.setState(0x51ba, 0x116, 0x4d90, 0xaa50, 0x3f4e, 0xe913, 0x0, 0x1);
        gbc.writeMem(0x51ba, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x116);
        EXPECT(gbc.pc(), 0x51bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03A7
        gbc.setState(0x35c3, 0x2122, 0x60b0, 0x2b7c, 0xb157, 0xc26c, 0x1, 0x1);
        gbc.writeMem(0x35c3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2122);
        EXPECT(gbc.pc(), 0x35c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03A8
        gbc.setState(0xa742, 0x58b3, 0xbf40, 0x52d2, 0x7944, 0xc691, 0x1, 0x0);
        gbc.writeMem(0xa742, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x58b3);
        EXPECT(gbc.pc(), 0xa744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa742), 0xcb);
        EXPECT(gbc.readMem(0xa743), 0x32);
        // CB 32 03A9
        gbc.setState(0x651c, 0xc612, 0x4a00, 0x7427, 0x7f83, 0x8d3a, 0x0, 0x1);
        gbc.writeMem(0x651c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc612);
        EXPECT(gbc.pc(), 0x651e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03AA
        gbc.setState(0x3dc8, 0x5440, 0xa180, 0x5a7a, 0xd549, 0x1818, 0x0, 0x0);
        gbc.writeMem(0x3dc8, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5440);
        EXPECT(gbc.pc(), 0x3dca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03AB
        gbc.setState(0xbb19, 0x3a43, 0xb2d0, 0xf085, 0x8708, 0xded, 0x1, 0x0);
        gbc.writeMem(0xbb19, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3a43);
        EXPECT(gbc.pc(), 0xbb1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb19), 0xcb);
        EXPECT(gbc.readMem(0xbb1a), 0x32);
        // CB 32 03AC
        gbc.setState(0x6585, 0x6a09, 0xe2a0, 0x8eb1, 0x1947, 0x4715, 0x1, 0x0);
        gbc.writeMem(0x6585, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6a09);
        EXPECT(gbc.pc(), 0x6587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03AD
        gbc.setState(0x83e2, 0x76e3, 0xdb40, 0x2ce7, 0x9839, 0xb27f, 0x0, 0x0);
        gbc.writeMem(0x83e2, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x76e3);
        EXPECT(gbc.pc(), 0x83e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e2), 0xcb);
        EXPECT(gbc.readMem(0x83e3), 0x32);
        // CB 32 03AE
        gbc.setState(0xdeda, 0xfd89, 0x4540, 0xb129, 0xda75, 0xb89d, 0x1, 0x1);
        gbc.writeMem(0xdeda, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfd89);
        EXPECT(gbc.pc(), 0xdedc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeda), 0xcb);
        EXPECT(gbc.readMem(0xdedb), 0x32);
        // CB 32 03AF
        gbc.setState(0xdff4, 0xa122, 0xda10, 0xc7f5, 0x2f4, 0x63b5, 0x0, 0x0);
        gbc.writeMem(0xdff4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa122);
        EXPECT(gbc.pc(), 0xdff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff4), 0xcb);
        EXPECT(gbc.readMem(0xdff5), 0x32);
        // CB 32 03B0
        gbc.setState(0x569e, 0xcf66, 0x3f30, 0x491, 0x42c1, 0x2167, 0x0, 0x0);
        gbc.writeMem(0x569e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xcf66);
        EXPECT(gbc.pc(), 0x56a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03B1
        gbc.setState(0xc5bb, 0x7661, 0x1830, 0x20b, 0xbdf5, 0xf71f, 0x0, 0x1);
        gbc.writeMem(0xc5bb, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7661);
        EXPECT(gbc.pc(), 0xc5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5bb), 0xcb);
        EXPECT(gbc.readMem(0xc5bc), 0x32);
        // CB 32 03B2
        gbc.setState(0x48d1, 0xb50c, 0x8ff0, 0x4fb, 0xdc3b, 0x4357, 0x1, 0x0);
        gbc.writeMem(0x48d1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb50c);
        EXPECT(gbc.pc(), 0x48d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03B3
        gbc.setState(0x33f1, 0x39e4, 0x9f90, 0x8557, 0xe770, 0xbd41, 0x0, 0x1);
        gbc.writeMem(0x33f1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x39e4);
        EXPECT(gbc.pc(), 0x33f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03B4
        gbc.setState(0xc661, 0x182d, 0x6950, 0xbe21, 0xd1e, 0xac18, 0x1, 0x0);
        gbc.writeMem(0xc661, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x182d);
        EXPECT(gbc.pc(), 0xc663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc661), 0xcb);
        EXPECT(gbc.readMem(0xc662), 0x32);
        // CB 32 03B5
        gbc.setState(0x9ca6, 0x4659, 0xf870, 0xe889, 0x519a, 0x355e, 0x0, 0x0);
        gbc.writeMem(0x9ca6, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4659);
        EXPECT(gbc.pc(), 0x9ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca6), 0xcb);
        EXPECT(gbc.readMem(0x9ca7), 0x32);
        // CB 32 03B6
        gbc.setState(0x7031, 0x86e2, 0xbfa0, 0x4357, 0x800e, 0x7831, 0x1, 0x0);
        gbc.writeMem(0x7031, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x86e2);
        EXPECT(gbc.pc(), 0x7033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03B8
        gbc.setState(0x3e13, 0x2704, 0x4000, 0x86b8, 0x9e43, 0xee0c, 0x1, 0x1);
        gbc.writeMem(0x3e13, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2704);
        EXPECT(gbc.pc(), 0x3e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03B9
        gbc.setState(0xa458, 0x62b1, 0x9660, 0xe84f, 0xa620, 0xc596, 0x1, 0x0);
        gbc.writeMem(0xa458, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x62b1);
        EXPECT(gbc.pc(), 0xa45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa458), 0xcb);
        EXPECT(gbc.readMem(0xa459), 0x32);
        // CB 32 03BA
        gbc.setState(0xe809, 0x503e, 0xdce0, 0xb72a, 0x5e43, 0xd5f1, 0x0, 0x0);
        gbc.writeMem(0xe809, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x503e);
        EXPECT(gbc.pc(), 0xe80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe809), 0xcb);
        EXPECT(gbc.readMem(0xe80a), 0x32);
        // CB 32 03BB
        gbc.setState(0x8e5e, 0xaab8, 0xcc40, 0xb0be, 0x144b, 0xe3bd, 0x1, 0x0);
        gbc.writeMem(0x8e5e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xaab8);
        EXPECT(gbc.pc(), 0x8e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e5e), 0xcb);
        EXPECT(gbc.readMem(0x8e5f), 0x32);
        // CB 32 03BC
        gbc.setState(0xd2ec, 0x2825, 0x6d80, 0xdd3d, 0x2882, 0xf375, 0x0, 0x0);
        gbc.writeMem(0xd2ec, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2825);
        EXPECT(gbc.pc(), 0xd2ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ec), 0xcb);
        EXPECT(gbc.readMem(0xd2ed), 0x32);
        // CB 32 03BD
        gbc.setState(0xb696, 0x77, 0x2030, 0xe21c, 0x5dca, 0xef45, 0x1, 0x0);
        gbc.writeMem(0xb696, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x77);
        EXPECT(gbc.pc(), 0xb698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb696), 0xcb);
        EXPECT(gbc.readMem(0xb697), 0x32);
        // CB 32 03BE
        gbc.setState(0x5514, 0x1092, 0x5ae0, 0x8f08, 0x597f, 0x9e10, 0x1, 0x1);
        gbc.writeMem(0x5514, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1092);
        EXPECT(gbc.pc(), 0x5516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03BF
        gbc.setState(0x51b5, 0x3560, 0xfbb0, 0x3e1a, 0x353, 0xdcb7, 0x1, 0x0);
        gbc.writeMem(0x51b5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3560);
        EXPECT(gbc.pc(), 0x51b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03C0
        gbc.setState(0x6fb3, 0x42d7, 0xa2b0, 0xaf45, 0x4e7b, 0xa42c, 0x1, 0x0);
        gbc.writeMem(0x6fb3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x42d7);
        EXPECT(gbc.pc(), 0x6fb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03C1
        gbc.setState(0xaf2d, 0xea0d, 0xaba0, 0x6c51, 0xad2a, 0x52b5, 0x0, 0x1);
        gbc.writeMem(0xaf2d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xea0d);
        EXPECT(gbc.pc(), 0xaf2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf2d), 0xcb);
        EXPECT(gbc.readMem(0xaf2e), 0x32);
        // CB 32 03C2
        gbc.setState(0x492d, 0xee95, 0x5130, 0x6774, 0x3dd3, 0x7c29, 0x0, 0x0);
        gbc.writeMem(0x492d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xee95);
        EXPECT(gbc.pc(), 0x492f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03C3
        gbc.setState(0x8110, 0x2c57, 0x5b80, 0xb36a, 0x7854, 0xf690, 0x1, 0x0);
        gbc.writeMem(0x8110, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2c57);
        EXPECT(gbc.pc(), 0x8112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8110), 0xcb);
        EXPECT(gbc.readMem(0x8111), 0x32);
        // CB 32 03C4
        gbc.setState(0xcabf, 0xfbe4, 0x6ea0, 0xb982, 0xf93a, 0xb826, 0x1, 0x0);
        gbc.writeMem(0xcabf, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xfbe4);
        EXPECT(gbc.pc(), 0xcac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcabf), 0xcb);
        EXPECT(gbc.readMem(0xcac0), 0x32);
        // CB 32 03C6
        gbc.setState(0x4ea7, 0xa80d, 0xeb50, 0x9a61, 0x7f89, 0x136, 0x0, 0x1);
        gbc.writeMem(0x4ea7, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa80d);
        EXPECT(gbc.pc(), 0x4ea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03C7
        gbc.setState(0x3a67, 0xf1d7, 0xe2a0, 0xfeb2, 0xd31d, 0xf8fc, 0x1, 0x0);
        gbc.writeMem(0x3a67, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf1d7);
        EXPECT(gbc.pc(), 0x3a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03C8
        gbc.setState(0x147c, 0x1ad7, 0x26d0, 0xca6b, 0x550, 0x9729, 0x1, 0x0);
        gbc.writeMem(0x147c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1ad7);
        EXPECT(gbc.pc(), 0x147e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03C9
        gbc.setState(0xbc0e, 0xf4ea, 0xdcd0, 0x75c, 0x15e4, 0xc52f, 0x0, 0x0);
        gbc.writeMem(0xbc0e, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf4ea);
        EXPECT(gbc.pc(), 0xbc10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc0e), 0xcb);
        EXPECT(gbc.readMem(0xbc0f), 0x32);
        // CB 32 03CA
        gbc.setState(0x3bf1, 0x2e19, 0xc850, 0xb4f, 0x504, 0xf53, 0x0, 0x1);
        gbc.writeMem(0x3bf1, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2e19);
        EXPECT(gbc.pc(), 0x3bf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03CC
        gbc.setState(0xa045, 0xe55f, 0xc4a0, 0x4b03, 0x6f07, 0x181c, 0x0, 0x1);
        gbc.writeMem(0xa045, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe55f);
        EXPECT(gbc.pc(), 0xa047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa045), 0xcb);
        EXPECT(gbc.readMem(0xa046), 0x32);
        // CB 32 03CD
        gbc.setState(0xfc, 0xb3b8, 0xe600, 0x5664, 0x4510, 0x35a9, 0x1, 0x1);
        gbc.writeMem(0xfc, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb3b8);
        EXPECT(gbc.pc(), 0xfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03CE
        gbc.setState(0x4a6d, 0xe287, 0x3010, 0x9186, 0x28f6, 0x4da3, 0x1, 0x0);
        gbc.writeMem(0x4a6d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe287);
        EXPECT(gbc.pc(), 0x4a6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03CF
        gbc.setState(0x2975, 0x9c78, 0xd350, 0x4f21, 0x6449, 0x9c0b, 0x0, 0x0);
        gbc.writeMem(0x2975, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9c78);
        EXPECT(gbc.pc(), 0x2977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03D0
        gbc.setState(0x398a, 0x222f, 0x2100, 0x3f41, 0x470e, 0x8b7, 0x1, 0x0);
        gbc.writeMem(0x398a, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x222f);
        EXPECT(gbc.pc(), 0x398c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03D1
        gbc.setState(0x5de, 0xc692, 0x2df0, 0x1d3d, 0x47e0, 0xe79d, 0x0, 0x0);
        gbc.writeMem(0x5de, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc692);
        EXPECT(gbc.pc(), 0x5e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03D2
        gbc.setState(0x7822, 0xae84, 0xd510, 0xad2c, 0x991c, 0x4df6, 0x1, 0x1);
        gbc.writeMem(0x7822, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xae84);
        EXPECT(gbc.pc(), 0x7824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03D3
        gbc.setState(0x1226, 0xc000, 0xa0e0, 0x59b6, 0x5646, 0x2937, 0x0, 0x1);
        gbc.writeMem(0x1226, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc000);
        EXPECT(gbc.pc(), 0x1228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03D4
        gbc.setState(0x65ba, 0x4898, 0xa020, 0xe892, 0xd767, 0x1f6c, 0x0, 0x0);
        gbc.writeMem(0x65ba, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4898);
        EXPECT(gbc.pc(), 0x65bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03D5
        gbc.setState(0x3f1d, 0x642c, 0x3b70, 0xbec4, 0x4ecb, 0x88e6, 0x0, 0x1);
        gbc.writeMem(0x3f1d, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x642c);
        EXPECT(gbc.pc(), 0x3f1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03D6
        gbc.setState(0x1c89, 0x7c41, 0xd700, 0x33e, 0x79b7, 0x5533, 0x1, 0x1);
        gbc.writeMem(0x1c89, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7c41);
        EXPECT(gbc.pc(), 0x1c8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03D7
        gbc.setState(0xd21c, 0x745d, 0x2530, 0xd320, 0xac01, 0x1af6, 0x0, 0x0);
        gbc.writeMem(0xd21c, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x745d);
        EXPECT(gbc.pc(), 0xd21e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd21c), 0xcb);
        EXPECT(gbc.readMem(0xd21d), 0x32);
        // CB 32 03D8
        gbc.setState(0x39df, 0x22f7, 0xb3b0, 0x473, 0xe927, 0x1341, 0x1, 0x1);
        gbc.writeMem(0x39df, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x22f7);
        EXPECT(gbc.pc(), 0x39e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03D9
        gbc.setState(0xe8cd, 0xa813, 0xc290, 0xe80, 0x4f8b, 0xd374, 0x1, 0x0);
        gbc.writeMem(0xe8cd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa813);
        EXPECT(gbc.pc(), 0xe8cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8cd), 0xcb);
        EXPECT(gbc.readMem(0xe8ce), 0x32);
        // CB 32 03DA
        gbc.setState(0xe979, 0xcfc9, 0x9ae0, 0x8075, 0x82f5, 0xe38b, 0x1, 0x1);
        gbc.writeMem(0xe979, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcfc9);
        EXPECT(gbc.pc(), 0xe97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe979), 0xcb);
        EXPECT(gbc.readMem(0xe97a), 0x32);
        // CB 32 03DB
        gbc.setState(0x5cd, 0x4341, 0xb8e0, 0x9c20, 0xb60b, 0x867d, 0x0, 0x1);
        gbc.writeMem(0x5cd, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4341);
        EXPECT(gbc.pc(), 0x5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03DC
        gbc.setState(0xbac0, 0x3ce8, 0x7100, 0xcd0c, 0xbf62, 0x9f80, 0x1, 0x1);
        gbc.writeMem(0xbac0, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3ce8);
        EXPECT(gbc.pc(), 0xbac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac0), 0xcb);
        EXPECT(gbc.readMem(0xbac1), 0x32);
        // CB 32 03DD
        gbc.setState(0xbea5, 0xd568, 0xc330, 0xc38d, 0x136, 0x6aad, 0x1, 0x0);
        gbc.writeMem(0xbea5, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd568);
        EXPECT(gbc.pc(), 0xbea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbea5), 0xcb);
        EXPECT(gbc.readMem(0xbea6), 0x32);
        // CB 32 03DE
        gbc.setState(0x4f29, 0xfcd4, 0xe030, 0x6de8, 0xeb95, 0x70b0, 0x1, 0x1);
        gbc.writeMem(0x4f29, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfcd4);
        EXPECT(gbc.pc(), 0x4f2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03DF
        gbc.setState(0xea42, 0x6259, 0x62f0, 0x5eb6, 0x209d, 0x56cc, 0x1, 0x0);
        gbc.writeMem(0xea42, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6259);
        EXPECT(gbc.pc(), 0xea44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea42), 0xcb);
        EXPECT(gbc.readMem(0xea43), 0x32);
        // CB 32 03E0
        gbc.setState(0xc6b3, 0x10fc, 0x1de0, 0xe0c7, 0xf889, 0xeb6d, 0x0, 0x0);
        gbc.writeMem(0xc6b3, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x10fc);
        EXPECT(gbc.pc(), 0xc6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6b3), 0xcb);
        EXPECT(gbc.readMem(0xc6b4), 0x32);
        // CB 32 03E1
        gbc.setState(0xec96, 0xd91d, 0x10c0, 0x9cc1, 0x11ff, 0x4012, 0x1, 0x0);
        gbc.writeMem(0xec96, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd91d);
        EXPECT(gbc.pc(), 0xec98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec96), 0xcb);
        EXPECT(gbc.readMem(0xec97), 0x32);
        // CB 32 03E2
        gbc.setState(0x3e93, 0x11b6, 0x8780, 0x7805, 0x9168, 0x6519, 0x0, 0x0);
        gbc.writeMem(0x3e93, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x11b6);
        EXPECT(gbc.pc(), 0x3e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03E3
        gbc.setState(0xbca, 0x2128, 0xe730, 0xad55, 0xf579, 0xb4a7, 0x1, 0x1);
        gbc.writeMem(0xbca, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2128);
        EXPECT(gbc.pc(), 0xbcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03E5
        gbc.setState(0x1be9, 0x460b, 0x6ee0, 0x10b2, 0x5f10, 0x89f0, 0x0, 0x0);
        gbc.writeMem(0x1be9, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x460b);
        EXPECT(gbc.pc(), 0x1beb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 32 03E6
        gbc.setState(0xab21, 0x420c, 0x5480, 0x758e, 0x54bc, 0x5281, 0x1, 0x1);
        gbc.writeMem(0xab21, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x420c);
        EXPECT(gbc.pc(), 0xab23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab21), 0xcb);
        EXPECT(gbc.readMem(0xab22), 0x32);
        // CB 32 03E7
        gbc.setState(0x59a4, 0x6c26, 0x650, 0x4c, 0xb3ea, 0x14de, 0x0, 0x1);
        gbc.writeMem(0x59a4, { 0xcb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6c26);
        EXPECT(gbc.pc(), 0x59a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
