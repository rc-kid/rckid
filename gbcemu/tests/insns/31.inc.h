    TEST(gbcemu, opcode_31) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 31 0000
        gbc.setState(0x6a44, 0x4494, 0xd040, 0xf95f, 0xbaab, 0x2f14, 0x1, 0x1);
        gbc.writeMem(0x6a44, { 0x31, 0x1d, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2c1d);
        EXPECT(gbc.pc(), 0x6a47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0001
        gbc.setState(0xabe4, 0x27c9, 0xb910, 0x17aa, 0xa477, 0x1ad1, 0x0, 0x1);
        gbc.writeMem(0xabe4, { 0x31, 0xda, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xda);
        EXPECT(gbc.pc(), 0xabe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabe4), 0x31);
        EXPECT(gbc.readMem(0xabe5), 0xda);
        EXPECT(gbc.readMem(0xabe6), 0x0);
        // 31 0002
        gbc.setState(0x924a, 0x26b0, 0xee00, 0x6935, 0x4bf3, 0x6681, 0x1, 0x1);
        gbc.writeMem(0x924a, { 0x31, 0x9f, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x69f);
        EXPECT(gbc.pc(), 0x924d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x924a), 0x31);
        EXPECT(gbc.readMem(0x924b), 0x9f);
        EXPECT(gbc.readMem(0x924c), 0x6);
        // 31 0003
        gbc.setState(0xbab, 0x410, 0x32b0, 0x2984, 0x4410, 0xcca8, 0x1, 0x0);
        gbc.writeMem(0xbab, { 0x31, 0x70, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa70);
        EXPECT(gbc.pc(), 0xbae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0004
        gbc.setState(0xd41e, 0x7a16, 0xdd80, 0x3194, 0x9c43, 0x6015, 0x0, 0x0);
        gbc.writeMem(0xd41e, { 0x31, 0x7b, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe17b);
        EXPECT(gbc.pc(), 0xd421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd41e), 0x31);
        EXPECT(gbc.readMem(0xd41f), 0x7b);
        EXPECT(gbc.readMem(0xd420), 0xe1);
        // 31 0005
        gbc.setState(0xe95a, 0xa246, 0x3940, 0xbe4f, 0xa9d5, 0xe3d2, 0x0, 0x0);
        gbc.writeMem(0xe95a, { 0x31, 0x2e, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa2e);
        EXPECT(gbc.pc(), 0xe95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe95a), 0x31);
        EXPECT(gbc.readMem(0xe95b), 0x2e);
        EXPECT(gbc.readMem(0xe95c), 0xa);
        // 31 0006
        gbc.setState(0x3f24, 0x41f, 0x2980, 0x88da, 0xac9b, 0xf097, 0x1, 0x0);
        gbc.writeMem(0x3f24, { 0x31, 0xb3, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x60b3);
        EXPECT(gbc.pc(), 0x3f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0007
        gbc.setState(0x2470, 0xc28e, 0xa760, 0x833e, 0xcfaf, 0xe63e, 0x1, 0x0);
        gbc.writeMem(0x2470, { 0x31, 0xdb, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x32db);
        EXPECT(gbc.pc(), 0x2473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0008
        gbc.setState(0x2095, 0x6045, 0x84c0, 0x3d50, 0x64f, 0x245e, 0x1, 0x0);
        gbc.writeMem(0x2095, { 0x31, 0x80, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xce80);
        EXPECT(gbc.pc(), 0x2098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0009
        gbc.setState(0xdde, 0x9484, 0xd700, 0xd65d, 0x63dd, 0xbd3d, 0x1, 0x1);
        gbc.writeMem(0xdde, { 0x31, 0x56, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6856);
        EXPECT(gbc.pc(), 0xde1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 000A
        gbc.setState(0x5dde, 0x2da9, 0x6800, 0xe321, 0xeb33, 0xbfd7, 0x1, 0x0);
        gbc.writeMem(0x5dde, { 0x31, 0x80, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1880);
        EXPECT(gbc.pc(), 0x5de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 000B
        gbc.setState(0xa715, 0xf28d, 0xb6d0, 0x8602, 0xbb67, 0xdfaa, 0x1, 0x0);
        gbc.writeMem(0xa715, { 0x31, 0x2f, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf22f);
        EXPECT(gbc.pc(), 0xa718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa715), 0x31);
        EXPECT(gbc.readMem(0xa716), 0x2f);
        EXPECT(gbc.readMem(0xa717), 0xf2);
        // 31 000C
        gbc.setState(0x4646, 0x6ac6, 0x7680, 0xaf73, 0x52da, 0x4755, 0x0, 0x1);
        gbc.writeMem(0x4646, { 0x31, 0x93, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2a93);
        EXPECT(gbc.pc(), 0x4649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 000D
        gbc.setState(0xd38f, 0xe203, 0x3c10, 0x6777, 0xfc8, 0xc592, 0x0, 0x0);
        gbc.writeMem(0xd38f, { 0x31, 0x48, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe48);
        EXPECT(gbc.pc(), 0xd392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd38f), 0x31);
        EXPECT(gbc.readMem(0xd390), 0x48);
        EXPECT(gbc.readMem(0xd391), 0xe);
        // 31 000E
        gbc.setState(0x3cf4, 0x50cc, 0x55e0, 0x79a2, 0x6c01, 0x15f6, 0x1, 0x1);
        gbc.writeMem(0x3cf4, { 0x31, 0x84, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x684);
        EXPECT(gbc.pc(), 0x3cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 000F
        gbc.setState(0xd46a, 0x53d, 0x5750, 0xf6c2, 0xe67a, 0x547e, 0x1, 0x1);
        gbc.writeMem(0xd46a, { 0x31, 0xf7, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xff7);
        EXPECT(gbc.pc(), 0xd46d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd46a), 0x31);
        EXPECT(gbc.readMem(0xd46b), 0xf7);
        EXPECT(gbc.readMem(0xd46c), 0xf);
        // 31 0010
        gbc.setState(0x7327, 0x97c6, 0x7100, 0x7b4, 0xc121, 0xe18c, 0x0, 0x1);
        gbc.writeMem(0x7327, { 0x31, 0x88, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5e88);
        EXPECT(gbc.pc(), 0x732a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0011
        gbc.setState(0xcfc3, 0xc924, 0x48d0, 0x4f46, 0x7cbb, 0x7a5d, 0x1, 0x1);
        gbc.writeMem(0xcfc3, { 0x31, 0xf, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3d0f);
        EXPECT(gbc.pc(), 0xcfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc3), 0x31);
        EXPECT(gbc.readMem(0xcfc4), 0xf);
        EXPECT(gbc.readMem(0xcfc5), 0x3d);
        // 31 0012
        gbc.setState(0x87d2, 0x6046, 0x8d00, 0xc4f8, 0x72c1, 0xf75e, 0x1, 0x0);
        gbc.writeMem(0x87d2, { 0x31, 0xd, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x600d);
        EXPECT(gbc.pc(), 0x87d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d2), 0x31);
        EXPECT(gbc.readMem(0x87d3), 0xd);
        EXPECT(gbc.readMem(0x87d4), 0x60);
        // 31 0013
        gbc.setState(0x2ccd, 0x4a61, 0xcec0, 0x5f46, 0x33c, 0xefea, 0x1, 0x0);
        gbc.writeMem(0x2ccd, { 0x31, 0x5, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8005);
        EXPECT(gbc.pc(), 0x2cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0014
        gbc.setState(0x69c4, 0x81d1, 0x9d10, 0x2702, 0x4a20, 0xc9dc, 0x0, 0x0);
        gbc.writeMem(0x69c4, { 0x31, 0x5f, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe65f);
        EXPECT(gbc.pc(), 0x69c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0015
        gbc.setState(0xb983, 0x16f9, 0xd540, 0x7338, 0xce2e, 0x7496, 0x1, 0x0);
        gbc.writeMem(0xb983, { 0x31, 0x1c, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x301c);
        EXPECT(gbc.pc(), 0xb986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb983), 0x31);
        EXPECT(gbc.readMem(0xb984), 0x1c);
        EXPECT(gbc.readMem(0xb985), 0x30);
        // 31 0017
        gbc.setState(0x9976, 0xdcca, 0x5e30, 0x10d7, 0xbc08, 0x1731, 0x1, 0x0);
        gbc.writeMem(0x9976, { 0x31, 0x14, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbe14);
        EXPECT(gbc.pc(), 0x9979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9976), 0x31);
        EXPECT(gbc.readMem(0x9977), 0x14);
        EXPECT(gbc.readMem(0x9978), 0xbe);
        // 31 0018
        gbc.setState(0xce47, 0x688, 0x8340, 0xca9, 0xd44d, 0x204a, 0x0, 0x1);
        gbc.writeMem(0xce47, { 0x31, 0x35, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9935);
        EXPECT(gbc.pc(), 0xce4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce47), 0x31);
        EXPECT(gbc.readMem(0xce48), 0x35);
        EXPECT(gbc.readMem(0xce49), 0x99);
        // 31 0019
        gbc.setState(0x6825, 0x25c4, 0x3130, 0x2e43, 0x86d0, 0xc9ed, 0x1, 0x1);
        gbc.writeMem(0x6825, { 0x31, 0x6d, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x976d);
        EXPECT(gbc.pc(), 0x6828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 001A
        gbc.setState(0x4ca, 0x22e3, 0xec40, 0x296a, 0x9864, 0xcc77, 0x1, 0x0);
        gbc.writeMem(0x4ca, { 0x31, 0xad, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd2ad);
        EXPECT(gbc.pc(), 0x4cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 001B
        gbc.setState(0x440, 0xcaa5, 0x6a30, 0x67c9, 0x4205, 0xf65f, 0x1, 0x1);
        gbc.writeMem(0x440, { 0x31, 0xca, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9fca);
        EXPECT(gbc.pc(), 0x443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 001C
        gbc.setState(0x13f3, 0x5c1e, 0x9ba0, 0xdb99, 0x4f29, 0x8f16, 0x1, 0x1);
        gbc.writeMem(0x13f3, { 0x31, 0x66, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3666);
        EXPECT(gbc.pc(), 0x13f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 001D
        gbc.setState(0xc58a, 0x7232, 0xbf30, 0xf028, 0xeb9a, 0x3eb0, 0x1, 0x1);
        gbc.writeMem(0xc58a, { 0x31, 0x44, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc44);
        EXPECT(gbc.pc(), 0xc58d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc58a), 0x31);
        EXPECT(gbc.readMem(0xc58b), 0x44);
        EXPECT(gbc.readMem(0xc58c), 0xc);
        // 31 001E
        gbc.setState(0x2d47, 0x500c, 0xb960, 0xba2c, 0xa62d, 0x6a98, 0x1, 0x0);
        gbc.writeMem(0x2d47, { 0x31, 0xaf, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x12af);
        EXPECT(gbc.pc(), 0x2d4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 001F
        gbc.setState(0xe2ef, 0xc3f0, 0x9920, 0x9af1, 0x8c2, 0x464d, 0x1, 0x0);
        gbc.writeMem(0xe2ef, { 0x31, 0x1e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbf1e);
        EXPECT(gbc.pc(), 0xe2f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ef), 0x31);
        EXPECT(gbc.readMem(0xe2f0), 0x1e);
        EXPECT(gbc.readMem(0xe2f1), 0xbf);
        // 31 0020
        gbc.setState(0x5c3b, 0xf015, 0xee0, 0x3195, 0x1d14, 0x9420, 0x0, 0x1);
        gbc.writeMem(0x5c3b, { 0x31, 0xfc, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4fc);
        EXPECT(gbc.pc(), 0x5c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0021
        gbc.setState(0x1d3e, 0xf1b7, 0x5ac0, 0xfac2, 0x82f5, 0x94a0, 0x1, 0x0);
        gbc.writeMem(0x1d3e, { 0x31, 0xb3, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x86b3);
        EXPECT(gbc.pc(), 0x1d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0022
        gbc.setState(0xef0e, 0x7f5b, 0xb430, 0xac78, 0x606d, 0x4a0, 0x0, 0x1);
        gbc.writeMem(0xef0e, { 0x31, 0xd1, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x30d1);
        EXPECT(gbc.pc(), 0xef11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef0e), 0x31);
        EXPECT(gbc.readMem(0xef0f), 0xd1);
        EXPECT(gbc.readMem(0xef10), 0x30);
        // 31 0023
        gbc.setState(0x4e71, 0xe815, 0xb440, 0xbbb1, 0x3a99, 0x9d79, 0x0, 0x1);
        gbc.writeMem(0x4e71, { 0x31, 0x5f, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x915f);
        EXPECT(gbc.pc(), 0x4e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0024
        gbc.setState(0xe522, 0x38b3, 0x5850, 0x49ae, 0x51dd, 0xb0f2, 0x1, 0x0);
        gbc.writeMem(0xe522, { 0x31, 0x82, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5b82);
        EXPECT(gbc.pc(), 0xe525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe522), 0x31);
        EXPECT(gbc.readMem(0xe523), 0x82);
        EXPECT(gbc.readMem(0xe524), 0x5b);
        // 31 0025
        gbc.setState(0x6ba, 0x95ee, 0x7230, 0xc0ea, 0x7869, 0xa3e5, 0x0, 0x1);
        gbc.writeMem(0x6ba, { 0x31, 0xc7, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc0c7);
        EXPECT(gbc.pc(), 0x6bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0026
        gbc.setState(0x2586, 0xdc92, 0x4800, 0x80c8, 0x1c05, 0x637d, 0x1, 0x0);
        gbc.writeMem(0x2586, { 0x31, 0x10, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5310);
        EXPECT(gbc.pc(), 0x2589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0027
        gbc.setState(0x7e7d, 0xfa3d, 0xd0f0, 0x8ba4, 0x63ae, 0x283e, 0x0, 0x1);
        gbc.writeMem(0x7e7d, { 0x31, 0x7f, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x267f);
        EXPECT(gbc.pc(), 0x7e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0028
        gbc.setState(0xe3d0, 0xa5b7, 0x2a90, 0xfe8, 0xa0d, 0xd6b8, 0x0, 0x0);
        gbc.writeMem(0xe3d0, { 0x31, 0x45, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3a45);
        EXPECT(gbc.pc(), 0xe3d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3d0), 0x31);
        EXPECT(gbc.readMem(0xe3d1), 0x45);
        EXPECT(gbc.readMem(0xe3d2), 0x3a);
        // 31 0029
        gbc.setState(0x1a47, 0x7d2f, 0x6da0, 0x2d7f, 0xed30, 0xa15, 0x1, 0x0);
        gbc.writeMem(0x1a47, { 0x31, 0xde, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb1de);
        EXPECT(gbc.pc(), 0x1a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 002A
        gbc.setState(0xb583, 0xd734, 0x660, 0x2c3f, 0x62eb, 0x3774, 0x0, 0x1);
        gbc.writeMem(0xb583, { 0x31, 0x36, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5636);
        EXPECT(gbc.pc(), 0xb586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb583), 0x31);
        EXPECT(gbc.readMem(0xb584), 0x36);
        EXPECT(gbc.readMem(0xb585), 0x56);
        // 31 002B
        gbc.setState(0x1cd6, 0xdd45, 0x8160, 0x9a59, 0x6644, 0x2b3c, 0x0, 0x1);
        gbc.writeMem(0x1cd6, { 0x31, 0xca, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7eca);
        EXPECT(gbc.pc(), 0x1cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 002C
        gbc.setState(0x6c86, 0x1ed, 0x3560, 0xe386, 0x2ce4, 0x29ce, 0x1, 0x1);
        gbc.writeMem(0x6c86, { 0x31, 0xc3, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1c3);
        EXPECT(gbc.pc(), 0x6c89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 002D
        gbc.setState(0x48af, 0x7932, 0x4950, 0x75bb, 0x155e, 0xa6e0, 0x1, 0x1);
        gbc.writeMem(0x48af, { 0x31, 0x6, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa406);
        EXPECT(gbc.pc(), 0x48b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 002E
        gbc.setState(0x47f6, 0x65c7, 0x4040, 0x5a6a, 0xa68d, 0x5654, 0x0, 0x1);
        gbc.writeMem(0x47f6, { 0x31, 0xb7, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xafb7);
        EXPECT(gbc.pc(), 0x47f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0030
        gbc.setState(0x7bc5, 0x4ae3, 0x7ed0, 0x4272, 0xef3b, 0x3571, 0x0, 0x0);
        gbc.writeMem(0x7bc5, { 0x31, 0xe7, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x86e7);
        EXPECT(gbc.pc(), 0x7bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0031
        gbc.setState(0x7c8a, 0xcc8, 0x3ab0, 0x8415, 0x54cb, 0xc86c, 0x1, 0x1);
        gbc.writeMem(0x7c8a, { 0x31, 0x7e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x557e);
        EXPECT(gbc.pc(), 0x7c8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0032
        gbc.setState(0xb9d4, 0x75f2, 0xc9e0, 0x32fe, 0xcbb8, 0x72aa, 0x0, 0x1);
        gbc.writeMem(0xb9d4, { 0x31, 0x4e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x774e);
        EXPECT(gbc.pc(), 0xb9d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d4), 0x31);
        EXPECT(gbc.readMem(0xb9d5), 0x4e);
        EXPECT(gbc.readMem(0xb9d6), 0x77);
        // 31 0033
        gbc.setState(0xd14d, 0x7d2b, 0xdae0, 0x2319, 0x51d9, 0x69ed, 0x1, 0x1);
        gbc.writeMem(0xd14d, { 0x31, 0xff, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x73ff);
        EXPECT(gbc.pc(), 0xd150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd14d), 0x31);
        EXPECT(gbc.readMem(0xd14e), 0xff);
        EXPECT(gbc.readMem(0xd14f), 0x73);
        // 31 0034
        gbc.setState(0xbd97, 0x8fb7, 0xe8d0, 0xd94a, 0xf122, 0x4260, 0x0, 0x1);
        gbc.writeMem(0xbd97, { 0x31, 0x82, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9e82);
        EXPECT(gbc.pc(), 0xbd9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd97), 0x31);
        EXPECT(gbc.readMem(0xbd98), 0x82);
        EXPECT(gbc.readMem(0xbd99), 0x9e);
        // 31 0037
        gbc.setState(0x48a, 0xb808, 0x8220, 0x677f, 0x3abb, 0x5939, 0x0, 0x1);
        gbc.writeMem(0x48a, { 0x31, 0x5d, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc75d);
        EXPECT(gbc.pc(), 0x48d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0038
        gbc.setState(0x65c, 0xee5d, 0xd7d0, 0xcb63, 0xf21d, 0x1116, 0x0, 0x1);
        gbc.writeMem(0x65c, { 0x31, 0x1, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5c01);
        EXPECT(gbc.pc(), 0x65f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0039
        gbc.setState(0x9a82, 0xd1b0, 0xaba0, 0x1e65, 0xc412, 0x52fc, 0x0, 0x1);
        gbc.writeMem(0x9a82, { 0x31, 0xdd, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdadd);
        EXPECT(gbc.pc(), 0x9a85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a82), 0x31);
        EXPECT(gbc.readMem(0x9a83), 0xdd);
        EXPECT(gbc.readMem(0x9a84), 0xda);
        // 31 003A
        gbc.setState(0x93aa, 0x1163, 0x8550, 0xa3fe, 0x3d26, 0xbc23, 0x0, 0x1);
        gbc.writeMem(0x93aa, { 0x31, 0xea, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3eea);
        EXPECT(gbc.pc(), 0x93ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93aa), 0x31);
        EXPECT(gbc.readMem(0x93ab), 0xea);
        EXPECT(gbc.readMem(0x93ac), 0x3e);
        // 31 003B
        gbc.setState(0xae62, 0x9207, 0x8a10, 0x35b8, 0xc944, 0x3f8e, 0x1, 0x1);
        gbc.writeMem(0xae62, { 0x31, 0x96, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdf96);
        EXPECT(gbc.pc(), 0xae65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae62), 0x31);
        EXPECT(gbc.readMem(0xae63), 0x96);
        EXPECT(gbc.readMem(0xae64), 0xdf);
        // 31 003C
        gbc.setState(0x4be9, 0x110b, 0xec10, 0x2ee6, 0x4c8b, 0x6a35, 0x1, 0x0);
        gbc.writeMem(0x4be9, { 0x31, 0xd1, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc2d1);
        EXPECT(gbc.pc(), 0x4bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 003E
        gbc.setState(0x2dde, 0x3ae5, 0x65c0, 0x6035, 0xdae, 0xe39f, 0x1, 0x1);
        gbc.writeMem(0x2dde, { 0x31, 0xa9, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6ea9);
        EXPECT(gbc.pc(), 0x2de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 003F
        gbc.setState(0x7519, 0x3c57, 0x1f30, 0xfbf8, 0x37b5, 0xeeb4, 0x1, 0x1);
        gbc.writeMem(0x7519, { 0x31, 0x7b, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6f7b);
        EXPECT(gbc.pc(), 0x751c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0040
        gbc.setState(0x204, 0x5f93, 0x88b0, 0x3f20, 0xac8e, 0x38cd, 0x0, 0x1);
        gbc.writeMem(0x204, { 0x31, 0xc4, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfdc4);
        EXPECT(gbc.pc(), 0x207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0041
        gbc.setState(0x5775, 0xc879, 0x4a00, 0xa3a, 0xf847, 0x2e8a, 0x1, 0x0);
        gbc.writeMem(0x5775, { 0x31, 0xa2, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x37a2);
        EXPECT(gbc.pc(), 0x5778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0043
        gbc.setState(0x4a53, 0x5a8f, 0xca90, 0x73fa, 0x1b80, 0xe41b, 0x1, 0x0);
        gbc.writeMem(0x4a53, { 0x31, 0x1e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5a1e);
        EXPECT(gbc.pc(), 0x4a56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0044
        gbc.setState(0x2ba9, 0xb400, 0x9c80, 0x3b63, 0x1fd, 0x6dd3, 0x1, 0x0);
        gbc.writeMem(0x2ba9, { 0x31, 0x2a, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf42a);
        EXPECT(gbc.pc(), 0x2bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0045
        gbc.setState(0x8004, 0x8c9, 0x3c20, 0x37b5, 0x18e7, 0xbb67, 0x1, 0x0);
        gbc.writeMem(0x8004, { 0x31, 0x7a, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbd7a);
        EXPECT(gbc.pc(), 0x8007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8004), 0x31);
        EXPECT(gbc.readMem(0x8005), 0x7a);
        EXPECT(gbc.readMem(0x8006), 0xbd);
        // 31 0046
        gbc.setState(0xba96, 0x96f0, 0xa470, 0x9499, 0x58d1, 0xe88, 0x1, 0x1);
        gbc.writeMem(0xba96, { 0x31, 0xe5, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x13e5);
        EXPECT(gbc.pc(), 0xba99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba96), 0x31);
        EXPECT(gbc.readMem(0xba97), 0xe5);
        EXPECT(gbc.readMem(0xba98), 0x13);
        // 31 0047
        gbc.setState(0x2115, 0xd908, 0xfe70, 0x543, 0xcc74, 0x80c6, 0x1, 0x0);
        gbc.writeMem(0x2115, { 0x31, 0xda, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb8da);
        EXPECT(gbc.pc(), 0x2118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0048
        gbc.setState(0x3726, 0x35a, 0xdf90, 0x3d58, 0x8df0, 0x28a1, 0x0, 0x1);
        gbc.writeMem(0x3726, { 0x31, 0x1b, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4c1b);
        EXPECT(gbc.pc(), 0x3729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0049
        gbc.setState(0xe114, 0x76f, 0x9cb0, 0xb347, 0x2247, 0x6ab3, 0x1, 0x1);
        gbc.writeMem(0xe114, { 0x31, 0x86, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8e86);
        EXPECT(gbc.pc(), 0xe117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe114), 0x31);
        EXPECT(gbc.readMem(0xe115), 0x86);
        EXPECT(gbc.readMem(0xe116), 0x8e);
        // 31 004A
        gbc.setState(0xccb3, 0x2c0b, 0xcdd0, 0xe05a, 0x1b30, 0xc64f, 0x1, 0x0);
        gbc.writeMem(0xccb3, { 0x31, 0xc6, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x16c6);
        EXPECT(gbc.pc(), 0xccb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccb3), 0x31);
        EXPECT(gbc.readMem(0xccb4), 0xc6);
        EXPECT(gbc.readMem(0xccb5), 0x16);
        // 31 004B
        gbc.setState(0xc349, 0x7df4, 0xdc10, 0x5380, 0x5550, 0x2c3e, 0x0, 0x1);
        gbc.writeMem(0xc349, { 0x31, 0xfe, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7ffe);
        EXPECT(gbc.pc(), 0xc34c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc349), 0x31);
        EXPECT(gbc.readMem(0xc34a), 0xfe);
        EXPECT(gbc.readMem(0xc34b), 0x7f);
        // 31 004C
        gbc.setState(0x92c6, 0x1597, 0x7b40, 0x54, 0x6b91, 0xa9b8, 0x1, 0x1);
        gbc.writeMem(0x92c6, { 0x31, 0x7b, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x437b);
        EXPECT(gbc.pc(), 0x92c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c6), 0x31);
        EXPECT(gbc.readMem(0x92c7), 0x7b);
        EXPECT(gbc.readMem(0x92c8), 0x43);
        // 31 004D
        gbc.setState(0x1e28, 0x522a, 0x8e00, 0x657c, 0x3453, 0x50e, 0x1, 0x0);
        gbc.writeMem(0x1e28, { 0x31, 0x6b, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x496b);
        EXPECT(gbc.pc(), 0x1e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 004E
        gbc.setState(0xecd1, 0x6522, 0x1190, 0xc361, 0x7645, 0x5b57, 0x1, 0x1);
        gbc.writeMem(0xecd1, { 0x31, 0x12, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xca12);
        EXPECT(gbc.pc(), 0xecd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd1), 0x31);
        EXPECT(gbc.readMem(0xecd2), 0x12);
        EXPECT(gbc.readMem(0xecd3), 0xca);
        // 31 004F
        gbc.setState(0x9440, 0x117b, 0x2f20, 0x3ce0, 0x5b33, 0x21d1, 0x0, 0x1);
        gbc.writeMem(0x9440, { 0x31, 0xf, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbc0f);
        EXPECT(gbc.pc(), 0x9443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9440), 0x31);
        EXPECT(gbc.readMem(0x9441), 0xf);
        EXPECT(gbc.readMem(0x9442), 0xbc);
        // 31 0050
        gbc.setState(0x8437, 0xc328, 0xcad0, 0x9841, 0xb40c, 0xbea9, 0x1, 0x0);
        gbc.writeMem(0x8437, { 0x31, 0xc2, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x42c2);
        EXPECT(gbc.pc(), 0x843a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8437), 0x31);
        EXPECT(gbc.readMem(0x8438), 0xc2);
        EXPECT(gbc.readMem(0x8439), 0x42);
        // 31 0051
        gbc.setState(0x3d3d, 0x758e, 0xe690, 0x7f08, 0xb197, 0xb3e5, 0x0, 0x1);
        gbc.writeMem(0x3d3d, { 0x31, 0x2f, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc32f);
        EXPECT(gbc.pc(), 0x3d40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0052
        gbc.setState(0x521a, 0xee32, 0xb240, 0xd523, 0x4cee, 0x780e, 0x0, 0x0);
        gbc.writeMem(0x521a, { 0x31, 0xfe, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdfe);
        EXPECT(gbc.pc(), 0x521d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0053
        gbc.setState(0xa2be, 0x4663, 0x3d20, 0x64d8, 0xb14f, 0xa6a1, 0x1, 0x0);
        gbc.writeMem(0xa2be, { 0x31, 0x8d, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4c8d);
        EXPECT(gbc.pc(), 0xa2c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2be), 0x31);
        EXPECT(gbc.readMem(0xa2bf), 0x8d);
        EXPECT(gbc.readMem(0xa2c0), 0x4c);
        // 31 0054
        gbc.setState(0xd2b4, 0xa025, 0xb1e0, 0x8e51, 0xb06a, 0x9f5f, 0x1, 0x0);
        gbc.writeMem(0xd2b4, { 0x31, 0xee, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2ee);
        EXPECT(gbc.pc(), 0xd2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b4), 0x31);
        EXPECT(gbc.readMem(0xd2b5), 0xee);
        EXPECT(gbc.readMem(0xd2b6), 0x2);
        // 31 0055
        gbc.setState(0xa4f5, 0xc408, 0x61b0, 0x1b56, 0xcd48, 0xe11d, 0x1, 0x0);
        gbc.writeMem(0xa4f5, { 0x31, 0x29, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5829);
        EXPECT(gbc.pc(), 0xa4f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4f5), 0x31);
        EXPECT(gbc.readMem(0xa4f6), 0x29);
        EXPECT(gbc.readMem(0xa4f7), 0x58);
        // 31 0056
        gbc.setState(0xdab3, 0x82fb, 0xebe0, 0xee20, 0x40be, 0xf7d7, 0x0, 0x1);
        gbc.writeMem(0xdab3, { 0x31, 0x77, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd277);
        EXPECT(gbc.pc(), 0xdab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdab3), 0x31);
        EXPECT(gbc.readMem(0xdab4), 0x77);
        EXPECT(gbc.readMem(0xdab5), 0xd2);
        // 31 0057
        gbc.setState(0x6549, 0x9c61, 0x5a90, 0x67ec, 0x72fa, 0xec39, 0x0, 0x1);
        gbc.writeMem(0x6549, { 0x31, 0x3d, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x543d);
        EXPECT(gbc.pc(), 0x654c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0058
        gbc.setState(0x9869, 0x1c51, 0xb250, 0x68f3, 0x2277, 0x3b4a, 0x1, 0x0);
        gbc.writeMem(0x9869, { 0x31, 0xe0, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x97e0);
        EXPECT(gbc.pc(), 0x986c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9869), 0x31);
        EXPECT(gbc.readMem(0x986a), 0xe0);
        EXPECT(gbc.readMem(0x986b), 0x97);
        // 31 0059
        gbc.setState(0x2d16, 0xe76d, 0x5af0, 0xb276, 0xad06, 0xed69, 0x0, 0x1);
        gbc.writeMem(0x2d16, { 0x31, 0x22, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8322);
        EXPECT(gbc.pc(), 0x2d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 005A
        gbc.setState(0x93e4, 0x42ad, 0x6d0, 0xbd11, 0xdc13, 0x7bb2, 0x0, 0x1);
        gbc.writeMem(0x93e4, { 0x31, 0x83, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd783);
        EXPECT(gbc.pc(), 0x93e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e4), 0x31);
        EXPECT(gbc.readMem(0x93e5), 0x83);
        EXPECT(gbc.readMem(0x93e6), 0xd7);
        // 31 005B
        gbc.setState(0x49e3, 0x2525, 0x5050, 0xde10, 0x26dc, 0xaeea, 0x1, 0x1);
        gbc.writeMem(0x49e3, { 0x31, 0x33, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7b33);
        EXPECT(gbc.pc(), 0x49e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 005C
        gbc.setState(0x5a19, 0x6669, 0xe620, 0xf9a7, 0xd89b, 0x40e1, 0x0, 0x1);
        gbc.writeMem(0x5a19, { 0x31, 0xc, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x710c);
        EXPECT(gbc.pc(), 0x5a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 005D
        gbc.setState(0xe63e, 0xd6b4, 0xa5c0, 0x8bc7, 0x2a2e, 0xa310, 0x1, 0x1);
        gbc.writeMem(0xe63e, { 0x31, 0x6e, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x916e);
        EXPECT(gbc.pc(), 0xe641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe63e), 0x31);
        EXPECT(gbc.readMem(0xe63f), 0x6e);
        EXPECT(gbc.readMem(0xe640), 0x91);
        // 31 005E
        gbc.setState(0xc120, 0x42d8, 0x4b30, 0x37d1, 0x31f8, 0x8822, 0x0, 0x0);
        gbc.writeMem(0xc120, { 0x31, 0xb5, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xccb5);
        EXPECT(gbc.pc(), 0xc123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc120), 0x31);
        EXPECT(gbc.readMem(0xc121), 0xb5);
        EXPECT(gbc.readMem(0xc122), 0xcc);
        // 31 005F
        gbc.setState(0x9d63, 0xb361, 0x4d40, 0x3eac, 0x7829, 0x6b5e, 0x1, 0x1);
        gbc.writeMem(0x9d63, { 0x31, 0xb4, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf4b4);
        EXPECT(gbc.pc(), 0x9d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d63), 0x31);
        EXPECT(gbc.readMem(0x9d64), 0xb4);
        EXPECT(gbc.readMem(0x9d65), 0xf4);
        // 31 0060
        gbc.setState(0xe1c, 0x5a44, 0x3fe0, 0x3e80, 0x6ce1, 0xd8fb, 0x0, 0x1);
        gbc.writeMem(0xe1c, { 0x31, 0xa5, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9da5);
        EXPECT(gbc.pc(), 0xe1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0061
        gbc.setState(0x4838, 0x15ac, 0x8e30, 0x29c3, 0x9c, 0x3932, 0x0, 0x0);
        gbc.writeMem(0x4838, { 0x31, 0x2f, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdb2f);
        EXPECT(gbc.pc(), 0x483b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0062
        gbc.setState(0x7709, 0x4066, 0x1d20, 0xdc5b, 0x7d40, 0x561, 0x1, 0x0);
        gbc.writeMem(0x7709, { 0x31, 0xd7, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x95d7);
        EXPECT(gbc.pc(), 0x770c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0063
        gbc.setState(0x2243, 0x911c, 0xe6c0, 0xa45f, 0xc80f, 0xa0e8, 0x0, 0x1);
        gbc.writeMem(0x2243, { 0x31, 0xb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x290b);
        EXPECT(gbc.pc(), 0x2246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0064
        gbc.setState(0x98e2, 0x8453, 0xa5b0, 0x78fe, 0xe53e, 0x93d4, 0x0, 0x0);
        gbc.writeMem(0x98e2, { 0x31, 0xfa, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3efa);
        EXPECT(gbc.pc(), 0x98e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e2), 0x31);
        EXPECT(gbc.readMem(0x98e3), 0xfa);
        EXPECT(gbc.readMem(0x98e4), 0x3e);
        // 31 0065
        gbc.setState(0xcd58, 0xb66a, 0x8780, 0x6fa9, 0x1383, 0x517b, 0x1, 0x0);
        gbc.writeMem(0xcd58, { 0x31, 0xda, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5eda);
        EXPECT(gbc.pc(), 0xcd5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd58), 0x31);
        EXPECT(gbc.readMem(0xcd59), 0xda);
        EXPECT(gbc.readMem(0xcd5a), 0x5e);
        // 31 0066
        gbc.setState(0x279d, 0xaaef, 0x7b00, 0xded6, 0x6f71, 0x12d1, 0x0, 0x1);
        gbc.writeMem(0x279d, { 0x31, 0xb4, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x41b4);
        EXPECT(gbc.pc(), 0x27a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0067
        gbc.setState(0x12fb, 0x2409, 0x3c50, 0x9ae6, 0xa08f, 0x7ba5, 0x1, 0x0);
        gbc.writeMem(0x12fb, { 0x31, 0x47, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6447);
        EXPECT(gbc.pc(), 0x12fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0068
        gbc.setState(0x595a, 0x889d, 0x7320, 0x5ded, 0xb171, 0x336b, 0x1, 0x1);
        gbc.writeMem(0x595a, { 0x31, 0xc6, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcac6);
        EXPECT(gbc.pc(), 0x595d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0069
        gbc.setState(0x4d86, 0x13d0, 0xfd30, 0xe89a, 0xdba9, 0x8f11, 0x1, 0x1);
        gbc.writeMem(0x4d86, { 0x31, 0x88, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7d88);
        EXPECT(gbc.pc(), 0x4d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 006A
        gbc.setState(0x237b, 0xa793, 0xc8e0, 0x9b35, 0xccb, 0x8408, 0x0, 0x1);
        gbc.writeMem(0x237b, { 0x31, 0x43, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5743);
        EXPECT(gbc.pc(), 0x237e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 006C
        gbc.setState(0x1e63, 0xc756, 0x3350, 0x122c, 0x10fb, 0xb5de, 0x0, 0x0);
        gbc.writeMem(0x1e63, { 0x31, 0x1f, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4f1f);
        EXPECT(gbc.pc(), 0x1e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 006D
        gbc.setState(0x5d00, 0x1065, 0x9560, 0xf659, 0x36b, 0xb95f, 0x1, 0x0);
        gbc.writeMem(0x5d00, { 0x31, 0x71, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4c71);
        EXPECT(gbc.pc(), 0x5d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 006E
        gbc.setState(0xe6c1, 0x97e8, 0xc3e0, 0xed92, 0x3778, 0x3190, 0x0, 0x0);
        gbc.writeMem(0xe6c1, { 0x31, 0xbf, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x33bf);
        EXPECT(gbc.pc(), 0xe6c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c1), 0x31);
        EXPECT(gbc.readMem(0xe6c2), 0xbf);
        EXPECT(gbc.readMem(0xe6c3), 0x33);
        // 31 006F
        gbc.setState(0x2acf, 0x4a5a, 0xfbc0, 0x915, 0xc9c3, 0x15b6, 0x1, 0x0);
        gbc.writeMem(0x2acf, { 0x31, 0xfb, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd3fb);
        EXPECT(gbc.pc(), 0x2ad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0070
        gbc.setState(0xe7f3, 0x3a55, 0xfe80, 0xd483, 0xf79e, 0x2d14, 0x1, 0x1);
        gbc.writeMem(0xe7f3, { 0x31, 0x7e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x967e);
        EXPECT(gbc.pc(), 0xe7f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f3), 0x31);
        EXPECT(gbc.readMem(0xe7f4), 0x7e);
        EXPECT(gbc.readMem(0xe7f5), 0x96);
        // 31 0071
        gbc.setState(0x8d5c, 0xfc67, 0x8c20, 0x84ed, 0xab1a, 0x11fd, 0x1, 0x1);
        gbc.writeMem(0x8d5c, { 0x31, 0x24, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1724);
        EXPECT(gbc.pc(), 0x8d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5c), 0x31);
        EXPECT(gbc.readMem(0x8d5d), 0x24);
        EXPECT(gbc.readMem(0x8d5e), 0x17);
        // 31 0072
        gbc.setState(0x8099, 0x5f54, 0x7e00, 0x36f1, 0xa234, 0xe854, 0x1, 0x0);
        gbc.writeMem(0x8099, { 0x31, 0xa4, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x22a4);
        EXPECT(gbc.pc(), 0x809c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8099), 0x31);
        EXPECT(gbc.readMem(0x809a), 0xa4);
        EXPECT(gbc.readMem(0x809b), 0x22);
        // 31 0073
        gbc.setState(0xa86f, 0x1026, 0xe8b0, 0x562d, 0xdad1, 0x8a6a, 0x0, 0x1);
        gbc.writeMem(0xa86f, { 0x31, 0x9, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1909);
        EXPECT(gbc.pc(), 0xa872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa86f), 0x31);
        EXPECT(gbc.readMem(0xa870), 0x9);
        EXPECT(gbc.readMem(0xa871), 0x19);
        // 31 0074
        gbc.setState(0x9f7c, 0x94e6, 0x7f80, 0xc214, 0x297b, 0x26a, 0x0, 0x1);
        gbc.writeMem(0x9f7c, { 0x31, 0x7b, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xea7b);
        EXPECT(gbc.pc(), 0x9f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f7c), 0x31);
        EXPECT(gbc.readMem(0x9f7d), 0x7b);
        EXPECT(gbc.readMem(0x9f7e), 0xea);
        // 31 0075
        gbc.setState(0xc6d2, 0x4d9, 0xb50, 0x9e30, 0x65ef, 0xeb14, 0x1, 0x1);
        gbc.writeMem(0xc6d2, { 0x31, 0x4d, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x214d);
        EXPECT(gbc.pc(), 0xc6d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d2), 0x31);
        EXPECT(gbc.readMem(0xc6d3), 0x4d);
        EXPECT(gbc.readMem(0xc6d4), 0x21);
        // 31 0076
        gbc.setState(0x8a34, 0xb558, 0xd480, 0xc69d, 0xd62b, 0x9ffa, 0x1, 0x1);
        gbc.writeMem(0x8a34, { 0x31, 0xc3, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x87c3);
        EXPECT(gbc.pc(), 0x8a37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a34), 0x31);
        EXPECT(gbc.readMem(0x8a35), 0xc3);
        EXPECT(gbc.readMem(0x8a36), 0x87);
        // 31 0077
        gbc.setState(0x7324, 0xde11, 0xf5d0, 0xf5d7, 0x879d, 0x2a6e, 0x0, 0x0);
        gbc.writeMem(0x7324, { 0x31, 0xc3, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xafc3);
        EXPECT(gbc.pc(), 0x7327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0078
        gbc.setState(0xabc5, 0x6ed4, 0xbe50, 0xd73d, 0x3a85, 0x58fd, 0x1, 0x1);
        gbc.writeMem(0xabc5, { 0x31, 0x9a, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc89a);
        EXPECT(gbc.pc(), 0xabc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc5), 0x31);
        EXPECT(gbc.readMem(0xabc6), 0x9a);
        EXPECT(gbc.readMem(0xabc7), 0xc8);
        // 31 0079
        gbc.setState(0x675c, 0xb10f, 0x22b0, 0x3f6e, 0xa99b, 0xced3, 0x0, 0x1);
        gbc.writeMem(0x675c, { 0x31, 0xa6, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x68a6);
        EXPECT(gbc.pc(), 0x675f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 007A
        gbc.setState(0xd3ee, 0x2875, 0x3cf0, 0xa359, 0xd084, 0x5c48, 0x1, 0x1);
        gbc.writeMem(0xd3ee, { 0x31, 0x5e, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x575e);
        EXPECT(gbc.pc(), 0xd3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ee), 0x31);
        EXPECT(gbc.readMem(0xd3ef), 0x5e);
        EXPECT(gbc.readMem(0xd3f0), 0x57);
        // 31 007B
        gbc.setState(0x7e29, 0xfdc4, 0xb0e0, 0x8a05, 0xe02a, 0x9af, 0x0, 0x0);
        gbc.writeMem(0x7e29, { 0x31, 0x3c, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x113c);
        EXPECT(gbc.pc(), 0x7e2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 007C
        gbc.setState(0x1a7a, 0x5bfe, 0x87f0, 0xc6ac, 0xc506, 0xf96, 0x1, 0x1);
        gbc.writeMem(0x1a7a, { 0x31, 0x5e, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc25e);
        EXPECT(gbc.pc(), 0x1a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 007D
        gbc.setState(0x139, 0x11cc, 0x50e0, 0xa0f4, 0xc4bd, 0x2fed, 0x0, 0x0);
        gbc.writeMem(0x139, { 0x31, 0x46, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc946);
        EXPECT(gbc.pc(), 0x13c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 007F
        gbc.setState(0x7150, 0xb0ca, 0xffd0, 0xa259, 0x1aa9, 0x8d66, 0x0, 0x0);
        gbc.writeMem(0x7150, { 0x31, 0x45, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2245);
        EXPECT(gbc.pc(), 0x7153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0080
        gbc.setState(0xa4f3, 0x78b8, 0x4440, 0xe1b5, 0xdc71, 0x14b7, 0x1, 0x1);
        gbc.writeMem(0xa4f3, { 0x31, 0xaf, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x93af);
        EXPECT(gbc.pc(), 0xa4f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f3), 0x31);
        EXPECT(gbc.readMem(0xa4f4), 0xaf);
        EXPECT(gbc.readMem(0xa4f5), 0x93);
        // 31 0081
        gbc.setState(0x7657, 0x84f0, 0xcb10, 0x4ebb, 0xa499, 0xd118, 0x1, 0x0);
        gbc.writeMem(0x7657, { 0x31, 0xd1, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x25d1);
        EXPECT(gbc.pc(), 0x765a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0082
        gbc.setState(0xec1d, 0xa6dc, 0x92d0, 0xb08e, 0x4aa7, 0x8bca, 0x1, 0x1);
        gbc.writeMem(0xec1d, { 0x31, 0xd8, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd8d8);
        EXPECT(gbc.pc(), 0xec20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec1d), 0x31);
        EXPECT(gbc.readMem(0xec1e), 0xd8);
        EXPECT(gbc.readMem(0xec1f), 0xd8);
        // 31 0083
        gbc.setState(0x161a, 0x1fec, 0xfe90, 0xdf3f, 0x904c, 0x88e5, 0x1, 0x1);
        gbc.writeMem(0x161a, { 0x31, 0xab, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x23ab);
        EXPECT(gbc.pc(), 0x161d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0085
        gbc.setState(0xe6ee, 0x46e, 0x29f0, 0xeda3, 0x60fb, 0x260, 0x1, 0x0);
        gbc.writeMem(0xe6ee, { 0x31, 0xec, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x23ec);
        EXPECT(gbc.pc(), 0xe6f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ee), 0x31);
        EXPECT(gbc.readMem(0xe6ef), 0xec);
        EXPECT(gbc.readMem(0xe6f0), 0x23);
        // 31 0086
        gbc.setState(0xe59a, 0xfda4, 0xfb50, 0x87a5, 0x9df9, 0x9e73, 0x0, 0x1);
        gbc.writeMem(0xe59a, { 0x31, 0x2, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6d02);
        EXPECT(gbc.pc(), 0xe59d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe59a), 0x31);
        EXPECT(gbc.readMem(0xe59b), 0x2);
        EXPECT(gbc.readMem(0xe59c), 0x6d);
        // 31 0087
        gbc.setState(0x7631, 0xf7b9, 0x5500, 0xcff1, 0x39f4, 0x57e, 0x0, 0x1);
        gbc.writeMem(0x7631, { 0x31, 0xa5, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x77a5);
        EXPECT(gbc.pc(), 0x7634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0088
        gbc.setState(0x7c8a, 0x4f72, 0x9b0, 0x370, 0xfbc0, 0x102b, 0x0, 0x1);
        gbc.writeMem(0x7c8a, { 0x31, 0x7e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x557e);
        EXPECT(gbc.pc(), 0x7c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0089
        gbc.setState(0x6dfe, 0xac06, 0x4090, 0xa3a3, 0x3cf5, 0x574b, 0x1, 0x0);
        gbc.writeMem(0x6dfe, { 0x31, 0x45, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xae45);
        EXPECT(gbc.pc(), 0x6e01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 008B
        gbc.setState(0xaaea, 0x3b51, 0x55f0, 0xfb1c, 0x8cf8, 0xc911, 0x0, 0x0);
        gbc.writeMem(0xaaea, { 0x31, 0x16, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xac16);
        EXPECT(gbc.pc(), 0xaaed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaea), 0x31);
        EXPECT(gbc.readMem(0xaaeb), 0x16);
        EXPECT(gbc.readMem(0xaaec), 0xac);
        // 31 008C
        gbc.setState(0x80c7, 0xad74, 0x50c0, 0xd021, 0x9db3, 0x45cd, 0x1, 0x0);
        gbc.writeMem(0x80c7, { 0x31, 0xeb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe2eb);
        EXPECT(gbc.pc(), 0x80ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c7), 0x31);
        EXPECT(gbc.readMem(0x80c8), 0xeb);
        EXPECT(gbc.readMem(0x80c9), 0xe2);
        // 31 008E
        gbc.setState(0x1db1, 0x9f27, 0x55e0, 0x52c0, 0x36fc, 0x2d11, 0x1, 0x0);
        gbc.writeMem(0x1db1, { 0x31, 0x83, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xee83);
        EXPECT(gbc.pc(), 0x1db4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 008F
        gbc.setState(0x5551, 0xb7f8, 0x1f20, 0x9b9d, 0xad4c, 0xd69a, 0x1, 0x1);
        gbc.writeMem(0x5551, { 0x31, 0xfa, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf9fa);
        EXPECT(gbc.pc(), 0x5554);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0090
        gbc.setState(0xb140, 0x9df3, 0x3ee0, 0x4ede, 0x7ec8, 0x6ac8, 0x0, 0x1);
        gbc.writeMem(0xb140, { 0x31, 0x2c, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x142c);
        EXPECT(gbc.pc(), 0xb143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb140), 0x31);
        EXPECT(gbc.readMem(0xb141), 0x2c);
        EXPECT(gbc.readMem(0xb142), 0x14);
        // 31 0091
        gbc.setState(0x1738, 0xfa02, 0xbac0, 0xf43f, 0x1fc5, 0x504d, 0x0, 0x0);
        gbc.writeMem(0x1738, { 0x31, 0xbd, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb7bd);
        EXPECT(gbc.pc(), 0x173b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0092
        gbc.setState(0x5b14, 0x78e2, 0x8bf0, 0x4b9e, 0x5695, 0x3410, 0x0, 0x0);
        gbc.writeMem(0x5b14, { 0x31, 0x44, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1044);
        EXPECT(gbc.pc(), 0x5b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0093
        gbc.setState(0x52f5, 0xdfa, 0x70c0, 0x15e4, 0x8d54, 0x8525, 0x1, 0x0);
        gbc.writeMem(0x52f5, { 0x31, 0x11, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1311);
        EXPECT(gbc.pc(), 0x52f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0094
        gbc.setState(0xd81, 0x7795, 0x1ce0, 0x20b8, 0x8bd6, 0x8422, 0x1, 0x1);
        gbc.writeMem(0xd81, { 0x31, 0x77, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa877);
        EXPECT(gbc.pc(), 0xd84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0095
        gbc.setState(0x8260, 0xfeb1, 0x3da0, 0x77, 0x3250, 0x6744, 0x1, 0x0);
        gbc.writeMem(0x8260, { 0x31, 0xad, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd5ad);
        EXPECT(gbc.pc(), 0x8263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8260), 0x31);
        EXPECT(gbc.readMem(0x8261), 0xad);
        EXPECT(gbc.readMem(0x8262), 0xd5);
        // 31 0096
        gbc.setState(0xcfed, 0x5cab, 0x8730, 0x8f99, 0x590b, 0x43a5, 0x0, 0x0);
        gbc.writeMem(0xcfed, { 0x31, 0xa5, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5ea5);
        EXPECT(gbc.pc(), 0xcff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfed), 0x31);
        EXPECT(gbc.readMem(0xcfee), 0xa5);
        EXPECT(gbc.readMem(0xcfef), 0x5e);
        // 31 0097
        gbc.setState(0x9cf7, 0xef69, 0x7b80, 0xc07f, 0xff20, 0xb85, 0x1, 0x1);
        gbc.writeMem(0x9cf7, { 0x31, 0x5f, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5f5f);
        EXPECT(gbc.pc(), 0x9cfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf7), 0x31);
        EXPECT(gbc.readMem(0x9cf8), 0x5f);
        EXPECT(gbc.readMem(0x9cf9), 0x5f);
        // 31 0098
        gbc.setState(0xd44b, 0xd28f, 0x9cc0, 0x9f5, 0x97d7, 0x2f12, 0x0, 0x0);
        gbc.writeMem(0xd44b, { 0x31, 0x56, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcf56);
        EXPECT(gbc.pc(), 0xd44e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd44b), 0x31);
        EXPECT(gbc.readMem(0xd44c), 0x56);
        EXPECT(gbc.readMem(0xd44d), 0xcf);
        // 31 0099
        gbc.setState(0x8b72, 0xd71c, 0xf710, 0x6671, 0xaa8, 0x2199, 0x0, 0x0);
        gbc.writeMem(0x8b72, { 0x31, 0xd3, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbfd3);
        EXPECT(gbc.pc(), 0x8b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b72), 0x31);
        EXPECT(gbc.readMem(0x8b73), 0xd3);
        EXPECT(gbc.readMem(0x8b74), 0xbf);
        // 31 009B
        gbc.setState(0xc75a, 0x1c38, 0x79c0, 0x54c0, 0x7e72, 0x2c23, 0x1, 0x0);
        gbc.writeMem(0xc75a, { 0x31, 0xda, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf3da);
        EXPECT(gbc.pc(), 0xc75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc75a), 0x31);
        EXPECT(gbc.readMem(0xc75b), 0xda);
        EXPECT(gbc.readMem(0xc75c), 0xf3);
        // 31 009C
        gbc.setState(0x755b, 0xc9d7, 0x6410, 0x75a1, 0x758e, 0x382a, 0x0, 0x1);
        gbc.writeMem(0x755b, { 0x31, 0x10, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4c10);
        EXPECT(gbc.pc(), 0x755e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 009D
        gbc.setState(0xeade, 0x95d9, 0xb5e0, 0x4a8e, 0x22a4, 0xe538, 0x1, 0x0);
        gbc.writeMem(0xeade, { 0x31, 0x92, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xde92);
        EXPECT(gbc.pc(), 0xeae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeade), 0x31);
        EXPECT(gbc.readMem(0xeadf), 0x92);
        EXPECT(gbc.readMem(0xeae0), 0xde);
        // 31 009E
        gbc.setState(0x1502, 0xde9b, 0xd730, 0xab1c, 0xad91, 0x9b08, 0x1, 0x1);
        gbc.writeMem(0x1502, { 0x31, 0xe6, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb8e6);
        EXPECT(gbc.pc(), 0x1505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 009F
        gbc.setState(0x9e7c, 0x3ae0, 0x9830, 0x2cfe, 0x2132, 0xb080, 0x0, 0x1);
        gbc.writeMem(0x9e7c, { 0x31, 0x28, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5228);
        EXPECT(gbc.pc(), 0x9e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e7c), 0x31);
        EXPECT(gbc.readMem(0x9e7d), 0x28);
        EXPECT(gbc.readMem(0x9e7e), 0x52);
        // 31 00A0
        gbc.setState(0xa199, 0x73d4, 0xf8e0, 0x24d6, 0x4d63, 0x251c, 0x1, 0x1);
        gbc.writeMem(0xa199, { 0x31, 0xf3, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x36f3);
        EXPECT(gbc.pc(), 0xa19c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa199), 0x31);
        EXPECT(gbc.readMem(0xa19a), 0xf3);
        EXPECT(gbc.readMem(0xa19b), 0x36);
        // 31 00A1
        gbc.setState(0xedb5, 0x206e, 0x7010, 0x93a4, 0x5eab, 0xee8d, 0x1, 0x0);
        gbc.writeMem(0xedb5, { 0x31, 0x9, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xce09);
        EXPECT(gbc.pc(), 0xedb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb5), 0x31);
        EXPECT(gbc.readMem(0xedb6), 0x9);
        EXPECT(gbc.readMem(0xedb7), 0xce);
        // 31 00A2
        gbc.setState(0x229f, 0x8c3b, 0x5ce0, 0x75d0, 0xd28b, 0xf572, 0x0, 0x1);
        gbc.writeMem(0x229f, { 0x31, 0xbe, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x74be);
        EXPECT(gbc.pc(), 0x22a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 00A3
        gbc.setState(0x5591, 0x3a2e, 0x2210, 0x68c2, 0x900b, 0x410f, 0x1, 0x1);
        gbc.writeMem(0x5591, { 0x31, 0xa2, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3da2);
        EXPECT(gbc.pc(), 0x5594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00A4
        gbc.setState(0xb871, 0x43b6, 0x2ba0, 0x6074, 0x9b9b, 0x32f1, 0x0, 0x0);
        gbc.writeMem(0xb871, { 0x31, 0x16, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3f16);
        EXPECT(gbc.pc(), 0xb874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb871), 0x31);
        EXPECT(gbc.readMem(0xb872), 0x16);
        EXPECT(gbc.readMem(0xb873), 0x3f);
        // 31 00A5
        gbc.setState(0x3ac9, 0x2213, 0x1370, 0xfb58, 0x868d, 0x42bb, 0x1, 0x0);
        gbc.writeMem(0x3ac9, { 0x31, 0x3d, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1b3d);
        EXPECT(gbc.pc(), 0x3acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 00A6
        gbc.setState(0x86d3, 0x7c0a, 0xfd20, 0x688e, 0x5a06, 0xd89f, 0x1, 0x1);
        gbc.writeMem(0x86d3, { 0x31, 0x78, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8578);
        EXPECT(gbc.pc(), 0x86d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d3), 0x31);
        EXPECT(gbc.readMem(0x86d4), 0x78);
        EXPECT(gbc.readMem(0x86d5), 0x85);
        // 31 00A7
        gbc.setState(0xe53, 0xf9b0, 0x7130, 0xc4f4, 0x12f6, 0xa04d, 0x0, 0x0);
        gbc.writeMem(0xe53, { 0x31, 0x16, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8816);
        EXPECT(gbc.pc(), 0xe56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 00A8
        gbc.setState(0x7b4, 0x8b72, 0xf900, 0x8c73, 0x9e76, 0x8148, 0x1, 0x0);
        gbc.writeMem(0x7b4, { 0x31, 0x1c, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xec1c);
        EXPECT(gbc.pc(), 0x7b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00A9
        gbc.setState(0x408c, 0x2b26, 0x2ed0, 0x69f, 0x241d, 0xc6ab, 0x0, 0x1);
        gbc.writeMem(0x408c, { 0x31, 0x8f, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd68f);
        EXPECT(gbc.pc(), 0x408f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00AA
        gbc.setState(0x2579, 0xd5d6, 0x9540, 0xb671, 0x3c65, 0x4408, 0x1, 0x0);
        gbc.writeMem(0x2579, { 0x31, 0xfb, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x85fb);
        EXPECT(gbc.pc(), 0x257c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00AB
        gbc.setState(0x246c, 0x7fab, 0x6330, 0xd84c, 0x5a20, 0xcc29, 0x0, 0x1);
        gbc.writeMem(0x246c, { 0x31, 0xab, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbfab);
        EXPECT(gbc.pc(), 0x246f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 00AC
        gbc.setState(0xe269, 0xf3d9, 0xf3b0, 0xcd39, 0x730b, 0xba3f, 0x0, 0x1);
        gbc.writeMem(0xe269, { 0x31, 0x6b, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3a6b);
        EXPECT(gbc.pc(), 0xe26c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe269), 0x31);
        EXPECT(gbc.readMem(0xe26a), 0x6b);
        EXPECT(gbc.readMem(0xe26b), 0x3a);
        // 31 00AD
        gbc.setState(0xd103, 0x84fe, 0x8c10, 0x44, 0xeaed, 0xb738, 0x1, 0x1);
        gbc.writeMem(0xd103, { 0x31, 0x4f, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5f4f);
        EXPECT(gbc.pc(), 0xd106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd103), 0x31);
        EXPECT(gbc.readMem(0xd104), 0x4f);
        EXPECT(gbc.readMem(0xd105), 0x5f);
        // 31 00AE
        gbc.setState(0xdfbd, 0xcb28, 0xc5a0, 0x1258, 0xbe89, 0x1b7e, 0x0, 0x1);
        gbc.writeMem(0xdfbd, { 0x31, 0xbc, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd7bc);
        EXPECT(gbc.pc(), 0xdfc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfbd), 0x31);
        EXPECT(gbc.readMem(0xdfbe), 0xbc);
        EXPECT(gbc.readMem(0xdfbf), 0xd7);
        // 31 00AF
        gbc.setState(0xc3f9, 0xcbcb, 0x9d30, 0x7275, 0xf0de, 0xfbf9, 0x1, 0x1);
        gbc.writeMem(0xc3f9, { 0x31, 0xd7, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xaed7);
        EXPECT(gbc.pc(), 0xc3fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f9), 0x31);
        EXPECT(gbc.readMem(0xc3fa), 0xd7);
        EXPECT(gbc.readMem(0xc3fb), 0xae);
        // 31 00B0
        gbc.setState(0xdfc, 0x8770, 0xefc0, 0xc002, 0x9c05, 0xab40, 0x1, 0x1);
        gbc.writeMem(0xdfc, { 0x31, 0x1a, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x631a);
        EXPECT(gbc.pc(), 0xdff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00B1
        gbc.setState(0x348f, 0xd00b, 0x4980, 0x217f, 0xfaa8, 0x128c, 0x0, 0x0);
        gbc.writeMem(0x348f, { 0x31, 0xa9, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xea9);
        EXPECT(gbc.pc(), 0x3492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00B2
        gbc.setState(0x2861, 0x5753, 0x16c0, 0x97dc, 0xd8c6, 0xb2af, 0x0, 0x0);
        gbc.writeMem(0x2861, { 0x31, 0xa0, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xffa0);
        EXPECT(gbc.pc(), 0x2864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00B4
        gbc.setState(0x7a4b, 0xaeb, 0x90d0, 0xbb4d, 0x51fa, 0xcf74, 0x1, 0x1);
        gbc.writeMem(0x7a4b, { 0x31, 0xf4, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2af4);
        EXPECT(gbc.pc(), 0x7a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00B5
        gbc.setState(0x377b, 0x14d0, 0x1b80, 0x8e85, 0x5439, 0xa111, 0x0, 0x0);
        gbc.writeMem(0x377b, { 0x31, 0xd, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x90d);
        EXPECT(gbc.pc(), 0x377e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00B6
        gbc.setState(0x65a8, 0xd884, 0x4fa0, 0x76fb, 0x32ba, 0x545c, 0x1, 0x0);
        gbc.writeMem(0x65a8, { 0x31, 0xce, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x41ce);
        EXPECT(gbc.pc(), 0x65ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 00B7
        gbc.setState(0x6469, 0x62c5, 0xfa80, 0x9c4f, 0xe95, 0x8957, 0x1, 0x1);
        gbc.writeMem(0x6469, { 0x31, 0x25, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xee25);
        EXPECT(gbc.pc(), 0x646c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00B8
        gbc.setState(0x49a9, 0xa347, 0x4cd0, 0x77b, 0x43dc, 0xc35a, 0x0, 0x0);
        gbc.writeMem(0x49a9, { 0x31, 0xf9, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2df9);
        EXPECT(gbc.pc(), 0x49ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00B9
        gbc.setState(0xc6e4, 0x90e7, 0x7090, 0xa6c3, 0xcdc3, 0x84b7, 0x0, 0x1);
        gbc.writeMem(0xc6e4, { 0x31, 0x92, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5a92);
        EXPECT(gbc.pc(), 0xc6e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e4), 0x31);
        EXPECT(gbc.readMem(0xc6e5), 0x92);
        EXPECT(gbc.readMem(0xc6e6), 0x5a);
        // 31 00BA
        gbc.setState(0x6f59, 0x12d0, 0x31d0, 0xe61e, 0x9208, 0xf654, 0x0, 0x1);
        gbc.writeMem(0x6f59, { 0x31, 0x18, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xda18);
        EXPECT(gbc.pc(), 0x6f5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00BB
        gbc.setState(0x4ff5, 0x2ed3, 0xd8d0, 0x8079, 0x8d7c, 0xaa0f, 0x1, 0x0);
        gbc.writeMem(0x4ff5, { 0x31, 0xa0, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xaaa0);
        EXPECT(gbc.pc(), 0x4ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00BC
        gbc.setState(0x6c25, 0x15cb, 0xf880, 0x1249, 0x261f, 0xffc8, 0x1, 0x0);
        gbc.writeMem(0x6c25, { 0x31, 0xb8, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xbab8);
        EXPECT(gbc.pc(), 0x6c28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00BD
        gbc.setState(0x90c6, 0x2099, 0x6820, 0x60e7, 0xf0c4, 0x9df8, 0x1, 0x0);
        gbc.writeMem(0x90c6, { 0x31, 0xaf, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x23af);
        EXPECT(gbc.pc(), 0x90c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c6), 0x31);
        EXPECT(gbc.readMem(0x90c7), 0xaf);
        EXPECT(gbc.readMem(0x90c8), 0x23);
        // 31 00BF
        gbc.setState(0x890b, 0x8953, 0x19f0, 0xee53, 0xbd49, 0x6af1, 0x1, 0x1);
        gbc.writeMem(0x890b, { 0x31, 0xc7, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa2c7);
        EXPECT(gbc.pc(), 0x890e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x890b), 0x31);
        EXPECT(gbc.readMem(0x890c), 0xc7);
        EXPECT(gbc.readMem(0x890d), 0xa2);
        // 31 00C0
        gbc.setState(0x4fae, 0x393f, 0xd880, 0x4bb2, 0x1b2, 0x977e, 0x0, 0x1);
        gbc.writeMem(0x4fae, { 0x31, 0x23, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9123);
        EXPECT(gbc.pc(), 0x4fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00C1
        gbc.setState(0x1040, 0xc906, 0xd540, 0x873a, 0xe912, 0x978f, 0x0, 0x1);
        gbc.writeMem(0x1040, { 0x31, 0xba, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x21ba);
        EXPECT(gbc.pc(), 0x1043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00C2
        gbc.setState(0x1d12, 0x1ad5, 0x7760, 0xb7a5, 0xb0c7, 0x885f, 0x0, 0x0);
        gbc.writeMem(0x1d12, { 0x31, 0x1d, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x161d);
        EXPECT(gbc.pc(), 0x1d15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 00C3
        gbc.setState(0x736d, 0xe790, 0x3cf0, 0x8bdc, 0x2a0a, 0xeaed, 0x0, 0x0);
        gbc.writeMem(0x736d, { 0x31, 0x5, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf305);
        EXPECT(gbc.pc(), 0x7370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 00C4
        gbc.setState(0x56ed, 0xdf67, 0x53c0, 0x16b8, 0x1be, 0x8345, 0x0, 0x0);
        gbc.writeMem(0x56ed, { 0x31, 0xf1, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x47f1);
        EXPECT(gbc.pc(), 0x56f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00C5
        gbc.setState(0x6f76, 0x9943, 0x30a0, 0x2872, 0xc223, 0x37df, 0x0, 0x0);
        gbc.writeMem(0x6f76, { 0x31, 0x1e, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x141e);
        EXPECT(gbc.pc(), 0x6f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 00C6
        gbc.setState(0x2ce, 0xafae, 0x3100, 0xa61, 0xbf74, 0x5fc4, 0x1, 0x0);
        gbc.writeMem(0x2ce, { 0x31, 0xe1, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9ee1);
        EXPECT(gbc.pc(), 0x2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00C8
        gbc.setState(0x2340, 0xb65c, 0x550, 0x9e66, 0x35c7, 0x96df, 0x0, 0x0);
        gbc.writeMem(0x2340, { 0x31, 0xd1, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x23d1);
        EXPECT(gbc.pc(), 0x2343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00C9
        gbc.setState(0xb8b8, 0x157f, 0x3db0, 0xb289, 0x8497, 0xe00a, 0x0, 0x0);
        gbc.writeMem(0xb8b8, { 0x31, 0xdb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdcdb);
        EXPECT(gbc.pc(), 0xb8bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b8), 0x31);
        EXPECT(gbc.readMem(0xb8b9), 0xdb);
        EXPECT(gbc.readMem(0xb8ba), 0xdc);
        // 31 00CA
        gbc.setState(0x4d3b, 0xc307, 0xbea0, 0x9aba, 0xd1b1, 0xcb17, 0x0, 0x0);
        gbc.writeMem(0x4d3b, { 0x31, 0xdf, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3ddf);
        EXPECT(gbc.pc(), 0x4d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 00CB
        gbc.setState(0x8b76, 0x28fe, 0xd410, 0x7a4f, 0x5627, 0x4f5f, 0x0, 0x0);
        gbc.writeMem(0x8b76, { 0x31, 0xd9, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x57d9);
        EXPECT(gbc.pc(), 0x8b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b76), 0x31);
        EXPECT(gbc.readMem(0x8b77), 0xd9);
        EXPECT(gbc.readMem(0x8b78), 0x57);
        // 31 00CC
        gbc.setState(0x219d, 0x9312, 0xf10, 0x8c48, 0x5911, 0x7fe7, 0x0, 0x1);
        gbc.writeMem(0x219d, { 0x31, 0x5, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe05);
        EXPECT(gbc.pc(), 0x21a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00CE
        gbc.setState(0xabc2, 0x730e, 0x7440, 0x1163, 0xa0b4, 0x31ed, 0x1, 0x0);
        gbc.writeMem(0xabc2, { 0x31, 0x6f, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe06f);
        EXPECT(gbc.pc(), 0xabc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc2), 0x31);
        EXPECT(gbc.readMem(0xabc3), 0x6f);
        EXPECT(gbc.readMem(0xabc4), 0xe0);
        // 31 00CF
        gbc.setState(0xa76b, 0x341b, 0xb4b0, 0xa8e2, 0xc407, 0x7308, 0x0, 0x0);
        gbc.writeMem(0xa76b, { 0x31, 0xea, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2cea);
        EXPECT(gbc.pc(), 0xa76e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa76b), 0x31);
        EXPECT(gbc.readMem(0xa76c), 0xea);
        EXPECT(gbc.readMem(0xa76d), 0x2c);
        // 31 00D0
        gbc.setState(0xd299, 0x72d9, 0x1f30, 0x756f, 0x9552, 0x2f6a, 0x1, 0x1);
        gbc.writeMem(0xd299, { 0x31, 0x84, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xaf84);
        EXPECT(gbc.pc(), 0xd29c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd299), 0x31);
        EXPECT(gbc.readMem(0xd29a), 0x84);
        EXPECT(gbc.readMem(0xd29b), 0xaf);
        // 31 00D1
        gbc.setState(0x1671, 0x5865, 0xd190, 0x5d0d, 0x6dc8, 0x3df7, 0x0, 0x0);
        gbc.writeMem(0x1671, { 0x31, 0xf4, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x93f4);
        EXPECT(gbc.pc(), 0x1674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00D2
        gbc.setState(0xc739, 0x55c9, 0xfff0, 0xc18e, 0xae49, 0xf9e7, 0x0, 0x1);
        gbc.writeMem(0xc739, { 0x31, 0x92, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7f92);
        EXPECT(gbc.pc(), 0xc73c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc739), 0x31);
        EXPECT(gbc.readMem(0xc73a), 0x92);
        EXPECT(gbc.readMem(0xc73b), 0x7f);
        // 31 00D3
        gbc.setState(0xc5b0, 0x44c9, 0xb0b0, 0xc7e9, 0x885a, 0xc2d6, 0x1, 0x0);
        gbc.writeMem(0xc5b0, { 0x31, 0xe2, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd8e2);
        EXPECT(gbc.pc(), 0xc5b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b0), 0x31);
        EXPECT(gbc.readMem(0xc5b1), 0xe2);
        EXPECT(gbc.readMem(0xc5b2), 0xd8);
        // 31 00D4
        gbc.setState(0xd4bd, 0x821f, 0xf0f0, 0x8644, 0x9d2a, 0xbcb8, 0x0, 0x0);
        gbc.writeMem(0xd4bd, { 0x31, 0xd3, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd1d3);
        EXPECT(gbc.pc(), 0xd4c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4bd), 0x31);
        EXPECT(gbc.readMem(0xd4be), 0xd3);
        EXPECT(gbc.readMem(0xd4bf), 0xd1);
        // 31 00D5
        gbc.setState(0xc6fc, 0xaae7, 0x2310, 0xfd27, 0x5ac1, 0x65e9, 0x0, 0x0);
        gbc.writeMem(0xc6fc, { 0x31, 0x21, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8021);
        EXPECT(gbc.pc(), 0xc6ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6fc), 0x31);
        EXPECT(gbc.readMem(0xc6fd), 0x21);
        EXPECT(gbc.readMem(0xc6fe), 0x80);
        // 31 00D6
        gbc.setState(0xd4ab, 0xbcc2, 0x9fc0, 0x2dc2, 0xf02a, 0xd4ef, 0x0, 0x0);
        gbc.writeMem(0xd4ab, { 0x31, 0x6c, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2f6c);
        EXPECT(gbc.pc(), 0xd4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ab), 0x31);
        EXPECT(gbc.readMem(0xd4ac), 0x6c);
        EXPECT(gbc.readMem(0xd4ad), 0x2f);
        // 31 00D7
        gbc.setState(0xa516, 0xded9, 0x21c0, 0x44a1, 0x2ae6, 0x9e40, 0x0, 0x0);
        gbc.writeMem(0xa516, { 0x31, 0x36, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd136);
        EXPECT(gbc.pc(), 0xa519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa516), 0x31);
        EXPECT(gbc.readMem(0xa517), 0x36);
        EXPECT(gbc.readMem(0xa518), 0xd1);
        // 31 00D8
        gbc.setState(0x2ccc, 0x83a8, 0x5260, 0x1ee6, 0x96f3, 0x748, 0x0, 0x0);
        gbc.writeMem(0x2ccc, { 0x31, 0xb5, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5b5);
        EXPECT(gbc.pc(), 0x2ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 00D9
        gbc.setState(0xa683, 0xb58e, 0x1a60, 0xf33c, 0x6897, 0xd404, 0x1, 0x1);
        gbc.writeMem(0xa683, { 0x31, 0xb9, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe5b9);
        EXPECT(gbc.pc(), 0xa686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa683), 0x31);
        EXPECT(gbc.readMem(0xa684), 0xb9);
        EXPECT(gbc.readMem(0xa685), 0xe5);
        // 31 00DB
        gbc.setState(0x61e3, 0xafec, 0x6050, 0xfb25, 0x7f68, 0x24b5, 0x1, 0x0);
        gbc.writeMem(0x61e3, { 0x31, 0x8b, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xdc8b);
        EXPECT(gbc.pc(), 0x61e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00DC
        gbc.setState(0x2cac, 0xfd55, 0xd600, 0x6a04, 0xf2e5, 0x494f, 0x1, 0x1);
        gbc.writeMem(0x2cac, { 0x31, 0xed, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x47ed);
        EXPECT(gbc.pc(), 0x2caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00DD
        gbc.setState(0x661d, 0x150, 0xdd60, 0xf605, 0x33e4, 0x49d8, 0x0, 0x1);
        gbc.writeMem(0x661d, { 0x31, 0x55, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3855);
        EXPECT(gbc.pc(), 0x6620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 00DE
        gbc.setState(0xda0, 0x7fe4, 0x210, 0x713d, 0xa2e8, 0xcf3f, 0x1, 0x1);
        gbc.writeMem(0xda0, { 0x31, 0x6e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x776e);
        EXPECT(gbc.pc(), 0xda3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00DF
        gbc.setState(0xa6cc, 0xb75e, 0x4a0, 0x9303, 0xef62, 0x6684, 0x0, 0x1);
        gbc.writeMem(0xa6cc, { 0x31, 0x68, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6f68);
        EXPECT(gbc.pc(), 0xa6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6cc), 0x31);
        EXPECT(gbc.readMem(0xa6cd), 0x68);
        EXPECT(gbc.readMem(0xa6ce), 0x6f);
        // 31 00E0
        gbc.setState(0x2c52, 0x5698, 0x8120, 0xe9fd, 0x4b95, 0xfb60, 0x1, 0x1);
        gbc.writeMem(0x2c52, { 0x31, 0x3b, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa43b);
        EXPECT(gbc.pc(), 0x2c55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 00E1
        gbc.setState(0xbd5b, 0xaad7, 0xc780, 0x2ede, 0x2021, 0x3743, 0x1, 0x0);
        gbc.writeMem(0xbd5b, { 0x31, 0x82, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7882);
        EXPECT(gbc.pc(), 0xbd5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd5b), 0x31);
        EXPECT(gbc.readMem(0xbd5c), 0x82);
        EXPECT(gbc.readMem(0xbd5d), 0x78);
        // 31 00E2
        gbc.setState(0xb35c, 0x1f58, 0xbda0, 0xdefe, 0x2020, 0x85d6, 0x0, 0x1);
        gbc.writeMem(0xb35c, { 0x31, 0x91, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd491);
        EXPECT(gbc.pc(), 0xb35f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb35c), 0x31);
        EXPECT(gbc.readMem(0xb35d), 0x91);
        EXPECT(gbc.readMem(0xb35e), 0xd4);
        // 31 00E3
        gbc.setState(0x9b89, 0xcbb5, 0x2710, 0xad2f, 0xc1bf, 0x7ed6, 0x1, 0x1);
        gbc.writeMem(0x9b89, { 0x31, 0xe8, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xace8);
        EXPECT(gbc.pc(), 0x9b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b89), 0x31);
        EXPECT(gbc.readMem(0x9b8a), 0xe8);
        EXPECT(gbc.readMem(0x9b8b), 0xac);
        // 31 00E4
        gbc.setState(0x4b5b, 0x1148, 0xe10, 0x91ad, 0xc66d, 0xabae, 0x0, 0x1);
        gbc.writeMem(0x4b5b, { 0x31, 0xbf, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6bbf);
        EXPECT(gbc.pc(), 0x4b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00E5
        gbc.setState(0x657d, 0x4bf8, 0x2b10, 0x60fd, 0x2ea8, 0xfbb1, 0x1, 0x0);
        gbc.writeMem(0x657d, { 0x31, 0xd8, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd4d8);
        EXPECT(gbc.pc(), 0x6580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00E6
        gbc.setState(0xe55a, 0xa545, 0x6240, 0x6200, 0x3db2, 0x6a3a, 0x0, 0x1);
        gbc.writeMem(0xe55a, { 0x31, 0xbc, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8dbc);
        EXPECT(gbc.pc(), 0xe55d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55a), 0x31);
        EXPECT(gbc.readMem(0xe55b), 0xbc);
        EXPECT(gbc.readMem(0xe55c), 0x8d);
        // 31 00E7
        gbc.setState(0xb2e6, 0xe0c7, 0xcf20, 0x54f2, 0x5d91, 0x20a0, 0x0, 0x0);
        gbc.writeMem(0xb2e6, { 0x31, 0x94, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2694);
        EXPECT(gbc.pc(), 0xb2e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e6), 0x31);
        EXPECT(gbc.readMem(0xb2e7), 0x94);
        EXPECT(gbc.readMem(0xb2e8), 0x26);
        // 31 00E8
        gbc.setState(0x9319, 0x362a, 0xa0, 0xdfe6, 0xd077, 0x7dde, 0x0, 0x1);
        gbc.writeMem(0x9319, { 0x31, 0x9, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6209);
        EXPECT(gbc.pc(), 0x931c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9319), 0x31);
        EXPECT(gbc.readMem(0x931a), 0x9);
        EXPECT(gbc.readMem(0x931b), 0x62);
        // 31 00E9
        gbc.setState(0x6662, 0x6c38, 0x49f0, 0x6ac6, 0xa4c0, 0x7683, 0x1, 0x0);
        gbc.writeMem(0x6662, { 0x31, 0xa, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb40a);
        EXPECT(gbc.pc(), 0x6665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 00EA
        gbc.setState(0x9d37, 0x846c, 0xe050, 0x2c6d, 0xc6de, 0xc23a, 0x0, 0x0);
        gbc.writeMem(0x9d37, { 0x31, 0xd6, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd8d6);
        EXPECT(gbc.pc(), 0x9d3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d37), 0x31);
        EXPECT(gbc.readMem(0x9d38), 0xd6);
        EXPECT(gbc.readMem(0x9d39), 0xd8);
        // 31 00EB
        gbc.setState(0x73f2, 0x5cd7, 0xc930, 0x8865, 0x57d1, 0x5ad, 0x0, 0x0);
        gbc.writeMem(0x73f2, { 0x31, 0x10, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1d10);
        EXPECT(gbc.pc(), 0x73f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 00EC
        gbc.setState(0x6b2b, 0xee89, 0xbc80, 0xaca5, 0x7b28, 0xf066, 0x0, 0x0);
        gbc.writeMem(0x6b2b, { 0x31, 0xb8, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x45b8);
        EXPECT(gbc.pc(), 0x6b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00ED
        gbc.setState(0xe4e9, 0x4fc0, 0xd9a0, 0x69db, 0xa1fc, 0xdd4a, 0x0, 0x1);
        gbc.writeMem(0xe4e9, { 0x31, 0xbf, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1bbf);
        EXPECT(gbc.pc(), 0xe4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e9), 0x31);
        EXPECT(gbc.readMem(0xe4ea), 0xbf);
        EXPECT(gbc.readMem(0xe4eb), 0x1b);
        // 31 00EE
        gbc.setState(0x7741, 0x782f, 0x3cf0, 0xa8eb, 0xf6af, 0x98aa, 0x0, 0x1);
        gbc.writeMem(0x7741, { 0x31, 0x2e, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x12e);
        EXPECT(gbc.pc(), 0x7744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 00EF
        gbc.setState(0xd081, 0xc927, 0x9ea0, 0x88e, 0x3553, 0x36bc, 0x0, 0x0);
        gbc.writeMem(0xd081, { 0x31, 0x88, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3588);
        EXPECT(gbc.pc(), 0xd084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd081), 0x31);
        EXPECT(gbc.readMem(0xd082), 0x88);
        EXPECT(gbc.readMem(0xd083), 0x35);
        // 31 00F0
        gbc.setState(0xaf9b, 0x9e25, 0x4120, 0x9c9d, 0xa977, 0x6bee, 0x1, 0x1);
        gbc.writeMem(0xaf9b, { 0x31, 0x66, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7c66);
        EXPECT(gbc.pc(), 0xaf9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf9b), 0x31);
        EXPECT(gbc.readMem(0xaf9c), 0x66);
        EXPECT(gbc.readMem(0xaf9d), 0x7c);
        // 31 00F1
        gbc.setState(0x21b7, 0xd61d, 0x9f50, 0xef52, 0x211f, 0xb568, 0x0, 0x1);
        gbc.writeMem(0x21b7, { 0x31, 0xb5, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x88b5);
        EXPECT(gbc.pc(), 0x21ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00F2
        gbc.setState(0x1862, 0x7159, 0x4170, 0x7dbf, 0x1a15, 0xd197, 0x0, 0x0);
        gbc.writeMem(0x1862, { 0x31, 0xd4, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7d4);
        EXPECT(gbc.pc(), 0x1865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 00F3
        gbc.setState(0xeb77, 0xf640, 0x3d90, 0xaf2b, 0xfca3, 0x36c7, 0x0, 0x0);
        gbc.writeMem(0xeb77, { 0x31, 0x74, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfe74);
        EXPECT(gbc.pc(), 0xeb7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb77), 0x31);
        EXPECT(gbc.readMem(0xeb78), 0x74);
        EXPECT(gbc.readMem(0xeb79), 0xfe);
        // 31 00F4
        gbc.setState(0x3f83, 0xb481, 0xded0, 0x40b9, 0x3073, 0x4864, 0x1, 0x0);
        gbc.writeMem(0x3f83, { 0x31, 0xc4, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x64c4);
        EXPECT(gbc.pc(), 0x3f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00F5
        gbc.setState(0x9f74, 0xc63a, 0x420, 0x33db, 0xf9da, 0x169b, 0x1, 0x1);
        gbc.writeMem(0x9f74, { 0x31, 0x3c, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7c3c);
        EXPECT(gbc.pc(), 0x9f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f74), 0x31);
        EXPECT(gbc.readMem(0x9f75), 0x3c);
        EXPECT(gbc.readMem(0x9f76), 0x7c);
        // 31 00F6
        gbc.setState(0x3054, 0x8ae9, 0xc430, 0xef85, 0x8c44, 0xf0a, 0x0, 0x0);
        gbc.writeMem(0x3054, { 0x31, 0xd9, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3cd9);
        EXPECT(gbc.pc(), 0x3057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 00F7
        gbc.setState(0x8aeb, 0xd903, 0x6990, 0x5116, 0x2eea, 0xf460, 0x0, 0x0);
        gbc.writeMem(0x8aeb, { 0x31, 0x97, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9697);
        EXPECT(gbc.pc(), 0x8aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aeb), 0x31);
        EXPECT(gbc.readMem(0x8aec), 0x97);
        EXPECT(gbc.readMem(0x8aed), 0x96);
        // 31 00F8
        gbc.setState(0xecbe, 0x1288, 0xdb70, 0xc1e7, 0x7b03, 0xe7ab, 0x0, 0x1);
        gbc.writeMem(0xecbe, { 0x31, 0x66, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe966);
        EXPECT(gbc.pc(), 0xecc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecbe), 0x31);
        EXPECT(gbc.readMem(0xecbf), 0x66);
        EXPECT(gbc.readMem(0xecc0), 0xe9);
        // 31 00F9
        gbc.setState(0x4d93, 0xf76, 0x49b0, 0xbf59, 0x3513, 0xf3d3, 0x1, 0x0);
        gbc.writeMem(0x4d93, { 0x31, 0x88, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbb88);
        EXPECT(gbc.pc(), 0x4d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 00FA
        gbc.setState(0x8770, 0x950a, 0xc3d0, 0x7215, 0xec48, 0xdb24, 0x1, 0x0);
        gbc.writeMem(0x8770, { 0x31, 0xf5, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbf5);
        EXPECT(gbc.pc(), 0x8773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8770), 0x31);
        EXPECT(gbc.readMem(0x8771), 0xf5);
        EXPECT(gbc.readMem(0x8772), 0xb);
        // 31 00FB
        gbc.setState(0x74a, 0xba8, 0xd200, 0xb8c7, 0x924a, 0x60b1, 0x1, 0x0);
        gbc.writeMem(0x74a, { 0x31, 0xbd, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xadbd);
        EXPECT(gbc.pc(), 0x74d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 00FC
        gbc.setState(0x6e5c, 0xe3fa, 0xb290, 0x3cd3, 0x80b2, 0xb9b5, 0x0, 0x1);
        gbc.writeMem(0x6e5c, { 0x31, 0x7e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb27e);
        EXPECT(gbc.pc(), 0x6e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 00FD
        gbc.setState(0xe704, 0x6c72, 0x8c90, 0xfa7e, 0x5322, 0x8aee, 0x0, 0x1);
        gbc.writeMem(0xe704, { 0x31, 0xf5, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd7f5);
        EXPECT(gbc.pc(), 0xe707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe704), 0x31);
        EXPECT(gbc.readMem(0xe705), 0xf5);
        EXPECT(gbc.readMem(0xe706), 0xd7);
        // 31 00FE
        gbc.setState(0xd4f7, 0xf980, 0xda20, 0x381b, 0xc931, 0x60a0, 0x0, 0x0);
        gbc.writeMem(0xd4f7, { 0x31, 0x90, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1790);
        EXPECT(gbc.pc(), 0xd4fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f7), 0x31);
        EXPECT(gbc.readMem(0xd4f8), 0x90);
        EXPECT(gbc.readMem(0xd4f9), 0x17);
        // 31 00FF
        gbc.setState(0x1b95, 0x8ea3, 0x2e00, 0xeb31, 0x5bc1, 0x8060, 0x0, 0x1);
        gbc.writeMem(0x1b95, { 0x31, 0x63, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd263);
        EXPECT(gbc.pc(), 0x1b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0100
        gbc.setState(0x214b, 0xd7ca, 0x4c80, 0xf969, 0xc9fb, 0x6d76, 0x1, 0x1);
        gbc.writeMem(0x214b, { 0x31, 0xde, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd2de);
        EXPECT(gbc.pc(), 0x214e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0101
        gbc.setState(0x4bb8, 0xbf08, 0xe7d0, 0x1d36, 0xc399, 0xc64e, 0x1, 0x1);
        gbc.writeMem(0x4bb8, { 0x31, 0x15, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x115);
        EXPECT(gbc.pc(), 0x4bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0103
        gbc.setState(0x114a, 0xfd08, 0x4660, 0xd5db, 0xa723, 0xe502, 0x1, 0x0);
        gbc.writeMem(0x114a, { 0x31, 0x9a, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbe9a);
        EXPECT(gbc.pc(), 0x114d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0104
        gbc.setState(0xbd91, 0xfe6c, 0x3940, 0xf4c6, 0x344c, 0xab77, 0x1, 0x0);
        gbc.writeMem(0xbd91, { 0x31, 0xa4, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x22a4);
        EXPECT(gbc.pc(), 0xbd94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd91), 0x31);
        EXPECT(gbc.readMem(0xbd92), 0xa4);
        EXPECT(gbc.readMem(0xbd93), 0x22);
        // 31 0105
        gbc.setState(0xd58e, 0x1a08, 0xe1a0, 0xaf12, 0x2f53, 0x63ec, 0x0, 0x1);
        gbc.writeMem(0xd58e, { 0x31, 0x98, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb798);
        EXPECT(gbc.pc(), 0xd591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd58e), 0x31);
        EXPECT(gbc.readMem(0xd58f), 0x98);
        EXPECT(gbc.readMem(0xd590), 0xb7);
        // 31 0106
        gbc.setState(0x9d80, 0x55b2, 0xb230, 0x3e58, 0x381f, 0x419, 0x1, 0x0);
        gbc.writeMem(0x9d80, { 0x31, 0x1, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5b01);
        EXPECT(gbc.pc(), 0x9d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d80), 0x31);
        EXPECT(gbc.readMem(0x9d81), 0x1);
        EXPECT(gbc.readMem(0x9d82), 0x5b);
        // 31 0107
        gbc.setState(0x3db6, 0x978, 0xab60, 0x506a, 0xe5c6, 0xf8a0, 0x1, 0x0);
        gbc.writeMem(0x3db6, { 0x31, 0xdf, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4bdf);
        EXPECT(gbc.pc(), 0x3db9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0108
        gbc.setState(0x7024, 0x6cc2, 0xfaa0, 0x3d32, 0xdaab, 0xd730, 0x1, 0x0);
        gbc.writeMem(0x7024, { 0x31, 0xb8, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2b8);
        EXPECT(gbc.pc(), 0x7027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0109
        gbc.setState(0x45c9, 0xa361, 0x930, 0xfdf9, 0x74ca, 0xd021, 0x1, 0x0);
        gbc.writeMem(0x45c9, { 0x31, 0xfd, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x71fd);
        EXPECT(gbc.pc(), 0x45cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 010A
        gbc.setState(0x7743, 0x8691, 0xcd10, 0x7914, 0x5c4d, 0xe2ba, 0x0, 0x0);
        gbc.writeMem(0x7743, { 0x31, 0x11, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd511);
        EXPECT(gbc.pc(), 0x7746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 010B
        gbc.setState(0x73f4, 0xde87, 0x68f0, 0x6e7d, 0xc01f, 0x6ac4, 0x0, 0x1);
        gbc.writeMem(0x73f4, { 0x31, 0xce, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7dce);
        EXPECT(gbc.pc(), 0x73f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 010C
        gbc.setState(0xb739, 0x84ca, 0x87f0, 0x3768, 0x44, 0xf99d, 0x1, 0x0);
        gbc.writeMem(0xb739, { 0x31, 0x22, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8822);
        EXPECT(gbc.pc(), 0xb73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb739), 0x31);
        EXPECT(gbc.readMem(0xb73a), 0x22);
        EXPECT(gbc.readMem(0xb73b), 0x88);
        // 31 010D
        gbc.setState(0x6366, 0xe461, 0x8cc0, 0x8486, 0x90dd, 0x12f4, 0x0, 0x0);
        gbc.writeMem(0x6366, { 0x31, 0x6c, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6f6c);
        EXPECT(gbc.pc(), 0x6369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 010E
        gbc.setState(0x214f, 0x9b1c, 0x530, 0x14e7, 0x4a89, 0xaef7, 0x1, 0x0);
        gbc.writeMem(0x214f, { 0x31, 0x71, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4471);
        EXPECT(gbc.pc(), 0x2152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 010F
        gbc.setState(0x2e9, 0xe86a, 0xe160, 0x5e61, 0x972b, 0xfbfd, 0x1, 0x0);
        gbc.writeMem(0x2e9, { 0x31, 0xf5, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf5f5);
        EXPECT(gbc.pc(), 0x2ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0110
        gbc.setState(0xe0d6, 0xf80e, 0xd0b0, 0xe5e4, 0xdecd, 0xa5e8, 0x1, 0x1);
        gbc.writeMem(0xe0d6, { 0x31, 0x0, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd600);
        EXPECT(gbc.pc(), 0xe0d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0d6), 0x31);
        EXPECT(gbc.readMem(0xe0d7), 0x0);
        EXPECT(gbc.readMem(0xe0d8), 0xd6);
        // 31 0111
        gbc.setState(0x59bf, 0x3054, 0xf240, 0xd0dd, 0xfdcc, 0x894b, 0x1, 0x0);
        gbc.writeMem(0x59bf, { 0x31, 0x81, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6281);
        EXPECT(gbc.pc(), 0x59c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0112
        gbc.setState(0x29c, 0x117, 0xc750, 0xfaf5, 0xd11b, 0x7a52, 0x1, 0x1);
        gbc.writeMem(0x29c, { 0x31, 0xcd, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x66cd);
        EXPECT(gbc.pc(), 0x29f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0113
        gbc.setState(0xb833, 0xabe3, 0x8720, 0x4795, 0x6250, 0x159b, 0x0, 0x1);
        gbc.writeMem(0xb833, { 0x31, 0x33, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf033);
        EXPECT(gbc.pc(), 0xb836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb833), 0x31);
        EXPECT(gbc.readMem(0xb834), 0x33);
        EXPECT(gbc.readMem(0xb835), 0xf0);
        // 31 0114
        gbc.setState(0xed09, 0x5fe5, 0x14b0, 0x6580, 0x8a47, 0x49a0, 0x1, 0x1);
        gbc.writeMem(0xed09, { 0x31, 0x4e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x414e);
        EXPECT(gbc.pc(), 0xed0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed09), 0x31);
        EXPECT(gbc.readMem(0xed0a), 0x4e);
        EXPECT(gbc.readMem(0xed0b), 0x41);
        // 31 0115
        gbc.setState(0x61ab, 0x5b3b, 0xd200, 0xed6c, 0x74c4, 0xaa38, 0x1, 0x0);
        gbc.writeMem(0x61ab, { 0x31, 0x9e, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x739e);
        EXPECT(gbc.pc(), 0x61ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0116
        gbc.setState(0xdd4c, 0xef3d, 0xbd20, 0xd7a7, 0x1914, 0x4ddd, 0x1, 0x0);
        gbc.writeMem(0xdd4c, { 0x31, 0x4, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa04);
        EXPECT(gbc.pc(), 0xdd4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd4c), 0x31);
        EXPECT(gbc.readMem(0xdd4d), 0x4);
        EXPECT(gbc.readMem(0xdd4e), 0xa);
        // 31 0117
        gbc.setState(0xe9a3, 0xb3b5, 0x8800, 0x66ca, 0x1979, 0x3d38, 0x1, 0x1);
        gbc.writeMem(0xe9a3, { 0x31, 0x3c, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x633c);
        EXPECT(gbc.pc(), 0xe9a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a3), 0x31);
        EXPECT(gbc.readMem(0xe9a4), 0x3c);
        EXPECT(gbc.readMem(0xe9a5), 0x63);
        // 31 0118
        gbc.setState(0xeeb7, 0x6c9, 0x8bc0, 0x426c, 0x9de, 0x7f9, 0x0, 0x0);
        gbc.writeMem(0xeeb7, { 0x31, 0xa0, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x60a0);
        EXPECT(gbc.pc(), 0xeeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb7), 0x31);
        EXPECT(gbc.readMem(0xeeb8), 0xa0);
        EXPECT(gbc.readMem(0xeeb9), 0x60);
        // 31 0119
        gbc.setState(0x8640, 0xe92f, 0x4dc0, 0xc031, 0x7c73, 0xc310, 0x0, 0x0);
        gbc.writeMem(0x8640, { 0x31, 0xf2, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa2f2);
        EXPECT(gbc.pc(), 0x8643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8640), 0x31);
        EXPECT(gbc.readMem(0x8641), 0xf2);
        EXPECT(gbc.readMem(0x8642), 0xa2);
        // 31 011A
        gbc.setState(0xa620, 0x2360, 0x2df0, 0xd44e, 0x15a8, 0xd572, 0x0, 0x0);
        gbc.writeMem(0xa620, { 0x31, 0xc, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc60c);
        EXPECT(gbc.pc(), 0xa623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa620), 0x31);
        EXPECT(gbc.readMem(0xa621), 0xc);
        EXPECT(gbc.readMem(0xa622), 0xc6);
        // 31 011B
        gbc.setState(0xa048, 0xb5e3, 0xbfe0, 0xb6bb, 0x60bf, 0xaa5b, 0x1, 0x1);
        gbc.writeMem(0xa048, { 0x31, 0x29, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf129);
        EXPECT(gbc.pc(), 0xa04b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa048), 0x31);
        EXPECT(gbc.readMem(0xa049), 0x29);
        EXPECT(gbc.readMem(0xa04a), 0xf1);
        // 31 011C
        gbc.setState(0x7cb8, 0x780e, 0x7f50, 0xac8d, 0x8614, 0x1f3, 0x0, 0x1);
        gbc.writeMem(0x7cb8, { 0x31, 0xf0, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6ef0);
        EXPECT(gbc.pc(), 0x7cbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 011D
        gbc.setState(0xaa19, 0x49b6, 0x4650, 0xf72c, 0xbe69, 0x4c9c, 0x1, 0x1);
        gbc.writeMem(0xaa19, { 0x31, 0x13, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xfb13);
        EXPECT(gbc.pc(), 0xaa1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa19), 0x31);
        EXPECT(gbc.readMem(0xaa1a), 0x13);
        EXPECT(gbc.readMem(0xaa1b), 0xfb);
        // 31 011E
        gbc.setState(0xa24d, 0xf9b, 0xe00, 0x62a7, 0x2e9c, 0xf5ba, 0x1, 0x1);
        gbc.writeMem(0xa24d, { 0x31, 0x22, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8e22);
        EXPECT(gbc.pc(), 0xa250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa24d), 0x31);
        EXPECT(gbc.readMem(0xa24e), 0x22);
        EXPECT(gbc.readMem(0xa24f), 0x8e);
        // 31 011F
        gbc.setState(0xbc89, 0xce7a, 0xa100, 0x88d8, 0xe467, 0x8452, 0x0, 0x1);
        gbc.writeMem(0xbc89, { 0x31, 0xd2, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfd2);
        EXPECT(gbc.pc(), 0xbc8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc89), 0x31);
        EXPECT(gbc.readMem(0xbc8a), 0xd2);
        EXPECT(gbc.readMem(0xbc8b), 0xf);
        // 31 0120
        gbc.setState(0x8e7c, 0xbd3, 0x7250, 0xeaf2, 0x5e60, 0xbefe, 0x0, 0x0);
        gbc.writeMem(0x8e7c, { 0x31, 0x68, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2f68);
        EXPECT(gbc.pc(), 0x8e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7c), 0x31);
        EXPECT(gbc.readMem(0x8e7d), 0x68);
        EXPECT(gbc.readMem(0x8e7e), 0x2f);
        // 31 0121
        gbc.setState(0xe93e, 0x699c, 0x330, 0x1a76, 0x1289, 0x4bf4, 0x1, 0x1);
        gbc.writeMem(0xe93e, { 0x31, 0xec, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4ec);
        EXPECT(gbc.pc(), 0xe941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe93e), 0x31);
        EXPECT(gbc.readMem(0xe93f), 0xec);
        EXPECT(gbc.readMem(0xe940), 0x4);
        // 31 0122
        gbc.setState(0xc9c2, 0xf580, 0x6b60, 0xce54, 0xf662, 0xa65d, 0x1, 0x0);
        gbc.writeMem(0xc9c2, { 0x31, 0xce, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3bce);
        EXPECT(gbc.pc(), 0xc9c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9c2), 0x31);
        EXPECT(gbc.readMem(0xc9c3), 0xce);
        EXPECT(gbc.readMem(0xc9c4), 0x3b);
        // 31 0123
        gbc.setState(0x98e, 0xec07, 0x3120, 0x9a6f, 0x590f, 0xc2e6, 0x1, 0x1);
        gbc.writeMem(0x98e, { 0x31, 0x40, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8e40);
        EXPECT(gbc.pc(), 0x991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0124
        gbc.setState(0x229, 0x5058, 0xd790, 0xbe82, 0x4861, 0xadd5, 0x1, 0x1);
        gbc.writeMem(0x229, { 0x31, 0xa9, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1ea9);
        EXPECT(gbc.pc(), 0x22c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0125
        gbc.setState(0x7de2, 0x728, 0xb870, 0x4bc0, 0xf46c, 0x6595, 0x1, 0x1);
        gbc.writeMem(0x7de2, { 0x31, 0xcc, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6fcc);
        EXPECT(gbc.pc(), 0x7de5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0126
        gbc.setState(0x85b0, 0xf54b, 0x3c0, 0x55df, 0xf44a, 0x1325, 0x1, 0x0);
        gbc.writeMem(0x85b0, { 0x31, 0xc4, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x98c4);
        EXPECT(gbc.pc(), 0x85b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b0), 0x31);
        EXPECT(gbc.readMem(0x85b1), 0xc4);
        EXPECT(gbc.readMem(0x85b2), 0x98);
        // 31 0127
        gbc.setState(0x677f, 0xf23, 0xe900, 0x6d54, 0xbe13, 0xb5d2, 0x1, 0x0);
        gbc.writeMem(0x677f, { 0x31, 0x7, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd107);
        EXPECT(gbc.pc(), 0x6782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0128
        gbc.setState(0x5bf0, 0x53ab, 0xc890, 0xb5c2, 0x4b85, 0x1550, 0x1, 0x1);
        gbc.writeMem(0x5bf0, { 0x31, 0x66, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4b66);
        EXPECT(gbc.pc(), 0x5bf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0129
        gbc.setState(0x4e95, 0x6108, 0xbd00, 0xd2da, 0x2415, 0x6910, 0x1, 0x0);
        gbc.writeMem(0x4e95, { 0x31, 0xdc, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x16dc);
        EXPECT(gbc.pc(), 0x4e98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 012A
        gbc.setState(0x73a9, 0xada, 0xe2f0, 0x35d7, 0xef98, 0xcca2, 0x0, 0x1);
        gbc.writeMem(0x73a9, { 0x31, 0x61, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa661);
        EXPECT(gbc.pc(), 0x73ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 012B
        gbc.setState(0x9568, 0xdda4, 0x5bd0, 0xfe6f, 0x5e4, 0x5a77, 0x1, 0x0);
        gbc.writeMem(0x9568, { 0x31, 0x3d, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf93d);
        EXPECT(gbc.pc(), 0x956b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9568), 0x31);
        EXPECT(gbc.readMem(0x9569), 0x3d);
        EXPECT(gbc.readMem(0x956a), 0xf9);
        // 31 012C
        gbc.setState(0x4049, 0x16ed, 0xa320, 0xfd0, 0x89ed, 0xd9b8, 0x0, 0x0);
        gbc.writeMem(0x4049, { 0x31, 0x1e, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc31e);
        EXPECT(gbc.pc(), 0x404c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 012D
        gbc.setState(0xd4a8, 0xed98, 0x8070, 0x83b, 0x7c, 0xd1cd, 0x1, 0x0);
        gbc.writeMem(0xd4a8, { 0x31, 0x73, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd373);
        EXPECT(gbc.pc(), 0xd4ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4a8), 0x31);
        EXPECT(gbc.readMem(0xd4a9), 0x73);
        EXPECT(gbc.readMem(0xd4aa), 0xd3);
        // 31 012E
        gbc.setState(0xa7ef, 0xf5de, 0xc940, 0x115e, 0xd8f6, 0xfedb, 0x0, 0x1);
        gbc.writeMem(0xa7ef, { 0x31, 0xb8, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1bb8);
        EXPECT(gbc.pc(), 0xa7f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ef), 0x31);
        EXPECT(gbc.readMem(0xa7f0), 0xb8);
        EXPECT(gbc.readMem(0xa7f1), 0x1b);
        // 31 012F
        gbc.setState(0x1010, 0x5828, 0x16b0, 0x9f72, 0xb81d, 0x405f, 0x1, 0x1);
        gbc.writeMem(0x1010, { 0x31, 0xa1, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3ba1);
        EXPECT(gbc.pc(), 0x1013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0130
        gbc.setState(0xbffc, 0xa09e, 0xf200, 0x109e, 0x8a1d, 0x9dff, 0x1, 0x0);
        gbc.writeMem(0xbffc, { 0x31, 0x1f, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6a1f);
        EXPECT(gbc.pc(), 0xbfff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbffc), 0x31);
        EXPECT(gbc.readMem(0xbffd), 0x1f);
        EXPECT(gbc.readMem(0xbffe), 0x6a);
        // 31 0131
        gbc.setState(0x6b4a, 0xe052, 0xc6f0, 0xfd09, 0xb805, 0x9233, 0x1, 0x0);
        gbc.writeMem(0x6b4a, { 0x31, 0x1f, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4a1f);
        EXPECT(gbc.pc(), 0x6b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0132
        gbc.setState(0xedf8, 0xce1f, 0x7a30, 0x7ef8, 0xc5d1, 0x9231, 0x1, 0x1);
        gbc.writeMem(0xedf8, { 0x31, 0x2b, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x662b);
        EXPECT(gbc.pc(), 0xedfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf8), 0x31);
        EXPECT(gbc.readMem(0xedf9), 0x2b);
        EXPECT(gbc.readMem(0xedfa), 0x66);
        // 31 0133
        gbc.setState(0x38ed, 0xde4, 0xd740, 0xc390, 0x2ce4, 0x832c, 0x1, 0x1);
        gbc.writeMem(0x38ed, { 0x31, 0xd0, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa6d0);
        EXPECT(gbc.pc(), 0x38f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0134
        gbc.setState(0xec30, 0xfd92, 0x1ac0, 0xad45, 0xc83a, 0xf390, 0x1, 0x0);
        gbc.writeMem(0xec30, { 0x31, 0x30, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7b30);
        EXPECT(gbc.pc(), 0xec33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec30), 0x31);
        EXPECT(gbc.readMem(0xec31), 0x30);
        EXPECT(gbc.readMem(0xec32), 0x7b);
        // 31 0135
        gbc.setState(0xb09f, 0xec9e, 0x1850, 0x1bf, 0xab02, 0x52d0, 0x1, 0x0);
        gbc.writeMem(0xb09f, { 0x31, 0x63, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8963);
        EXPECT(gbc.pc(), 0xb0a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb09f), 0x31);
        EXPECT(gbc.readMem(0xb0a0), 0x63);
        EXPECT(gbc.readMem(0xb0a1), 0x89);
        // 31 0137
        gbc.setState(0x7578, 0xdd17, 0x7280, 0xf593, 0x1e9c, 0xc81c, 0x1, 0x0);
        gbc.writeMem(0x7578, { 0x31, 0xca, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd4ca);
        EXPECT(gbc.pc(), 0x757b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0139
        gbc.setState(0x94eb, 0x723e, 0x5830, 0x61f4, 0x2860, 0xfb74, 0x1, 0x1);
        gbc.writeMem(0x94eb, { 0x31, 0x15, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd115);
        EXPECT(gbc.pc(), 0x94ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94eb), 0x31);
        EXPECT(gbc.readMem(0x94ec), 0x15);
        EXPECT(gbc.readMem(0x94ed), 0xd1);
        // 31 013A
        gbc.setState(0xdf1b, 0x1e82, 0xc980, 0xde59, 0x41bf, 0xaeb9, 0x0, 0x1);
        gbc.writeMem(0xdf1b, { 0x31, 0x5, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2d05);
        EXPECT(gbc.pc(), 0xdf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf1b), 0x31);
        EXPECT(gbc.readMem(0xdf1c), 0x5);
        EXPECT(gbc.readMem(0xdf1d), 0x2d);
        // 31 013B
        gbc.setState(0xb09c, 0x91ee, 0xf7c0, 0xaa41, 0x5c9d, 0x8c91, 0x0, 0x0);
        gbc.writeMem(0xb09c, { 0x31, 0x16, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6016);
        EXPECT(gbc.pc(), 0xb09f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09c), 0x31);
        EXPECT(gbc.readMem(0xb09d), 0x16);
        EXPECT(gbc.readMem(0xb09e), 0x60);
        // 31 013C
        gbc.setState(0x5ac, 0xab35, 0xd080, 0xb35c, 0xfaa5, 0x6262, 0x1, 0x0);
        gbc.writeMem(0x5ac, { 0x31, 0x16, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1b16);
        EXPECT(gbc.pc(), 0x5af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 013D
        gbc.setState(0x1798, 0x4852, 0x6550, 0x89e8, 0xed71, 0xd551, 0x1, 0x0);
        gbc.writeMem(0x1798, { 0x31, 0x7d, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7d);
        EXPECT(gbc.pc(), 0x179b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 013E
        gbc.setState(0x2275, 0x1235, 0x9d50, 0x1c61, 0xbb09, 0xdfe2, 0x1, 0x1);
        gbc.writeMem(0x2275, { 0x31, 0x87, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4887);
        EXPECT(gbc.pc(), 0x2278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 013F
        gbc.setState(0xb527, 0xac90, 0x6f60, 0xc310, 0xfe46, 0x7ee0, 0x0, 0x0);
        gbc.writeMem(0xb527, { 0x31, 0xdd, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf4dd);
        EXPECT(gbc.pc(), 0xb52a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb527), 0x31);
        EXPECT(gbc.readMem(0xb528), 0xdd);
        EXPECT(gbc.readMem(0xb529), 0xf4);
        // 31 0140
        gbc.setState(0x31e7, 0x5abb, 0x88d0, 0xb484, 0xecd0, 0x396e, 0x1, 0x1);
        gbc.writeMem(0x31e7, { 0x31, 0xc4, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3ac4);
        EXPECT(gbc.pc(), 0x31ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0141
        gbc.setState(0x7d72, 0x9bbb, 0xeaf0, 0x45af, 0x5041, 0x8008, 0x1, 0x1);
        gbc.writeMem(0x7d72, { 0x31, 0x57, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8e57);
        EXPECT(gbc.pc(), 0x7d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0142
        gbc.setState(0xd083, 0x110d, 0x7710, 0xbdae, 0x53aa, 0x6de0, 0x1, 0x1);
        gbc.writeMem(0xd083, { 0x31, 0x9b, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x369b);
        EXPECT(gbc.pc(), 0xd086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd083), 0x31);
        EXPECT(gbc.readMem(0xd084), 0x9b);
        EXPECT(gbc.readMem(0xd085), 0x36);
        // 31 0143
        gbc.setState(0x8abf, 0x4fa3, 0x68b0, 0x2c18, 0x8a0a, 0x43ae, 0x1, 0x0);
        gbc.writeMem(0x8abf, { 0x31, 0x8, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8908);
        EXPECT(gbc.pc(), 0x8ac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8abf), 0x31);
        EXPECT(gbc.readMem(0x8ac0), 0x8);
        EXPECT(gbc.readMem(0x8ac1), 0x89);
        // 31 0144
        gbc.setState(0x8449, 0x9545, 0xcbb0, 0x59cb, 0x6adc, 0xc27d, 0x0, 0x0);
        gbc.writeMem(0x8449, { 0x31, 0xc4, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbbc4);
        EXPECT(gbc.pc(), 0x844c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8449), 0x31);
        EXPECT(gbc.readMem(0x844a), 0xc4);
        EXPECT(gbc.readMem(0x844b), 0xbb);
        // 31 0145
        gbc.setState(0x4388, 0xe65b, 0x2b10, 0xa7a6, 0xcb78, 0x4f5, 0x1, 0x1);
        gbc.writeMem(0x4388, { 0x31, 0x6e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x936e);
        EXPECT(gbc.pc(), 0x438b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0146
        gbc.setState(0xe1cd, 0x9667, 0x8ac0, 0x6d48, 0xca0f, 0xda3a, 0x0, 0x1);
        gbc.writeMem(0xe1cd, { 0x31, 0x73, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcd73);
        EXPECT(gbc.pc(), 0xe1d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1cd), 0x31);
        EXPECT(gbc.readMem(0xe1ce), 0x73);
        EXPECT(gbc.readMem(0xe1cf), 0xcd);
        // 31 0147
        gbc.setState(0xe68f, 0xbf88, 0xc710, 0xdfb1, 0x6d60, 0x371e, 0x1, 0x0);
        gbc.writeMem(0xe68f, { 0x31, 0x62, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6a62);
        EXPECT(gbc.pc(), 0xe692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68f), 0x31);
        EXPECT(gbc.readMem(0xe690), 0x62);
        EXPECT(gbc.readMem(0xe691), 0x6a);
        // 31 0148
        gbc.setState(0x8bc9, 0xdff4, 0xea30, 0xb861, 0x19a4, 0x654b, 0x0, 0x0);
        gbc.writeMem(0x8bc9, { 0x31, 0xd1, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x92d1);
        EXPECT(gbc.pc(), 0x8bcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc9), 0x31);
        EXPECT(gbc.readMem(0x8bca), 0xd1);
        EXPECT(gbc.readMem(0x8bcb), 0x92);
        // 31 0149
        gbc.setState(0x83c4, 0x70d4, 0xf690, 0x5a1, 0x800, 0xc603, 0x1, 0x1);
        gbc.writeMem(0x83c4, { 0x31, 0x4, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2004);
        EXPECT(gbc.pc(), 0x83c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c4), 0x31);
        EXPECT(gbc.readMem(0x83c5), 0x4);
        EXPECT(gbc.readMem(0x83c6), 0x20);
        // 31 014A
        gbc.setState(0x7cd, 0xa233, 0x2e60, 0xa151, 0x6680, 0x562f, 0x1, 0x0);
        gbc.writeMem(0x7cd, { 0x31, 0xd9, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2cd9);
        EXPECT(gbc.pc(), 0x7d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 014B
        gbc.setState(0xd0bd, 0x88b0, 0xdb00, 0xf95f, 0xe75, 0xbd01, 0x0, 0x0);
        gbc.writeMem(0xd0bd, { 0x31, 0x4b, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4d4b);
        EXPECT(gbc.pc(), 0xd0c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0bd), 0x31);
        EXPECT(gbc.readMem(0xd0be), 0x4b);
        EXPECT(gbc.readMem(0xd0bf), 0x4d);
        // 31 014C
        gbc.setState(0xaed0, 0xbc90, 0xc6b0, 0x5254, 0x7c38, 0xa0d5, 0x1, 0x1);
        gbc.writeMem(0xaed0, { 0x31, 0xdf, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x82df);
        EXPECT(gbc.pc(), 0xaed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed0), 0x31);
        EXPECT(gbc.readMem(0xaed1), 0xdf);
        EXPECT(gbc.readMem(0xaed2), 0x82);
        // 31 014D
        gbc.setState(0xde7d, 0x95ac, 0x3790, 0xef04, 0x8f8, 0x585b, 0x0, 0x0);
        gbc.writeMem(0xde7d, { 0x31, 0x75, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x575);
        EXPECT(gbc.pc(), 0xde80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7d), 0x31);
        EXPECT(gbc.readMem(0xde7e), 0x75);
        EXPECT(gbc.readMem(0xde7f), 0x5);
        // 31 014E
        gbc.setState(0x332b, 0xdbff, 0xa770, 0x79d, 0x82bb, 0xb234, 0x0, 0x0);
        gbc.writeMem(0x332b, { 0x31, 0x77, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdc77);
        EXPECT(gbc.pc(), 0x332e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 014F
        gbc.setState(0x3261, 0x79a4, 0xc6f0, 0xd2f1, 0x5032, 0x1bb4, 0x1, 0x0);
        gbc.writeMem(0x3261, { 0x31, 0xd6, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x54d6);
        EXPECT(gbc.pc(), 0x3264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0150
        gbc.setState(0x9c5c, 0xb338, 0x2110, 0xd845, 0x2546, 0x6e36, 0x1, 0x0);
        gbc.writeMem(0x9c5c, { 0x31, 0x17, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xeb17);
        EXPECT(gbc.pc(), 0x9c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c5c), 0x31);
        EXPECT(gbc.readMem(0x9c5d), 0x17);
        EXPECT(gbc.readMem(0x9c5e), 0xeb);
        // 31 0151
        gbc.setState(0xe5c6, 0xd78d, 0xeba0, 0x610b, 0x4980, 0x61b4, 0x0, 0x1);
        gbc.writeMem(0xe5c6, { 0x31, 0xb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbc0b);
        EXPECT(gbc.pc(), 0xe5c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c6), 0x31);
        EXPECT(gbc.readMem(0xe5c7), 0xb);
        EXPECT(gbc.readMem(0xe5c8), 0xbc);
        // 31 0152
        gbc.setState(0xb251, 0xcf62, 0xd020, 0x75fc, 0xda62, 0x6ec3, 0x0, 0x0);
        gbc.writeMem(0xb251, { 0x31, 0x91, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3691);
        EXPECT(gbc.pc(), 0xb254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb251), 0x31);
        EXPECT(gbc.readMem(0xb252), 0x91);
        EXPECT(gbc.readMem(0xb253), 0x36);
        // 31 0153
        gbc.setState(0xdfa0, 0x5ea7, 0x3200, 0x1e88, 0x961d, 0x8977, 0x1, 0x1);
        gbc.writeMem(0xdfa0, { 0x31, 0x21, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3e21);
        EXPECT(gbc.pc(), 0xdfa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfa0), 0x31);
        EXPECT(gbc.readMem(0xdfa1), 0x21);
        EXPECT(gbc.readMem(0xdfa2), 0x3e);
        // 31 0154
        gbc.setState(0x7380, 0x248c, 0xec50, 0x1ffc, 0xdba1, 0x9eef, 0x1, 0x1);
        gbc.writeMem(0x7380, { 0x31, 0x39, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd39);
        EXPECT(gbc.pc(), 0x7383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0155
        gbc.setState(0xec6a, 0xdfb8, 0xab60, 0xae46, 0xa03c, 0xef80, 0x1, 0x0);
        gbc.writeMem(0xec6a, { 0x31, 0x68, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5168);
        EXPECT(gbc.pc(), 0xec6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec6a), 0x31);
        EXPECT(gbc.readMem(0xec6b), 0x68);
        EXPECT(gbc.readMem(0xec6c), 0x51);
        // 31 0156
        gbc.setState(0x6094, 0xffd0, 0xb420, 0x80fe, 0xac5d, 0x4e92, 0x0, 0x0);
        gbc.writeMem(0x6094, { 0x31, 0x9e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd69e);
        EXPECT(gbc.pc(), 0x6097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0158
        gbc.setState(0xe488, 0x55e3, 0xdde0, 0x661c, 0x4ae0, 0x682d, 0x0, 0x0);
        gbc.writeMem(0xe488, { 0x31, 0x92, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4992);
        EXPECT(gbc.pc(), 0xe48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe488), 0x31);
        EXPECT(gbc.readMem(0xe489), 0x92);
        EXPECT(gbc.readMem(0xe48a), 0x49);
        // 31 0159
        gbc.setState(0x27dd, 0xb972, 0x1da0, 0x6037, 0xfc54, 0x550e, 0x0, 0x1);
        gbc.writeMem(0x27dd, { 0x31, 0xdb, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf2db);
        EXPECT(gbc.pc(), 0x27e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 015A
        gbc.setState(0x1af8, 0x16b0, 0x8e30, 0x2592, 0x37bf, 0x1d1f, 0x1, 0x0);
        gbc.writeMem(0x1af8, { 0x31, 0x1b, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa21b);
        EXPECT(gbc.pc(), 0x1afb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 015B
        gbc.setState(0x8ef7, 0x72a5, 0x5a80, 0x80bb, 0x8a46, 0xcfce, 0x0, 0x1);
        gbc.writeMem(0x8ef7, { 0x31, 0xbf, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x92bf);
        EXPECT(gbc.pc(), 0x8efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef7), 0x31);
        EXPECT(gbc.readMem(0x8ef8), 0xbf);
        EXPECT(gbc.readMem(0x8ef9), 0x92);
        // 31 015C
        gbc.setState(0xb159, 0xf84e, 0xe3a0, 0xce33, 0x4f3b, 0xe002, 0x0, 0x0);
        gbc.writeMem(0xb159, { 0x31, 0xcd, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7bcd);
        EXPECT(gbc.pc(), 0xb15c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb159), 0x31);
        EXPECT(gbc.readMem(0xb15a), 0xcd);
        EXPECT(gbc.readMem(0xb15b), 0x7b);
        // 31 015D
        gbc.setState(0xe558, 0xe16, 0xe280, 0xbe10, 0xb3c3, 0x7695, 0x0, 0x0);
        gbc.writeMem(0xe558, { 0x31, 0xa7, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x36a7);
        EXPECT(gbc.pc(), 0xe55b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe558), 0x31);
        EXPECT(gbc.readMem(0xe559), 0xa7);
        EXPECT(gbc.readMem(0xe55a), 0x36);
        // 31 015E
        gbc.setState(0x248f, 0xbc96, 0xe80, 0x902, 0x4e4f, 0xe5cb, 0x1, 0x1);
        gbc.writeMem(0x248f, { 0x31, 0x1b, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xeb1b);
        EXPECT(gbc.pc(), 0x2492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 015F
        gbc.setState(0xcd63, 0xc79f, 0x6260, 0x1a6, 0x649e, 0xc14, 0x0, 0x0);
        gbc.writeMem(0xcd63, { 0x31, 0x12, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5412);
        EXPECT(gbc.pc(), 0xcd66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd63), 0x31);
        EXPECT(gbc.readMem(0xcd64), 0x12);
        EXPECT(gbc.readMem(0xcd65), 0x54);
        // 31 0160
        gbc.setState(0xb8aa, 0xa405, 0x6aa0, 0xaa3b, 0x16d0, 0xd3e0, 0x1, 0x1);
        gbc.writeMem(0xb8aa, { 0x31, 0xef, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1aef);
        EXPECT(gbc.pc(), 0xb8ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8aa), 0x31);
        EXPECT(gbc.readMem(0xb8ab), 0xef);
        EXPECT(gbc.readMem(0xb8ac), 0x1a);
        // 31 0161
        gbc.setState(0xe089, 0xf257, 0xd290, 0x4cbf, 0xf410, 0x2782, 0x0, 0x1);
        gbc.writeMem(0xe089, { 0x31, 0x5c, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd65c);
        EXPECT(gbc.pc(), 0xe08c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe089), 0x31);
        EXPECT(gbc.readMem(0xe08a), 0x5c);
        EXPECT(gbc.readMem(0xe08b), 0xd6);
        // 31 0162
        gbc.setState(0xa56, 0x31c7, 0x2230, 0xe724, 0x35b5, 0xe47c, 0x0, 0x1);
        gbc.writeMem(0xa56, { 0x31, 0xae, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc5ae);
        EXPECT(gbc.pc(), 0xa59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0163
        gbc.setState(0x7b62, 0x7a1f, 0xa100, 0x3ab, 0x359c, 0xe309, 0x1, 0x1);
        gbc.writeMem(0x7b62, { 0x31, 0xdb, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3edb);
        EXPECT(gbc.pc(), 0x7b65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0164
        gbc.setState(0xed88, 0xc25d, 0xd970, 0x488f, 0xab5f, 0xebe4, 0x1, 0x1);
        gbc.writeMem(0xed88, { 0x31, 0xf8, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa7f8);
        EXPECT(gbc.pc(), 0xed8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed88), 0x31);
        EXPECT(gbc.readMem(0xed89), 0xf8);
        EXPECT(gbc.readMem(0xed8a), 0xa7);
        // 31 0165
        gbc.setState(0xed5a, 0xa90c, 0x61a0, 0x4f20, 0xdf5b, 0x5ccd, 0x0, 0x1);
        gbc.writeMem(0xed5a, { 0x31, 0xef, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x26ef);
        EXPECT(gbc.pc(), 0xed5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed5a), 0x31);
        EXPECT(gbc.readMem(0xed5b), 0xef);
        EXPECT(gbc.readMem(0xed5c), 0x26);
        // 31 0166
        gbc.setState(0x1024, 0x28a2, 0x24f0, 0x5b99, 0x5d3c, 0x307d, 0x0, 0x0);
        gbc.writeMem(0x1024, { 0x31, 0xa8, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x91a8);
        EXPECT(gbc.pc(), 0x1027);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0167
        gbc.setState(0xec42, 0xeef1, 0xabf0, 0xfe14, 0xbb78, 0x899c, 0x1, 0x1);
        gbc.writeMem(0xec42, { 0x31, 0x78, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8278);
        EXPECT(gbc.pc(), 0xec45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec42), 0x31);
        EXPECT(gbc.readMem(0xec43), 0x78);
        EXPECT(gbc.readMem(0xec44), 0x82);
        // 31 0168
        gbc.setState(0x496a, 0x2e7b, 0x8460, 0xfaf7, 0xfe84, 0xdd48, 0x0, 0x1);
        gbc.writeMem(0x496a, { 0x31, 0x2d, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x482d);
        EXPECT(gbc.pc(), 0x496d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0169
        gbc.setState(0x7123, 0x16aa, 0x1830, 0xcef2, 0x9f43, 0xc2fb, 0x1, 0x0);
        gbc.writeMem(0x7123, { 0x31, 0x58, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2658);
        EXPECT(gbc.pc(), 0x7126);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 016A
        gbc.setState(0x330c, 0xd68e, 0x9930, 0x26f1, 0xeccc, 0x6b57, 0x0, 0x1);
        gbc.writeMem(0x330c, { 0x31, 0xd6, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xad6);
        EXPECT(gbc.pc(), 0x330f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 016B
        gbc.setState(0xd814, 0x5993, 0x88a0, 0x91e9, 0xdc2d, 0x1c34, 0x1, 0x1);
        gbc.writeMem(0xd814, { 0x31, 0x82, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf782);
        EXPECT(gbc.pc(), 0xd817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd814), 0x31);
        EXPECT(gbc.readMem(0xd815), 0x82);
        EXPECT(gbc.readMem(0xd816), 0xf7);
        // 31 016C
        gbc.setState(0xefdc, 0x185d, 0xe2e0, 0x9619, 0x24f6, 0x45d8, 0x1, 0x1);
        gbc.writeMem(0xefdc, { 0x31, 0x33, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2f33);
        EXPECT(gbc.pc(), 0xefdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefdc), 0x31);
        EXPECT(gbc.readMem(0xefdd), 0x33);
        EXPECT(gbc.readMem(0xefde), 0x2f);
        // 31 016D
        gbc.setState(0x950b, 0xb52e, 0xafc0, 0x8899, 0xfd40, 0xfb72, 0x0, 0x1);
        gbc.writeMem(0x950b, { 0x31, 0x9f, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd39f);
        EXPECT(gbc.pc(), 0x950e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950b), 0x31);
        EXPECT(gbc.readMem(0x950c), 0x9f);
        EXPECT(gbc.readMem(0x950d), 0xd3);
        // 31 016E
        gbc.setState(0xb047, 0x9817, 0x1c30, 0xbbd8, 0x45d8, 0x64a9, 0x1, 0x0);
        gbc.writeMem(0xb047, { 0x31, 0x5e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x365e);
        EXPECT(gbc.pc(), 0xb04a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb047), 0x31);
        EXPECT(gbc.readMem(0xb048), 0x5e);
        EXPECT(gbc.readMem(0xb049), 0x36);
        // 31 0170
        gbc.setState(0x3e31, 0x629e, 0xccd0, 0xd399, 0x1272, 0xe5ce, 0x1, 0x0);
        gbc.writeMem(0x3e31, { 0x31, 0x95, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1b95);
        EXPECT(gbc.pc(), 0x3e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0171
        gbc.setState(0x92a, 0x10aa, 0x4ec0, 0x4265, 0xb7e6, 0x29fe, 0x0, 0x1);
        gbc.writeMem(0x92a, { 0x31, 0xb9, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x16b9);
        EXPECT(gbc.pc(), 0x92d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0172
        gbc.setState(0xca36, 0x36a7, 0x7f70, 0xc023, 0xec85, 0x83e2, 0x0, 0x0);
        gbc.writeMem(0xca36, { 0x31, 0x67, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xce67);
        EXPECT(gbc.pc(), 0xca39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca36), 0x31);
        EXPECT(gbc.readMem(0xca37), 0x67);
        EXPECT(gbc.readMem(0xca38), 0xce);
        // 31 0173
        gbc.setState(0xd270, 0x9c87, 0x4580, 0x2e5c, 0xca6f, 0x7b8e, 0x0, 0x1);
        gbc.writeMem(0xd270, { 0x31, 0xba, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd9ba);
        EXPECT(gbc.pc(), 0xd273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd270), 0x31);
        EXPECT(gbc.readMem(0xd271), 0xba);
        EXPECT(gbc.readMem(0xd272), 0xd9);
        // 31 0174
        gbc.setState(0xac6a, 0x1876, 0xbc90, 0x163a, 0xace6, 0x6df2, 0x1, 0x1);
        gbc.writeMem(0xac6a, { 0x31, 0x71, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8671);
        EXPECT(gbc.pc(), 0xac6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac6a), 0x31);
        EXPECT(gbc.readMem(0xac6b), 0x71);
        EXPECT(gbc.readMem(0xac6c), 0x86);
        // 31 0175
        gbc.setState(0x71de, 0x36e6, 0xe6e0, 0xbb3c, 0xe637, 0xddfb, 0x0, 0x0);
        gbc.writeMem(0x71de, { 0x31, 0x7d, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x667d);
        EXPECT(gbc.pc(), 0x71e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0176
        gbc.setState(0xec75, 0x5a28, 0x16a0, 0x332f, 0xd8bb, 0xa507, 0x0, 0x0);
        gbc.writeMem(0xec75, { 0x31, 0x63, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf063);
        EXPECT(gbc.pc(), 0xec78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec75), 0x31);
        EXPECT(gbc.readMem(0xec76), 0x63);
        EXPECT(gbc.readMem(0xec77), 0xf0);
        // 31 0177
        gbc.setState(0xeb6e, 0xb679, 0xd360, 0x838c, 0x241, 0x212d, 0x0, 0x1);
        gbc.writeMem(0xeb6e, { 0x31, 0x8b, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe58b);
        EXPECT(gbc.pc(), 0xeb71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb6e), 0x31);
        EXPECT(gbc.readMem(0xeb6f), 0x8b);
        EXPECT(gbc.readMem(0xeb70), 0xe5);
        // 31 0178
        gbc.setState(0x9590, 0x931f, 0x120, 0x1dae, 0xb53d, 0xcd61, 0x0, 0x0);
        gbc.writeMem(0x9590, { 0x31, 0x4a, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8c4a);
        EXPECT(gbc.pc(), 0x9593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9590), 0x31);
        EXPECT(gbc.readMem(0x9591), 0x4a);
        EXPECT(gbc.readMem(0x9592), 0x8c);
        // 31 0179
        gbc.setState(0xcab0, 0xd3e5, 0x18e0, 0xcf0d, 0x54d4, 0xb002, 0x1, 0x1);
        gbc.writeMem(0xcab0, { 0x31, 0x8f, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe48f);
        EXPECT(gbc.pc(), 0xcab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab0), 0x31);
        EXPECT(gbc.readMem(0xcab1), 0x8f);
        EXPECT(gbc.readMem(0xcab2), 0xe4);
        // 31 017A
        gbc.setState(0x96aa, 0x259f, 0x7340, 0x1193, 0x994d, 0xda05, 0x1, 0x0);
        gbc.writeMem(0x96aa, { 0x31, 0xbb, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3bb);
        EXPECT(gbc.pc(), 0x96ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96aa), 0x31);
        EXPECT(gbc.readMem(0x96ab), 0xbb);
        EXPECT(gbc.readMem(0x96ac), 0x3);
        // 31 017B
        gbc.setState(0x581, 0xb4a0, 0xbf60, 0xb532, 0x37fa, 0xd20b, 0x0, 0x1);
        gbc.writeMem(0x581, { 0x31, 0x28, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd928);
        EXPECT(gbc.pc(), 0x584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 017D
        gbc.setState(0xe351, 0x7b19, 0x83f0, 0xaf7b, 0xe6ca, 0xe803, 0x0, 0x0);
        gbc.writeMem(0xe351, { 0x31, 0x7d, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x427d);
        EXPECT(gbc.pc(), 0xe354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe351), 0x31);
        EXPECT(gbc.readMem(0xe352), 0x7d);
        EXPECT(gbc.readMem(0xe353), 0x42);
        // 31 017E
        gbc.setState(0xada4, 0x152, 0xe70, 0xda41, 0x2053, 0x8b49, 0x1, 0x0);
        gbc.writeMem(0xada4, { 0x31, 0xc1, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4ac1);
        EXPECT(gbc.pc(), 0xada7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada4), 0x31);
        EXPECT(gbc.readMem(0xada5), 0xc1);
        EXPECT(gbc.readMem(0xada6), 0x4a);
        // 31 017F
        gbc.setState(0x3dff, 0xfdc7, 0xa6f0, 0xd0e8, 0x377c, 0xf80e, 0x0, 0x1);
        gbc.writeMem(0x3dff, { 0x31, 0x43, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6d43);
        EXPECT(gbc.pc(), 0x3e02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0180
        gbc.setState(0x6dd2, 0x7eb1, 0xa6d0, 0x33, 0xf873, 0xbd14, 0x0, 0x1);
        gbc.writeMem(0x6dd2, { 0x31, 0x5e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x565e);
        EXPECT(gbc.pc(), 0x6dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0181
        gbc.setState(0x2d4f, 0xfcaa, 0x7c40, 0x1b8b, 0x806d, 0xdea7, 0x0, 0x1);
        gbc.writeMem(0x2d4f, { 0x31, 0xe6, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x30e6);
        EXPECT(gbc.pc(), 0x2d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0183
        gbc.setState(0x1ac2, 0x4d28, 0x5ab0, 0x3142, 0x6b7b, 0xc80b, 0x0, 0x0);
        gbc.writeMem(0x1ac2, { 0x31, 0xda, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x23da);
        EXPECT(gbc.pc(), 0x1ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0184
        gbc.setState(0x29a9, 0x9efe, 0xd060, 0xce40, 0x93c4, 0x18fc, 0x0, 0x0);
        gbc.writeMem(0x29a9, { 0x31, 0x9b, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8a9b);
        EXPECT(gbc.pc(), 0x29ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0185
        gbc.setState(0x72c7, 0x455a, 0x160, 0x47c6, 0xc113, 0x84e0, 0x0, 0x1);
        gbc.writeMem(0x72c7, { 0x31, 0x8f, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x48f);
        EXPECT(gbc.pc(), 0x72ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0186
        gbc.setState(0xa3c9, 0xf67a, 0x7c90, 0x7e3f, 0xd188, 0x7c92, 0x0, 0x0);
        gbc.writeMem(0xa3c9, { 0x31, 0xd5, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6bd5);
        EXPECT(gbc.pc(), 0xa3cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c9), 0x31);
        EXPECT(gbc.readMem(0xa3ca), 0xd5);
        EXPECT(gbc.readMem(0xa3cb), 0x6b);
        // 31 0187
        gbc.setState(0x9202, 0xc6fe, 0x6500, 0xa622, 0x9ea, 0x7f05, 0x0, 0x1);
        gbc.writeMem(0x9202, { 0x31, 0x34, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1434);
        EXPECT(gbc.pc(), 0x9205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9202), 0x31);
        EXPECT(gbc.readMem(0x9203), 0x34);
        EXPECT(gbc.readMem(0x9204), 0x14);
        // 31 0188
        gbc.setState(0x5fb8, 0x26ff, 0xee0, 0x5cd8, 0x776e, 0x8ebf, 0x0, 0x1);
        gbc.writeMem(0x5fb8, { 0x31, 0x6b, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xab6b);
        EXPECT(gbc.pc(), 0x5fbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0189
        gbc.setState(0xbf93, 0x91ff, 0x8fe0, 0x6ed2, 0xd6e5, 0x620c, 0x0, 0x1);
        gbc.writeMem(0xbf93, { 0x31, 0xb9, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x66b9);
        EXPECT(gbc.pc(), 0xbf96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf93), 0x31);
        EXPECT(gbc.readMem(0xbf94), 0xb9);
        EXPECT(gbc.readMem(0xbf95), 0x66);
        // 31 018A
        gbc.setState(0x9f5b, 0xc493, 0xa530, 0xc939, 0x8146, 0x1dd1, 0x1, 0x0);
        gbc.writeMem(0x9f5b, { 0x31, 0xf6, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x30f6);
        EXPECT(gbc.pc(), 0x9f5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f5b), 0x31);
        EXPECT(gbc.readMem(0x9f5c), 0xf6);
        EXPECT(gbc.readMem(0x9f5d), 0x30);
        // 31 018B
        gbc.setState(0x58b4, 0x6b67, 0xe9e0, 0xa074, 0x4801, 0xc89d, 0x1, 0x0);
        gbc.writeMem(0x58b4, { 0x31, 0x30, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd530);
        EXPECT(gbc.pc(), 0x58b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 018C
        gbc.setState(0x4d20, 0xa50b, 0x5ba0, 0xbeb9, 0x581f, 0x7faf, 0x1, 0x0);
        gbc.writeMem(0x4d20, { 0x31, 0x4, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7604);
        EXPECT(gbc.pc(), 0x4d23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 018D
        gbc.setState(0x309b, 0x4b2c, 0x29d0, 0xd046, 0x9301, 0x4bc0, 0x0, 0x0);
        gbc.writeMem(0x309b, { 0x31, 0xd5, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2fd5);
        EXPECT(gbc.pc(), 0x309e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 018E
        gbc.setState(0x6443, 0x726f, 0x8030, 0x7f37, 0x204b, 0x8382, 0x1, 0x0);
        gbc.writeMem(0x6443, { 0x31, 0xca, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x19ca);
        EXPECT(gbc.pc(), 0x6446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 018F
        gbc.setState(0xaa83, 0x2144, 0x9c70, 0xe09, 0xd178, 0x71c, 0x0, 0x1);
        gbc.writeMem(0xaa83, { 0x31, 0x9, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc109);
        EXPECT(gbc.pc(), 0xaa86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa83), 0x31);
        EXPECT(gbc.readMem(0xaa84), 0x9);
        EXPECT(gbc.readMem(0xaa85), 0xc1);
        // 31 0190
        gbc.setState(0x26a9, 0xf9c2, 0xd0b0, 0x5e9e, 0x91f3, 0xcab, 0x1, 0x0);
        gbc.writeMem(0x26a9, { 0x31, 0x3, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf03);
        EXPECT(gbc.pc(), 0x26ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0191
        gbc.setState(0x9510, 0xd6c6, 0x81b0, 0x883d, 0x253e, 0x71e3, 0x0, 0x0);
        gbc.writeMem(0x9510, { 0x31, 0x14, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xdf14);
        EXPECT(gbc.pc(), 0x9513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9510), 0x31);
        EXPECT(gbc.readMem(0x9511), 0x14);
        EXPECT(gbc.readMem(0x9512), 0xdf);
        // 31 0193
        gbc.setState(0x9ad3, 0xec7e, 0xb0a0, 0x9dd3, 0xbc81, 0x1b0b, 0x0, 0x0);
        gbc.writeMem(0x9ad3, { 0x31, 0xa9, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x85a9);
        EXPECT(gbc.pc(), 0x9ad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad3), 0x31);
        EXPECT(gbc.readMem(0x9ad4), 0xa9);
        EXPECT(gbc.readMem(0x9ad5), 0x85);
        // 31 0194
        gbc.setState(0x17c6, 0x6388, 0x2720, 0x83c8, 0xa4df, 0xb119, 0x1, 0x1);
        gbc.writeMem(0x17c6, { 0x31, 0x50, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6550);
        EXPECT(gbc.pc(), 0x17c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0195
        gbc.setState(0x3540, 0x2980, 0xdab0, 0xfa23, 0x8524, 0xd52f, 0x0, 0x0);
        gbc.writeMem(0x3540, { 0x31, 0xb, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5b0b);
        EXPECT(gbc.pc(), 0x3543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0196
        gbc.setState(0x63b3, 0x8478, 0x7e20, 0xb601, 0x840c, 0x66f4, 0x1, 0x1);
        gbc.writeMem(0x63b3, { 0x31, 0x1c, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x941c);
        EXPECT(gbc.pc(), 0x63b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0197
        gbc.setState(0x80ff, 0x118e, 0x7ad0, 0x19e4, 0x370b, 0x3696, 0x0, 0x0);
        gbc.writeMem(0x80ff, { 0x31, 0xea, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3cea);
        EXPECT(gbc.pc(), 0x8102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ff), 0x31);
        EXPECT(gbc.readMem(0x8100), 0xea);
        EXPECT(gbc.readMem(0x8101), 0x3c);
        // 31 0198
        gbc.setState(0xfae, 0x3e6b, 0x9710, 0x2ae0, 0x2a6d, 0x90fc, 0x0, 0x1);
        gbc.writeMem(0xfae, { 0x31, 0x81, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4181);
        EXPECT(gbc.pc(), 0xfb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0199
        gbc.setState(0x4a5c, 0xa5f0, 0xb090, 0xa4ca, 0xee6f, 0x844, 0x1, 0x1);
        gbc.writeMem(0x4a5c, { 0x31, 0x56, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfd56);
        EXPECT(gbc.pc(), 0x4a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 019A
        gbc.setState(0x7015, 0xae9a, 0xf790, 0x40d9, 0x978d, 0xbef0, 0x0, 0x0);
        gbc.writeMem(0x7015, { 0x31, 0x2c, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x642c);
        EXPECT(gbc.pc(), 0x7018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 019B
        gbc.setState(0xe703, 0xdc5, 0x1e70, 0xca11, 0xd60f, 0x34fe, 0x0, 0x1);
        gbc.writeMem(0xe703, { 0x31, 0x38, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf538);
        EXPECT(gbc.pc(), 0xe706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe703), 0x31);
        EXPECT(gbc.readMem(0xe704), 0x38);
        EXPECT(gbc.readMem(0xe705), 0xf5);
        // 31 019C
        gbc.setState(0x94b, 0xbc5c, 0xcce0, 0x8608, 0x5d66, 0x4c24, 0x0, 0x1);
        gbc.writeMem(0x94b, { 0x31, 0xdf, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x15df);
        EXPECT(gbc.pc(), 0x94e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 019D
        gbc.setState(0xd6e7, 0x6868, 0xace0, 0xcc42, 0x7b88, 0x5bfb, 0x0, 0x0);
        gbc.writeMem(0xd6e7, { 0x31, 0xea, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6dea);
        EXPECT(gbc.pc(), 0xd6ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e7), 0x31);
        EXPECT(gbc.readMem(0xd6e8), 0xea);
        EXPECT(gbc.readMem(0xd6e9), 0x6d);
        // 31 019E
        gbc.setState(0xa7f0, 0xdc5b, 0x4f70, 0x6d29, 0xf7d6, 0xa64f, 0x0, 0x0);
        gbc.writeMem(0xa7f0, { 0x31, 0x1b, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe51b);
        EXPECT(gbc.pc(), 0xa7f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f0), 0x31);
        EXPECT(gbc.readMem(0xa7f1), 0x1b);
        EXPECT(gbc.readMem(0xa7f2), 0xe5);
        // 31 019F
        gbc.setState(0xcb71, 0x41ce, 0x140, 0xcea6, 0x9064, 0x597a, 0x1, 0x1);
        gbc.writeMem(0xcb71, { 0x31, 0x88, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7788);
        EXPECT(gbc.pc(), 0xcb74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb71), 0x31);
        EXPECT(gbc.readMem(0xcb72), 0x88);
        EXPECT(gbc.readMem(0xcb73), 0x77);
        // 31 01A0
        gbc.setState(0xd8db, 0xe06a, 0x3dd0, 0xfa30, 0xa3aa, 0x4017, 0x0, 0x1);
        gbc.writeMem(0xd8db, { 0x31, 0x9d, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x479d);
        EXPECT(gbc.pc(), 0xd8de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8db), 0x31);
        EXPECT(gbc.readMem(0xd8dc), 0x9d);
        EXPECT(gbc.readMem(0xd8dd), 0x47);
        // 31 01A1
        gbc.setState(0x3320, 0x67da, 0x24e0, 0xbbd5, 0x4d60, 0xcee7, 0x0, 0x0);
        gbc.writeMem(0x3320, { 0x31, 0xab, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x64ab);
        EXPECT(gbc.pc(), 0x3323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01A2
        gbc.setState(0x487, 0xb506, 0xf9a0, 0xd978, 0x175d, 0x14f8, 0x1, 0x1);
        gbc.writeMem(0x487, { 0x31, 0xac, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe0ac);
        EXPECT(gbc.pc(), 0x48a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01A3
        gbc.setState(0x9767, 0x2da8, 0xfc60, 0xe51c, 0xef02, 0x74d8, 0x1, 0x0);
        gbc.writeMem(0x9767, { 0x31, 0x62, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1262);
        EXPECT(gbc.pc(), 0x976a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9767), 0x31);
        EXPECT(gbc.readMem(0x9768), 0x62);
        EXPECT(gbc.readMem(0x9769), 0x12);
        // 31 01A4
        gbc.setState(0xdbd0, 0x516a, 0xa660, 0x92f1, 0xa32f, 0x1c94, 0x0, 0x1);
        gbc.writeMem(0xdbd0, { 0x31, 0x4e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x424e);
        EXPECT(gbc.pc(), 0xdbd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd0), 0x31);
        EXPECT(gbc.readMem(0xdbd1), 0x4e);
        EXPECT(gbc.readMem(0xdbd2), 0x42);
        // 31 01A5
        gbc.setState(0x3152, 0x442e, 0x78a0, 0x2924, 0xc4b0, 0x68e6, 0x1, 0x0);
        gbc.writeMem(0x3152, { 0x31, 0xba, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7fba);
        EXPECT(gbc.pc(), 0x3155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01A7
        gbc.setState(0x8314, 0x98e7, 0x40a0, 0x9665, 0x6ab7, 0x367a, 0x0, 0x0);
        gbc.writeMem(0x8314, { 0x31, 0x9b, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xda9b);
        EXPECT(gbc.pc(), 0x8317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8314), 0x31);
        EXPECT(gbc.readMem(0x8315), 0x9b);
        EXPECT(gbc.readMem(0x8316), 0xda);
        // 31 01A8
        gbc.setState(0xd121, 0xe5aa, 0xea40, 0xb751, 0xfac9, 0xc03a, 0x1, 0x0);
        gbc.writeMem(0xd121, { 0x31, 0x1b, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x131b);
        EXPECT(gbc.pc(), 0xd124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd121), 0x31);
        EXPECT(gbc.readMem(0xd122), 0x1b);
        EXPECT(gbc.readMem(0xd123), 0x13);
        // 31 01A9
        gbc.setState(0xa0fe, 0x4b0e, 0x8310, 0x1bee, 0xe83, 0x6bbf, 0x0, 0x0);
        gbc.writeMem(0xa0fe, { 0x31, 0x7, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9407);
        EXPECT(gbc.pc(), 0xa101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0fe), 0x31);
        EXPECT(gbc.readMem(0xa0ff), 0x7);
        EXPECT(gbc.readMem(0xa100), 0x94);
        // 31 01AA
        gbc.setState(0xae93, 0xa63a, 0x1200, 0xd67c, 0x8e54, 0xe72f, 0x0, 0x0);
        gbc.writeMem(0xae93, { 0x31, 0x1c, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x571c);
        EXPECT(gbc.pc(), 0xae96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae93), 0x31);
        EXPECT(gbc.readMem(0xae94), 0x1c);
        EXPECT(gbc.readMem(0xae95), 0x57);
        // 31 01AB
        gbc.setState(0x6fed, 0x7ae2, 0x9050, 0x57e4, 0xf545, 0x92ce, 0x0, 0x1);
        gbc.writeMem(0x6fed, { 0x31, 0x25, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfe25);
        EXPECT(gbc.pc(), 0x6ff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01AC
        gbc.setState(0xc23c, 0x31b0, 0x4040, 0x552f, 0x3764, 0xc56d, 0x0, 0x0);
        gbc.writeMem(0xc23c, { 0x31, 0x5a, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf45a);
        EXPECT(gbc.pc(), 0xc23f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc23c), 0x31);
        EXPECT(gbc.readMem(0xc23d), 0x5a);
        EXPECT(gbc.readMem(0xc23e), 0xf4);
        // 31 01AD
        gbc.setState(0x38e3, 0xa21e, 0x29d0, 0xa84b, 0xb896, 0xc383, 0x1, 0x1);
        gbc.writeMem(0x38e3, { 0x31, 0x1b, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7c1b);
        EXPECT(gbc.pc(), 0x38e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01AE
        gbc.setState(0x2354, 0xd846, 0x130, 0x45ed, 0x254f, 0xe771, 0x1, 0x1);
        gbc.writeMem(0x2354, { 0x31, 0x8d, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd68d);
        EXPECT(gbc.pc(), 0x2357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01AF
        gbc.setState(0x59a6, 0x9947, 0xcc00, 0xd03e, 0x5b09, 0x77de, 0x0, 0x1);
        gbc.writeMem(0x59a6, { 0x31, 0x89, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xda89);
        EXPECT(gbc.pc(), 0x59a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 01B0
        gbc.setState(0x8cd2, 0x6a3a, 0x4590, 0xc2c8, 0xa4f, 0xbd42, 0x1, 0x1);
        gbc.writeMem(0x8cd2, { 0x31, 0x38, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x838);
        EXPECT(gbc.pc(), 0x8cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd2), 0x31);
        EXPECT(gbc.readMem(0x8cd3), 0x38);
        EXPECT(gbc.readMem(0x8cd4), 0x8);
        // 31 01B1
        gbc.setState(0x488c, 0xf59c, 0x2ef0, 0xd1a9, 0x576d, 0xd29a, 0x0, 0x0);
        gbc.writeMem(0x488c, { 0x31, 0x76, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5376);
        EXPECT(gbc.pc(), 0x488f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01B2
        gbc.setState(0x8e09, 0x8cd6, 0x2710, 0x3449, 0xbb8d, 0x7a5d, 0x1, 0x0);
        gbc.writeMem(0x8e09, { 0x31, 0x7c, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xcb7c);
        EXPECT(gbc.pc(), 0x8e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e09), 0x31);
        EXPECT(gbc.readMem(0x8e0a), 0x7c);
        EXPECT(gbc.readMem(0x8e0b), 0xcb);
        // 31 01B3
        gbc.setState(0x4b64, 0x30b6, 0x2230, 0x6ca2, 0xadb5, 0xce3, 0x1, 0x0);
        gbc.writeMem(0x4b64, { 0x31, 0x5c, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x535c);
        EXPECT(gbc.pc(), 0x4b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01B4
        gbc.setState(0x29c0, 0x9dfc, 0x43a0, 0x44b5, 0xf7bd, 0xa219, 0x1, 0x0);
        gbc.writeMem(0x29c0, { 0x31, 0x49, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xce49);
        EXPECT(gbc.pc(), 0x29c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01B5
        gbc.setState(0xdb75, 0x2f43, 0x6580, 0xde64, 0xedaa, 0x57a1, 0x1, 0x1);
        gbc.writeMem(0xdb75, { 0x31, 0xf, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x160f);
        EXPECT(gbc.pc(), 0xdb78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb75), 0x31);
        EXPECT(gbc.readMem(0xdb76), 0xf);
        EXPECT(gbc.readMem(0xdb77), 0x16);
        // 31 01B6
        gbc.setState(0x7c21, 0xacbe, 0x2080, 0x235d, 0x579e, 0x5ec1, 0x1, 0x0);
        gbc.writeMem(0x7c21, { 0x31, 0x8e, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe98e);
        EXPECT(gbc.pc(), 0x7c24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 01B7
        gbc.setState(0xd5f8, 0xc8c2, 0xb330, 0x99b6, 0x50bb, 0x857a, 0x1, 0x1);
        gbc.writeMem(0xd5f8, { 0x31, 0x42, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3042);
        EXPECT(gbc.pc(), 0xd5fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f8), 0x31);
        EXPECT(gbc.readMem(0xd5f9), 0x42);
        EXPECT(gbc.readMem(0xd5fa), 0x30);
        // 31 01B8
        gbc.setState(0xe0e1, 0x2167, 0x49c0, 0x5f59, 0xc095, 0x5f92, 0x0, 0x1);
        gbc.writeMem(0xe0e1, { 0x31, 0x2e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x692e);
        EXPECT(gbc.pc(), 0xe0e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e1), 0x31);
        EXPECT(gbc.readMem(0xe0e2), 0x2e);
        EXPECT(gbc.readMem(0xe0e3), 0x69);
        // 31 01B9
        gbc.setState(0x42ab, 0x849b, 0xb3d0, 0x88b9, 0x3085, 0x6e52, 0x1, 0x0);
        gbc.writeMem(0x42ab, { 0x31, 0x61, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8161);
        EXPECT(gbc.pc(), 0x42ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01BA
        gbc.setState(0x5e39, 0xe575, 0x2e90, 0xdacd, 0x7f11, 0x7d30, 0x0, 0x0);
        gbc.writeMem(0x5e39, { 0x31, 0x20, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcb20);
        EXPECT(gbc.pc(), 0x5e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01BB
        gbc.setState(0x654e, 0x28d7, 0xb1b0, 0x77ba, 0x22f7, 0xb6e9, 0x1, 0x0);
        gbc.writeMem(0x654e, { 0x31, 0xda, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x52da);
        EXPECT(gbc.pc(), 0x6551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01BC
        gbc.setState(0xeafd, 0x7294, 0x54b0, 0x698, 0x801d, 0xed77, 0x1, 0x1);
        gbc.writeMem(0xeafd, { 0x31, 0xb3, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xebb3);
        EXPECT(gbc.pc(), 0xeb00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeafd), 0x31);
        EXPECT(gbc.readMem(0xeafe), 0xb3);
        EXPECT(gbc.readMem(0xeaff), 0xeb);
        // 31 01BD
        gbc.setState(0x988, 0x712d, 0xd3f0, 0xbf74, 0x2150, 0x1230, 0x1, 0x0);
        gbc.writeMem(0x988, { 0x31, 0xd9, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4ad9);
        EXPECT(gbc.pc(), 0x98b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01BE
        gbc.setState(0xd1bf, 0xe4c7, 0x6d30, 0xcc4c, 0xc38c, 0x6925, 0x0, 0x0);
        gbc.writeMem(0xd1bf, { 0x31, 0x67, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x267);
        EXPECT(gbc.pc(), 0xd1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1bf), 0x31);
        EXPECT(gbc.readMem(0xd1c0), 0x67);
        EXPECT(gbc.readMem(0xd1c1), 0x2);
        // 31 01BF
        gbc.setState(0xaa5b, 0x4cd6, 0x4b40, 0x6c15, 0xcaaa, 0x9c0, 0x1, 0x0);
        gbc.writeMem(0xaa5b, { 0x31, 0x4f, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x144f);
        EXPECT(gbc.pc(), 0xaa5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa5b), 0x31);
        EXPECT(gbc.readMem(0xaa5c), 0x4f);
        EXPECT(gbc.readMem(0xaa5d), 0x14);
        // 31 01C0
        gbc.setState(0x7ba5, 0x8de4, 0x9e10, 0x3cf6, 0x5aec, 0xc1db, 0x0, 0x0);
        gbc.writeMem(0x7ba5, { 0x31, 0xf, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x390f);
        EXPECT(gbc.pc(), 0x7ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01C1
        gbc.setState(0x51a5, 0x9b5e, 0xce90, 0xfc3, 0x88f6, 0x6124, 0x0, 0x0);
        gbc.writeMem(0x51a5, { 0x31, 0x5b, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc35b);
        EXPECT(gbc.pc(), 0x51a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01C2
        gbc.setState(0x8e7e, 0x5ba, 0x98b0, 0x940d, 0xa8f2, 0x17f0, 0x0, 0x1);
        gbc.writeMem(0x8e7e, { 0x31, 0x2, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4202);
        EXPECT(gbc.pc(), 0x8e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7e), 0x31);
        EXPECT(gbc.readMem(0x8e7f), 0x2);
        EXPECT(gbc.readMem(0x8e80), 0x42);
        // 31 01C3
        gbc.setState(0x6dc, 0x44aa, 0x1490, 0xeda4, 0x9c27, 0xcdc5, 0x1, 0x1);
        gbc.writeMem(0x6dc, { 0x31, 0x48, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf648);
        EXPECT(gbc.pc(), 0x6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01C4
        gbc.setState(0x9e7d, 0x5090, 0x1500, 0xc713, 0x3491, 0xa601, 0x0, 0x1);
        gbc.writeMem(0x9e7d, { 0x31, 0x52, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa652);
        EXPECT(gbc.pc(), 0x9e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e7d), 0x31);
        EXPECT(gbc.readMem(0x9e7e), 0x52);
        EXPECT(gbc.readMem(0x9e7f), 0xa6);
        // 31 01C5
        gbc.setState(0xdc39, 0xd07e, 0x7bb0, 0xac15, 0xff86, 0x97e1, 0x0, 0x1);
        gbc.writeMem(0xdc39, { 0x31, 0x7b, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd87b);
        EXPECT(gbc.pc(), 0xdc3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc39), 0x31);
        EXPECT(gbc.readMem(0xdc3a), 0x7b);
        EXPECT(gbc.readMem(0xdc3b), 0xd8);
        // 31 01C6
        gbc.setState(0x1003, 0xc314, 0xb260, 0x834f, 0x9ea9, 0x2d54, 0x0, 0x1);
        gbc.writeMem(0x1003, { 0x31, 0x2d, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x62d);
        EXPECT(gbc.pc(), 0x1006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01C7
        gbc.setState(0x83af, 0x15a6, 0xe0f0, 0x5197, 0x3da0, 0x80b3, 0x1, 0x0);
        gbc.writeMem(0x83af, { 0x31, 0x74, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7874);
        EXPECT(gbc.pc(), 0x83b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83af), 0x31);
        EXPECT(gbc.readMem(0x83b0), 0x74);
        EXPECT(gbc.readMem(0x83b1), 0x78);
        // 31 01C8
        gbc.setState(0x3467, 0x1771, 0x24d0, 0x1348, 0xd3d0, 0xe656, 0x1, 0x0);
        gbc.writeMem(0x3467, { 0x31, 0x5a, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x435a);
        EXPECT(gbc.pc(), 0x346a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01C9
        gbc.setState(0x1e1e, 0xf9b5, 0x860, 0x4611, 0x1e60, 0x2e11, 0x1, 0x1);
        gbc.writeMem(0x1e1e, { 0x31, 0x3f, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd43f);
        EXPECT(gbc.pc(), 0x1e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01CA
        gbc.setState(0x2e5e, 0x7edb, 0xdf0, 0x8d46, 0xa829, 0xb432, 0x0, 0x1);
        gbc.writeMem(0x2e5e, { 0x31, 0xea, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc0ea);
        EXPECT(gbc.pc(), 0x2e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01CB
        gbc.setState(0xa982, 0x1861, 0x3050, 0xbbfe, 0x8991, 0x90b5, 0x1, 0x1);
        gbc.writeMem(0xa982, { 0x31, 0x79, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd879);
        EXPECT(gbc.pc(), 0xa985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa982), 0x31);
        EXPECT(gbc.readMem(0xa983), 0x79);
        EXPECT(gbc.readMem(0xa984), 0xd8);
        // 31 01CC
        gbc.setState(0x28aa, 0xb707, 0x4510, 0xa628, 0x1c59, 0xfb63, 0x0, 0x0);
        gbc.writeMem(0x28aa, { 0x31, 0x66, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x466);
        EXPECT(gbc.pc(), 0x28ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01CD
        gbc.setState(0xce76, 0x3a87, 0x7a70, 0xd3f5, 0x1775, 0x20db, 0x1, 0x1);
        gbc.writeMem(0xce76, { 0x31, 0xd, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x310d);
        EXPECT(gbc.pc(), 0xce79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce76), 0x31);
        EXPECT(gbc.readMem(0xce77), 0xd);
        EXPECT(gbc.readMem(0xce78), 0x31);
        // 31 01CE
        gbc.setState(0x17c0, 0x90d3, 0x6a00, 0xdf97, 0xc170, 0x4f5a, 0x1, 0x1);
        gbc.writeMem(0x17c0, { 0x31, 0xf3, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x44f3);
        EXPECT(gbc.pc(), 0x17c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 01CF
        gbc.setState(0x95cf, 0x1a9e, 0x9090, 0x8df0, 0x5af1, 0x2cf4, 0x1, 0x0);
        gbc.writeMem(0x95cf, { 0x31, 0xda, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9bda);
        EXPECT(gbc.pc(), 0x95d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95cf), 0x31);
        EXPECT(gbc.readMem(0x95d0), 0xda);
        EXPECT(gbc.readMem(0x95d1), 0x9b);
        // 31 01D0
        gbc.setState(0xbab4, 0x80a7, 0xd120, 0x582d, 0x7437, 0x2979, 0x1, 0x1);
        gbc.writeMem(0xbab4, { 0x31, 0xc1, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6ac1);
        EXPECT(gbc.pc(), 0xbab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab4), 0x31);
        EXPECT(gbc.readMem(0xbab5), 0xc1);
        EXPECT(gbc.readMem(0xbab6), 0x6a);
        // 31 01D1
        gbc.setState(0xef42, 0xbcf0, 0x8380, 0x4c6c, 0xd12, 0x86e3, 0x0, 0x1);
        gbc.writeMem(0xef42, { 0x31, 0xd0, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1d0);
        EXPECT(gbc.pc(), 0xef45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef42), 0x31);
        EXPECT(gbc.readMem(0xef43), 0xd0);
        EXPECT(gbc.readMem(0xef44), 0x1);
        // 31 01D2
        gbc.setState(0x3b89, 0xa683, 0x9520, 0xa421, 0xf62e, 0xc568, 0x0, 0x0);
        gbc.writeMem(0x3b89, { 0x31, 0x28, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7b28);
        EXPECT(gbc.pc(), 0x3b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01D4
        gbc.setState(0x8420, 0xe1b7, 0x5a00, 0x8d2a, 0x16dd, 0xb668, 0x1, 0x1);
        gbc.writeMem(0x8420, { 0x31, 0x8b, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x388b);
        EXPECT(gbc.pc(), 0x8423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8420), 0x31);
        EXPECT(gbc.readMem(0x8421), 0x8b);
        EXPECT(gbc.readMem(0x8422), 0x38);
        // 31 01D5
        gbc.setState(0xc16c, 0x4707, 0x2900, 0x89a0, 0x8a13, 0xad8, 0x0, 0x0);
        gbc.writeMem(0xc16c, { 0x31, 0x9f, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x979f);
        EXPECT(gbc.pc(), 0xc16f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc16c), 0x31);
        EXPECT(gbc.readMem(0xc16d), 0x9f);
        EXPECT(gbc.readMem(0xc16e), 0x97);
        // 31 01D6
        gbc.setState(0xe487, 0xba7d, 0x6f50, 0x22eb, 0x1ea9, 0xe00, 0x1, 0x1);
        gbc.writeMem(0xe487, { 0x31, 0x12, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9212);
        EXPECT(gbc.pc(), 0xe48a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe487), 0x31);
        EXPECT(gbc.readMem(0xe488), 0x12);
        EXPECT(gbc.readMem(0xe489), 0x92);
        // 31 01D7
        gbc.setState(0x680b, 0x4356, 0x3530, 0xdc45, 0x7d73, 0xc11d, 0x1, 0x0);
        gbc.writeMem(0x680b, { 0x31, 0x3b, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8c3b);
        EXPECT(gbc.pc(), 0x680e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01D8
        gbc.setState(0x56f7, 0xbfdb, 0xc760, 0x3e3b, 0x606b, 0x3712, 0x0, 0x0);
        gbc.writeMem(0x56f7, { 0x31, 0x48, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9448);
        EXPECT(gbc.pc(), 0x56fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01D9
        gbc.setState(0x88d1, 0x2481, 0x96f0, 0xbe09, 0xb53d, 0xac12, 0x1, 0x0);
        gbc.writeMem(0x88d1, { 0x31, 0xad, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdad);
        EXPECT(gbc.pc(), 0x88d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d1), 0x31);
        EXPECT(gbc.readMem(0x88d2), 0xad);
        EXPECT(gbc.readMem(0x88d3), 0xd);
        // 31 01DB
        gbc.setState(0x8856, 0xcf31, 0x8920, 0x378c, 0xab46, 0xe2eb, 0x0, 0x0);
        gbc.writeMem(0x8856, { 0x31, 0x9f, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb69f);
        EXPECT(gbc.pc(), 0x8859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8856), 0x31);
        EXPECT(gbc.readMem(0x8857), 0x9f);
        EXPECT(gbc.readMem(0x8858), 0xb6);
        // 31 01DC
        gbc.setState(0x853d, 0x4e84, 0xabe0, 0xbd56, 0x7836, 0x836a, 0x0, 0x1);
        gbc.writeMem(0x853d, { 0x31, 0x30, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5930);
        EXPECT(gbc.pc(), 0x8540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x853d), 0x31);
        EXPECT(gbc.readMem(0x853e), 0x30);
        EXPECT(gbc.readMem(0x853f), 0x59);
        // 31 01DD
        gbc.setState(0x7b39, 0x7099, 0x7520, 0x8567, 0x8c3, 0x5f94, 0x0, 0x0);
        gbc.writeMem(0x7b39, { 0x31, 0x80, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2180);
        EXPECT(gbc.pc(), 0x7b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01DE
        gbc.setState(0x5eea, 0x64b5, 0x1090, 0x48c3, 0x70f0, 0x1aa, 0x0, 0x1);
        gbc.writeMem(0x5eea, { 0x31, 0xc0, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcdc0);
        EXPECT(gbc.pc(), 0x5eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01DF
        gbc.setState(0x3112, 0x34b6, 0x3890, 0x1527, 0x3c09, 0xd5ac, 0x0, 0x0);
        gbc.writeMem(0x3112, { 0x31, 0x48, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2848);
        EXPECT(gbc.pc(), 0x3115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01E0
        gbc.setState(0xc40a, 0xd4a0, 0x7e90, 0x3d2, 0xd105, 0xab44, 0x1, 0x1);
        gbc.writeMem(0xc40a, { 0x31, 0x70, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x770);
        EXPECT(gbc.pc(), 0xc40d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc40a), 0x31);
        EXPECT(gbc.readMem(0xc40b), 0x70);
        EXPECT(gbc.readMem(0xc40c), 0x7);
        // 31 01E2
        gbc.setState(0xec19, 0x75be, 0xfd70, 0x43d1, 0x5ede, 0x509f, 0x0, 0x1);
        gbc.writeMem(0xec19, { 0x31, 0x30, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8730);
        EXPECT(gbc.pc(), 0xec1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec19), 0x31);
        EXPECT(gbc.readMem(0xec1a), 0x30);
        EXPECT(gbc.readMem(0xec1b), 0x87);
        // 31 01E3
        gbc.setState(0x65cf, 0xc914, 0xc630, 0xb27e, 0xe569, 0xda7f, 0x0, 0x0);
        gbc.writeMem(0x65cf, { 0x31, 0x22, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9c22);
        EXPECT(gbc.pc(), 0x65d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01E4
        gbc.setState(0x280b, 0x18b1, 0xb40, 0x7378, 0xf81e, 0xf009, 0x0, 0x1);
        gbc.writeMem(0x280b, { 0x31, 0x59, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3859);
        EXPECT(gbc.pc(), 0x280e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 01E5
        gbc.setState(0xe481, 0x30bf, 0x8650, 0xd828, 0x4c9, 0x148f, 0x0, 0x0);
        gbc.writeMem(0xe481, { 0x31, 0x2d, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xde2d);
        EXPECT(gbc.pc(), 0xe484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe481), 0x31);
        EXPECT(gbc.readMem(0xe482), 0x2d);
        EXPECT(gbc.readMem(0xe483), 0xde);
        // 31 01E6
        gbc.setState(0xe088, 0x89c9, 0xfa40, 0xef9d, 0x3638, 0x8e92, 0x1, 0x0);
        gbc.writeMem(0xe088, { 0x31, 0xe2, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5ce2);
        EXPECT(gbc.pc(), 0xe08b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe088), 0x31);
        EXPECT(gbc.readMem(0xe089), 0xe2);
        EXPECT(gbc.readMem(0xe08a), 0x5c);
        // 31 01E7
        gbc.setState(0x2ade, 0x12d6, 0xb2c0, 0x4d, 0x8af5, 0x330, 0x0, 0x1);
        gbc.writeMem(0x2ade, { 0x31, 0x2a, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfc2a);
        EXPECT(gbc.pc(), 0x2ae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 01E8
        gbc.setState(0xd570, 0xc8cb, 0xd310, 0x8eec, 0x5278, 0x2522, 0x1, 0x1);
        gbc.writeMem(0xd570, { 0x31, 0xb5, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3bb5);
        EXPECT(gbc.pc(), 0xd573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd570), 0x31);
        EXPECT(gbc.readMem(0xd571), 0xb5);
        EXPECT(gbc.readMem(0xd572), 0x3b);
        // 31 01E9
        gbc.setState(0xc91, 0x5b3c, 0x6450, 0xfb1d, 0xcff3, 0x757a, 0x0, 0x0);
        gbc.writeMem(0xc91, { 0x31, 0x1a, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x71a);
        EXPECT(gbc.pc(), 0xc94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01EA
        gbc.setState(0xd6f5, 0x628a, 0x43d0, 0x48dd, 0x7e39, 0xcddc, 0x1, 0x0);
        gbc.writeMem(0xd6f5, { 0x31, 0xeb, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x18eb);
        EXPECT(gbc.pc(), 0xd6f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f5), 0x31);
        EXPECT(gbc.readMem(0xd6f6), 0xeb);
        EXPECT(gbc.readMem(0xd6f7), 0x18);
        // 31 01EB
        gbc.setState(0x6fd1, 0xc262, 0x8300, 0x337, 0x755f, 0x28d5, 0x0, 0x0);
        gbc.writeMem(0x6fd1, { 0x31, 0x1d, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xce1d);
        EXPECT(gbc.pc(), 0x6fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 01EC
        gbc.setState(0xdb86, 0x1b40, 0xef10, 0x9ba5, 0x7e8a, 0xc026, 0x0, 0x1);
        gbc.writeMem(0xdb86, { 0x31, 0x3e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcc3e);
        EXPECT(gbc.pc(), 0xdb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb86), 0x31);
        EXPECT(gbc.readMem(0xdb87), 0x3e);
        EXPECT(gbc.readMem(0xdb88), 0xcc);
        // 31 01ED
        gbc.setState(0x65c3, 0xaef5, 0xe8d0, 0x35c8, 0x18dc, 0xfa8f, 0x1, 0x0);
        gbc.writeMem(0x65c3, { 0x31, 0xa1, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4ea1);
        EXPECT(gbc.pc(), 0x65c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01EE
        gbc.setState(0x3e7e, 0x8191, 0x97a0, 0x7513, 0x4c39, 0x176e, 0x1, 0x0);
        gbc.writeMem(0x3e7e, { 0x31, 0x2b, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe2b);
        EXPECT(gbc.pc(), 0x3e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01EF
        gbc.setState(0x7574, 0x7269, 0x5040, 0xd408, 0x16e1, 0x5c46, 0x0, 0x0);
        gbc.writeMem(0x7574, { 0x31, 0x12, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8c12);
        EXPECT(gbc.pc(), 0x7577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 01F0
        gbc.setState(0x2f51, 0xc519, 0xbf60, 0x5f40, 0xcac8, 0x16ed, 0x1, 0x0);
        gbc.writeMem(0x2f51, { 0x31, 0x1c, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb11c);
        EXPECT(gbc.pc(), 0x2f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01F1
        gbc.setState(0x78b8, 0x9893, 0x9460, 0xc08b, 0x3499, 0x1d1f, 0x1, 0x0);
        gbc.writeMem(0x78b8, { 0x31, 0xa3, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x72a3);
        EXPECT(gbc.pc(), 0x78bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01F2
        gbc.setState(0xa430, 0xfb76, 0xfd20, 0xa84, 0x17ef, 0x2e15, 0x1, 0x0);
        gbc.writeMem(0xa430, { 0x31, 0xbb, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf4bb);
        EXPECT(gbc.pc(), 0xa433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa430), 0x31);
        EXPECT(gbc.readMem(0xa431), 0xbb);
        EXPECT(gbc.readMem(0xa432), 0xf4);
        // 31 01F3
        gbc.setState(0x8115, 0x7ee9, 0x210, 0x880f, 0x1c8, 0xe3d1, 0x1, 0x0);
        gbc.writeMem(0x8115, { 0x31, 0xe0, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1ce0);
        EXPECT(gbc.pc(), 0x8118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8115), 0x31);
        EXPECT(gbc.readMem(0x8116), 0xe0);
        EXPECT(gbc.readMem(0x8117), 0x1c);
        // 31 01F4
        gbc.setState(0x5e25, 0x695a, 0xddb0, 0x3f4a, 0x1279, 0x50fb, 0x1, 0x1);
        gbc.writeMem(0x5e25, { 0x31, 0x63, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa363);
        EXPECT(gbc.pc(), 0x5e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01F5
        gbc.setState(0x2922, 0x8923, 0x85e0, 0xa600, 0x5084, 0xa654, 0x0, 0x0);
        gbc.writeMem(0x2922, { 0x31, 0xdc, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x71dc);
        EXPECT(gbc.pc(), 0x2925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01F6
        gbc.setState(0x53da, 0x404a, 0x4f90, 0x968c, 0xe8a0, 0xcaa0, 0x0, 0x1);
        gbc.writeMem(0x53da, { 0x31, 0x19, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8219);
        EXPECT(gbc.pc(), 0x53dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01F7
        gbc.setState(0x3331, 0x1008, 0xea30, 0xd8d1, 0x389c, 0xe46e, 0x0, 0x1);
        gbc.writeMem(0x3331, { 0x31, 0xef, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x67ef);
        EXPECT(gbc.pc(), 0x3334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01F8
        gbc.setState(0x263d, 0x27a0, 0xa710, 0x6e2f, 0x87b7, 0xde47, 0x0, 0x0);
        gbc.writeMem(0x263d, { 0x31, 0xe6, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x79e6);
        EXPECT(gbc.pc(), 0x2640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01F9
        gbc.setState(0xbf7e, 0xf12b, 0x2190, 0x3f5d, 0x8ca3, 0x7562, 0x1, 0x1);
        gbc.writeMem(0xbf7e, { 0x31, 0x41, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8c41);
        EXPECT(gbc.pc(), 0xbf81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf7e), 0x31);
        EXPECT(gbc.readMem(0xbf7f), 0x41);
        EXPECT(gbc.readMem(0xbf80), 0x8c);
        // 31 01FA
        gbc.setState(0x1929, 0x26d1, 0x110, 0x4ce2, 0x7789, 0x1102, 0x1, 0x0);
        gbc.writeMem(0x1929, { 0x31, 0xb0, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa2b0);
        EXPECT(gbc.pc(), 0x192c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 01FB
        gbc.setState(0x19c2, 0x7640, 0xd9f0, 0x4b51, 0x39d, 0x66f6, 0x0, 0x1);
        gbc.writeMem(0x19c2, { 0x31, 0xde, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x92de);
        EXPECT(gbc.pc(), 0x19c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01FC
        gbc.setState(0x60d5, 0x26fc, 0xc0c0, 0xfae3, 0xe58c, 0xdf90, 0x0, 0x0);
        gbc.writeMem(0x60d5, { 0x31, 0xbe, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x21be);
        EXPECT(gbc.pc(), 0x60d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 01FD
        gbc.setState(0x1478, 0x6bc2, 0xd120, 0x924f, 0x9692, 0x5538, 0x1, 0x0);
        gbc.writeMem(0x1478, { 0x31, 0x4f, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5f4f);
        EXPECT(gbc.pc(), 0x147b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 01FE
        gbc.setState(0x2757, 0x41ee, 0xcfb0, 0xabc, 0x2d38, 0x159c, 0x1, 0x1);
        gbc.writeMem(0x2757, { 0x31, 0x5d, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x505d);
        EXPECT(gbc.pc(), 0x275a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 01FF
        gbc.setState(0x6b46, 0x4242, 0xa50, 0x303a, 0x1bd9, 0xcebb, 0x1, 0x0);
        gbc.writeMem(0x6b46, { 0x31, 0x1f, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbf1f);
        EXPECT(gbc.pc(), 0x6b49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0201
        gbc.setState(0x3c2f, 0x28a6, 0xe490, 0xaf05, 0x917a, 0x9ead, 0x0, 0x0);
        gbc.writeMem(0x3c2f, { 0x31, 0xe8, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8ce8);
        EXPECT(gbc.pc(), 0x3c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0202
        gbc.setState(0x7368, 0xe258, 0x6d90, 0xfa5d, 0xac89, 0xa57a, 0x0, 0x1);
        gbc.writeMem(0x7368, { 0x31, 0x82, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3c82);
        EXPECT(gbc.pc(), 0x736b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0203
        gbc.setState(0x9ccc, 0x7ea7, 0xa240, 0xb39a, 0xf9a, 0xc91, 0x1, 0x0);
        gbc.writeMem(0x9ccc, { 0x31, 0xd8, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1ed8);
        EXPECT(gbc.pc(), 0x9ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ccc), 0x31);
        EXPECT(gbc.readMem(0x9ccd), 0xd8);
        EXPECT(gbc.readMem(0x9cce), 0x1e);
        // 31 0204
        gbc.setState(0xc088, 0xb36a, 0xe9f0, 0x9657, 0xbb4b, 0xe69e, 0x0, 0x0);
        gbc.writeMem(0xc088, { 0x31, 0x31, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1131);
        EXPECT(gbc.pc(), 0xc08b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc088), 0x31);
        EXPECT(gbc.readMem(0xc089), 0x31);
        EXPECT(gbc.readMem(0xc08a), 0x11);
        // 31 0205
        gbc.setState(0x818b, 0xf7de, 0xf070, 0xfb22, 0x9040, 0xf597, 0x0, 0x0);
        gbc.writeMem(0x818b, { 0x31, 0x93, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf493);
        EXPECT(gbc.pc(), 0x818e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x818b), 0x31);
        EXPECT(gbc.readMem(0x818c), 0x93);
        EXPECT(gbc.readMem(0x818d), 0xf4);
        // 31 0206
        gbc.setState(0x8187, 0x5216, 0xcd40, 0x4cd0, 0xbb3b, 0xa7ee, 0x1, 0x0);
        gbc.writeMem(0x8187, { 0x31, 0xc5, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x11c5);
        EXPECT(gbc.pc(), 0x818a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8187), 0x31);
        EXPECT(gbc.readMem(0x8188), 0xc5);
        EXPECT(gbc.readMem(0x8189), 0x11);
        // 31 0207
        gbc.setState(0x67d6, 0xf036, 0xcc0, 0x71ec, 0xa4b0, 0x2168, 0x1, 0x1);
        gbc.writeMem(0x67d6, { 0x31, 0x94, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc094);
        EXPECT(gbc.pc(), 0x67d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0208
        gbc.setState(0x68af, 0xeae6, 0x4650, 0xbdd2, 0xd108, 0x5092, 0x0, 0x1);
        gbc.writeMem(0x68af, { 0x31, 0xcc, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x79cc);
        EXPECT(gbc.pc(), 0x68b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0209
        gbc.setState(0x5392, 0x6800, 0xa710, 0x1285, 0x484a, 0x6d31, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0x31, 0xf6, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa1f6);
        EXPECT(gbc.pc(), 0x5395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 020A
        gbc.setState(0x43aa, 0x8893, 0xfa40, 0xb348, 0xabb3, 0xca48, 0x1, 0x0);
        gbc.writeMem(0x43aa, { 0x31, 0xdb, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x76db);
        EXPECT(gbc.pc(), 0x43ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 020B
        gbc.setState(0x2ba6, 0xf4e, 0xaec0, 0xd618, 0xfdca, 0xac5c, 0x1, 0x0);
        gbc.writeMem(0x2ba6, { 0x31, 0x95, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb995);
        EXPECT(gbc.pc(), 0x2ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 020C
        gbc.setState(0xda09, 0xdeee, 0xefb0, 0xaaa3, 0x77ee, 0xeb4b, 0x1, 0x0);
        gbc.writeMem(0xda09, { 0x31, 0xbb, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x38bb);
        EXPECT(gbc.pc(), 0xda0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda09), 0x31);
        EXPECT(gbc.readMem(0xda0a), 0xbb);
        EXPECT(gbc.readMem(0xda0b), 0x38);
        // 31 020D
        gbc.setState(0x93b1, 0x83d8, 0x6ce0, 0x30ae, 0x76e6, 0xa425, 0x1, 0x0);
        gbc.writeMem(0x93b1, { 0x31, 0xe, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x380e);
        EXPECT(gbc.pc(), 0x93b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b1), 0x31);
        EXPECT(gbc.readMem(0x93b2), 0xe);
        EXPECT(gbc.readMem(0x93b3), 0x38);
        // 31 020E
        gbc.setState(0xd38, 0xfe37, 0xfe30, 0x827d, 0x761d, 0xdcf6, 0x1, 0x0);
        gbc.writeMem(0xd38, { 0x31, 0x5e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x25e);
        EXPECT(gbc.pc(), 0xd3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 020F
        gbc.setState(0xb55e, 0x2e1f, 0xa5c0, 0xe85b, 0x65c5, 0x410d, 0x1, 0x1);
        gbc.writeMem(0xb55e, { 0x31, 0x2, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf502);
        EXPECT(gbc.pc(), 0xb561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb55e), 0x31);
        EXPECT(gbc.readMem(0xb55f), 0x2);
        EXPECT(gbc.readMem(0xb560), 0xf5);
        // 31 0210
        gbc.setState(0xc44a, 0xc456, 0xd570, 0x6414, 0x726c, 0x31f9, 0x0, 0x0);
        gbc.writeMem(0xc44a, { 0x31, 0x4f, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xea4f);
        EXPECT(gbc.pc(), 0xc44d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc44a), 0x31);
        EXPECT(gbc.readMem(0xc44b), 0x4f);
        EXPECT(gbc.readMem(0xc44c), 0xea);
        // 31 0211
        gbc.setState(0x235c, 0x236b, 0xd1f0, 0xde00, 0x97b7, 0x203, 0x0, 0x1);
        gbc.writeMem(0x235c, { 0x31, 0x71, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8d71);
        EXPECT(gbc.pc(), 0x235f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0212
        gbc.setState(0xeae7, 0x9aac, 0xe890, 0x8f6b, 0x43aa, 0xb364, 0x1, 0x1);
        gbc.writeMem(0xeae7, { 0x31, 0x44, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xae44);
        EXPECT(gbc.pc(), 0xeaea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae7), 0x31);
        EXPECT(gbc.readMem(0xeae8), 0x44);
        EXPECT(gbc.readMem(0xeae9), 0xae);
        // 31 0213
        gbc.setState(0xc5bf, 0x735c, 0x51d0, 0xcec5, 0x9e5e, 0x7ec5, 0x0, 0x0);
        gbc.writeMem(0xc5bf, { 0x31, 0x4b, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc54b);
        EXPECT(gbc.pc(), 0xc5c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5bf), 0x31);
        EXPECT(gbc.readMem(0xc5c0), 0x4b);
        EXPECT(gbc.readMem(0xc5c1), 0xc5);
        // 31 0214
        gbc.setState(0xbab3, 0xe3b9, 0x6480, 0xe505, 0xf402, 0xb34f, 0x0, 0x1);
        gbc.writeMem(0xbab3, { 0x31, 0xfc, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc1fc);
        EXPECT(gbc.pc(), 0xbab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab3), 0x31);
        EXPECT(gbc.readMem(0xbab4), 0xfc);
        EXPECT(gbc.readMem(0xbab5), 0xc1);
        // 31 0215
        gbc.setState(0x44b, 0xadee, 0x1da0, 0xcd7a, 0xfea5, 0xdb37, 0x1, 0x0);
        gbc.writeMem(0x44b, { 0x31, 0xf0, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa5f0);
        EXPECT(gbc.pc(), 0x44e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0216
        gbc.setState(0x3cf9, 0x6935, 0xdd90, 0x18d3, 0x49af, 0xd4ab, 0x0, 0x1);
        gbc.writeMem(0x3cf9, { 0x31, 0xeb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4ceb);
        EXPECT(gbc.pc(), 0x3cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0217
        gbc.setState(0x301d, 0x53cc, 0x87b0, 0xa7a1, 0x25f8, 0xb594, 0x0, 0x1);
        gbc.writeMem(0x301d, { 0x31, 0x5, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa505);
        EXPECT(gbc.pc(), 0x3020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0218
        gbc.setState(0x3cc0, 0xb3ca, 0x36c0, 0xce53, 0x3040, 0xf492, 0x1, 0x1);
        gbc.writeMem(0x3cc0, { 0x31, 0xc0, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x12c0);
        EXPECT(gbc.pc(), 0x3cc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0219
        gbc.setState(0x3dc8, 0x8818, 0x39f0, 0xb23d, 0x50fe, 0xae62, 0x0, 0x1);
        gbc.writeMem(0x3dc8, { 0x31, 0xc0, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x54c0);
        EXPECT(gbc.pc(), 0x3dcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 021A
        gbc.setState(0xb39a, 0x2e4b, 0x520, 0xe6d7, 0xe4f6, 0xa9c4, 0x1, 0x0);
        gbc.writeMem(0xb39a, { 0x31, 0x4c, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7a4c);
        EXPECT(gbc.pc(), 0xb39d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb39a), 0x31);
        EXPECT(gbc.readMem(0xb39b), 0x4c);
        EXPECT(gbc.readMem(0xb39c), 0x7a);
        // 31 021B
        gbc.setState(0x9072, 0xce27, 0x4480, 0xee2f, 0xe0d4, 0xd507, 0x0, 0x1);
        gbc.writeMem(0x9072, { 0x31, 0xd0, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x99d0);
        EXPECT(gbc.pc(), 0x9075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9072), 0x31);
        EXPECT(gbc.readMem(0x9073), 0xd0);
        EXPECT(gbc.readMem(0x9074), 0x99);
        // 31 021D
        gbc.setState(0x3b0e, 0x4c71, 0xd800, 0x461c, 0x9ada, 0xb43e, 0x1, 0x0);
        gbc.writeMem(0x3b0e, { 0x31, 0x2c, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x822c);
        EXPECT(gbc.pc(), 0x3b11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 021E
        gbc.setState(0x5872, 0xefff, 0xeeb0, 0x84b0, 0x697c, 0x9d8b, 0x0, 0x1);
        gbc.writeMem(0x5872, { 0x31, 0xc4, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe0c4);
        EXPECT(gbc.pc(), 0x5875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 021F
        gbc.setState(0x1518, 0xb0e5, 0xd6a0, 0x45c0, 0xcf7, 0x5bb5, 0x0, 0x1);
        gbc.writeMem(0x1518, { 0x31, 0xda, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc8da);
        EXPECT(gbc.pc(), 0x151b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0220
        gbc.setState(0xef3f, 0x93b5, 0x6e0, 0xea9, 0xd31c, 0x8498, 0x1, 0x1);
        gbc.writeMem(0xef3f, { 0x31, 0xe1, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbde1);
        EXPECT(gbc.pc(), 0xef42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef3f), 0x31);
        EXPECT(gbc.readMem(0xef40), 0xe1);
        EXPECT(gbc.readMem(0xef41), 0xbd);
        // 31 0221
        gbc.setState(0x6c90, 0x6ef9, 0xf320, 0xbe54, 0xc69b, 0x1adf, 0x0, 0x0);
        gbc.writeMem(0x6c90, { 0x31, 0x37, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xba37);
        EXPECT(gbc.pc(), 0x6c93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0222
        gbc.setState(0x605b, 0xbcfe, 0x9c20, 0x8012, 0xa738, 0xf067, 0x1, 0x0);
        gbc.writeMem(0x605b, { 0x31, 0x66, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x966);
        EXPECT(gbc.pc(), 0x605e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0223
        gbc.setState(0x2deb, 0xf5d6, 0x54f0, 0xeb0f, 0x3c12, 0xcf3, 0x1, 0x0);
        gbc.writeMem(0x2deb, { 0x31, 0x2d, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x232d);
        EXPECT(gbc.pc(), 0x2dee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0224
        gbc.setState(0x8d06, 0x18fa, 0x33b0, 0x70f9, 0x5aaf, 0x8a15, 0x1, 0x0);
        gbc.writeMem(0x8d06, { 0x31, 0xb8, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x52b8);
        EXPECT(gbc.pc(), 0x8d09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d06), 0x31);
        EXPECT(gbc.readMem(0x8d07), 0xb8);
        EXPECT(gbc.readMem(0x8d08), 0x52);
        // 31 0225
        gbc.setState(0xe0cf, 0x2192, 0xaeb0, 0xaad2, 0xfb84, 0x7832, 0x0, 0x0);
        gbc.writeMem(0xe0cf, { 0x31, 0x38, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3138);
        EXPECT(gbc.pc(), 0xe0d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0cf), 0x31);
        EXPECT(gbc.readMem(0xe0d0), 0x38);
        EXPECT(gbc.readMem(0xe0d1), 0x31);
        // 31 0226
        gbc.setState(0xc596, 0x3f3c, 0xc790, 0xb5ec, 0x2b6, 0xba35, 0x1, 0x0);
        gbc.writeMem(0xc596, { 0x31, 0x47, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xdb47);
        EXPECT(gbc.pc(), 0xc599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc596), 0x31);
        EXPECT(gbc.readMem(0xc597), 0x47);
        EXPECT(gbc.readMem(0xc598), 0xdb);
        // 31 0227
        gbc.setState(0xead4, 0x25a0, 0x53c0, 0x974d, 0x7de0, 0x6a59, 0x0, 0x0);
        gbc.writeMem(0xead4, { 0x31, 0x65, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6565);
        EXPECT(gbc.pc(), 0xead7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead4), 0x31);
        EXPECT(gbc.readMem(0xead5), 0x65);
        EXPECT(gbc.readMem(0xead6), 0x65);
        // 31 0228
        gbc.setState(0xc20c, 0x7d15, 0xfca0, 0xb8fb, 0x9f19, 0xaf73, 0x1, 0x0);
        gbc.writeMem(0xc20c, { 0x31, 0xe5, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x33e5);
        EXPECT(gbc.pc(), 0xc20f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20c), 0x31);
        EXPECT(gbc.readMem(0xc20d), 0xe5);
        EXPECT(gbc.readMem(0xc20e), 0x33);
        // 31 0229
        gbc.setState(0x309b, 0x257c, 0xde60, 0x26bf, 0xb6bb, 0x5c7c, 0x0, 0x0);
        gbc.writeMem(0x309b, { 0x31, 0xd5, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2fd5);
        EXPECT(gbc.pc(), 0x309e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 022A
        gbc.setState(0xc24b, 0xb0e9, 0x4420, 0xc916, 0x2664, 0xe47, 0x1, 0x0);
        gbc.writeMem(0xc24b, { 0x31, 0xe6, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x57e6);
        EXPECT(gbc.pc(), 0xc24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc24b), 0x31);
        EXPECT(gbc.readMem(0xc24c), 0xe6);
        EXPECT(gbc.readMem(0xc24d), 0x57);
        // 31 022B
        gbc.setState(0x3c3, 0x2fb2, 0xf440, 0xaab8, 0x8388, 0x4a2a, 0x1, 0x1);
        gbc.writeMem(0x3c3, { 0x31, 0x4a, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb64a);
        EXPECT(gbc.pc(), 0x3c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 022C
        gbc.setState(0x66f8, 0x4e32, 0xf280, 0x1e8e, 0x7038, 0x40bf, 0x1, 0x1);
        gbc.writeMem(0x66f8, { 0x31, 0x90, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xde90);
        EXPECT(gbc.pc(), 0x66fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 022D
        gbc.setState(0x142a, 0x6f63, 0xa580, 0xe860, 0xf900, 0x4ced, 0x1, 0x1);
        gbc.writeMem(0x142a, { 0x31, 0xe1, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf7e1);
        EXPECT(gbc.pc(), 0x142d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 022E
        gbc.setState(0xbb5c, 0xdcd6, 0x77a0, 0x4f1a, 0x1474, 0x735c, 0x0, 0x1);
        gbc.writeMem(0xbb5c, { 0x31, 0x36, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5d36);
        EXPECT(gbc.pc(), 0xbb5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb5c), 0x31);
        EXPECT(gbc.readMem(0xbb5d), 0x36);
        EXPECT(gbc.readMem(0xbb5e), 0x5d);
        // 31 0230
        gbc.setState(0xb150, 0x79c, 0x9830, 0xdfc4, 0x77fa, 0x1a2f, 0x1, 0x1);
        gbc.writeMem(0xb150, { 0x31, 0x34, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc934);
        EXPECT(gbc.pc(), 0xb153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb150), 0x31);
        EXPECT(gbc.readMem(0xb151), 0x34);
        EXPECT(gbc.readMem(0xb152), 0xc9);
        // 31 0231
        gbc.setState(0x9496, 0xa013, 0x9500, 0xe7bb, 0x7dca, 0xb58e, 0x0, 0x0);
        gbc.writeMem(0x9496, { 0x31, 0x63, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2863);
        EXPECT(gbc.pc(), 0x9499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9496), 0x31);
        EXPECT(gbc.readMem(0x9497), 0x63);
        EXPECT(gbc.readMem(0x9498), 0x28);
        // 31 0232
        gbc.setState(0xaf86, 0x88fe, 0xe930, 0xd171, 0xaf82, 0xee52, 0x1, 0x0);
        gbc.writeMem(0xaf86, { 0x31, 0xaa, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x41aa);
        EXPECT(gbc.pc(), 0xaf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf86), 0x31);
        EXPECT(gbc.readMem(0xaf87), 0xaa);
        EXPECT(gbc.readMem(0xaf88), 0x41);
        // 31 0233
        gbc.setState(0x76b, 0xc9f4, 0x2e90, 0x649b, 0x90ad, 0xafa, 0x1, 0x0);
        gbc.writeMem(0x76b, { 0x31, 0x35, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5835);
        EXPECT(gbc.pc(), 0x76e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0234
        gbc.setState(0x1458, 0x61b, 0x5750, 0x95de, 0x2e41, 0x1f9a, 0x1, 0x1);
        gbc.writeMem(0x1458, { 0x31, 0x9a, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1a9a);
        EXPECT(gbc.pc(), 0x145b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0235
        gbc.setState(0x9b56, 0xb1aa, 0x20e0, 0x6ca4, 0x58f7, 0x21c4, 0x0, 0x1);
        gbc.writeMem(0x9b56, { 0x31, 0x9e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xaa9e);
        EXPECT(gbc.pc(), 0x9b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b56), 0x31);
        EXPECT(gbc.readMem(0x9b57), 0x9e);
        EXPECT(gbc.readMem(0x9b58), 0xaa);
        // 31 0236
        gbc.setState(0xdbd, 0xb6af, 0x3f10, 0xb0b2, 0x59c0, 0xafb0, 0x0, 0x0);
        gbc.writeMem(0xdbd, { 0x31, 0x4d, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3b4d);
        EXPECT(gbc.pc(), 0xdc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0237
        gbc.setState(0xb9a8, 0xe834, 0xb590, 0x6834, 0xa0ba, 0xc41a, 0x1, 0x0);
        gbc.writeMem(0xb9a8, { 0x31, 0xdf, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x44df);
        EXPECT(gbc.pc(), 0xb9ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a8), 0x31);
        EXPECT(gbc.readMem(0xb9a9), 0xdf);
        EXPECT(gbc.readMem(0xb9aa), 0x44);
        // 31 0238
        gbc.setState(0xb043, 0x960a, 0x9a90, 0xec9f, 0x9046, 0x15da, 0x0, 0x0);
        gbc.writeMem(0xb043, { 0x31, 0x7e, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5f7e);
        EXPECT(gbc.pc(), 0xb046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb043), 0x31);
        EXPECT(gbc.readMem(0xb044), 0x7e);
        EXPECT(gbc.readMem(0xb045), 0x5f);
        // 31 0239
        gbc.setState(0xa1dd, 0xf5b4, 0x5f0, 0xff26, 0x4340, 0xd6b7, 0x0, 0x0);
        gbc.writeMem(0xa1dd, { 0x31, 0x0, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7d00);
        EXPECT(gbc.pc(), 0xa1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1dd), 0x31);
        EXPECT(gbc.readMem(0xa1de), 0x0);
        EXPECT(gbc.readMem(0xa1df), 0x7d);
        // 31 023A
        gbc.setState(0xcfde, 0x41d5, 0x4c80, 0x2557, 0xca1a, 0xb32f, 0x0, 0x1);
        gbc.writeMem(0xcfde, { 0x31, 0xa1, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfea1);
        EXPECT(gbc.pc(), 0xcfe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfde), 0x31);
        EXPECT(gbc.readMem(0xcfdf), 0xa1);
        EXPECT(gbc.readMem(0xcfe0), 0xfe);
        // 31 023B
        gbc.setState(0xc028, 0x681e, 0x72f0, 0xcc0f, 0x5943, 0x3263, 0x1, 0x0);
        gbc.writeMem(0xc028, { 0x31, 0xda, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc7da);
        EXPECT(gbc.pc(), 0xc02b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc028), 0x31);
        EXPECT(gbc.readMem(0xc029), 0xda);
        EXPECT(gbc.readMem(0xc02a), 0xc7);
        // 31 023C
        gbc.setState(0x93d1, 0x3981, 0x2610, 0xa9ae, 0x4f83, 0x88e4, 0x1, 0x1);
        gbc.writeMem(0x93d1, { 0x31, 0xbb, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4ebb);
        EXPECT(gbc.pc(), 0x93d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93d1), 0x31);
        EXPECT(gbc.readMem(0x93d2), 0xbb);
        EXPECT(gbc.readMem(0x93d3), 0x4e);
        // 31 023D
        gbc.setState(0xc1b3, 0xf299, 0x82d0, 0x3171, 0xd1fe, 0x6c0e, 0x1, 0x1);
        gbc.writeMem(0xc1b3, { 0x31, 0x2a, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa22a);
        EXPECT(gbc.pc(), 0xc1b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b3), 0x31);
        EXPECT(gbc.readMem(0xc1b4), 0x2a);
        EXPECT(gbc.readMem(0xc1b5), 0xa2);
        // 31 023E
        gbc.setState(0x66e2, 0xe3e9, 0x7160, 0x119a, 0x3bc7, 0x7172, 0x0, 0x0);
        gbc.writeMem(0x66e2, { 0x31, 0x25, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd525);
        EXPECT(gbc.pc(), 0x66e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 023F
        gbc.setState(0xb543, 0x1796, 0x8d40, 0x816a, 0x6a3f, 0x1829, 0x1, 0x0);
        gbc.writeMem(0xb543, { 0x31, 0x24, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2824);
        EXPECT(gbc.pc(), 0xb546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb543), 0x31);
        EXPECT(gbc.readMem(0xb544), 0x24);
        EXPECT(gbc.readMem(0xb545), 0x28);
        // 31 0241
        gbc.setState(0x263f, 0x43b9, 0xdd20, 0xc96a, 0x7c5c, 0xe1ba, 0x1, 0x1);
        gbc.writeMem(0x263f, { 0x31, 0x2a, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x572a);
        EXPECT(gbc.pc(), 0x2642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0242
        gbc.setState(0x620e, 0x311e, 0xa0d0, 0x40b0, 0xf95b, 0xaedd, 0x1, 0x0);
        gbc.writeMem(0x620e, { 0x31, 0x4, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6104);
        EXPECT(gbc.pc(), 0x6211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0243
        gbc.setState(0x34fa, 0xb8f7, 0xf240, 0xd1d, 0x2312, 0x825b, 0x1, 0x1);
        gbc.writeMem(0x34fa, { 0x31, 0xeb, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x63eb);
        EXPECT(gbc.pc(), 0x34fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0244
        gbc.setState(0xcb52, 0x4fcf, 0xf2f0, 0x4159, 0xf77a, 0xe11c, 0x0, 0x1);
        gbc.writeMem(0xcb52, { 0x31, 0x53, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb353);
        EXPECT(gbc.pc(), 0xcb55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb52), 0x31);
        EXPECT(gbc.readMem(0xcb53), 0x53);
        EXPECT(gbc.readMem(0xcb54), 0xb3);
        // 31 0245
        gbc.setState(0xdd91, 0xe2c9, 0x8ef0, 0x170f, 0x338d, 0x2bd4, 0x1, 0x0);
        gbc.writeMem(0xdd91, { 0x31, 0xb2, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf0b2);
        EXPECT(gbc.pc(), 0xdd94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd91), 0x31);
        EXPECT(gbc.readMem(0xdd92), 0xb2);
        EXPECT(gbc.readMem(0xdd93), 0xf0);
        // 31 0247
        gbc.setState(0xcd9a, 0x5c3d, 0x8950, 0xbcbb, 0x47ae, 0x10b1, 0x0, 0x0);
        gbc.writeMem(0xcd9a, { 0x31, 0xc6, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9bc6);
        EXPECT(gbc.pc(), 0xcd9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd9a), 0x31);
        EXPECT(gbc.readMem(0xcd9b), 0xc6);
        EXPECT(gbc.readMem(0xcd9c), 0x9b);
        // 31 0248
        gbc.setState(0x2fe9, 0x3d67, 0x47f0, 0xeda2, 0x4148, 0x5a5a, 0x0, 0x0);
        gbc.writeMem(0x2fe9, { 0x31, 0x86, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3f86);
        EXPECT(gbc.pc(), 0x2fec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 024A
        gbc.setState(0xddce, 0x622f, 0x16d0, 0xfa62, 0x234e, 0x22ef, 0x1, 0x0);
        gbc.writeMem(0xddce, { 0x31, 0x6c, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xee6c);
        EXPECT(gbc.pc(), 0xddd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddce), 0x31);
        EXPECT(gbc.readMem(0xddcf), 0x6c);
        EXPECT(gbc.readMem(0xddd0), 0xee);
        // 31 024B
        gbc.setState(0xd269, 0x99a6, 0x6a20, 0x9ade, 0xf1e, 0x16cc, 0x0, 0x0);
        gbc.writeMem(0xd269, { 0x31, 0x71, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xca71);
        EXPECT(gbc.pc(), 0xd26c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd269), 0x31);
        EXPECT(gbc.readMem(0xd26a), 0x71);
        EXPECT(gbc.readMem(0xd26b), 0xca);
        // 31 024C
        gbc.setState(0x5b26, 0x2409, 0xf8f0, 0x8b8e, 0x1d4a, 0xf634, 0x1, 0x0);
        gbc.writeMem(0x5b26, { 0x31, 0xa1, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa0a1);
        EXPECT(gbc.pc(), 0x5b29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 024D
        gbc.setState(0x7cc1, 0x2cf4, 0xcf80, 0x8d11, 0xe2b, 0xb24f, 0x0, 0x0);
        gbc.writeMem(0x7cc1, { 0x31, 0xaa, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe4aa);
        EXPECT(gbc.pc(), 0x7cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 024E
        gbc.setState(0x58ce, 0x6b0e, 0xee30, 0xccdb, 0x227d, 0x50e5, 0x0, 0x1);
        gbc.writeMem(0x58ce, { 0x31, 0x9, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2609);
        EXPECT(gbc.pc(), 0x58d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 024F
        gbc.setState(0x64c, 0x247c, 0x8280, 0x152c, 0x73d3, 0x4efa, 0x1, 0x0);
        gbc.writeMem(0x64c, { 0x31, 0xc1, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb5c1);
        EXPECT(gbc.pc(), 0x64f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0250
        gbc.setState(0x7240, 0x3249, 0x2b00, 0x50bf, 0x22ad, 0x698d, 0x1, 0x1);
        gbc.writeMem(0x7240, { 0x31, 0x1d, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf51d);
        EXPECT(gbc.pc(), 0x7243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0251
        gbc.setState(0xa25d, 0xcdb8, 0xa2d0, 0x3994, 0x6f88, 0x5125, 0x0, 0x0);
        gbc.writeMem(0xa25d, { 0x31, 0x5b, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x575b);
        EXPECT(gbc.pc(), 0xa260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa25d), 0x31);
        EXPECT(gbc.readMem(0xa25e), 0x5b);
        EXPECT(gbc.readMem(0xa25f), 0x57);
        // 31 0252
        gbc.setState(0x119c, 0x8dd3, 0xb8a0, 0x7052, 0xb9b0, 0x3fbd, 0x0, 0x0);
        gbc.writeMem(0x119c, { 0x31, 0x22, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x322);
        EXPECT(gbc.pc(), 0x119f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0253
        gbc.setState(0xa360, 0xaab1, 0x6050, 0x4abb, 0xc92d, 0x7250, 0x1, 0x1);
        gbc.writeMem(0xa360, { 0x31, 0x8c, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x728c);
        EXPECT(gbc.pc(), 0xa363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa360), 0x31);
        EXPECT(gbc.readMem(0xa361), 0x8c);
        EXPECT(gbc.readMem(0xa362), 0x72);
        // 31 0255
        gbc.setState(0x9f96, 0xdc, 0x6700, 0xd7fd, 0x5ebd, 0x7c09, 0x1, 0x0);
        gbc.writeMem(0x9f96, { 0x31, 0x15, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa415);
        EXPECT(gbc.pc(), 0x9f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f96), 0x31);
        EXPECT(gbc.readMem(0x9f97), 0x15);
        EXPECT(gbc.readMem(0x9f98), 0xa4);
        // 31 0256
        gbc.setState(0xa4f2, 0x2454, 0xc2b0, 0xcdd6, 0xdd68, 0x37b5, 0x0, 0x0);
        gbc.writeMem(0xa4f2, { 0x31, 0xdc, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xafdc);
        EXPECT(gbc.pc(), 0xa4f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4f2), 0x31);
        EXPECT(gbc.readMem(0xa4f3), 0xdc);
        EXPECT(gbc.readMem(0xa4f4), 0xaf);
        // 31 0257
        gbc.setState(0x21b2, 0x3302, 0x3d90, 0x678, 0xec27, 0xae14, 0x1, 0x0);
        gbc.writeMem(0x21b2, { 0x31, 0xd9, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x28d9);
        EXPECT(gbc.pc(), 0x21b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0258
        gbc.setState(0xb7d3, 0xc3a8, 0x4e60, 0x1485, 0x25ce, 0x90b6, 0x1, 0x0);
        gbc.writeMem(0xb7d3, { 0x31, 0xb2, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x55b2);
        EXPECT(gbc.pc(), 0xb7d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d3), 0x31);
        EXPECT(gbc.readMem(0xb7d4), 0xb2);
        EXPECT(gbc.readMem(0xb7d5), 0x55);
        // 31 0259
        gbc.setState(0x2542, 0xc4aa, 0x240, 0x52f8, 0xa9dc, 0xd945, 0x1, 0x1);
        gbc.writeMem(0x2542, { 0x31, 0x93, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb893);
        EXPECT(gbc.pc(), 0x2545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 025A
        gbc.setState(0x94ed, 0xc668, 0xcde0, 0x4ba8, 0x9105, 0xf1c4, 0x0, 0x0);
        gbc.writeMem(0x94ed, { 0x31, 0x7a, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xde7a);
        EXPECT(gbc.pc(), 0x94f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ed), 0x31);
        EXPECT(gbc.readMem(0x94ee), 0x7a);
        EXPECT(gbc.readMem(0x94ef), 0xde);
        // 31 025B
        gbc.setState(0xe1e7, 0x8c91, 0x1360, 0x128f, 0x50c5, 0x27b6, 0x0, 0x0);
        gbc.writeMem(0xe1e7, { 0x31, 0xa4, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa5a4);
        EXPECT(gbc.pc(), 0xe1ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e7), 0x31);
        EXPECT(gbc.readMem(0xe1e8), 0xa4);
        EXPECT(gbc.readMem(0xe1e9), 0xa5);
        // 31 025C
        gbc.setState(0xa13f, 0x23c8, 0x3110, 0x446b, 0xd4c9, 0x9098, 0x0, 0x1);
        gbc.writeMem(0xa13f, { 0x31, 0xd3, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4ed3);
        EXPECT(gbc.pc(), 0xa142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa13f), 0x31);
        EXPECT(gbc.readMem(0xa140), 0xd3);
        EXPECT(gbc.readMem(0xa141), 0x4e);
        // 31 025D
        gbc.setState(0x1e6c, 0xad38, 0xb8f0, 0xa30d, 0xe2cd, 0x9503, 0x1, 0x0);
        gbc.writeMem(0x1e6c, { 0x31, 0x4d, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xaa4d);
        EXPECT(gbc.pc(), 0x1e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 025E
        gbc.setState(0x21f8, 0x1935, 0x2610, 0x2796, 0x8861, 0xf857, 0x1, 0x0);
        gbc.writeMem(0x21f8, { 0x31, 0x2f, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x532f);
        EXPECT(gbc.pc(), 0x21fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 025F
        gbc.setState(0xae6, 0xe3ab, 0x3290, 0xd6ae, 0x2e74, 0x1208, 0x0, 0x0);
        gbc.writeMem(0xae6, { 0x31, 0x2b, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xdb2b);
        EXPECT(gbc.pc(), 0xae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0260
        gbc.setState(0x7650, 0x6cc4, 0x8160, 0x66aa, 0x4d4c, 0x8299, 0x1, 0x1);
        gbc.writeMem(0x7650, { 0x31, 0x6c, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc6c);
        EXPECT(gbc.pc(), 0x7653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0261
        gbc.setState(0xda2d, 0xc1ef, 0xb90, 0xdcd1, 0x8a46, 0xb140, 0x1, 0x1);
        gbc.writeMem(0xda2d, { 0x31, 0x8, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbf08);
        EXPECT(gbc.pc(), 0xda30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda2d), 0x31);
        EXPECT(gbc.readMem(0xda2e), 0x8);
        EXPECT(gbc.readMem(0xda2f), 0xbf);
        // 31 0262
        gbc.setState(0x3fbc, 0xe9d0, 0x2280, 0xd2c4, 0x6806, 0xd29b, 0x0, 0x0);
        gbc.writeMem(0x3fbc, { 0x31, 0x24, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2224);
        EXPECT(gbc.pc(), 0x3fbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0263
        gbc.setState(0x2fe, 0xb92d, 0xa600, 0x1417, 0x422b, 0x5378, 0x0, 0x0);
        gbc.writeMem(0x2fe, { 0x31, 0x25, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6025);
        EXPECT(gbc.pc(), 0x301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0264
        gbc.setState(0xed0, 0xd0f6, 0x9430, 0x656d, 0x2281, 0xbcf9, 0x0, 0x1);
        gbc.writeMem(0xed0, { 0x31, 0xd7, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9dd7);
        EXPECT(gbc.pc(), 0xed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0265
        gbc.setState(0xd1ee, 0x22c3, 0xe080, 0xb9f0, 0xb1ef, 0x7d09, 0x0, 0x0);
        gbc.writeMem(0xd1ee, { 0x31, 0x86, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2386);
        EXPECT(gbc.pc(), 0xd1f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ee), 0x31);
        EXPECT(gbc.readMem(0xd1ef), 0x86);
        EXPECT(gbc.readMem(0xd1f0), 0x23);
        // 31 0266
        gbc.setState(0x5059, 0xca59, 0x39b0, 0x1262, 0x2ea8, 0xaca3, 0x1, 0x1);
        gbc.writeMem(0x5059, { 0x31, 0x15, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9c15);
        EXPECT(gbc.pc(), 0x505c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0267
        gbc.setState(0xa993, 0x9420, 0x2a0, 0x21a, 0xb425, 0x682e, 0x0, 0x1);
        gbc.writeMem(0xa993, { 0x31, 0xec, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x41ec);
        EXPECT(gbc.pc(), 0xa996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa993), 0x31);
        EXPECT(gbc.readMem(0xa994), 0xec);
        EXPECT(gbc.readMem(0xa995), 0x41);
        // 31 0268
        gbc.setState(0x20dc, 0xc37e, 0x1c90, 0x5cd4, 0x3e07, 0x44a5, 0x1, 0x0);
        gbc.writeMem(0x20dc, { 0x31, 0xb0, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x34b0);
        EXPECT(gbc.pc(), 0x20df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 026A
        gbc.setState(0xbf01, 0x2404, 0x9b10, 0x25b, 0xf40f, 0xde15, 0x0, 0x1);
        gbc.writeMem(0xbf01, { 0x31, 0x38, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xdc38);
        EXPECT(gbc.pc(), 0xbf04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf01), 0x31);
        EXPECT(gbc.readMem(0xbf02), 0x38);
        EXPECT(gbc.readMem(0xbf03), 0xdc);
        // 31 026B
        gbc.setState(0xefd1, 0xb04b, 0x3050, 0x2251, 0x980b, 0xa5a, 0x1, 0x0);
        gbc.writeMem(0xefd1, { 0x31, 0x8, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3a08);
        EXPECT(gbc.pc(), 0xefd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd1), 0x31);
        EXPECT(gbc.readMem(0xefd2), 0x8);
        EXPECT(gbc.readMem(0xefd3), 0x3a);
        // 31 026C
        gbc.setState(0xcb8b, 0x85df, 0x9670, 0x88d6, 0xb156, 0xbb7e, 0x0, 0x0);
        gbc.writeMem(0xcb8b, { 0x31, 0x14, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5714);
        EXPECT(gbc.pc(), 0xcb8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb8b), 0x31);
        EXPECT(gbc.readMem(0xcb8c), 0x14);
        EXPECT(gbc.readMem(0xcb8d), 0x57);
        // 31 026D
        gbc.setState(0x5639, 0x9b44, 0x56d0, 0x15e8, 0xad0f, 0x7c5f, 0x1, 0x0);
        gbc.writeMem(0x5639, { 0x31, 0x70, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc370);
        EXPECT(gbc.pc(), 0x563c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 026E
        gbc.setState(0x1f1a, 0xe1ed, 0xa560, 0xe6d8, 0x12b3, 0x26b1, 0x1, 0x1);
        gbc.writeMem(0x1f1a, { 0x31, 0x17, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2f17);
        EXPECT(gbc.pc(), 0x1f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 026F
        gbc.setState(0x54b4, 0x81a1, 0x66b0, 0x5fe2, 0xc11d, 0x5c0e, 0x0, 0x0);
        gbc.writeMem(0x54b4, { 0x31, 0x68, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa468);
        EXPECT(gbc.pc(), 0x54b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0270
        gbc.setState(0xaf38, 0x6aed, 0x80d0, 0xbf37, 0x9929, 0x3da7, 0x0, 0x0);
        gbc.writeMem(0xaf38, { 0x31, 0x73, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf73);
        EXPECT(gbc.pc(), 0xaf3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf38), 0x31);
        EXPECT(gbc.readMem(0xaf39), 0x73);
        EXPECT(gbc.readMem(0xaf3a), 0xf);
        // 31 0271
        gbc.setState(0x4091, 0x26ac, 0x5860, 0x3625, 0x737e, 0x49de, 0x0, 0x0);
        gbc.writeMem(0x4091, { 0x31, 0xc, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xde0c);
        EXPECT(gbc.pc(), 0x4094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0273
        gbc.setState(0x97bc, 0xf8bf, 0xf750, 0x69a2, 0x1c43, 0x415e, 0x1, 0x1);
        gbc.writeMem(0x97bc, { 0x31, 0x8b, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x528b);
        EXPECT(gbc.pc(), 0x97bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97bc), 0x31);
        EXPECT(gbc.readMem(0x97bd), 0x8b);
        EXPECT(gbc.readMem(0x97be), 0x52);
        // 31 0275
        gbc.setState(0x91af, 0x59d3, 0xf410, 0x16c7, 0xc975, 0x3860, 0x1, 0x0);
        gbc.writeMem(0x91af, { 0x31, 0xd0, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x19d0);
        EXPECT(gbc.pc(), 0x91b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91af), 0x31);
        EXPECT(gbc.readMem(0x91b0), 0xd0);
        EXPECT(gbc.readMem(0x91b1), 0x19);
        // 31 0276
        gbc.setState(0x64ed, 0x87a8, 0xf360, 0xf7d3, 0x237d, 0x97b0, 0x0, 0x0);
        gbc.writeMem(0x64ed, { 0x31, 0xe9, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x23e9);
        EXPECT(gbc.pc(), 0x64f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0277
        gbc.setState(0xe24e, 0x9dd7, 0x3650, 0xa135, 0x4280, 0xd182, 0x0, 0x1);
        gbc.writeMem(0xe24e, { 0x31, 0x2b, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe82b);
        EXPECT(gbc.pc(), 0xe251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24e), 0x31);
        EXPECT(gbc.readMem(0xe24f), 0x2b);
        EXPECT(gbc.readMem(0xe250), 0xe8);
        // 31 0278
        gbc.setState(0x5f9e, 0x4040, 0xb930, 0x44b5, 0x194d, 0xc2d1, 0x0, 0x0);
        gbc.writeMem(0x5f9e, { 0x31, 0x28, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xea28);
        EXPECT(gbc.pc(), 0x5fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0279
        gbc.setState(0xcad1, 0xda47, 0xaa90, 0x418e, 0x8d74, 0x7585, 0x1, 0x1);
        gbc.writeMem(0xcad1, { 0x31, 0x97, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe97);
        EXPECT(gbc.pc(), 0xcad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad1), 0x31);
        EXPECT(gbc.readMem(0xcad2), 0x97);
        EXPECT(gbc.readMem(0xcad3), 0xe);
        // 31 027A
        gbc.setState(0xca03, 0xce3a, 0x26b0, 0x2bae, 0xf953, 0x47a2, 0x1, 0x0);
        gbc.writeMem(0xca03, { 0x31, 0xd0, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x12d0);
        EXPECT(gbc.pc(), 0xca06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca03), 0x31);
        EXPECT(gbc.readMem(0xca04), 0xd0);
        EXPECT(gbc.readMem(0xca05), 0x12);
        // 31 027B
        gbc.setState(0xdd26, 0x8152, 0x68f0, 0xbe34, 0x41d2, 0x2ec2, 0x1, 0x1);
        gbc.writeMem(0xdd26, { 0x31, 0xf8, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xccf8);
        EXPECT(gbc.pc(), 0xdd29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd26), 0x31);
        EXPECT(gbc.readMem(0xdd27), 0xf8);
        EXPECT(gbc.readMem(0xdd28), 0xcc);
        // 31 027C
        gbc.setState(0x93e, 0x2ca7, 0x1b30, 0x37d5, 0xa60, 0xd8ed, 0x0, 0x0);
        gbc.writeMem(0x93e, { 0x31, 0x2f, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa42f);
        EXPECT(gbc.pc(), 0x941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 027D
        gbc.setState(0xe84d, 0x5865, 0x8d60, 0x98c4, 0xd411, 0xc3d6, 0x0, 0x0);
        gbc.writeMem(0xe84d, { 0x31, 0xd4, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xaed4);
        EXPECT(gbc.pc(), 0xe850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe84d), 0x31);
        EXPECT(gbc.readMem(0xe84e), 0xd4);
        EXPECT(gbc.readMem(0xe84f), 0xae);
        // 31 027E
        gbc.setState(0x5413, 0x2291, 0x28b0, 0xd977, 0xe5f7, 0x6522, 0x1, 0x0);
        gbc.writeMem(0x5413, { 0x31, 0xb7, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4fb7);
        EXPECT(gbc.pc(), 0x5416);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 027F
        gbc.setState(0x74a3, 0x182b, 0xf030, 0xffae, 0xdeee, 0x38b9, 0x0, 0x0);
        gbc.writeMem(0x74a3, { 0x31, 0xe5, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x87e5);
        EXPECT(gbc.pc(), 0x74a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0280
        gbc.setState(0x4a4d, 0xd3ca, 0xbf30, 0xeb34, 0xe8d7, 0xdcbe, 0x1, 0x1);
        gbc.writeMem(0x4a4d, { 0x31, 0x92, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbb92);
        EXPECT(gbc.pc(), 0x4a50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0281
        gbc.setState(0x93d6, 0x7847, 0xbb20, 0x98be, 0x789e, 0x2d05, 0x0, 0x1);
        gbc.writeMem(0x93d6, { 0x31, 0x5a, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x45a);
        EXPECT(gbc.pc(), 0x93d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d6), 0x31);
        EXPECT(gbc.readMem(0x93d7), 0x5a);
        EXPECT(gbc.readMem(0x93d8), 0x4);
        // 31 0282
        gbc.setState(0x3b86, 0x6f2b, 0x34c0, 0x17f0, 0x907d, 0xd7a4, 0x1, 0x1);
        gbc.writeMem(0x3b86, { 0x31, 0x75, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xae75);
        EXPECT(gbc.pc(), 0x3b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0283
        gbc.setState(0x1eec, 0x41b3, 0x1280, 0x2453, 0xea98, 0xb407, 0x1, 0x0);
        gbc.writeMem(0x1eec, { 0x31, 0x20, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6e20);
        EXPECT(gbc.pc(), 0x1eef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0284
        gbc.setState(0xc6e7, 0x7b3, 0x46a0, 0x7472, 0xb1b3, 0x435b, 0x1, 0x0);
        gbc.writeMem(0xc6e7, { 0x31, 0xf1, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc0f1);
        EXPECT(gbc.pc(), 0xc6ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e7), 0x31);
        EXPECT(gbc.readMem(0xc6e8), 0xf1);
        EXPECT(gbc.readMem(0xc6e9), 0xc0);
        // 31 0285
        gbc.setState(0x115a, 0x70f6, 0x8e10, 0x2d58, 0xb18d, 0x9954, 0x1, 0x0);
        gbc.writeMem(0x115a, { 0x31, 0x1d, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2f1d);
        EXPECT(gbc.pc(), 0x115d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0286
        gbc.setState(0x1c65, 0x66ed, 0x7070, 0xa640, 0x3842, 0x8ad0, 0x0, 0x0);
        gbc.writeMem(0x1c65, { 0x31, 0xde, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x83de);
        EXPECT(gbc.pc(), 0x1c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0287
        gbc.setState(0xddcb, 0x9b9, 0xc130, 0x9a46, 0x3589, 0xe36b, 0x0, 0x1);
        gbc.writeMem(0xddcb, { 0x31, 0xd9, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xdcd9);
        EXPECT(gbc.pc(), 0xddce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddcb), 0x31);
        EXPECT(gbc.readMem(0xddcc), 0xd9);
        EXPECT(gbc.readMem(0xddcd), 0xdc);
        // 31 0288
        gbc.setState(0x34f2, 0x658b, 0x66b0, 0xdb92, 0xf841, 0xd97a, 0x0, 0x0);
        gbc.writeMem(0x34f2, { 0x31, 0xc9, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb3c9);
        EXPECT(gbc.pc(), 0x34f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0289
        gbc.setState(0xec03, 0x4432, 0x3210, 0xcdd3, 0xb35, 0xe64, 0x0, 0x0);
        gbc.writeMem(0xec03, { 0x31, 0xfb, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8afb);
        EXPECT(gbc.pc(), 0xec06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec03), 0x31);
        EXPECT(gbc.readMem(0xec04), 0xfb);
        EXPECT(gbc.readMem(0xec05), 0x8a);
        // 31 028A
        gbc.setState(0xbf25, 0x229d, 0x2900, 0x3f49, 0xdc62, 0xe835, 0x1, 0x1);
        gbc.writeMem(0xbf25, { 0x31, 0xd2, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xced2);
        EXPECT(gbc.pc(), 0xbf28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf25), 0x31);
        EXPECT(gbc.readMem(0xbf26), 0xd2);
        EXPECT(gbc.readMem(0xbf27), 0xce);
        // 31 028B
        gbc.setState(0x4523, 0x9be1, 0x3600, 0xd6fd, 0x3eb8, 0x2cc6, 0x1, 0x0);
        gbc.writeMem(0x4523, { 0x31, 0x70, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6670);
        EXPECT(gbc.pc(), 0x4526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 028C
        gbc.setState(0x3903, 0x2189, 0x7800, 0x9b69, 0xe3a7, 0x4c37, 0x1, 0x1);
        gbc.writeMem(0x3903, { 0x31, 0x18, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2718);
        EXPECT(gbc.pc(), 0x3906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 028D
        gbc.setState(0x9d3, 0xbcc6, 0x7470, 0xdfe3, 0x31b5, 0x6cdd, 0x0, 0x1);
        gbc.writeMem(0x9d3, { 0x31, 0x5c, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xcb5c);
        EXPECT(gbc.pc(), 0x9d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 028E
        gbc.setState(0x938, 0xcbd5, 0xf9d0, 0x4cf9, 0xf8bf, 0x3e9c, 0x1, 0x1);
        gbc.writeMem(0x938, { 0x31, 0x2a, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xae2a);
        EXPECT(gbc.pc(), 0x93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 028F
        gbc.setState(0xc4de, 0x9c60, 0x46b0, 0x883c, 0x9aac, 0xa50a, 0x1, 0x0);
        gbc.writeMem(0xc4de, { 0x31, 0x78, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3c78);
        EXPECT(gbc.pc(), 0xc4e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4de), 0x31);
        EXPECT(gbc.readMem(0xc4df), 0x78);
        EXPECT(gbc.readMem(0xc4e0), 0x3c);
        // 31 0290
        gbc.setState(0xd9bc, 0x6d8d, 0x9240, 0xe96f, 0xb0cc, 0x2a0e, 0x0, 0x0);
        gbc.writeMem(0xd9bc, { 0x31, 0xb7, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xadb7);
        EXPECT(gbc.pc(), 0xd9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9bc), 0x31);
        EXPECT(gbc.readMem(0xd9bd), 0xb7);
        EXPECT(gbc.readMem(0xd9be), 0xad);
        // 31 0291
        gbc.setState(0x748a, 0x632d, 0x2c50, 0xb106, 0xad23, 0xc635, 0x0, 0x1);
        gbc.writeMem(0x748a, { 0x31, 0xd8, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9cd8);
        EXPECT(gbc.pc(), 0x748d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0292
        gbc.setState(0xd6c6, 0xeb5f, 0x6890, 0xc751, 0x6be6, 0x2b01, 0x1, 0x1);
        gbc.writeMem(0xd6c6, { 0x31, 0x34, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7f34);
        EXPECT(gbc.pc(), 0xd6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c6), 0x31);
        EXPECT(gbc.readMem(0xd6c7), 0x34);
        EXPECT(gbc.readMem(0xd6c8), 0x7f);
        // 31 0293
        gbc.setState(0x1561, 0x7cd9, 0x18d0, 0x5c74, 0x2715, 0x6955, 0x1, 0x1);
        gbc.writeMem(0x1561, { 0x31, 0xbc, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x74bc);
        EXPECT(gbc.pc(), 0x1564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0294
        gbc.setState(0x610c, 0x8c0f, 0xdb20, 0xd16f, 0xc6c7, 0x39ea, 0x1, 0x1);
        gbc.writeMem(0x610c, { 0x31, 0xb5, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4b5);
        EXPECT(gbc.pc(), 0x610f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0295
        gbc.setState(0x48ba, 0xd624, 0x4de0, 0xa79f, 0x4261, 0x533, 0x0, 0x1);
        gbc.writeMem(0x48ba, { 0x31, 0x7b, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2b7b);
        EXPECT(gbc.pc(), 0x48bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0296
        gbc.setState(0x1bfe, 0x180e, 0x320, 0x1c4f, 0x407a, 0xd180, 0x1, 0x1);
        gbc.writeMem(0x1bfe, { 0x31, 0xd7, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb7d7);
        EXPECT(gbc.pc(), 0x1c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0298
        gbc.setState(0x4476, 0xa80f, 0x2d00, 0xbd68, 0x1639, 0xc2e7, 0x0, 0x0);
        gbc.writeMem(0x4476, { 0x31, 0xe, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x640e);
        EXPECT(gbc.pc(), 0x4479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0299
        gbc.setState(0x3bab, 0x66e2, 0xd9c0, 0xee, 0x7e16, 0xfb93, 0x1, 0x1);
        gbc.writeMem(0x3bab, { 0x31, 0x7d, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa87d);
        EXPECT(gbc.pc(), 0x3bae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 029A
        gbc.setState(0x4b39, 0x58cf, 0x6ed0, 0x1545, 0x28ac, 0x1696, 0x1, 0x0);
        gbc.writeMem(0x4b39, { 0x31, 0x45, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3545);
        EXPECT(gbc.pc(), 0x4b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 029B
        gbc.setState(0x6bc4, 0x35d6, 0xd8b0, 0x8754, 0x2937, 0x31ba, 0x0, 0x1);
        gbc.writeMem(0x6bc4, { 0x31, 0xb1, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7db1);
        EXPECT(gbc.pc(), 0x6bc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 029C
        gbc.setState(0xdfe1, 0xb655, 0xc160, 0x32b5, 0x3607, 0x8845, 0x1, 0x1);
        gbc.writeMem(0xdfe1, { 0x31, 0xfa, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5efa);
        EXPECT(gbc.pc(), 0xdfe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfe1), 0x31);
        EXPECT(gbc.readMem(0xdfe2), 0xfa);
        EXPECT(gbc.readMem(0xdfe3), 0x5e);
        // 31 029D
        gbc.setState(0xc7b2, 0xcba7, 0x2f40, 0xd2af, 0xa6f3, 0xfac2, 0x0, 0x1);
        gbc.writeMem(0xc7b2, { 0x31, 0x2f, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x572f);
        EXPECT(gbc.pc(), 0xc7b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b2), 0x31);
        EXPECT(gbc.readMem(0xc7b3), 0x2f);
        EXPECT(gbc.readMem(0xc7b4), 0x57);
        // 31 029E
        gbc.setState(0xe6be, 0xb7df, 0x67f0, 0x71b8, 0x4943, 0x834b, 0x1, 0x0);
        gbc.writeMem(0xe6be, { 0x31, 0xb3, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc5b3);
        EXPECT(gbc.pc(), 0xe6c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6be), 0x31);
        EXPECT(gbc.readMem(0xe6bf), 0xb3);
        EXPECT(gbc.readMem(0xe6c0), 0xc5);
        // 31 029F
        gbc.setState(0x8ffb, 0xf52c, 0xccb0, 0x392e, 0x8362, 0x2c7, 0x1, 0x0);
        gbc.writeMem(0x8ffb, { 0x31, 0x6e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xef6e);
        EXPECT(gbc.pc(), 0x8ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ffb), 0x31);
        EXPECT(gbc.readMem(0x8ffc), 0x6e);
        EXPECT(gbc.readMem(0x8ffd), 0xef);
        // 31 02A0
        gbc.setState(0x4d32, 0x188b, 0xd0f0, 0x8ad2, 0xf783, 0xeaea, 0x1, 0x0);
        gbc.writeMem(0x4d32, { 0x31, 0x82, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2182);
        EXPECT(gbc.pc(), 0x4d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02A1
        gbc.setState(0x20e8, 0x6d85, 0x1730, 0x4d69, 0xc164, 0x93e, 0x1, 0x1);
        gbc.writeMem(0x20e8, { 0x31, 0xff, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbaff);
        EXPECT(gbc.pc(), 0x20eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02A2
        gbc.setState(0x599e, 0xffbb, 0xfba0, 0x7256, 0x84fd, 0xa3ca, 0x1, 0x0);
        gbc.writeMem(0x599e, { 0x31, 0x5a, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2d5a);
        EXPECT(gbc.pc(), 0x59a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 02A3
        gbc.setState(0x2306, 0xdf24, 0xf630, 0x2d9b, 0x9935, 0xb2e6, 0x1, 0x1);
        gbc.writeMem(0x2306, { 0x31, 0x92, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb992);
        EXPECT(gbc.pc(), 0x2309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02A4
        gbc.setState(0x7672, 0x3159, 0xd7d0, 0x422c, 0xd130, 0x4ee9, 0x1, 0x0);
        gbc.writeMem(0x7672, { 0x31, 0x29, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xac29);
        EXPECT(gbc.pc(), 0x7675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02A5
        gbc.setState(0x1a80, 0x1d15, 0x2ad0, 0x2994, 0x8714, 0x7ebc, 0x0, 0x0);
        gbc.writeMem(0x1a80, { 0x31, 0x36, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8936);
        EXPECT(gbc.pc(), 0x1a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02A6
        gbc.setState(0x3357, 0x3511, 0x3b60, 0xba0f, 0xf219, 0xaed8, 0x1, 0x0);
        gbc.writeMem(0x3357, { 0x31, 0x22, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfb22);
        EXPECT(gbc.pc(), 0x335a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 02A7
        gbc.setState(0xdd69, 0xe08d, 0xa950, 0x5f6b, 0x7e29, 0xac6d, 0x1, 0x0);
        gbc.writeMem(0xdd69, { 0x31, 0x11, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe511);
        EXPECT(gbc.pc(), 0xdd6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd69), 0x31);
        EXPECT(gbc.readMem(0xdd6a), 0x11);
        EXPECT(gbc.readMem(0xdd6b), 0xe5);
        // 31 02A9
        gbc.setState(0x494c, 0x526f, 0xebc0, 0x5ff6, 0xe3f5, 0xd120, 0x1, 0x0);
        gbc.writeMem(0x494c, { 0x31, 0xd, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4a0d);
        EXPECT(gbc.pc(), 0x494f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02AA
        gbc.setState(0x42fe, 0xac74, 0xfbe0, 0x70ba, 0x79be, 0x989b, 0x0, 0x1);
        gbc.writeMem(0x42fe, { 0x31, 0xf1, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1df1);
        EXPECT(gbc.pc(), 0x4301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 02AB
        gbc.setState(0xd843, 0x971c, 0x4d20, 0x1294, 0x3ee4, 0xacd, 0x0, 0x1);
        gbc.writeMem(0xd843, { 0x31, 0x7f, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x607f);
        EXPECT(gbc.pc(), 0xd846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd843), 0x31);
        EXPECT(gbc.readMem(0xd844), 0x7f);
        EXPECT(gbc.readMem(0xd845), 0x60);
        // 31 02AD
        gbc.setState(0x81b, 0xbe20, 0xf240, 0x1bad, 0x11cb, 0x2009, 0x1, 0x1);
        gbc.writeMem(0x81b, { 0x31, 0x72, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6572);
        EXPECT(gbc.pc(), 0x81e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02AE
        gbc.setState(0x4de1, 0x6048, 0xd260, 0xae9d, 0x21c7, 0x9bed, 0x0, 0x0);
        gbc.writeMem(0x4de1, { 0x31, 0xc3, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe0c3);
        EXPECT(gbc.pc(), 0x4de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 02AF
        gbc.setState(0xe9cc, 0xa8cf, 0x51d0, 0xe57d, 0x72b9, 0x64ab, 0x0, 0x1);
        gbc.writeMem(0xe9cc, { 0x31, 0xd, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9c0d);
        EXPECT(gbc.pc(), 0xe9cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9cc), 0x31);
        EXPECT(gbc.readMem(0xe9cd), 0xd);
        EXPECT(gbc.readMem(0xe9ce), 0x9c);
        // 31 02B0
        gbc.setState(0xc546, 0xff62, 0xc170, 0xa630, 0x600d, 0xeec, 0x1, 0x1);
        gbc.writeMem(0xc546, { 0x31, 0xe1, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5ee1);
        EXPECT(gbc.pc(), 0xc549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc546), 0x31);
        EXPECT(gbc.readMem(0xc547), 0xe1);
        EXPECT(gbc.readMem(0xc548), 0x5e);
        // 31 02B1
        gbc.setState(0x2d4f, 0xf0b8, 0xa210, 0xeb53, 0x5e51, 0x289d, 0x0, 0x0);
        gbc.writeMem(0x2d4f, { 0x31, 0xe6, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x30e6);
        EXPECT(gbc.pc(), 0x2d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02B2
        gbc.setState(0xb52a, 0x4e64, 0x8930, 0x5d95, 0x871e, 0x53f3, 0x1, 0x1);
        gbc.writeMem(0xb52a, { 0x31, 0x69, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2369);
        EXPECT(gbc.pc(), 0xb52d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52a), 0x31);
        EXPECT(gbc.readMem(0xb52b), 0x69);
        EXPECT(gbc.readMem(0xb52c), 0x23);
        // 31 02B3
        gbc.setState(0xc13d, 0x413, 0x8560, 0xda6a, 0xb4ad, 0x6dbd, 0x1, 0x0);
        gbc.writeMem(0xc13d, { 0x31, 0x71, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8871);
        EXPECT(gbc.pc(), 0xc140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc13d), 0x31);
        EXPECT(gbc.readMem(0xc13e), 0x71);
        EXPECT(gbc.readMem(0xc13f), 0x88);
        // 31 02B4
        gbc.setState(0xa45f, 0xba18, 0x8cb0, 0x2071, 0xa586, 0xd80, 0x0, 0x1);
        gbc.writeMem(0xa45f, { 0x31, 0xb1, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x24b1);
        EXPECT(gbc.pc(), 0xa462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa45f), 0x31);
        EXPECT(gbc.readMem(0xa460), 0xb1);
        EXPECT(gbc.readMem(0xa461), 0x24);
        // 31 02B5
        gbc.setState(0x23f9, 0xce19, 0x6470, 0x37b9, 0x9ae9, 0xa116, 0x1, 0x1);
        gbc.writeMem(0x23f9, { 0x31, 0x6e, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5c6e);
        EXPECT(gbc.pc(), 0x23fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02B6
        gbc.setState(0x6215, 0xe5e6, 0x52c0, 0x5922, 0x8130, 0x24a1, 0x0, 0x0);
        gbc.writeMem(0x6215, { 0x31, 0xb3, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3fb3);
        EXPECT(gbc.pc(), 0x6218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02B7
        gbc.setState(0x8ea4, 0xdc32, 0xdf0, 0xda5f, 0x8a2f, 0x5475, 0x1, 0x1);
        gbc.writeMem(0x8ea4, { 0x31, 0x16, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xad16);
        EXPECT(gbc.pc(), 0x8ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea4), 0x31);
        EXPECT(gbc.readMem(0x8ea5), 0x16);
        EXPECT(gbc.readMem(0x8ea6), 0xad);
        // 31 02B8
        gbc.setState(0x6d0b, 0xb56c, 0xd7f0, 0x5882, 0x1a14, 0xd8a7, 0x0, 0x1);
        gbc.writeMem(0x6d0b, { 0x31, 0xd6, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x39d6);
        EXPECT(gbc.pc(), 0x6d0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02B9
        gbc.setState(0x9fcc, 0x48cc, 0xad60, 0xf16e, 0xb07f, 0x77e9, 0x1, 0x0);
        gbc.writeMem(0x9fcc, { 0x31, 0x4b, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xeb4b);
        EXPECT(gbc.pc(), 0x9fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fcc), 0x31);
        EXPECT(gbc.readMem(0x9fcd), 0x4b);
        EXPECT(gbc.readMem(0x9fce), 0xeb);
        // 31 02BA
        gbc.setState(0xd167, 0x4d5, 0x6040, 0xea1a, 0x64e8, 0x5cf5, 0x1, 0x0);
        gbc.writeMem(0xd167, { 0x31, 0xe6, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x63e6);
        EXPECT(gbc.pc(), 0xd16a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd167), 0x31);
        EXPECT(gbc.readMem(0xd168), 0xe6);
        EXPECT(gbc.readMem(0xd169), 0x63);
        // 31 02BB
        gbc.setState(0x5343, 0x6c9d, 0xdb70, 0x172a, 0x7552, 0xcc0, 0x1, 0x0);
        gbc.writeMem(0x5343, { 0x31, 0x5d, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3e5d);
        EXPECT(gbc.pc(), 0x5346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02BC
        gbc.setState(0x1da4, 0x62d5, 0x5c10, 0xf983, 0xd700, 0x7c01, 0x1, 0x1);
        gbc.writeMem(0x1da4, { 0x31, 0xaa, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5aaa);
        EXPECT(gbc.pc(), 0x1da7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02BD
        gbc.setState(0x7be0, 0x86ef, 0x24f0, 0xb5e0, 0xb3d7, 0x67e, 0x0, 0x1);
        gbc.writeMem(0x7be0, { 0x31, 0xef, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x41ef);
        EXPECT(gbc.pc(), 0x7be3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02BE
        gbc.setState(0x7c84, 0x2d61, 0xb7e0, 0xf439, 0x5a14, 0x47b1, 0x0, 0x1);
        gbc.writeMem(0x7c84, { 0x31, 0x3b, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x433b);
        EXPECT(gbc.pc(), 0x7c87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 02BF
        gbc.setState(0x2be3, 0x6866, 0x3e40, 0x5144, 0x9d45, 0x8e2d, 0x1, 0x0);
        gbc.writeMem(0x2be3, { 0x31, 0xfb, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc9fb);
        EXPECT(gbc.pc(), 0x2be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02C0
        gbc.setState(0x8e50, 0x68d0, 0xc830, 0xa2f4, 0xef9e, 0x473b, 0x1, 0x1);
        gbc.writeMem(0x8e50, { 0x31, 0x6f, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3f6f);
        EXPECT(gbc.pc(), 0x8e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e50), 0x31);
        EXPECT(gbc.readMem(0x8e51), 0x6f);
        EXPECT(gbc.readMem(0x8e52), 0x3f);
        // 31 02C1
        gbc.setState(0x9c7b, 0x228, 0xaf50, 0x564, 0x31eb, 0x5862, 0x0, 0x0);
        gbc.writeMem(0x9c7b, { 0x31, 0x33, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3e33);
        EXPECT(gbc.pc(), 0x9c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c7b), 0x31);
        EXPECT(gbc.readMem(0x9c7c), 0x33);
        EXPECT(gbc.readMem(0x9c7d), 0x3e);
        // 31 02C3
        gbc.setState(0xd9a2, 0xb989, 0x5c10, 0x4973, 0x1e8e, 0xb2c0, 0x0, 0x1);
        gbc.writeMem(0xd9a2, { 0x31, 0x87, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8a87);
        EXPECT(gbc.pc(), 0xd9a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a2), 0x31);
        EXPECT(gbc.readMem(0xd9a3), 0x87);
        EXPECT(gbc.readMem(0xd9a4), 0x8a);
        // 31 02C4
        gbc.setState(0xec79, 0x8eb3, 0x2750, 0x2b73, 0xdd1a, 0x7f7a, 0x0, 0x0);
        gbc.writeMem(0xec79, { 0x31, 0xad, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdead);
        EXPECT(gbc.pc(), 0xec7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec79), 0x31);
        EXPECT(gbc.readMem(0xec7a), 0xad);
        EXPECT(gbc.readMem(0xec7b), 0xde);
        // 31 02C5
        gbc.setState(0x54e6, 0x1a6d, 0x4320, 0x67af, 0xc93f, 0xccb8, 0x0, 0x1);
        gbc.writeMem(0x54e6, { 0x31, 0x2d, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x362d);
        EXPECT(gbc.pc(), 0x54e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 02C6
        gbc.setState(0x54ca, 0x91db, 0xc210, 0x7354, 0x76, 0xe775, 0x0, 0x1);
        gbc.writeMem(0x54ca, { 0x31, 0x11, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5f11);
        EXPECT(gbc.pc(), 0x54cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02C7
        gbc.setState(0xd3b4, 0xed71, 0x30a0, 0x280d, 0x80d1, 0x83ae, 0x1, 0x1);
        gbc.writeMem(0xd3b4, { 0x31, 0x27, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfa27);
        EXPECT(gbc.pc(), 0xd3b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b4), 0x31);
        EXPECT(gbc.readMem(0xd3b5), 0x27);
        EXPECT(gbc.readMem(0xd3b6), 0xfa);
        // 31 02C8
        gbc.setState(0xa2af, 0xa449, 0x36c0, 0x8ac7, 0x4006, 0xa349, 0x0, 0x1);
        gbc.writeMem(0xa2af, { 0x31, 0xb1, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe0b1);
        EXPECT(gbc.pc(), 0xa2b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2af), 0x31);
        EXPECT(gbc.readMem(0xa2b0), 0xb1);
        EXPECT(gbc.readMem(0xa2b1), 0xe0);
        // 31 02C9
        gbc.setState(0xefb7, 0x15da, 0xce30, 0x318e, 0x18dd, 0x82fb, 0x0, 0x0);
        gbc.writeMem(0xefb7, { 0x31, 0x17, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2b17);
        EXPECT(gbc.pc(), 0xefba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb7), 0x31);
        EXPECT(gbc.readMem(0xefb8), 0x17);
        EXPECT(gbc.readMem(0xefb9), 0x2b);
        // 31 02CA
        gbc.setState(0x4480, 0x7da3, 0xaf50, 0xd85e, 0x230f, 0x2f4d, 0x1, 0x0);
        gbc.writeMem(0x4480, { 0x31, 0xa3, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x72a3);
        EXPECT(gbc.pc(), 0x4483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02CC
        gbc.setState(0xb062, 0xe8bc, 0xb5e0, 0xb867, 0x9ae5, 0x14c6, 0x1, 0x0);
        gbc.writeMem(0xb062, { 0x31, 0xb7, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcdb7);
        EXPECT(gbc.pc(), 0xb065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb062), 0x31);
        EXPECT(gbc.readMem(0xb063), 0xb7);
        EXPECT(gbc.readMem(0xb064), 0xcd);
        // 31 02CD
        gbc.setState(0x342c, 0x6916, 0x8930, 0x1d0, 0x3aa7, 0x597a, 0x0, 0x1);
        gbc.writeMem(0x342c, { 0x31, 0x3e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd83e);
        EXPECT(gbc.pc(), 0x342f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02CE
        gbc.setState(0x8baf, 0x6a5d, 0xa820, 0x26d9, 0xd1bf, 0x9ae8, 0x1, 0x1);
        gbc.writeMem(0x8baf, { 0x31, 0xe5, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5ee5);
        EXPECT(gbc.pc(), 0x8bb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8baf), 0x31);
        EXPECT(gbc.readMem(0x8bb0), 0xe5);
        EXPECT(gbc.readMem(0x8bb1), 0x5e);
        // 31 02CF
        gbc.setState(0x264f, 0xd736, 0x7880, 0x6940, 0xfb15, 0xeccf, 0x1, 0x0);
        gbc.writeMem(0x264f, { 0x31, 0x48, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x848);
        EXPECT(gbc.pc(), 0x2652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02D0
        gbc.setState(0x2e83, 0xd31e, 0x1fa0, 0x7274, 0x7003, 0x399d, 0x0, 0x0);
        gbc.writeMem(0x2e83, { 0x31, 0xeb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe1eb);
        EXPECT(gbc.pc(), 0x2e86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 02D3
        gbc.setState(0x5b2a, 0x6390, 0x3230, 0x56b, 0x4402, 0xe3cb, 0x0, 0x0);
        gbc.writeMem(0x5b2a, { 0x31, 0x4d, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd44d);
        EXPECT(gbc.pc(), 0x5b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02D4
        gbc.setState(0x55cb, 0x5fe3, 0x1140, 0xaa31, 0x63b7, 0x8d50, 0x0, 0x0);
        gbc.writeMem(0x55cb, { 0x31, 0x7, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbd07);
        EXPECT(gbc.pc(), 0x55ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02D6
        gbc.setState(0xc9e9, 0xc150, 0x2ea0, 0x36aa, 0x4c48, 0x8c7b, 0x1, 0x1);
        gbc.writeMem(0xc9e9, { 0x31, 0x9f, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x269f);
        EXPECT(gbc.pc(), 0xc9ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e9), 0x31);
        EXPECT(gbc.readMem(0xc9ea), 0x9f);
        EXPECT(gbc.readMem(0xc9eb), 0x26);
        // 31 02D7
        gbc.setState(0x2917, 0x1540, 0xfc30, 0x10b5, 0x66e3, 0x8b29, 0x1, 0x0);
        gbc.writeMem(0x2917, { 0x31, 0x9a, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd39a);
        EXPECT(gbc.pc(), 0x291a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02D8
        gbc.setState(0x2404, 0x1976, 0xc990, 0xb90b, 0xb413, 0x6a84, 0x1, 0x0);
        gbc.writeMem(0x2404, { 0x31, 0x48, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7048);
        EXPECT(gbc.pc(), 0x2407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02D9
        gbc.setState(0xaec6, 0x48fe, 0x48c0, 0xa6ba, 0x53a, 0x4537, 0x1, 0x1);
        gbc.writeMem(0xaec6, { 0x31, 0xba, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x61ba);
        EXPECT(gbc.pc(), 0xaec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec6), 0x31);
        EXPECT(gbc.readMem(0xaec7), 0xba);
        EXPECT(gbc.readMem(0xaec8), 0x61);
        // 31 02DA
        gbc.setState(0xd6b6, 0xce95, 0x7280, 0xfdf5, 0xf5ff, 0x46a8, 0x0, 0x0);
        gbc.writeMem(0xd6b6, { 0x31, 0x69, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2969);
        EXPECT(gbc.pc(), 0xd6b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b6), 0x31);
        EXPECT(gbc.readMem(0xd6b7), 0x69);
        EXPECT(gbc.readMem(0xd6b8), 0x29);
        // 31 02DB
        gbc.setState(0x7d3f, 0x2d8, 0x23c0, 0x3b16, 0x7f07, 0xe561, 0x0, 0x0);
        gbc.writeMem(0x7d3f, { 0x31, 0x89, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdd89);
        EXPECT(gbc.pc(), 0x7d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02DC
        gbc.setState(0xb9e4, 0xb134, 0x8890, 0x700a, 0x7a74, 0x43ae, 0x1, 0x1);
        gbc.writeMem(0xb9e4, { 0x31, 0x43, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1943);
        EXPECT(gbc.pc(), 0xb9e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9e4), 0x31);
        EXPECT(gbc.readMem(0xb9e5), 0x43);
        EXPECT(gbc.readMem(0xb9e6), 0x19);
        // 31 02DD
        gbc.setState(0x3698, 0xc2b8, 0x6540, 0x44a4, 0xbffc, 0xc3d9, 0x0, 0x0);
        gbc.writeMem(0x3698, { 0x31, 0xdd, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x21dd);
        EXPECT(gbc.pc(), 0x369b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02DF
        gbc.setState(0x6477, 0xddda, 0x4cd0, 0x8c02, 0x7b81, 0xdd88, 0x1, 0x0);
        gbc.writeMem(0x6477, { 0x31, 0x42, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7242);
        EXPECT(gbc.pc(), 0x647a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02E0
        gbc.setState(0xaf2d, 0x40a0, 0xfdb0, 0xdde3, 0x31c1, 0x4465, 0x1, 0x0);
        gbc.writeMem(0xaf2d, { 0x31, 0x9e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdf9e);
        EXPECT(gbc.pc(), 0xaf30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf2d), 0x31);
        EXPECT(gbc.readMem(0xaf2e), 0x9e);
        EXPECT(gbc.readMem(0xaf2f), 0xdf);
        // 31 02E1
        gbc.setState(0x4fa7, 0x3670, 0xc310, 0x9c3b, 0x4f05, 0xf157, 0x1, 0x0);
        gbc.writeMem(0x4fa7, { 0x31, 0xaa, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x40aa);
        EXPECT(gbc.pc(), 0x4faa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02E2
        gbc.setState(0xc67e, 0xfa35, 0x1640, 0x35af, 0xa74, 0xd47, 0x0, 0x1);
        gbc.writeMem(0xc67e, { 0x31, 0x53, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe853);
        EXPECT(gbc.pc(), 0xc681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67e), 0x31);
        EXPECT(gbc.readMem(0xc67f), 0x53);
        EXPECT(gbc.readMem(0xc680), 0xe8);
        // 31 02E3
        gbc.setState(0x1ab7, 0x596d, 0xeda0, 0x2e2, 0xd158, 0x9d8d, 0x0, 0x0);
        gbc.writeMem(0x1ab7, { 0x31, 0x18, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3218);
        EXPECT(gbc.pc(), 0x1aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 02E4
        gbc.setState(0x6b3c, 0x929a, 0x94f0, 0x2158, 0xb760, 0xecf4, 0x1, 0x0);
        gbc.writeMem(0x6b3c, { 0x31, 0xe9, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xaae9);
        EXPECT(gbc.pc(), 0x6b3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02E5
        gbc.setState(0x2f52, 0x5102, 0x2f30, 0x954b, 0x1a7b, 0xfaba, 0x0, 0x1);
        gbc.writeMem(0x2f52, { 0x31, 0xb1, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbeb1);
        EXPECT(gbc.pc(), 0x2f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02E6
        gbc.setState(0x5dab, 0x695c, 0x5120, 0x3ffa, 0x44be, 0x1eb5, 0x0, 0x1);
        gbc.writeMem(0x5dab, { 0x31, 0x14, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6414);
        EXPECT(gbc.pc(), 0x5dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 02E7
        gbc.setState(0x31df, 0xd7d0, 0xd4c0, 0x70f8, 0x367e, 0xedad, 0x0, 0x0);
        gbc.writeMem(0x31df, { 0x31, 0x64, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8d64);
        EXPECT(gbc.pc(), 0x31e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02E8
        gbc.setState(0x1a76, 0x4e7f, 0xdc70, 0x4253, 0x20e7, 0x92d0, 0x1, 0x0);
        gbc.writeMem(0x1a76, { 0x31, 0x1b, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe11b);
        EXPECT(gbc.pc(), 0x1a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02E9
        gbc.setState(0x3e3a, 0xb70e, 0x35d0, 0x1a29, 0x5397, 0xcc22, 0x0, 0x1);
        gbc.writeMem(0x3e3a, { 0x31, 0xc0, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd3c0);
        EXPECT(gbc.pc(), 0x3e3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02EA
        gbc.setState(0xe6f7, 0x5ead, 0xf60, 0x3abd, 0xd27c, 0xdca8, 0x1, 0x1);
        gbc.writeMem(0xe6f7, { 0x31, 0x4f, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x884f);
        EXPECT(gbc.pc(), 0xe6fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f7), 0x31);
        EXPECT(gbc.readMem(0xe6f8), 0x4f);
        EXPECT(gbc.readMem(0xe6f9), 0x88);
        // 31 02EB
        gbc.setState(0x3a79, 0xfe26, 0x6640, 0x8cb3, 0x498e, 0xcbbf, 0x0, 0x1);
        gbc.writeMem(0x3a79, { 0x31, 0x3e, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc33e);
        EXPECT(gbc.pc(), 0x3a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02EC
        gbc.setState(0xdeed, 0x789e, 0xe930, 0x49b5, 0x1a0, 0xb3fc, 0x0, 0x1);
        gbc.writeMem(0xdeed, { 0x31, 0x47, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc147);
        EXPECT(gbc.pc(), 0xdef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeed), 0x31);
        EXPECT(gbc.readMem(0xdeee), 0x47);
        EXPECT(gbc.readMem(0xdeef), 0xc1);
        // 31 02ED
        gbc.setState(0xbb04, 0x5ff3, 0x91f0, 0xa024, 0x9d69, 0x1d9, 0x0, 0x0);
        gbc.writeMem(0xbb04, { 0x31, 0x9, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2c09);
        EXPECT(gbc.pc(), 0xbb07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb04), 0x31);
        EXPECT(gbc.readMem(0xbb05), 0x9);
        EXPECT(gbc.readMem(0xbb06), 0x2c);
        // 31 02EE
        gbc.setState(0x28e5, 0xdc89, 0x6380, 0x254a, 0x3dd6, 0xafb4, 0x1, 0x0);
        gbc.writeMem(0x28e5, { 0x31, 0xa8, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc9a8);
        EXPECT(gbc.pc(), 0x28e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02EF
        gbc.setState(0x4a46, 0x665, 0x1cf0, 0x33ad, 0x5f3c, 0xfe3f, 0x0, 0x0);
        gbc.writeMem(0x4a46, { 0x31, 0xa4, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3ba4);
        EXPECT(gbc.pc(), 0x4a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02F0
        gbc.setState(0x14c8, 0x7c4b, 0xc990, 0x2286, 0x82c4, 0x9ca0, 0x0, 0x1);
        gbc.writeMem(0x14c8, { 0x31, 0x23, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa223);
        EXPECT(gbc.pc(), 0x14cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02F1
        gbc.setState(0x4a4a, 0xd894, 0x1810, 0xa05a, 0xb99d, 0x28bb, 0x1, 0x0);
        gbc.writeMem(0x4a4a, { 0x31, 0x2, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7d02);
        EXPECT(gbc.pc(), 0x4a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02F2
        gbc.setState(0x8407, 0xeb2d, 0x9230, 0x6a84, 0xbe79, 0x612d, 0x0, 0x0);
        gbc.writeMem(0x8407, { 0x31, 0x98, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe498);
        EXPECT(gbc.pc(), 0x840a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8407), 0x31);
        EXPECT(gbc.readMem(0x8408), 0x98);
        EXPECT(gbc.readMem(0x8409), 0xe4);
        // 31 02F3
        gbc.setState(0x1901, 0xb738, 0x2d90, 0x7398, 0x90a0, 0x6d47, 0x0, 0x1);
        gbc.writeMem(0x1901, { 0x31, 0xb1, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x30b1);
        EXPECT(gbc.pc(), 0x1904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 02F4
        gbc.setState(0xb7c8, 0x6ac1, 0x2e00, 0x7a02, 0x8910, 0x864c, 0x1, 0x1);
        gbc.writeMem(0xb7c8, { 0x31, 0x74, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe074);
        EXPECT(gbc.pc(), 0xb7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c8), 0x31);
        EXPECT(gbc.readMem(0xb7c9), 0x74);
        EXPECT(gbc.readMem(0xb7ca), 0xe0);
        // 31 02F5
        gbc.setState(0x5884, 0xa32b, 0x9a30, 0xe2eb, 0xced1, 0x6555, 0x0, 0x0);
        gbc.writeMem(0x5884, { 0x31, 0xec, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf1ec);
        EXPECT(gbc.pc(), 0x5887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02F6
        gbc.setState(0xebb0, 0x3ef4, 0xf8f0, 0x6759, 0xb4c3, 0x33e8, 0x0, 0x0);
        gbc.writeMem(0xebb0, { 0x31, 0xbc, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6dbc);
        EXPECT(gbc.pc(), 0xebb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb0), 0x31);
        EXPECT(gbc.readMem(0xebb1), 0xbc);
        EXPECT(gbc.readMem(0xebb2), 0x6d);
        // 31 02F7
        gbc.setState(0xda9e, 0x5bbd, 0xc0e0, 0xcd40, 0x945a, 0x35a2, 0x1, 0x0);
        gbc.writeMem(0xda9e, { 0x31, 0xa3, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf4a3);
        EXPECT(gbc.pc(), 0xdaa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda9e), 0x31);
        EXPECT(gbc.readMem(0xda9f), 0xa3);
        EXPECT(gbc.readMem(0xdaa0), 0xf4);
        // 31 02F8
        gbc.setState(0xda67, 0x5320, 0x1e70, 0x56f4, 0x7992, 0x69d3, 0x0, 0x0);
        gbc.writeMem(0xda67, { 0x31, 0x15, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7115);
        EXPECT(gbc.pc(), 0xda6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda67), 0x31);
        EXPECT(gbc.readMem(0xda68), 0x15);
        EXPECT(gbc.readMem(0xda69), 0x71);
        // 31 02F9
        gbc.setState(0x5683, 0xf850, 0x6000, 0x9368, 0xd93a, 0xdd17, 0x0, 0x1);
        gbc.writeMem(0x5683, { 0x31, 0x4b, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xeb4b);
        EXPECT(gbc.pc(), 0x5686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 02FA
        gbc.setState(0xab4, 0x1f96, 0x420, 0x9283, 0x26b3, 0x75e4, 0x0, 0x1);
        gbc.writeMem(0xab4, { 0x31, 0x99, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x799);
        EXPECT(gbc.pc(), 0xab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 02FB
        gbc.setState(0x435, 0xfc5b, 0x91b0, 0xa639, 0x3ae5, 0xdc21, 0x1, 0x0);
        gbc.writeMem(0x435, { 0x31, 0x6e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5a6e);
        EXPECT(gbc.pc(), 0x438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02FC
        gbc.setState(0xb253, 0x28d2, 0x3a20, 0xf62f, 0x56b0, 0xd1cc, 0x1, 0x0);
        gbc.writeMem(0xb253, { 0x31, 0x30, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1e30);
        EXPECT(gbc.pc(), 0xb256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb253), 0x31);
        EXPECT(gbc.readMem(0xb254), 0x30);
        EXPECT(gbc.readMem(0xb255), 0x1e);
        // 31 02FD
        gbc.setState(0x42d6, 0x853a, 0x2df0, 0x2e9a, 0x179c, 0x69b2, 0x1, 0x0);
        gbc.writeMem(0x42d6, { 0x31, 0xcb, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1acb);
        EXPECT(gbc.pc(), 0x42d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 02FE
        gbc.setState(0xd3eb, 0xa60d, 0x4940, 0xbdb2, 0xce59, 0xb303, 0x0, 0x1);
        gbc.writeMem(0xd3eb, { 0x31, 0xcf, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xcfcf);
        EXPECT(gbc.pc(), 0xd3ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3eb), 0x31);
        EXPECT(gbc.readMem(0xd3ec), 0xcf);
        EXPECT(gbc.readMem(0xd3ed), 0xcf);
        // 31 02FF
        gbc.setState(0xb622, 0x2cff, 0xc8f0, 0x7ee9, 0x21f2, 0x6220, 0x0, 0x1);
        gbc.writeMem(0xb622, { 0x31, 0xac, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6bac);
        EXPECT(gbc.pc(), 0xb625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb622), 0x31);
        EXPECT(gbc.readMem(0xb623), 0xac);
        EXPECT(gbc.readMem(0xb624), 0x6b);
        // 31 0300
        gbc.setState(0x4ab6, 0xaca2, 0x2d40, 0x4a3c, 0xa839, 0xae4d, 0x1, 0x1);
        gbc.writeMem(0x4ab6, { 0x31, 0xcc, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x18cc);
        EXPECT(gbc.pc(), 0x4ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0301
        gbc.setState(0x30ce, 0x6bad, 0x7cf0, 0x9181, 0x2c0, 0xfb20, 0x1, 0x1);
        gbc.writeMem(0x30ce, { 0x31, 0x51, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xda51);
        EXPECT(gbc.pc(), 0x30d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0302
        gbc.setState(0x53be, 0x4b25, 0x170, 0xee9d, 0xc626, 0xc76c, 0x0, 0x1);
        gbc.writeMem(0x53be, { 0x31, 0xd4, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x34d4);
        EXPECT(gbc.pc(), 0x53c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0303
        gbc.setState(0x6452, 0x43d6, 0xbb00, 0xf469, 0x1b33, 0x77a9, 0x1, 0x1);
        gbc.writeMem(0x6452, { 0x31, 0x59, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3c59);
        EXPECT(gbc.pc(), 0x6455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0305
        gbc.setState(0x31a7, 0x59b3, 0x60b0, 0x76db, 0x752, 0x635d, 0x1, 0x1);
        gbc.writeMem(0x31a7, { 0x31, 0x19, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8419);
        EXPECT(gbc.pc(), 0x31aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0306
        gbc.setState(0xcf0f, 0x4f56, 0xf590, 0xfb6b, 0xc554, 0xb08e, 0x1, 0x0);
        gbc.writeMem(0xcf0f, { 0x31, 0xea, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7ea);
        EXPECT(gbc.pc(), 0xcf12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf0f), 0x31);
        EXPECT(gbc.readMem(0xcf10), 0xea);
        EXPECT(gbc.readMem(0xcf11), 0x7);
        // 31 0307
        gbc.setState(0x88a1, 0xfa65, 0xa8d0, 0x8f08, 0x6d33, 0x3170, 0x1, 0x0);
        gbc.writeMem(0x88a1, { 0x31, 0xc6, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x96c6);
        EXPECT(gbc.pc(), 0x88a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88a1), 0x31);
        EXPECT(gbc.readMem(0x88a2), 0xc6);
        EXPECT(gbc.readMem(0x88a3), 0x96);
        // 31 0308
        gbc.setState(0x6c25, 0x367c, 0x1a90, 0x5c07, 0xe369, 0xc844, 0x0, 0x0);
        gbc.writeMem(0x6c25, { 0x31, 0xb8, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbab8);
        EXPECT(gbc.pc(), 0x6c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0309
        gbc.setState(0xccc3, 0x6876, 0x8160, 0x49ef, 0x3961, 0x3a44, 0x1, 0x0);
        gbc.writeMem(0xccc3, { 0x31, 0x65, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf565);
        EXPECT(gbc.pc(), 0xccc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc3), 0x31);
        EXPECT(gbc.readMem(0xccc4), 0x65);
        EXPECT(gbc.readMem(0xccc5), 0xf5);
        // 31 030A
        gbc.setState(0x25ce, 0xe4c7, 0xea60, 0x3d06, 0xd024, 0xcc8c, 0x0, 0x1);
        gbc.writeMem(0x25ce, { 0x31, 0x9a, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x239a);
        EXPECT(gbc.pc(), 0x25d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 030B
        gbc.setState(0xcce5, 0x3478, 0xfa30, 0x58bf, 0xe313, 0x8ff1, 0x1, 0x0);
        gbc.writeMem(0xcce5, { 0x31, 0x78, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6c78);
        EXPECT(gbc.pc(), 0xcce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcce5), 0x31);
        EXPECT(gbc.readMem(0xcce6), 0x78);
        EXPECT(gbc.readMem(0xcce7), 0x6c);
        // 31 030C
        gbc.setState(0xb7f7, 0x3025, 0xf290, 0x7ead, 0xfb78, 0xe407, 0x0, 0x1);
        gbc.writeMem(0xb7f7, { 0x31, 0xa0, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb8a0);
        EXPECT(gbc.pc(), 0xb7fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f7), 0x31);
        EXPECT(gbc.readMem(0xb7f8), 0xa0);
        EXPECT(gbc.readMem(0xb7f9), 0xb8);
        // 31 030D
        gbc.setState(0x101b, 0xf4c3, 0x8f90, 0x6f28, 0xb536, 0x7c4c, 0x0, 0x0);
        gbc.writeMem(0x101b, { 0x31, 0x9b, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9e9b);
        EXPECT(gbc.pc(), 0x101e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 030E
        gbc.setState(0x6248, 0xe4a7, 0x490, 0x494d, 0x30f, 0x95b6, 0x0, 0x0);
        gbc.writeMem(0x6248, { 0x31, 0x41, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcb41);
        EXPECT(gbc.pc(), 0x624b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 030F
        gbc.setState(0x5d9a, 0x4942, 0xd330, 0x7dd7, 0x2cfe, 0xc055, 0x0, 0x0);
        gbc.writeMem(0x5d9a, { 0x31, 0x5c, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc85c);
        EXPECT(gbc.pc(), 0x5d9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0310
        gbc.setState(0x13e7, 0xb621, 0xfde0, 0xd3cd, 0x13af, 0xed61, 0x0, 0x1);
        gbc.writeMem(0x13e7, { 0x31, 0x40, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6c40);
        EXPECT(gbc.pc(), 0x13ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0311
        gbc.setState(0x9f44, 0x3a7d, 0xf240, 0x2d91, 0x8bbd, 0x2819, 0x0, 0x1);
        gbc.writeMem(0x9f44, { 0x31, 0xa2, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa2a2);
        EXPECT(gbc.pc(), 0x9f47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f44), 0x31);
        EXPECT(gbc.readMem(0x9f45), 0xa2);
        EXPECT(gbc.readMem(0x9f46), 0xa2);
        // 31 0313
        gbc.setState(0xa5ff, 0x235a, 0x14d0, 0x6f19, 0xc063, 0xcf64, 0x0, 0x0);
        gbc.writeMem(0xa5ff, { 0x31, 0x33, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd333);
        EXPECT(gbc.pc(), 0xa602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ff), 0x31);
        EXPECT(gbc.readMem(0xa600), 0x33);
        EXPECT(gbc.readMem(0xa601), 0xd3);
        // 31 0314
        gbc.setState(0xbd30, 0x630e, 0xe9d0, 0x9b2e, 0xba4e, 0xf521, 0x0, 0x0);
        gbc.writeMem(0xbd30, { 0x31, 0x79, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf179);
        EXPECT(gbc.pc(), 0xbd33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd30), 0x31);
        EXPECT(gbc.readMem(0xbd31), 0x79);
        EXPECT(gbc.readMem(0xbd32), 0xf1);
        // 31 0316
        gbc.setState(0x703c, 0x583, 0x610, 0x6fe3, 0x1c63, 0x26b2, 0x1, 0x0);
        gbc.writeMem(0x703c, { 0x31, 0x94, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2094);
        EXPECT(gbc.pc(), 0x703f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0317
        gbc.setState(0x5846, 0x2133, 0x50b0, 0xce2a, 0x1f8a, 0x1c91, 0x1, 0x1);
        gbc.writeMem(0x5846, { 0x31, 0xcb, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x46cb);
        EXPECT(gbc.pc(), 0x5849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0318
        gbc.setState(0xc961, 0x54d8, 0x3d40, 0xb386, 0x830c, 0x57b2, 0x0, 0x1);
        gbc.writeMem(0xc961, { 0x31, 0x91, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8a91);
        EXPECT(gbc.pc(), 0xc964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc961), 0x31);
        EXPECT(gbc.readMem(0xc962), 0x91);
        EXPECT(gbc.readMem(0xc963), 0x8a);
        // 31 0319
        gbc.setState(0x30bc, 0x3762, 0x8920, 0xe691, 0xb58f, 0xe327, 0x0, 0x1);
        gbc.writeMem(0x30bc, { 0x31, 0xa, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x740a);
        EXPECT(gbc.pc(), 0x30bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 031A
        gbc.setState(0xabaf, 0xe0a1, 0xc540, 0xcb17, 0xf067, 0x692c, 0x0, 0x0);
        gbc.writeMem(0xabaf, { 0x31, 0x2f, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2d2f);
        EXPECT(gbc.pc(), 0xabb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabaf), 0x31);
        EXPECT(gbc.readMem(0xabb0), 0x2f);
        EXPECT(gbc.readMem(0xabb1), 0x2d);
        // 31 031B
        gbc.setState(0x377e, 0xfe99, 0xb6b0, 0xe7a2, 0x364c, 0x8cb2, 0x1, 0x1);
        gbc.writeMem(0x377e, { 0x31, 0xa0, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x34a0);
        EXPECT(gbc.pc(), 0x3781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 031C
        gbc.setState(0xd929, 0x36fc, 0x9020, 0x97c3, 0x836b, 0x186a, 0x1, 0x1);
        gbc.writeMem(0xd929, { 0x31, 0xfa, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x18fa);
        EXPECT(gbc.pc(), 0xd92c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd929), 0x31);
        EXPECT(gbc.readMem(0xd92a), 0xfa);
        EXPECT(gbc.readMem(0xd92b), 0x18);
        // 31 031D
        gbc.setState(0x77c, 0x3a83, 0x1390, 0xc32, 0xa2ef, 0x41e2, 0x0, 0x1);
        gbc.writeMem(0x77c, { 0x31, 0x2f, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x212f);
        EXPECT(gbc.pc(), 0x77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 031E
        gbc.setState(0x39b3, 0xb498, 0x4570, 0x279d, 0x883, 0xb002, 0x1, 0x0);
        gbc.writeMem(0x39b3, { 0x31, 0x79, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9779);
        EXPECT(gbc.pc(), 0x39b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 031F
        gbc.setState(0xb2b4, 0x68c2, 0x29e0, 0x165e, 0x878a, 0x8f3a, 0x1, 0x0);
        gbc.writeMem(0xb2b4, { 0x31, 0x7b, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x517b);
        EXPECT(gbc.pc(), 0xb2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b4), 0x31);
        EXPECT(gbc.readMem(0xb2b5), 0x7b);
        EXPECT(gbc.readMem(0xb2b6), 0x51);
        // 31 0320
        gbc.setState(0xafcc, 0xf5c2, 0x8f60, 0x5f16, 0xa2c8, 0xaf27, 0x1, 0x0);
        gbc.writeMem(0xafcc, { 0x31, 0xb5, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7db5);
        EXPECT(gbc.pc(), 0xafcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafcc), 0x31);
        EXPECT(gbc.readMem(0xafcd), 0xb5);
        EXPECT(gbc.readMem(0xafce), 0x7d);
        // 31 0321
        gbc.setState(0xf18, 0xd9c8, 0x9ce0, 0xc469, 0x1deb, 0x6505, 0x1, 0x1);
        gbc.writeMem(0xf18, { 0x31, 0x3d, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7e3d);
        EXPECT(gbc.pc(), 0xf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0322
        gbc.setState(0xafe5, 0x833b, 0x2050, 0x33ca, 0xad6b, 0x5a1b, 0x0, 0x0);
        gbc.writeMem(0xafe5, { 0x31, 0xbf, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x34bf);
        EXPECT(gbc.pc(), 0xafe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe5), 0x31);
        EXPECT(gbc.readMem(0xafe6), 0xbf);
        EXPECT(gbc.readMem(0xafe7), 0x34);
        // 31 0323
        gbc.setState(0x7063, 0x7438, 0xd70, 0x4496, 0x64ae, 0xd611, 0x1, 0x1);
        gbc.writeMem(0x7063, { 0x31, 0xd2, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x14d2);
        EXPECT(gbc.pc(), 0x7066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0324
        gbc.setState(0x74d5, 0x7af2, 0x74a0, 0x25aa, 0x8af7, 0x278d, 0x0, 0x1);
        gbc.writeMem(0x74d5, { 0x31, 0x3b, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x943b);
        EXPECT(gbc.pc(), 0x74d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0325
        gbc.setState(0xbef8, 0x7f1a, 0x88a0, 0x8790, 0x383e, 0x92a6, 0x1, 0x1);
        gbc.writeMem(0xbef8, { 0x31, 0xfe, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x24fe);
        EXPECT(gbc.pc(), 0xbefb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbef8), 0x31);
        EXPECT(gbc.readMem(0xbef9), 0xfe);
        EXPECT(gbc.readMem(0xbefa), 0x24);
        // 31 0326
        gbc.setState(0xaaa2, 0x5a3c, 0x8470, 0xd9aa, 0xd371, 0x9be3, 0x0, 0x1);
        gbc.writeMem(0xaaa2, { 0x31, 0x9d, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5a9d);
        EXPECT(gbc.pc(), 0xaaa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa2), 0x31);
        EXPECT(gbc.readMem(0xaaa3), 0x9d);
        EXPECT(gbc.readMem(0xaaa4), 0x5a);
        // 31 0327
        gbc.setState(0x4806, 0xf23d, 0xadd0, 0xbf15, 0x368d, 0xa658, 0x0, 0x0);
        gbc.writeMem(0x4806, { 0x31, 0xfd, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5bfd);
        EXPECT(gbc.pc(), 0x4809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0328
        gbc.setState(0xb72, 0x5bd3, 0xf590, 0xb0b1, 0x3d5d, 0x4370, 0x0, 0x0);
        gbc.writeMem(0xb72, { 0x31, 0x83, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xff83);
        EXPECT(gbc.pc(), 0xb75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0329
        gbc.setState(0x788e, 0x95d, 0xaef0, 0xd78c, 0xa1b8, 0xe312, 0x0, 0x0);
        gbc.writeMem(0x788e, { 0x31, 0xef, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x41ef);
        EXPECT(gbc.pc(), 0x7891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 032A
        gbc.setState(0x1cf9, 0x5f23, 0x7880, 0xae0d, 0xe4bd, 0xa335, 0x0, 0x1);
        gbc.writeMem(0x1cf9, { 0x31, 0x3d, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x433d);
        EXPECT(gbc.pc(), 0x1cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 032B
        gbc.setState(0x4caa, 0xfd46, 0x4390, 0xa6b7, 0x9216, 0x4f16, 0x1, 0x0);
        gbc.writeMem(0x4caa, { 0x31, 0x8, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5508);
        EXPECT(gbc.pc(), 0x4cad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 032C
        gbc.setState(0xdc3a, 0xd159, 0x18a0, 0x35cf, 0x3517, 0x7e6c, 0x0, 0x1);
        gbc.writeMem(0xdc3a, { 0x31, 0xd8, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x56d8);
        EXPECT(gbc.pc(), 0xdc3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc3a), 0x31);
        EXPECT(gbc.readMem(0xdc3b), 0xd8);
        EXPECT(gbc.readMem(0xdc3c), 0x56);
        // 31 032D
        gbc.setState(0x3778, 0xa838, 0x2d0, 0x4d51, 0xd2d3, 0x5330, 0x1, 0x0);
        gbc.writeMem(0x3778, { 0x31, 0xec, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8aec);
        EXPECT(gbc.pc(), 0x377b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 032E
        gbc.setState(0x783d, 0xdb4f, 0x2630, 0xe7c1, 0x58d0, 0x8199, 0x1, 0x1);
        gbc.writeMem(0x783d, { 0x31, 0x5c, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2c5c);
        EXPECT(gbc.pc(), 0x7840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 032F
        gbc.setState(0x73d1, 0xb46c, 0x7200, 0x3c04, 0xc9de, 0xb8f2, 0x1, 0x1);
        gbc.writeMem(0x73d1, { 0x31, 0x4c, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x74c);
        EXPECT(gbc.pc(), 0x73d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0330
        gbc.setState(0x310f, 0x7b86, 0x1710, 0x6c4a, 0x6f16, 0xc2ae, 0x1, 0x1);
        gbc.writeMem(0x310f, { 0x31, 0xa4, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3ea4);
        EXPECT(gbc.pc(), 0x3112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0332
        gbc.setState(0x3307, 0xfc5d, 0x98a0, 0x612, 0x1fe, 0x1e4f, 0x1, 0x1);
        gbc.writeMem(0x3307, { 0x31, 0x7f, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1b7f);
        EXPECT(gbc.pc(), 0x330a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0333
        gbc.setState(0xd0b7, 0x82ed, 0xbcb0, 0x18fc, 0xd836, 0xd908, 0x0, 0x1);
        gbc.writeMem(0xd0b7, { 0x31, 0x8a, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa68a);
        EXPECT(gbc.pc(), 0xd0ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b7), 0x31);
        EXPECT(gbc.readMem(0xd0b8), 0x8a);
        EXPECT(gbc.readMem(0xd0b9), 0xa6);
        // 31 0335
        gbc.setState(0x14fa, 0x3594, 0x2900, 0xe8f7, 0xae54, 0x7312, 0x1, 0x0);
        gbc.writeMem(0x14fa, { 0x31, 0xde, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x78de);
        EXPECT(gbc.pc(), 0x14fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0336
        gbc.setState(0x259a, 0x4aa, 0x39d0, 0xbf61, 0x252b, 0xe44d, 0x1, 0x1);
        gbc.writeMem(0x259a, { 0x31, 0x3f, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x533f);
        EXPECT(gbc.pc(), 0x259d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0337
        gbc.setState(0x1d30, 0xf46f, 0x1390, 0x8070, 0x934a, 0xac70, 0x0, 0x1);
        gbc.writeMem(0x1d30, { 0x31, 0x2a, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x332a);
        EXPECT(gbc.pc(), 0x1d33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0338
        gbc.setState(0x2581, 0xf777, 0x53f0, 0xb1f7, 0x3c2d, 0xd85b, 0x1, 0x0);
        gbc.writeMem(0x2581, { 0x31, 0x86, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb286);
        EXPECT(gbc.pc(), 0x2584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0339
        gbc.setState(0x8a89, 0x7096, 0x5b40, 0x9916, 0x1d34, 0x5892, 0x1, 0x0);
        gbc.writeMem(0x8a89, { 0x31, 0x8f, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1e8f);
        EXPECT(gbc.pc(), 0x8a8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a89), 0x31);
        EXPECT(gbc.readMem(0x8a8a), 0x8f);
        EXPECT(gbc.readMem(0x8a8b), 0x1e);
        // 31 033A
        gbc.setState(0x5225, 0x5acd, 0x8760, 0xe416, 0xa607, 0x3365, 0x1, 0x1);
        gbc.writeMem(0x5225, { 0x31, 0xcd, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb2cd);
        EXPECT(gbc.pc(), 0x5228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 033B
        gbc.setState(0x5f7e, 0xdc92, 0x9780, 0xf855, 0x6565, 0x6031, 0x0, 0x0);
        gbc.writeMem(0x5f7e, { 0x31, 0x59, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8659);
        EXPECT(gbc.pc(), 0x5f81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 033C
        gbc.setState(0xad1f, 0x53db, 0x7790, 0xb218, 0xa3dd, 0x49f1, 0x0, 0x0);
        gbc.writeMem(0xad1f, { 0x31, 0x5e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x415e);
        EXPECT(gbc.pc(), 0xad22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad1f), 0x31);
        EXPECT(gbc.readMem(0xad20), 0x5e);
        EXPECT(gbc.readMem(0xad21), 0x41);
        // 31 033D
        gbc.setState(0x8b93, 0x58f9, 0x4bd0, 0x31c6, 0x7c33, 0xe758, 0x1, 0x0);
        gbc.writeMem(0x8b93, { 0x31, 0xad, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa5ad);
        EXPECT(gbc.pc(), 0x8b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b93), 0x31);
        EXPECT(gbc.readMem(0x8b94), 0xad);
        EXPECT(gbc.readMem(0x8b95), 0xa5);
        // 31 033E
        gbc.setState(0x5f96, 0xd48b, 0xfa10, 0x65ec, 0x112a, 0x112, 0x0, 0x0);
        gbc.writeMem(0x5f96, { 0x31, 0x6a, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe6a);
        EXPECT(gbc.pc(), 0x5f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 033F
        gbc.setState(0x1259, 0xa725, 0xea10, 0xb8f7, 0xc1b0, 0x8315, 0x0, 0x0);
        gbc.writeMem(0x1259, { 0x31, 0xbc, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xaebc);
        EXPECT(gbc.pc(), 0x125c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0341
        gbc.setState(0xec49, 0xf40a, 0x1100, 0xaf8a, 0x7825, 0x2a02, 0x1, 0x0);
        gbc.writeMem(0xec49, { 0x31, 0x7b, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x707b);
        EXPECT(gbc.pc(), 0xec4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec49), 0x31);
        EXPECT(gbc.readMem(0xec4a), 0x7b);
        EXPECT(gbc.readMem(0xec4b), 0x70);
        // 31 0342
        gbc.setState(0xd51f, 0xc4e5, 0x7fc0, 0xbda7, 0xb564, 0xc143, 0x1, 0x0);
        gbc.writeMem(0xd51f, { 0x31, 0x97, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcc97);
        EXPECT(gbc.pc(), 0xd522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd51f), 0x31);
        EXPECT(gbc.readMem(0xd520), 0x97);
        EXPECT(gbc.readMem(0xd521), 0xcc);
        // 31 0343
        gbc.setState(0x38af, 0xfb85, 0xb790, 0x9dd3, 0x9a00, 0x8627, 0x0, 0x1);
        gbc.writeMem(0x38af, { 0x31, 0x57, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbd57);
        EXPECT(gbc.pc(), 0x38b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0344
        gbc.setState(0x9e32, 0xbe54, 0xfeb0, 0xcc5a, 0x89c8, 0x7db4, 0x1, 0x0);
        gbc.writeMem(0x9e32, { 0x31, 0x43, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbb43);
        EXPECT(gbc.pc(), 0x9e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e32), 0x31);
        EXPECT(gbc.readMem(0x9e33), 0x43);
        EXPECT(gbc.readMem(0x9e34), 0xbb);
        // 31 0345
        gbc.setState(0x49f, 0x1a99, 0x3db0, 0xf155, 0xa211, 0x6ff5, 0x0, 0x0);
        gbc.writeMem(0x49f, { 0x31, 0x9c, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xdd9c);
        EXPECT(gbc.pc(), 0x4a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0346
        gbc.setState(0x6961, 0x1fa9, 0xe5d0, 0x7162, 0x520d, 0x7db6, 0x0, 0x1);
        gbc.writeMem(0x6961, { 0x31, 0x36, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9d36);
        EXPECT(gbc.pc(), 0x6964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0347
        gbc.setState(0x4c2b, 0x7ed1, 0x8060, 0x1e38, 0x1ec8, 0xc569, 0x0, 0x1);
        gbc.writeMem(0x4c2b, { 0x31, 0x2d, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x142d);
        EXPECT(gbc.pc(), 0x4c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0348
        gbc.setState(0x2a19, 0x7970, 0xce70, 0x348c, 0x51b1, 0x674f, 0x1, 0x1);
        gbc.writeMem(0x2a19, { 0x31, 0x46, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xed46);
        EXPECT(gbc.pc(), 0x2a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0349
        gbc.setState(0x6b77, 0xb148, 0x2850, 0x2485, 0xd950, 0x7063, 0x1, 0x0);
        gbc.writeMem(0x6b77, { 0x31, 0x4, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3804);
        EXPECT(gbc.pc(), 0x6b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 034B
        gbc.setState(0x7cd5, 0x9818, 0xda90, 0xbd6, 0xe8a1, 0xdd53, 0x0, 0x1);
        gbc.writeMem(0x7cd5, { 0x31, 0xe, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc90e);
        EXPECT(gbc.pc(), 0x7cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 034C
        gbc.setState(0x10d4, 0x6abc, 0xbbb0, 0x3426, 0x1c25, 0x9fb9, 0x0, 0x1);
        gbc.writeMem(0x10d4, { 0x31, 0x75, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4875);
        EXPECT(gbc.pc(), 0x10d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 034E
        gbc.setState(0x563a, 0x5433, 0x890, 0x302c, 0xbbaa, 0xf3ce, 0x0, 0x1);
        gbc.writeMem(0x563a, { 0x31, 0xc3, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa6c3);
        EXPECT(gbc.pc(), 0x563d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 034F
        gbc.setState(0xa237, 0x8964, 0x6510, 0xc337, 0x8e0b, 0xfc6c, 0x0, 0x0);
        gbc.writeMem(0xa237, { 0x31, 0x35, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8135);
        EXPECT(gbc.pc(), 0xa23a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa237), 0x31);
        EXPECT(gbc.readMem(0xa238), 0x35);
        EXPECT(gbc.readMem(0xa239), 0x81);
        // 31 0350
        gbc.setState(0x8162, 0xf2a9, 0x5d50, 0x1444, 0xa843, 0x88dc, 0x0, 0x1);
        gbc.writeMem(0x8162, { 0x31, 0x42, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4242);
        EXPECT(gbc.pc(), 0x8165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8162), 0x31);
        EXPECT(gbc.readMem(0x8163), 0x42);
        EXPECT(gbc.readMem(0x8164), 0x42);
        // 31 0351
        gbc.setState(0x25d5, 0x94c4, 0xa2c0, 0xf4b0, 0x2e90, 0x9d4c, 0x0, 0x0);
        gbc.writeMem(0x25d5, { 0x31, 0xb9, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd3b9);
        EXPECT(gbc.pc(), 0x25d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0352
        gbc.setState(0x7bef, 0xcaf9, 0x7530, 0x6755, 0x2669, 0xa51, 0x1, 0x0);
        gbc.writeMem(0x7bef, { 0x31, 0x41, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9c41);
        EXPECT(gbc.pc(), 0x7bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0353
        gbc.setState(0x1342, 0x1595, 0x7380, 0x7dd7, 0x9f64, 0xb5b1, 0x0, 0x1);
        gbc.writeMem(0x1342, { 0x31, 0x3e, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb33e);
        EXPECT(gbc.pc(), 0x1345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0354
        gbc.setState(0x4c82, 0x84cf, 0x3380, 0x7468, 0x6d88, 0x5315, 0x1, 0x1);
        gbc.writeMem(0x4c82, { 0x31, 0xc, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xac0c);
        EXPECT(gbc.pc(), 0x4c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0355
        gbc.setState(0xd7b9, 0x73e7, 0xa7d0, 0x4b6e, 0xb685, 0xbab8, 0x1, 0x0);
        gbc.writeMem(0xd7b9, { 0x31, 0x99, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd99);
        EXPECT(gbc.pc(), 0xd7bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b9), 0x31);
        EXPECT(gbc.readMem(0xd7ba), 0x99);
        EXPECT(gbc.readMem(0xd7bb), 0xd);
        // 31 0356
        gbc.setState(0xcc15, 0x3912, 0xefe0, 0x7ef0, 0x25b6, 0xcbd5, 0x0, 0x1);
        gbc.writeMem(0xcc15, { 0x31, 0x4f, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4f4f);
        EXPECT(gbc.pc(), 0xcc18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc15), 0x31);
        EXPECT(gbc.readMem(0xcc16), 0x4f);
        EXPECT(gbc.readMem(0xcc17), 0x4f);
        // 31 0357
        gbc.setState(0x1fb3, 0xbedc, 0xa9e0, 0x2fbc, 0xd5e7, 0xef02, 0x0, 0x1);
        gbc.writeMem(0x1fb3, { 0x31, 0x29, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5729);
        EXPECT(gbc.pc(), 0x1fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0358
        gbc.setState(0xbd81, 0x755, 0xbac0, 0xbca7, 0x2690, 0x4363, 0x1, 0x1);
        gbc.writeMem(0xbd81, { 0x31, 0x3b, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7d3b);
        EXPECT(gbc.pc(), 0xbd84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd81), 0x31);
        EXPECT(gbc.readMem(0xbd82), 0x3b);
        EXPECT(gbc.readMem(0xbd83), 0x7d);
        // 31 035A
        gbc.setState(0x5ab, 0xae9e, 0xbfe0, 0x99ff, 0x2bc7, 0xe04c, 0x1, 0x1);
        gbc.writeMem(0x5ab, { 0x31, 0x8, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1608);
        EXPECT(gbc.pc(), 0x5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 035B
        gbc.setState(0x3280, 0xed9b, 0xc2c0, 0x8690, 0xf5e6, 0x9684, 0x1, 0x0);
        gbc.writeMem(0x3280, { 0x31, 0xbf, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xaabf);
        EXPECT(gbc.pc(), 0x3283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 035C
        gbc.setState(0xbb22, 0xeb6c, 0xd1f0, 0x35b5, 0xc2e2, 0x9b5, 0x1, 0x0);
        gbc.writeMem(0xbb22, { 0x31, 0xaa, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x61aa);
        EXPECT(gbc.pc(), 0xbb25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb22), 0x31);
        EXPECT(gbc.readMem(0xbb23), 0xaa);
        EXPECT(gbc.readMem(0xbb24), 0x61);
        // 31 035D
        gbc.setState(0x42d4, 0x5b10, 0xea80, 0x8e6b, 0x803d, 0xcf40, 0x1, 0x1);
        gbc.writeMem(0x42d4, { 0x31, 0x66, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf866);
        EXPECT(gbc.pc(), 0x42d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 035E
        gbc.setState(0x71fb, 0xa8d1, 0x6560, 0xc44d, 0x1948, 0x7413, 0x0, 0x0);
        gbc.writeMem(0x71fb, { 0x31, 0x57, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xcf57);
        EXPECT(gbc.pc(), 0x71fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 035F
        gbc.setState(0x4324, 0xefce, 0xcfe0, 0xf900, 0x111c, 0x35f8, 0x1, 0x0);
        gbc.writeMem(0x4324, { 0x31, 0x8f, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x498f);
        EXPECT(gbc.pc(), 0x4327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0360
        gbc.setState(0x11fe, 0x767f, 0xc710, 0x24bd, 0xcf7c, 0x7db0, 0x0, 0x1);
        gbc.writeMem(0x11fe, { 0x31, 0xd3, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xddd3);
        EXPECT(gbc.pc(), 0x1201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0362
        gbc.setState(0x8c1c, 0x5548, 0x8af0, 0x5176, 0xbb98, 0xe333, 0x0, 0x1);
        gbc.writeMem(0x8c1c, { 0x31, 0x8, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6108);
        EXPECT(gbc.pc(), 0x8c1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1c), 0x31);
        EXPECT(gbc.readMem(0x8c1d), 0x8);
        EXPECT(gbc.readMem(0x8c1e), 0x61);
        // 31 0364
        gbc.setState(0xca89, 0x9208, 0x11e0, 0x6def, 0x88bb, 0x33cb, 0x1, 0x0);
        gbc.writeMem(0xca89, { 0x31, 0x9b, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xda9b);
        EXPECT(gbc.pc(), 0xca8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca89), 0x31);
        EXPECT(gbc.readMem(0xca8a), 0x9b);
        EXPECT(gbc.readMem(0xca8b), 0xda);
        // 31 0365
        gbc.setState(0x5923, 0xa05, 0xb320, 0x8293, 0xc83a, 0xe937, 0x1, 0x0);
        gbc.writeMem(0x5923, { 0x31, 0x3e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x203e);
        EXPECT(gbc.pc(), 0x5926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0366
        gbc.setState(0x2bd4, 0xe384, 0x5ae0, 0x4074, 0xe375, 0xe0df, 0x0, 0x0);
        gbc.writeMem(0x2bd4, { 0x31, 0x21, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa321);
        EXPECT(gbc.pc(), 0x2bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0367
        gbc.setState(0x6b1c, 0x6cd7, 0x1d0, 0x9a9b, 0xc23c, 0x9da7, 0x1, 0x1);
        gbc.writeMem(0x6b1c, { 0x31, 0x7, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd07);
        EXPECT(gbc.pc(), 0x6b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0368
        gbc.setState(0x269f, 0xd0f7, 0x2970, 0xb454, 0x276d, 0x2959, 0x1, 0x1);
        gbc.writeMem(0x269f, { 0x31, 0x2e, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x652e);
        EXPECT(gbc.pc(), 0x26a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0369
        gbc.setState(0x8169, 0x2767, 0x1500, 0x6e77, 0x2b51, 0x5b1f, 0x1, 0x0);
        gbc.writeMem(0x8169, { 0x31, 0x7c, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xeb7c);
        EXPECT(gbc.pc(), 0x816c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8169), 0x31);
        EXPECT(gbc.readMem(0x816a), 0x7c);
        EXPECT(gbc.readMem(0x816b), 0xeb);
        // 31 036A
        gbc.setState(0x72be, 0xa0a2, 0x3fd0, 0x2414, 0x4321, 0x7099, 0x1, 0x1);
        gbc.writeMem(0x72be, { 0x31, 0xac, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf5ac);
        EXPECT(gbc.pc(), 0x72c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 036B
        gbc.setState(0x3330, 0xcfd8, 0xb000, 0xf797, 0x42ca, 0x2d57, 0x0, 0x1);
        gbc.writeMem(0x3330, { 0x31, 0xe1, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xefe1);
        EXPECT(gbc.pc(), 0x3333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 036C
        gbc.setState(0x1f44, 0x93ef, 0xcda0, 0x162f, 0x369f, 0xfee3, 0x0, 0x1);
        gbc.writeMem(0x1f44, { 0x31, 0x6c, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc66c);
        EXPECT(gbc.pc(), 0x1f47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 036D
        gbc.setState(0x18c5, 0x4b61, 0x2390, 0x4a39, 0xeeda, 0x28ba, 0x1, 0x0);
        gbc.writeMem(0x18c5, { 0x31, 0xe1, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb0e1);
        EXPECT(gbc.pc(), 0x18c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 036E
        gbc.setState(0xdc50, 0x11ec, 0x3670, 0x71ad, 0x2281, 0xdbed, 0x0, 0x0);
        gbc.writeMem(0xdc50, { 0x31, 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x15cb);
        EXPECT(gbc.pc(), 0xdc53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc50), 0x31);
        EXPECT(gbc.readMem(0xdc51), 0xcb);
        EXPECT(gbc.readMem(0xdc52), 0x15);
        // 31 036F
        gbc.setState(0x7734, 0x46df, 0x8a30, 0x5050, 0x8cfc, 0x8a31, 0x1, 0x0);
        gbc.writeMem(0x7734, { 0x31, 0x4, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9204);
        EXPECT(gbc.pc(), 0x7737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0371
        gbc.setState(0xcf09, 0x1442, 0x1370, 0x2243, 0x43bd, 0xcdb, 0x1, 0x1);
        gbc.writeMem(0xcf09, { 0x31, 0xc9, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9cc9);
        EXPECT(gbc.pc(), 0xcf0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf09), 0x31);
        EXPECT(gbc.readMem(0xcf0a), 0xc9);
        EXPECT(gbc.readMem(0xcf0b), 0x9c);
        // 31 0372
        gbc.setState(0x4393, 0x8283, 0x96f0, 0x7ee2, 0xfde9, 0x8a35, 0x1, 0x0);
        gbc.writeMem(0x4393, { 0x31, 0x54, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb154);
        EXPECT(gbc.pc(), 0x4396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0373
        gbc.setState(0xa12, 0x28fc, 0xde50, 0x7c10, 0xbf77, 0x77b8, 0x0, 0x0);
        gbc.writeMem(0xa12, { 0x31, 0xbf, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9abf);
        EXPECT(gbc.pc(), 0xa15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0374
        gbc.setState(0x5466, 0x4c5a, 0x1780, 0x1f93, 0x61fe, 0x67d, 0x1, 0x0);
        gbc.writeMem(0x5466, { 0x31, 0x56, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe956);
        EXPECT(gbc.pc(), 0x5469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0375
        gbc.setState(0x6799, 0x731d, 0x20d0, 0xcbc7, 0x219a, 0x767c, 0x1, 0x1);
        gbc.writeMem(0x6799, { 0x31, 0x41, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf441);
        EXPECT(gbc.pc(), 0x679c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0377
        gbc.setState(0x109e, 0xf366, 0xf8c0, 0xfa1a, 0xe3ad, 0x3e7b, 0x1, 0x0);
        gbc.writeMem(0x109e, { 0x31, 0x0, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7c00);
        EXPECT(gbc.pc(), 0x10a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 0378
        gbc.setState(0x968b, 0xab3e, 0xfe80, 0x31a4, 0x4fe3, 0x110e, 0x0, 0x0);
        gbc.writeMem(0x968b, { 0x31, 0xb, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb10b);
        EXPECT(gbc.pc(), 0x968e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968b), 0x31);
        EXPECT(gbc.readMem(0x968c), 0xb);
        EXPECT(gbc.readMem(0x968d), 0xb1);
        // 31 0379
        gbc.setState(0xac34, 0x6c6, 0x8050, 0x9be, 0x58, 0x236a, 0x0, 0x1);
        gbc.writeMem(0xac34, { 0x31, 0x56, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3856);
        EXPECT(gbc.pc(), 0xac37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac34), 0x31);
        EXPECT(gbc.readMem(0xac35), 0x56);
        EXPECT(gbc.readMem(0xac36), 0x38);
        // 31 037A
        gbc.setState(0x5052, 0x4aa, 0xcf80, 0xf97a, 0xb063, 0x556, 0x1, 0x0);
        gbc.writeMem(0x5052, { 0x31, 0x4e, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x324e);
        EXPECT(gbc.pc(), 0x5055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 037B
        gbc.setState(0x7181, 0xad1d, 0xce40, 0x5395, 0xd4b5, 0xc07b, 0x1, 0x0);
        gbc.writeMem(0x7181, { 0x31, 0xd7, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x36d7);
        EXPECT(gbc.pc(), 0x7184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 037C
        gbc.setState(0xe25b, 0xac96, 0xa100, 0xab43, 0x254a, 0x7a37, 0x0, 0x1);
        gbc.writeMem(0xe25b, { 0x31, 0xf3, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x22f3);
        EXPECT(gbc.pc(), 0xe25e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe25b), 0x31);
        EXPECT(gbc.readMem(0xe25c), 0xf3);
        EXPECT(gbc.readMem(0xe25d), 0x22);
        // 31 037F
        gbc.setState(0xebc0, 0xe6a0, 0x7520, 0x58c9, 0x9c5d, 0x152f, 0x1, 0x0);
        gbc.writeMem(0xebc0, { 0x31, 0x12, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9912);
        EXPECT(gbc.pc(), 0xebc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc0), 0x31);
        EXPECT(gbc.readMem(0xebc1), 0x12);
        EXPECT(gbc.readMem(0xebc2), 0x99);
        // 31 0380
        gbc.setState(0x555c, 0xdee9, 0xee30, 0x2d92, 0xeba, 0x176a, 0x1, 0x1);
        gbc.writeMem(0x555c, { 0x31, 0xf4, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xef4);
        EXPECT(gbc.pc(), 0x555f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0381
        gbc.setState(0xb783, 0x1c7a, 0x4250, 0x6c2f, 0x3168, 0x6c6f, 0x0, 0x1);
        gbc.writeMem(0xb783, { 0x31, 0x49, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7549);
        EXPECT(gbc.pc(), 0xb786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb783), 0x31);
        EXPECT(gbc.readMem(0xb784), 0x49);
        EXPECT(gbc.readMem(0xb785), 0x75);
        // 31 0382
        gbc.setState(0xaed, 0xcb19, 0x95b0, 0x5767, 0x193f, 0x5a57, 0x0, 0x0);
        gbc.writeMem(0xaed, { 0x31, 0x1a, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb01a);
        EXPECT(gbc.pc(), 0xaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0383
        gbc.setState(0x266b, 0x3095, 0xcd70, 0xa1d3, 0x392, 0x135d, 0x1, 0x0);
        gbc.writeMem(0x266b, { 0x31, 0x5d, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xdb5d);
        EXPECT(gbc.pc(), 0x266e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0384
        gbc.setState(0x8e06, 0x172f, 0xd2f0, 0x888d, 0xfc31, 0x7953, 0x1, 0x0);
        gbc.writeMem(0x8e06, { 0x31, 0x5e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xcd5e);
        EXPECT(gbc.pc(), 0x8e09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e06), 0x31);
        EXPECT(gbc.readMem(0x8e07), 0x5e);
        EXPECT(gbc.readMem(0x8e08), 0xcd);
        // 31 0386
        gbc.setState(0x18e6, 0x5492, 0x49a0, 0xf61f, 0xdd96, 0x344c, 0x1, 0x0);
        gbc.writeMem(0x18e6, { 0x31, 0x87, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf487);
        EXPECT(gbc.pc(), 0x18e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 0388
        gbc.setState(0xea61, 0xc899, 0x9ee0, 0xc543, 0xfd49, 0xbe52, 0x1, 0x0);
        gbc.writeMem(0xea61, { 0x31, 0x2c, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x802c);
        EXPECT(gbc.pc(), 0xea64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea61), 0x31);
        EXPECT(gbc.readMem(0xea62), 0x2c);
        EXPECT(gbc.readMem(0xea63), 0x80);
        // 31 0389
        gbc.setState(0xc338, 0xde9e, 0x1a70, 0xad7b, 0xe0de, 0xb8e3, 0x1, 0x1);
        gbc.writeMem(0xc338, { 0x31, 0xdd, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x67dd);
        EXPECT(gbc.pc(), 0xc33b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc338), 0x31);
        EXPECT(gbc.readMem(0xc339), 0xdd);
        EXPECT(gbc.readMem(0xc33a), 0x67);
        // 31 038A
        gbc.setState(0x3f6c, 0xb992, 0xf1e0, 0xb81d, 0x1a8c, 0x98d5, 0x1, 0x0);
        gbc.writeMem(0x3f6c, { 0x31, 0xc3, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf0c3);
        EXPECT(gbc.pc(), 0x3f6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 038B
        gbc.setState(0xc664, 0x6718, 0x4fa0, 0xc3db, 0xc6b7, 0x8263, 0x1, 0x0);
        gbc.writeMem(0xc664, { 0x31, 0x7b, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcd7b);
        EXPECT(gbc.pc(), 0xc667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc664), 0x31);
        EXPECT(gbc.readMem(0xc665), 0x7b);
        EXPECT(gbc.readMem(0xc666), 0xcd);
        // 31 038C
        gbc.setState(0x2d21, 0x494c, 0x1d00, 0x2d12, 0x7556, 0xb836, 0x1, 0x1);
        gbc.writeMem(0x2d21, { 0x31, 0xb6, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfbb6);
        EXPECT(gbc.pc(), 0x2d24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 038D
        gbc.setState(0xc1d1, 0x3de3, 0xaab0, 0x2214, 0x6194, 0x482e, 0x0, 0x1);
        gbc.writeMem(0xc1d1, { 0x31, 0x9f, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd9f);
        EXPECT(gbc.pc(), 0xc1d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d1), 0x31);
        EXPECT(gbc.readMem(0xc1d2), 0x9f);
        EXPECT(gbc.readMem(0xc1d3), 0xd);
        // 31 038E
        gbc.setState(0x5c9c, 0x6bc3, 0x7460, 0xd369, 0x7a25, 0x8046, 0x1, 0x0);
        gbc.writeMem(0x5c9c, { 0x31, 0xfa, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x82fa);
        EXPECT(gbc.pc(), 0x5c9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 038F
        gbc.setState(0x2053, 0xf552, 0x53d0, 0x771, 0xbda7, 0x428, 0x1, 0x0);
        gbc.writeMem(0x2053, { 0x31, 0xe4, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xace4);
        EXPECT(gbc.pc(), 0x2056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0390
        gbc.setState(0x2f22, 0x814c, 0x2410, 0x992d, 0x4415, 0x85c, 0x0, 0x1);
        gbc.writeMem(0x2f22, { 0x31, 0x98, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3398);
        EXPECT(gbc.pc(), 0x2f25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 0392
        gbc.setState(0x8217, 0x2b6, 0xc560, 0x753f, 0x77a7, 0xa908, 0x0, 0x0);
        gbc.writeMem(0x8217, { 0x31, 0x49, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2749);
        EXPECT(gbc.pc(), 0x821a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8217), 0x31);
        EXPECT(gbc.readMem(0x8218), 0x49);
        EXPECT(gbc.readMem(0x8219), 0x27);
        // 31 0393
        gbc.setState(0xe3e6, 0x18f9, 0x3ab0, 0x2474, 0xf966, 0x135a, 0x0, 0x1);
        gbc.writeMem(0xe3e6, { 0x31, 0xf0, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8af0);
        EXPECT(gbc.pc(), 0xe3e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e6), 0x31);
        EXPECT(gbc.readMem(0xe3e7), 0xf0);
        EXPECT(gbc.readMem(0xe3e8), 0x8a);
        // 31 0394
        gbc.setState(0xb1a9, 0xee80, 0xef80, 0xef9b, 0xa74a, 0xb85b, 0x0, 0x1);
        gbc.writeMem(0xb1a9, { 0x31, 0x86, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd286);
        EXPECT(gbc.pc(), 0xb1ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a9), 0x31);
        EXPECT(gbc.readMem(0xb1aa), 0x86);
        EXPECT(gbc.readMem(0xb1ab), 0xd2);
        // 31 0395
        gbc.setState(0x8137, 0x62e3, 0x5240, 0x6dc3, 0xc842, 0xfbe2, 0x1, 0x0);
        gbc.writeMem(0x8137, { 0x31, 0x39, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3e39);
        EXPECT(gbc.pc(), 0x813a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8137), 0x31);
        EXPECT(gbc.readMem(0x8138), 0x39);
        EXPECT(gbc.readMem(0x8139), 0x3e);
        // 31 0396
        gbc.setState(0x4441, 0x570d, 0x4fb0, 0x56a6, 0xd2c, 0x6aaa, 0x1, 0x1);
        gbc.writeMem(0x4441, { 0x31, 0x29, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb229);
        EXPECT(gbc.pc(), 0x4444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 0398
        gbc.setState(0xe9d8, 0x46a8, 0xea00, 0xfa55, 0x718, 0xb062, 0x1, 0x1);
        gbc.writeMem(0xe9d8, { 0x31, 0x2c, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb72c);
        EXPECT(gbc.pc(), 0xe9db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9d8), 0x31);
        EXPECT(gbc.readMem(0xe9d9), 0x2c);
        EXPECT(gbc.readMem(0xe9da), 0xb7);
        // 31 0399
        gbc.setState(0x8267, 0xe219, 0x9db0, 0xb41, 0xb3db, 0xd3e1, 0x0, 0x1);
        gbc.writeMem(0x8267, { 0x31, 0x65, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x565);
        EXPECT(gbc.pc(), 0x826a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8267), 0x31);
        EXPECT(gbc.readMem(0x8268), 0x65);
        EXPECT(gbc.readMem(0x8269), 0x5);
        // 31 039A
        gbc.setState(0xbead, 0x45bd, 0x4100, 0xfc09, 0x5c1f, 0x418, 0x0, 0x0);
        gbc.writeMem(0xbead, { 0x31, 0x45, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7645);
        EXPECT(gbc.pc(), 0xbeb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbead), 0x31);
        EXPECT(gbc.readMem(0xbeae), 0x45);
        EXPECT(gbc.readMem(0xbeaf), 0x76);
        // 31 039B
        gbc.setState(0x82b0, 0x2030, 0xb100, 0xa78e, 0x9f78, 0x62e2, 0x1, 0x1);
        gbc.writeMem(0x82b0, { 0x31, 0x8e, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc58e);
        EXPECT(gbc.pc(), 0x82b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b0), 0x31);
        EXPECT(gbc.readMem(0x82b1), 0x8e);
        EXPECT(gbc.readMem(0x82b2), 0xc5);
        // 31 039C
        gbc.setState(0x134d, 0x86e9, 0x3320, 0xf411, 0x1bd2, 0x54a9, 0x1, 0x1);
        gbc.writeMem(0x134d, { 0x31, 0x70, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xef70);
        EXPECT(gbc.pc(), 0x1350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 039D
        gbc.setState(0x7db1, 0x4e35, 0xfd20, 0xc518, 0xc336, 0x660e, 0x1, 0x1);
        gbc.writeMem(0x7db1, { 0x31, 0x8a, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9d8a);
        EXPECT(gbc.pc(), 0x7db4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 039E
        gbc.setState(0xcd0d, 0xc368, 0x2ec0, 0xc3d4, 0xd8c6, 0xcef5, 0x0, 0x1);
        gbc.writeMem(0xcd0d, { 0x31, 0x26, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6926);
        EXPECT(gbc.pc(), 0xcd10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0d), 0x31);
        EXPECT(gbc.readMem(0xcd0e), 0x26);
        EXPECT(gbc.readMem(0xcd0f), 0x69);
        // 31 039F
        gbc.setState(0x27d4, 0x7e4, 0x16a0, 0x197e, 0xb707, 0x3e44, 0x0, 0x1);
        gbc.writeMem(0x27d4, { 0x31, 0x61, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xec61);
        EXPECT(gbc.pc(), 0x27d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 03A0
        gbc.setState(0xd305, 0x8a28, 0xa5d0, 0xe2c, 0x8c22, 0xac0f, 0x1, 0x1);
        gbc.writeMem(0xd305, { 0x31, 0xe8, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4ce8);
        EXPECT(gbc.pc(), 0xd308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd305), 0x31);
        EXPECT(gbc.readMem(0xd306), 0xe8);
        EXPECT(gbc.readMem(0xd307), 0x4c);
        // 31 03A1
        gbc.setState(0xd25a, 0xc04f, 0x8980, 0x7121, 0xcced, 0x9a5a, 0x1, 0x0);
        gbc.writeMem(0xd25a, { 0x31, 0xba, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfaba);
        EXPECT(gbc.pc(), 0xd25d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd25a), 0x31);
        EXPECT(gbc.readMem(0xd25b), 0xba);
        EXPECT(gbc.readMem(0xd25c), 0xfa);
        // 31 03A2
        gbc.setState(0x7097, 0xd736, 0x7110, 0x4e89, 0x6ead, 0xae39, 0x0, 0x1);
        gbc.writeMem(0x7097, { 0x31, 0xe9, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7fe9);
        EXPECT(gbc.pc(), 0x709a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 03A3
        gbc.setState(0x683c, 0x2061, 0x5090, 0xc8e4, 0x1ffe, 0x4569, 0x1, 0x0);
        gbc.writeMem(0x683c, { 0x31, 0x95, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xea95);
        EXPECT(gbc.pc(), 0x683f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 03A4
        gbc.setState(0x8c4e, 0x52da, 0xb2d0, 0x8d51, 0x561e, 0x7560, 0x0, 0x1);
        gbc.writeMem(0x8c4e, { 0x31, 0x84, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xad84);
        EXPECT(gbc.pc(), 0x8c51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4e), 0x31);
        EXPECT(gbc.readMem(0x8c4f), 0x84);
        EXPECT(gbc.readMem(0x8c50), 0xad);
        // 31 03A5
        gbc.setState(0x42f1, 0x616d, 0x35a0, 0x150a, 0x395b, 0x3949, 0x1, 0x0);
        gbc.writeMem(0x42f1, { 0x31, 0x70, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9670);
        EXPECT(gbc.pc(), 0x42f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 03A6
        gbc.setState(0x6921, 0xcb28, 0x70e0, 0xe532, 0x2914, 0x183f, 0x0, 0x1);
        gbc.writeMem(0x6921, { 0x31, 0xf3, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb4f3);
        EXPECT(gbc.pc(), 0x6924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 03A7
        gbc.setState(0x9244, 0xa61f, 0x2fc0, 0xa602, 0x59b5, 0xb000, 0x0, 0x1);
        gbc.writeMem(0x9244, { 0x31, 0x8f, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xbd8f);
        EXPECT(gbc.pc(), 0x9247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9244), 0x31);
        EXPECT(gbc.readMem(0x9245), 0x8f);
        EXPECT(gbc.readMem(0x9246), 0xbd);
        // 31 03A8
        gbc.setState(0xa336, 0xcb1c, 0x4db0, 0x76fe, 0x524d, 0x25d3, 0x0, 0x0);
        gbc.writeMem(0xa336, { 0x31, 0xd4, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb5d4);
        EXPECT(gbc.pc(), 0xa339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa336), 0x31);
        EXPECT(gbc.readMem(0xa337), 0xd4);
        EXPECT(gbc.readMem(0xa338), 0xb5);
        // 31 03A9
        gbc.setState(0x40b0, 0x1639, 0x3610, 0x3700, 0xd05e, 0xb121, 0x0, 0x0);
        gbc.writeMem(0x40b0, { 0x31, 0x64, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa164);
        EXPECT(gbc.pc(), 0x40b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 03AA
        gbc.setState(0x629d, 0xa08d, 0x92c0, 0x9394, 0xeaf4, 0xf160, 0x0, 0x0);
        gbc.writeMem(0x629d, { 0x31, 0x47, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8247);
        EXPECT(gbc.pc(), 0x62a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 03AB
        gbc.setState(0x575c, 0xc7b1, 0xff70, 0xb442, 0x1757, 0x3e1, 0x0, 0x0);
        gbc.writeMem(0x575c, { 0x31, 0xa2, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x96a2);
        EXPECT(gbc.pc(), 0x575f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 03AC
        gbc.setState(0xe6c, 0xd85c, 0x9790, 0x6097, 0xc3da, 0xf9d2, 0x1, 0x0);
        gbc.writeMem(0xe6c, { 0x31, 0x4, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x304);
        EXPECT(gbc.pc(), 0xe6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 03AD
        gbc.setState(0x6ddf, 0x9536, 0x6c20, 0x9836, 0x2331, 0x3854, 0x0, 0x0);
        gbc.writeMem(0x6ddf, { 0x31, 0x94, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7294);
        EXPECT(gbc.pc(), 0x6de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 03AE
        gbc.setState(0x4511, 0xd0bc, 0xcbb0, 0x68c3, 0x3261, 0x191b, 0x0, 0x1);
        gbc.writeMem(0x4511, { 0x31, 0x2, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb902);
        EXPECT(gbc.pc(), 0x4514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 03AF
        gbc.setState(0x6835, 0xf97d, 0xb960, 0xe20, 0x1c54, 0xc649, 0x1, 0x1);
        gbc.writeMem(0x6835, { 0x31, 0x1f, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8b1f);
        EXPECT(gbc.pc(), 0x6838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 03B0
        gbc.setState(0x1392, 0x1fb3, 0xf7c0, 0x6e8e, 0xb7, 0xa3d9, 0x1, 0x0);
        gbc.writeMem(0x1392, { 0x31, 0x73, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5b73);
        EXPECT(gbc.pc(), 0x1395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 03B1
        gbc.setState(0x8aa1, 0xbdbb, 0xfb90, 0x4edc, 0xdc08, 0x48b0, 0x1, 0x0);
        gbc.writeMem(0x8aa1, { 0x31, 0x16, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1716);
        EXPECT(gbc.pc(), 0x8aa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aa1), 0x31);
        EXPECT(gbc.readMem(0x8aa2), 0x16);
        EXPECT(gbc.readMem(0x8aa3), 0x17);
        // 31 03B2
        gbc.setState(0x3c99, 0x6d9d, 0x5030, 0xe20a, 0x3826, 0x576f, 0x1, 0x1);
        gbc.writeMem(0x3c99, { 0x31, 0x78, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xcc78);
        EXPECT(gbc.pc(), 0x3c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 03B3
        gbc.setState(0x3d96, 0x7b72, 0x10, 0x3267, 0x9b20, 0xc9b2, 0x0, 0x1);
        gbc.writeMem(0x3d96, { 0x31, 0xc9, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x99c9);
        EXPECT(gbc.pc(), 0x3d99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 03B4
        gbc.setState(0xbcfc, 0x53ec, 0xc530, 0xcdaf, 0x5657, 0x6b8b, 0x1, 0x0);
        gbc.writeMem(0xbcfc, { 0x31, 0x7e, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x117e);
        EXPECT(gbc.pc(), 0xbcff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcfc), 0x31);
        EXPECT(gbc.readMem(0xbcfd), 0x7e);
        EXPECT(gbc.readMem(0xbcfe), 0x11);
        // 31 03B5
        gbc.setState(0xd19e, 0x3e5, 0x2d50, 0xf4b4, 0x65fd, 0x698a, 0x1, 0x0);
        gbc.writeMem(0xd19e, { 0x31, 0x45, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x45);
        EXPECT(gbc.pc(), 0xd1a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd19e), 0x31);
        EXPECT(gbc.readMem(0xd19f), 0x45);
        EXPECT(gbc.readMem(0xd1a0), 0x0);
        // 31 03B6
        gbc.setState(0xd5b2, 0x1ee6, 0x17f0, 0xf4f5, 0xe7e3, 0xbf64, 0x1, 0x1);
        gbc.writeMem(0xd5b2, { 0x31, 0x68, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd368);
        EXPECT(gbc.pc(), 0xd5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b2), 0x31);
        EXPECT(gbc.readMem(0xd5b3), 0x68);
        EXPECT(gbc.readMem(0xd5b4), 0xd3);
        // 31 03B7
        gbc.setState(0xbbed, 0x4854, 0xb000, 0x1d9d, 0x390a, 0x662d, 0x0, 0x1);
        gbc.writeMem(0xbbed, { 0x31, 0x61, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x661);
        EXPECT(gbc.pc(), 0xbbf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbed), 0x31);
        EXPECT(gbc.readMem(0xbbee), 0x61);
        EXPECT(gbc.readMem(0xbbef), 0x6);
        // 31 03B8
        gbc.setState(0x5454, 0xbe1b, 0x1a30, 0x16ba, 0x4c25, 0xe802, 0x0, 0x1);
        gbc.writeMem(0x5454, { 0x31, 0xb8, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe2b8);
        EXPECT(gbc.pc(), 0x5457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 03B9
        gbc.setState(0xce86, 0xabaa, 0x48f0, 0xcc4d, 0xc44d, 0x81d1, 0x0, 0x0);
        gbc.writeMem(0xce86, { 0x31, 0x3c, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x533c);
        EXPECT(gbc.pc(), 0xce89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce86), 0x31);
        EXPECT(gbc.readMem(0xce87), 0x3c);
        EXPECT(gbc.readMem(0xce88), 0x53);
        // 31 03BA
        gbc.setState(0x77d6, 0xfe74, 0x1ad0, 0xf240, 0x5991, 0x5a63, 0x1, 0x0);
        gbc.writeMem(0x77d6, { 0x31, 0xa5, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd4a5);
        EXPECT(gbc.pc(), 0x77d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 03BB
        gbc.setState(0xb692, 0x7609, 0x4dd0, 0xdcf6, 0x6876, 0xd3c4, 0x1, 0x0);
        gbc.writeMem(0xb692, { 0x31, 0x29, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb029);
        EXPECT(gbc.pc(), 0xb695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb692), 0x31);
        EXPECT(gbc.readMem(0xb693), 0x29);
        EXPECT(gbc.readMem(0xb694), 0xb0);
        // 31 03BC
        gbc.setState(0x20bd, 0x292f, 0x7600, 0x3d93, 0x33bc, 0xccbc, 0x0, 0x0);
        gbc.writeMem(0x20bd, { 0x31, 0x61, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5561);
        EXPECT(gbc.pc(), 0x20c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 03BD
        gbc.setState(0x8f6, 0xb984, 0xd20, 0x3eee, 0xfcfb, 0xb548, 0x1, 0x0);
        gbc.writeMem(0x8f6, { 0x31, 0x23, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9223);
        EXPECT(gbc.pc(), 0x8f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 03BE
        gbc.setState(0xe712, 0x7666, 0xdd50, 0x6661, 0xb782, 0x9d82, 0x0, 0x0);
        gbc.writeMem(0xe712, { 0x31, 0x47, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa947);
        EXPECT(gbc.pc(), 0xe715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe712), 0x31);
        EXPECT(gbc.readMem(0xe713), 0x47);
        EXPECT(gbc.readMem(0xe714), 0xa9);
        // 31 03BF
        gbc.setState(0x5392, 0xcdc3, 0xfdf0, 0xa039, 0x47ce, 0x2cb5, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0x31, 0xf6, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa1f6);
        EXPECT(gbc.pc(), 0x5395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 03C0
        gbc.setState(0xe7c5, 0xed0d, 0xbe00, 0x104, 0x1216, 0x4c8, 0x1, 0x0);
        gbc.writeMem(0xe7c5, { 0x31, 0xce, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6ece);
        EXPECT(gbc.pc(), 0xe7c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c5), 0x31);
        EXPECT(gbc.readMem(0xe7c6), 0xce);
        EXPECT(gbc.readMem(0xe7c7), 0x6e);
        // 31 03C1
        gbc.setState(0x661d, 0xb12d, 0x37c0, 0xbe55, 0xed63, 0xf389, 0x1, 0x0);
        gbc.writeMem(0x661d, { 0x31, 0x55, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3855);
        EXPECT(gbc.pc(), 0x6620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 03C2
        gbc.setState(0x4f31, 0xab7, 0x2280, 0x3c92, 0x2ef0, 0xda4d, 0x1, 0x0);
        gbc.writeMem(0x4f31, { 0x31, 0x21, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2121);
        EXPECT(gbc.pc(), 0x4f34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 03C3
        gbc.setState(0x6d, 0xd1f0, 0x3650, 0x6be3, 0xa095, 0xdbbd, 0x0, 0x0);
        gbc.writeMem(0x6d, { 0x31, 0x29, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9429);
        EXPECT(gbc.pc(), 0x70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 03C4
        gbc.setState(0x1738, 0xb0cd, 0xa900, 0x9ce1, 0x66d9, 0x6769, 0x0, 0x0);
        gbc.writeMem(0x1738, { 0x31, 0xbd, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb7bd);
        EXPECT(gbc.pc(), 0x173b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 03C5
        gbc.setState(0x98b7, 0xa9d, 0x47b0, 0xfe3c, 0x303e, 0xe88b, 0x0, 0x0);
        gbc.writeMem(0x98b7, { 0x31, 0x30, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdf30);
        EXPECT(gbc.pc(), 0x98ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98b7), 0x31);
        EXPECT(gbc.readMem(0x98b8), 0x30);
        EXPECT(gbc.readMem(0x98b9), 0xdf);
        // 31 03C6
        gbc.setState(0x5de8, 0x9959, 0x4ce0, 0x64a4, 0xb14b, 0xf7b4, 0x0, 0x0);
        gbc.writeMem(0x5de8, { 0x31, 0xee, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9dee);
        EXPECT(gbc.pc(), 0x5deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 03C7
        gbc.setState(0x1e5d, 0x64f3, 0xf1a0, 0x77fa, 0x1f2a, 0x5c26, 0x0, 0x0);
        gbc.writeMem(0x1e5d, { 0x31, 0x91, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd091);
        EXPECT(gbc.pc(), 0x1e60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 03C8
        gbc.setState(0xc0e2, 0x483f, 0x200, 0x6194, 0x99a6, 0x4c2c, 0x1, 0x0);
        gbc.writeMem(0xc0e2, { 0x31, 0x41, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3c41);
        EXPECT(gbc.pc(), 0xc0e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e2), 0x31);
        EXPECT(gbc.readMem(0xc0e3), 0x41);
        EXPECT(gbc.readMem(0xc0e4), 0x3c);
        // 31 03C9
        gbc.setState(0x8a68, 0x15d1, 0xa490, 0x29cf, 0x8f25, 0x4411, 0x1, 0x0);
        gbc.writeMem(0x8a68, { 0x31, 0x8, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5808);
        EXPECT(gbc.pc(), 0x8a6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a68), 0x31);
        EXPECT(gbc.readMem(0x8a69), 0x8);
        EXPECT(gbc.readMem(0x8a6a), 0x58);
        // 31 03CA
        gbc.setState(0xab17, 0x7e3b, 0xc950, 0x855d, 0xe69, 0xe4af, 0x0, 0x1);
        gbc.writeMem(0xab17, { 0x31, 0x9a, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x959a);
        EXPECT(gbc.pc(), 0xab1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab17), 0x31);
        EXPECT(gbc.readMem(0xab18), 0x9a);
        EXPECT(gbc.readMem(0xab19), 0x95);
        // 31 03CB
        gbc.setState(0x6f8e, 0xd55a, 0xea0, 0xf287, 0xe4e5, 0x4977, 0x1, 0x1);
        gbc.writeMem(0x6f8e, { 0x31, 0xa7, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd4a7);
        EXPECT(gbc.pc(), 0x6f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 03CC
        gbc.setState(0x4d9f, 0xdbe0, 0x6030, 0xa082, 0x64c0, 0xe35, 0x1, 0x0);
        gbc.writeMem(0x4d9f, { 0x31, 0x99, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2c99);
        EXPECT(gbc.pc(), 0x4da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 03CD
        gbc.setState(0x9e30, 0xae22, 0x5420, 0x3674, 0xc6c9, 0x8d7d, 0x1, 0x1);
        gbc.writeMem(0x9e30, { 0x31, 0x47, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7847);
        EXPECT(gbc.pc(), 0x9e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e30), 0x31);
        EXPECT(gbc.readMem(0x9e31), 0x47);
        EXPECT(gbc.readMem(0x9e32), 0x78);
        // 31 03CE
        gbc.setState(0x513e, 0x45d5, 0xede0, 0x5352, 0xc970, 0xd908, 0x1, 0x1);
        gbc.writeMem(0x513e, { 0x31, 0x49, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc649);
        EXPECT(gbc.pc(), 0x5141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 03D1
        gbc.setState(0x8355, 0x81b8, 0x40b0, 0x124e, 0xce95, 0x4cd0, 0x1, 0x1);
        gbc.writeMem(0x8355, { 0x31, 0x12, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xab12);
        EXPECT(gbc.pc(), 0x8358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8355), 0x31);
        EXPECT(gbc.readMem(0x8356), 0x12);
        EXPECT(gbc.readMem(0x8357), 0xab);
        // 31 03D3
        gbc.setState(0xa68e, 0xce8e, 0x69a0, 0x4287, 0x6be2, 0x3fc8, 0x0, 0x1);
        gbc.writeMem(0xa68e, { 0x31, 0xa5, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8fa5);
        EXPECT(gbc.pc(), 0xa691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa68e), 0x31);
        EXPECT(gbc.readMem(0xa68f), 0xa5);
        EXPECT(gbc.readMem(0xa690), 0x8f);
        // 31 03D4
        gbc.setState(0x22f, 0xcefe, 0x9300, 0x183b, 0xbae9, 0xed9, 0x1, 0x0);
        gbc.writeMem(0x22f, { 0x31, 0xae, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7fae);
        EXPECT(gbc.pc(), 0x232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 31 03D5
        gbc.setState(0xe877, 0xad27, 0xedb0, 0x7926, 0x22d8, 0x569c, 0x1, 0x1);
        gbc.writeMem(0xe877, { 0x31, 0x6e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6b6e);
        EXPECT(gbc.pc(), 0xe87a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe877), 0x31);
        EXPECT(gbc.readMem(0xe878), 0x6e);
        EXPECT(gbc.readMem(0xe879), 0x6b);
        // 31 03D6
        gbc.setState(0xe827, 0x598a, 0x1610, 0x3ffb, 0xbc6f, 0x4c02, 0x1, 0x0);
        gbc.writeMem(0xe827, { 0x31, 0x4c, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xfe4c);
        EXPECT(gbc.pc(), 0xe82a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe827), 0x31);
        EXPECT(gbc.readMem(0xe828), 0x4c);
        EXPECT(gbc.readMem(0xe829), 0xfe);
        // 31 03D7
        gbc.setState(0x71c8, 0x4f1f, 0x6290, 0x852a, 0x4336, 0xa8cf, 0x0, 0x1);
        gbc.writeMem(0x71c8, { 0x31, 0x50, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x350);
        EXPECT(gbc.pc(), 0x71cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 03D8
        gbc.setState(0x5372, 0x3e1, 0x54b0, 0x3dd1, 0x844c, 0x286e, 0x0, 0x0);
        gbc.writeMem(0x5372, { 0x31, 0x61, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3d61);
        EXPECT(gbc.pc(), 0x5375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 03D9
        gbc.setState(0xdd66, 0x4ff5, 0x3c60, 0xeb12, 0xac3f, 0xa778, 0x0, 0x0);
        gbc.writeMem(0xdd66, { 0x31, 0xa4, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x74a4);
        EXPECT(gbc.pc(), 0xdd69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd66), 0x31);
        EXPECT(gbc.readMem(0xdd67), 0xa4);
        EXPECT(gbc.readMem(0xdd68), 0x74);
        // 31 03DA
        gbc.setState(0x11b3, 0x5543, 0x8e0, 0x38d3, 0x258b, 0xee6e, 0x1, 0x1);
        gbc.writeMem(0x11b3, { 0x31, 0x1c, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdd1c);
        EXPECT(gbc.pc(), 0x11b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 31 03DB
        gbc.setState(0xd535, 0x1544, 0x7910, 0xeb0d, 0xcb81, 0x507e, 0x1, 0x1);
        gbc.writeMem(0xd535, { 0x31, 0x7c, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x57c);
        EXPECT(gbc.pc(), 0xd538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd535), 0x31);
        EXPECT(gbc.readMem(0xd536), 0x7c);
        EXPECT(gbc.readMem(0xd537), 0x5);
        // 31 03DC
        gbc.setState(0x66c0, 0x2414, 0x8270, 0x1c48, 0xfa17, 0xc91, 0x0, 0x1);
        gbc.writeMem(0x66c0, { 0x31, 0xe, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x710e);
        EXPECT(gbc.pc(), 0x66c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 31 03DD
        gbc.setState(0xc2d1, 0xa87b, 0x8b10, 0x67, 0x4523, 0x8fc8, 0x1, 0x1);
        gbc.writeMem(0xc2d1, { 0x31, 0x99, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9199);
        EXPECT(gbc.pc(), 0xc2d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d1), 0x31);
        EXPECT(gbc.readMem(0xc2d2), 0x99);
        EXPECT(gbc.readMem(0xc2d3), 0x91);
        // 31 03DE
        gbc.setState(0x5197, 0x5078, 0xa10, 0xc4e5, 0x3a61, 0x75bc, 0x1, 0x0);
        gbc.writeMem(0x5197, { 0x31, 0xad, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x10ad);
        EXPECT(gbc.pc(), 0x519a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 03DF
        gbc.setState(0x57a1, 0x4280, 0x90, 0xdd6, 0xc178, 0xfe26, 0x1, 0x1);
        gbc.writeMem(0x57a1, { 0x31, 0x1a, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x81a);
        EXPECT(gbc.pc(), 0x57a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 03E0
        gbc.setState(0xddf5, 0xbbac, 0xa080, 0xce4f, 0x790a, 0xb1a1, 0x0, 0x0);
        gbc.writeMem(0xddf5, { 0x31, 0xe, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdc0e);
        EXPECT(gbc.pc(), 0xddf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf5), 0x31);
        EXPECT(gbc.readMem(0xddf6), 0xe);
        EXPECT(gbc.readMem(0xddf7), 0xdc);
        // 31 03E1
        gbc.setState(0xa48f, 0xd01a, 0x3bd0, 0xa0c3, 0x5c4c, 0xe155, 0x1, 0x1);
        gbc.writeMem(0xa48f, { 0x31, 0xd2, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x23d2);
        EXPECT(gbc.pc(), 0xa492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa48f), 0x31);
        EXPECT(gbc.readMem(0xa490), 0xd2);
        EXPECT(gbc.readMem(0xa491), 0x23);
        // 31 03E2
        gbc.setState(0xc38e, 0xa947, 0x4470, 0x2f05, 0x4761, 0x6290, 0x0, 0x1);
        gbc.writeMem(0xc38e, { 0x31, 0xf9, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5df9);
        EXPECT(gbc.pc(), 0xc391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc38e), 0x31);
        EXPECT(gbc.readMem(0xc38f), 0xf9);
        EXPECT(gbc.readMem(0xc390), 0x5d);
        // 31 03E3
        gbc.setState(0xb3fb, 0x895, 0x4040, 0xe096, 0x36dd, 0x2c45, 0x1, 0x1);
        gbc.writeMem(0xb3fb, { 0x31, 0xe8, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x38e8);
        EXPECT(gbc.pc(), 0xb3fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3fb), 0x31);
        EXPECT(gbc.readMem(0xb3fc), 0xe8);
        EXPECT(gbc.readMem(0xb3fd), 0x38);
        // 31 03E5
        gbc.setState(0x5b31, 0x6609, 0x7110, 0xcb66, 0xb169, 0xe40d, 0x0, 0x0);
        gbc.writeMem(0x5b31, { 0x31, 0xa8, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb2a8);
        EXPECT(gbc.pc(), 0x5b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 31 03E6
        gbc.setState(0x9aee, 0xea05, 0xc0c0, 0x929f, 0x9222, 0xe3b1, 0x0, 0x0);
        gbc.writeMem(0x9aee, { 0x31, 0xfb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb6fb);
        EXPECT(gbc.pc(), 0x9af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aee), 0x31);
        EXPECT(gbc.readMem(0x9aef), 0xfb);
        EXPECT(gbc.readMem(0x9af0), 0xb6);
        // 31 03E7
        gbc.setState(0x845d, 0xd722, 0xce80, 0xba8a, 0x144b, 0xd402, 0x1, 0x0);
        gbc.writeMem(0x845d, { 0x31, 0x39, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xba39);
        EXPECT(gbc.pc(), 0x8460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x845d), 0x31);
        EXPECT(gbc.readMem(0x845e), 0x39);
        EXPECT(gbc.readMem(0x845f), 0xba);
    }
