    TEST(gbcemu, opcode_31) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 31 0000
        gbc.setState(0x6a44, 0x4494, 0xd040, 0xf95f, 0xbaab, 0x2f14, 0x1, 0x1);
        gbc.writeMem(0x6a44, { 0x31, 0x1d, 0x2c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2c1d, gbc.sp());
        EXPECT(0x6a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0001
        gbc.setState(0xabe4, 0x27c9, 0xb910, 0x17aa, 0xa477, 0x1ad1, 0x0, 0x1);
        gbc.writeMem(0xabe4, { 0x31, 0xda, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xda, gbc.sp());
        EXPECT(0xabe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xabe4));
        EXPECT(0xda, gbc.readMem(0xabe5));
        EXPECT(0x0, gbc.readMem(0xabe6));
        // 31 0002
        gbc.setState(0x924a, 0x26b0, 0xee00, 0x6935, 0x4bf3, 0x6681, 0x1, 0x1);
        gbc.writeMem(0x924a, { 0x31, 0x9f, 0x6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x69f, gbc.sp());
        EXPECT(0x924d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x924a));
        EXPECT(0x9f, gbc.readMem(0x924b));
        EXPECT(0x6, gbc.readMem(0x924c));
        // 31 0003
        gbc.setState(0xbab, 0x410, 0x32b0, 0x2984, 0x4410, 0xcca8, 0x1, 0x0);
        gbc.writeMem(0xbab, { 0x31, 0x70, 0xa });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa70, gbc.sp());
        EXPECT(0xbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0004
        gbc.setState(0xd41e, 0x7a16, 0xdd80, 0x3194, 0x9c43, 0x6015, 0x0, 0x0);
        gbc.writeMem(0xd41e, { 0x31, 0x7b, 0xe1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe17b, gbc.sp());
        EXPECT(0xd421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd41e));
        EXPECT(0x7b, gbc.readMem(0xd41f));
        EXPECT(0xe1, gbc.readMem(0xd420));
        // 31 0005
        gbc.setState(0xe95a, 0xa246, 0x3940, 0xbe4f, 0xa9d5, 0xe3d2, 0x0, 0x0);
        gbc.writeMem(0xe95a, { 0x31, 0x2e, 0xa });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa2e, gbc.sp());
        EXPECT(0xe95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe95a));
        EXPECT(0x2e, gbc.readMem(0xe95b));
        EXPECT(0xa, gbc.readMem(0xe95c));
        // 31 0006
        gbc.setState(0x3f24, 0x41f, 0x2980, 0x88da, 0xac9b, 0xf097, 0x1, 0x0);
        gbc.writeMem(0x3f24, { 0x31, 0xb3, 0x60 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x60b3, gbc.sp());
        EXPECT(0x3f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0007
        gbc.setState(0x2470, 0xc28e, 0xa760, 0x833e, 0xcfaf, 0xe63e, 0x1, 0x0);
        gbc.writeMem(0x2470, { 0x31, 0xdb, 0x32 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x32db, gbc.sp());
        EXPECT(0x2473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0008
        gbc.setState(0x2095, 0x6045, 0x84c0, 0x3d50, 0x64f, 0x245e, 0x1, 0x0);
        gbc.writeMem(0x2095, { 0x31, 0x80, 0xce });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xce80, gbc.sp());
        EXPECT(0x2098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0009
        gbc.setState(0xdde, 0x9484, 0xd700, 0xd65d, 0x63dd, 0xbd3d, 0x1, 0x1);
        gbc.writeMem(0xdde, { 0x31, 0x56, 0x68 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6856, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 000A
        gbc.setState(0x5dde, 0x2da9, 0x6800, 0xe321, 0xeb33, 0xbfd7, 0x1, 0x0);
        gbc.writeMem(0x5dde, { 0x31, 0x80, 0x18 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1880, gbc.sp());
        EXPECT(0x5de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 000B
        gbc.setState(0xa715, 0xf28d, 0xb6d0, 0x8602, 0xbb67, 0xdfaa, 0x1, 0x0);
        gbc.writeMem(0xa715, { 0x31, 0x2f, 0xf2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf22f, gbc.sp());
        EXPECT(0xa718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa715));
        EXPECT(0x2f, gbc.readMem(0xa716));
        EXPECT(0xf2, gbc.readMem(0xa717));
        // 31 000C
        gbc.setState(0x4646, 0x6ac6, 0x7680, 0xaf73, 0x52da, 0x4755, 0x0, 0x1);
        gbc.writeMem(0x4646, { 0x31, 0x93, 0x2a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2a93, gbc.sp());
        EXPECT(0x4649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 000D
        gbc.setState(0xd38f, 0xe203, 0x3c10, 0x6777, 0xfc8, 0xc592, 0x0, 0x0);
        gbc.writeMem(0xd38f, { 0x31, 0x48, 0xe });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe48, gbc.sp());
        EXPECT(0xd392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd38f));
        EXPECT(0x48, gbc.readMem(0xd390));
        EXPECT(0xe, gbc.readMem(0xd391));
        // 31 000E
        gbc.setState(0x3cf4, 0x50cc, 0x55e0, 0x79a2, 0x6c01, 0x15f6, 0x1, 0x1);
        gbc.writeMem(0x3cf4, { 0x31, 0x84, 0x6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x684, gbc.sp());
        EXPECT(0x3cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 000F
        gbc.setState(0xd46a, 0x53d, 0x5750, 0xf6c2, 0xe67a, 0x547e, 0x1, 0x1);
        gbc.writeMem(0xd46a, { 0x31, 0xf7, 0xf });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xff7, gbc.sp());
        EXPECT(0xd46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd46a));
        EXPECT(0xf7, gbc.readMem(0xd46b));
        EXPECT(0xf, gbc.readMem(0xd46c));
        // 31 0010
        gbc.setState(0x7327, 0x97c6, 0x7100, 0x7b4, 0xc121, 0xe18c, 0x0, 0x1);
        gbc.writeMem(0x7327, { 0x31, 0x88, 0x5e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5e88, gbc.sp());
        EXPECT(0x732a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0011
        gbc.setState(0xcfc3, 0xc924, 0x48d0, 0x4f46, 0x7cbb, 0x7a5d, 0x1, 0x1);
        gbc.writeMem(0xcfc3, { 0x31, 0xf, 0x3d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3d0f, gbc.sp());
        EXPECT(0xcfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcfc3));
        EXPECT(0xf, gbc.readMem(0xcfc4));
        EXPECT(0x3d, gbc.readMem(0xcfc5));
        // 31 0012
        gbc.setState(0x87d2, 0x6046, 0x8d00, 0xc4f8, 0x72c1, 0xf75e, 0x1, 0x0);
        gbc.writeMem(0x87d2, { 0x31, 0xd, 0x60 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x600d, gbc.sp());
        EXPECT(0x87d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x87d2));
        EXPECT(0xd, gbc.readMem(0x87d3));
        EXPECT(0x60, gbc.readMem(0x87d4));
        // 31 0013
        gbc.setState(0x2ccd, 0x4a61, 0xcec0, 0x5f46, 0x33c, 0xefea, 0x1, 0x0);
        gbc.writeMem(0x2ccd, { 0x31, 0x5, 0x80 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8005, gbc.sp());
        EXPECT(0x2cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0014
        gbc.setState(0x69c4, 0x81d1, 0x9d10, 0x2702, 0x4a20, 0xc9dc, 0x0, 0x0);
        gbc.writeMem(0x69c4, { 0x31, 0x5f, 0xe6 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe65f, gbc.sp());
        EXPECT(0x69c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0015
        gbc.setState(0xb983, 0x16f9, 0xd540, 0x7338, 0xce2e, 0x7496, 0x1, 0x0);
        gbc.writeMem(0xb983, { 0x31, 0x1c, 0x30 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x301c, gbc.sp());
        EXPECT(0xb986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb983));
        EXPECT(0x1c, gbc.readMem(0xb984));
        EXPECT(0x30, gbc.readMem(0xb985));
        // 31 0017
        gbc.setState(0x9976, 0xdcca, 0x5e30, 0x10d7, 0xbc08, 0x1731, 0x1, 0x0);
        gbc.writeMem(0x9976, { 0x31, 0x14, 0xbe });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbe14, gbc.sp());
        EXPECT(0x9979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9976));
        EXPECT(0x14, gbc.readMem(0x9977));
        EXPECT(0xbe, gbc.readMem(0x9978));
        // 31 0018
        gbc.setState(0xce47, 0x688, 0x8340, 0xca9, 0xd44d, 0x204a, 0x0, 0x1);
        gbc.writeMem(0xce47, { 0x31, 0x35, 0x99 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9935, gbc.sp());
        EXPECT(0xce4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xce47));
        EXPECT(0x35, gbc.readMem(0xce48));
        EXPECT(0x99, gbc.readMem(0xce49));
        // 31 0019
        gbc.setState(0x6825, 0x25c4, 0x3130, 0x2e43, 0x86d0, 0xc9ed, 0x1, 0x1);
        gbc.writeMem(0x6825, { 0x31, 0x6d, 0x97 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x976d, gbc.sp());
        EXPECT(0x6828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 001A
        gbc.setState(0x4ca, 0x22e3, 0xec40, 0x296a, 0x9864, 0xcc77, 0x1, 0x0);
        gbc.writeMem(0x4ca, { 0x31, 0xad, 0xd2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd2ad, gbc.sp());
        EXPECT(0x4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 001B
        gbc.setState(0x440, 0xcaa5, 0x6a30, 0x67c9, 0x4205, 0xf65f, 0x1, 0x1);
        gbc.writeMem(0x440, { 0x31, 0xca, 0x9f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9fca, gbc.sp());
        EXPECT(0x443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 001C
        gbc.setState(0x13f3, 0x5c1e, 0x9ba0, 0xdb99, 0x4f29, 0x8f16, 0x1, 0x1);
        gbc.writeMem(0x13f3, { 0x31, 0x66, 0x36 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3666, gbc.sp());
        EXPECT(0x13f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 001D
        gbc.setState(0xc58a, 0x7232, 0xbf30, 0xf028, 0xeb9a, 0x3eb0, 0x1, 0x1);
        gbc.writeMem(0xc58a, { 0x31, 0x44, 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc44, gbc.sp());
        EXPECT(0xc58d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc58a));
        EXPECT(0x44, gbc.readMem(0xc58b));
        EXPECT(0xc, gbc.readMem(0xc58c));
        // 31 001E
        gbc.setState(0x2d47, 0x500c, 0xb960, 0xba2c, 0xa62d, 0x6a98, 0x1, 0x0);
        gbc.writeMem(0x2d47, { 0x31, 0xaf, 0x12 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x12af, gbc.sp());
        EXPECT(0x2d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 001F
        gbc.setState(0xe2ef, 0xc3f0, 0x9920, 0x9af1, 0x8c2, 0x464d, 0x1, 0x0);
        gbc.writeMem(0xe2ef, { 0x31, 0x1e, 0xbf });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbf1e, gbc.sp());
        EXPECT(0xe2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe2ef));
        EXPECT(0x1e, gbc.readMem(0xe2f0));
        EXPECT(0xbf, gbc.readMem(0xe2f1));
        // 31 0020
        gbc.setState(0x5c3b, 0xf015, 0xee0, 0x3195, 0x1d14, 0x9420, 0x0, 0x1);
        gbc.writeMem(0x5c3b, { 0x31, 0xfc, 0x4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4fc, gbc.sp());
        EXPECT(0x5c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0021
        gbc.setState(0x1d3e, 0xf1b7, 0x5ac0, 0xfac2, 0x82f5, 0x94a0, 0x1, 0x0);
        gbc.writeMem(0x1d3e, { 0x31, 0xb3, 0x86 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x86b3, gbc.sp());
        EXPECT(0x1d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0022
        gbc.setState(0xef0e, 0x7f5b, 0xb430, 0xac78, 0x606d, 0x4a0, 0x0, 0x1);
        gbc.writeMem(0xef0e, { 0x31, 0xd1, 0x30 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x30d1, gbc.sp());
        EXPECT(0xef11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xef0e));
        EXPECT(0xd1, gbc.readMem(0xef0f));
        EXPECT(0x30, gbc.readMem(0xef10));
        // 31 0023
        gbc.setState(0x4e71, 0xe815, 0xb440, 0xbbb1, 0x3a99, 0x9d79, 0x0, 0x1);
        gbc.writeMem(0x4e71, { 0x31, 0x5f, 0x91 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x915f, gbc.sp());
        EXPECT(0x4e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0024
        gbc.setState(0xe522, 0x38b3, 0x5850, 0x49ae, 0x51dd, 0xb0f2, 0x1, 0x0);
        gbc.writeMem(0xe522, { 0x31, 0x82, 0x5b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5b82, gbc.sp());
        EXPECT(0xe525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe522));
        EXPECT(0x82, gbc.readMem(0xe523));
        EXPECT(0x5b, gbc.readMem(0xe524));
        // 31 0025
        gbc.setState(0x6ba, 0x95ee, 0x7230, 0xc0ea, 0x7869, 0xa3e5, 0x0, 0x1);
        gbc.writeMem(0x6ba, { 0x31, 0xc7, 0xc0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc0c7, gbc.sp());
        EXPECT(0x6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0026
        gbc.setState(0x2586, 0xdc92, 0x4800, 0x80c8, 0x1c05, 0x637d, 0x1, 0x0);
        gbc.writeMem(0x2586, { 0x31, 0x10, 0x53 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5310, gbc.sp());
        EXPECT(0x2589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0027
        gbc.setState(0x7e7d, 0xfa3d, 0xd0f0, 0x8ba4, 0x63ae, 0x283e, 0x0, 0x1);
        gbc.writeMem(0x7e7d, { 0x31, 0x7f, 0x26 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x267f, gbc.sp());
        EXPECT(0x7e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0028
        gbc.setState(0xe3d0, 0xa5b7, 0x2a90, 0xfe8, 0xa0d, 0xd6b8, 0x0, 0x0);
        gbc.writeMem(0xe3d0, { 0x31, 0x45, 0x3a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3a45, gbc.sp());
        EXPECT(0xe3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe3d0));
        EXPECT(0x45, gbc.readMem(0xe3d1));
        EXPECT(0x3a, gbc.readMem(0xe3d2));
        // 31 0029
        gbc.setState(0x1a47, 0x7d2f, 0x6da0, 0x2d7f, 0xed30, 0xa15, 0x1, 0x0);
        gbc.writeMem(0x1a47, { 0x31, 0xde, 0xb1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb1de, gbc.sp());
        EXPECT(0x1a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 002A
        gbc.setState(0xb583, 0xd734, 0x660, 0x2c3f, 0x62eb, 0x3774, 0x0, 0x1);
        gbc.writeMem(0xb583, { 0x31, 0x36, 0x56 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5636, gbc.sp());
        EXPECT(0xb586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb583));
        EXPECT(0x36, gbc.readMem(0xb584));
        EXPECT(0x56, gbc.readMem(0xb585));
        // 31 002B
        gbc.setState(0x1cd6, 0xdd45, 0x8160, 0x9a59, 0x6644, 0x2b3c, 0x0, 0x1);
        gbc.writeMem(0x1cd6, { 0x31, 0xca, 0x7e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7eca, gbc.sp());
        EXPECT(0x1cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 002C
        gbc.setState(0x6c86, 0x1ed, 0x3560, 0xe386, 0x2ce4, 0x29ce, 0x1, 0x1);
        gbc.writeMem(0x6c86, { 0x31, 0xc3, 0x1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1c3, gbc.sp());
        EXPECT(0x6c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 002D
        gbc.setState(0x48af, 0x7932, 0x4950, 0x75bb, 0x155e, 0xa6e0, 0x1, 0x1);
        gbc.writeMem(0x48af, { 0x31, 0x6, 0xa4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa406, gbc.sp());
        EXPECT(0x48b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 002E
        gbc.setState(0x47f6, 0x65c7, 0x4040, 0x5a6a, 0xa68d, 0x5654, 0x0, 0x1);
        gbc.writeMem(0x47f6, { 0x31, 0xb7, 0xaf });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xafb7, gbc.sp());
        EXPECT(0x47f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0030
        gbc.setState(0x7bc5, 0x4ae3, 0x7ed0, 0x4272, 0xef3b, 0x3571, 0x0, 0x0);
        gbc.writeMem(0x7bc5, { 0x31, 0xe7, 0x86 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x86e7, gbc.sp());
        EXPECT(0x7bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0031
        gbc.setState(0x7c8a, 0xcc8, 0x3ab0, 0x8415, 0x54cb, 0xc86c, 0x1, 0x1);
        gbc.writeMem(0x7c8a, { 0x31, 0x7e, 0x55 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x557e, gbc.sp());
        EXPECT(0x7c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0032
        gbc.setState(0xb9d4, 0x75f2, 0xc9e0, 0x32fe, 0xcbb8, 0x72aa, 0x0, 0x1);
        gbc.writeMem(0xb9d4, { 0x31, 0x4e, 0x77 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x774e, gbc.sp());
        EXPECT(0xb9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb9d4));
        EXPECT(0x4e, gbc.readMem(0xb9d5));
        EXPECT(0x77, gbc.readMem(0xb9d6));
        // 31 0033
        gbc.setState(0xd14d, 0x7d2b, 0xdae0, 0x2319, 0x51d9, 0x69ed, 0x1, 0x1);
        gbc.writeMem(0xd14d, { 0x31, 0xff, 0x73 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x73ff, gbc.sp());
        EXPECT(0xd150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd14d));
        EXPECT(0xff, gbc.readMem(0xd14e));
        EXPECT(0x73, gbc.readMem(0xd14f));
        // 31 0034
        gbc.setState(0xbd97, 0x8fb7, 0xe8d0, 0xd94a, 0xf122, 0x4260, 0x0, 0x1);
        gbc.writeMem(0xbd97, { 0x31, 0x82, 0x9e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9e82, gbc.sp());
        EXPECT(0xbd9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbd97));
        EXPECT(0x82, gbc.readMem(0xbd98));
        EXPECT(0x9e, gbc.readMem(0xbd99));
        // 31 0037
        gbc.setState(0x48a, 0xb808, 0x8220, 0x677f, 0x3abb, 0x5939, 0x0, 0x1);
        gbc.writeMem(0x48a, { 0x31, 0x5d, 0xc7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc75d, gbc.sp());
        EXPECT(0x48d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0038
        gbc.setState(0x65c, 0xee5d, 0xd7d0, 0xcb63, 0xf21d, 0x1116, 0x0, 0x1);
        gbc.writeMem(0x65c, { 0x31, 0x1, 0x5c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5c01, gbc.sp());
        EXPECT(0x65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0039
        gbc.setState(0x9a82, 0xd1b0, 0xaba0, 0x1e65, 0xc412, 0x52fc, 0x0, 0x1);
        gbc.writeMem(0x9a82, { 0x31, 0xdd, 0xda });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdadd, gbc.sp());
        EXPECT(0x9a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9a82));
        EXPECT(0xdd, gbc.readMem(0x9a83));
        EXPECT(0xda, gbc.readMem(0x9a84));
        // 31 003A
        gbc.setState(0x93aa, 0x1163, 0x8550, 0xa3fe, 0x3d26, 0xbc23, 0x0, 0x1);
        gbc.writeMem(0x93aa, { 0x31, 0xea, 0x3e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3eea, gbc.sp());
        EXPECT(0x93ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x93aa));
        EXPECT(0xea, gbc.readMem(0x93ab));
        EXPECT(0x3e, gbc.readMem(0x93ac));
        // 31 003B
        gbc.setState(0xae62, 0x9207, 0x8a10, 0x35b8, 0xc944, 0x3f8e, 0x1, 0x1);
        gbc.writeMem(0xae62, { 0x31, 0x96, 0xdf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdf96, gbc.sp());
        EXPECT(0xae65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xae62));
        EXPECT(0x96, gbc.readMem(0xae63));
        EXPECT(0xdf, gbc.readMem(0xae64));
        // 31 003C
        gbc.setState(0x4be9, 0x110b, 0xec10, 0x2ee6, 0x4c8b, 0x6a35, 0x1, 0x0);
        gbc.writeMem(0x4be9, { 0x31, 0xd1, 0xc2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc2d1, gbc.sp());
        EXPECT(0x4bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 003E
        gbc.setState(0x2dde, 0x3ae5, 0x65c0, 0x6035, 0xdae, 0xe39f, 0x1, 0x1);
        gbc.writeMem(0x2dde, { 0x31, 0xa9, 0x6e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6ea9, gbc.sp());
        EXPECT(0x2de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 003F
        gbc.setState(0x7519, 0x3c57, 0x1f30, 0xfbf8, 0x37b5, 0xeeb4, 0x1, 0x1);
        gbc.writeMem(0x7519, { 0x31, 0x7b, 0x6f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6f7b, gbc.sp());
        EXPECT(0x751c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0040
        gbc.setState(0x204, 0x5f93, 0x88b0, 0x3f20, 0xac8e, 0x38cd, 0x0, 0x1);
        gbc.writeMem(0x204, { 0x31, 0xc4, 0xfd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfdc4, gbc.sp());
        EXPECT(0x207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0041
        gbc.setState(0x5775, 0xc879, 0x4a00, 0xa3a, 0xf847, 0x2e8a, 0x1, 0x0);
        gbc.writeMem(0x5775, { 0x31, 0xa2, 0x37 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x37a2, gbc.sp());
        EXPECT(0x5778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0043
        gbc.setState(0x4a53, 0x5a8f, 0xca90, 0x73fa, 0x1b80, 0xe41b, 0x1, 0x0);
        gbc.writeMem(0x4a53, { 0x31, 0x1e, 0x5a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5a1e, gbc.sp());
        EXPECT(0x4a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0044
        gbc.setState(0x2ba9, 0xb400, 0x9c80, 0x3b63, 0x1fd, 0x6dd3, 0x1, 0x0);
        gbc.writeMem(0x2ba9, { 0x31, 0x2a, 0xf4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf42a, gbc.sp());
        EXPECT(0x2bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0045
        gbc.setState(0x8004, 0x8c9, 0x3c20, 0x37b5, 0x18e7, 0xbb67, 0x1, 0x0);
        gbc.writeMem(0x8004, { 0x31, 0x7a, 0xbd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbd7a, gbc.sp());
        EXPECT(0x8007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8004));
        EXPECT(0x7a, gbc.readMem(0x8005));
        EXPECT(0xbd, gbc.readMem(0x8006));
        // 31 0046
        gbc.setState(0xba96, 0x96f0, 0xa470, 0x9499, 0x58d1, 0xe88, 0x1, 0x1);
        gbc.writeMem(0xba96, { 0x31, 0xe5, 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x13e5, gbc.sp());
        EXPECT(0xba99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xba96));
        EXPECT(0xe5, gbc.readMem(0xba97));
        EXPECT(0x13, gbc.readMem(0xba98));
        // 31 0047
        gbc.setState(0x2115, 0xd908, 0xfe70, 0x543, 0xcc74, 0x80c6, 0x1, 0x0);
        gbc.writeMem(0x2115, { 0x31, 0xda, 0xb8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb8da, gbc.sp());
        EXPECT(0x2118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0048
        gbc.setState(0x3726, 0x35a, 0xdf90, 0x3d58, 0x8df0, 0x28a1, 0x0, 0x1);
        gbc.writeMem(0x3726, { 0x31, 0x1b, 0x4c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4c1b, gbc.sp());
        EXPECT(0x3729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0049
        gbc.setState(0xe114, 0x76f, 0x9cb0, 0xb347, 0x2247, 0x6ab3, 0x1, 0x1);
        gbc.writeMem(0xe114, { 0x31, 0x86, 0x8e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8e86, gbc.sp());
        EXPECT(0xe117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe114));
        EXPECT(0x86, gbc.readMem(0xe115));
        EXPECT(0x8e, gbc.readMem(0xe116));
        // 31 004A
        gbc.setState(0xccb3, 0x2c0b, 0xcdd0, 0xe05a, 0x1b30, 0xc64f, 0x1, 0x0);
        gbc.writeMem(0xccb3, { 0x31, 0xc6, 0x16 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x16c6, gbc.sp());
        EXPECT(0xccb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xccb3));
        EXPECT(0xc6, gbc.readMem(0xccb4));
        EXPECT(0x16, gbc.readMem(0xccb5));
        // 31 004B
        gbc.setState(0xc349, 0x7df4, 0xdc10, 0x5380, 0x5550, 0x2c3e, 0x0, 0x1);
        gbc.writeMem(0xc349, { 0x31, 0xfe, 0x7f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7ffe, gbc.sp());
        EXPECT(0xc34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc349));
        EXPECT(0xfe, gbc.readMem(0xc34a));
        EXPECT(0x7f, gbc.readMem(0xc34b));
        // 31 004C
        gbc.setState(0x92c6, 0x1597, 0x7b40, 0x54, 0x6b91, 0xa9b8, 0x1, 0x1);
        gbc.writeMem(0x92c6, { 0x31, 0x7b, 0x43 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x437b, gbc.sp());
        EXPECT(0x92c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x92c6));
        EXPECT(0x7b, gbc.readMem(0x92c7));
        EXPECT(0x43, gbc.readMem(0x92c8));
        // 31 004D
        gbc.setState(0x1e28, 0x522a, 0x8e00, 0x657c, 0x3453, 0x50e, 0x1, 0x0);
        gbc.writeMem(0x1e28, { 0x31, 0x6b, 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x496b, gbc.sp());
        EXPECT(0x1e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 004E
        gbc.setState(0xecd1, 0x6522, 0x1190, 0xc361, 0x7645, 0x5b57, 0x1, 0x1);
        gbc.writeMem(0xecd1, { 0x31, 0x12, 0xca });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xca12, gbc.sp());
        EXPECT(0xecd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xecd1));
        EXPECT(0x12, gbc.readMem(0xecd2));
        EXPECT(0xca, gbc.readMem(0xecd3));
        // 31 004F
        gbc.setState(0x9440, 0x117b, 0x2f20, 0x3ce0, 0x5b33, 0x21d1, 0x0, 0x1);
        gbc.writeMem(0x9440, { 0x31, 0xf, 0xbc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbc0f, gbc.sp());
        EXPECT(0x9443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9440));
        EXPECT(0xf, gbc.readMem(0x9441));
        EXPECT(0xbc, gbc.readMem(0x9442));
        // 31 0050
        gbc.setState(0x8437, 0xc328, 0xcad0, 0x9841, 0xb40c, 0xbea9, 0x1, 0x0);
        gbc.writeMem(0x8437, { 0x31, 0xc2, 0x42 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x42c2, gbc.sp());
        EXPECT(0x843a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8437));
        EXPECT(0xc2, gbc.readMem(0x8438));
        EXPECT(0x42, gbc.readMem(0x8439));
        // 31 0051
        gbc.setState(0x3d3d, 0x758e, 0xe690, 0x7f08, 0xb197, 0xb3e5, 0x0, 0x1);
        gbc.writeMem(0x3d3d, { 0x31, 0x2f, 0xc3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc32f, gbc.sp());
        EXPECT(0x3d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0052
        gbc.setState(0x521a, 0xee32, 0xb240, 0xd523, 0x4cee, 0x780e, 0x0, 0x0);
        gbc.writeMem(0x521a, { 0x31, 0xfe, 0xd });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdfe, gbc.sp());
        EXPECT(0x521d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0053
        gbc.setState(0xa2be, 0x4663, 0x3d20, 0x64d8, 0xb14f, 0xa6a1, 0x1, 0x0);
        gbc.writeMem(0xa2be, { 0x31, 0x8d, 0x4c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4c8d, gbc.sp());
        EXPECT(0xa2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa2be));
        EXPECT(0x8d, gbc.readMem(0xa2bf));
        EXPECT(0x4c, gbc.readMem(0xa2c0));
        // 31 0054
        gbc.setState(0xd2b4, 0xa025, 0xb1e0, 0x8e51, 0xb06a, 0x9f5f, 0x1, 0x0);
        gbc.writeMem(0xd2b4, { 0x31, 0xee, 0x2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2ee, gbc.sp());
        EXPECT(0xd2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd2b4));
        EXPECT(0xee, gbc.readMem(0xd2b5));
        EXPECT(0x2, gbc.readMem(0xd2b6));
        // 31 0055
        gbc.setState(0xa4f5, 0xc408, 0x61b0, 0x1b56, 0xcd48, 0xe11d, 0x1, 0x0);
        gbc.writeMem(0xa4f5, { 0x31, 0x29, 0x58 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5829, gbc.sp());
        EXPECT(0xa4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa4f5));
        EXPECT(0x29, gbc.readMem(0xa4f6));
        EXPECT(0x58, gbc.readMem(0xa4f7));
        // 31 0056
        gbc.setState(0xdab3, 0x82fb, 0xebe0, 0xee20, 0x40be, 0xf7d7, 0x0, 0x1);
        gbc.writeMem(0xdab3, { 0x31, 0x77, 0xd2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd277, gbc.sp());
        EXPECT(0xdab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdab3));
        EXPECT(0x77, gbc.readMem(0xdab4));
        EXPECT(0xd2, gbc.readMem(0xdab5));
        // 31 0057
        gbc.setState(0x6549, 0x9c61, 0x5a90, 0x67ec, 0x72fa, 0xec39, 0x0, 0x1);
        gbc.writeMem(0x6549, { 0x31, 0x3d, 0x54 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x543d, gbc.sp());
        EXPECT(0x654c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0058
        gbc.setState(0x9869, 0x1c51, 0xb250, 0x68f3, 0x2277, 0x3b4a, 0x1, 0x0);
        gbc.writeMem(0x9869, { 0x31, 0xe0, 0x97 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x97e0, gbc.sp());
        EXPECT(0x986c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9869));
        EXPECT(0xe0, gbc.readMem(0x986a));
        EXPECT(0x97, gbc.readMem(0x986b));
        // 31 0059
        gbc.setState(0x2d16, 0xe76d, 0x5af0, 0xb276, 0xad06, 0xed69, 0x0, 0x1);
        gbc.writeMem(0x2d16, { 0x31, 0x22, 0x83 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8322, gbc.sp());
        EXPECT(0x2d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 005A
        gbc.setState(0x93e4, 0x42ad, 0x6d0, 0xbd11, 0xdc13, 0x7bb2, 0x0, 0x1);
        gbc.writeMem(0x93e4, { 0x31, 0x83, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd783, gbc.sp());
        EXPECT(0x93e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x93e4));
        EXPECT(0x83, gbc.readMem(0x93e5));
        EXPECT(0xd7, gbc.readMem(0x93e6));
        // 31 005B
        gbc.setState(0x49e3, 0x2525, 0x5050, 0xde10, 0x26dc, 0xaeea, 0x1, 0x1);
        gbc.writeMem(0x49e3, { 0x31, 0x33, 0x7b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7b33, gbc.sp());
        EXPECT(0x49e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 005C
        gbc.setState(0x5a19, 0x6669, 0xe620, 0xf9a7, 0xd89b, 0x40e1, 0x0, 0x1);
        gbc.writeMem(0x5a19, { 0x31, 0xc, 0x71 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x710c, gbc.sp());
        EXPECT(0x5a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 005D
        gbc.setState(0xe63e, 0xd6b4, 0xa5c0, 0x8bc7, 0x2a2e, 0xa310, 0x1, 0x1);
        gbc.writeMem(0xe63e, { 0x31, 0x6e, 0x91 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x916e, gbc.sp());
        EXPECT(0xe641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe63e));
        EXPECT(0x6e, gbc.readMem(0xe63f));
        EXPECT(0x91, gbc.readMem(0xe640));
        // 31 005E
        gbc.setState(0xc120, 0x42d8, 0x4b30, 0x37d1, 0x31f8, 0x8822, 0x0, 0x0);
        gbc.writeMem(0xc120, { 0x31, 0xb5, 0xcc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xccb5, gbc.sp());
        EXPECT(0xc123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc120));
        EXPECT(0xb5, gbc.readMem(0xc121));
        EXPECT(0xcc, gbc.readMem(0xc122));
        // 31 005F
        gbc.setState(0x9d63, 0xb361, 0x4d40, 0x3eac, 0x7829, 0x6b5e, 0x1, 0x1);
        gbc.writeMem(0x9d63, { 0x31, 0xb4, 0xf4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf4b4, gbc.sp());
        EXPECT(0x9d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9d63));
        EXPECT(0xb4, gbc.readMem(0x9d64));
        EXPECT(0xf4, gbc.readMem(0x9d65));
        // 31 0060
        gbc.setState(0xe1c, 0x5a44, 0x3fe0, 0x3e80, 0x6ce1, 0xd8fb, 0x0, 0x1);
        gbc.writeMem(0xe1c, { 0x31, 0xa5, 0x9d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9da5, gbc.sp());
        EXPECT(0xe1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0061
        gbc.setState(0x4838, 0x15ac, 0x8e30, 0x29c3, 0x9c, 0x3932, 0x0, 0x0);
        gbc.writeMem(0x4838, { 0x31, 0x2f, 0xdb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdb2f, gbc.sp());
        EXPECT(0x483b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0062
        gbc.setState(0x7709, 0x4066, 0x1d20, 0xdc5b, 0x7d40, 0x561, 0x1, 0x0);
        gbc.writeMem(0x7709, { 0x31, 0xd7, 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x95d7, gbc.sp());
        EXPECT(0x770c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0063
        gbc.setState(0x2243, 0x911c, 0xe6c0, 0xa45f, 0xc80f, 0xa0e8, 0x0, 0x1);
        gbc.writeMem(0x2243, { 0x31, 0xb, 0x29 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x290b, gbc.sp());
        EXPECT(0x2246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0064
        gbc.setState(0x98e2, 0x8453, 0xa5b0, 0x78fe, 0xe53e, 0x93d4, 0x0, 0x0);
        gbc.writeMem(0x98e2, { 0x31, 0xfa, 0x3e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3efa, gbc.sp());
        EXPECT(0x98e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x98e2));
        EXPECT(0xfa, gbc.readMem(0x98e3));
        EXPECT(0x3e, gbc.readMem(0x98e4));
        // 31 0065
        gbc.setState(0xcd58, 0xb66a, 0x8780, 0x6fa9, 0x1383, 0x517b, 0x1, 0x0);
        gbc.writeMem(0xcd58, { 0x31, 0xda, 0x5e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5eda, gbc.sp());
        EXPECT(0xcd5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcd58));
        EXPECT(0xda, gbc.readMem(0xcd59));
        EXPECT(0x5e, gbc.readMem(0xcd5a));
        // 31 0066
        gbc.setState(0x279d, 0xaaef, 0x7b00, 0xded6, 0x6f71, 0x12d1, 0x0, 0x1);
        gbc.writeMem(0x279d, { 0x31, 0xb4, 0x41 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x41b4, gbc.sp());
        EXPECT(0x27a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0067
        gbc.setState(0x12fb, 0x2409, 0x3c50, 0x9ae6, 0xa08f, 0x7ba5, 0x1, 0x0);
        gbc.writeMem(0x12fb, { 0x31, 0x47, 0x64 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6447, gbc.sp());
        EXPECT(0x12fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0068
        gbc.setState(0x595a, 0x889d, 0x7320, 0x5ded, 0xb171, 0x336b, 0x1, 0x1);
        gbc.writeMem(0x595a, { 0x31, 0xc6, 0xca });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcac6, gbc.sp());
        EXPECT(0x595d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0069
        gbc.setState(0x4d86, 0x13d0, 0xfd30, 0xe89a, 0xdba9, 0x8f11, 0x1, 0x1);
        gbc.writeMem(0x4d86, { 0x31, 0x88, 0x7d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7d88, gbc.sp());
        EXPECT(0x4d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 006A
        gbc.setState(0x237b, 0xa793, 0xc8e0, 0x9b35, 0xccb, 0x8408, 0x0, 0x1);
        gbc.writeMem(0x237b, { 0x31, 0x43, 0x57 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5743, gbc.sp());
        EXPECT(0x237e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 006C
        gbc.setState(0x1e63, 0xc756, 0x3350, 0x122c, 0x10fb, 0xb5de, 0x0, 0x0);
        gbc.writeMem(0x1e63, { 0x31, 0x1f, 0x4f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4f1f, gbc.sp());
        EXPECT(0x1e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 006D
        gbc.setState(0x5d00, 0x1065, 0x9560, 0xf659, 0x36b, 0xb95f, 0x1, 0x0);
        gbc.writeMem(0x5d00, { 0x31, 0x71, 0x4c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4c71, gbc.sp());
        EXPECT(0x5d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 006E
        gbc.setState(0xe6c1, 0x97e8, 0xc3e0, 0xed92, 0x3778, 0x3190, 0x0, 0x0);
        gbc.writeMem(0xe6c1, { 0x31, 0xbf, 0x33 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x33bf, gbc.sp());
        EXPECT(0xe6c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe6c1));
        EXPECT(0xbf, gbc.readMem(0xe6c2));
        EXPECT(0x33, gbc.readMem(0xe6c3));
        // 31 006F
        gbc.setState(0x2acf, 0x4a5a, 0xfbc0, 0x915, 0xc9c3, 0x15b6, 0x1, 0x0);
        gbc.writeMem(0x2acf, { 0x31, 0xfb, 0xd3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd3fb, gbc.sp());
        EXPECT(0x2ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0070
        gbc.setState(0xe7f3, 0x3a55, 0xfe80, 0xd483, 0xf79e, 0x2d14, 0x1, 0x1);
        gbc.writeMem(0xe7f3, { 0x31, 0x7e, 0x96 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x967e, gbc.sp());
        EXPECT(0xe7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe7f3));
        EXPECT(0x7e, gbc.readMem(0xe7f4));
        EXPECT(0x96, gbc.readMem(0xe7f5));
        // 31 0071
        gbc.setState(0x8d5c, 0xfc67, 0x8c20, 0x84ed, 0xab1a, 0x11fd, 0x1, 0x1);
        gbc.writeMem(0x8d5c, { 0x31, 0x24, 0x17 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1724, gbc.sp());
        EXPECT(0x8d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8d5c));
        EXPECT(0x24, gbc.readMem(0x8d5d));
        EXPECT(0x17, gbc.readMem(0x8d5e));
        // 31 0072
        gbc.setState(0x8099, 0x5f54, 0x7e00, 0x36f1, 0xa234, 0xe854, 0x1, 0x0);
        gbc.writeMem(0x8099, { 0x31, 0xa4, 0x22 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x22a4, gbc.sp());
        EXPECT(0x809c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8099));
        EXPECT(0xa4, gbc.readMem(0x809a));
        EXPECT(0x22, gbc.readMem(0x809b));
        // 31 0073
        gbc.setState(0xa86f, 0x1026, 0xe8b0, 0x562d, 0xdad1, 0x8a6a, 0x0, 0x1);
        gbc.writeMem(0xa86f, { 0x31, 0x9, 0x19 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1909, gbc.sp());
        EXPECT(0xa872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa86f));
        EXPECT(0x9, gbc.readMem(0xa870));
        EXPECT(0x19, gbc.readMem(0xa871));
        // 31 0074
        gbc.setState(0x9f7c, 0x94e6, 0x7f80, 0xc214, 0x297b, 0x26a, 0x0, 0x1);
        gbc.writeMem(0x9f7c, { 0x31, 0x7b, 0xea });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xea7b, gbc.sp());
        EXPECT(0x9f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9f7c));
        EXPECT(0x7b, gbc.readMem(0x9f7d));
        EXPECT(0xea, gbc.readMem(0x9f7e));
        // 31 0075
        gbc.setState(0xc6d2, 0x4d9, 0xb50, 0x9e30, 0x65ef, 0xeb14, 0x1, 0x1);
        gbc.writeMem(0xc6d2, { 0x31, 0x4d, 0x21 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x214d, gbc.sp());
        EXPECT(0xc6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc6d2));
        EXPECT(0x4d, gbc.readMem(0xc6d3));
        EXPECT(0x21, gbc.readMem(0xc6d4));
        // 31 0076
        gbc.setState(0x8a34, 0xb558, 0xd480, 0xc69d, 0xd62b, 0x9ffa, 0x1, 0x1);
        gbc.writeMem(0x8a34, { 0x31, 0xc3, 0x87 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x87c3, gbc.sp());
        EXPECT(0x8a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8a34));
        EXPECT(0xc3, gbc.readMem(0x8a35));
        EXPECT(0x87, gbc.readMem(0x8a36));
        // 31 0077
        gbc.setState(0x7324, 0xde11, 0xf5d0, 0xf5d7, 0x879d, 0x2a6e, 0x0, 0x0);
        gbc.writeMem(0x7324, { 0x31, 0xc3, 0xaf });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xafc3, gbc.sp());
        EXPECT(0x7327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0078
        gbc.setState(0xabc5, 0x6ed4, 0xbe50, 0xd73d, 0x3a85, 0x58fd, 0x1, 0x1);
        gbc.writeMem(0xabc5, { 0x31, 0x9a, 0xc8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc89a, gbc.sp());
        EXPECT(0xabc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xabc5));
        EXPECT(0x9a, gbc.readMem(0xabc6));
        EXPECT(0xc8, gbc.readMem(0xabc7));
        // 31 0079
        gbc.setState(0x675c, 0xb10f, 0x22b0, 0x3f6e, 0xa99b, 0xced3, 0x0, 0x1);
        gbc.writeMem(0x675c, { 0x31, 0xa6, 0x68 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x68a6, gbc.sp());
        EXPECT(0x675f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 007A
        gbc.setState(0xd3ee, 0x2875, 0x3cf0, 0xa359, 0xd084, 0x5c48, 0x1, 0x1);
        gbc.writeMem(0xd3ee, { 0x31, 0x5e, 0x57 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x575e, gbc.sp());
        EXPECT(0xd3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd3ee));
        EXPECT(0x5e, gbc.readMem(0xd3ef));
        EXPECT(0x57, gbc.readMem(0xd3f0));
        // 31 007B
        gbc.setState(0x7e29, 0xfdc4, 0xb0e0, 0x8a05, 0xe02a, 0x9af, 0x0, 0x0);
        gbc.writeMem(0x7e29, { 0x31, 0x3c, 0x11 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x113c, gbc.sp());
        EXPECT(0x7e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 007C
        gbc.setState(0x1a7a, 0x5bfe, 0x87f0, 0xc6ac, 0xc506, 0xf96, 0x1, 0x1);
        gbc.writeMem(0x1a7a, { 0x31, 0x5e, 0xc2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc25e, gbc.sp());
        EXPECT(0x1a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 007D
        gbc.setState(0x139, 0x11cc, 0x50e0, 0xa0f4, 0xc4bd, 0x2fed, 0x0, 0x0);
        gbc.writeMem(0x139, { 0x31, 0x46, 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc946, gbc.sp());
        EXPECT(0x13c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 007F
        gbc.setState(0x7150, 0xb0ca, 0xffd0, 0xa259, 0x1aa9, 0x8d66, 0x0, 0x0);
        gbc.writeMem(0x7150, { 0x31, 0x45, 0x22 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2245, gbc.sp());
        EXPECT(0x7153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0080
        gbc.setState(0xa4f3, 0x78b8, 0x4440, 0xe1b5, 0xdc71, 0x14b7, 0x1, 0x1);
        gbc.writeMem(0xa4f3, { 0x31, 0xaf, 0x93 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x93af, gbc.sp());
        EXPECT(0xa4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa4f3));
        EXPECT(0xaf, gbc.readMem(0xa4f4));
        EXPECT(0x93, gbc.readMem(0xa4f5));
        // 31 0081
        gbc.setState(0x7657, 0x84f0, 0xcb10, 0x4ebb, 0xa499, 0xd118, 0x1, 0x0);
        gbc.writeMem(0x7657, { 0x31, 0xd1, 0x25 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x25d1, gbc.sp());
        EXPECT(0x765a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0082
        gbc.setState(0xec1d, 0xa6dc, 0x92d0, 0xb08e, 0x4aa7, 0x8bca, 0x1, 0x1);
        gbc.writeMem(0xec1d, { 0x31, 0xd8, 0xd8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd8d8, gbc.sp());
        EXPECT(0xec20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xec1d));
        EXPECT(0xd8, gbc.readMem(0xec1e));
        EXPECT(0xd8, gbc.readMem(0xec1f));
        // 31 0083
        gbc.setState(0x161a, 0x1fec, 0xfe90, 0xdf3f, 0x904c, 0x88e5, 0x1, 0x1);
        gbc.writeMem(0x161a, { 0x31, 0xab, 0x23 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x23ab, gbc.sp());
        EXPECT(0x161d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0085
        gbc.setState(0xe6ee, 0x46e, 0x29f0, 0xeda3, 0x60fb, 0x260, 0x1, 0x0);
        gbc.writeMem(0xe6ee, { 0x31, 0xec, 0x23 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x23ec, gbc.sp());
        EXPECT(0xe6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe6ee));
        EXPECT(0xec, gbc.readMem(0xe6ef));
        EXPECT(0x23, gbc.readMem(0xe6f0));
        // 31 0086
        gbc.setState(0xe59a, 0xfda4, 0xfb50, 0x87a5, 0x9df9, 0x9e73, 0x0, 0x1);
        gbc.writeMem(0xe59a, { 0x31, 0x2, 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6d02, gbc.sp());
        EXPECT(0xe59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe59a));
        EXPECT(0x2, gbc.readMem(0xe59b));
        EXPECT(0x6d, gbc.readMem(0xe59c));
        // 31 0087
        gbc.setState(0x7631, 0xf7b9, 0x5500, 0xcff1, 0x39f4, 0x57e, 0x0, 0x1);
        gbc.writeMem(0x7631, { 0x31, 0xa5, 0x77 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x77a5, gbc.sp());
        EXPECT(0x7634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0088
        gbc.setState(0x7c8a, 0x4f72, 0x9b0, 0x370, 0xfbc0, 0x102b, 0x0, 0x1);
        gbc.writeMem(0x7c8a, { 0x31, 0x7e, 0x55 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x557e, gbc.sp());
        EXPECT(0x7c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0089
        gbc.setState(0x6dfe, 0xac06, 0x4090, 0xa3a3, 0x3cf5, 0x574b, 0x1, 0x0);
        gbc.writeMem(0x6dfe, { 0x31, 0x45, 0xae });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xae45, gbc.sp());
        EXPECT(0x6e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 008B
        gbc.setState(0xaaea, 0x3b51, 0x55f0, 0xfb1c, 0x8cf8, 0xc911, 0x0, 0x0);
        gbc.writeMem(0xaaea, { 0x31, 0x16, 0xac });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xac16, gbc.sp());
        EXPECT(0xaaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaaea));
        EXPECT(0x16, gbc.readMem(0xaaeb));
        EXPECT(0xac, gbc.readMem(0xaaec));
        // 31 008C
        gbc.setState(0x80c7, 0xad74, 0x50c0, 0xd021, 0x9db3, 0x45cd, 0x1, 0x0);
        gbc.writeMem(0x80c7, { 0x31, 0xeb, 0xe2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe2eb, gbc.sp());
        EXPECT(0x80ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x80c7));
        EXPECT(0xeb, gbc.readMem(0x80c8));
        EXPECT(0xe2, gbc.readMem(0x80c9));
        // 31 008E
        gbc.setState(0x1db1, 0x9f27, 0x55e0, 0x52c0, 0x36fc, 0x2d11, 0x1, 0x0);
        gbc.writeMem(0x1db1, { 0x31, 0x83, 0xee });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xee83, gbc.sp());
        EXPECT(0x1db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 008F
        gbc.setState(0x5551, 0xb7f8, 0x1f20, 0x9b9d, 0xad4c, 0xd69a, 0x1, 0x1);
        gbc.writeMem(0x5551, { 0x31, 0xfa, 0xf9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf9fa, gbc.sp());
        EXPECT(0x5554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0090
        gbc.setState(0xb140, 0x9df3, 0x3ee0, 0x4ede, 0x7ec8, 0x6ac8, 0x0, 0x1);
        gbc.writeMem(0xb140, { 0x31, 0x2c, 0x14 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x142c, gbc.sp());
        EXPECT(0xb143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb140));
        EXPECT(0x2c, gbc.readMem(0xb141));
        EXPECT(0x14, gbc.readMem(0xb142));
        // 31 0091
        gbc.setState(0x1738, 0xfa02, 0xbac0, 0xf43f, 0x1fc5, 0x504d, 0x0, 0x0);
        gbc.writeMem(0x1738, { 0x31, 0xbd, 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb7bd, gbc.sp());
        EXPECT(0x173b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0092
        gbc.setState(0x5b14, 0x78e2, 0x8bf0, 0x4b9e, 0x5695, 0x3410, 0x0, 0x0);
        gbc.writeMem(0x5b14, { 0x31, 0x44, 0x10 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1044, gbc.sp());
        EXPECT(0x5b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0093
        gbc.setState(0x52f5, 0xdfa, 0x70c0, 0x15e4, 0x8d54, 0x8525, 0x1, 0x0);
        gbc.writeMem(0x52f5, { 0x31, 0x11, 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1311, gbc.sp());
        EXPECT(0x52f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0094
        gbc.setState(0xd81, 0x7795, 0x1ce0, 0x20b8, 0x8bd6, 0x8422, 0x1, 0x1);
        gbc.writeMem(0xd81, { 0x31, 0x77, 0xa8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa877, gbc.sp());
        EXPECT(0xd84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0095
        gbc.setState(0x8260, 0xfeb1, 0x3da0, 0x77, 0x3250, 0x6744, 0x1, 0x0);
        gbc.writeMem(0x8260, { 0x31, 0xad, 0xd5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd5ad, gbc.sp());
        EXPECT(0x8263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8260));
        EXPECT(0xad, gbc.readMem(0x8261));
        EXPECT(0xd5, gbc.readMem(0x8262));
        // 31 0096
        gbc.setState(0xcfed, 0x5cab, 0x8730, 0x8f99, 0x590b, 0x43a5, 0x0, 0x0);
        gbc.writeMem(0xcfed, { 0x31, 0xa5, 0x5e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5ea5, gbc.sp());
        EXPECT(0xcff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcfed));
        EXPECT(0xa5, gbc.readMem(0xcfee));
        EXPECT(0x5e, gbc.readMem(0xcfef));
        // 31 0097
        gbc.setState(0x9cf7, 0xef69, 0x7b80, 0xc07f, 0xff20, 0xb85, 0x1, 0x1);
        gbc.writeMem(0x9cf7, { 0x31, 0x5f, 0x5f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5f5f, gbc.sp());
        EXPECT(0x9cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9cf7));
        EXPECT(0x5f, gbc.readMem(0x9cf8));
        EXPECT(0x5f, gbc.readMem(0x9cf9));
        // 31 0098
        gbc.setState(0xd44b, 0xd28f, 0x9cc0, 0x9f5, 0x97d7, 0x2f12, 0x0, 0x0);
        gbc.writeMem(0xd44b, { 0x31, 0x56, 0xcf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcf56, gbc.sp());
        EXPECT(0xd44e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd44b));
        EXPECT(0x56, gbc.readMem(0xd44c));
        EXPECT(0xcf, gbc.readMem(0xd44d));
        // 31 0099
        gbc.setState(0x8b72, 0xd71c, 0xf710, 0x6671, 0xaa8, 0x2199, 0x0, 0x0);
        gbc.writeMem(0x8b72, { 0x31, 0xd3, 0xbf });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbfd3, gbc.sp());
        EXPECT(0x8b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8b72));
        EXPECT(0xd3, gbc.readMem(0x8b73));
        EXPECT(0xbf, gbc.readMem(0x8b74));
        // 31 009B
        gbc.setState(0xc75a, 0x1c38, 0x79c0, 0x54c0, 0x7e72, 0x2c23, 0x1, 0x0);
        gbc.writeMem(0xc75a, { 0x31, 0xda, 0xf3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf3da, gbc.sp());
        EXPECT(0xc75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc75a));
        EXPECT(0xda, gbc.readMem(0xc75b));
        EXPECT(0xf3, gbc.readMem(0xc75c));
        // 31 009C
        gbc.setState(0x755b, 0xc9d7, 0x6410, 0x75a1, 0x758e, 0x382a, 0x0, 0x1);
        gbc.writeMem(0x755b, { 0x31, 0x10, 0x4c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4c10, gbc.sp());
        EXPECT(0x755e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 009D
        gbc.setState(0xeade, 0x95d9, 0xb5e0, 0x4a8e, 0x22a4, 0xe538, 0x1, 0x0);
        gbc.writeMem(0xeade, { 0x31, 0x92, 0xde });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xde92, gbc.sp());
        EXPECT(0xeae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xeade));
        EXPECT(0x92, gbc.readMem(0xeadf));
        EXPECT(0xde, gbc.readMem(0xeae0));
        // 31 009E
        gbc.setState(0x1502, 0xde9b, 0xd730, 0xab1c, 0xad91, 0x9b08, 0x1, 0x1);
        gbc.writeMem(0x1502, { 0x31, 0xe6, 0xb8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb8e6, gbc.sp());
        EXPECT(0x1505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 009F
        gbc.setState(0x9e7c, 0x3ae0, 0x9830, 0x2cfe, 0x2132, 0xb080, 0x0, 0x1);
        gbc.writeMem(0x9e7c, { 0x31, 0x28, 0x52 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5228, gbc.sp());
        EXPECT(0x9e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9e7c));
        EXPECT(0x28, gbc.readMem(0x9e7d));
        EXPECT(0x52, gbc.readMem(0x9e7e));
        // 31 00A0
        gbc.setState(0xa199, 0x73d4, 0xf8e0, 0x24d6, 0x4d63, 0x251c, 0x1, 0x1);
        gbc.writeMem(0xa199, { 0x31, 0xf3, 0x36 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x36f3, gbc.sp());
        EXPECT(0xa19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa199));
        EXPECT(0xf3, gbc.readMem(0xa19a));
        EXPECT(0x36, gbc.readMem(0xa19b));
        // 31 00A1
        gbc.setState(0xedb5, 0x206e, 0x7010, 0x93a4, 0x5eab, 0xee8d, 0x1, 0x0);
        gbc.writeMem(0xedb5, { 0x31, 0x9, 0xce });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xce09, gbc.sp());
        EXPECT(0xedb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xedb5));
        EXPECT(0x9, gbc.readMem(0xedb6));
        EXPECT(0xce, gbc.readMem(0xedb7));
        // 31 00A2
        gbc.setState(0x229f, 0x8c3b, 0x5ce0, 0x75d0, 0xd28b, 0xf572, 0x0, 0x1);
        gbc.writeMem(0x229f, { 0x31, 0xbe, 0x74 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x74be, gbc.sp());
        EXPECT(0x22a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00A3
        gbc.setState(0x5591, 0x3a2e, 0x2210, 0x68c2, 0x900b, 0x410f, 0x1, 0x1);
        gbc.writeMem(0x5591, { 0x31, 0xa2, 0x3d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3da2, gbc.sp());
        EXPECT(0x5594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00A4
        gbc.setState(0xb871, 0x43b6, 0x2ba0, 0x6074, 0x9b9b, 0x32f1, 0x0, 0x0);
        gbc.writeMem(0xb871, { 0x31, 0x16, 0x3f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3f16, gbc.sp());
        EXPECT(0xb874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb871));
        EXPECT(0x16, gbc.readMem(0xb872));
        EXPECT(0x3f, gbc.readMem(0xb873));
        // 31 00A5
        gbc.setState(0x3ac9, 0x2213, 0x1370, 0xfb58, 0x868d, 0x42bb, 0x1, 0x0);
        gbc.writeMem(0x3ac9, { 0x31, 0x3d, 0x1b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1b3d, gbc.sp());
        EXPECT(0x3acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00A6
        gbc.setState(0x86d3, 0x7c0a, 0xfd20, 0x688e, 0x5a06, 0xd89f, 0x1, 0x1);
        gbc.writeMem(0x86d3, { 0x31, 0x78, 0x85 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8578, gbc.sp());
        EXPECT(0x86d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x86d3));
        EXPECT(0x78, gbc.readMem(0x86d4));
        EXPECT(0x85, gbc.readMem(0x86d5));
        // 31 00A7
        gbc.setState(0xe53, 0xf9b0, 0x7130, 0xc4f4, 0x12f6, 0xa04d, 0x0, 0x0);
        gbc.writeMem(0xe53, { 0x31, 0x16, 0x88 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8816, gbc.sp());
        EXPECT(0xe56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00A8
        gbc.setState(0x7b4, 0x8b72, 0xf900, 0x8c73, 0x9e76, 0x8148, 0x1, 0x0);
        gbc.writeMem(0x7b4, { 0x31, 0x1c, 0xec });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xec1c, gbc.sp());
        EXPECT(0x7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00A9
        gbc.setState(0x408c, 0x2b26, 0x2ed0, 0x69f, 0x241d, 0xc6ab, 0x0, 0x1);
        gbc.writeMem(0x408c, { 0x31, 0x8f, 0xd6 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd68f, gbc.sp());
        EXPECT(0x408f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00AA
        gbc.setState(0x2579, 0xd5d6, 0x9540, 0xb671, 0x3c65, 0x4408, 0x1, 0x0);
        gbc.writeMem(0x2579, { 0x31, 0xfb, 0x85 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x85fb, gbc.sp());
        EXPECT(0x257c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00AB
        gbc.setState(0x246c, 0x7fab, 0x6330, 0xd84c, 0x5a20, 0xcc29, 0x0, 0x1);
        gbc.writeMem(0x246c, { 0x31, 0xab, 0xbf });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbfab, gbc.sp());
        EXPECT(0x246f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00AC
        gbc.setState(0xe269, 0xf3d9, 0xf3b0, 0xcd39, 0x730b, 0xba3f, 0x0, 0x1);
        gbc.writeMem(0xe269, { 0x31, 0x6b, 0x3a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3a6b, gbc.sp());
        EXPECT(0xe26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe269));
        EXPECT(0x6b, gbc.readMem(0xe26a));
        EXPECT(0x3a, gbc.readMem(0xe26b));
        // 31 00AD
        gbc.setState(0xd103, 0x84fe, 0x8c10, 0x44, 0xeaed, 0xb738, 0x1, 0x1);
        gbc.writeMem(0xd103, { 0x31, 0x4f, 0x5f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5f4f, gbc.sp());
        EXPECT(0xd106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd103));
        EXPECT(0x4f, gbc.readMem(0xd104));
        EXPECT(0x5f, gbc.readMem(0xd105));
        // 31 00AE
        gbc.setState(0xdfbd, 0xcb28, 0xc5a0, 0x1258, 0xbe89, 0x1b7e, 0x0, 0x1);
        gbc.writeMem(0xdfbd, { 0x31, 0xbc, 0xd7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd7bc, gbc.sp());
        EXPECT(0xdfc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdfbd));
        EXPECT(0xbc, gbc.readMem(0xdfbe));
        EXPECT(0xd7, gbc.readMem(0xdfbf));
        // 31 00AF
        gbc.setState(0xc3f9, 0xcbcb, 0x9d30, 0x7275, 0xf0de, 0xfbf9, 0x1, 0x1);
        gbc.writeMem(0xc3f9, { 0x31, 0xd7, 0xae });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaed7, gbc.sp());
        EXPECT(0xc3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc3f9));
        EXPECT(0xd7, gbc.readMem(0xc3fa));
        EXPECT(0xae, gbc.readMem(0xc3fb));
        // 31 00B0
        gbc.setState(0xdfc, 0x8770, 0xefc0, 0xc002, 0x9c05, 0xab40, 0x1, 0x1);
        gbc.writeMem(0xdfc, { 0x31, 0x1a, 0x63 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x631a, gbc.sp());
        EXPECT(0xdff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00B1
        gbc.setState(0x348f, 0xd00b, 0x4980, 0x217f, 0xfaa8, 0x128c, 0x0, 0x0);
        gbc.writeMem(0x348f, { 0x31, 0xa9, 0xe });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xea9, gbc.sp());
        EXPECT(0x3492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00B2
        gbc.setState(0x2861, 0x5753, 0x16c0, 0x97dc, 0xd8c6, 0xb2af, 0x0, 0x0);
        gbc.writeMem(0x2861, { 0x31, 0xa0, 0xff });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xffa0, gbc.sp());
        EXPECT(0x2864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00B4
        gbc.setState(0x7a4b, 0xaeb, 0x90d0, 0xbb4d, 0x51fa, 0xcf74, 0x1, 0x1);
        gbc.writeMem(0x7a4b, { 0x31, 0xf4, 0x2a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2af4, gbc.sp());
        EXPECT(0x7a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00B5
        gbc.setState(0x377b, 0x14d0, 0x1b80, 0x8e85, 0x5439, 0xa111, 0x0, 0x0);
        gbc.writeMem(0x377b, { 0x31, 0xd, 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x90d, gbc.sp());
        EXPECT(0x377e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00B6
        gbc.setState(0x65a8, 0xd884, 0x4fa0, 0x76fb, 0x32ba, 0x545c, 0x1, 0x0);
        gbc.writeMem(0x65a8, { 0x31, 0xce, 0x41 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x41ce, gbc.sp());
        EXPECT(0x65ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00B7
        gbc.setState(0x6469, 0x62c5, 0xfa80, 0x9c4f, 0xe95, 0x8957, 0x1, 0x1);
        gbc.writeMem(0x6469, { 0x31, 0x25, 0xee });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xee25, gbc.sp());
        EXPECT(0x646c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00B8
        gbc.setState(0x49a9, 0xa347, 0x4cd0, 0x77b, 0x43dc, 0xc35a, 0x0, 0x0);
        gbc.writeMem(0x49a9, { 0x31, 0xf9, 0x2d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2df9, gbc.sp());
        EXPECT(0x49ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00B9
        gbc.setState(0xc6e4, 0x90e7, 0x7090, 0xa6c3, 0xcdc3, 0x84b7, 0x0, 0x1);
        gbc.writeMem(0xc6e4, { 0x31, 0x92, 0x5a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5a92, gbc.sp());
        EXPECT(0xc6e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc6e4));
        EXPECT(0x92, gbc.readMem(0xc6e5));
        EXPECT(0x5a, gbc.readMem(0xc6e6));
        // 31 00BA
        gbc.setState(0x6f59, 0x12d0, 0x31d0, 0xe61e, 0x9208, 0xf654, 0x0, 0x1);
        gbc.writeMem(0x6f59, { 0x31, 0x18, 0xda });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xda18, gbc.sp());
        EXPECT(0x6f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00BB
        gbc.setState(0x4ff5, 0x2ed3, 0xd8d0, 0x8079, 0x8d7c, 0xaa0f, 0x1, 0x0);
        gbc.writeMem(0x4ff5, { 0x31, 0xa0, 0xaa });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaaa0, gbc.sp());
        EXPECT(0x4ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00BC
        gbc.setState(0x6c25, 0x15cb, 0xf880, 0x1249, 0x261f, 0xffc8, 0x1, 0x0);
        gbc.writeMem(0x6c25, { 0x31, 0xb8, 0xba });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbab8, gbc.sp());
        EXPECT(0x6c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00BD
        gbc.setState(0x90c6, 0x2099, 0x6820, 0x60e7, 0xf0c4, 0x9df8, 0x1, 0x0);
        gbc.writeMem(0x90c6, { 0x31, 0xaf, 0x23 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x23af, gbc.sp());
        EXPECT(0x90c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x90c6));
        EXPECT(0xaf, gbc.readMem(0x90c7));
        EXPECT(0x23, gbc.readMem(0x90c8));
        // 31 00BF
        gbc.setState(0x890b, 0x8953, 0x19f0, 0xee53, 0xbd49, 0x6af1, 0x1, 0x1);
        gbc.writeMem(0x890b, { 0x31, 0xc7, 0xa2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa2c7, gbc.sp());
        EXPECT(0x890e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x890b));
        EXPECT(0xc7, gbc.readMem(0x890c));
        EXPECT(0xa2, gbc.readMem(0x890d));
        // 31 00C0
        gbc.setState(0x4fae, 0x393f, 0xd880, 0x4bb2, 0x1b2, 0x977e, 0x0, 0x1);
        gbc.writeMem(0x4fae, { 0x31, 0x23, 0x91 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9123, gbc.sp());
        EXPECT(0x4fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00C1
        gbc.setState(0x1040, 0xc906, 0xd540, 0x873a, 0xe912, 0x978f, 0x0, 0x1);
        gbc.writeMem(0x1040, { 0x31, 0xba, 0x21 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x21ba, gbc.sp());
        EXPECT(0x1043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00C2
        gbc.setState(0x1d12, 0x1ad5, 0x7760, 0xb7a5, 0xb0c7, 0x885f, 0x0, 0x0);
        gbc.writeMem(0x1d12, { 0x31, 0x1d, 0x16 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x161d, gbc.sp());
        EXPECT(0x1d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00C3
        gbc.setState(0x736d, 0xe790, 0x3cf0, 0x8bdc, 0x2a0a, 0xeaed, 0x0, 0x0);
        gbc.writeMem(0x736d, { 0x31, 0x5, 0xf3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf305, gbc.sp());
        EXPECT(0x7370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00C4
        gbc.setState(0x56ed, 0xdf67, 0x53c0, 0x16b8, 0x1be, 0x8345, 0x0, 0x0);
        gbc.writeMem(0x56ed, { 0x31, 0xf1, 0x47 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x47f1, gbc.sp());
        EXPECT(0x56f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00C5
        gbc.setState(0x6f76, 0x9943, 0x30a0, 0x2872, 0xc223, 0x37df, 0x0, 0x0);
        gbc.writeMem(0x6f76, { 0x31, 0x1e, 0x14 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x141e, gbc.sp());
        EXPECT(0x6f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00C6
        gbc.setState(0x2ce, 0xafae, 0x3100, 0xa61, 0xbf74, 0x5fc4, 0x1, 0x0);
        gbc.writeMem(0x2ce, { 0x31, 0xe1, 0x9e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9ee1, gbc.sp());
        EXPECT(0x2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00C8
        gbc.setState(0x2340, 0xb65c, 0x550, 0x9e66, 0x35c7, 0x96df, 0x0, 0x0);
        gbc.writeMem(0x2340, { 0x31, 0xd1, 0x23 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x23d1, gbc.sp());
        EXPECT(0x2343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00C9
        gbc.setState(0xb8b8, 0x157f, 0x3db0, 0xb289, 0x8497, 0xe00a, 0x0, 0x0);
        gbc.writeMem(0xb8b8, { 0x31, 0xdb, 0xdc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdcdb, gbc.sp());
        EXPECT(0xb8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb8b8));
        EXPECT(0xdb, gbc.readMem(0xb8b9));
        EXPECT(0xdc, gbc.readMem(0xb8ba));
        // 31 00CA
        gbc.setState(0x4d3b, 0xc307, 0xbea0, 0x9aba, 0xd1b1, 0xcb17, 0x0, 0x0);
        gbc.writeMem(0x4d3b, { 0x31, 0xdf, 0x3d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3ddf, gbc.sp());
        EXPECT(0x4d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00CB
        gbc.setState(0x8b76, 0x28fe, 0xd410, 0x7a4f, 0x5627, 0x4f5f, 0x0, 0x0);
        gbc.writeMem(0x8b76, { 0x31, 0xd9, 0x57 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x57d9, gbc.sp());
        EXPECT(0x8b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8b76));
        EXPECT(0xd9, gbc.readMem(0x8b77));
        EXPECT(0x57, gbc.readMem(0x8b78));
        // 31 00CC
        gbc.setState(0x219d, 0x9312, 0xf10, 0x8c48, 0x5911, 0x7fe7, 0x0, 0x1);
        gbc.writeMem(0x219d, { 0x31, 0x5, 0xe });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe05, gbc.sp());
        EXPECT(0x21a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00CE
        gbc.setState(0xabc2, 0x730e, 0x7440, 0x1163, 0xa0b4, 0x31ed, 0x1, 0x0);
        gbc.writeMem(0xabc2, { 0x31, 0x6f, 0xe0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe06f, gbc.sp());
        EXPECT(0xabc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xabc2));
        EXPECT(0x6f, gbc.readMem(0xabc3));
        EXPECT(0xe0, gbc.readMem(0xabc4));
        // 31 00CF
        gbc.setState(0xa76b, 0x341b, 0xb4b0, 0xa8e2, 0xc407, 0x7308, 0x0, 0x0);
        gbc.writeMem(0xa76b, { 0x31, 0xea, 0x2c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2cea, gbc.sp());
        EXPECT(0xa76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa76b));
        EXPECT(0xea, gbc.readMem(0xa76c));
        EXPECT(0x2c, gbc.readMem(0xa76d));
        // 31 00D0
        gbc.setState(0xd299, 0x72d9, 0x1f30, 0x756f, 0x9552, 0x2f6a, 0x1, 0x1);
        gbc.writeMem(0xd299, { 0x31, 0x84, 0xaf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaf84, gbc.sp());
        EXPECT(0xd29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd299));
        EXPECT(0x84, gbc.readMem(0xd29a));
        EXPECT(0xaf, gbc.readMem(0xd29b));
        // 31 00D1
        gbc.setState(0x1671, 0x5865, 0xd190, 0x5d0d, 0x6dc8, 0x3df7, 0x0, 0x0);
        gbc.writeMem(0x1671, { 0x31, 0xf4, 0x93 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x93f4, gbc.sp());
        EXPECT(0x1674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00D2
        gbc.setState(0xc739, 0x55c9, 0xfff0, 0xc18e, 0xae49, 0xf9e7, 0x0, 0x1);
        gbc.writeMem(0xc739, { 0x31, 0x92, 0x7f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7f92, gbc.sp());
        EXPECT(0xc73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc739));
        EXPECT(0x92, gbc.readMem(0xc73a));
        EXPECT(0x7f, gbc.readMem(0xc73b));
        // 31 00D3
        gbc.setState(0xc5b0, 0x44c9, 0xb0b0, 0xc7e9, 0x885a, 0xc2d6, 0x1, 0x0);
        gbc.writeMem(0xc5b0, { 0x31, 0xe2, 0xd8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd8e2, gbc.sp());
        EXPECT(0xc5b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc5b0));
        EXPECT(0xe2, gbc.readMem(0xc5b1));
        EXPECT(0xd8, gbc.readMem(0xc5b2));
        // 31 00D4
        gbc.setState(0xd4bd, 0x821f, 0xf0f0, 0x8644, 0x9d2a, 0xbcb8, 0x0, 0x0);
        gbc.writeMem(0xd4bd, { 0x31, 0xd3, 0xd1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd1d3, gbc.sp());
        EXPECT(0xd4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd4bd));
        EXPECT(0xd3, gbc.readMem(0xd4be));
        EXPECT(0xd1, gbc.readMem(0xd4bf));
        // 31 00D5
        gbc.setState(0xc6fc, 0xaae7, 0x2310, 0xfd27, 0x5ac1, 0x65e9, 0x0, 0x0);
        gbc.writeMem(0xc6fc, { 0x31, 0x21, 0x80 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8021, gbc.sp());
        EXPECT(0xc6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc6fc));
        EXPECT(0x21, gbc.readMem(0xc6fd));
        EXPECT(0x80, gbc.readMem(0xc6fe));
        // 31 00D6
        gbc.setState(0xd4ab, 0xbcc2, 0x9fc0, 0x2dc2, 0xf02a, 0xd4ef, 0x0, 0x0);
        gbc.writeMem(0xd4ab, { 0x31, 0x6c, 0x2f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2f6c, gbc.sp());
        EXPECT(0xd4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd4ab));
        EXPECT(0x6c, gbc.readMem(0xd4ac));
        EXPECT(0x2f, gbc.readMem(0xd4ad));
        // 31 00D7
        gbc.setState(0xa516, 0xded9, 0x21c0, 0x44a1, 0x2ae6, 0x9e40, 0x0, 0x0);
        gbc.writeMem(0xa516, { 0x31, 0x36, 0xd1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd136, gbc.sp());
        EXPECT(0xa519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa516));
        EXPECT(0x36, gbc.readMem(0xa517));
        EXPECT(0xd1, gbc.readMem(0xa518));
        // 31 00D8
        gbc.setState(0x2ccc, 0x83a8, 0x5260, 0x1ee6, 0x96f3, 0x748, 0x0, 0x0);
        gbc.writeMem(0x2ccc, { 0x31, 0xb5, 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5b5, gbc.sp());
        EXPECT(0x2ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00D9
        gbc.setState(0xa683, 0xb58e, 0x1a60, 0xf33c, 0x6897, 0xd404, 0x1, 0x1);
        gbc.writeMem(0xa683, { 0x31, 0xb9, 0xe5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe5b9, gbc.sp());
        EXPECT(0xa686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa683));
        EXPECT(0xb9, gbc.readMem(0xa684));
        EXPECT(0xe5, gbc.readMem(0xa685));
        // 31 00DB
        gbc.setState(0x61e3, 0xafec, 0x6050, 0xfb25, 0x7f68, 0x24b5, 0x1, 0x0);
        gbc.writeMem(0x61e3, { 0x31, 0x8b, 0xdc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdc8b, gbc.sp());
        EXPECT(0x61e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00DC
        gbc.setState(0x2cac, 0xfd55, 0xd600, 0x6a04, 0xf2e5, 0x494f, 0x1, 0x1);
        gbc.writeMem(0x2cac, { 0x31, 0xed, 0x47 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x47ed, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00DD
        gbc.setState(0x661d, 0x150, 0xdd60, 0xf605, 0x33e4, 0x49d8, 0x0, 0x1);
        gbc.writeMem(0x661d, { 0x31, 0x55, 0x38 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3855, gbc.sp());
        EXPECT(0x6620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00DE
        gbc.setState(0xda0, 0x7fe4, 0x210, 0x713d, 0xa2e8, 0xcf3f, 0x1, 0x1);
        gbc.writeMem(0xda0, { 0x31, 0x6e, 0x77 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x776e, gbc.sp());
        EXPECT(0xda3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00DF
        gbc.setState(0xa6cc, 0xb75e, 0x4a0, 0x9303, 0xef62, 0x6684, 0x0, 0x1);
        gbc.writeMem(0xa6cc, { 0x31, 0x68, 0x6f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6f68, gbc.sp());
        EXPECT(0xa6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa6cc));
        EXPECT(0x68, gbc.readMem(0xa6cd));
        EXPECT(0x6f, gbc.readMem(0xa6ce));
        // 31 00E0
        gbc.setState(0x2c52, 0x5698, 0x8120, 0xe9fd, 0x4b95, 0xfb60, 0x1, 0x1);
        gbc.writeMem(0x2c52, { 0x31, 0x3b, 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa43b, gbc.sp());
        EXPECT(0x2c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00E1
        gbc.setState(0xbd5b, 0xaad7, 0xc780, 0x2ede, 0x2021, 0x3743, 0x1, 0x0);
        gbc.writeMem(0xbd5b, { 0x31, 0x82, 0x78 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7882, gbc.sp());
        EXPECT(0xbd5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbd5b));
        EXPECT(0x82, gbc.readMem(0xbd5c));
        EXPECT(0x78, gbc.readMem(0xbd5d));
        // 31 00E2
        gbc.setState(0xb35c, 0x1f58, 0xbda0, 0xdefe, 0x2020, 0x85d6, 0x0, 0x1);
        gbc.writeMem(0xb35c, { 0x31, 0x91, 0xd4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd491, gbc.sp());
        EXPECT(0xb35f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb35c));
        EXPECT(0x91, gbc.readMem(0xb35d));
        EXPECT(0xd4, gbc.readMem(0xb35e));
        // 31 00E3
        gbc.setState(0x9b89, 0xcbb5, 0x2710, 0xad2f, 0xc1bf, 0x7ed6, 0x1, 0x1);
        gbc.writeMem(0x9b89, { 0x31, 0xe8, 0xac });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xace8, gbc.sp());
        EXPECT(0x9b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9b89));
        EXPECT(0xe8, gbc.readMem(0x9b8a));
        EXPECT(0xac, gbc.readMem(0x9b8b));
        // 31 00E4
        gbc.setState(0x4b5b, 0x1148, 0xe10, 0x91ad, 0xc66d, 0xabae, 0x0, 0x1);
        gbc.writeMem(0x4b5b, { 0x31, 0xbf, 0x6b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6bbf, gbc.sp());
        EXPECT(0x4b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00E5
        gbc.setState(0x657d, 0x4bf8, 0x2b10, 0x60fd, 0x2ea8, 0xfbb1, 0x1, 0x0);
        gbc.writeMem(0x657d, { 0x31, 0xd8, 0xd4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd4d8, gbc.sp());
        EXPECT(0x6580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00E6
        gbc.setState(0xe55a, 0xa545, 0x6240, 0x6200, 0x3db2, 0x6a3a, 0x0, 0x1);
        gbc.writeMem(0xe55a, { 0x31, 0xbc, 0x8d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8dbc, gbc.sp());
        EXPECT(0xe55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe55a));
        EXPECT(0xbc, gbc.readMem(0xe55b));
        EXPECT(0x8d, gbc.readMem(0xe55c));
        // 31 00E7
        gbc.setState(0xb2e6, 0xe0c7, 0xcf20, 0x54f2, 0x5d91, 0x20a0, 0x0, 0x0);
        gbc.writeMem(0xb2e6, { 0x31, 0x94, 0x26 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2694, gbc.sp());
        EXPECT(0xb2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb2e6));
        EXPECT(0x94, gbc.readMem(0xb2e7));
        EXPECT(0x26, gbc.readMem(0xb2e8));
        // 31 00E8
        gbc.setState(0x9319, 0x362a, 0xa0, 0xdfe6, 0xd077, 0x7dde, 0x0, 0x1);
        gbc.writeMem(0x9319, { 0x31, 0x9, 0x62 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6209, gbc.sp());
        EXPECT(0x931c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9319));
        EXPECT(0x9, gbc.readMem(0x931a));
        EXPECT(0x62, gbc.readMem(0x931b));
        // 31 00E9
        gbc.setState(0x6662, 0x6c38, 0x49f0, 0x6ac6, 0xa4c0, 0x7683, 0x1, 0x0);
        gbc.writeMem(0x6662, { 0x31, 0xa, 0xb4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb40a, gbc.sp());
        EXPECT(0x6665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00EA
        gbc.setState(0x9d37, 0x846c, 0xe050, 0x2c6d, 0xc6de, 0xc23a, 0x0, 0x0);
        gbc.writeMem(0x9d37, { 0x31, 0xd6, 0xd8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd8d6, gbc.sp());
        EXPECT(0x9d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9d37));
        EXPECT(0xd6, gbc.readMem(0x9d38));
        EXPECT(0xd8, gbc.readMem(0x9d39));
        // 31 00EB
        gbc.setState(0x73f2, 0x5cd7, 0xc930, 0x8865, 0x57d1, 0x5ad, 0x0, 0x0);
        gbc.writeMem(0x73f2, { 0x31, 0x10, 0x1d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1d10, gbc.sp());
        EXPECT(0x73f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00EC
        gbc.setState(0x6b2b, 0xee89, 0xbc80, 0xaca5, 0x7b28, 0xf066, 0x0, 0x0);
        gbc.writeMem(0x6b2b, { 0x31, 0xb8, 0x45 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x45b8, gbc.sp());
        EXPECT(0x6b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00ED
        gbc.setState(0xe4e9, 0x4fc0, 0xd9a0, 0x69db, 0xa1fc, 0xdd4a, 0x0, 0x1);
        gbc.writeMem(0xe4e9, { 0x31, 0xbf, 0x1b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1bbf, gbc.sp());
        EXPECT(0xe4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe4e9));
        EXPECT(0xbf, gbc.readMem(0xe4ea));
        EXPECT(0x1b, gbc.readMem(0xe4eb));
        // 31 00EE
        gbc.setState(0x7741, 0x782f, 0x3cf0, 0xa8eb, 0xf6af, 0x98aa, 0x0, 0x1);
        gbc.writeMem(0x7741, { 0x31, 0x2e, 0x1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x12e, gbc.sp());
        EXPECT(0x7744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00EF
        gbc.setState(0xd081, 0xc927, 0x9ea0, 0x88e, 0x3553, 0x36bc, 0x0, 0x0);
        gbc.writeMem(0xd081, { 0x31, 0x88, 0x35 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3588, gbc.sp());
        EXPECT(0xd084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd081));
        EXPECT(0x88, gbc.readMem(0xd082));
        EXPECT(0x35, gbc.readMem(0xd083));
        // 31 00F0
        gbc.setState(0xaf9b, 0x9e25, 0x4120, 0x9c9d, 0xa977, 0x6bee, 0x1, 0x1);
        gbc.writeMem(0xaf9b, { 0x31, 0x66, 0x7c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7c66, gbc.sp());
        EXPECT(0xaf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaf9b));
        EXPECT(0x66, gbc.readMem(0xaf9c));
        EXPECT(0x7c, gbc.readMem(0xaf9d));
        // 31 00F1
        gbc.setState(0x21b7, 0xd61d, 0x9f50, 0xef52, 0x211f, 0xb568, 0x0, 0x1);
        gbc.writeMem(0x21b7, { 0x31, 0xb5, 0x88 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x88b5, gbc.sp());
        EXPECT(0x21ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00F2
        gbc.setState(0x1862, 0x7159, 0x4170, 0x7dbf, 0x1a15, 0xd197, 0x0, 0x0);
        gbc.writeMem(0x1862, { 0x31, 0xd4, 0x7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7d4, gbc.sp());
        EXPECT(0x1865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00F3
        gbc.setState(0xeb77, 0xf640, 0x3d90, 0xaf2b, 0xfca3, 0x36c7, 0x0, 0x0);
        gbc.writeMem(0xeb77, { 0x31, 0x74, 0xfe });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfe74, gbc.sp());
        EXPECT(0xeb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xeb77));
        EXPECT(0x74, gbc.readMem(0xeb78));
        EXPECT(0xfe, gbc.readMem(0xeb79));
        // 31 00F4
        gbc.setState(0x3f83, 0xb481, 0xded0, 0x40b9, 0x3073, 0x4864, 0x1, 0x0);
        gbc.writeMem(0x3f83, { 0x31, 0xc4, 0x64 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x64c4, gbc.sp());
        EXPECT(0x3f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00F5
        gbc.setState(0x9f74, 0xc63a, 0x420, 0x33db, 0xf9da, 0x169b, 0x1, 0x1);
        gbc.writeMem(0x9f74, { 0x31, 0x3c, 0x7c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7c3c, gbc.sp());
        EXPECT(0x9f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9f74));
        EXPECT(0x3c, gbc.readMem(0x9f75));
        EXPECT(0x7c, gbc.readMem(0x9f76));
        // 31 00F6
        gbc.setState(0x3054, 0x8ae9, 0xc430, 0xef85, 0x8c44, 0xf0a, 0x0, 0x0);
        gbc.writeMem(0x3054, { 0x31, 0xd9, 0x3c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3cd9, gbc.sp());
        EXPECT(0x3057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00F7
        gbc.setState(0x8aeb, 0xd903, 0x6990, 0x5116, 0x2eea, 0xf460, 0x0, 0x0);
        gbc.writeMem(0x8aeb, { 0x31, 0x97, 0x96 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9697, gbc.sp());
        EXPECT(0x8aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8aeb));
        EXPECT(0x97, gbc.readMem(0x8aec));
        EXPECT(0x96, gbc.readMem(0x8aed));
        // 31 00F8
        gbc.setState(0xecbe, 0x1288, 0xdb70, 0xc1e7, 0x7b03, 0xe7ab, 0x0, 0x1);
        gbc.writeMem(0xecbe, { 0x31, 0x66, 0xe9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe966, gbc.sp());
        EXPECT(0xecc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xecbe));
        EXPECT(0x66, gbc.readMem(0xecbf));
        EXPECT(0xe9, gbc.readMem(0xecc0));
        // 31 00F9
        gbc.setState(0x4d93, 0xf76, 0x49b0, 0xbf59, 0x3513, 0xf3d3, 0x1, 0x0);
        gbc.writeMem(0x4d93, { 0x31, 0x88, 0xbb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbb88, gbc.sp());
        EXPECT(0x4d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00FA
        gbc.setState(0x8770, 0x950a, 0xc3d0, 0x7215, 0xec48, 0xdb24, 0x1, 0x0);
        gbc.writeMem(0x8770, { 0x31, 0xf5, 0xb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbf5, gbc.sp());
        EXPECT(0x8773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8770));
        EXPECT(0xf5, gbc.readMem(0x8771));
        EXPECT(0xb, gbc.readMem(0x8772));
        // 31 00FB
        gbc.setState(0x74a, 0xba8, 0xd200, 0xb8c7, 0x924a, 0x60b1, 0x1, 0x0);
        gbc.writeMem(0x74a, { 0x31, 0xbd, 0xad });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xadbd, gbc.sp());
        EXPECT(0x74d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 00FC
        gbc.setState(0x6e5c, 0xe3fa, 0xb290, 0x3cd3, 0x80b2, 0xb9b5, 0x0, 0x1);
        gbc.writeMem(0x6e5c, { 0x31, 0x7e, 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb27e, gbc.sp());
        EXPECT(0x6e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 00FD
        gbc.setState(0xe704, 0x6c72, 0x8c90, 0xfa7e, 0x5322, 0x8aee, 0x0, 0x1);
        gbc.writeMem(0xe704, { 0x31, 0xf5, 0xd7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd7f5, gbc.sp());
        EXPECT(0xe707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe704));
        EXPECT(0xf5, gbc.readMem(0xe705));
        EXPECT(0xd7, gbc.readMem(0xe706));
        // 31 00FE
        gbc.setState(0xd4f7, 0xf980, 0xda20, 0x381b, 0xc931, 0x60a0, 0x0, 0x0);
        gbc.writeMem(0xd4f7, { 0x31, 0x90, 0x17 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1790, gbc.sp());
        EXPECT(0xd4fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd4f7));
        EXPECT(0x90, gbc.readMem(0xd4f8));
        EXPECT(0x17, gbc.readMem(0xd4f9));
        // 31 00FF
        gbc.setState(0x1b95, 0x8ea3, 0x2e00, 0xeb31, 0x5bc1, 0x8060, 0x0, 0x1);
        gbc.writeMem(0x1b95, { 0x31, 0x63, 0xd2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd263, gbc.sp());
        EXPECT(0x1b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0100
        gbc.setState(0x214b, 0xd7ca, 0x4c80, 0xf969, 0xc9fb, 0x6d76, 0x1, 0x1);
        gbc.writeMem(0x214b, { 0x31, 0xde, 0xd2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd2de, gbc.sp());
        EXPECT(0x214e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0101
        gbc.setState(0x4bb8, 0xbf08, 0xe7d0, 0x1d36, 0xc399, 0xc64e, 0x1, 0x1);
        gbc.writeMem(0x4bb8, { 0x31, 0x15, 0x1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x115, gbc.sp());
        EXPECT(0x4bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0103
        gbc.setState(0x114a, 0xfd08, 0x4660, 0xd5db, 0xa723, 0xe502, 0x1, 0x0);
        gbc.writeMem(0x114a, { 0x31, 0x9a, 0xbe });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbe9a, gbc.sp());
        EXPECT(0x114d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0104
        gbc.setState(0xbd91, 0xfe6c, 0x3940, 0xf4c6, 0x344c, 0xab77, 0x1, 0x0);
        gbc.writeMem(0xbd91, { 0x31, 0xa4, 0x22 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x22a4, gbc.sp());
        EXPECT(0xbd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbd91));
        EXPECT(0xa4, gbc.readMem(0xbd92));
        EXPECT(0x22, gbc.readMem(0xbd93));
        // 31 0105
        gbc.setState(0xd58e, 0x1a08, 0xe1a0, 0xaf12, 0x2f53, 0x63ec, 0x0, 0x1);
        gbc.writeMem(0xd58e, { 0x31, 0x98, 0xb7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb798, gbc.sp());
        EXPECT(0xd591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd58e));
        EXPECT(0x98, gbc.readMem(0xd58f));
        EXPECT(0xb7, gbc.readMem(0xd590));
        // 31 0106
        gbc.setState(0x9d80, 0x55b2, 0xb230, 0x3e58, 0x381f, 0x419, 0x1, 0x0);
        gbc.writeMem(0x9d80, { 0x31, 0x1, 0x5b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5b01, gbc.sp());
        EXPECT(0x9d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9d80));
        EXPECT(0x1, gbc.readMem(0x9d81));
        EXPECT(0x5b, gbc.readMem(0x9d82));
        // 31 0107
        gbc.setState(0x3db6, 0x978, 0xab60, 0x506a, 0xe5c6, 0xf8a0, 0x1, 0x0);
        gbc.writeMem(0x3db6, { 0x31, 0xdf, 0x4b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4bdf, gbc.sp());
        EXPECT(0x3db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0108
        gbc.setState(0x7024, 0x6cc2, 0xfaa0, 0x3d32, 0xdaab, 0xd730, 0x1, 0x0);
        gbc.writeMem(0x7024, { 0x31, 0xb8, 0x2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0x7027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0109
        gbc.setState(0x45c9, 0xa361, 0x930, 0xfdf9, 0x74ca, 0xd021, 0x1, 0x0);
        gbc.writeMem(0x45c9, { 0x31, 0xfd, 0x71 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x71fd, gbc.sp());
        EXPECT(0x45cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 010A
        gbc.setState(0x7743, 0x8691, 0xcd10, 0x7914, 0x5c4d, 0xe2ba, 0x0, 0x0);
        gbc.writeMem(0x7743, { 0x31, 0x11, 0xd5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd511, gbc.sp());
        EXPECT(0x7746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 010B
        gbc.setState(0x73f4, 0xde87, 0x68f0, 0x6e7d, 0xc01f, 0x6ac4, 0x0, 0x1);
        gbc.writeMem(0x73f4, { 0x31, 0xce, 0x7d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7dce, gbc.sp());
        EXPECT(0x73f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 010C
        gbc.setState(0xb739, 0x84ca, 0x87f0, 0x3768, 0x44, 0xf99d, 0x1, 0x0);
        gbc.writeMem(0xb739, { 0x31, 0x22, 0x88 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8822, gbc.sp());
        EXPECT(0xb73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb739));
        EXPECT(0x22, gbc.readMem(0xb73a));
        EXPECT(0x88, gbc.readMem(0xb73b));
        // 31 010D
        gbc.setState(0x6366, 0xe461, 0x8cc0, 0x8486, 0x90dd, 0x12f4, 0x0, 0x0);
        gbc.writeMem(0x6366, { 0x31, 0x6c, 0x6f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6f6c, gbc.sp());
        EXPECT(0x6369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 010E
        gbc.setState(0x214f, 0x9b1c, 0x530, 0x14e7, 0x4a89, 0xaef7, 0x1, 0x0);
        gbc.writeMem(0x214f, { 0x31, 0x71, 0x44 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4471, gbc.sp());
        EXPECT(0x2152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 010F
        gbc.setState(0x2e9, 0xe86a, 0xe160, 0x5e61, 0x972b, 0xfbfd, 0x1, 0x0);
        gbc.writeMem(0x2e9, { 0x31, 0xf5, 0xf5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf5f5, gbc.sp());
        EXPECT(0x2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0110
        gbc.setState(0xe0d6, 0xf80e, 0xd0b0, 0xe5e4, 0xdecd, 0xa5e8, 0x1, 0x1);
        gbc.writeMem(0xe0d6, { 0x31, 0x0, 0xd6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd600, gbc.sp());
        EXPECT(0xe0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe0d6));
        EXPECT(0x0, gbc.readMem(0xe0d7));
        EXPECT(0xd6, gbc.readMem(0xe0d8));
        // 31 0111
        gbc.setState(0x59bf, 0x3054, 0xf240, 0xd0dd, 0xfdcc, 0x894b, 0x1, 0x0);
        gbc.writeMem(0x59bf, { 0x31, 0x81, 0x62 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6281, gbc.sp());
        EXPECT(0x59c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0112
        gbc.setState(0x29c, 0x117, 0xc750, 0xfaf5, 0xd11b, 0x7a52, 0x1, 0x1);
        gbc.writeMem(0x29c, { 0x31, 0xcd, 0x66 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x66cd, gbc.sp());
        EXPECT(0x29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0113
        gbc.setState(0xb833, 0xabe3, 0x8720, 0x4795, 0x6250, 0x159b, 0x0, 0x1);
        gbc.writeMem(0xb833, { 0x31, 0x33, 0xf0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf033, gbc.sp());
        EXPECT(0xb836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb833));
        EXPECT(0x33, gbc.readMem(0xb834));
        EXPECT(0xf0, gbc.readMem(0xb835));
        // 31 0114
        gbc.setState(0xed09, 0x5fe5, 0x14b0, 0x6580, 0x8a47, 0x49a0, 0x1, 0x1);
        gbc.writeMem(0xed09, { 0x31, 0x4e, 0x41 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x414e, gbc.sp());
        EXPECT(0xed0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xed09));
        EXPECT(0x4e, gbc.readMem(0xed0a));
        EXPECT(0x41, gbc.readMem(0xed0b));
        // 31 0115
        gbc.setState(0x61ab, 0x5b3b, 0xd200, 0xed6c, 0x74c4, 0xaa38, 0x1, 0x0);
        gbc.writeMem(0x61ab, { 0x31, 0x9e, 0x73 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x739e, gbc.sp());
        EXPECT(0x61ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0116
        gbc.setState(0xdd4c, 0xef3d, 0xbd20, 0xd7a7, 0x1914, 0x4ddd, 0x1, 0x0);
        gbc.writeMem(0xdd4c, { 0x31, 0x4, 0xa });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa04, gbc.sp());
        EXPECT(0xdd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdd4c));
        EXPECT(0x4, gbc.readMem(0xdd4d));
        EXPECT(0xa, gbc.readMem(0xdd4e));
        // 31 0117
        gbc.setState(0xe9a3, 0xb3b5, 0x8800, 0x66ca, 0x1979, 0x3d38, 0x1, 0x1);
        gbc.writeMem(0xe9a3, { 0x31, 0x3c, 0x63 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x633c, gbc.sp());
        EXPECT(0xe9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe9a3));
        EXPECT(0x3c, gbc.readMem(0xe9a4));
        EXPECT(0x63, gbc.readMem(0xe9a5));
        // 31 0118
        gbc.setState(0xeeb7, 0x6c9, 0x8bc0, 0x426c, 0x9de, 0x7f9, 0x0, 0x0);
        gbc.writeMem(0xeeb7, { 0x31, 0xa0, 0x60 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x60a0, gbc.sp());
        EXPECT(0xeeba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xeeb7));
        EXPECT(0xa0, gbc.readMem(0xeeb8));
        EXPECT(0x60, gbc.readMem(0xeeb9));
        // 31 0119
        gbc.setState(0x8640, 0xe92f, 0x4dc0, 0xc031, 0x7c73, 0xc310, 0x0, 0x0);
        gbc.writeMem(0x8640, { 0x31, 0xf2, 0xa2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa2f2, gbc.sp());
        EXPECT(0x8643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8640));
        EXPECT(0xf2, gbc.readMem(0x8641));
        EXPECT(0xa2, gbc.readMem(0x8642));
        // 31 011A
        gbc.setState(0xa620, 0x2360, 0x2df0, 0xd44e, 0x15a8, 0xd572, 0x0, 0x0);
        gbc.writeMem(0xa620, { 0x31, 0xc, 0xc6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc60c, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa620));
        EXPECT(0xc, gbc.readMem(0xa621));
        EXPECT(0xc6, gbc.readMem(0xa622));
        // 31 011B
        gbc.setState(0xa048, 0xb5e3, 0xbfe0, 0xb6bb, 0x60bf, 0xaa5b, 0x1, 0x1);
        gbc.writeMem(0xa048, { 0x31, 0x29, 0xf1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf129, gbc.sp());
        EXPECT(0xa04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa048));
        EXPECT(0x29, gbc.readMem(0xa049));
        EXPECT(0xf1, gbc.readMem(0xa04a));
        // 31 011C
        gbc.setState(0x7cb8, 0x780e, 0x7f50, 0xac8d, 0x8614, 0x1f3, 0x0, 0x1);
        gbc.writeMem(0x7cb8, { 0x31, 0xf0, 0x6e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6ef0, gbc.sp());
        EXPECT(0x7cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 011D
        gbc.setState(0xaa19, 0x49b6, 0x4650, 0xf72c, 0xbe69, 0x4c9c, 0x1, 0x1);
        gbc.writeMem(0xaa19, { 0x31, 0x13, 0xfb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfb13, gbc.sp());
        EXPECT(0xaa1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaa19));
        EXPECT(0x13, gbc.readMem(0xaa1a));
        EXPECT(0xfb, gbc.readMem(0xaa1b));
        // 31 011E
        gbc.setState(0xa24d, 0xf9b, 0xe00, 0x62a7, 0x2e9c, 0xf5ba, 0x1, 0x1);
        gbc.writeMem(0xa24d, { 0x31, 0x22, 0x8e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8e22, gbc.sp());
        EXPECT(0xa250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa24d));
        EXPECT(0x22, gbc.readMem(0xa24e));
        EXPECT(0x8e, gbc.readMem(0xa24f));
        // 31 011F
        gbc.setState(0xbc89, 0xce7a, 0xa100, 0x88d8, 0xe467, 0x8452, 0x0, 0x1);
        gbc.writeMem(0xbc89, { 0x31, 0xd2, 0xf });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfd2, gbc.sp());
        EXPECT(0xbc8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbc89));
        EXPECT(0xd2, gbc.readMem(0xbc8a));
        EXPECT(0xf, gbc.readMem(0xbc8b));
        // 31 0120
        gbc.setState(0x8e7c, 0xbd3, 0x7250, 0xeaf2, 0x5e60, 0xbefe, 0x0, 0x0);
        gbc.writeMem(0x8e7c, { 0x31, 0x68, 0x2f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2f68, gbc.sp());
        EXPECT(0x8e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8e7c));
        EXPECT(0x68, gbc.readMem(0x8e7d));
        EXPECT(0x2f, gbc.readMem(0x8e7e));
        // 31 0121
        gbc.setState(0xe93e, 0x699c, 0x330, 0x1a76, 0x1289, 0x4bf4, 0x1, 0x1);
        gbc.writeMem(0xe93e, { 0x31, 0xec, 0x4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4ec, gbc.sp());
        EXPECT(0xe941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe93e));
        EXPECT(0xec, gbc.readMem(0xe93f));
        EXPECT(0x4, gbc.readMem(0xe940));
        // 31 0122
        gbc.setState(0xc9c2, 0xf580, 0x6b60, 0xce54, 0xf662, 0xa65d, 0x1, 0x0);
        gbc.writeMem(0xc9c2, { 0x31, 0xce, 0x3b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3bce, gbc.sp());
        EXPECT(0xc9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc9c2));
        EXPECT(0xce, gbc.readMem(0xc9c3));
        EXPECT(0x3b, gbc.readMem(0xc9c4));
        // 31 0123
        gbc.setState(0x98e, 0xec07, 0x3120, 0x9a6f, 0x590f, 0xc2e6, 0x1, 0x1);
        gbc.writeMem(0x98e, { 0x31, 0x40, 0x8e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8e40, gbc.sp());
        EXPECT(0x991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0124
        gbc.setState(0x229, 0x5058, 0xd790, 0xbe82, 0x4861, 0xadd5, 0x1, 0x1);
        gbc.writeMem(0x229, { 0x31, 0xa9, 0x1e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1ea9, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0125
        gbc.setState(0x7de2, 0x728, 0xb870, 0x4bc0, 0xf46c, 0x6595, 0x1, 0x1);
        gbc.writeMem(0x7de2, { 0x31, 0xcc, 0x6f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6fcc, gbc.sp());
        EXPECT(0x7de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0126
        gbc.setState(0x85b0, 0xf54b, 0x3c0, 0x55df, 0xf44a, 0x1325, 0x1, 0x0);
        gbc.writeMem(0x85b0, { 0x31, 0xc4, 0x98 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x98c4, gbc.sp());
        EXPECT(0x85b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x85b0));
        EXPECT(0xc4, gbc.readMem(0x85b1));
        EXPECT(0x98, gbc.readMem(0x85b2));
        // 31 0127
        gbc.setState(0x677f, 0xf23, 0xe900, 0x6d54, 0xbe13, 0xb5d2, 0x1, 0x0);
        gbc.writeMem(0x677f, { 0x31, 0x7, 0xd1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd107, gbc.sp());
        EXPECT(0x6782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0128
        gbc.setState(0x5bf0, 0x53ab, 0xc890, 0xb5c2, 0x4b85, 0x1550, 0x1, 0x1);
        gbc.writeMem(0x5bf0, { 0x31, 0x66, 0x4b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4b66, gbc.sp());
        EXPECT(0x5bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0129
        gbc.setState(0x4e95, 0x6108, 0xbd00, 0xd2da, 0x2415, 0x6910, 0x1, 0x0);
        gbc.writeMem(0x4e95, { 0x31, 0xdc, 0x16 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x16dc, gbc.sp());
        EXPECT(0x4e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 012A
        gbc.setState(0x73a9, 0xada, 0xe2f0, 0x35d7, 0xef98, 0xcca2, 0x0, 0x1);
        gbc.writeMem(0x73a9, { 0x31, 0x61, 0xa6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa661, gbc.sp());
        EXPECT(0x73ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 012B
        gbc.setState(0x9568, 0xdda4, 0x5bd0, 0xfe6f, 0x5e4, 0x5a77, 0x1, 0x0);
        gbc.writeMem(0x9568, { 0x31, 0x3d, 0xf9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf93d, gbc.sp());
        EXPECT(0x956b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9568));
        EXPECT(0x3d, gbc.readMem(0x9569));
        EXPECT(0xf9, gbc.readMem(0x956a));
        // 31 012C
        gbc.setState(0x4049, 0x16ed, 0xa320, 0xfd0, 0x89ed, 0xd9b8, 0x0, 0x0);
        gbc.writeMem(0x4049, { 0x31, 0x1e, 0xc3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc31e, gbc.sp());
        EXPECT(0x404c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 012D
        gbc.setState(0xd4a8, 0xed98, 0x8070, 0x83b, 0x7c, 0xd1cd, 0x1, 0x0);
        gbc.writeMem(0xd4a8, { 0x31, 0x73, 0xd3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd373, gbc.sp());
        EXPECT(0xd4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd4a8));
        EXPECT(0x73, gbc.readMem(0xd4a9));
        EXPECT(0xd3, gbc.readMem(0xd4aa));
        // 31 012E
        gbc.setState(0xa7ef, 0xf5de, 0xc940, 0x115e, 0xd8f6, 0xfedb, 0x0, 0x1);
        gbc.writeMem(0xa7ef, { 0x31, 0xb8, 0x1b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1bb8, gbc.sp());
        EXPECT(0xa7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa7ef));
        EXPECT(0xb8, gbc.readMem(0xa7f0));
        EXPECT(0x1b, gbc.readMem(0xa7f1));
        // 31 012F
        gbc.setState(0x1010, 0x5828, 0x16b0, 0x9f72, 0xb81d, 0x405f, 0x1, 0x1);
        gbc.writeMem(0x1010, { 0x31, 0xa1, 0x3b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3ba1, gbc.sp());
        EXPECT(0x1013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0130
        gbc.setState(0xbffc, 0xa09e, 0xf200, 0x109e, 0x8a1d, 0x9dff, 0x1, 0x0);
        gbc.writeMem(0xbffc, { 0x31, 0x1f, 0x6a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6a1f, gbc.sp());
        EXPECT(0xbfff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbffc));
        EXPECT(0x1f, gbc.readMem(0xbffd));
        EXPECT(0x6a, gbc.readMem(0xbffe));
        // 31 0131
        gbc.setState(0x6b4a, 0xe052, 0xc6f0, 0xfd09, 0xb805, 0x9233, 0x1, 0x0);
        gbc.writeMem(0x6b4a, { 0x31, 0x1f, 0x4a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4a1f, gbc.sp());
        EXPECT(0x6b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0132
        gbc.setState(0xedf8, 0xce1f, 0x7a30, 0x7ef8, 0xc5d1, 0x9231, 0x1, 0x1);
        gbc.writeMem(0xedf8, { 0x31, 0x2b, 0x66 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x662b, gbc.sp());
        EXPECT(0xedfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xedf8));
        EXPECT(0x2b, gbc.readMem(0xedf9));
        EXPECT(0x66, gbc.readMem(0xedfa));
        // 31 0133
        gbc.setState(0x38ed, 0xde4, 0xd740, 0xc390, 0x2ce4, 0x832c, 0x1, 0x1);
        gbc.writeMem(0x38ed, { 0x31, 0xd0, 0xa6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa6d0, gbc.sp());
        EXPECT(0x38f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0134
        gbc.setState(0xec30, 0xfd92, 0x1ac0, 0xad45, 0xc83a, 0xf390, 0x1, 0x0);
        gbc.writeMem(0xec30, { 0x31, 0x30, 0x7b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7b30, gbc.sp());
        EXPECT(0xec33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xec30));
        EXPECT(0x30, gbc.readMem(0xec31));
        EXPECT(0x7b, gbc.readMem(0xec32));
        // 31 0135
        gbc.setState(0xb09f, 0xec9e, 0x1850, 0x1bf, 0xab02, 0x52d0, 0x1, 0x0);
        gbc.writeMem(0xb09f, { 0x31, 0x63, 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8963, gbc.sp());
        EXPECT(0xb0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb09f));
        EXPECT(0x63, gbc.readMem(0xb0a0));
        EXPECT(0x89, gbc.readMem(0xb0a1));
        // 31 0137
        gbc.setState(0x7578, 0xdd17, 0x7280, 0xf593, 0x1e9c, 0xc81c, 0x1, 0x0);
        gbc.writeMem(0x7578, { 0x31, 0xca, 0xd4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd4ca, gbc.sp());
        EXPECT(0x757b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0139
        gbc.setState(0x94eb, 0x723e, 0x5830, 0x61f4, 0x2860, 0xfb74, 0x1, 0x1);
        gbc.writeMem(0x94eb, { 0x31, 0x15, 0xd1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd115, gbc.sp());
        EXPECT(0x94ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x94eb));
        EXPECT(0x15, gbc.readMem(0x94ec));
        EXPECT(0xd1, gbc.readMem(0x94ed));
        // 31 013A
        gbc.setState(0xdf1b, 0x1e82, 0xc980, 0xde59, 0x41bf, 0xaeb9, 0x0, 0x1);
        gbc.writeMem(0xdf1b, { 0x31, 0x5, 0x2d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2d05, gbc.sp());
        EXPECT(0xdf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdf1b));
        EXPECT(0x5, gbc.readMem(0xdf1c));
        EXPECT(0x2d, gbc.readMem(0xdf1d));
        // 31 013B
        gbc.setState(0xb09c, 0x91ee, 0xf7c0, 0xaa41, 0x5c9d, 0x8c91, 0x0, 0x0);
        gbc.writeMem(0xb09c, { 0x31, 0x16, 0x60 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6016, gbc.sp());
        EXPECT(0xb09f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb09c));
        EXPECT(0x16, gbc.readMem(0xb09d));
        EXPECT(0x60, gbc.readMem(0xb09e));
        // 31 013C
        gbc.setState(0x5ac, 0xab35, 0xd080, 0xb35c, 0xfaa5, 0x6262, 0x1, 0x0);
        gbc.writeMem(0x5ac, { 0x31, 0x16, 0x1b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1b16, gbc.sp());
        EXPECT(0x5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 013D
        gbc.setState(0x1798, 0x4852, 0x6550, 0x89e8, 0xed71, 0xd551, 0x1, 0x0);
        gbc.writeMem(0x1798, { 0x31, 0x7d, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7d, gbc.sp());
        EXPECT(0x179b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 013E
        gbc.setState(0x2275, 0x1235, 0x9d50, 0x1c61, 0xbb09, 0xdfe2, 0x1, 0x1);
        gbc.writeMem(0x2275, { 0x31, 0x87, 0x48 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0x2278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 013F
        gbc.setState(0xb527, 0xac90, 0x6f60, 0xc310, 0xfe46, 0x7ee0, 0x0, 0x0);
        gbc.writeMem(0xb527, { 0x31, 0xdd, 0xf4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf4dd, gbc.sp());
        EXPECT(0xb52a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb527));
        EXPECT(0xdd, gbc.readMem(0xb528));
        EXPECT(0xf4, gbc.readMem(0xb529));
        // 31 0140
        gbc.setState(0x31e7, 0x5abb, 0x88d0, 0xb484, 0xecd0, 0x396e, 0x1, 0x1);
        gbc.writeMem(0x31e7, { 0x31, 0xc4, 0x3a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3ac4, gbc.sp());
        EXPECT(0x31ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0141
        gbc.setState(0x7d72, 0x9bbb, 0xeaf0, 0x45af, 0x5041, 0x8008, 0x1, 0x1);
        gbc.writeMem(0x7d72, { 0x31, 0x57, 0x8e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8e57, gbc.sp());
        EXPECT(0x7d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0142
        gbc.setState(0xd083, 0x110d, 0x7710, 0xbdae, 0x53aa, 0x6de0, 0x1, 0x1);
        gbc.writeMem(0xd083, { 0x31, 0x9b, 0x36 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x369b, gbc.sp());
        EXPECT(0xd086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd083));
        EXPECT(0x9b, gbc.readMem(0xd084));
        EXPECT(0x36, gbc.readMem(0xd085));
        // 31 0143
        gbc.setState(0x8abf, 0x4fa3, 0x68b0, 0x2c18, 0x8a0a, 0x43ae, 0x1, 0x0);
        gbc.writeMem(0x8abf, { 0x31, 0x8, 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8908, gbc.sp());
        EXPECT(0x8ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8abf));
        EXPECT(0x8, gbc.readMem(0x8ac0));
        EXPECT(0x89, gbc.readMem(0x8ac1));
        // 31 0144
        gbc.setState(0x8449, 0x9545, 0xcbb0, 0x59cb, 0x6adc, 0xc27d, 0x0, 0x0);
        gbc.writeMem(0x8449, { 0x31, 0xc4, 0xbb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbbc4, gbc.sp());
        EXPECT(0x844c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8449));
        EXPECT(0xc4, gbc.readMem(0x844a));
        EXPECT(0xbb, gbc.readMem(0x844b));
        // 31 0145
        gbc.setState(0x4388, 0xe65b, 0x2b10, 0xa7a6, 0xcb78, 0x4f5, 0x1, 0x1);
        gbc.writeMem(0x4388, { 0x31, 0x6e, 0x93 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x936e, gbc.sp());
        EXPECT(0x438b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0146
        gbc.setState(0xe1cd, 0x9667, 0x8ac0, 0x6d48, 0xca0f, 0xda3a, 0x0, 0x1);
        gbc.writeMem(0xe1cd, { 0x31, 0x73, 0xcd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcd73, gbc.sp());
        EXPECT(0xe1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe1cd));
        EXPECT(0x73, gbc.readMem(0xe1ce));
        EXPECT(0xcd, gbc.readMem(0xe1cf));
        // 31 0147
        gbc.setState(0xe68f, 0xbf88, 0xc710, 0xdfb1, 0x6d60, 0x371e, 0x1, 0x0);
        gbc.writeMem(0xe68f, { 0x31, 0x62, 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6a62, gbc.sp());
        EXPECT(0xe692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe68f));
        EXPECT(0x62, gbc.readMem(0xe690));
        EXPECT(0x6a, gbc.readMem(0xe691));
        // 31 0148
        gbc.setState(0x8bc9, 0xdff4, 0xea30, 0xb861, 0x19a4, 0x654b, 0x0, 0x0);
        gbc.writeMem(0x8bc9, { 0x31, 0xd1, 0x92 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x92d1, gbc.sp());
        EXPECT(0x8bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8bc9));
        EXPECT(0xd1, gbc.readMem(0x8bca));
        EXPECT(0x92, gbc.readMem(0x8bcb));
        // 31 0149
        gbc.setState(0x83c4, 0x70d4, 0xf690, 0x5a1, 0x800, 0xc603, 0x1, 0x1);
        gbc.writeMem(0x83c4, { 0x31, 0x4, 0x20 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2004, gbc.sp());
        EXPECT(0x83c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x83c4));
        EXPECT(0x4, gbc.readMem(0x83c5));
        EXPECT(0x20, gbc.readMem(0x83c6));
        // 31 014A
        gbc.setState(0x7cd, 0xa233, 0x2e60, 0xa151, 0x6680, 0x562f, 0x1, 0x0);
        gbc.writeMem(0x7cd, { 0x31, 0xd9, 0x2c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2cd9, gbc.sp());
        EXPECT(0x7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 014B
        gbc.setState(0xd0bd, 0x88b0, 0xdb00, 0xf95f, 0xe75, 0xbd01, 0x0, 0x0);
        gbc.writeMem(0xd0bd, { 0x31, 0x4b, 0x4d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4d4b, gbc.sp());
        EXPECT(0xd0c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd0bd));
        EXPECT(0x4b, gbc.readMem(0xd0be));
        EXPECT(0x4d, gbc.readMem(0xd0bf));
        // 31 014C
        gbc.setState(0xaed0, 0xbc90, 0xc6b0, 0x5254, 0x7c38, 0xa0d5, 0x1, 0x1);
        gbc.writeMem(0xaed0, { 0x31, 0xdf, 0x82 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x82df, gbc.sp());
        EXPECT(0xaed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaed0));
        EXPECT(0xdf, gbc.readMem(0xaed1));
        EXPECT(0x82, gbc.readMem(0xaed2));
        // 31 014D
        gbc.setState(0xde7d, 0x95ac, 0x3790, 0xef04, 0x8f8, 0x585b, 0x0, 0x0);
        gbc.writeMem(0xde7d, { 0x31, 0x75, 0x5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x575, gbc.sp());
        EXPECT(0xde80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xde7d));
        EXPECT(0x75, gbc.readMem(0xde7e));
        EXPECT(0x5, gbc.readMem(0xde7f));
        // 31 014E
        gbc.setState(0x332b, 0xdbff, 0xa770, 0x79d, 0x82bb, 0xb234, 0x0, 0x0);
        gbc.writeMem(0x332b, { 0x31, 0x77, 0xdc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdc77, gbc.sp());
        EXPECT(0x332e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 014F
        gbc.setState(0x3261, 0x79a4, 0xc6f0, 0xd2f1, 0x5032, 0x1bb4, 0x1, 0x0);
        gbc.writeMem(0x3261, { 0x31, 0xd6, 0x54 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x54d6, gbc.sp());
        EXPECT(0x3264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0150
        gbc.setState(0x9c5c, 0xb338, 0x2110, 0xd845, 0x2546, 0x6e36, 0x1, 0x0);
        gbc.writeMem(0x9c5c, { 0x31, 0x17, 0xeb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xeb17, gbc.sp());
        EXPECT(0x9c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9c5c));
        EXPECT(0x17, gbc.readMem(0x9c5d));
        EXPECT(0xeb, gbc.readMem(0x9c5e));
        // 31 0151
        gbc.setState(0xe5c6, 0xd78d, 0xeba0, 0x610b, 0x4980, 0x61b4, 0x0, 0x1);
        gbc.writeMem(0xe5c6, { 0x31, 0xb, 0xbc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbc0b, gbc.sp());
        EXPECT(0xe5c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe5c6));
        EXPECT(0xb, gbc.readMem(0xe5c7));
        EXPECT(0xbc, gbc.readMem(0xe5c8));
        // 31 0152
        gbc.setState(0xb251, 0xcf62, 0xd020, 0x75fc, 0xda62, 0x6ec3, 0x0, 0x0);
        gbc.writeMem(0xb251, { 0x31, 0x91, 0x36 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3691, gbc.sp());
        EXPECT(0xb254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb251));
        EXPECT(0x91, gbc.readMem(0xb252));
        EXPECT(0x36, gbc.readMem(0xb253));
        // 31 0153
        gbc.setState(0xdfa0, 0x5ea7, 0x3200, 0x1e88, 0x961d, 0x8977, 0x1, 0x1);
        gbc.writeMem(0xdfa0, { 0x31, 0x21, 0x3e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3e21, gbc.sp());
        EXPECT(0xdfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdfa0));
        EXPECT(0x21, gbc.readMem(0xdfa1));
        EXPECT(0x3e, gbc.readMem(0xdfa2));
        // 31 0154
        gbc.setState(0x7380, 0x248c, 0xec50, 0x1ffc, 0xdba1, 0x9eef, 0x1, 0x1);
        gbc.writeMem(0x7380, { 0x31, 0x39, 0xd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd39, gbc.sp());
        EXPECT(0x7383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0155
        gbc.setState(0xec6a, 0xdfb8, 0xab60, 0xae46, 0xa03c, 0xef80, 0x1, 0x0);
        gbc.writeMem(0xec6a, { 0x31, 0x68, 0x51 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5168, gbc.sp());
        EXPECT(0xec6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xec6a));
        EXPECT(0x68, gbc.readMem(0xec6b));
        EXPECT(0x51, gbc.readMem(0xec6c));
        // 31 0156
        gbc.setState(0x6094, 0xffd0, 0xb420, 0x80fe, 0xac5d, 0x4e92, 0x0, 0x0);
        gbc.writeMem(0x6094, { 0x31, 0x9e, 0xd6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd69e, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0158
        gbc.setState(0xe488, 0x55e3, 0xdde0, 0x661c, 0x4ae0, 0x682d, 0x0, 0x0);
        gbc.writeMem(0xe488, { 0x31, 0x92, 0x49 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4992, gbc.sp());
        EXPECT(0xe48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe488));
        EXPECT(0x92, gbc.readMem(0xe489));
        EXPECT(0x49, gbc.readMem(0xe48a));
        // 31 0159
        gbc.setState(0x27dd, 0xb972, 0x1da0, 0x6037, 0xfc54, 0x550e, 0x0, 0x1);
        gbc.writeMem(0x27dd, { 0x31, 0xdb, 0xf2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf2db, gbc.sp());
        EXPECT(0x27e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 015A
        gbc.setState(0x1af8, 0x16b0, 0x8e30, 0x2592, 0x37bf, 0x1d1f, 0x1, 0x0);
        gbc.writeMem(0x1af8, { 0x31, 0x1b, 0xa2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa21b, gbc.sp());
        EXPECT(0x1afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 015B
        gbc.setState(0x8ef7, 0x72a5, 0x5a80, 0x80bb, 0x8a46, 0xcfce, 0x0, 0x1);
        gbc.writeMem(0x8ef7, { 0x31, 0xbf, 0x92 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x92bf, gbc.sp());
        EXPECT(0x8efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8ef7));
        EXPECT(0xbf, gbc.readMem(0x8ef8));
        EXPECT(0x92, gbc.readMem(0x8ef9));
        // 31 015C
        gbc.setState(0xb159, 0xf84e, 0xe3a0, 0xce33, 0x4f3b, 0xe002, 0x0, 0x0);
        gbc.writeMem(0xb159, { 0x31, 0xcd, 0x7b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7bcd, gbc.sp());
        EXPECT(0xb15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb159));
        EXPECT(0xcd, gbc.readMem(0xb15a));
        EXPECT(0x7b, gbc.readMem(0xb15b));
        // 31 015D
        gbc.setState(0xe558, 0xe16, 0xe280, 0xbe10, 0xb3c3, 0x7695, 0x0, 0x0);
        gbc.writeMem(0xe558, { 0x31, 0xa7, 0x36 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x36a7, gbc.sp());
        EXPECT(0xe55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe558));
        EXPECT(0xa7, gbc.readMem(0xe559));
        EXPECT(0x36, gbc.readMem(0xe55a));
        // 31 015E
        gbc.setState(0x248f, 0xbc96, 0xe80, 0x902, 0x4e4f, 0xe5cb, 0x1, 0x1);
        gbc.writeMem(0x248f, { 0x31, 0x1b, 0xeb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xeb1b, gbc.sp());
        EXPECT(0x2492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 015F
        gbc.setState(0xcd63, 0xc79f, 0x6260, 0x1a6, 0x649e, 0xc14, 0x0, 0x0);
        gbc.writeMem(0xcd63, { 0x31, 0x12, 0x54 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5412, gbc.sp());
        EXPECT(0xcd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcd63));
        EXPECT(0x12, gbc.readMem(0xcd64));
        EXPECT(0x54, gbc.readMem(0xcd65));
        // 31 0160
        gbc.setState(0xb8aa, 0xa405, 0x6aa0, 0xaa3b, 0x16d0, 0xd3e0, 0x1, 0x1);
        gbc.writeMem(0xb8aa, { 0x31, 0xef, 0x1a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1aef, gbc.sp());
        EXPECT(0xb8ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb8aa));
        EXPECT(0xef, gbc.readMem(0xb8ab));
        EXPECT(0x1a, gbc.readMem(0xb8ac));
        // 31 0161
        gbc.setState(0xe089, 0xf257, 0xd290, 0x4cbf, 0xf410, 0x2782, 0x0, 0x1);
        gbc.writeMem(0xe089, { 0x31, 0x5c, 0xd6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd65c, gbc.sp());
        EXPECT(0xe08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe089));
        EXPECT(0x5c, gbc.readMem(0xe08a));
        EXPECT(0xd6, gbc.readMem(0xe08b));
        // 31 0162
        gbc.setState(0xa56, 0x31c7, 0x2230, 0xe724, 0x35b5, 0xe47c, 0x0, 0x1);
        gbc.writeMem(0xa56, { 0x31, 0xae, 0xc5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc5ae, gbc.sp());
        EXPECT(0xa59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0163
        gbc.setState(0x7b62, 0x7a1f, 0xa100, 0x3ab, 0x359c, 0xe309, 0x1, 0x1);
        gbc.writeMem(0x7b62, { 0x31, 0xdb, 0x3e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3edb, gbc.sp());
        EXPECT(0x7b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0164
        gbc.setState(0xed88, 0xc25d, 0xd970, 0x488f, 0xab5f, 0xebe4, 0x1, 0x1);
        gbc.writeMem(0xed88, { 0x31, 0xf8, 0xa7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa7f8, gbc.sp());
        EXPECT(0xed8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xed88));
        EXPECT(0xf8, gbc.readMem(0xed89));
        EXPECT(0xa7, gbc.readMem(0xed8a));
        // 31 0165
        gbc.setState(0xed5a, 0xa90c, 0x61a0, 0x4f20, 0xdf5b, 0x5ccd, 0x0, 0x1);
        gbc.writeMem(0xed5a, { 0x31, 0xef, 0x26 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x26ef, gbc.sp());
        EXPECT(0xed5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xed5a));
        EXPECT(0xef, gbc.readMem(0xed5b));
        EXPECT(0x26, gbc.readMem(0xed5c));
        // 31 0166
        gbc.setState(0x1024, 0x28a2, 0x24f0, 0x5b99, 0x5d3c, 0x307d, 0x0, 0x0);
        gbc.writeMem(0x1024, { 0x31, 0xa8, 0x91 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x91a8, gbc.sp());
        EXPECT(0x1027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0167
        gbc.setState(0xec42, 0xeef1, 0xabf0, 0xfe14, 0xbb78, 0x899c, 0x1, 0x1);
        gbc.writeMem(0xec42, { 0x31, 0x78, 0x82 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8278, gbc.sp());
        EXPECT(0xec45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xec42));
        EXPECT(0x78, gbc.readMem(0xec43));
        EXPECT(0x82, gbc.readMem(0xec44));
        // 31 0168
        gbc.setState(0x496a, 0x2e7b, 0x8460, 0xfaf7, 0xfe84, 0xdd48, 0x0, 0x1);
        gbc.writeMem(0x496a, { 0x31, 0x2d, 0x48 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x482d, gbc.sp());
        EXPECT(0x496d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0169
        gbc.setState(0x7123, 0x16aa, 0x1830, 0xcef2, 0x9f43, 0xc2fb, 0x1, 0x0);
        gbc.writeMem(0x7123, { 0x31, 0x58, 0x26 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2658, gbc.sp());
        EXPECT(0x7126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 016A
        gbc.setState(0x330c, 0xd68e, 0x9930, 0x26f1, 0xeccc, 0x6b57, 0x0, 0x1);
        gbc.writeMem(0x330c, { 0x31, 0xd6, 0xa });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xad6, gbc.sp());
        EXPECT(0x330f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 016B
        gbc.setState(0xd814, 0x5993, 0x88a0, 0x91e9, 0xdc2d, 0x1c34, 0x1, 0x1);
        gbc.writeMem(0xd814, { 0x31, 0x82, 0xf7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf782, gbc.sp());
        EXPECT(0xd817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd814));
        EXPECT(0x82, gbc.readMem(0xd815));
        EXPECT(0xf7, gbc.readMem(0xd816));
        // 31 016C
        gbc.setState(0xefdc, 0x185d, 0xe2e0, 0x9619, 0x24f6, 0x45d8, 0x1, 0x1);
        gbc.writeMem(0xefdc, { 0x31, 0x33, 0x2f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2f33, gbc.sp());
        EXPECT(0xefdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xefdc));
        EXPECT(0x33, gbc.readMem(0xefdd));
        EXPECT(0x2f, gbc.readMem(0xefde));
        // 31 016D
        gbc.setState(0x950b, 0xb52e, 0xafc0, 0x8899, 0xfd40, 0xfb72, 0x0, 0x1);
        gbc.writeMem(0x950b, { 0x31, 0x9f, 0xd3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd39f, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x950b));
        EXPECT(0x9f, gbc.readMem(0x950c));
        EXPECT(0xd3, gbc.readMem(0x950d));
        // 31 016E
        gbc.setState(0xb047, 0x9817, 0x1c30, 0xbbd8, 0x45d8, 0x64a9, 0x1, 0x0);
        gbc.writeMem(0xb047, { 0x31, 0x5e, 0x36 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x365e, gbc.sp());
        EXPECT(0xb04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb047));
        EXPECT(0x5e, gbc.readMem(0xb048));
        EXPECT(0x36, gbc.readMem(0xb049));
        // 31 0170
        gbc.setState(0x3e31, 0x629e, 0xccd0, 0xd399, 0x1272, 0xe5ce, 0x1, 0x0);
        gbc.writeMem(0x3e31, { 0x31, 0x95, 0x1b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1b95, gbc.sp());
        EXPECT(0x3e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0171
        gbc.setState(0x92a, 0x10aa, 0x4ec0, 0x4265, 0xb7e6, 0x29fe, 0x0, 0x1);
        gbc.writeMem(0x92a, { 0x31, 0xb9, 0x16 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x16b9, gbc.sp());
        EXPECT(0x92d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0172
        gbc.setState(0xca36, 0x36a7, 0x7f70, 0xc023, 0xec85, 0x83e2, 0x0, 0x0);
        gbc.writeMem(0xca36, { 0x31, 0x67, 0xce });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xce67, gbc.sp());
        EXPECT(0xca39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xca36));
        EXPECT(0x67, gbc.readMem(0xca37));
        EXPECT(0xce, gbc.readMem(0xca38));
        // 31 0173
        gbc.setState(0xd270, 0x9c87, 0x4580, 0x2e5c, 0xca6f, 0x7b8e, 0x0, 0x1);
        gbc.writeMem(0xd270, { 0x31, 0xba, 0xd9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd9ba, gbc.sp());
        EXPECT(0xd273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd270));
        EXPECT(0xba, gbc.readMem(0xd271));
        EXPECT(0xd9, gbc.readMem(0xd272));
        // 31 0174
        gbc.setState(0xac6a, 0x1876, 0xbc90, 0x163a, 0xace6, 0x6df2, 0x1, 0x1);
        gbc.writeMem(0xac6a, { 0x31, 0x71, 0x86 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8671, gbc.sp());
        EXPECT(0xac6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xac6a));
        EXPECT(0x71, gbc.readMem(0xac6b));
        EXPECT(0x86, gbc.readMem(0xac6c));
        // 31 0175
        gbc.setState(0x71de, 0x36e6, 0xe6e0, 0xbb3c, 0xe637, 0xddfb, 0x0, 0x0);
        gbc.writeMem(0x71de, { 0x31, 0x7d, 0x66 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x667d, gbc.sp());
        EXPECT(0x71e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0176
        gbc.setState(0xec75, 0x5a28, 0x16a0, 0x332f, 0xd8bb, 0xa507, 0x0, 0x0);
        gbc.writeMem(0xec75, { 0x31, 0x63, 0xf0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf063, gbc.sp());
        EXPECT(0xec78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xec75));
        EXPECT(0x63, gbc.readMem(0xec76));
        EXPECT(0xf0, gbc.readMem(0xec77));
        // 31 0177
        gbc.setState(0xeb6e, 0xb679, 0xd360, 0x838c, 0x241, 0x212d, 0x0, 0x1);
        gbc.writeMem(0xeb6e, { 0x31, 0x8b, 0xe5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe58b, gbc.sp());
        EXPECT(0xeb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xeb6e));
        EXPECT(0x8b, gbc.readMem(0xeb6f));
        EXPECT(0xe5, gbc.readMem(0xeb70));
        // 31 0178
        gbc.setState(0x9590, 0x931f, 0x120, 0x1dae, 0xb53d, 0xcd61, 0x0, 0x0);
        gbc.writeMem(0x9590, { 0x31, 0x4a, 0x8c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8c4a, gbc.sp());
        EXPECT(0x9593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9590));
        EXPECT(0x4a, gbc.readMem(0x9591));
        EXPECT(0x8c, gbc.readMem(0x9592));
        // 31 0179
        gbc.setState(0xcab0, 0xd3e5, 0x18e0, 0xcf0d, 0x54d4, 0xb002, 0x1, 0x1);
        gbc.writeMem(0xcab0, { 0x31, 0x8f, 0xe4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe48f, gbc.sp());
        EXPECT(0xcab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcab0));
        EXPECT(0x8f, gbc.readMem(0xcab1));
        EXPECT(0xe4, gbc.readMem(0xcab2));
        // 31 017A
        gbc.setState(0x96aa, 0x259f, 0x7340, 0x1193, 0x994d, 0xda05, 0x1, 0x0);
        gbc.writeMem(0x96aa, { 0x31, 0xbb, 0x3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3bb, gbc.sp());
        EXPECT(0x96ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x96aa));
        EXPECT(0xbb, gbc.readMem(0x96ab));
        EXPECT(0x3, gbc.readMem(0x96ac));
        // 31 017B
        gbc.setState(0x581, 0xb4a0, 0xbf60, 0xb532, 0x37fa, 0xd20b, 0x0, 0x1);
        gbc.writeMem(0x581, { 0x31, 0x28, 0xd9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd928, gbc.sp());
        EXPECT(0x584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 017D
        gbc.setState(0xe351, 0x7b19, 0x83f0, 0xaf7b, 0xe6ca, 0xe803, 0x0, 0x0);
        gbc.writeMem(0xe351, { 0x31, 0x7d, 0x42 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x427d, gbc.sp());
        EXPECT(0xe354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe351));
        EXPECT(0x7d, gbc.readMem(0xe352));
        EXPECT(0x42, gbc.readMem(0xe353));
        // 31 017E
        gbc.setState(0xada4, 0x152, 0xe70, 0xda41, 0x2053, 0x8b49, 0x1, 0x0);
        gbc.writeMem(0xada4, { 0x31, 0xc1, 0x4a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4ac1, gbc.sp());
        EXPECT(0xada7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xada4));
        EXPECT(0xc1, gbc.readMem(0xada5));
        EXPECT(0x4a, gbc.readMem(0xada6));
        // 31 017F
        gbc.setState(0x3dff, 0xfdc7, 0xa6f0, 0xd0e8, 0x377c, 0xf80e, 0x0, 0x1);
        gbc.writeMem(0x3dff, { 0x31, 0x43, 0x6d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6d43, gbc.sp());
        EXPECT(0x3e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0180
        gbc.setState(0x6dd2, 0x7eb1, 0xa6d0, 0x33, 0xf873, 0xbd14, 0x0, 0x1);
        gbc.writeMem(0x6dd2, { 0x31, 0x5e, 0x56 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x565e, gbc.sp());
        EXPECT(0x6dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0181
        gbc.setState(0x2d4f, 0xfcaa, 0x7c40, 0x1b8b, 0x806d, 0xdea7, 0x0, 0x1);
        gbc.writeMem(0x2d4f, { 0x31, 0xe6, 0x30 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x30e6, gbc.sp());
        EXPECT(0x2d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0183
        gbc.setState(0x1ac2, 0x4d28, 0x5ab0, 0x3142, 0x6b7b, 0xc80b, 0x0, 0x0);
        gbc.writeMem(0x1ac2, { 0x31, 0xda, 0x23 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x23da, gbc.sp());
        EXPECT(0x1ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0184
        gbc.setState(0x29a9, 0x9efe, 0xd060, 0xce40, 0x93c4, 0x18fc, 0x0, 0x0);
        gbc.writeMem(0x29a9, { 0x31, 0x9b, 0x8a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8a9b, gbc.sp());
        EXPECT(0x29ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0185
        gbc.setState(0x72c7, 0x455a, 0x160, 0x47c6, 0xc113, 0x84e0, 0x0, 0x1);
        gbc.writeMem(0x72c7, { 0x31, 0x8f, 0x4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x48f, gbc.sp());
        EXPECT(0x72ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0186
        gbc.setState(0xa3c9, 0xf67a, 0x7c90, 0x7e3f, 0xd188, 0x7c92, 0x0, 0x0);
        gbc.writeMem(0xa3c9, { 0x31, 0xd5, 0x6b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6bd5, gbc.sp());
        EXPECT(0xa3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa3c9));
        EXPECT(0xd5, gbc.readMem(0xa3ca));
        EXPECT(0x6b, gbc.readMem(0xa3cb));
        // 31 0187
        gbc.setState(0x9202, 0xc6fe, 0x6500, 0xa622, 0x9ea, 0x7f05, 0x0, 0x1);
        gbc.writeMem(0x9202, { 0x31, 0x34, 0x14 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1434, gbc.sp());
        EXPECT(0x9205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9202));
        EXPECT(0x34, gbc.readMem(0x9203));
        EXPECT(0x14, gbc.readMem(0x9204));
        // 31 0188
        gbc.setState(0x5fb8, 0x26ff, 0xee0, 0x5cd8, 0x776e, 0x8ebf, 0x0, 0x1);
        gbc.writeMem(0x5fb8, { 0x31, 0x6b, 0xab });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xab6b, gbc.sp());
        EXPECT(0x5fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0189
        gbc.setState(0xbf93, 0x91ff, 0x8fe0, 0x6ed2, 0xd6e5, 0x620c, 0x0, 0x1);
        gbc.writeMem(0xbf93, { 0x31, 0xb9, 0x66 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x66b9, gbc.sp());
        EXPECT(0xbf96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbf93));
        EXPECT(0xb9, gbc.readMem(0xbf94));
        EXPECT(0x66, gbc.readMem(0xbf95));
        // 31 018A
        gbc.setState(0x9f5b, 0xc493, 0xa530, 0xc939, 0x8146, 0x1dd1, 0x1, 0x0);
        gbc.writeMem(0x9f5b, { 0x31, 0xf6, 0x30 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x30f6, gbc.sp());
        EXPECT(0x9f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9f5b));
        EXPECT(0xf6, gbc.readMem(0x9f5c));
        EXPECT(0x30, gbc.readMem(0x9f5d));
        // 31 018B
        gbc.setState(0x58b4, 0x6b67, 0xe9e0, 0xa074, 0x4801, 0xc89d, 0x1, 0x0);
        gbc.writeMem(0x58b4, { 0x31, 0x30, 0xd5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd530, gbc.sp());
        EXPECT(0x58b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 018C
        gbc.setState(0x4d20, 0xa50b, 0x5ba0, 0xbeb9, 0x581f, 0x7faf, 0x1, 0x0);
        gbc.writeMem(0x4d20, { 0x31, 0x4, 0x76 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7604, gbc.sp());
        EXPECT(0x4d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 018D
        gbc.setState(0x309b, 0x4b2c, 0x29d0, 0xd046, 0x9301, 0x4bc0, 0x0, 0x0);
        gbc.writeMem(0x309b, { 0x31, 0xd5, 0x2f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2fd5, gbc.sp());
        EXPECT(0x309e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 018E
        gbc.setState(0x6443, 0x726f, 0x8030, 0x7f37, 0x204b, 0x8382, 0x1, 0x0);
        gbc.writeMem(0x6443, { 0x31, 0xca, 0x19 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x19ca, gbc.sp());
        EXPECT(0x6446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 018F
        gbc.setState(0xaa83, 0x2144, 0x9c70, 0xe09, 0xd178, 0x71c, 0x0, 0x1);
        gbc.writeMem(0xaa83, { 0x31, 0x9, 0xc1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc109, gbc.sp());
        EXPECT(0xaa86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaa83));
        EXPECT(0x9, gbc.readMem(0xaa84));
        EXPECT(0xc1, gbc.readMem(0xaa85));
        // 31 0190
        gbc.setState(0x26a9, 0xf9c2, 0xd0b0, 0x5e9e, 0x91f3, 0xcab, 0x1, 0x0);
        gbc.writeMem(0x26a9, { 0x31, 0x3, 0xf });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf03, gbc.sp());
        EXPECT(0x26ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0191
        gbc.setState(0x9510, 0xd6c6, 0x81b0, 0x883d, 0x253e, 0x71e3, 0x0, 0x0);
        gbc.writeMem(0x9510, { 0x31, 0x14, 0xdf });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdf14, gbc.sp());
        EXPECT(0x9513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9510));
        EXPECT(0x14, gbc.readMem(0x9511));
        EXPECT(0xdf, gbc.readMem(0x9512));
        // 31 0193
        gbc.setState(0x9ad3, 0xec7e, 0xb0a0, 0x9dd3, 0xbc81, 0x1b0b, 0x0, 0x0);
        gbc.writeMem(0x9ad3, { 0x31, 0xa9, 0x85 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x85a9, gbc.sp());
        EXPECT(0x9ad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9ad3));
        EXPECT(0xa9, gbc.readMem(0x9ad4));
        EXPECT(0x85, gbc.readMem(0x9ad5));
        // 31 0194
        gbc.setState(0x17c6, 0x6388, 0x2720, 0x83c8, 0xa4df, 0xb119, 0x1, 0x1);
        gbc.writeMem(0x17c6, { 0x31, 0x50, 0x65 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6550, gbc.sp());
        EXPECT(0x17c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0195
        gbc.setState(0x3540, 0x2980, 0xdab0, 0xfa23, 0x8524, 0xd52f, 0x0, 0x0);
        gbc.writeMem(0x3540, { 0x31, 0xb, 0x5b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5b0b, gbc.sp());
        EXPECT(0x3543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0196
        gbc.setState(0x63b3, 0x8478, 0x7e20, 0xb601, 0x840c, 0x66f4, 0x1, 0x1);
        gbc.writeMem(0x63b3, { 0x31, 0x1c, 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x941c, gbc.sp());
        EXPECT(0x63b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0197
        gbc.setState(0x80ff, 0x118e, 0x7ad0, 0x19e4, 0x370b, 0x3696, 0x0, 0x0);
        gbc.writeMem(0x80ff, { 0x31, 0xea, 0x3c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3cea, gbc.sp());
        EXPECT(0x8102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x80ff));
        EXPECT(0xea, gbc.readMem(0x8100));
        EXPECT(0x3c, gbc.readMem(0x8101));
        // 31 0198
        gbc.setState(0xfae, 0x3e6b, 0x9710, 0x2ae0, 0x2a6d, 0x90fc, 0x0, 0x1);
        gbc.writeMem(0xfae, { 0x31, 0x81, 0x41 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4181, gbc.sp());
        EXPECT(0xfb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0199
        gbc.setState(0x4a5c, 0xa5f0, 0xb090, 0xa4ca, 0xee6f, 0x844, 0x1, 0x1);
        gbc.writeMem(0x4a5c, { 0x31, 0x56, 0xfd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfd56, gbc.sp());
        EXPECT(0x4a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 019A
        gbc.setState(0x7015, 0xae9a, 0xf790, 0x40d9, 0x978d, 0xbef0, 0x0, 0x0);
        gbc.writeMem(0x7015, { 0x31, 0x2c, 0x64 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x642c, gbc.sp());
        EXPECT(0x7018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 019B
        gbc.setState(0xe703, 0xdc5, 0x1e70, 0xca11, 0xd60f, 0x34fe, 0x0, 0x1);
        gbc.writeMem(0xe703, { 0x31, 0x38, 0xf5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf538, gbc.sp());
        EXPECT(0xe706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe703));
        EXPECT(0x38, gbc.readMem(0xe704));
        EXPECT(0xf5, gbc.readMem(0xe705));
        // 31 019C
        gbc.setState(0x94b, 0xbc5c, 0xcce0, 0x8608, 0x5d66, 0x4c24, 0x0, 0x1);
        gbc.writeMem(0x94b, { 0x31, 0xdf, 0x15 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x15df, gbc.sp());
        EXPECT(0x94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 019D
        gbc.setState(0xd6e7, 0x6868, 0xace0, 0xcc42, 0x7b88, 0x5bfb, 0x0, 0x0);
        gbc.writeMem(0xd6e7, { 0x31, 0xea, 0x6d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6dea, gbc.sp());
        EXPECT(0xd6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd6e7));
        EXPECT(0xea, gbc.readMem(0xd6e8));
        EXPECT(0x6d, gbc.readMem(0xd6e9));
        // 31 019E
        gbc.setState(0xa7f0, 0xdc5b, 0x4f70, 0x6d29, 0xf7d6, 0xa64f, 0x0, 0x0);
        gbc.writeMem(0xa7f0, { 0x31, 0x1b, 0xe5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe51b, gbc.sp());
        EXPECT(0xa7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa7f0));
        EXPECT(0x1b, gbc.readMem(0xa7f1));
        EXPECT(0xe5, gbc.readMem(0xa7f2));
        // 31 019F
        gbc.setState(0xcb71, 0x41ce, 0x140, 0xcea6, 0x9064, 0x597a, 0x1, 0x1);
        gbc.writeMem(0xcb71, { 0x31, 0x88, 0x77 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7788, gbc.sp());
        EXPECT(0xcb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcb71));
        EXPECT(0x88, gbc.readMem(0xcb72));
        EXPECT(0x77, gbc.readMem(0xcb73));
        // 31 01A0
        gbc.setState(0xd8db, 0xe06a, 0x3dd0, 0xfa30, 0xa3aa, 0x4017, 0x0, 0x1);
        gbc.writeMem(0xd8db, { 0x31, 0x9d, 0x47 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x479d, gbc.sp());
        EXPECT(0xd8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd8db));
        EXPECT(0x9d, gbc.readMem(0xd8dc));
        EXPECT(0x47, gbc.readMem(0xd8dd));
        // 31 01A1
        gbc.setState(0x3320, 0x67da, 0x24e0, 0xbbd5, 0x4d60, 0xcee7, 0x0, 0x0);
        gbc.writeMem(0x3320, { 0x31, 0xab, 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x64ab, gbc.sp());
        EXPECT(0x3323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01A2
        gbc.setState(0x487, 0xb506, 0xf9a0, 0xd978, 0x175d, 0x14f8, 0x1, 0x1);
        gbc.writeMem(0x487, { 0x31, 0xac, 0xe0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe0ac, gbc.sp());
        EXPECT(0x48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01A3
        gbc.setState(0x9767, 0x2da8, 0xfc60, 0xe51c, 0xef02, 0x74d8, 0x1, 0x0);
        gbc.writeMem(0x9767, { 0x31, 0x62, 0x12 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1262, gbc.sp());
        EXPECT(0x976a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9767));
        EXPECT(0x62, gbc.readMem(0x9768));
        EXPECT(0x12, gbc.readMem(0x9769));
        // 31 01A4
        gbc.setState(0xdbd0, 0x516a, 0xa660, 0x92f1, 0xa32f, 0x1c94, 0x0, 0x1);
        gbc.writeMem(0xdbd0, { 0x31, 0x4e, 0x42 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x424e, gbc.sp());
        EXPECT(0xdbd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdbd0));
        EXPECT(0x4e, gbc.readMem(0xdbd1));
        EXPECT(0x42, gbc.readMem(0xdbd2));
        // 31 01A5
        gbc.setState(0x3152, 0x442e, 0x78a0, 0x2924, 0xc4b0, 0x68e6, 0x1, 0x0);
        gbc.writeMem(0x3152, { 0x31, 0xba, 0x7f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7fba, gbc.sp());
        EXPECT(0x3155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01A7
        gbc.setState(0x8314, 0x98e7, 0x40a0, 0x9665, 0x6ab7, 0x367a, 0x0, 0x0);
        gbc.writeMem(0x8314, { 0x31, 0x9b, 0xda });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xda9b, gbc.sp());
        EXPECT(0x8317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8314));
        EXPECT(0x9b, gbc.readMem(0x8315));
        EXPECT(0xda, gbc.readMem(0x8316));
        // 31 01A8
        gbc.setState(0xd121, 0xe5aa, 0xea40, 0xb751, 0xfac9, 0xc03a, 0x1, 0x0);
        gbc.writeMem(0xd121, { 0x31, 0x1b, 0x13 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x131b, gbc.sp());
        EXPECT(0xd124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd121));
        EXPECT(0x1b, gbc.readMem(0xd122));
        EXPECT(0x13, gbc.readMem(0xd123));
        // 31 01A9
        gbc.setState(0xa0fe, 0x4b0e, 0x8310, 0x1bee, 0xe83, 0x6bbf, 0x0, 0x0);
        gbc.writeMem(0xa0fe, { 0x31, 0x7, 0x94 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9407, gbc.sp());
        EXPECT(0xa101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa0fe));
        EXPECT(0x7, gbc.readMem(0xa0ff));
        EXPECT(0x94, gbc.readMem(0xa100));
        // 31 01AA
        gbc.setState(0xae93, 0xa63a, 0x1200, 0xd67c, 0x8e54, 0xe72f, 0x0, 0x0);
        gbc.writeMem(0xae93, { 0x31, 0x1c, 0x57 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x571c, gbc.sp());
        EXPECT(0xae96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xae93));
        EXPECT(0x1c, gbc.readMem(0xae94));
        EXPECT(0x57, gbc.readMem(0xae95));
        // 31 01AB
        gbc.setState(0x6fed, 0x7ae2, 0x9050, 0x57e4, 0xf545, 0x92ce, 0x0, 0x1);
        gbc.writeMem(0x6fed, { 0x31, 0x25, 0xfe });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfe25, gbc.sp());
        EXPECT(0x6ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01AC
        gbc.setState(0xc23c, 0x31b0, 0x4040, 0x552f, 0x3764, 0xc56d, 0x0, 0x0);
        gbc.writeMem(0xc23c, { 0x31, 0x5a, 0xf4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf45a, gbc.sp());
        EXPECT(0xc23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc23c));
        EXPECT(0x5a, gbc.readMem(0xc23d));
        EXPECT(0xf4, gbc.readMem(0xc23e));
        // 31 01AD
        gbc.setState(0x38e3, 0xa21e, 0x29d0, 0xa84b, 0xb896, 0xc383, 0x1, 0x1);
        gbc.writeMem(0x38e3, { 0x31, 0x1b, 0x7c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7c1b, gbc.sp());
        EXPECT(0x38e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01AE
        gbc.setState(0x2354, 0xd846, 0x130, 0x45ed, 0x254f, 0xe771, 0x1, 0x1);
        gbc.writeMem(0x2354, { 0x31, 0x8d, 0xd6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd68d, gbc.sp());
        EXPECT(0x2357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01AF
        gbc.setState(0x59a6, 0x9947, 0xcc00, 0xd03e, 0x5b09, 0x77de, 0x0, 0x1);
        gbc.writeMem(0x59a6, { 0x31, 0x89, 0xda });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xda89, gbc.sp());
        EXPECT(0x59a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01B0
        gbc.setState(0x8cd2, 0x6a3a, 0x4590, 0xc2c8, 0xa4f, 0xbd42, 0x1, 0x1);
        gbc.writeMem(0x8cd2, { 0x31, 0x38, 0x8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x838, gbc.sp());
        EXPECT(0x8cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8cd2));
        EXPECT(0x38, gbc.readMem(0x8cd3));
        EXPECT(0x8, gbc.readMem(0x8cd4));
        // 31 01B1
        gbc.setState(0x488c, 0xf59c, 0x2ef0, 0xd1a9, 0x576d, 0xd29a, 0x0, 0x0);
        gbc.writeMem(0x488c, { 0x31, 0x76, 0x53 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5376, gbc.sp());
        EXPECT(0x488f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01B2
        gbc.setState(0x8e09, 0x8cd6, 0x2710, 0x3449, 0xbb8d, 0x7a5d, 0x1, 0x0);
        gbc.writeMem(0x8e09, { 0x31, 0x7c, 0xcb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcb7c, gbc.sp());
        EXPECT(0x8e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8e09));
        EXPECT(0x7c, gbc.readMem(0x8e0a));
        EXPECT(0xcb, gbc.readMem(0x8e0b));
        // 31 01B3
        gbc.setState(0x4b64, 0x30b6, 0x2230, 0x6ca2, 0xadb5, 0xce3, 0x1, 0x0);
        gbc.writeMem(0x4b64, { 0x31, 0x5c, 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x535c, gbc.sp());
        EXPECT(0x4b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01B4
        gbc.setState(0x29c0, 0x9dfc, 0x43a0, 0x44b5, 0xf7bd, 0xa219, 0x1, 0x0);
        gbc.writeMem(0x29c0, { 0x31, 0x49, 0xce });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xce49, gbc.sp());
        EXPECT(0x29c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01B5
        gbc.setState(0xdb75, 0x2f43, 0x6580, 0xde64, 0xedaa, 0x57a1, 0x1, 0x1);
        gbc.writeMem(0xdb75, { 0x31, 0xf, 0x16 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x160f, gbc.sp());
        EXPECT(0xdb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdb75));
        EXPECT(0xf, gbc.readMem(0xdb76));
        EXPECT(0x16, gbc.readMem(0xdb77));
        // 31 01B6
        gbc.setState(0x7c21, 0xacbe, 0x2080, 0x235d, 0x579e, 0x5ec1, 0x1, 0x0);
        gbc.writeMem(0x7c21, { 0x31, 0x8e, 0xe9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe98e, gbc.sp());
        EXPECT(0x7c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01B7
        gbc.setState(0xd5f8, 0xc8c2, 0xb330, 0x99b6, 0x50bb, 0x857a, 0x1, 0x1);
        gbc.writeMem(0xd5f8, { 0x31, 0x42, 0x30 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3042, gbc.sp());
        EXPECT(0xd5fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd5f8));
        EXPECT(0x42, gbc.readMem(0xd5f9));
        EXPECT(0x30, gbc.readMem(0xd5fa));
        // 31 01B8
        gbc.setState(0xe0e1, 0x2167, 0x49c0, 0x5f59, 0xc095, 0x5f92, 0x0, 0x1);
        gbc.writeMem(0xe0e1, { 0x31, 0x2e, 0x69 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x692e, gbc.sp());
        EXPECT(0xe0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe0e1));
        EXPECT(0x2e, gbc.readMem(0xe0e2));
        EXPECT(0x69, gbc.readMem(0xe0e3));
        // 31 01B9
        gbc.setState(0x42ab, 0x849b, 0xb3d0, 0x88b9, 0x3085, 0x6e52, 0x1, 0x0);
        gbc.writeMem(0x42ab, { 0x31, 0x61, 0x81 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8161, gbc.sp());
        EXPECT(0x42ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01BA
        gbc.setState(0x5e39, 0xe575, 0x2e90, 0xdacd, 0x7f11, 0x7d30, 0x0, 0x0);
        gbc.writeMem(0x5e39, { 0x31, 0x20, 0xcb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcb20, gbc.sp());
        EXPECT(0x5e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01BB
        gbc.setState(0x654e, 0x28d7, 0xb1b0, 0x77ba, 0x22f7, 0xb6e9, 0x1, 0x0);
        gbc.writeMem(0x654e, { 0x31, 0xda, 0x52 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x52da, gbc.sp());
        EXPECT(0x6551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01BC
        gbc.setState(0xeafd, 0x7294, 0x54b0, 0x698, 0x801d, 0xed77, 0x1, 0x1);
        gbc.writeMem(0xeafd, { 0x31, 0xb3, 0xeb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xebb3, gbc.sp());
        EXPECT(0xeb00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xeafd));
        EXPECT(0xb3, gbc.readMem(0xeafe));
        EXPECT(0xeb, gbc.readMem(0xeaff));
        // 31 01BD
        gbc.setState(0x988, 0x712d, 0xd3f0, 0xbf74, 0x2150, 0x1230, 0x1, 0x0);
        gbc.writeMem(0x988, { 0x31, 0xd9, 0x4a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4ad9, gbc.sp());
        EXPECT(0x98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01BE
        gbc.setState(0xd1bf, 0xe4c7, 0x6d30, 0xcc4c, 0xc38c, 0x6925, 0x0, 0x0);
        gbc.writeMem(0xd1bf, { 0x31, 0x67, 0x2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x267, gbc.sp());
        EXPECT(0xd1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd1bf));
        EXPECT(0x67, gbc.readMem(0xd1c0));
        EXPECT(0x2, gbc.readMem(0xd1c1));
        // 31 01BF
        gbc.setState(0xaa5b, 0x4cd6, 0x4b40, 0x6c15, 0xcaaa, 0x9c0, 0x1, 0x0);
        gbc.writeMem(0xaa5b, { 0x31, 0x4f, 0x14 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x144f, gbc.sp());
        EXPECT(0xaa5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaa5b));
        EXPECT(0x4f, gbc.readMem(0xaa5c));
        EXPECT(0x14, gbc.readMem(0xaa5d));
        // 31 01C0
        gbc.setState(0x7ba5, 0x8de4, 0x9e10, 0x3cf6, 0x5aec, 0xc1db, 0x0, 0x0);
        gbc.writeMem(0x7ba5, { 0x31, 0xf, 0x39 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x390f, gbc.sp());
        EXPECT(0x7ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01C1
        gbc.setState(0x51a5, 0x9b5e, 0xce90, 0xfc3, 0x88f6, 0x6124, 0x0, 0x0);
        gbc.writeMem(0x51a5, { 0x31, 0x5b, 0xc3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc35b, gbc.sp());
        EXPECT(0x51a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01C2
        gbc.setState(0x8e7e, 0x5ba, 0x98b0, 0x940d, 0xa8f2, 0x17f0, 0x0, 0x1);
        gbc.writeMem(0x8e7e, { 0x31, 0x2, 0x42 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4202, gbc.sp());
        EXPECT(0x8e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8e7e));
        EXPECT(0x2, gbc.readMem(0x8e7f));
        EXPECT(0x42, gbc.readMem(0x8e80));
        // 31 01C3
        gbc.setState(0x6dc, 0x44aa, 0x1490, 0xeda4, 0x9c27, 0xcdc5, 0x1, 0x1);
        gbc.writeMem(0x6dc, { 0x31, 0x48, 0xf6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf648, gbc.sp());
        EXPECT(0x6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01C4
        gbc.setState(0x9e7d, 0x5090, 0x1500, 0xc713, 0x3491, 0xa601, 0x0, 0x1);
        gbc.writeMem(0x9e7d, { 0x31, 0x52, 0xa6 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa652, gbc.sp());
        EXPECT(0x9e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9e7d));
        EXPECT(0x52, gbc.readMem(0x9e7e));
        EXPECT(0xa6, gbc.readMem(0x9e7f));
        // 31 01C5
        gbc.setState(0xdc39, 0xd07e, 0x7bb0, 0xac15, 0xff86, 0x97e1, 0x0, 0x1);
        gbc.writeMem(0xdc39, { 0x31, 0x7b, 0xd8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd87b, gbc.sp());
        EXPECT(0xdc3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdc39));
        EXPECT(0x7b, gbc.readMem(0xdc3a));
        EXPECT(0xd8, gbc.readMem(0xdc3b));
        // 31 01C6
        gbc.setState(0x1003, 0xc314, 0xb260, 0x834f, 0x9ea9, 0x2d54, 0x0, 0x1);
        gbc.writeMem(0x1003, { 0x31, 0x2d, 0x6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x62d, gbc.sp());
        EXPECT(0x1006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01C7
        gbc.setState(0x83af, 0x15a6, 0xe0f0, 0x5197, 0x3da0, 0x80b3, 0x1, 0x0);
        gbc.writeMem(0x83af, { 0x31, 0x74, 0x78 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7874, gbc.sp());
        EXPECT(0x83b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x83af));
        EXPECT(0x74, gbc.readMem(0x83b0));
        EXPECT(0x78, gbc.readMem(0x83b1));
        // 31 01C8
        gbc.setState(0x3467, 0x1771, 0x24d0, 0x1348, 0xd3d0, 0xe656, 0x1, 0x0);
        gbc.writeMem(0x3467, { 0x31, 0x5a, 0x43 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x435a, gbc.sp());
        EXPECT(0x346a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01C9
        gbc.setState(0x1e1e, 0xf9b5, 0x860, 0x4611, 0x1e60, 0x2e11, 0x1, 0x1);
        gbc.writeMem(0x1e1e, { 0x31, 0x3f, 0xd4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd43f, gbc.sp());
        EXPECT(0x1e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01CA
        gbc.setState(0x2e5e, 0x7edb, 0xdf0, 0x8d46, 0xa829, 0xb432, 0x0, 0x1);
        gbc.writeMem(0x2e5e, { 0x31, 0xea, 0xc0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc0ea, gbc.sp());
        EXPECT(0x2e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01CB
        gbc.setState(0xa982, 0x1861, 0x3050, 0xbbfe, 0x8991, 0x90b5, 0x1, 0x1);
        gbc.writeMem(0xa982, { 0x31, 0x79, 0xd8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd879, gbc.sp());
        EXPECT(0xa985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa982));
        EXPECT(0x79, gbc.readMem(0xa983));
        EXPECT(0xd8, gbc.readMem(0xa984));
        // 31 01CC
        gbc.setState(0x28aa, 0xb707, 0x4510, 0xa628, 0x1c59, 0xfb63, 0x0, 0x0);
        gbc.writeMem(0x28aa, { 0x31, 0x66, 0x4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x466, gbc.sp());
        EXPECT(0x28ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01CD
        gbc.setState(0xce76, 0x3a87, 0x7a70, 0xd3f5, 0x1775, 0x20db, 0x1, 0x1);
        gbc.writeMem(0xce76, { 0x31, 0xd, 0x31 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x310d, gbc.sp());
        EXPECT(0xce79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xce76));
        EXPECT(0xd, gbc.readMem(0xce77));
        EXPECT(0x31, gbc.readMem(0xce78));
        // 31 01CE
        gbc.setState(0x17c0, 0x90d3, 0x6a00, 0xdf97, 0xc170, 0x4f5a, 0x1, 0x1);
        gbc.writeMem(0x17c0, { 0x31, 0xf3, 0x44 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x44f3, gbc.sp());
        EXPECT(0x17c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01CF
        gbc.setState(0x95cf, 0x1a9e, 0x9090, 0x8df0, 0x5af1, 0x2cf4, 0x1, 0x0);
        gbc.writeMem(0x95cf, { 0x31, 0xda, 0x9b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9bda, gbc.sp());
        EXPECT(0x95d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x95cf));
        EXPECT(0xda, gbc.readMem(0x95d0));
        EXPECT(0x9b, gbc.readMem(0x95d1));
        // 31 01D0
        gbc.setState(0xbab4, 0x80a7, 0xd120, 0x582d, 0x7437, 0x2979, 0x1, 0x1);
        gbc.writeMem(0xbab4, { 0x31, 0xc1, 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6ac1, gbc.sp());
        EXPECT(0xbab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbab4));
        EXPECT(0xc1, gbc.readMem(0xbab5));
        EXPECT(0x6a, gbc.readMem(0xbab6));
        // 31 01D1
        gbc.setState(0xef42, 0xbcf0, 0x8380, 0x4c6c, 0xd12, 0x86e3, 0x0, 0x1);
        gbc.writeMem(0xef42, { 0x31, 0xd0, 0x1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1d0, gbc.sp());
        EXPECT(0xef45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xef42));
        EXPECT(0xd0, gbc.readMem(0xef43));
        EXPECT(0x1, gbc.readMem(0xef44));
        // 31 01D2
        gbc.setState(0x3b89, 0xa683, 0x9520, 0xa421, 0xf62e, 0xc568, 0x0, 0x0);
        gbc.writeMem(0x3b89, { 0x31, 0x28, 0x7b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7b28, gbc.sp());
        EXPECT(0x3b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01D4
        gbc.setState(0x8420, 0xe1b7, 0x5a00, 0x8d2a, 0x16dd, 0xb668, 0x1, 0x1);
        gbc.writeMem(0x8420, { 0x31, 0x8b, 0x38 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x388b, gbc.sp());
        EXPECT(0x8423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8420));
        EXPECT(0x8b, gbc.readMem(0x8421));
        EXPECT(0x38, gbc.readMem(0x8422));
        // 31 01D5
        gbc.setState(0xc16c, 0x4707, 0x2900, 0x89a0, 0x8a13, 0xad8, 0x0, 0x0);
        gbc.writeMem(0xc16c, { 0x31, 0x9f, 0x97 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x979f, gbc.sp());
        EXPECT(0xc16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc16c));
        EXPECT(0x9f, gbc.readMem(0xc16d));
        EXPECT(0x97, gbc.readMem(0xc16e));
        // 31 01D6
        gbc.setState(0xe487, 0xba7d, 0x6f50, 0x22eb, 0x1ea9, 0xe00, 0x1, 0x1);
        gbc.writeMem(0xe487, { 0x31, 0x12, 0x92 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9212, gbc.sp());
        EXPECT(0xe48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe487));
        EXPECT(0x12, gbc.readMem(0xe488));
        EXPECT(0x92, gbc.readMem(0xe489));
        // 31 01D7
        gbc.setState(0x680b, 0x4356, 0x3530, 0xdc45, 0x7d73, 0xc11d, 0x1, 0x0);
        gbc.writeMem(0x680b, { 0x31, 0x3b, 0x8c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8c3b, gbc.sp());
        EXPECT(0x680e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01D8
        gbc.setState(0x56f7, 0xbfdb, 0xc760, 0x3e3b, 0x606b, 0x3712, 0x0, 0x0);
        gbc.writeMem(0x56f7, { 0x31, 0x48, 0x94 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9448, gbc.sp());
        EXPECT(0x56fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01D9
        gbc.setState(0x88d1, 0x2481, 0x96f0, 0xbe09, 0xb53d, 0xac12, 0x1, 0x0);
        gbc.writeMem(0x88d1, { 0x31, 0xad, 0xd });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdad, gbc.sp());
        EXPECT(0x88d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x88d1));
        EXPECT(0xad, gbc.readMem(0x88d2));
        EXPECT(0xd, gbc.readMem(0x88d3));
        // 31 01DB
        gbc.setState(0x8856, 0xcf31, 0x8920, 0x378c, 0xab46, 0xe2eb, 0x0, 0x0);
        gbc.writeMem(0x8856, { 0x31, 0x9f, 0xb6 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb69f, gbc.sp());
        EXPECT(0x8859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8856));
        EXPECT(0x9f, gbc.readMem(0x8857));
        EXPECT(0xb6, gbc.readMem(0x8858));
        // 31 01DC
        gbc.setState(0x853d, 0x4e84, 0xabe0, 0xbd56, 0x7836, 0x836a, 0x0, 0x1);
        gbc.writeMem(0x853d, { 0x31, 0x30, 0x59 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5930, gbc.sp());
        EXPECT(0x8540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x853d));
        EXPECT(0x30, gbc.readMem(0x853e));
        EXPECT(0x59, gbc.readMem(0x853f));
        // 31 01DD
        gbc.setState(0x7b39, 0x7099, 0x7520, 0x8567, 0x8c3, 0x5f94, 0x0, 0x0);
        gbc.writeMem(0x7b39, { 0x31, 0x80, 0x21 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2180, gbc.sp());
        EXPECT(0x7b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01DE
        gbc.setState(0x5eea, 0x64b5, 0x1090, 0x48c3, 0x70f0, 0x1aa, 0x0, 0x1);
        gbc.writeMem(0x5eea, { 0x31, 0xc0, 0xcd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcdc0, gbc.sp());
        EXPECT(0x5eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01DF
        gbc.setState(0x3112, 0x34b6, 0x3890, 0x1527, 0x3c09, 0xd5ac, 0x0, 0x0);
        gbc.writeMem(0x3112, { 0x31, 0x48, 0x28 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2848, gbc.sp());
        EXPECT(0x3115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01E0
        gbc.setState(0xc40a, 0xd4a0, 0x7e90, 0x3d2, 0xd105, 0xab44, 0x1, 0x1);
        gbc.writeMem(0xc40a, { 0x31, 0x70, 0x7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x770, gbc.sp());
        EXPECT(0xc40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc40a));
        EXPECT(0x70, gbc.readMem(0xc40b));
        EXPECT(0x7, gbc.readMem(0xc40c));
        // 31 01E2
        gbc.setState(0xec19, 0x75be, 0xfd70, 0x43d1, 0x5ede, 0x509f, 0x0, 0x1);
        gbc.writeMem(0xec19, { 0x31, 0x30, 0x87 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8730, gbc.sp());
        EXPECT(0xec1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xec19));
        EXPECT(0x30, gbc.readMem(0xec1a));
        EXPECT(0x87, gbc.readMem(0xec1b));
        // 31 01E3
        gbc.setState(0x65cf, 0xc914, 0xc630, 0xb27e, 0xe569, 0xda7f, 0x0, 0x0);
        gbc.writeMem(0x65cf, { 0x31, 0x22, 0x9c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9c22, gbc.sp());
        EXPECT(0x65d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01E4
        gbc.setState(0x280b, 0x18b1, 0xb40, 0x7378, 0xf81e, 0xf009, 0x0, 0x1);
        gbc.writeMem(0x280b, { 0x31, 0x59, 0x38 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3859, gbc.sp());
        EXPECT(0x280e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01E5
        gbc.setState(0xe481, 0x30bf, 0x8650, 0xd828, 0x4c9, 0x148f, 0x0, 0x0);
        gbc.writeMem(0xe481, { 0x31, 0x2d, 0xde });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xde2d, gbc.sp());
        EXPECT(0xe484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe481));
        EXPECT(0x2d, gbc.readMem(0xe482));
        EXPECT(0xde, gbc.readMem(0xe483));
        // 31 01E6
        gbc.setState(0xe088, 0x89c9, 0xfa40, 0xef9d, 0x3638, 0x8e92, 0x1, 0x0);
        gbc.writeMem(0xe088, { 0x31, 0xe2, 0x5c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5ce2, gbc.sp());
        EXPECT(0xe08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe088));
        EXPECT(0xe2, gbc.readMem(0xe089));
        EXPECT(0x5c, gbc.readMem(0xe08a));
        // 31 01E7
        gbc.setState(0x2ade, 0x12d6, 0xb2c0, 0x4d, 0x8af5, 0x330, 0x0, 0x1);
        gbc.writeMem(0x2ade, { 0x31, 0x2a, 0xfc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfc2a, gbc.sp());
        EXPECT(0x2ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01E8
        gbc.setState(0xd570, 0xc8cb, 0xd310, 0x8eec, 0x5278, 0x2522, 0x1, 0x1);
        gbc.writeMem(0xd570, { 0x31, 0xb5, 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3bb5, gbc.sp());
        EXPECT(0xd573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd570));
        EXPECT(0xb5, gbc.readMem(0xd571));
        EXPECT(0x3b, gbc.readMem(0xd572));
        // 31 01E9
        gbc.setState(0xc91, 0x5b3c, 0x6450, 0xfb1d, 0xcff3, 0x757a, 0x0, 0x0);
        gbc.writeMem(0xc91, { 0x31, 0x1a, 0x7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x71a, gbc.sp());
        EXPECT(0xc94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01EA
        gbc.setState(0xd6f5, 0x628a, 0x43d0, 0x48dd, 0x7e39, 0xcddc, 0x1, 0x0);
        gbc.writeMem(0xd6f5, { 0x31, 0xeb, 0x18 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x18eb, gbc.sp());
        EXPECT(0xd6f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd6f5));
        EXPECT(0xeb, gbc.readMem(0xd6f6));
        EXPECT(0x18, gbc.readMem(0xd6f7));
        // 31 01EB
        gbc.setState(0x6fd1, 0xc262, 0x8300, 0x337, 0x755f, 0x28d5, 0x0, 0x0);
        gbc.writeMem(0x6fd1, { 0x31, 0x1d, 0xce });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xce1d, gbc.sp());
        EXPECT(0x6fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01EC
        gbc.setState(0xdb86, 0x1b40, 0xef10, 0x9ba5, 0x7e8a, 0xc026, 0x0, 0x1);
        gbc.writeMem(0xdb86, { 0x31, 0x3e, 0xcc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcc3e, gbc.sp());
        EXPECT(0xdb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdb86));
        EXPECT(0x3e, gbc.readMem(0xdb87));
        EXPECT(0xcc, gbc.readMem(0xdb88));
        // 31 01ED
        gbc.setState(0x65c3, 0xaef5, 0xe8d0, 0x35c8, 0x18dc, 0xfa8f, 0x1, 0x0);
        gbc.writeMem(0x65c3, { 0x31, 0xa1, 0x4e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4ea1, gbc.sp());
        EXPECT(0x65c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01EE
        gbc.setState(0x3e7e, 0x8191, 0x97a0, 0x7513, 0x4c39, 0x176e, 0x1, 0x0);
        gbc.writeMem(0x3e7e, { 0x31, 0x2b, 0xe });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe2b, gbc.sp());
        EXPECT(0x3e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01EF
        gbc.setState(0x7574, 0x7269, 0x5040, 0xd408, 0x16e1, 0x5c46, 0x0, 0x0);
        gbc.writeMem(0x7574, { 0x31, 0x12, 0x8c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8c12, gbc.sp());
        EXPECT(0x7577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01F0
        gbc.setState(0x2f51, 0xc519, 0xbf60, 0x5f40, 0xcac8, 0x16ed, 0x1, 0x0);
        gbc.writeMem(0x2f51, { 0x31, 0x1c, 0xb1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb11c, gbc.sp());
        EXPECT(0x2f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01F1
        gbc.setState(0x78b8, 0x9893, 0x9460, 0xc08b, 0x3499, 0x1d1f, 0x1, 0x0);
        gbc.writeMem(0x78b8, { 0x31, 0xa3, 0x72 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x72a3, gbc.sp());
        EXPECT(0x78bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01F2
        gbc.setState(0xa430, 0xfb76, 0xfd20, 0xa84, 0x17ef, 0x2e15, 0x1, 0x0);
        gbc.writeMem(0xa430, { 0x31, 0xbb, 0xf4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf4bb, gbc.sp());
        EXPECT(0xa433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa430));
        EXPECT(0xbb, gbc.readMem(0xa431));
        EXPECT(0xf4, gbc.readMem(0xa432));
        // 31 01F3
        gbc.setState(0x8115, 0x7ee9, 0x210, 0x880f, 0x1c8, 0xe3d1, 0x1, 0x0);
        gbc.writeMem(0x8115, { 0x31, 0xe0, 0x1c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1ce0, gbc.sp());
        EXPECT(0x8118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8115));
        EXPECT(0xe0, gbc.readMem(0x8116));
        EXPECT(0x1c, gbc.readMem(0x8117));
        // 31 01F4
        gbc.setState(0x5e25, 0x695a, 0xddb0, 0x3f4a, 0x1279, 0x50fb, 0x1, 0x1);
        gbc.writeMem(0x5e25, { 0x31, 0x63, 0xa3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa363, gbc.sp());
        EXPECT(0x5e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01F5
        gbc.setState(0x2922, 0x8923, 0x85e0, 0xa600, 0x5084, 0xa654, 0x0, 0x0);
        gbc.writeMem(0x2922, { 0x31, 0xdc, 0x71 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x71dc, gbc.sp());
        EXPECT(0x2925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01F6
        gbc.setState(0x53da, 0x404a, 0x4f90, 0x968c, 0xe8a0, 0xcaa0, 0x0, 0x1);
        gbc.writeMem(0x53da, { 0x31, 0x19, 0x82 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8219, gbc.sp());
        EXPECT(0x53dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01F7
        gbc.setState(0x3331, 0x1008, 0xea30, 0xd8d1, 0x389c, 0xe46e, 0x0, 0x1);
        gbc.writeMem(0x3331, { 0x31, 0xef, 0x67 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x67ef, gbc.sp());
        EXPECT(0x3334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01F8
        gbc.setState(0x263d, 0x27a0, 0xa710, 0x6e2f, 0x87b7, 0xde47, 0x0, 0x0);
        gbc.writeMem(0x263d, { 0x31, 0xe6, 0x79 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x79e6, gbc.sp());
        EXPECT(0x2640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01F9
        gbc.setState(0xbf7e, 0xf12b, 0x2190, 0x3f5d, 0x8ca3, 0x7562, 0x1, 0x1);
        gbc.writeMem(0xbf7e, { 0x31, 0x41, 0x8c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8c41, gbc.sp());
        EXPECT(0xbf81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbf7e));
        EXPECT(0x41, gbc.readMem(0xbf7f));
        EXPECT(0x8c, gbc.readMem(0xbf80));
        // 31 01FA
        gbc.setState(0x1929, 0x26d1, 0x110, 0x4ce2, 0x7789, 0x1102, 0x1, 0x0);
        gbc.writeMem(0x1929, { 0x31, 0xb0, 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa2b0, gbc.sp());
        EXPECT(0x192c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01FB
        gbc.setState(0x19c2, 0x7640, 0xd9f0, 0x4b51, 0x39d, 0x66f6, 0x0, 0x1);
        gbc.writeMem(0x19c2, { 0x31, 0xde, 0x92 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x92de, gbc.sp());
        EXPECT(0x19c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01FC
        gbc.setState(0x60d5, 0x26fc, 0xc0c0, 0xfae3, 0xe58c, 0xdf90, 0x0, 0x0);
        gbc.writeMem(0x60d5, { 0x31, 0xbe, 0x21 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x21be, gbc.sp());
        EXPECT(0x60d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01FD
        gbc.setState(0x1478, 0x6bc2, 0xd120, 0x924f, 0x9692, 0x5538, 0x1, 0x0);
        gbc.writeMem(0x1478, { 0x31, 0x4f, 0x5f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5f4f, gbc.sp());
        EXPECT(0x147b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 01FE
        gbc.setState(0x2757, 0x41ee, 0xcfb0, 0xabc, 0x2d38, 0x159c, 0x1, 0x1);
        gbc.writeMem(0x2757, { 0x31, 0x5d, 0x50 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x505d, gbc.sp());
        EXPECT(0x275a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 01FF
        gbc.setState(0x6b46, 0x4242, 0xa50, 0x303a, 0x1bd9, 0xcebb, 0x1, 0x0);
        gbc.writeMem(0x6b46, { 0x31, 0x1f, 0xbf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbf1f, gbc.sp());
        EXPECT(0x6b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0201
        gbc.setState(0x3c2f, 0x28a6, 0xe490, 0xaf05, 0x917a, 0x9ead, 0x0, 0x0);
        gbc.writeMem(0x3c2f, { 0x31, 0xe8, 0x8c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8ce8, gbc.sp());
        EXPECT(0x3c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0202
        gbc.setState(0x7368, 0xe258, 0x6d90, 0xfa5d, 0xac89, 0xa57a, 0x0, 0x1);
        gbc.writeMem(0x7368, { 0x31, 0x82, 0x3c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3c82, gbc.sp());
        EXPECT(0x736b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0203
        gbc.setState(0x9ccc, 0x7ea7, 0xa240, 0xb39a, 0xf9a, 0xc91, 0x1, 0x0);
        gbc.writeMem(0x9ccc, { 0x31, 0xd8, 0x1e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1ed8, gbc.sp());
        EXPECT(0x9ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9ccc));
        EXPECT(0xd8, gbc.readMem(0x9ccd));
        EXPECT(0x1e, gbc.readMem(0x9cce));
        // 31 0204
        gbc.setState(0xc088, 0xb36a, 0xe9f0, 0x9657, 0xbb4b, 0xe69e, 0x0, 0x0);
        gbc.writeMem(0xc088, { 0x31, 0x31, 0x11 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1131, gbc.sp());
        EXPECT(0xc08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc088));
        EXPECT(0x31, gbc.readMem(0xc089));
        EXPECT(0x11, gbc.readMem(0xc08a));
        // 31 0205
        gbc.setState(0x818b, 0xf7de, 0xf070, 0xfb22, 0x9040, 0xf597, 0x0, 0x0);
        gbc.writeMem(0x818b, { 0x31, 0x93, 0xf4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf493, gbc.sp());
        EXPECT(0x818e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x818b));
        EXPECT(0x93, gbc.readMem(0x818c));
        EXPECT(0xf4, gbc.readMem(0x818d));
        // 31 0206
        gbc.setState(0x8187, 0x5216, 0xcd40, 0x4cd0, 0xbb3b, 0xa7ee, 0x1, 0x0);
        gbc.writeMem(0x8187, { 0x31, 0xc5, 0x11 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x11c5, gbc.sp());
        EXPECT(0x818a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8187));
        EXPECT(0xc5, gbc.readMem(0x8188));
        EXPECT(0x11, gbc.readMem(0x8189));
        // 31 0207
        gbc.setState(0x67d6, 0xf036, 0xcc0, 0x71ec, 0xa4b0, 0x2168, 0x1, 0x1);
        gbc.writeMem(0x67d6, { 0x31, 0x94, 0xc0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc094, gbc.sp());
        EXPECT(0x67d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0208
        gbc.setState(0x68af, 0xeae6, 0x4650, 0xbdd2, 0xd108, 0x5092, 0x0, 0x1);
        gbc.writeMem(0x68af, { 0x31, 0xcc, 0x79 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x79cc, gbc.sp());
        EXPECT(0x68b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0209
        gbc.setState(0x5392, 0x6800, 0xa710, 0x1285, 0x484a, 0x6d31, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0x31, 0xf6, 0xa1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa1f6, gbc.sp());
        EXPECT(0x5395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 020A
        gbc.setState(0x43aa, 0x8893, 0xfa40, 0xb348, 0xabb3, 0xca48, 0x1, 0x0);
        gbc.writeMem(0x43aa, { 0x31, 0xdb, 0x76 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0x43ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 020B
        gbc.setState(0x2ba6, 0xf4e, 0xaec0, 0xd618, 0xfdca, 0xac5c, 0x1, 0x0);
        gbc.writeMem(0x2ba6, { 0x31, 0x95, 0xb9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb995, gbc.sp());
        EXPECT(0x2ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 020C
        gbc.setState(0xda09, 0xdeee, 0xefb0, 0xaaa3, 0x77ee, 0xeb4b, 0x1, 0x0);
        gbc.writeMem(0xda09, { 0x31, 0xbb, 0x38 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x38bb, gbc.sp());
        EXPECT(0xda0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xda09));
        EXPECT(0xbb, gbc.readMem(0xda0a));
        EXPECT(0x38, gbc.readMem(0xda0b));
        // 31 020D
        gbc.setState(0x93b1, 0x83d8, 0x6ce0, 0x30ae, 0x76e6, 0xa425, 0x1, 0x0);
        gbc.writeMem(0x93b1, { 0x31, 0xe, 0x38 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x380e, gbc.sp());
        EXPECT(0x93b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x93b1));
        EXPECT(0xe, gbc.readMem(0x93b2));
        EXPECT(0x38, gbc.readMem(0x93b3));
        // 31 020E
        gbc.setState(0xd38, 0xfe37, 0xfe30, 0x827d, 0x761d, 0xdcf6, 0x1, 0x0);
        gbc.writeMem(0xd38, { 0x31, 0x5e, 0x2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x25e, gbc.sp());
        EXPECT(0xd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 020F
        gbc.setState(0xb55e, 0x2e1f, 0xa5c0, 0xe85b, 0x65c5, 0x410d, 0x1, 0x1);
        gbc.writeMem(0xb55e, { 0x31, 0x2, 0xf5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf502, gbc.sp());
        EXPECT(0xb561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb55e));
        EXPECT(0x2, gbc.readMem(0xb55f));
        EXPECT(0xf5, gbc.readMem(0xb560));
        // 31 0210
        gbc.setState(0xc44a, 0xc456, 0xd570, 0x6414, 0x726c, 0x31f9, 0x0, 0x0);
        gbc.writeMem(0xc44a, { 0x31, 0x4f, 0xea });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xea4f, gbc.sp());
        EXPECT(0xc44d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc44a));
        EXPECT(0x4f, gbc.readMem(0xc44b));
        EXPECT(0xea, gbc.readMem(0xc44c));
        // 31 0211
        gbc.setState(0x235c, 0x236b, 0xd1f0, 0xde00, 0x97b7, 0x203, 0x0, 0x1);
        gbc.writeMem(0x235c, { 0x31, 0x71, 0x8d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8d71, gbc.sp());
        EXPECT(0x235f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0212
        gbc.setState(0xeae7, 0x9aac, 0xe890, 0x8f6b, 0x43aa, 0xb364, 0x1, 0x1);
        gbc.writeMem(0xeae7, { 0x31, 0x44, 0xae });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xae44, gbc.sp());
        EXPECT(0xeaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xeae7));
        EXPECT(0x44, gbc.readMem(0xeae8));
        EXPECT(0xae, gbc.readMem(0xeae9));
        // 31 0213
        gbc.setState(0xc5bf, 0x735c, 0x51d0, 0xcec5, 0x9e5e, 0x7ec5, 0x0, 0x0);
        gbc.writeMem(0xc5bf, { 0x31, 0x4b, 0xc5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc54b, gbc.sp());
        EXPECT(0xc5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc5bf));
        EXPECT(0x4b, gbc.readMem(0xc5c0));
        EXPECT(0xc5, gbc.readMem(0xc5c1));
        // 31 0214
        gbc.setState(0xbab3, 0xe3b9, 0x6480, 0xe505, 0xf402, 0xb34f, 0x0, 0x1);
        gbc.writeMem(0xbab3, { 0x31, 0xfc, 0xc1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc1fc, gbc.sp());
        EXPECT(0xbab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbab3));
        EXPECT(0xfc, gbc.readMem(0xbab4));
        EXPECT(0xc1, gbc.readMem(0xbab5));
        // 31 0215
        gbc.setState(0x44b, 0xadee, 0x1da0, 0xcd7a, 0xfea5, 0xdb37, 0x1, 0x0);
        gbc.writeMem(0x44b, { 0x31, 0xf0, 0xa5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa5f0, gbc.sp());
        EXPECT(0x44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0216
        gbc.setState(0x3cf9, 0x6935, 0xdd90, 0x18d3, 0x49af, 0xd4ab, 0x0, 0x1);
        gbc.writeMem(0x3cf9, { 0x31, 0xeb, 0x4c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4ceb, gbc.sp());
        EXPECT(0x3cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0217
        gbc.setState(0x301d, 0x53cc, 0x87b0, 0xa7a1, 0x25f8, 0xb594, 0x0, 0x1);
        gbc.writeMem(0x301d, { 0x31, 0x5, 0xa5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa505, gbc.sp());
        EXPECT(0x3020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0218
        gbc.setState(0x3cc0, 0xb3ca, 0x36c0, 0xce53, 0x3040, 0xf492, 0x1, 0x1);
        gbc.writeMem(0x3cc0, { 0x31, 0xc0, 0x12 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x12c0, gbc.sp());
        EXPECT(0x3cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0219
        gbc.setState(0x3dc8, 0x8818, 0x39f0, 0xb23d, 0x50fe, 0xae62, 0x0, 0x1);
        gbc.writeMem(0x3dc8, { 0x31, 0xc0, 0x54 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x54c0, gbc.sp());
        EXPECT(0x3dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 021A
        gbc.setState(0xb39a, 0x2e4b, 0x520, 0xe6d7, 0xe4f6, 0xa9c4, 0x1, 0x0);
        gbc.writeMem(0xb39a, { 0x31, 0x4c, 0x7a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7a4c, gbc.sp());
        EXPECT(0xb39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb39a));
        EXPECT(0x4c, gbc.readMem(0xb39b));
        EXPECT(0x7a, gbc.readMem(0xb39c));
        // 31 021B
        gbc.setState(0x9072, 0xce27, 0x4480, 0xee2f, 0xe0d4, 0xd507, 0x0, 0x1);
        gbc.writeMem(0x9072, { 0x31, 0xd0, 0x99 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x99d0, gbc.sp());
        EXPECT(0x9075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9072));
        EXPECT(0xd0, gbc.readMem(0x9073));
        EXPECT(0x99, gbc.readMem(0x9074));
        // 31 021D
        gbc.setState(0x3b0e, 0x4c71, 0xd800, 0x461c, 0x9ada, 0xb43e, 0x1, 0x0);
        gbc.writeMem(0x3b0e, { 0x31, 0x2c, 0x82 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x822c, gbc.sp());
        EXPECT(0x3b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 021E
        gbc.setState(0x5872, 0xefff, 0xeeb0, 0x84b0, 0x697c, 0x9d8b, 0x0, 0x1);
        gbc.writeMem(0x5872, { 0x31, 0xc4, 0xe0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe0c4, gbc.sp());
        EXPECT(0x5875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 021F
        gbc.setState(0x1518, 0xb0e5, 0xd6a0, 0x45c0, 0xcf7, 0x5bb5, 0x0, 0x1);
        gbc.writeMem(0x1518, { 0x31, 0xda, 0xc8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc8da, gbc.sp());
        EXPECT(0x151b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0220
        gbc.setState(0xef3f, 0x93b5, 0x6e0, 0xea9, 0xd31c, 0x8498, 0x1, 0x1);
        gbc.writeMem(0xef3f, { 0x31, 0xe1, 0xbd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbde1, gbc.sp());
        EXPECT(0xef42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xef3f));
        EXPECT(0xe1, gbc.readMem(0xef40));
        EXPECT(0xbd, gbc.readMem(0xef41));
        // 31 0221
        gbc.setState(0x6c90, 0x6ef9, 0xf320, 0xbe54, 0xc69b, 0x1adf, 0x0, 0x0);
        gbc.writeMem(0x6c90, { 0x31, 0x37, 0xba });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xba37, gbc.sp());
        EXPECT(0x6c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0222
        gbc.setState(0x605b, 0xbcfe, 0x9c20, 0x8012, 0xa738, 0xf067, 0x1, 0x0);
        gbc.writeMem(0x605b, { 0x31, 0x66, 0x9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x966, gbc.sp());
        EXPECT(0x605e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0223
        gbc.setState(0x2deb, 0xf5d6, 0x54f0, 0xeb0f, 0x3c12, 0xcf3, 0x1, 0x0);
        gbc.writeMem(0x2deb, { 0x31, 0x2d, 0x23 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x232d, gbc.sp());
        EXPECT(0x2dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0224
        gbc.setState(0x8d06, 0x18fa, 0x33b0, 0x70f9, 0x5aaf, 0x8a15, 0x1, 0x0);
        gbc.writeMem(0x8d06, { 0x31, 0xb8, 0x52 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x52b8, gbc.sp());
        EXPECT(0x8d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8d06));
        EXPECT(0xb8, gbc.readMem(0x8d07));
        EXPECT(0x52, gbc.readMem(0x8d08));
        // 31 0225
        gbc.setState(0xe0cf, 0x2192, 0xaeb0, 0xaad2, 0xfb84, 0x7832, 0x0, 0x0);
        gbc.writeMem(0xe0cf, { 0x31, 0x38, 0x31 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3138, gbc.sp());
        EXPECT(0xe0d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe0cf));
        EXPECT(0x38, gbc.readMem(0xe0d0));
        EXPECT(0x31, gbc.readMem(0xe0d1));
        // 31 0226
        gbc.setState(0xc596, 0x3f3c, 0xc790, 0xb5ec, 0x2b6, 0xba35, 0x1, 0x0);
        gbc.writeMem(0xc596, { 0x31, 0x47, 0xdb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdb47, gbc.sp());
        EXPECT(0xc599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc596));
        EXPECT(0x47, gbc.readMem(0xc597));
        EXPECT(0xdb, gbc.readMem(0xc598));
        // 31 0227
        gbc.setState(0xead4, 0x25a0, 0x53c0, 0x974d, 0x7de0, 0x6a59, 0x0, 0x0);
        gbc.writeMem(0xead4, { 0x31, 0x65, 0x65 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6565, gbc.sp());
        EXPECT(0xead7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xead4));
        EXPECT(0x65, gbc.readMem(0xead5));
        EXPECT(0x65, gbc.readMem(0xead6));
        // 31 0228
        gbc.setState(0xc20c, 0x7d15, 0xfca0, 0xb8fb, 0x9f19, 0xaf73, 0x1, 0x0);
        gbc.writeMem(0xc20c, { 0x31, 0xe5, 0x33 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x33e5, gbc.sp());
        EXPECT(0xc20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc20c));
        EXPECT(0xe5, gbc.readMem(0xc20d));
        EXPECT(0x33, gbc.readMem(0xc20e));
        // 31 0229
        gbc.setState(0x309b, 0x257c, 0xde60, 0x26bf, 0xb6bb, 0x5c7c, 0x0, 0x0);
        gbc.writeMem(0x309b, { 0x31, 0xd5, 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2fd5, gbc.sp());
        EXPECT(0x309e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 022A
        gbc.setState(0xc24b, 0xb0e9, 0x4420, 0xc916, 0x2664, 0xe47, 0x1, 0x0);
        gbc.writeMem(0xc24b, { 0x31, 0xe6, 0x57 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x57e6, gbc.sp());
        EXPECT(0xc24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc24b));
        EXPECT(0xe6, gbc.readMem(0xc24c));
        EXPECT(0x57, gbc.readMem(0xc24d));
        // 31 022B
        gbc.setState(0x3c3, 0x2fb2, 0xf440, 0xaab8, 0x8388, 0x4a2a, 0x1, 0x1);
        gbc.writeMem(0x3c3, { 0x31, 0x4a, 0xb6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb64a, gbc.sp());
        EXPECT(0x3c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 022C
        gbc.setState(0x66f8, 0x4e32, 0xf280, 0x1e8e, 0x7038, 0x40bf, 0x1, 0x1);
        gbc.writeMem(0x66f8, { 0x31, 0x90, 0xde });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xde90, gbc.sp());
        EXPECT(0x66fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 022D
        gbc.setState(0x142a, 0x6f63, 0xa580, 0xe860, 0xf900, 0x4ced, 0x1, 0x1);
        gbc.writeMem(0x142a, { 0x31, 0xe1, 0xf7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf7e1, gbc.sp());
        EXPECT(0x142d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 022E
        gbc.setState(0xbb5c, 0xdcd6, 0x77a0, 0x4f1a, 0x1474, 0x735c, 0x0, 0x1);
        gbc.writeMem(0xbb5c, { 0x31, 0x36, 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5d36, gbc.sp());
        EXPECT(0xbb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbb5c));
        EXPECT(0x36, gbc.readMem(0xbb5d));
        EXPECT(0x5d, gbc.readMem(0xbb5e));
        // 31 0230
        gbc.setState(0xb150, 0x79c, 0x9830, 0xdfc4, 0x77fa, 0x1a2f, 0x1, 0x1);
        gbc.writeMem(0xb150, { 0x31, 0x34, 0xc9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc934, gbc.sp());
        EXPECT(0xb153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb150));
        EXPECT(0x34, gbc.readMem(0xb151));
        EXPECT(0xc9, gbc.readMem(0xb152));
        // 31 0231
        gbc.setState(0x9496, 0xa013, 0x9500, 0xe7bb, 0x7dca, 0xb58e, 0x0, 0x0);
        gbc.writeMem(0x9496, { 0x31, 0x63, 0x28 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2863, gbc.sp());
        EXPECT(0x9499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9496));
        EXPECT(0x63, gbc.readMem(0x9497));
        EXPECT(0x28, gbc.readMem(0x9498));
        // 31 0232
        gbc.setState(0xaf86, 0x88fe, 0xe930, 0xd171, 0xaf82, 0xee52, 0x1, 0x0);
        gbc.writeMem(0xaf86, { 0x31, 0xaa, 0x41 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x41aa, gbc.sp());
        EXPECT(0xaf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaf86));
        EXPECT(0xaa, gbc.readMem(0xaf87));
        EXPECT(0x41, gbc.readMem(0xaf88));
        // 31 0233
        gbc.setState(0x76b, 0xc9f4, 0x2e90, 0x649b, 0x90ad, 0xafa, 0x1, 0x0);
        gbc.writeMem(0x76b, { 0x31, 0x35, 0x58 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5835, gbc.sp());
        EXPECT(0x76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0234
        gbc.setState(0x1458, 0x61b, 0x5750, 0x95de, 0x2e41, 0x1f9a, 0x1, 0x1);
        gbc.writeMem(0x1458, { 0x31, 0x9a, 0x1a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1a9a, gbc.sp());
        EXPECT(0x145b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0235
        gbc.setState(0x9b56, 0xb1aa, 0x20e0, 0x6ca4, 0x58f7, 0x21c4, 0x0, 0x1);
        gbc.writeMem(0x9b56, { 0x31, 0x9e, 0xaa });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaa9e, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9b56));
        EXPECT(0x9e, gbc.readMem(0x9b57));
        EXPECT(0xaa, gbc.readMem(0x9b58));
        // 31 0236
        gbc.setState(0xdbd, 0xb6af, 0x3f10, 0xb0b2, 0x59c0, 0xafb0, 0x0, 0x0);
        gbc.writeMem(0xdbd, { 0x31, 0x4d, 0x3b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3b4d, gbc.sp());
        EXPECT(0xdc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0237
        gbc.setState(0xb9a8, 0xe834, 0xb590, 0x6834, 0xa0ba, 0xc41a, 0x1, 0x0);
        gbc.writeMem(0xb9a8, { 0x31, 0xdf, 0x44 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x44df, gbc.sp());
        EXPECT(0xb9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb9a8));
        EXPECT(0xdf, gbc.readMem(0xb9a9));
        EXPECT(0x44, gbc.readMem(0xb9aa));
        // 31 0238
        gbc.setState(0xb043, 0x960a, 0x9a90, 0xec9f, 0x9046, 0x15da, 0x0, 0x0);
        gbc.writeMem(0xb043, { 0x31, 0x7e, 0x5f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5f7e, gbc.sp());
        EXPECT(0xb046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb043));
        EXPECT(0x7e, gbc.readMem(0xb044));
        EXPECT(0x5f, gbc.readMem(0xb045));
        // 31 0239
        gbc.setState(0xa1dd, 0xf5b4, 0x5f0, 0xff26, 0x4340, 0xd6b7, 0x0, 0x0);
        gbc.writeMem(0xa1dd, { 0x31, 0x0, 0x7d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7d00, gbc.sp());
        EXPECT(0xa1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa1dd));
        EXPECT(0x0, gbc.readMem(0xa1de));
        EXPECT(0x7d, gbc.readMem(0xa1df));
        // 31 023A
        gbc.setState(0xcfde, 0x41d5, 0x4c80, 0x2557, 0xca1a, 0xb32f, 0x0, 0x1);
        gbc.writeMem(0xcfde, { 0x31, 0xa1, 0xfe });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfea1, gbc.sp());
        EXPECT(0xcfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcfde));
        EXPECT(0xa1, gbc.readMem(0xcfdf));
        EXPECT(0xfe, gbc.readMem(0xcfe0));
        // 31 023B
        gbc.setState(0xc028, 0x681e, 0x72f0, 0xcc0f, 0x5943, 0x3263, 0x1, 0x0);
        gbc.writeMem(0xc028, { 0x31, 0xda, 0xc7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc7da, gbc.sp());
        EXPECT(0xc02b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc028));
        EXPECT(0xda, gbc.readMem(0xc029));
        EXPECT(0xc7, gbc.readMem(0xc02a));
        // 31 023C
        gbc.setState(0x93d1, 0x3981, 0x2610, 0xa9ae, 0x4f83, 0x88e4, 0x1, 0x1);
        gbc.writeMem(0x93d1, { 0x31, 0xbb, 0x4e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4ebb, gbc.sp());
        EXPECT(0x93d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x93d1));
        EXPECT(0xbb, gbc.readMem(0x93d2));
        EXPECT(0x4e, gbc.readMem(0x93d3));
        // 31 023D
        gbc.setState(0xc1b3, 0xf299, 0x82d0, 0x3171, 0xd1fe, 0x6c0e, 0x1, 0x1);
        gbc.writeMem(0xc1b3, { 0x31, 0x2a, 0xa2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa22a, gbc.sp());
        EXPECT(0xc1b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc1b3));
        EXPECT(0x2a, gbc.readMem(0xc1b4));
        EXPECT(0xa2, gbc.readMem(0xc1b5));
        // 31 023E
        gbc.setState(0x66e2, 0xe3e9, 0x7160, 0x119a, 0x3bc7, 0x7172, 0x0, 0x0);
        gbc.writeMem(0x66e2, { 0x31, 0x25, 0xd5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd525, gbc.sp());
        EXPECT(0x66e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 023F
        gbc.setState(0xb543, 0x1796, 0x8d40, 0x816a, 0x6a3f, 0x1829, 0x1, 0x0);
        gbc.writeMem(0xb543, { 0x31, 0x24, 0x28 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2824, gbc.sp());
        EXPECT(0xb546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb543));
        EXPECT(0x24, gbc.readMem(0xb544));
        EXPECT(0x28, gbc.readMem(0xb545));
        // 31 0241
        gbc.setState(0x263f, 0x43b9, 0xdd20, 0xc96a, 0x7c5c, 0xe1ba, 0x1, 0x1);
        gbc.writeMem(0x263f, { 0x31, 0x2a, 0x57 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x572a, gbc.sp());
        EXPECT(0x2642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0242
        gbc.setState(0x620e, 0x311e, 0xa0d0, 0x40b0, 0xf95b, 0xaedd, 0x1, 0x0);
        gbc.writeMem(0x620e, { 0x31, 0x4, 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6104, gbc.sp());
        EXPECT(0x6211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0243
        gbc.setState(0x34fa, 0xb8f7, 0xf240, 0xd1d, 0x2312, 0x825b, 0x1, 0x1);
        gbc.writeMem(0x34fa, { 0x31, 0xeb, 0x63 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x63eb, gbc.sp());
        EXPECT(0x34fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0244
        gbc.setState(0xcb52, 0x4fcf, 0xf2f0, 0x4159, 0xf77a, 0xe11c, 0x0, 0x1);
        gbc.writeMem(0xcb52, { 0x31, 0x53, 0xb3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb353, gbc.sp());
        EXPECT(0xcb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcb52));
        EXPECT(0x53, gbc.readMem(0xcb53));
        EXPECT(0xb3, gbc.readMem(0xcb54));
        // 31 0245
        gbc.setState(0xdd91, 0xe2c9, 0x8ef0, 0x170f, 0x338d, 0x2bd4, 0x1, 0x0);
        gbc.writeMem(0xdd91, { 0x31, 0xb2, 0xf0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf0b2, gbc.sp());
        EXPECT(0xdd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdd91));
        EXPECT(0xb2, gbc.readMem(0xdd92));
        EXPECT(0xf0, gbc.readMem(0xdd93));
        // 31 0247
        gbc.setState(0xcd9a, 0x5c3d, 0x8950, 0xbcbb, 0x47ae, 0x10b1, 0x0, 0x0);
        gbc.writeMem(0xcd9a, { 0x31, 0xc6, 0x9b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9bc6, gbc.sp());
        EXPECT(0xcd9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcd9a));
        EXPECT(0xc6, gbc.readMem(0xcd9b));
        EXPECT(0x9b, gbc.readMem(0xcd9c));
        // 31 0248
        gbc.setState(0x2fe9, 0x3d67, 0x47f0, 0xeda2, 0x4148, 0x5a5a, 0x0, 0x0);
        gbc.writeMem(0x2fe9, { 0x31, 0x86, 0x3f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3f86, gbc.sp());
        EXPECT(0x2fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 024A
        gbc.setState(0xddce, 0x622f, 0x16d0, 0xfa62, 0x234e, 0x22ef, 0x1, 0x0);
        gbc.writeMem(0xddce, { 0x31, 0x6c, 0xee });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xee6c, gbc.sp());
        EXPECT(0xddd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xddce));
        EXPECT(0x6c, gbc.readMem(0xddcf));
        EXPECT(0xee, gbc.readMem(0xddd0));
        // 31 024B
        gbc.setState(0xd269, 0x99a6, 0x6a20, 0x9ade, 0xf1e, 0x16cc, 0x0, 0x0);
        gbc.writeMem(0xd269, { 0x31, 0x71, 0xca });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xca71, gbc.sp());
        EXPECT(0xd26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd269));
        EXPECT(0x71, gbc.readMem(0xd26a));
        EXPECT(0xca, gbc.readMem(0xd26b));
        // 31 024C
        gbc.setState(0x5b26, 0x2409, 0xf8f0, 0x8b8e, 0x1d4a, 0xf634, 0x1, 0x0);
        gbc.writeMem(0x5b26, { 0x31, 0xa1, 0xa0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa0a1, gbc.sp());
        EXPECT(0x5b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 024D
        gbc.setState(0x7cc1, 0x2cf4, 0xcf80, 0x8d11, 0xe2b, 0xb24f, 0x0, 0x0);
        gbc.writeMem(0x7cc1, { 0x31, 0xaa, 0xe4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe4aa, gbc.sp());
        EXPECT(0x7cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 024E
        gbc.setState(0x58ce, 0x6b0e, 0xee30, 0xccdb, 0x227d, 0x50e5, 0x0, 0x1);
        gbc.writeMem(0x58ce, { 0x31, 0x9, 0x26 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2609, gbc.sp());
        EXPECT(0x58d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 024F
        gbc.setState(0x64c, 0x247c, 0x8280, 0x152c, 0x73d3, 0x4efa, 0x1, 0x0);
        gbc.writeMem(0x64c, { 0x31, 0xc1, 0xb5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb5c1, gbc.sp());
        EXPECT(0x64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0250
        gbc.setState(0x7240, 0x3249, 0x2b00, 0x50bf, 0x22ad, 0x698d, 0x1, 0x1);
        gbc.writeMem(0x7240, { 0x31, 0x1d, 0xf5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf51d, gbc.sp());
        EXPECT(0x7243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0251
        gbc.setState(0xa25d, 0xcdb8, 0xa2d0, 0x3994, 0x6f88, 0x5125, 0x0, 0x0);
        gbc.writeMem(0xa25d, { 0x31, 0x5b, 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x575b, gbc.sp());
        EXPECT(0xa260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa25d));
        EXPECT(0x5b, gbc.readMem(0xa25e));
        EXPECT(0x57, gbc.readMem(0xa25f));
        // 31 0252
        gbc.setState(0x119c, 0x8dd3, 0xb8a0, 0x7052, 0xb9b0, 0x3fbd, 0x0, 0x0);
        gbc.writeMem(0x119c, { 0x31, 0x22, 0x3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x322, gbc.sp());
        EXPECT(0x119f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0253
        gbc.setState(0xa360, 0xaab1, 0x6050, 0x4abb, 0xc92d, 0x7250, 0x1, 0x1);
        gbc.writeMem(0xa360, { 0x31, 0x8c, 0x72 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x728c, gbc.sp());
        EXPECT(0xa363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa360));
        EXPECT(0x8c, gbc.readMem(0xa361));
        EXPECT(0x72, gbc.readMem(0xa362));
        // 31 0255
        gbc.setState(0x9f96, 0xdc, 0x6700, 0xd7fd, 0x5ebd, 0x7c09, 0x1, 0x0);
        gbc.writeMem(0x9f96, { 0x31, 0x15, 0xa4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa415, gbc.sp());
        EXPECT(0x9f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9f96));
        EXPECT(0x15, gbc.readMem(0x9f97));
        EXPECT(0xa4, gbc.readMem(0x9f98));
        // 31 0256
        gbc.setState(0xa4f2, 0x2454, 0xc2b0, 0xcdd6, 0xdd68, 0x37b5, 0x0, 0x0);
        gbc.writeMem(0xa4f2, { 0x31, 0xdc, 0xaf });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xafdc, gbc.sp());
        EXPECT(0xa4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa4f2));
        EXPECT(0xdc, gbc.readMem(0xa4f3));
        EXPECT(0xaf, gbc.readMem(0xa4f4));
        // 31 0257
        gbc.setState(0x21b2, 0x3302, 0x3d90, 0x678, 0xec27, 0xae14, 0x1, 0x0);
        gbc.writeMem(0x21b2, { 0x31, 0xd9, 0x28 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x28d9, gbc.sp());
        EXPECT(0x21b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0258
        gbc.setState(0xb7d3, 0xc3a8, 0x4e60, 0x1485, 0x25ce, 0x90b6, 0x1, 0x0);
        gbc.writeMem(0xb7d3, { 0x31, 0xb2, 0x55 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x55b2, gbc.sp());
        EXPECT(0xb7d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb7d3));
        EXPECT(0xb2, gbc.readMem(0xb7d4));
        EXPECT(0x55, gbc.readMem(0xb7d5));
        // 31 0259
        gbc.setState(0x2542, 0xc4aa, 0x240, 0x52f8, 0xa9dc, 0xd945, 0x1, 0x1);
        gbc.writeMem(0x2542, { 0x31, 0x93, 0xb8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb893, gbc.sp());
        EXPECT(0x2545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 025A
        gbc.setState(0x94ed, 0xc668, 0xcde0, 0x4ba8, 0x9105, 0xf1c4, 0x0, 0x0);
        gbc.writeMem(0x94ed, { 0x31, 0x7a, 0xde });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xde7a, gbc.sp());
        EXPECT(0x94f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x94ed));
        EXPECT(0x7a, gbc.readMem(0x94ee));
        EXPECT(0xde, gbc.readMem(0x94ef));
        // 31 025B
        gbc.setState(0xe1e7, 0x8c91, 0x1360, 0x128f, 0x50c5, 0x27b6, 0x0, 0x0);
        gbc.writeMem(0xe1e7, { 0x31, 0xa4, 0xa5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa5a4, gbc.sp());
        EXPECT(0xe1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe1e7));
        EXPECT(0xa4, gbc.readMem(0xe1e8));
        EXPECT(0xa5, gbc.readMem(0xe1e9));
        // 31 025C
        gbc.setState(0xa13f, 0x23c8, 0x3110, 0x446b, 0xd4c9, 0x9098, 0x0, 0x1);
        gbc.writeMem(0xa13f, { 0x31, 0xd3, 0x4e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4ed3, gbc.sp());
        EXPECT(0xa142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa13f));
        EXPECT(0xd3, gbc.readMem(0xa140));
        EXPECT(0x4e, gbc.readMem(0xa141));
        // 31 025D
        gbc.setState(0x1e6c, 0xad38, 0xb8f0, 0xa30d, 0xe2cd, 0x9503, 0x1, 0x0);
        gbc.writeMem(0x1e6c, { 0x31, 0x4d, 0xaa });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaa4d, gbc.sp());
        EXPECT(0x1e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 025E
        gbc.setState(0x21f8, 0x1935, 0x2610, 0x2796, 0x8861, 0xf857, 0x1, 0x0);
        gbc.writeMem(0x21f8, { 0x31, 0x2f, 0x53 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x532f, gbc.sp());
        EXPECT(0x21fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 025F
        gbc.setState(0xae6, 0xe3ab, 0x3290, 0xd6ae, 0x2e74, 0x1208, 0x0, 0x0);
        gbc.writeMem(0xae6, { 0x31, 0x2b, 0xdb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdb2b, gbc.sp());
        EXPECT(0xae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0260
        gbc.setState(0x7650, 0x6cc4, 0x8160, 0x66aa, 0x4d4c, 0x8299, 0x1, 0x1);
        gbc.writeMem(0x7650, { 0x31, 0x6c, 0xc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc6c, gbc.sp());
        EXPECT(0x7653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0261
        gbc.setState(0xda2d, 0xc1ef, 0xb90, 0xdcd1, 0x8a46, 0xb140, 0x1, 0x1);
        gbc.writeMem(0xda2d, { 0x31, 0x8, 0xbf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbf08, gbc.sp());
        EXPECT(0xda30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xda2d));
        EXPECT(0x8, gbc.readMem(0xda2e));
        EXPECT(0xbf, gbc.readMem(0xda2f));
        // 31 0262
        gbc.setState(0x3fbc, 0xe9d0, 0x2280, 0xd2c4, 0x6806, 0xd29b, 0x0, 0x0);
        gbc.writeMem(0x3fbc, { 0x31, 0x24, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2224, gbc.sp());
        EXPECT(0x3fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0263
        gbc.setState(0x2fe, 0xb92d, 0xa600, 0x1417, 0x422b, 0x5378, 0x0, 0x0);
        gbc.writeMem(0x2fe, { 0x31, 0x25, 0x60 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6025, gbc.sp());
        EXPECT(0x301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0264
        gbc.setState(0xed0, 0xd0f6, 0x9430, 0x656d, 0x2281, 0xbcf9, 0x0, 0x1);
        gbc.writeMem(0xed0, { 0x31, 0xd7, 0x9d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9dd7, gbc.sp());
        EXPECT(0xed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0265
        gbc.setState(0xd1ee, 0x22c3, 0xe080, 0xb9f0, 0xb1ef, 0x7d09, 0x0, 0x0);
        gbc.writeMem(0xd1ee, { 0x31, 0x86, 0x23 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2386, gbc.sp());
        EXPECT(0xd1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd1ee));
        EXPECT(0x86, gbc.readMem(0xd1ef));
        EXPECT(0x23, gbc.readMem(0xd1f0));
        // 31 0266
        gbc.setState(0x5059, 0xca59, 0x39b0, 0x1262, 0x2ea8, 0xaca3, 0x1, 0x1);
        gbc.writeMem(0x5059, { 0x31, 0x15, 0x9c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9c15, gbc.sp());
        EXPECT(0x505c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0267
        gbc.setState(0xa993, 0x9420, 0x2a0, 0x21a, 0xb425, 0x682e, 0x0, 0x1);
        gbc.writeMem(0xa993, { 0x31, 0xec, 0x41 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x41ec, gbc.sp());
        EXPECT(0xa996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa993));
        EXPECT(0xec, gbc.readMem(0xa994));
        EXPECT(0x41, gbc.readMem(0xa995));
        // 31 0268
        gbc.setState(0x20dc, 0xc37e, 0x1c90, 0x5cd4, 0x3e07, 0x44a5, 0x1, 0x0);
        gbc.writeMem(0x20dc, { 0x31, 0xb0, 0x34 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x34b0, gbc.sp());
        EXPECT(0x20df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 026A
        gbc.setState(0xbf01, 0x2404, 0x9b10, 0x25b, 0xf40f, 0xde15, 0x0, 0x1);
        gbc.writeMem(0xbf01, { 0x31, 0x38, 0xdc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdc38, gbc.sp());
        EXPECT(0xbf04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbf01));
        EXPECT(0x38, gbc.readMem(0xbf02));
        EXPECT(0xdc, gbc.readMem(0xbf03));
        // 31 026B
        gbc.setState(0xefd1, 0xb04b, 0x3050, 0x2251, 0x980b, 0xa5a, 0x1, 0x0);
        gbc.writeMem(0xefd1, { 0x31, 0x8, 0x3a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3a08, gbc.sp());
        EXPECT(0xefd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xefd1));
        EXPECT(0x8, gbc.readMem(0xefd2));
        EXPECT(0x3a, gbc.readMem(0xefd3));
        // 31 026C
        gbc.setState(0xcb8b, 0x85df, 0x9670, 0x88d6, 0xb156, 0xbb7e, 0x0, 0x0);
        gbc.writeMem(0xcb8b, { 0x31, 0x14, 0x57 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5714, gbc.sp());
        EXPECT(0xcb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcb8b));
        EXPECT(0x14, gbc.readMem(0xcb8c));
        EXPECT(0x57, gbc.readMem(0xcb8d));
        // 31 026D
        gbc.setState(0x5639, 0x9b44, 0x56d0, 0x15e8, 0xad0f, 0x7c5f, 0x1, 0x0);
        gbc.writeMem(0x5639, { 0x31, 0x70, 0xc3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc370, gbc.sp());
        EXPECT(0x563c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 026E
        gbc.setState(0x1f1a, 0xe1ed, 0xa560, 0xe6d8, 0x12b3, 0x26b1, 0x1, 0x1);
        gbc.writeMem(0x1f1a, { 0x31, 0x17, 0x2f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2f17, gbc.sp());
        EXPECT(0x1f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 026F
        gbc.setState(0x54b4, 0x81a1, 0x66b0, 0x5fe2, 0xc11d, 0x5c0e, 0x0, 0x0);
        gbc.writeMem(0x54b4, { 0x31, 0x68, 0xa4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa468, gbc.sp());
        EXPECT(0x54b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0270
        gbc.setState(0xaf38, 0x6aed, 0x80d0, 0xbf37, 0x9929, 0x3da7, 0x0, 0x0);
        gbc.writeMem(0xaf38, { 0x31, 0x73, 0xf });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf73, gbc.sp());
        EXPECT(0xaf3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaf38));
        EXPECT(0x73, gbc.readMem(0xaf39));
        EXPECT(0xf, gbc.readMem(0xaf3a));
        // 31 0271
        gbc.setState(0x4091, 0x26ac, 0x5860, 0x3625, 0x737e, 0x49de, 0x0, 0x0);
        gbc.writeMem(0x4091, { 0x31, 0xc, 0xde });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xde0c, gbc.sp());
        EXPECT(0x4094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0273
        gbc.setState(0x97bc, 0xf8bf, 0xf750, 0x69a2, 0x1c43, 0x415e, 0x1, 0x1);
        gbc.writeMem(0x97bc, { 0x31, 0x8b, 0x52 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x528b, gbc.sp());
        EXPECT(0x97bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x97bc));
        EXPECT(0x8b, gbc.readMem(0x97bd));
        EXPECT(0x52, gbc.readMem(0x97be));
        // 31 0275
        gbc.setState(0x91af, 0x59d3, 0xf410, 0x16c7, 0xc975, 0x3860, 0x1, 0x0);
        gbc.writeMem(0x91af, { 0x31, 0xd0, 0x19 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x19d0, gbc.sp());
        EXPECT(0x91b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x91af));
        EXPECT(0xd0, gbc.readMem(0x91b0));
        EXPECT(0x19, gbc.readMem(0x91b1));
        // 31 0276
        gbc.setState(0x64ed, 0x87a8, 0xf360, 0xf7d3, 0x237d, 0x97b0, 0x0, 0x0);
        gbc.writeMem(0x64ed, { 0x31, 0xe9, 0x23 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x23e9, gbc.sp());
        EXPECT(0x64f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0277
        gbc.setState(0xe24e, 0x9dd7, 0x3650, 0xa135, 0x4280, 0xd182, 0x0, 0x1);
        gbc.writeMem(0xe24e, { 0x31, 0x2b, 0xe8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe82b, gbc.sp());
        EXPECT(0xe251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe24e));
        EXPECT(0x2b, gbc.readMem(0xe24f));
        EXPECT(0xe8, gbc.readMem(0xe250));
        // 31 0278
        gbc.setState(0x5f9e, 0x4040, 0xb930, 0x44b5, 0x194d, 0xc2d1, 0x0, 0x0);
        gbc.writeMem(0x5f9e, { 0x31, 0x28, 0xea });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xea28, gbc.sp());
        EXPECT(0x5fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0279
        gbc.setState(0xcad1, 0xda47, 0xaa90, 0x418e, 0x8d74, 0x7585, 0x1, 0x1);
        gbc.writeMem(0xcad1, { 0x31, 0x97, 0xe });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe97, gbc.sp());
        EXPECT(0xcad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcad1));
        EXPECT(0x97, gbc.readMem(0xcad2));
        EXPECT(0xe, gbc.readMem(0xcad3));
        // 31 027A
        gbc.setState(0xca03, 0xce3a, 0x26b0, 0x2bae, 0xf953, 0x47a2, 0x1, 0x0);
        gbc.writeMem(0xca03, { 0x31, 0xd0, 0x12 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x12d0, gbc.sp());
        EXPECT(0xca06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xca03));
        EXPECT(0xd0, gbc.readMem(0xca04));
        EXPECT(0x12, gbc.readMem(0xca05));
        // 31 027B
        gbc.setState(0xdd26, 0x8152, 0x68f0, 0xbe34, 0x41d2, 0x2ec2, 0x1, 0x1);
        gbc.writeMem(0xdd26, { 0x31, 0xf8, 0xcc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xccf8, gbc.sp());
        EXPECT(0xdd29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdd26));
        EXPECT(0xf8, gbc.readMem(0xdd27));
        EXPECT(0xcc, gbc.readMem(0xdd28));
        // 31 027C
        gbc.setState(0x93e, 0x2ca7, 0x1b30, 0x37d5, 0xa60, 0xd8ed, 0x0, 0x0);
        gbc.writeMem(0x93e, { 0x31, 0x2f, 0xa4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa42f, gbc.sp());
        EXPECT(0x941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 027D
        gbc.setState(0xe84d, 0x5865, 0x8d60, 0x98c4, 0xd411, 0xc3d6, 0x0, 0x0);
        gbc.writeMem(0xe84d, { 0x31, 0xd4, 0xae });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xaed4, gbc.sp());
        EXPECT(0xe850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe84d));
        EXPECT(0xd4, gbc.readMem(0xe84e));
        EXPECT(0xae, gbc.readMem(0xe84f));
        // 31 027E
        gbc.setState(0x5413, 0x2291, 0x28b0, 0xd977, 0xe5f7, 0x6522, 0x1, 0x0);
        gbc.writeMem(0x5413, { 0x31, 0xb7, 0x4f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4fb7, gbc.sp());
        EXPECT(0x5416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 027F
        gbc.setState(0x74a3, 0x182b, 0xf030, 0xffae, 0xdeee, 0x38b9, 0x0, 0x0);
        gbc.writeMem(0x74a3, { 0x31, 0xe5, 0x87 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x87e5, gbc.sp());
        EXPECT(0x74a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0280
        gbc.setState(0x4a4d, 0xd3ca, 0xbf30, 0xeb34, 0xe8d7, 0xdcbe, 0x1, 0x1);
        gbc.writeMem(0x4a4d, { 0x31, 0x92, 0xbb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbb92, gbc.sp());
        EXPECT(0x4a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0281
        gbc.setState(0x93d6, 0x7847, 0xbb20, 0x98be, 0x789e, 0x2d05, 0x0, 0x1);
        gbc.writeMem(0x93d6, { 0x31, 0x5a, 0x4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x45a, gbc.sp());
        EXPECT(0x93d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x93d6));
        EXPECT(0x5a, gbc.readMem(0x93d7));
        EXPECT(0x4, gbc.readMem(0x93d8));
        // 31 0282
        gbc.setState(0x3b86, 0x6f2b, 0x34c0, 0x17f0, 0x907d, 0xd7a4, 0x1, 0x1);
        gbc.writeMem(0x3b86, { 0x31, 0x75, 0xae });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xae75, gbc.sp());
        EXPECT(0x3b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0283
        gbc.setState(0x1eec, 0x41b3, 0x1280, 0x2453, 0xea98, 0xb407, 0x1, 0x0);
        gbc.writeMem(0x1eec, { 0x31, 0x20, 0x6e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6e20, gbc.sp());
        EXPECT(0x1eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0284
        gbc.setState(0xc6e7, 0x7b3, 0x46a0, 0x7472, 0xb1b3, 0x435b, 0x1, 0x0);
        gbc.writeMem(0xc6e7, { 0x31, 0xf1, 0xc0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc0f1, gbc.sp());
        EXPECT(0xc6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc6e7));
        EXPECT(0xf1, gbc.readMem(0xc6e8));
        EXPECT(0xc0, gbc.readMem(0xc6e9));
        // 31 0285
        gbc.setState(0x115a, 0x70f6, 0x8e10, 0x2d58, 0xb18d, 0x9954, 0x1, 0x0);
        gbc.writeMem(0x115a, { 0x31, 0x1d, 0x2f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2f1d, gbc.sp());
        EXPECT(0x115d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0286
        gbc.setState(0x1c65, 0x66ed, 0x7070, 0xa640, 0x3842, 0x8ad0, 0x0, 0x0);
        gbc.writeMem(0x1c65, { 0x31, 0xde, 0x83 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x83de, gbc.sp());
        EXPECT(0x1c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0287
        gbc.setState(0xddcb, 0x9b9, 0xc130, 0x9a46, 0x3589, 0xe36b, 0x0, 0x1);
        gbc.writeMem(0xddcb, { 0x31, 0xd9, 0xdc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdcd9, gbc.sp());
        EXPECT(0xddce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xddcb));
        EXPECT(0xd9, gbc.readMem(0xddcc));
        EXPECT(0xdc, gbc.readMem(0xddcd));
        // 31 0288
        gbc.setState(0x34f2, 0x658b, 0x66b0, 0xdb92, 0xf841, 0xd97a, 0x0, 0x0);
        gbc.writeMem(0x34f2, { 0x31, 0xc9, 0xb3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb3c9, gbc.sp());
        EXPECT(0x34f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0289
        gbc.setState(0xec03, 0x4432, 0x3210, 0xcdd3, 0xb35, 0xe64, 0x0, 0x0);
        gbc.writeMem(0xec03, { 0x31, 0xfb, 0x8a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8afb, gbc.sp());
        EXPECT(0xec06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xec03));
        EXPECT(0xfb, gbc.readMem(0xec04));
        EXPECT(0x8a, gbc.readMem(0xec05));
        // 31 028A
        gbc.setState(0xbf25, 0x229d, 0x2900, 0x3f49, 0xdc62, 0xe835, 0x1, 0x1);
        gbc.writeMem(0xbf25, { 0x31, 0xd2, 0xce });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xced2, gbc.sp());
        EXPECT(0xbf28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbf25));
        EXPECT(0xd2, gbc.readMem(0xbf26));
        EXPECT(0xce, gbc.readMem(0xbf27));
        // 31 028B
        gbc.setState(0x4523, 0x9be1, 0x3600, 0xd6fd, 0x3eb8, 0x2cc6, 0x1, 0x0);
        gbc.writeMem(0x4523, { 0x31, 0x70, 0x66 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6670, gbc.sp());
        EXPECT(0x4526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 028C
        gbc.setState(0x3903, 0x2189, 0x7800, 0x9b69, 0xe3a7, 0x4c37, 0x1, 0x1);
        gbc.writeMem(0x3903, { 0x31, 0x18, 0x27 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2718, gbc.sp());
        EXPECT(0x3906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 028D
        gbc.setState(0x9d3, 0xbcc6, 0x7470, 0xdfe3, 0x31b5, 0x6cdd, 0x0, 0x1);
        gbc.writeMem(0x9d3, { 0x31, 0x5c, 0xcb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcb5c, gbc.sp());
        EXPECT(0x9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 028E
        gbc.setState(0x938, 0xcbd5, 0xf9d0, 0x4cf9, 0xf8bf, 0x3e9c, 0x1, 0x1);
        gbc.writeMem(0x938, { 0x31, 0x2a, 0xae });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xae2a, gbc.sp());
        EXPECT(0x93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 028F
        gbc.setState(0xc4de, 0x9c60, 0x46b0, 0x883c, 0x9aac, 0xa50a, 0x1, 0x0);
        gbc.writeMem(0xc4de, { 0x31, 0x78, 0x3c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3c78, gbc.sp());
        EXPECT(0xc4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc4de));
        EXPECT(0x78, gbc.readMem(0xc4df));
        EXPECT(0x3c, gbc.readMem(0xc4e0));
        // 31 0290
        gbc.setState(0xd9bc, 0x6d8d, 0x9240, 0xe96f, 0xb0cc, 0x2a0e, 0x0, 0x0);
        gbc.writeMem(0xd9bc, { 0x31, 0xb7, 0xad });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xadb7, gbc.sp());
        EXPECT(0xd9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd9bc));
        EXPECT(0xb7, gbc.readMem(0xd9bd));
        EXPECT(0xad, gbc.readMem(0xd9be));
        // 31 0291
        gbc.setState(0x748a, 0x632d, 0x2c50, 0xb106, 0xad23, 0xc635, 0x0, 0x1);
        gbc.writeMem(0x748a, { 0x31, 0xd8, 0x9c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9cd8, gbc.sp());
        EXPECT(0x748d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0292
        gbc.setState(0xd6c6, 0xeb5f, 0x6890, 0xc751, 0x6be6, 0x2b01, 0x1, 0x1);
        gbc.writeMem(0xd6c6, { 0x31, 0x34, 0x7f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7f34, gbc.sp());
        EXPECT(0xd6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd6c6));
        EXPECT(0x34, gbc.readMem(0xd6c7));
        EXPECT(0x7f, gbc.readMem(0xd6c8));
        // 31 0293
        gbc.setState(0x1561, 0x7cd9, 0x18d0, 0x5c74, 0x2715, 0x6955, 0x1, 0x1);
        gbc.writeMem(0x1561, { 0x31, 0xbc, 0x74 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x74bc, gbc.sp());
        EXPECT(0x1564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0294
        gbc.setState(0x610c, 0x8c0f, 0xdb20, 0xd16f, 0xc6c7, 0x39ea, 0x1, 0x1);
        gbc.writeMem(0x610c, { 0x31, 0xb5, 0x4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4b5, gbc.sp());
        EXPECT(0x610f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0295
        gbc.setState(0x48ba, 0xd624, 0x4de0, 0xa79f, 0x4261, 0x533, 0x0, 0x1);
        gbc.writeMem(0x48ba, { 0x31, 0x7b, 0x2b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2b7b, gbc.sp());
        EXPECT(0x48bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0296
        gbc.setState(0x1bfe, 0x180e, 0x320, 0x1c4f, 0x407a, 0xd180, 0x1, 0x1);
        gbc.writeMem(0x1bfe, { 0x31, 0xd7, 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb7d7, gbc.sp());
        EXPECT(0x1c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0298
        gbc.setState(0x4476, 0xa80f, 0x2d00, 0xbd68, 0x1639, 0xc2e7, 0x0, 0x0);
        gbc.writeMem(0x4476, { 0x31, 0xe, 0x64 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x640e, gbc.sp());
        EXPECT(0x4479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0299
        gbc.setState(0x3bab, 0x66e2, 0xd9c0, 0xee, 0x7e16, 0xfb93, 0x1, 0x1);
        gbc.writeMem(0x3bab, { 0x31, 0x7d, 0xa8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa87d, gbc.sp());
        EXPECT(0x3bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 029A
        gbc.setState(0x4b39, 0x58cf, 0x6ed0, 0x1545, 0x28ac, 0x1696, 0x1, 0x0);
        gbc.writeMem(0x4b39, { 0x31, 0x45, 0x35 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3545, gbc.sp());
        EXPECT(0x4b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 029B
        gbc.setState(0x6bc4, 0x35d6, 0xd8b0, 0x8754, 0x2937, 0x31ba, 0x0, 0x1);
        gbc.writeMem(0x6bc4, { 0x31, 0xb1, 0x7d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7db1, gbc.sp());
        EXPECT(0x6bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 029C
        gbc.setState(0xdfe1, 0xb655, 0xc160, 0x32b5, 0x3607, 0x8845, 0x1, 0x1);
        gbc.writeMem(0xdfe1, { 0x31, 0xfa, 0x5e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5efa, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdfe1));
        EXPECT(0xfa, gbc.readMem(0xdfe2));
        EXPECT(0x5e, gbc.readMem(0xdfe3));
        // 31 029D
        gbc.setState(0xc7b2, 0xcba7, 0x2f40, 0xd2af, 0xa6f3, 0xfac2, 0x0, 0x1);
        gbc.writeMem(0xc7b2, { 0x31, 0x2f, 0x57 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x572f, gbc.sp());
        EXPECT(0xc7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc7b2));
        EXPECT(0x2f, gbc.readMem(0xc7b3));
        EXPECT(0x57, gbc.readMem(0xc7b4));
        // 31 029E
        gbc.setState(0xe6be, 0xb7df, 0x67f0, 0x71b8, 0x4943, 0x834b, 0x1, 0x0);
        gbc.writeMem(0xe6be, { 0x31, 0xb3, 0xc5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc5b3, gbc.sp());
        EXPECT(0xe6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe6be));
        EXPECT(0xb3, gbc.readMem(0xe6bf));
        EXPECT(0xc5, gbc.readMem(0xe6c0));
        // 31 029F
        gbc.setState(0x8ffb, 0xf52c, 0xccb0, 0x392e, 0x8362, 0x2c7, 0x1, 0x0);
        gbc.writeMem(0x8ffb, { 0x31, 0x6e, 0xef });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xef6e, gbc.sp());
        EXPECT(0x8ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8ffb));
        EXPECT(0x6e, gbc.readMem(0x8ffc));
        EXPECT(0xef, gbc.readMem(0x8ffd));
        // 31 02A0
        gbc.setState(0x4d32, 0x188b, 0xd0f0, 0x8ad2, 0xf783, 0xeaea, 0x1, 0x0);
        gbc.writeMem(0x4d32, { 0x31, 0x82, 0x21 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2182, gbc.sp());
        EXPECT(0x4d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02A1
        gbc.setState(0x20e8, 0x6d85, 0x1730, 0x4d69, 0xc164, 0x93e, 0x1, 0x1);
        gbc.writeMem(0x20e8, { 0x31, 0xff, 0xba });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbaff, gbc.sp());
        EXPECT(0x20eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02A2
        gbc.setState(0x599e, 0xffbb, 0xfba0, 0x7256, 0x84fd, 0xa3ca, 0x1, 0x0);
        gbc.writeMem(0x599e, { 0x31, 0x5a, 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2d5a, gbc.sp());
        EXPECT(0x59a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02A3
        gbc.setState(0x2306, 0xdf24, 0xf630, 0x2d9b, 0x9935, 0xb2e6, 0x1, 0x1);
        gbc.writeMem(0x2306, { 0x31, 0x92, 0xb9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb992, gbc.sp());
        EXPECT(0x2309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02A4
        gbc.setState(0x7672, 0x3159, 0xd7d0, 0x422c, 0xd130, 0x4ee9, 0x1, 0x0);
        gbc.writeMem(0x7672, { 0x31, 0x29, 0xac });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xac29, gbc.sp());
        EXPECT(0x7675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02A5
        gbc.setState(0x1a80, 0x1d15, 0x2ad0, 0x2994, 0x8714, 0x7ebc, 0x0, 0x0);
        gbc.writeMem(0x1a80, { 0x31, 0x36, 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8936, gbc.sp());
        EXPECT(0x1a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02A6
        gbc.setState(0x3357, 0x3511, 0x3b60, 0xba0f, 0xf219, 0xaed8, 0x1, 0x0);
        gbc.writeMem(0x3357, { 0x31, 0x22, 0xfb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfb22, gbc.sp());
        EXPECT(0x335a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02A7
        gbc.setState(0xdd69, 0xe08d, 0xa950, 0x5f6b, 0x7e29, 0xac6d, 0x1, 0x0);
        gbc.writeMem(0xdd69, { 0x31, 0x11, 0xe5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe511, gbc.sp());
        EXPECT(0xdd6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdd69));
        EXPECT(0x11, gbc.readMem(0xdd6a));
        EXPECT(0xe5, gbc.readMem(0xdd6b));
        // 31 02A9
        gbc.setState(0x494c, 0x526f, 0xebc0, 0x5ff6, 0xe3f5, 0xd120, 0x1, 0x0);
        gbc.writeMem(0x494c, { 0x31, 0xd, 0x4a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4a0d, gbc.sp());
        EXPECT(0x494f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02AA
        gbc.setState(0x42fe, 0xac74, 0xfbe0, 0x70ba, 0x79be, 0x989b, 0x0, 0x1);
        gbc.writeMem(0x42fe, { 0x31, 0xf1, 0x1d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1df1, gbc.sp());
        EXPECT(0x4301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02AB
        gbc.setState(0xd843, 0x971c, 0x4d20, 0x1294, 0x3ee4, 0xacd, 0x0, 0x1);
        gbc.writeMem(0xd843, { 0x31, 0x7f, 0x60 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x607f, gbc.sp());
        EXPECT(0xd846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd843));
        EXPECT(0x7f, gbc.readMem(0xd844));
        EXPECT(0x60, gbc.readMem(0xd845));
        // 31 02AD
        gbc.setState(0x81b, 0xbe20, 0xf240, 0x1bad, 0x11cb, 0x2009, 0x1, 0x1);
        gbc.writeMem(0x81b, { 0x31, 0x72, 0x65 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6572, gbc.sp());
        EXPECT(0x81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02AE
        gbc.setState(0x4de1, 0x6048, 0xd260, 0xae9d, 0x21c7, 0x9bed, 0x0, 0x0);
        gbc.writeMem(0x4de1, { 0x31, 0xc3, 0xe0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe0c3, gbc.sp());
        EXPECT(0x4de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02AF
        gbc.setState(0xe9cc, 0xa8cf, 0x51d0, 0xe57d, 0x72b9, 0x64ab, 0x0, 0x1);
        gbc.writeMem(0xe9cc, { 0x31, 0xd, 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9c0d, gbc.sp());
        EXPECT(0xe9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe9cc));
        EXPECT(0xd, gbc.readMem(0xe9cd));
        EXPECT(0x9c, gbc.readMem(0xe9ce));
        // 31 02B0
        gbc.setState(0xc546, 0xff62, 0xc170, 0xa630, 0x600d, 0xeec, 0x1, 0x1);
        gbc.writeMem(0xc546, { 0x31, 0xe1, 0x5e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5ee1, gbc.sp());
        EXPECT(0xc549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc546));
        EXPECT(0xe1, gbc.readMem(0xc547));
        EXPECT(0x5e, gbc.readMem(0xc548));
        // 31 02B1
        gbc.setState(0x2d4f, 0xf0b8, 0xa210, 0xeb53, 0x5e51, 0x289d, 0x0, 0x0);
        gbc.writeMem(0x2d4f, { 0x31, 0xe6, 0x30 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x30e6, gbc.sp());
        EXPECT(0x2d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02B2
        gbc.setState(0xb52a, 0x4e64, 0x8930, 0x5d95, 0x871e, 0x53f3, 0x1, 0x1);
        gbc.writeMem(0xb52a, { 0x31, 0x69, 0x23 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2369, gbc.sp());
        EXPECT(0xb52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb52a));
        EXPECT(0x69, gbc.readMem(0xb52b));
        EXPECT(0x23, gbc.readMem(0xb52c));
        // 31 02B3
        gbc.setState(0xc13d, 0x413, 0x8560, 0xda6a, 0xb4ad, 0x6dbd, 0x1, 0x0);
        gbc.writeMem(0xc13d, { 0x31, 0x71, 0x88 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8871, gbc.sp());
        EXPECT(0xc140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc13d));
        EXPECT(0x71, gbc.readMem(0xc13e));
        EXPECT(0x88, gbc.readMem(0xc13f));
        // 31 02B4
        gbc.setState(0xa45f, 0xba18, 0x8cb0, 0x2071, 0xa586, 0xd80, 0x0, 0x1);
        gbc.writeMem(0xa45f, { 0x31, 0xb1, 0x24 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x24b1, gbc.sp());
        EXPECT(0xa462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa45f));
        EXPECT(0xb1, gbc.readMem(0xa460));
        EXPECT(0x24, gbc.readMem(0xa461));
        // 31 02B5
        gbc.setState(0x23f9, 0xce19, 0x6470, 0x37b9, 0x9ae9, 0xa116, 0x1, 0x1);
        gbc.writeMem(0x23f9, { 0x31, 0x6e, 0x5c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5c6e, gbc.sp());
        EXPECT(0x23fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02B6
        gbc.setState(0x6215, 0xe5e6, 0x52c0, 0x5922, 0x8130, 0x24a1, 0x0, 0x0);
        gbc.writeMem(0x6215, { 0x31, 0xb3, 0x3f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3fb3, gbc.sp());
        EXPECT(0x6218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02B7
        gbc.setState(0x8ea4, 0xdc32, 0xdf0, 0xda5f, 0x8a2f, 0x5475, 0x1, 0x1);
        gbc.writeMem(0x8ea4, { 0x31, 0x16, 0xad });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xad16, gbc.sp());
        EXPECT(0x8ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8ea4));
        EXPECT(0x16, gbc.readMem(0x8ea5));
        EXPECT(0xad, gbc.readMem(0x8ea6));
        // 31 02B8
        gbc.setState(0x6d0b, 0xb56c, 0xd7f0, 0x5882, 0x1a14, 0xd8a7, 0x0, 0x1);
        gbc.writeMem(0x6d0b, { 0x31, 0xd6, 0x39 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x39d6, gbc.sp());
        EXPECT(0x6d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02B9
        gbc.setState(0x9fcc, 0x48cc, 0xad60, 0xf16e, 0xb07f, 0x77e9, 0x1, 0x0);
        gbc.writeMem(0x9fcc, { 0x31, 0x4b, 0xeb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xeb4b, gbc.sp());
        EXPECT(0x9fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9fcc));
        EXPECT(0x4b, gbc.readMem(0x9fcd));
        EXPECT(0xeb, gbc.readMem(0x9fce));
        // 31 02BA
        gbc.setState(0xd167, 0x4d5, 0x6040, 0xea1a, 0x64e8, 0x5cf5, 0x1, 0x0);
        gbc.writeMem(0xd167, { 0x31, 0xe6, 0x63 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x63e6, gbc.sp());
        EXPECT(0xd16a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd167));
        EXPECT(0xe6, gbc.readMem(0xd168));
        EXPECT(0x63, gbc.readMem(0xd169));
        // 31 02BB
        gbc.setState(0x5343, 0x6c9d, 0xdb70, 0x172a, 0x7552, 0xcc0, 0x1, 0x0);
        gbc.writeMem(0x5343, { 0x31, 0x5d, 0x3e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3e5d, gbc.sp());
        EXPECT(0x5346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02BC
        gbc.setState(0x1da4, 0x62d5, 0x5c10, 0xf983, 0xd700, 0x7c01, 0x1, 0x1);
        gbc.writeMem(0x1da4, { 0x31, 0xaa, 0x5a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5aaa, gbc.sp());
        EXPECT(0x1da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02BD
        gbc.setState(0x7be0, 0x86ef, 0x24f0, 0xb5e0, 0xb3d7, 0x67e, 0x0, 0x1);
        gbc.writeMem(0x7be0, { 0x31, 0xef, 0x41 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x41ef, gbc.sp());
        EXPECT(0x7be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02BE
        gbc.setState(0x7c84, 0x2d61, 0xb7e0, 0xf439, 0x5a14, 0x47b1, 0x0, 0x1);
        gbc.writeMem(0x7c84, { 0x31, 0x3b, 0x43 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x433b, gbc.sp());
        EXPECT(0x7c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02BF
        gbc.setState(0x2be3, 0x6866, 0x3e40, 0x5144, 0x9d45, 0x8e2d, 0x1, 0x0);
        gbc.writeMem(0x2be3, { 0x31, 0xfb, 0xc9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc9fb, gbc.sp());
        EXPECT(0x2be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02C0
        gbc.setState(0x8e50, 0x68d0, 0xc830, 0xa2f4, 0xef9e, 0x473b, 0x1, 0x1);
        gbc.writeMem(0x8e50, { 0x31, 0x6f, 0x3f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3f6f, gbc.sp());
        EXPECT(0x8e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8e50));
        EXPECT(0x6f, gbc.readMem(0x8e51));
        EXPECT(0x3f, gbc.readMem(0x8e52));
        // 31 02C1
        gbc.setState(0x9c7b, 0x228, 0xaf50, 0x564, 0x31eb, 0x5862, 0x0, 0x0);
        gbc.writeMem(0x9c7b, { 0x31, 0x33, 0x3e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3e33, gbc.sp());
        EXPECT(0x9c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9c7b));
        EXPECT(0x33, gbc.readMem(0x9c7c));
        EXPECT(0x3e, gbc.readMem(0x9c7d));
        // 31 02C3
        gbc.setState(0xd9a2, 0xb989, 0x5c10, 0x4973, 0x1e8e, 0xb2c0, 0x0, 0x1);
        gbc.writeMem(0xd9a2, { 0x31, 0x87, 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8a87, gbc.sp());
        EXPECT(0xd9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd9a2));
        EXPECT(0x87, gbc.readMem(0xd9a3));
        EXPECT(0x8a, gbc.readMem(0xd9a4));
        // 31 02C4
        gbc.setState(0xec79, 0x8eb3, 0x2750, 0x2b73, 0xdd1a, 0x7f7a, 0x0, 0x0);
        gbc.writeMem(0xec79, { 0x31, 0xad, 0xde });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdead, gbc.sp());
        EXPECT(0xec7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xec79));
        EXPECT(0xad, gbc.readMem(0xec7a));
        EXPECT(0xde, gbc.readMem(0xec7b));
        // 31 02C5
        gbc.setState(0x54e6, 0x1a6d, 0x4320, 0x67af, 0xc93f, 0xccb8, 0x0, 0x1);
        gbc.writeMem(0x54e6, { 0x31, 0x2d, 0x36 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x362d, gbc.sp());
        EXPECT(0x54e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02C6
        gbc.setState(0x54ca, 0x91db, 0xc210, 0x7354, 0x76, 0xe775, 0x0, 0x1);
        gbc.writeMem(0x54ca, { 0x31, 0x11, 0x5f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5f11, gbc.sp());
        EXPECT(0x54cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02C7
        gbc.setState(0xd3b4, 0xed71, 0x30a0, 0x280d, 0x80d1, 0x83ae, 0x1, 0x1);
        gbc.writeMem(0xd3b4, { 0x31, 0x27, 0xfa });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfa27, gbc.sp());
        EXPECT(0xd3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd3b4));
        EXPECT(0x27, gbc.readMem(0xd3b5));
        EXPECT(0xfa, gbc.readMem(0xd3b6));
        // 31 02C8
        gbc.setState(0xa2af, 0xa449, 0x36c0, 0x8ac7, 0x4006, 0xa349, 0x0, 0x1);
        gbc.writeMem(0xa2af, { 0x31, 0xb1, 0xe0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe0b1, gbc.sp());
        EXPECT(0xa2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa2af));
        EXPECT(0xb1, gbc.readMem(0xa2b0));
        EXPECT(0xe0, gbc.readMem(0xa2b1));
        // 31 02C9
        gbc.setState(0xefb7, 0x15da, 0xce30, 0x318e, 0x18dd, 0x82fb, 0x0, 0x0);
        gbc.writeMem(0xefb7, { 0x31, 0x17, 0x2b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2b17, gbc.sp());
        EXPECT(0xefba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xefb7));
        EXPECT(0x17, gbc.readMem(0xefb8));
        EXPECT(0x2b, gbc.readMem(0xefb9));
        // 31 02CA
        gbc.setState(0x4480, 0x7da3, 0xaf50, 0xd85e, 0x230f, 0x2f4d, 0x1, 0x0);
        gbc.writeMem(0x4480, { 0x31, 0xa3, 0x72 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x72a3, gbc.sp());
        EXPECT(0x4483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02CC
        gbc.setState(0xb062, 0xe8bc, 0xb5e0, 0xb867, 0x9ae5, 0x14c6, 0x1, 0x0);
        gbc.writeMem(0xb062, { 0x31, 0xb7, 0xcd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcdb7, gbc.sp());
        EXPECT(0xb065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb062));
        EXPECT(0xb7, gbc.readMem(0xb063));
        EXPECT(0xcd, gbc.readMem(0xb064));
        // 31 02CD
        gbc.setState(0x342c, 0x6916, 0x8930, 0x1d0, 0x3aa7, 0x597a, 0x0, 0x1);
        gbc.writeMem(0x342c, { 0x31, 0x3e, 0xd8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd83e, gbc.sp());
        EXPECT(0x342f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02CE
        gbc.setState(0x8baf, 0x6a5d, 0xa820, 0x26d9, 0xd1bf, 0x9ae8, 0x1, 0x1);
        gbc.writeMem(0x8baf, { 0x31, 0xe5, 0x5e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5ee5, gbc.sp());
        EXPECT(0x8bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8baf));
        EXPECT(0xe5, gbc.readMem(0x8bb0));
        EXPECT(0x5e, gbc.readMem(0x8bb1));
        // 31 02CF
        gbc.setState(0x264f, 0xd736, 0x7880, 0x6940, 0xfb15, 0xeccf, 0x1, 0x0);
        gbc.writeMem(0x264f, { 0x31, 0x48, 0x8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x848, gbc.sp());
        EXPECT(0x2652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02D0
        gbc.setState(0x2e83, 0xd31e, 0x1fa0, 0x7274, 0x7003, 0x399d, 0x0, 0x0);
        gbc.writeMem(0x2e83, { 0x31, 0xeb, 0xe1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe1eb, gbc.sp());
        EXPECT(0x2e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02D3
        gbc.setState(0x5b2a, 0x6390, 0x3230, 0x56b, 0x4402, 0xe3cb, 0x0, 0x0);
        gbc.writeMem(0x5b2a, { 0x31, 0x4d, 0xd4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd44d, gbc.sp());
        EXPECT(0x5b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02D4
        gbc.setState(0x55cb, 0x5fe3, 0x1140, 0xaa31, 0x63b7, 0x8d50, 0x0, 0x0);
        gbc.writeMem(0x55cb, { 0x31, 0x7, 0xbd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbd07, gbc.sp());
        EXPECT(0x55ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02D6
        gbc.setState(0xc9e9, 0xc150, 0x2ea0, 0x36aa, 0x4c48, 0x8c7b, 0x1, 0x1);
        gbc.writeMem(0xc9e9, { 0x31, 0x9f, 0x26 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x269f, gbc.sp());
        EXPECT(0xc9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc9e9));
        EXPECT(0x9f, gbc.readMem(0xc9ea));
        EXPECT(0x26, gbc.readMem(0xc9eb));
        // 31 02D7
        gbc.setState(0x2917, 0x1540, 0xfc30, 0x10b5, 0x66e3, 0x8b29, 0x1, 0x0);
        gbc.writeMem(0x2917, { 0x31, 0x9a, 0xd3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd39a, gbc.sp());
        EXPECT(0x291a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02D8
        gbc.setState(0x2404, 0x1976, 0xc990, 0xb90b, 0xb413, 0x6a84, 0x1, 0x0);
        gbc.writeMem(0x2404, { 0x31, 0x48, 0x70 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7048, gbc.sp());
        EXPECT(0x2407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02D9
        gbc.setState(0xaec6, 0x48fe, 0x48c0, 0xa6ba, 0x53a, 0x4537, 0x1, 0x1);
        gbc.writeMem(0xaec6, { 0x31, 0xba, 0x61 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x61ba, gbc.sp());
        EXPECT(0xaec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaec6));
        EXPECT(0xba, gbc.readMem(0xaec7));
        EXPECT(0x61, gbc.readMem(0xaec8));
        // 31 02DA
        gbc.setState(0xd6b6, 0xce95, 0x7280, 0xfdf5, 0xf5ff, 0x46a8, 0x0, 0x0);
        gbc.writeMem(0xd6b6, { 0x31, 0x69, 0x29 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2969, gbc.sp());
        EXPECT(0xd6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd6b6));
        EXPECT(0x69, gbc.readMem(0xd6b7));
        EXPECT(0x29, gbc.readMem(0xd6b8));
        // 31 02DB
        gbc.setState(0x7d3f, 0x2d8, 0x23c0, 0x3b16, 0x7f07, 0xe561, 0x0, 0x0);
        gbc.writeMem(0x7d3f, { 0x31, 0x89, 0xdd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdd89, gbc.sp());
        EXPECT(0x7d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02DC
        gbc.setState(0xb9e4, 0xb134, 0x8890, 0x700a, 0x7a74, 0x43ae, 0x1, 0x1);
        gbc.writeMem(0xb9e4, { 0x31, 0x43, 0x19 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1943, gbc.sp());
        EXPECT(0xb9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb9e4));
        EXPECT(0x43, gbc.readMem(0xb9e5));
        EXPECT(0x19, gbc.readMem(0xb9e6));
        // 31 02DD
        gbc.setState(0x3698, 0xc2b8, 0x6540, 0x44a4, 0xbffc, 0xc3d9, 0x0, 0x0);
        gbc.writeMem(0x3698, { 0x31, 0xdd, 0x21 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x21dd, gbc.sp());
        EXPECT(0x369b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02DF
        gbc.setState(0x6477, 0xddda, 0x4cd0, 0x8c02, 0x7b81, 0xdd88, 0x1, 0x0);
        gbc.writeMem(0x6477, { 0x31, 0x42, 0x72 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7242, gbc.sp());
        EXPECT(0x647a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02E0
        gbc.setState(0xaf2d, 0x40a0, 0xfdb0, 0xdde3, 0x31c1, 0x4465, 0x1, 0x0);
        gbc.writeMem(0xaf2d, { 0x31, 0x9e, 0xdf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdf9e, gbc.sp());
        EXPECT(0xaf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaf2d));
        EXPECT(0x9e, gbc.readMem(0xaf2e));
        EXPECT(0xdf, gbc.readMem(0xaf2f));
        // 31 02E1
        gbc.setState(0x4fa7, 0x3670, 0xc310, 0x9c3b, 0x4f05, 0xf157, 0x1, 0x0);
        gbc.writeMem(0x4fa7, { 0x31, 0xaa, 0x40 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x40aa, gbc.sp());
        EXPECT(0x4faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02E2
        gbc.setState(0xc67e, 0xfa35, 0x1640, 0x35af, 0xa74, 0xd47, 0x0, 0x1);
        gbc.writeMem(0xc67e, { 0x31, 0x53, 0xe8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe853, gbc.sp());
        EXPECT(0xc681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc67e));
        EXPECT(0x53, gbc.readMem(0xc67f));
        EXPECT(0xe8, gbc.readMem(0xc680));
        // 31 02E3
        gbc.setState(0x1ab7, 0x596d, 0xeda0, 0x2e2, 0xd158, 0x9d8d, 0x0, 0x0);
        gbc.writeMem(0x1ab7, { 0x31, 0x18, 0x32 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3218, gbc.sp());
        EXPECT(0x1aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02E4
        gbc.setState(0x6b3c, 0x929a, 0x94f0, 0x2158, 0xb760, 0xecf4, 0x1, 0x0);
        gbc.writeMem(0x6b3c, { 0x31, 0xe9, 0xaa });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xaae9, gbc.sp());
        EXPECT(0x6b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02E5
        gbc.setState(0x2f52, 0x5102, 0x2f30, 0x954b, 0x1a7b, 0xfaba, 0x0, 0x1);
        gbc.writeMem(0x2f52, { 0x31, 0xb1, 0xbe });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbeb1, gbc.sp());
        EXPECT(0x2f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02E6
        gbc.setState(0x5dab, 0x695c, 0x5120, 0x3ffa, 0x44be, 0x1eb5, 0x0, 0x1);
        gbc.writeMem(0x5dab, { 0x31, 0x14, 0x64 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6414, gbc.sp());
        EXPECT(0x5dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02E7
        gbc.setState(0x31df, 0xd7d0, 0xd4c0, 0x70f8, 0x367e, 0xedad, 0x0, 0x0);
        gbc.writeMem(0x31df, { 0x31, 0x64, 0x8d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8d64, gbc.sp());
        EXPECT(0x31e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02E8
        gbc.setState(0x1a76, 0x4e7f, 0xdc70, 0x4253, 0x20e7, 0x92d0, 0x1, 0x0);
        gbc.writeMem(0x1a76, { 0x31, 0x1b, 0xe1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe11b, gbc.sp());
        EXPECT(0x1a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02E9
        gbc.setState(0x3e3a, 0xb70e, 0x35d0, 0x1a29, 0x5397, 0xcc22, 0x0, 0x1);
        gbc.writeMem(0x3e3a, { 0x31, 0xc0, 0xd3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd3c0, gbc.sp());
        EXPECT(0x3e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02EA
        gbc.setState(0xe6f7, 0x5ead, 0xf60, 0x3abd, 0xd27c, 0xdca8, 0x1, 0x1);
        gbc.writeMem(0xe6f7, { 0x31, 0x4f, 0x88 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x884f, gbc.sp());
        EXPECT(0xe6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe6f7));
        EXPECT(0x4f, gbc.readMem(0xe6f8));
        EXPECT(0x88, gbc.readMem(0xe6f9));
        // 31 02EB
        gbc.setState(0x3a79, 0xfe26, 0x6640, 0x8cb3, 0x498e, 0xcbbf, 0x0, 0x1);
        gbc.writeMem(0x3a79, { 0x31, 0x3e, 0xc3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc33e, gbc.sp());
        EXPECT(0x3a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02EC
        gbc.setState(0xdeed, 0x789e, 0xe930, 0x49b5, 0x1a0, 0xb3fc, 0x0, 0x1);
        gbc.writeMem(0xdeed, { 0x31, 0x47, 0xc1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc147, gbc.sp());
        EXPECT(0xdef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdeed));
        EXPECT(0x47, gbc.readMem(0xdeee));
        EXPECT(0xc1, gbc.readMem(0xdeef));
        // 31 02ED
        gbc.setState(0xbb04, 0x5ff3, 0x91f0, 0xa024, 0x9d69, 0x1d9, 0x0, 0x0);
        gbc.writeMem(0xbb04, { 0x31, 0x9, 0x2c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2c09, gbc.sp());
        EXPECT(0xbb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbb04));
        EXPECT(0x9, gbc.readMem(0xbb05));
        EXPECT(0x2c, gbc.readMem(0xbb06));
        // 31 02EE
        gbc.setState(0x28e5, 0xdc89, 0x6380, 0x254a, 0x3dd6, 0xafb4, 0x1, 0x0);
        gbc.writeMem(0x28e5, { 0x31, 0xa8, 0xc9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc9a8, gbc.sp());
        EXPECT(0x28e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02EF
        gbc.setState(0x4a46, 0x665, 0x1cf0, 0x33ad, 0x5f3c, 0xfe3f, 0x0, 0x0);
        gbc.writeMem(0x4a46, { 0x31, 0xa4, 0x3b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3ba4, gbc.sp());
        EXPECT(0x4a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02F0
        gbc.setState(0x14c8, 0x7c4b, 0xc990, 0x2286, 0x82c4, 0x9ca0, 0x0, 0x1);
        gbc.writeMem(0x14c8, { 0x31, 0x23, 0xa2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa223, gbc.sp());
        EXPECT(0x14cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02F1
        gbc.setState(0x4a4a, 0xd894, 0x1810, 0xa05a, 0xb99d, 0x28bb, 0x1, 0x0);
        gbc.writeMem(0x4a4a, { 0x31, 0x2, 0x7d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7d02, gbc.sp());
        EXPECT(0x4a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02F2
        gbc.setState(0x8407, 0xeb2d, 0x9230, 0x6a84, 0xbe79, 0x612d, 0x0, 0x0);
        gbc.writeMem(0x8407, { 0x31, 0x98, 0xe4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe498, gbc.sp());
        EXPECT(0x840a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8407));
        EXPECT(0x98, gbc.readMem(0x8408));
        EXPECT(0xe4, gbc.readMem(0x8409));
        // 31 02F3
        gbc.setState(0x1901, 0xb738, 0x2d90, 0x7398, 0x90a0, 0x6d47, 0x0, 0x1);
        gbc.writeMem(0x1901, { 0x31, 0xb1, 0x30 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x30b1, gbc.sp());
        EXPECT(0x1904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02F4
        gbc.setState(0xb7c8, 0x6ac1, 0x2e00, 0x7a02, 0x8910, 0x864c, 0x1, 0x1);
        gbc.writeMem(0xb7c8, { 0x31, 0x74, 0xe0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe074, gbc.sp());
        EXPECT(0xb7cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb7c8));
        EXPECT(0x74, gbc.readMem(0xb7c9));
        EXPECT(0xe0, gbc.readMem(0xb7ca));
        // 31 02F5
        gbc.setState(0x5884, 0xa32b, 0x9a30, 0xe2eb, 0xced1, 0x6555, 0x0, 0x0);
        gbc.writeMem(0x5884, { 0x31, 0xec, 0xf1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf1ec, gbc.sp());
        EXPECT(0x5887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02F6
        gbc.setState(0xebb0, 0x3ef4, 0xf8f0, 0x6759, 0xb4c3, 0x33e8, 0x0, 0x0);
        gbc.writeMem(0xebb0, { 0x31, 0xbc, 0x6d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6dbc, gbc.sp());
        EXPECT(0xebb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xebb0));
        EXPECT(0xbc, gbc.readMem(0xebb1));
        EXPECT(0x6d, gbc.readMem(0xebb2));
        // 31 02F7
        gbc.setState(0xda9e, 0x5bbd, 0xc0e0, 0xcd40, 0x945a, 0x35a2, 0x1, 0x0);
        gbc.writeMem(0xda9e, { 0x31, 0xa3, 0xf4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf4a3, gbc.sp());
        EXPECT(0xdaa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xda9e));
        EXPECT(0xa3, gbc.readMem(0xda9f));
        EXPECT(0xf4, gbc.readMem(0xdaa0));
        // 31 02F8
        gbc.setState(0xda67, 0x5320, 0x1e70, 0x56f4, 0x7992, 0x69d3, 0x0, 0x0);
        gbc.writeMem(0xda67, { 0x31, 0x15, 0x71 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7115, gbc.sp());
        EXPECT(0xda6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xda67));
        EXPECT(0x15, gbc.readMem(0xda68));
        EXPECT(0x71, gbc.readMem(0xda69));
        // 31 02F9
        gbc.setState(0x5683, 0xf850, 0x6000, 0x9368, 0xd93a, 0xdd17, 0x0, 0x1);
        gbc.writeMem(0x5683, { 0x31, 0x4b, 0xeb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xeb4b, gbc.sp());
        EXPECT(0x5686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02FA
        gbc.setState(0xab4, 0x1f96, 0x420, 0x9283, 0x26b3, 0x75e4, 0x0, 0x1);
        gbc.writeMem(0xab4, { 0x31, 0x99, 0x7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x799, gbc.sp());
        EXPECT(0xab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 02FB
        gbc.setState(0x435, 0xfc5b, 0x91b0, 0xa639, 0x3ae5, 0xdc21, 0x1, 0x0);
        gbc.writeMem(0x435, { 0x31, 0x6e, 0x5a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5a6e, gbc.sp());
        EXPECT(0x438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02FC
        gbc.setState(0xb253, 0x28d2, 0x3a20, 0xf62f, 0x56b0, 0xd1cc, 0x1, 0x0);
        gbc.writeMem(0xb253, { 0x31, 0x30, 0x1e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1e30, gbc.sp());
        EXPECT(0xb256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb253));
        EXPECT(0x30, gbc.readMem(0xb254));
        EXPECT(0x1e, gbc.readMem(0xb255));
        // 31 02FD
        gbc.setState(0x42d6, 0x853a, 0x2df0, 0x2e9a, 0x179c, 0x69b2, 0x1, 0x0);
        gbc.writeMem(0x42d6, { 0x31, 0xcb, 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1acb, gbc.sp());
        EXPECT(0x42d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 02FE
        gbc.setState(0xd3eb, 0xa60d, 0x4940, 0xbdb2, 0xce59, 0xb303, 0x0, 0x1);
        gbc.writeMem(0xd3eb, { 0x31, 0xcf, 0xcf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcfcf, gbc.sp());
        EXPECT(0xd3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd3eb));
        EXPECT(0xcf, gbc.readMem(0xd3ec));
        EXPECT(0xcf, gbc.readMem(0xd3ed));
        // 31 02FF
        gbc.setState(0xb622, 0x2cff, 0xc8f0, 0x7ee9, 0x21f2, 0x6220, 0x0, 0x1);
        gbc.writeMem(0xb622, { 0x31, 0xac, 0x6b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6bac, gbc.sp());
        EXPECT(0xb625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb622));
        EXPECT(0xac, gbc.readMem(0xb623));
        EXPECT(0x6b, gbc.readMem(0xb624));
        // 31 0300
        gbc.setState(0x4ab6, 0xaca2, 0x2d40, 0x4a3c, 0xa839, 0xae4d, 0x1, 0x1);
        gbc.writeMem(0x4ab6, { 0x31, 0xcc, 0x18 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x18cc, gbc.sp());
        EXPECT(0x4ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0301
        gbc.setState(0x30ce, 0x6bad, 0x7cf0, 0x9181, 0x2c0, 0xfb20, 0x1, 0x1);
        gbc.writeMem(0x30ce, { 0x31, 0x51, 0xda });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xda51, gbc.sp());
        EXPECT(0x30d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0302
        gbc.setState(0x53be, 0x4b25, 0x170, 0xee9d, 0xc626, 0xc76c, 0x0, 0x1);
        gbc.writeMem(0x53be, { 0x31, 0xd4, 0x34 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x34d4, gbc.sp());
        EXPECT(0x53c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0303
        gbc.setState(0x6452, 0x43d6, 0xbb00, 0xf469, 0x1b33, 0x77a9, 0x1, 0x1);
        gbc.writeMem(0x6452, { 0x31, 0x59, 0x3c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3c59, gbc.sp());
        EXPECT(0x6455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0305
        gbc.setState(0x31a7, 0x59b3, 0x60b0, 0x76db, 0x752, 0x635d, 0x1, 0x1);
        gbc.writeMem(0x31a7, { 0x31, 0x19, 0x84 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8419, gbc.sp());
        EXPECT(0x31aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0306
        gbc.setState(0xcf0f, 0x4f56, 0xf590, 0xfb6b, 0xc554, 0xb08e, 0x1, 0x0);
        gbc.writeMem(0xcf0f, { 0x31, 0xea, 0x7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7ea, gbc.sp());
        EXPECT(0xcf12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcf0f));
        EXPECT(0xea, gbc.readMem(0xcf10));
        EXPECT(0x7, gbc.readMem(0xcf11));
        // 31 0307
        gbc.setState(0x88a1, 0xfa65, 0xa8d0, 0x8f08, 0x6d33, 0x3170, 0x1, 0x0);
        gbc.writeMem(0x88a1, { 0x31, 0xc6, 0x96 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x96c6, gbc.sp());
        EXPECT(0x88a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x88a1));
        EXPECT(0xc6, gbc.readMem(0x88a2));
        EXPECT(0x96, gbc.readMem(0x88a3));
        // 31 0308
        gbc.setState(0x6c25, 0x367c, 0x1a90, 0x5c07, 0xe369, 0xc844, 0x0, 0x0);
        gbc.writeMem(0x6c25, { 0x31, 0xb8, 0xba });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbab8, gbc.sp());
        EXPECT(0x6c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0309
        gbc.setState(0xccc3, 0x6876, 0x8160, 0x49ef, 0x3961, 0x3a44, 0x1, 0x0);
        gbc.writeMem(0xccc3, { 0x31, 0x65, 0xf5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf565, gbc.sp());
        EXPECT(0xccc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xccc3));
        EXPECT(0x65, gbc.readMem(0xccc4));
        EXPECT(0xf5, gbc.readMem(0xccc5));
        // 31 030A
        gbc.setState(0x25ce, 0xe4c7, 0xea60, 0x3d06, 0xd024, 0xcc8c, 0x0, 0x1);
        gbc.writeMem(0x25ce, { 0x31, 0x9a, 0x23 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x239a, gbc.sp());
        EXPECT(0x25d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 030B
        gbc.setState(0xcce5, 0x3478, 0xfa30, 0x58bf, 0xe313, 0x8ff1, 0x1, 0x0);
        gbc.writeMem(0xcce5, { 0x31, 0x78, 0x6c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6c78, gbc.sp());
        EXPECT(0xcce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcce5));
        EXPECT(0x78, gbc.readMem(0xcce6));
        EXPECT(0x6c, gbc.readMem(0xcce7));
        // 31 030C
        gbc.setState(0xb7f7, 0x3025, 0xf290, 0x7ead, 0xfb78, 0xe407, 0x0, 0x1);
        gbc.writeMem(0xb7f7, { 0x31, 0xa0, 0xb8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb8a0, gbc.sp());
        EXPECT(0xb7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb7f7));
        EXPECT(0xa0, gbc.readMem(0xb7f8));
        EXPECT(0xb8, gbc.readMem(0xb7f9));
        // 31 030D
        gbc.setState(0x101b, 0xf4c3, 0x8f90, 0x6f28, 0xb536, 0x7c4c, 0x0, 0x0);
        gbc.writeMem(0x101b, { 0x31, 0x9b, 0x9e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9e9b, gbc.sp());
        EXPECT(0x101e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 030E
        gbc.setState(0x6248, 0xe4a7, 0x490, 0x494d, 0x30f, 0x95b6, 0x0, 0x0);
        gbc.writeMem(0x6248, { 0x31, 0x41, 0xcb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcb41, gbc.sp());
        EXPECT(0x624b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 030F
        gbc.setState(0x5d9a, 0x4942, 0xd330, 0x7dd7, 0x2cfe, 0xc055, 0x0, 0x0);
        gbc.writeMem(0x5d9a, { 0x31, 0x5c, 0xc8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc85c, gbc.sp());
        EXPECT(0x5d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0310
        gbc.setState(0x13e7, 0xb621, 0xfde0, 0xd3cd, 0x13af, 0xed61, 0x0, 0x1);
        gbc.writeMem(0x13e7, { 0x31, 0x40, 0x6c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6c40, gbc.sp());
        EXPECT(0x13ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0311
        gbc.setState(0x9f44, 0x3a7d, 0xf240, 0x2d91, 0x8bbd, 0x2819, 0x0, 0x1);
        gbc.writeMem(0x9f44, { 0x31, 0xa2, 0xa2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa2a2, gbc.sp());
        EXPECT(0x9f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9f44));
        EXPECT(0xa2, gbc.readMem(0x9f45));
        EXPECT(0xa2, gbc.readMem(0x9f46));
        // 31 0313
        gbc.setState(0xa5ff, 0x235a, 0x14d0, 0x6f19, 0xc063, 0xcf64, 0x0, 0x0);
        gbc.writeMem(0xa5ff, { 0x31, 0x33, 0xd3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd333, gbc.sp());
        EXPECT(0xa602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa5ff));
        EXPECT(0x33, gbc.readMem(0xa600));
        EXPECT(0xd3, gbc.readMem(0xa601));
        // 31 0314
        gbc.setState(0xbd30, 0x630e, 0xe9d0, 0x9b2e, 0xba4e, 0xf521, 0x0, 0x0);
        gbc.writeMem(0xbd30, { 0x31, 0x79, 0xf1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf179, gbc.sp());
        EXPECT(0xbd33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbd30));
        EXPECT(0x79, gbc.readMem(0xbd31));
        EXPECT(0xf1, gbc.readMem(0xbd32));
        // 31 0316
        gbc.setState(0x703c, 0x583, 0x610, 0x6fe3, 0x1c63, 0x26b2, 0x1, 0x0);
        gbc.writeMem(0x703c, { 0x31, 0x94, 0x20 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2094, gbc.sp());
        EXPECT(0x703f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0317
        gbc.setState(0x5846, 0x2133, 0x50b0, 0xce2a, 0x1f8a, 0x1c91, 0x1, 0x1);
        gbc.writeMem(0x5846, { 0x31, 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x46cb, gbc.sp());
        EXPECT(0x5849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0318
        gbc.setState(0xc961, 0x54d8, 0x3d40, 0xb386, 0x830c, 0x57b2, 0x0, 0x1);
        gbc.writeMem(0xc961, { 0x31, 0x91, 0x8a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8a91, gbc.sp());
        EXPECT(0xc964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc961));
        EXPECT(0x91, gbc.readMem(0xc962));
        EXPECT(0x8a, gbc.readMem(0xc963));
        // 31 0319
        gbc.setState(0x30bc, 0x3762, 0x8920, 0xe691, 0xb58f, 0xe327, 0x0, 0x1);
        gbc.writeMem(0x30bc, { 0x31, 0xa, 0x74 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x740a, gbc.sp());
        EXPECT(0x30bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 031A
        gbc.setState(0xabaf, 0xe0a1, 0xc540, 0xcb17, 0xf067, 0x692c, 0x0, 0x0);
        gbc.writeMem(0xabaf, { 0x31, 0x2f, 0x2d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2d2f, gbc.sp());
        EXPECT(0xabb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xabaf));
        EXPECT(0x2f, gbc.readMem(0xabb0));
        EXPECT(0x2d, gbc.readMem(0xabb1));
        // 31 031B
        gbc.setState(0x377e, 0xfe99, 0xb6b0, 0xe7a2, 0x364c, 0x8cb2, 0x1, 0x1);
        gbc.writeMem(0x377e, { 0x31, 0xa0, 0x34 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x34a0, gbc.sp());
        EXPECT(0x3781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 031C
        gbc.setState(0xd929, 0x36fc, 0x9020, 0x97c3, 0x836b, 0x186a, 0x1, 0x1);
        gbc.writeMem(0xd929, { 0x31, 0xfa, 0x18 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x18fa, gbc.sp());
        EXPECT(0xd92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd929));
        EXPECT(0xfa, gbc.readMem(0xd92a));
        EXPECT(0x18, gbc.readMem(0xd92b));
        // 31 031D
        gbc.setState(0x77c, 0x3a83, 0x1390, 0xc32, 0xa2ef, 0x41e2, 0x0, 0x1);
        gbc.writeMem(0x77c, { 0x31, 0x2f, 0x21 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x212f, gbc.sp());
        EXPECT(0x77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 031E
        gbc.setState(0x39b3, 0xb498, 0x4570, 0x279d, 0x883, 0xb002, 0x1, 0x0);
        gbc.writeMem(0x39b3, { 0x31, 0x79, 0x97 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9779, gbc.sp());
        EXPECT(0x39b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 031F
        gbc.setState(0xb2b4, 0x68c2, 0x29e0, 0x165e, 0x878a, 0x8f3a, 0x1, 0x0);
        gbc.writeMem(0xb2b4, { 0x31, 0x7b, 0x51 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x517b, gbc.sp());
        EXPECT(0xb2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb2b4));
        EXPECT(0x7b, gbc.readMem(0xb2b5));
        EXPECT(0x51, gbc.readMem(0xb2b6));
        // 31 0320
        gbc.setState(0xafcc, 0xf5c2, 0x8f60, 0x5f16, 0xa2c8, 0xaf27, 0x1, 0x0);
        gbc.writeMem(0xafcc, { 0x31, 0xb5, 0x7d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7db5, gbc.sp());
        EXPECT(0xafcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xafcc));
        EXPECT(0xb5, gbc.readMem(0xafcd));
        EXPECT(0x7d, gbc.readMem(0xafce));
        // 31 0321
        gbc.setState(0xf18, 0xd9c8, 0x9ce0, 0xc469, 0x1deb, 0x6505, 0x1, 0x1);
        gbc.writeMem(0xf18, { 0x31, 0x3d, 0x7e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7e3d, gbc.sp());
        EXPECT(0xf1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0322
        gbc.setState(0xafe5, 0x833b, 0x2050, 0x33ca, 0xad6b, 0x5a1b, 0x0, 0x0);
        gbc.writeMem(0xafe5, { 0x31, 0xbf, 0x34 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x34bf, gbc.sp());
        EXPECT(0xafe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xafe5));
        EXPECT(0xbf, gbc.readMem(0xafe6));
        EXPECT(0x34, gbc.readMem(0xafe7));
        // 31 0323
        gbc.setState(0x7063, 0x7438, 0xd70, 0x4496, 0x64ae, 0xd611, 0x1, 0x1);
        gbc.writeMem(0x7063, { 0x31, 0xd2, 0x14 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x14d2, gbc.sp());
        EXPECT(0x7066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0324
        gbc.setState(0x74d5, 0x7af2, 0x74a0, 0x25aa, 0x8af7, 0x278d, 0x0, 0x1);
        gbc.writeMem(0x74d5, { 0x31, 0x3b, 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x943b, gbc.sp());
        EXPECT(0x74d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0325
        gbc.setState(0xbef8, 0x7f1a, 0x88a0, 0x8790, 0x383e, 0x92a6, 0x1, 0x1);
        gbc.writeMem(0xbef8, { 0x31, 0xfe, 0x24 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x24fe, gbc.sp());
        EXPECT(0xbefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbef8));
        EXPECT(0xfe, gbc.readMem(0xbef9));
        EXPECT(0x24, gbc.readMem(0xbefa));
        // 31 0326
        gbc.setState(0xaaa2, 0x5a3c, 0x8470, 0xd9aa, 0xd371, 0x9be3, 0x0, 0x1);
        gbc.writeMem(0xaaa2, { 0x31, 0x9d, 0x5a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5a9d, gbc.sp());
        EXPECT(0xaaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaaa2));
        EXPECT(0x9d, gbc.readMem(0xaaa3));
        EXPECT(0x5a, gbc.readMem(0xaaa4));
        // 31 0327
        gbc.setState(0x4806, 0xf23d, 0xadd0, 0xbf15, 0x368d, 0xa658, 0x0, 0x0);
        gbc.writeMem(0x4806, { 0x31, 0xfd, 0x5b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5bfd, gbc.sp());
        EXPECT(0x4809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0328
        gbc.setState(0xb72, 0x5bd3, 0xf590, 0xb0b1, 0x3d5d, 0x4370, 0x0, 0x0);
        gbc.writeMem(0xb72, { 0x31, 0x83, 0xff });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xff83, gbc.sp());
        EXPECT(0xb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0329
        gbc.setState(0x788e, 0x95d, 0xaef0, 0xd78c, 0xa1b8, 0xe312, 0x0, 0x0);
        gbc.writeMem(0x788e, { 0x31, 0xef, 0x41 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x41ef, gbc.sp());
        EXPECT(0x7891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 032A
        gbc.setState(0x1cf9, 0x5f23, 0x7880, 0xae0d, 0xe4bd, 0xa335, 0x0, 0x1);
        gbc.writeMem(0x1cf9, { 0x31, 0x3d, 0x43 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x433d, gbc.sp());
        EXPECT(0x1cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 032B
        gbc.setState(0x4caa, 0xfd46, 0x4390, 0xa6b7, 0x9216, 0x4f16, 0x1, 0x0);
        gbc.writeMem(0x4caa, { 0x31, 0x8, 0x55 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5508, gbc.sp());
        EXPECT(0x4cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 032C
        gbc.setState(0xdc3a, 0xd159, 0x18a0, 0x35cf, 0x3517, 0x7e6c, 0x0, 0x1);
        gbc.writeMem(0xdc3a, { 0x31, 0xd8, 0x56 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x56d8, gbc.sp());
        EXPECT(0xdc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdc3a));
        EXPECT(0xd8, gbc.readMem(0xdc3b));
        EXPECT(0x56, gbc.readMem(0xdc3c));
        // 31 032D
        gbc.setState(0x3778, 0xa838, 0x2d0, 0x4d51, 0xd2d3, 0x5330, 0x1, 0x0);
        gbc.writeMem(0x3778, { 0x31, 0xec, 0x8a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8aec, gbc.sp());
        EXPECT(0x377b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 032E
        gbc.setState(0x783d, 0xdb4f, 0x2630, 0xe7c1, 0x58d0, 0x8199, 0x1, 0x1);
        gbc.writeMem(0x783d, { 0x31, 0x5c, 0x2c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2c5c, gbc.sp());
        EXPECT(0x7840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 032F
        gbc.setState(0x73d1, 0xb46c, 0x7200, 0x3c04, 0xc9de, 0xb8f2, 0x1, 0x1);
        gbc.writeMem(0x73d1, { 0x31, 0x4c, 0x7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x74c, gbc.sp());
        EXPECT(0x73d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0330
        gbc.setState(0x310f, 0x7b86, 0x1710, 0x6c4a, 0x6f16, 0xc2ae, 0x1, 0x1);
        gbc.writeMem(0x310f, { 0x31, 0xa4, 0x3e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3ea4, gbc.sp());
        EXPECT(0x3112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0332
        gbc.setState(0x3307, 0xfc5d, 0x98a0, 0x612, 0x1fe, 0x1e4f, 0x1, 0x1);
        gbc.writeMem(0x3307, { 0x31, 0x7f, 0x1b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1b7f, gbc.sp());
        EXPECT(0x330a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0333
        gbc.setState(0xd0b7, 0x82ed, 0xbcb0, 0x18fc, 0xd836, 0xd908, 0x0, 0x1);
        gbc.writeMem(0xd0b7, { 0x31, 0x8a, 0xa6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa68a, gbc.sp());
        EXPECT(0xd0ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd0b7));
        EXPECT(0x8a, gbc.readMem(0xd0b8));
        EXPECT(0xa6, gbc.readMem(0xd0b9));
        // 31 0335
        gbc.setState(0x14fa, 0x3594, 0x2900, 0xe8f7, 0xae54, 0x7312, 0x1, 0x0);
        gbc.writeMem(0x14fa, { 0x31, 0xde, 0x78 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x78de, gbc.sp());
        EXPECT(0x14fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0336
        gbc.setState(0x259a, 0x4aa, 0x39d0, 0xbf61, 0x252b, 0xe44d, 0x1, 0x1);
        gbc.writeMem(0x259a, { 0x31, 0x3f, 0x53 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x533f, gbc.sp());
        EXPECT(0x259d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0337
        gbc.setState(0x1d30, 0xf46f, 0x1390, 0x8070, 0x934a, 0xac70, 0x0, 0x1);
        gbc.writeMem(0x1d30, { 0x31, 0x2a, 0x33 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x332a, gbc.sp());
        EXPECT(0x1d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0338
        gbc.setState(0x2581, 0xf777, 0x53f0, 0xb1f7, 0x3c2d, 0xd85b, 0x1, 0x0);
        gbc.writeMem(0x2581, { 0x31, 0x86, 0xb2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb286, gbc.sp());
        EXPECT(0x2584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0339
        gbc.setState(0x8a89, 0x7096, 0x5b40, 0x9916, 0x1d34, 0x5892, 0x1, 0x0);
        gbc.writeMem(0x8a89, { 0x31, 0x8f, 0x1e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1e8f, gbc.sp());
        EXPECT(0x8a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8a89));
        EXPECT(0x8f, gbc.readMem(0x8a8a));
        EXPECT(0x1e, gbc.readMem(0x8a8b));
        // 31 033A
        gbc.setState(0x5225, 0x5acd, 0x8760, 0xe416, 0xa607, 0x3365, 0x1, 0x1);
        gbc.writeMem(0x5225, { 0x31, 0xcd, 0xb2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb2cd, gbc.sp());
        EXPECT(0x5228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 033B
        gbc.setState(0x5f7e, 0xdc92, 0x9780, 0xf855, 0x6565, 0x6031, 0x0, 0x0);
        gbc.writeMem(0x5f7e, { 0x31, 0x59, 0x86 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8659, gbc.sp());
        EXPECT(0x5f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 033C
        gbc.setState(0xad1f, 0x53db, 0x7790, 0xb218, 0xa3dd, 0x49f1, 0x0, 0x0);
        gbc.writeMem(0xad1f, { 0x31, 0x5e, 0x41 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x415e, gbc.sp());
        EXPECT(0xad22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xad1f));
        EXPECT(0x5e, gbc.readMem(0xad20));
        EXPECT(0x41, gbc.readMem(0xad21));
        // 31 033D
        gbc.setState(0x8b93, 0x58f9, 0x4bd0, 0x31c6, 0x7c33, 0xe758, 0x1, 0x0);
        gbc.writeMem(0x8b93, { 0x31, 0xad, 0xa5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa5ad, gbc.sp());
        EXPECT(0x8b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8b93));
        EXPECT(0xad, gbc.readMem(0x8b94));
        EXPECT(0xa5, gbc.readMem(0x8b95));
        // 31 033E
        gbc.setState(0x5f96, 0xd48b, 0xfa10, 0x65ec, 0x112a, 0x112, 0x0, 0x0);
        gbc.writeMem(0x5f96, { 0x31, 0x6a, 0xe });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe6a, gbc.sp());
        EXPECT(0x5f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 033F
        gbc.setState(0x1259, 0xa725, 0xea10, 0xb8f7, 0xc1b0, 0x8315, 0x0, 0x0);
        gbc.writeMem(0x1259, { 0x31, 0xbc, 0xae });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xaebc, gbc.sp());
        EXPECT(0x125c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0341
        gbc.setState(0xec49, 0xf40a, 0x1100, 0xaf8a, 0x7825, 0x2a02, 0x1, 0x0);
        gbc.writeMem(0xec49, { 0x31, 0x7b, 0x70 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x707b, gbc.sp());
        EXPECT(0xec4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xec49));
        EXPECT(0x7b, gbc.readMem(0xec4a));
        EXPECT(0x70, gbc.readMem(0xec4b));
        // 31 0342
        gbc.setState(0xd51f, 0xc4e5, 0x7fc0, 0xbda7, 0xb564, 0xc143, 0x1, 0x0);
        gbc.writeMem(0xd51f, { 0x31, 0x97, 0xcc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcc97, gbc.sp());
        EXPECT(0xd522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd51f));
        EXPECT(0x97, gbc.readMem(0xd520));
        EXPECT(0xcc, gbc.readMem(0xd521));
        // 31 0343
        gbc.setState(0x38af, 0xfb85, 0xb790, 0x9dd3, 0x9a00, 0x8627, 0x0, 0x1);
        gbc.writeMem(0x38af, { 0x31, 0x57, 0xbd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbd57, gbc.sp());
        EXPECT(0x38b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0344
        gbc.setState(0x9e32, 0xbe54, 0xfeb0, 0xcc5a, 0x89c8, 0x7db4, 0x1, 0x0);
        gbc.writeMem(0x9e32, { 0x31, 0x43, 0xbb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbb43, gbc.sp());
        EXPECT(0x9e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9e32));
        EXPECT(0x43, gbc.readMem(0x9e33));
        EXPECT(0xbb, gbc.readMem(0x9e34));
        // 31 0345
        gbc.setState(0x49f, 0x1a99, 0x3db0, 0xf155, 0xa211, 0x6ff5, 0x0, 0x0);
        gbc.writeMem(0x49f, { 0x31, 0x9c, 0xdd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdd9c, gbc.sp());
        EXPECT(0x4a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0346
        gbc.setState(0x6961, 0x1fa9, 0xe5d0, 0x7162, 0x520d, 0x7db6, 0x0, 0x1);
        gbc.writeMem(0x6961, { 0x31, 0x36, 0x9d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9d36, gbc.sp());
        EXPECT(0x6964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0347
        gbc.setState(0x4c2b, 0x7ed1, 0x8060, 0x1e38, 0x1ec8, 0xc569, 0x0, 0x1);
        gbc.writeMem(0x4c2b, { 0x31, 0x2d, 0x14 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x142d, gbc.sp());
        EXPECT(0x4c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0348
        gbc.setState(0x2a19, 0x7970, 0xce70, 0x348c, 0x51b1, 0x674f, 0x1, 0x1);
        gbc.writeMem(0x2a19, { 0x31, 0x46, 0xed });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xed46, gbc.sp());
        EXPECT(0x2a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0349
        gbc.setState(0x6b77, 0xb148, 0x2850, 0x2485, 0xd950, 0x7063, 0x1, 0x0);
        gbc.writeMem(0x6b77, { 0x31, 0x4, 0x38 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3804, gbc.sp());
        EXPECT(0x6b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 034B
        gbc.setState(0x7cd5, 0x9818, 0xda90, 0xbd6, 0xe8a1, 0xdd53, 0x0, 0x1);
        gbc.writeMem(0x7cd5, { 0x31, 0xe, 0xc9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc90e, gbc.sp());
        EXPECT(0x7cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 034C
        gbc.setState(0x10d4, 0x6abc, 0xbbb0, 0x3426, 0x1c25, 0x9fb9, 0x0, 0x1);
        gbc.writeMem(0x10d4, { 0x31, 0x75, 0x48 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4875, gbc.sp());
        EXPECT(0x10d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 034E
        gbc.setState(0x563a, 0x5433, 0x890, 0x302c, 0xbbaa, 0xf3ce, 0x0, 0x1);
        gbc.writeMem(0x563a, { 0x31, 0xc3, 0xa6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa6c3, gbc.sp());
        EXPECT(0x563d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 034F
        gbc.setState(0xa237, 0x8964, 0x6510, 0xc337, 0x8e0b, 0xfc6c, 0x0, 0x0);
        gbc.writeMem(0xa237, { 0x31, 0x35, 0x81 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8135, gbc.sp());
        EXPECT(0xa23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa237));
        EXPECT(0x35, gbc.readMem(0xa238));
        EXPECT(0x81, gbc.readMem(0xa239));
        // 31 0350
        gbc.setState(0x8162, 0xf2a9, 0x5d50, 0x1444, 0xa843, 0x88dc, 0x0, 0x1);
        gbc.writeMem(0x8162, { 0x31, 0x42, 0x42 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4242, gbc.sp());
        EXPECT(0x8165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8162));
        EXPECT(0x42, gbc.readMem(0x8163));
        EXPECT(0x42, gbc.readMem(0x8164));
        // 31 0351
        gbc.setState(0x25d5, 0x94c4, 0xa2c0, 0xf4b0, 0x2e90, 0x9d4c, 0x0, 0x0);
        gbc.writeMem(0x25d5, { 0x31, 0xb9, 0xd3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd3b9, gbc.sp());
        EXPECT(0x25d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0352
        gbc.setState(0x7bef, 0xcaf9, 0x7530, 0x6755, 0x2669, 0xa51, 0x1, 0x0);
        gbc.writeMem(0x7bef, { 0x31, 0x41, 0x9c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9c41, gbc.sp());
        EXPECT(0x7bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0353
        gbc.setState(0x1342, 0x1595, 0x7380, 0x7dd7, 0x9f64, 0xb5b1, 0x0, 0x1);
        gbc.writeMem(0x1342, { 0x31, 0x3e, 0xb3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb33e, gbc.sp());
        EXPECT(0x1345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0354
        gbc.setState(0x4c82, 0x84cf, 0x3380, 0x7468, 0x6d88, 0x5315, 0x1, 0x1);
        gbc.writeMem(0x4c82, { 0x31, 0xc, 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xac0c, gbc.sp());
        EXPECT(0x4c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0355
        gbc.setState(0xd7b9, 0x73e7, 0xa7d0, 0x4b6e, 0xb685, 0xbab8, 0x1, 0x0);
        gbc.writeMem(0xd7b9, { 0x31, 0x99, 0xd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd99, gbc.sp());
        EXPECT(0xd7bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd7b9));
        EXPECT(0x99, gbc.readMem(0xd7ba));
        EXPECT(0xd, gbc.readMem(0xd7bb));
        // 31 0356
        gbc.setState(0xcc15, 0x3912, 0xefe0, 0x7ef0, 0x25b6, 0xcbd5, 0x0, 0x1);
        gbc.writeMem(0xcc15, { 0x31, 0x4f, 0x4f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4f4f, gbc.sp());
        EXPECT(0xcc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcc15));
        EXPECT(0x4f, gbc.readMem(0xcc16));
        EXPECT(0x4f, gbc.readMem(0xcc17));
        // 31 0357
        gbc.setState(0x1fb3, 0xbedc, 0xa9e0, 0x2fbc, 0xd5e7, 0xef02, 0x0, 0x1);
        gbc.writeMem(0x1fb3, { 0x31, 0x29, 0x57 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5729, gbc.sp());
        EXPECT(0x1fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0358
        gbc.setState(0xbd81, 0x755, 0xbac0, 0xbca7, 0x2690, 0x4363, 0x1, 0x1);
        gbc.writeMem(0xbd81, { 0x31, 0x3b, 0x7d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7d3b, gbc.sp());
        EXPECT(0xbd84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbd81));
        EXPECT(0x3b, gbc.readMem(0xbd82));
        EXPECT(0x7d, gbc.readMem(0xbd83));
        // 31 035A
        gbc.setState(0x5ab, 0xae9e, 0xbfe0, 0x99ff, 0x2bc7, 0xe04c, 0x1, 0x1);
        gbc.writeMem(0x5ab, { 0x31, 0x8, 0x16 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1608, gbc.sp());
        EXPECT(0x5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 035B
        gbc.setState(0x3280, 0xed9b, 0xc2c0, 0x8690, 0xf5e6, 0x9684, 0x1, 0x0);
        gbc.writeMem(0x3280, { 0x31, 0xbf, 0xaa });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xaabf, gbc.sp());
        EXPECT(0x3283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 035C
        gbc.setState(0xbb22, 0xeb6c, 0xd1f0, 0x35b5, 0xc2e2, 0x9b5, 0x1, 0x0);
        gbc.writeMem(0xbb22, { 0x31, 0xaa, 0x61 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x61aa, gbc.sp());
        EXPECT(0xbb25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbb22));
        EXPECT(0xaa, gbc.readMem(0xbb23));
        EXPECT(0x61, gbc.readMem(0xbb24));
        // 31 035D
        gbc.setState(0x42d4, 0x5b10, 0xea80, 0x8e6b, 0x803d, 0xcf40, 0x1, 0x1);
        gbc.writeMem(0x42d4, { 0x31, 0x66, 0xf8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf866, gbc.sp());
        EXPECT(0x42d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 035E
        gbc.setState(0x71fb, 0xa8d1, 0x6560, 0xc44d, 0x1948, 0x7413, 0x0, 0x0);
        gbc.writeMem(0x71fb, { 0x31, 0x57, 0xcf });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcf57, gbc.sp());
        EXPECT(0x71fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 035F
        gbc.setState(0x4324, 0xefce, 0xcfe0, 0xf900, 0x111c, 0x35f8, 0x1, 0x0);
        gbc.writeMem(0x4324, { 0x31, 0x8f, 0x49 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x498f, gbc.sp());
        EXPECT(0x4327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0360
        gbc.setState(0x11fe, 0x767f, 0xc710, 0x24bd, 0xcf7c, 0x7db0, 0x0, 0x1);
        gbc.writeMem(0x11fe, { 0x31, 0xd3, 0xdd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xddd3, gbc.sp());
        EXPECT(0x1201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0362
        gbc.setState(0x8c1c, 0x5548, 0x8af0, 0x5176, 0xbb98, 0xe333, 0x0, 0x1);
        gbc.writeMem(0x8c1c, { 0x31, 0x8, 0x61 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6108, gbc.sp());
        EXPECT(0x8c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8c1c));
        EXPECT(0x8, gbc.readMem(0x8c1d));
        EXPECT(0x61, gbc.readMem(0x8c1e));
        // 31 0364
        gbc.setState(0xca89, 0x9208, 0x11e0, 0x6def, 0x88bb, 0x33cb, 0x1, 0x0);
        gbc.writeMem(0xca89, { 0x31, 0x9b, 0xda });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xda9b, gbc.sp());
        EXPECT(0xca8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xca89));
        EXPECT(0x9b, gbc.readMem(0xca8a));
        EXPECT(0xda, gbc.readMem(0xca8b));
        // 31 0365
        gbc.setState(0x5923, 0xa05, 0xb320, 0x8293, 0xc83a, 0xe937, 0x1, 0x0);
        gbc.writeMem(0x5923, { 0x31, 0x3e, 0x20 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x203e, gbc.sp());
        EXPECT(0x5926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0366
        gbc.setState(0x2bd4, 0xe384, 0x5ae0, 0x4074, 0xe375, 0xe0df, 0x0, 0x0);
        gbc.writeMem(0x2bd4, { 0x31, 0x21, 0xa3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa321, gbc.sp());
        EXPECT(0x2bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0367
        gbc.setState(0x6b1c, 0x6cd7, 0x1d0, 0x9a9b, 0xc23c, 0x9da7, 0x1, 0x1);
        gbc.writeMem(0x6b1c, { 0x31, 0x7, 0xd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd07, gbc.sp());
        EXPECT(0x6b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0368
        gbc.setState(0x269f, 0xd0f7, 0x2970, 0xb454, 0x276d, 0x2959, 0x1, 0x1);
        gbc.writeMem(0x269f, { 0x31, 0x2e, 0x65 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x652e, gbc.sp());
        EXPECT(0x26a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0369
        gbc.setState(0x8169, 0x2767, 0x1500, 0x6e77, 0x2b51, 0x5b1f, 0x1, 0x0);
        gbc.writeMem(0x8169, { 0x31, 0x7c, 0xeb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xeb7c, gbc.sp());
        EXPECT(0x816c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8169));
        EXPECT(0x7c, gbc.readMem(0x816a));
        EXPECT(0xeb, gbc.readMem(0x816b));
        // 31 036A
        gbc.setState(0x72be, 0xa0a2, 0x3fd0, 0x2414, 0x4321, 0x7099, 0x1, 0x1);
        gbc.writeMem(0x72be, { 0x31, 0xac, 0xf5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf5ac, gbc.sp());
        EXPECT(0x72c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 036B
        gbc.setState(0x3330, 0xcfd8, 0xb000, 0xf797, 0x42ca, 0x2d57, 0x0, 0x1);
        gbc.writeMem(0x3330, { 0x31, 0xe1, 0xef });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xefe1, gbc.sp());
        EXPECT(0x3333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 036C
        gbc.setState(0x1f44, 0x93ef, 0xcda0, 0x162f, 0x369f, 0xfee3, 0x0, 0x1);
        gbc.writeMem(0x1f44, { 0x31, 0x6c, 0xc6 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc66c, gbc.sp());
        EXPECT(0x1f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 036D
        gbc.setState(0x18c5, 0x4b61, 0x2390, 0x4a39, 0xeeda, 0x28ba, 0x1, 0x0);
        gbc.writeMem(0x18c5, { 0x31, 0xe1, 0xb0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb0e1, gbc.sp());
        EXPECT(0x18c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 036E
        gbc.setState(0xdc50, 0x11ec, 0x3670, 0x71ad, 0x2281, 0xdbed, 0x0, 0x0);
        gbc.writeMem(0xdc50, { 0x31, 0xcb, 0x15 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x15cb, gbc.sp());
        EXPECT(0xdc53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdc50));
        EXPECT(0xcb, gbc.readMem(0xdc51));
        EXPECT(0x15, gbc.readMem(0xdc52));
        // 31 036F
        gbc.setState(0x7734, 0x46df, 0x8a30, 0x5050, 0x8cfc, 0x8a31, 0x1, 0x0);
        gbc.writeMem(0x7734, { 0x31, 0x4, 0x92 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9204, gbc.sp());
        EXPECT(0x7737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0371
        gbc.setState(0xcf09, 0x1442, 0x1370, 0x2243, 0x43bd, 0xcdb, 0x1, 0x1);
        gbc.writeMem(0xcf09, { 0x31, 0xc9, 0x9c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9cc9, gbc.sp());
        EXPECT(0xcf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcf09));
        EXPECT(0xc9, gbc.readMem(0xcf0a));
        EXPECT(0x9c, gbc.readMem(0xcf0b));
        // 31 0372
        gbc.setState(0x4393, 0x8283, 0x96f0, 0x7ee2, 0xfde9, 0x8a35, 0x1, 0x0);
        gbc.writeMem(0x4393, { 0x31, 0x54, 0xb1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb154, gbc.sp());
        EXPECT(0x4396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0373
        gbc.setState(0xa12, 0x28fc, 0xde50, 0x7c10, 0xbf77, 0x77b8, 0x0, 0x0);
        gbc.writeMem(0xa12, { 0x31, 0xbf, 0x9a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9abf, gbc.sp());
        EXPECT(0xa15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0374
        gbc.setState(0x5466, 0x4c5a, 0x1780, 0x1f93, 0x61fe, 0x67d, 0x1, 0x0);
        gbc.writeMem(0x5466, { 0x31, 0x56, 0xe9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe956, gbc.sp());
        EXPECT(0x5469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0375
        gbc.setState(0x6799, 0x731d, 0x20d0, 0xcbc7, 0x219a, 0x767c, 0x1, 0x1);
        gbc.writeMem(0x6799, { 0x31, 0x41, 0xf4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf441, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0377
        gbc.setState(0x109e, 0xf366, 0xf8c0, 0xfa1a, 0xe3ad, 0x3e7b, 0x1, 0x0);
        gbc.writeMem(0x109e, { 0x31, 0x0, 0x7c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7c00, gbc.sp());
        EXPECT(0x10a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0378
        gbc.setState(0x968b, 0xab3e, 0xfe80, 0x31a4, 0x4fe3, 0x110e, 0x0, 0x0);
        gbc.writeMem(0x968b, { 0x31, 0xb, 0xb1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb10b, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x968b));
        EXPECT(0xb, gbc.readMem(0x968c));
        EXPECT(0xb1, gbc.readMem(0x968d));
        // 31 0379
        gbc.setState(0xac34, 0x6c6, 0x8050, 0x9be, 0x58, 0x236a, 0x0, 0x1);
        gbc.writeMem(0xac34, { 0x31, 0x56, 0x38 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3856, gbc.sp());
        EXPECT(0xac37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xac34));
        EXPECT(0x56, gbc.readMem(0xac35));
        EXPECT(0x38, gbc.readMem(0xac36));
        // 31 037A
        gbc.setState(0x5052, 0x4aa, 0xcf80, 0xf97a, 0xb063, 0x556, 0x1, 0x0);
        gbc.writeMem(0x5052, { 0x31, 0x4e, 0x32 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x324e, gbc.sp());
        EXPECT(0x5055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 037B
        gbc.setState(0x7181, 0xad1d, 0xce40, 0x5395, 0xd4b5, 0xc07b, 0x1, 0x0);
        gbc.writeMem(0x7181, { 0x31, 0xd7, 0x36 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x36d7, gbc.sp());
        EXPECT(0x7184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 037C
        gbc.setState(0xe25b, 0xac96, 0xa100, 0xab43, 0x254a, 0x7a37, 0x0, 0x1);
        gbc.writeMem(0xe25b, { 0x31, 0xf3, 0x22 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x22f3, gbc.sp());
        EXPECT(0xe25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe25b));
        EXPECT(0xf3, gbc.readMem(0xe25c));
        EXPECT(0x22, gbc.readMem(0xe25d));
        // 31 037F
        gbc.setState(0xebc0, 0xe6a0, 0x7520, 0x58c9, 0x9c5d, 0x152f, 0x1, 0x0);
        gbc.writeMem(0xebc0, { 0x31, 0x12, 0x99 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9912, gbc.sp());
        EXPECT(0xebc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xebc0));
        EXPECT(0x12, gbc.readMem(0xebc1));
        EXPECT(0x99, gbc.readMem(0xebc2));
        // 31 0380
        gbc.setState(0x555c, 0xdee9, 0xee30, 0x2d92, 0xeba, 0x176a, 0x1, 0x1);
        gbc.writeMem(0x555c, { 0x31, 0xf4, 0xe });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xef4, gbc.sp());
        EXPECT(0x555f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0381
        gbc.setState(0xb783, 0x1c7a, 0x4250, 0x6c2f, 0x3168, 0x6c6f, 0x0, 0x1);
        gbc.writeMem(0xb783, { 0x31, 0x49, 0x75 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7549, gbc.sp());
        EXPECT(0xb786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb783));
        EXPECT(0x49, gbc.readMem(0xb784));
        EXPECT(0x75, gbc.readMem(0xb785));
        // 31 0382
        gbc.setState(0xaed, 0xcb19, 0x95b0, 0x5767, 0x193f, 0x5a57, 0x0, 0x0);
        gbc.writeMem(0xaed, { 0x31, 0x1a, 0xb0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb01a, gbc.sp());
        EXPECT(0xaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0383
        gbc.setState(0x266b, 0x3095, 0xcd70, 0xa1d3, 0x392, 0x135d, 0x1, 0x0);
        gbc.writeMem(0x266b, { 0x31, 0x5d, 0xdb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdb5d, gbc.sp());
        EXPECT(0x266e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0384
        gbc.setState(0x8e06, 0x172f, 0xd2f0, 0x888d, 0xfc31, 0x7953, 0x1, 0x0);
        gbc.writeMem(0x8e06, { 0x31, 0x5e, 0xcd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcd5e, gbc.sp());
        EXPECT(0x8e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8e06));
        EXPECT(0x5e, gbc.readMem(0x8e07));
        EXPECT(0xcd, gbc.readMem(0x8e08));
        // 31 0386
        gbc.setState(0x18e6, 0x5492, 0x49a0, 0xf61f, 0xdd96, 0x344c, 0x1, 0x0);
        gbc.writeMem(0x18e6, { 0x31, 0x87, 0xf4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf487, gbc.sp());
        EXPECT(0x18e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 0388
        gbc.setState(0xea61, 0xc899, 0x9ee0, 0xc543, 0xfd49, 0xbe52, 0x1, 0x0);
        gbc.writeMem(0xea61, { 0x31, 0x2c, 0x80 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x802c, gbc.sp());
        EXPECT(0xea64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xea61));
        EXPECT(0x2c, gbc.readMem(0xea62));
        EXPECT(0x80, gbc.readMem(0xea63));
        // 31 0389
        gbc.setState(0xc338, 0xde9e, 0x1a70, 0xad7b, 0xe0de, 0xb8e3, 0x1, 0x1);
        gbc.writeMem(0xc338, { 0x31, 0xdd, 0x67 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x67dd, gbc.sp());
        EXPECT(0xc33b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc338));
        EXPECT(0xdd, gbc.readMem(0xc339));
        EXPECT(0x67, gbc.readMem(0xc33a));
        // 31 038A
        gbc.setState(0x3f6c, 0xb992, 0xf1e0, 0xb81d, 0x1a8c, 0x98d5, 0x1, 0x0);
        gbc.writeMem(0x3f6c, { 0x31, 0xc3, 0xf0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf0c3, gbc.sp());
        EXPECT(0x3f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 038B
        gbc.setState(0xc664, 0x6718, 0x4fa0, 0xc3db, 0xc6b7, 0x8263, 0x1, 0x0);
        gbc.writeMem(0xc664, { 0x31, 0x7b, 0xcd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcd7b, gbc.sp());
        EXPECT(0xc667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc664));
        EXPECT(0x7b, gbc.readMem(0xc665));
        EXPECT(0xcd, gbc.readMem(0xc666));
        // 31 038C
        gbc.setState(0x2d21, 0x494c, 0x1d00, 0x2d12, 0x7556, 0xb836, 0x1, 0x1);
        gbc.writeMem(0x2d21, { 0x31, 0xb6, 0xfb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfbb6, gbc.sp());
        EXPECT(0x2d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 038D
        gbc.setState(0xc1d1, 0x3de3, 0xaab0, 0x2214, 0x6194, 0x482e, 0x0, 0x1);
        gbc.writeMem(0xc1d1, { 0x31, 0x9f, 0xd });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd9f, gbc.sp());
        EXPECT(0xc1d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc1d1));
        EXPECT(0x9f, gbc.readMem(0xc1d2));
        EXPECT(0xd, gbc.readMem(0xc1d3));
        // 31 038E
        gbc.setState(0x5c9c, 0x6bc3, 0x7460, 0xd369, 0x7a25, 0x8046, 0x1, 0x0);
        gbc.writeMem(0x5c9c, { 0x31, 0xfa, 0x82 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x82fa, gbc.sp());
        EXPECT(0x5c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 038F
        gbc.setState(0x2053, 0xf552, 0x53d0, 0x771, 0xbda7, 0x428, 0x1, 0x0);
        gbc.writeMem(0x2053, { 0x31, 0xe4, 0xac });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xace4, gbc.sp());
        EXPECT(0x2056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0390
        gbc.setState(0x2f22, 0x814c, 0x2410, 0x992d, 0x4415, 0x85c, 0x0, 0x1);
        gbc.writeMem(0x2f22, { 0x31, 0x98, 0x33 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3398, gbc.sp());
        EXPECT(0x2f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0392
        gbc.setState(0x8217, 0x2b6, 0xc560, 0x753f, 0x77a7, 0xa908, 0x0, 0x0);
        gbc.writeMem(0x8217, { 0x31, 0x49, 0x27 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2749, gbc.sp());
        EXPECT(0x821a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8217));
        EXPECT(0x49, gbc.readMem(0x8218));
        EXPECT(0x27, gbc.readMem(0x8219));
        // 31 0393
        gbc.setState(0xe3e6, 0x18f9, 0x3ab0, 0x2474, 0xf966, 0x135a, 0x0, 0x1);
        gbc.writeMem(0xe3e6, { 0x31, 0xf0, 0x8a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8af0, gbc.sp());
        EXPECT(0xe3e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe3e6));
        EXPECT(0xf0, gbc.readMem(0xe3e7));
        EXPECT(0x8a, gbc.readMem(0xe3e8));
        // 31 0394
        gbc.setState(0xb1a9, 0xee80, 0xef80, 0xef9b, 0xa74a, 0xb85b, 0x0, 0x1);
        gbc.writeMem(0xb1a9, { 0x31, 0x86, 0xd2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd286, gbc.sp());
        EXPECT(0xb1ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb1a9));
        EXPECT(0x86, gbc.readMem(0xb1aa));
        EXPECT(0xd2, gbc.readMem(0xb1ab));
        // 31 0395
        gbc.setState(0x8137, 0x62e3, 0x5240, 0x6dc3, 0xc842, 0xfbe2, 0x1, 0x0);
        gbc.writeMem(0x8137, { 0x31, 0x39, 0x3e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3e39, gbc.sp());
        EXPECT(0x813a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8137));
        EXPECT(0x39, gbc.readMem(0x8138));
        EXPECT(0x3e, gbc.readMem(0x8139));
        // 31 0396
        gbc.setState(0x4441, 0x570d, 0x4fb0, 0x56a6, 0xd2c, 0x6aaa, 0x1, 0x1);
        gbc.writeMem(0x4441, { 0x31, 0x29, 0xb2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb229, gbc.sp());
        EXPECT(0x4444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 0398
        gbc.setState(0xe9d8, 0x46a8, 0xea00, 0xfa55, 0x718, 0xb062, 0x1, 0x1);
        gbc.writeMem(0xe9d8, { 0x31, 0x2c, 0xb7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb72c, gbc.sp());
        EXPECT(0xe9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe9d8));
        EXPECT(0x2c, gbc.readMem(0xe9d9));
        EXPECT(0xb7, gbc.readMem(0xe9da));
        // 31 0399
        gbc.setState(0x8267, 0xe219, 0x9db0, 0xb41, 0xb3db, 0xd3e1, 0x0, 0x1);
        gbc.writeMem(0x8267, { 0x31, 0x65, 0x5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x565, gbc.sp());
        EXPECT(0x826a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8267));
        EXPECT(0x65, gbc.readMem(0x8268));
        EXPECT(0x5, gbc.readMem(0x8269));
        // 31 039A
        gbc.setState(0xbead, 0x45bd, 0x4100, 0xfc09, 0x5c1f, 0x418, 0x0, 0x0);
        gbc.writeMem(0xbead, { 0x31, 0x45, 0x76 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7645, gbc.sp());
        EXPECT(0xbeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbead));
        EXPECT(0x45, gbc.readMem(0xbeae));
        EXPECT(0x76, gbc.readMem(0xbeaf));
        // 31 039B
        gbc.setState(0x82b0, 0x2030, 0xb100, 0xa78e, 0x9f78, 0x62e2, 0x1, 0x1);
        gbc.writeMem(0x82b0, { 0x31, 0x8e, 0xc5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc58e, gbc.sp());
        EXPECT(0x82b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x82b0));
        EXPECT(0x8e, gbc.readMem(0x82b1));
        EXPECT(0xc5, gbc.readMem(0x82b2));
        // 31 039C
        gbc.setState(0x134d, 0x86e9, 0x3320, 0xf411, 0x1bd2, 0x54a9, 0x1, 0x1);
        gbc.writeMem(0x134d, { 0x31, 0x70, 0xef });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xef70, gbc.sp());
        EXPECT(0x1350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 039D
        gbc.setState(0x7db1, 0x4e35, 0xfd20, 0xc518, 0xc336, 0x660e, 0x1, 0x1);
        gbc.writeMem(0x7db1, { 0x31, 0x8a, 0x9d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9d8a, gbc.sp());
        EXPECT(0x7db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 039E
        gbc.setState(0xcd0d, 0xc368, 0x2ec0, 0xc3d4, 0xd8c6, 0xcef5, 0x0, 0x1);
        gbc.writeMem(0xcd0d, { 0x31, 0x26, 0x69 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6926, gbc.sp());
        EXPECT(0xcd10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcd0d));
        EXPECT(0x26, gbc.readMem(0xcd0e));
        EXPECT(0x69, gbc.readMem(0xcd0f));
        // 31 039F
        gbc.setState(0x27d4, 0x7e4, 0x16a0, 0x197e, 0xb707, 0x3e44, 0x0, 0x1);
        gbc.writeMem(0x27d4, { 0x31, 0x61, 0xec });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xec61, gbc.sp());
        EXPECT(0x27d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03A0
        gbc.setState(0xd305, 0x8a28, 0xa5d0, 0xe2c, 0x8c22, 0xac0f, 0x1, 0x1);
        gbc.writeMem(0xd305, { 0x31, 0xe8, 0x4c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4ce8, gbc.sp());
        EXPECT(0xd308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd305));
        EXPECT(0xe8, gbc.readMem(0xd306));
        EXPECT(0x4c, gbc.readMem(0xd307));
        // 31 03A1
        gbc.setState(0xd25a, 0xc04f, 0x8980, 0x7121, 0xcced, 0x9a5a, 0x1, 0x0);
        gbc.writeMem(0xd25a, { 0x31, 0xba, 0xfa });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfaba, gbc.sp());
        EXPECT(0xd25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd25a));
        EXPECT(0xba, gbc.readMem(0xd25b));
        EXPECT(0xfa, gbc.readMem(0xd25c));
        // 31 03A2
        gbc.setState(0x7097, 0xd736, 0x7110, 0x4e89, 0x6ead, 0xae39, 0x0, 0x1);
        gbc.writeMem(0x7097, { 0x31, 0xe9, 0x7f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7fe9, gbc.sp());
        EXPECT(0x709a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03A3
        gbc.setState(0x683c, 0x2061, 0x5090, 0xc8e4, 0x1ffe, 0x4569, 0x1, 0x0);
        gbc.writeMem(0x683c, { 0x31, 0x95, 0xea });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xea95, gbc.sp());
        EXPECT(0x683f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03A4
        gbc.setState(0x8c4e, 0x52da, 0xb2d0, 0x8d51, 0x561e, 0x7560, 0x0, 0x1);
        gbc.writeMem(0x8c4e, { 0x31, 0x84, 0xad });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xad84, gbc.sp());
        EXPECT(0x8c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8c4e));
        EXPECT(0x84, gbc.readMem(0x8c4f));
        EXPECT(0xad, gbc.readMem(0x8c50));
        // 31 03A5
        gbc.setState(0x42f1, 0x616d, 0x35a0, 0x150a, 0x395b, 0x3949, 0x1, 0x0);
        gbc.writeMem(0x42f1, { 0x31, 0x70, 0x96 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9670, gbc.sp());
        EXPECT(0x42f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03A6
        gbc.setState(0x6921, 0xcb28, 0x70e0, 0xe532, 0x2914, 0x183f, 0x0, 0x1);
        gbc.writeMem(0x6921, { 0x31, 0xf3, 0xb4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb4f3, gbc.sp());
        EXPECT(0x6924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03A7
        gbc.setState(0x9244, 0xa61f, 0x2fc0, 0xa602, 0x59b5, 0xb000, 0x0, 0x1);
        gbc.writeMem(0x9244, { 0x31, 0x8f, 0xbd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbd8f, gbc.sp());
        EXPECT(0x9247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9244));
        EXPECT(0x8f, gbc.readMem(0x9245));
        EXPECT(0xbd, gbc.readMem(0x9246));
        // 31 03A8
        gbc.setState(0xa336, 0xcb1c, 0x4db0, 0x76fe, 0x524d, 0x25d3, 0x0, 0x0);
        gbc.writeMem(0xa336, { 0x31, 0xd4, 0xb5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb5d4, gbc.sp());
        EXPECT(0xa339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa336));
        EXPECT(0xd4, gbc.readMem(0xa337));
        EXPECT(0xb5, gbc.readMem(0xa338));
        // 31 03A9
        gbc.setState(0x40b0, 0x1639, 0x3610, 0x3700, 0xd05e, 0xb121, 0x0, 0x0);
        gbc.writeMem(0x40b0, { 0x31, 0x64, 0xa1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa164, gbc.sp());
        EXPECT(0x40b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03AA
        gbc.setState(0x629d, 0xa08d, 0x92c0, 0x9394, 0xeaf4, 0xf160, 0x0, 0x0);
        gbc.writeMem(0x629d, { 0x31, 0x47, 0x82 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8247, gbc.sp());
        EXPECT(0x62a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03AB
        gbc.setState(0x575c, 0xc7b1, 0xff70, 0xb442, 0x1757, 0x3e1, 0x0, 0x0);
        gbc.writeMem(0x575c, { 0x31, 0xa2, 0x96 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x96a2, gbc.sp());
        EXPECT(0x575f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03AC
        gbc.setState(0xe6c, 0xd85c, 0x9790, 0x6097, 0xc3da, 0xf9d2, 0x1, 0x0);
        gbc.writeMem(0xe6c, { 0x31, 0x4, 0x3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x304, gbc.sp());
        EXPECT(0xe6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03AD
        gbc.setState(0x6ddf, 0x9536, 0x6c20, 0x9836, 0x2331, 0x3854, 0x0, 0x0);
        gbc.writeMem(0x6ddf, { 0x31, 0x94, 0x72 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7294, gbc.sp());
        EXPECT(0x6de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03AE
        gbc.setState(0x4511, 0xd0bc, 0xcbb0, 0x68c3, 0x3261, 0x191b, 0x0, 0x1);
        gbc.writeMem(0x4511, { 0x31, 0x2, 0xb9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb902, gbc.sp());
        EXPECT(0x4514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03AF
        gbc.setState(0x6835, 0xf97d, 0xb960, 0xe20, 0x1c54, 0xc649, 0x1, 0x1);
        gbc.writeMem(0x6835, { 0x31, 0x1f, 0x8b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8b1f, gbc.sp());
        EXPECT(0x6838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03B0
        gbc.setState(0x1392, 0x1fb3, 0xf7c0, 0x6e8e, 0xb7, 0xa3d9, 0x1, 0x0);
        gbc.writeMem(0x1392, { 0x31, 0x73, 0x5b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5b73, gbc.sp());
        EXPECT(0x1395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03B1
        gbc.setState(0x8aa1, 0xbdbb, 0xfb90, 0x4edc, 0xdc08, 0x48b0, 0x1, 0x0);
        gbc.writeMem(0x8aa1, { 0x31, 0x16, 0x17 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1716, gbc.sp());
        EXPECT(0x8aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8aa1));
        EXPECT(0x16, gbc.readMem(0x8aa2));
        EXPECT(0x17, gbc.readMem(0x8aa3));
        // 31 03B2
        gbc.setState(0x3c99, 0x6d9d, 0x5030, 0xe20a, 0x3826, 0x576f, 0x1, 0x1);
        gbc.writeMem(0x3c99, { 0x31, 0x78, 0xcc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcc78, gbc.sp());
        EXPECT(0x3c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03B3
        gbc.setState(0x3d96, 0x7b72, 0x10, 0x3267, 0x9b20, 0xc9b2, 0x0, 0x1);
        gbc.writeMem(0x3d96, { 0x31, 0xc9, 0x99 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x99c9, gbc.sp());
        EXPECT(0x3d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03B4
        gbc.setState(0xbcfc, 0x53ec, 0xc530, 0xcdaf, 0x5657, 0x6b8b, 0x1, 0x0);
        gbc.writeMem(0xbcfc, { 0x31, 0x7e, 0x11 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x117e, gbc.sp());
        EXPECT(0xbcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbcfc));
        EXPECT(0x7e, gbc.readMem(0xbcfd));
        EXPECT(0x11, gbc.readMem(0xbcfe));
        // 31 03B5
        gbc.setState(0xd19e, 0x3e5, 0x2d50, 0xf4b4, 0x65fd, 0x698a, 0x1, 0x0);
        gbc.writeMem(0xd19e, { 0x31, 0x45, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x45, gbc.sp());
        EXPECT(0xd1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd19e));
        EXPECT(0x45, gbc.readMem(0xd19f));
        EXPECT(0x0, gbc.readMem(0xd1a0));
        // 31 03B6
        gbc.setState(0xd5b2, 0x1ee6, 0x17f0, 0xf4f5, 0xe7e3, 0xbf64, 0x1, 0x1);
        gbc.writeMem(0xd5b2, { 0x31, 0x68, 0xd3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd368, gbc.sp());
        EXPECT(0xd5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd5b2));
        EXPECT(0x68, gbc.readMem(0xd5b3));
        EXPECT(0xd3, gbc.readMem(0xd5b4));
        // 31 03B7
        gbc.setState(0xbbed, 0x4854, 0xb000, 0x1d9d, 0x390a, 0x662d, 0x0, 0x1);
        gbc.writeMem(0xbbed, { 0x31, 0x61, 0x6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x661, gbc.sp());
        EXPECT(0xbbf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xbbed));
        EXPECT(0x61, gbc.readMem(0xbbee));
        EXPECT(0x6, gbc.readMem(0xbbef));
        // 31 03B8
        gbc.setState(0x5454, 0xbe1b, 0x1a30, 0x16ba, 0x4c25, 0xe802, 0x0, 0x1);
        gbc.writeMem(0x5454, { 0x31, 0xb8, 0xe2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe2b8, gbc.sp());
        EXPECT(0x5457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03B9
        gbc.setState(0xce86, 0xabaa, 0x48f0, 0xcc4d, 0xc44d, 0x81d1, 0x0, 0x0);
        gbc.writeMem(0xce86, { 0x31, 0x3c, 0x53 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x533c, gbc.sp());
        EXPECT(0xce89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xce86));
        EXPECT(0x3c, gbc.readMem(0xce87));
        EXPECT(0x53, gbc.readMem(0xce88));
        // 31 03BA
        gbc.setState(0x77d6, 0xfe74, 0x1ad0, 0xf240, 0x5991, 0x5a63, 0x1, 0x0);
        gbc.writeMem(0x77d6, { 0x31, 0xa5, 0xd4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd4a5, gbc.sp());
        EXPECT(0x77d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03BB
        gbc.setState(0xb692, 0x7609, 0x4dd0, 0xdcf6, 0x6876, 0xd3c4, 0x1, 0x0);
        gbc.writeMem(0xb692, { 0x31, 0x29, 0xb0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb029, gbc.sp());
        EXPECT(0xb695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb692));
        EXPECT(0x29, gbc.readMem(0xb693));
        EXPECT(0xb0, gbc.readMem(0xb694));
        // 31 03BC
        gbc.setState(0x20bd, 0x292f, 0x7600, 0x3d93, 0x33bc, 0xccbc, 0x0, 0x0);
        gbc.writeMem(0x20bd, { 0x31, 0x61, 0x55 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5561, gbc.sp());
        EXPECT(0x20c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03BD
        gbc.setState(0x8f6, 0xb984, 0xd20, 0x3eee, 0xfcfb, 0xb548, 0x1, 0x0);
        gbc.writeMem(0x8f6, { 0x31, 0x23, 0x92 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9223, gbc.sp());
        EXPECT(0x8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03BE
        gbc.setState(0xe712, 0x7666, 0xdd50, 0x6661, 0xb782, 0x9d82, 0x0, 0x0);
        gbc.writeMem(0xe712, { 0x31, 0x47, 0xa9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa947, gbc.sp());
        EXPECT(0xe715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe712));
        EXPECT(0x47, gbc.readMem(0xe713));
        EXPECT(0xa9, gbc.readMem(0xe714));
        // 31 03BF
        gbc.setState(0x5392, 0xcdc3, 0xfdf0, 0xa039, 0x47ce, 0x2cb5, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0x31, 0xf6, 0xa1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa1f6, gbc.sp());
        EXPECT(0x5395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03C0
        gbc.setState(0xe7c5, 0xed0d, 0xbe00, 0x104, 0x1216, 0x4c8, 0x1, 0x0);
        gbc.writeMem(0xe7c5, { 0x31, 0xce, 0x6e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6ece, gbc.sp());
        EXPECT(0xe7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe7c5));
        EXPECT(0xce, gbc.readMem(0xe7c6));
        EXPECT(0x6e, gbc.readMem(0xe7c7));
        // 31 03C1
        gbc.setState(0x661d, 0xb12d, 0x37c0, 0xbe55, 0xed63, 0xf389, 0x1, 0x0);
        gbc.writeMem(0x661d, { 0x31, 0x55, 0x38 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3855, gbc.sp());
        EXPECT(0x6620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03C2
        gbc.setState(0x4f31, 0xab7, 0x2280, 0x3c92, 0x2ef0, 0xda4d, 0x1, 0x0);
        gbc.writeMem(0x4f31, { 0x31, 0x21, 0x21 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2121, gbc.sp());
        EXPECT(0x4f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03C3
        gbc.setState(0x6d, 0xd1f0, 0x3650, 0x6be3, 0xa095, 0xdbbd, 0x0, 0x0);
        gbc.writeMem(0x6d, { 0x31, 0x29, 0x94 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9429, gbc.sp());
        EXPECT(0x70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03C4
        gbc.setState(0x1738, 0xb0cd, 0xa900, 0x9ce1, 0x66d9, 0x6769, 0x0, 0x0);
        gbc.writeMem(0x1738, { 0x31, 0xbd, 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb7bd, gbc.sp());
        EXPECT(0x173b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03C5
        gbc.setState(0x98b7, 0xa9d, 0x47b0, 0xfe3c, 0x303e, 0xe88b, 0x0, 0x0);
        gbc.writeMem(0x98b7, { 0x31, 0x30, 0xdf });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdf30, gbc.sp());
        EXPECT(0x98ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x98b7));
        EXPECT(0x30, gbc.readMem(0x98b8));
        EXPECT(0xdf, gbc.readMem(0x98b9));
        // 31 03C6
        gbc.setState(0x5de8, 0x9959, 0x4ce0, 0x64a4, 0xb14b, 0xf7b4, 0x0, 0x0);
        gbc.writeMem(0x5de8, { 0x31, 0xee, 0x9d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9dee, gbc.sp());
        EXPECT(0x5deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03C7
        gbc.setState(0x1e5d, 0x64f3, 0xf1a0, 0x77fa, 0x1f2a, 0x5c26, 0x0, 0x0);
        gbc.writeMem(0x1e5d, { 0x31, 0x91, 0xd0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd091, gbc.sp());
        EXPECT(0x1e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03C8
        gbc.setState(0xc0e2, 0x483f, 0x200, 0x6194, 0x99a6, 0x4c2c, 0x1, 0x0);
        gbc.writeMem(0xc0e2, { 0x31, 0x41, 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3c41, gbc.sp());
        EXPECT(0xc0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc0e2));
        EXPECT(0x41, gbc.readMem(0xc0e3));
        EXPECT(0x3c, gbc.readMem(0xc0e4));
        // 31 03C9
        gbc.setState(0x8a68, 0x15d1, 0xa490, 0x29cf, 0x8f25, 0x4411, 0x1, 0x0);
        gbc.writeMem(0x8a68, { 0x31, 0x8, 0x58 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5808, gbc.sp());
        EXPECT(0x8a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8a68));
        EXPECT(0x8, gbc.readMem(0x8a69));
        EXPECT(0x58, gbc.readMem(0x8a6a));
        // 31 03CA
        gbc.setState(0xab17, 0x7e3b, 0xc950, 0x855d, 0xe69, 0xe4af, 0x0, 0x1);
        gbc.writeMem(0xab17, { 0x31, 0x9a, 0x95 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x959a, gbc.sp());
        EXPECT(0xab1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xab17));
        EXPECT(0x9a, gbc.readMem(0xab18));
        EXPECT(0x95, gbc.readMem(0xab19));
        // 31 03CB
        gbc.setState(0x6f8e, 0xd55a, 0xea0, 0xf287, 0xe4e5, 0x4977, 0x1, 0x1);
        gbc.writeMem(0x6f8e, { 0x31, 0xa7, 0xd4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd4a7, gbc.sp());
        EXPECT(0x6f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03CC
        gbc.setState(0x4d9f, 0xdbe0, 0x6030, 0xa082, 0x64c0, 0xe35, 0x1, 0x0);
        gbc.writeMem(0x4d9f, { 0x31, 0x99, 0x2c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2c99, gbc.sp());
        EXPECT(0x4da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03CD
        gbc.setState(0x9e30, 0xae22, 0x5420, 0x3674, 0xc6c9, 0x8d7d, 0x1, 0x1);
        gbc.writeMem(0x9e30, { 0x31, 0x47, 0x78 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7847, gbc.sp());
        EXPECT(0x9e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9e30));
        EXPECT(0x47, gbc.readMem(0x9e31));
        EXPECT(0x78, gbc.readMem(0x9e32));
        // 31 03CE
        gbc.setState(0x513e, 0x45d5, 0xede0, 0x5352, 0xc970, 0xd908, 0x1, 0x1);
        gbc.writeMem(0x513e, { 0x31, 0x49, 0xc6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc649, gbc.sp());
        EXPECT(0x5141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03D1
        gbc.setState(0x8355, 0x81b8, 0x40b0, 0x124e, 0xce95, 0x4cd0, 0x1, 0x1);
        gbc.writeMem(0x8355, { 0x31, 0x12, 0xab });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xab12, gbc.sp());
        EXPECT(0x8358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8355));
        EXPECT(0x12, gbc.readMem(0x8356));
        EXPECT(0xab, gbc.readMem(0x8357));
        // 31 03D3
        gbc.setState(0xa68e, 0xce8e, 0x69a0, 0x4287, 0x6be2, 0x3fc8, 0x0, 0x1);
        gbc.writeMem(0xa68e, { 0x31, 0xa5, 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8fa5, gbc.sp());
        EXPECT(0xa691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa68e));
        EXPECT(0xa5, gbc.readMem(0xa68f));
        EXPECT(0x8f, gbc.readMem(0xa690));
        // 31 03D4
        gbc.setState(0x22f, 0xcefe, 0x9300, 0x183b, 0xbae9, 0xed9, 0x1, 0x0);
        gbc.writeMem(0x22f, { 0x31, 0xae, 0x7f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7fae, gbc.sp());
        EXPECT(0x232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03D5
        gbc.setState(0xe877, 0xad27, 0xedb0, 0x7926, 0x22d8, 0x569c, 0x1, 0x1);
        gbc.writeMem(0xe877, { 0x31, 0x6e, 0x6b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6b6e, gbc.sp());
        EXPECT(0xe87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe877));
        EXPECT(0x6e, gbc.readMem(0xe878));
        EXPECT(0x6b, gbc.readMem(0xe879));
        // 31 03D6
        gbc.setState(0xe827, 0x598a, 0x1610, 0x3ffb, 0xbc6f, 0x4c02, 0x1, 0x0);
        gbc.writeMem(0xe827, { 0x31, 0x4c, 0xfe });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfe4c, gbc.sp());
        EXPECT(0xe82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe827));
        EXPECT(0x4c, gbc.readMem(0xe828));
        EXPECT(0xfe, gbc.readMem(0xe829));
        // 31 03D7
        gbc.setState(0x71c8, 0x4f1f, 0x6290, 0x852a, 0x4336, 0xa8cf, 0x0, 0x1);
        gbc.writeMem(0x71c8, { 0x31, 0x50, 0x3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x350, gbc.sp());
        EXPECT(0x71cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03D8
        gbc.setState(0x5372, 0x3e1, 0x54b0, 0x3dd1, 0x844c, 0x286e, 0x0, 0x0);
        gbc.writeMem(0x5372, { 0x31, 0x61, 0x3d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3d61, gbc.sp());
        EXPECT(0x5375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03D9
        gbc.setState(0xdd66, 0x4ff5, 0x3c60, 0xeb12, 0xac3f, 0xa778, 0x0, 0x0);
        gbc.writeMem(0xdd66, { 0x31, 0xa4, 0x74 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x74a4, gbc.sp());
        EXPECT(0xdd69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xdd66));
        EXPECT(0xa4, gbc.readMem(0xdd67));
        EXPECT(0x74, gbc.readMem(0xdd68));
        // 31 03DA
        gbc.setState(0x11b3, 0x5543, 0x8e0, 0x38d3, 0x258b, 0xee6e, 0x1, 0x1);
        gbc.writeMem(0x11b3, { 0x31, 0x1c, 0xdd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdd1c, gbc.sp());
        EXPECT(0x11b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 31 03DB
        gbc.setState(0xd535, 0x1544, 0x7910, 0xeb0d, 0xcb81, 0x507e, 0x1, 0x1);
        gbc.writeMem(0xd535, { 0x31, 0x7c, 0x5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x57c, gbc.sp());
        EXPECT(0xd538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd535));
        EXPECT(0x7c, gbc.readMem(0xd536));
        EXPECT(0x5, gbc.readMem(0xd537));
        // 31 03DC
        gbc.setState(0x66c0, 0x2414, 0x8270, 0x1c48, 0xfa17, 0xc91, 0x0, 0x1);
        gbc.writeMem(0x66c0, { 0x31, 0xe, 0x71 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x710e, gbc.sp());
        EXPECT(0x66c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03DD
        gbc.setState(0xc2d1, 0xa87b, 0x8b10, 0x67, 0x4523, 0x8fc8, 0x1, 0x1);
        gbc.writeMem(0xc2d1, { 0x31, 0x99, 0x91 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9199, gbc.sp());
        EXPECT(0xc2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc2d1));
        EXPECT(0x99, gbc.readMem(0xc2d2));
        EXPECT(0x91, gbc.readMem(0xc2d3));
        // 31 03DE
        gbc.setState(0x5197, 0x5078, 0xa10, 0xc4e5, 0x3a61, 0x75bc, 0x1, 0x0);
        gbc.writeMem(0x5197, { 0x31, 0xad, 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x10ad, gbc.sp());
        EXPECT(0x519a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03DF
        gbc.setState(0x57a1, 0x4280, 0x90, 0xdd6, 0xc178, 0xfe26, 0x1, 0x1);
        gbc.writeMem(0x57a1, { 0x31, 0x1a, 0x8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x81a, gbc.sp());
        EXPECT(0x57a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03E0
        gbc.setState(0xddf5, 0xbbac, 0xa080, 0xce4f, 0x790a, 0xb1a1, 0x0, 0x0);
        gbc.writeMem(0xddf5, { 0x31, 0xe, 0xdc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdc0e, gbc.sp());
        EXPECT(0xddf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xddf5));
        EXPECT(0xe, gbc.readMem(0xddf6));
        EXPECT(0xdc, gbc.readMem(0xddf7));
        // 31 03E1
        gbc.setState(0xa48f, 0xd01a, 0x3bd0, 0xa0c3, 0x5c4c, 0xe155, 0x1, 0x1);
        gbc.writeMem(0xa48f, { 0x31, 0xd2, 0x23 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x23d2, gbc.sp());
        EXPECT(0xa492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa48f));
        EXPECT(0xd2, gbc.readMem(0xa490));
        EXPECT(0x23, gbc.readMem(0xa491));
        // 31 03E2
        gbc.setState(0xc38e, 0xa947, 0x4470, 0x2f05, 0x4761, 0x6290, 0x0, 0x1);
        gbc.writeMem(0xc38e, { 0x31, 0xf9, 0x5d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5df9, gbc.sp());
        EXPECT(0xc391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc38e));
        EXPECT(0xf9, gbc.readMem(0xc38f));
        EXPECT(0x5d, gbc.readMem(0xc390));
        // 31 03E3
        gbc.setState(0xb3fb, 0x895, 0x4040, 0xe096, 0x36dd, 0x2c45, 0x1, 0x1);
        gbc.writeMem(0xb3fb, { 0x31, 0xe8, 0x38 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x38e8, gbc.sp());
        EXPECT(0xb3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb3fb));
        EXPECT(0xe8, gbc.readMem(0xb3fc));
        EXPECT(0x38, gbc.readMem(0xb3fd));
        // 31 03E5
        gbc.setState(0x5b31, 0x6609, 0x7110, 0xcb66, 0xb169, 0xe40d, 0x0, 0x0);
        gbc.writeMem(0x5b31, { 0x31, 0xa8, 0xb2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb2a8, gbc.sp());
        EXPECT(0x5b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 31 03E6
        gbc.setState(0x9aee, 0xea05, 0xc0c0, 0x929f, 0x9222, 0xe3b1, 0x0, 0x0);
        gbc.writeMem(0x9aee, { 0x31, 0xfb, 0xb6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb6fb, gbc.sp());
        EXPECT(0x9af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9aee));
        EXPECT(0xfb, gbc.readMem(0x9aef));
        EXPECT(0xb6, gbc.readMem(0x9af0));
        // 31 03E7
        gbc.setState(0x845d, 0xd722, 0xce80, 0xba8a, 0x144b, 0xd402, 0x1, 0x0);
        gbc.writeMem(0x845d, { 0x31, 0x39, 0xba });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xba39, gbc.sp());
        EXPECT(0x8460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x845d));
        EXPECT(0x39, gbc.readMem(0x845e));
        EXPECT(0xba, gbc.readMem(0x845f));
    }
