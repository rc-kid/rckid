    TEST(gbcemu, opcode_4a) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 4A 0000
        gbc.setState(0xa075, 0x3039, 0x5d00, 0x3608, 0x3037, 0xf0f6, 0x1, 0x1);
        gbc.writeMem(0xa075, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3039);
        EXPECT(gbc.pc(), 0xa076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa075), 0x4a);
        // 4A 0001
        gbc.setState(0x361b, 0x5cef, 0xaef0, 0x958d, 0xe933, 0x9977, 0x0, 0x1);
        gbc.writeMem(0x361b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5cef);
        EXPECT(gbc.pc(), 0x361c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0002
        gbc.setState(0xd569, 0xfc41, 0x5840, 0xb03a, 0x92af, 0x5068, 0x0, 0x0);
        gbc.writeMem(0xd569, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xfc41);
        EXPECT(gbc.pc(), 0xd56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd569), 0x4a);
        // 4A 0004
        gbc.setState(0x940c, 0x5bf3, 0x88b0, 0x2cb2, 0xd951, 0xf633, 0x1, 0x0);
        gbc.writeMem(0x940c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5bf3);
        EXPECT(gbc.pc(), 0x940d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x940c), 0x4a);
        // 4A 0005
        gbc.setState(0x9124, 0x68bf, 0x18d0, 0xe9c1, 0x59f4, 0xd5a6, 0x0, 0x0);
        gbc.writeMem(0x9124, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x68bf);
        EXPECT(gbc.pc(), 0x9125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9124), 0x4a);
        // 4A 0006
        gbc.setState(0xd931, 0xaf74, 0x3da0, 0x81b2, 0x7f12, 0xa2f7, 0x0, 0x1);
        gbc.writeMem(0xd931, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xaf74);
        EXPECT(gbc.pc(), 0xd932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd931), 0x4a);
        // 4A 0007
        gbc.setState(0xdaf0, 0x6cb9, 0x3e70, 0xd9c3, 0xe354, 0xb3fe, 0x0, 0x0);
        gbc.writeMem(0xdaf0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6cb9);
        EXPECT(gbc.pc(), 0xdaf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf0), 0x4a);
        // 4A 0008
        gbc.setState(0x297f, 0xc760, 0x2da0, 0xf830, 0x3afa, 0x6fdb, 0x0, 0x1);
        gbc.writeMem(0x297f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc760);
        EXPECT(gbc.pc(), 0x2980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0009
        gbc.setState(0x1404, 0x585, 0x1ad0, 0xfcac, 0x8232, 0x8737, 0x1, 0x0);
        gbc.writeMem(0x1404, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x585);
        EXPECT(gbc.pc(), 0x1405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 000A
        gbc.setState(0x2e60, 0x14fa, 0x8120, 0x3f7f, 0xdebb, 0x8bce, 0x0, 0x0);
        gbc.writeMem(0x2e60, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x14fa);
        EXPECT(gbc.pc(), 0x2e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 000B
        gbc.setState(0x4324, 0xd272, 0x1f00, 0xe0d, 0x9e81, 0x7af6, 0x0, 0x0);
        gbc.writeMem(0x4324, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd272);
        EXPECT(gbc.pc(), 0x4325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 000C
        gbc.setState(0xda1d, 0xf397, 0x9ae0, 0x4532, 0xc786, 0xe395, 0x1, 0x1);
        gbc.writeMem(0xda1d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf397);
        EXPECT(gbc.pc(), 0xda1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda1d), 0x4a);
        // 4A 000D
        gbc.setState(0x4648, 0x3522, 0xfd60, 0xc6f0, 0xd48e, 0x3fd3, 0x0, 0x1);
        gbc.writeMem(0x4648, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3522);
        EXPECT(gbc.pc(), 0x4649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 000E
        gbc.setState(0x349b, 0xa22c, 0xb2c0, 0xc65a, 0xa5a, 0xd1ce, 0x1, 0x0);
        gbc.writeMem(0x349b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa22c);
        EXPECT(gbc.pc(), 0x349c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 000F
        gbc.setState(0x8806, 0x4ca7, 0x3050, 0xfcb3, 0x5567, 0xc10b, 0x0, 0x1);
        gbc.writeMem(0x8806, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4ca7);
        EXPECT(gbc.pc(), 0x8807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8806), 0x4a);
        // 4A 0010
        gbc.setState(0x23e9, 0x6497, 0xabe0, 0x5397, 0xa992, 0x694c, 0x1, 0x0);
        gbc.writeMem(0x23e9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6497);
        EXPECT(gbc.pc(), 0x23ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0011
        gbc.setState(0x39c2, 0x5fe, 0x65f0, 0x5306, 0x3a8e, 0xf2b9, 0x1, 0x1);
        gbc.writeMem(0x39c2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5fe);
        EXPECT(gbc.pc(), 0x39c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0012
        gbc.setState(0xa417, 0xdbab, 0x1160, 0x6056, 0x2997, 0xa4c6, 0x0, 0x0);
        gbc.writeMem(0xa417, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xdbab);
        EXPECT(gbc.pc(), 0xa418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa417), 0x4a);
        // 4A 0014
        gbc.setState(0x50bb, 0xf5d8, 0xd9d0, 0xd80, 0xe312, 0xf8ba, 0x1, 0x0);
        gbc.writeMem(0x50bb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf5d8);
        EXPECT(gbc.pc(), 0x50bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0015
        gbc.setState(0x8f6a, 0xa568, 0x5570, 0xb93c, 0x26aa, 0x22ad, 0x1, 0x1);
        gbc.writeMem(0x8f6a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa568);
        EXPECT(gbc.pc(), 0x8f6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f6a), 0x4a);
        // 4A 0016
        gbc.setState(0x21c8, 0xba81, 0xf3f0, 0x7f05, 0x20f2, 0x1c27, 0x0, 0x1);
        gbc.writeMem(0x21c8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xba81);
        EXPECT(gbc.pc(), 0x21c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0017
        gbc.setState(0x2b17, 0xf88f, 0x1ab0, 0xb68b, 0x148e, 0x4de, 0x1, 0x1);
        gbc.writeMem(0x2b17, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf88f);
        EXPECT(gbc.pc(), 0x2b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0018
        gbc.setState(0x8e51, 0xa8a6, 0x8c80, 0x1394, 0x76b4, 0x3974, 0x0, 0x1);
        gbc.writeMem(0x8e51, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa8a6);
        EXPECT(gbc.pc(), 0x8e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e51), 0x4a);
        // 4A 0019
        gbc.setState(0x9959, 0x519c, 0x3fb0, 0xdd57, 0xa08e, 0x9fb8, 0x1, 0x1);
        gbc.writeMem(0x9959, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x519c);
        EXPECT(gbc.pc(), 0x995a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9959), 0x4a);
        // 4A 001A
        gbc.setState(0x1f75, 0x4f13, 0x7280, 0x6f85, 0xd94c, 0x127a, 0x0, 0x1);
        gbc.writeMem(0x1f75, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4f13);
        EXPECT(gbc.pc(), 0x1f76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 001B
        gbc.setState(0xcb1b, 0x2820, 0x6ab0, 0x1e47, 0x9198, 0xc160, 0x1, 0x0);
        gbc.writeMem(0xcb1b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2820);
        EXPECT(gbc.pc(), 0xcb1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb1b), 0x4a);
        // 4A 001C
        gbc.setState(0xebbd, 0x20e6, 0x65d0, 0xe8bb, 0x3308, 0x2e3b, 0x1, 0x1);
        gbc.writeMem(0xebbd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x20e6);
        EXPECT(gbc.pc(), 0xebbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebbd), 0x4a);
        // 4A 001D
        gbc.setState(0x45ac, 0xfa93, 0xab50, 0x78fe, 0xe5d7, 0x4328, 0x0, 0x1);
        gbc.writeMem(0x45ac, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfa93);
        EXPECT(gbc.pc(), 0x45ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 001F
        gbc.setState(0x7653, 0x884a, 0x6530, 0xf3a0, 0xa35a, 0x1530, 0x1, 0x1);
        gbc.writeMem(0x7653, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x884a);
        EXPECT(gbc.pc(), 0x7654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0020
        gbc.setState(0x19b6, 0x372d, 0x530, 0x5640, 0x1fdc, 0x7604, 0x0, 0x0);
        gbc.writeMem(0x19b6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x372d);
        EXPECT(gbc.pc(), 0x19b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0021
        gbc.setState(0x6624, 0xe43, 0x1510, 0x6bee, 0xfb25, 0xe957, 0x1, 0x0);
        gbc.writeMem(0x6624, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe43);
        EXPECT(gbc.pc(), 0x6625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0022
        gbc.setState(0x52f1, 0xa6d7, 0xfc0, 0xcfb3, 0x436a, 0x527a, 0x1, 0x1);
        gbc.writeMem(0x52f1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa6d7);
        EXPECT(gbc.pc(), 0x52f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0023
        gbc.setState(0x9ed9, 0xfd31, 0xae80, 0xcd1a, 0x40cb, 0xef31, 0x0, 0x1);
        gbc.writeMem(0x9ed9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xfd31);
        EXPECT(gbc.pc(), 0x9eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed9), 0x4a);
        // 4A 0024
        gbc.setState(0xe78e, 0x1215, 0x2790, 0xc668, 0xac41, 0xbb37, 0x0, 0x1);
        gbc.writeMem(0xe78e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1215);
        EXPECT(gbc.pc(), 0xe78f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe78e), 0x4a);
        // 4A 0025
        gbc.setState(0xd2be, 0x5ac3, 0x14c0, 0x6890, 0x8ac, 0xa6, 0x0, 0x0);
        gbc.writeMem(0xd2be, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5ac3);
        EXPECT(gbc.pc(), 0xd2bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2be), 0x4a);
        // 4A 0026
        gbc.setState(0x448, 0xda8b, 0x2ef0, 0x55dc, 0x6c1, 0x3ebe, 0x0, 0x0);
        gbc.writeMem(0x448, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xda8b);
        EXPECT(gbc.pc(), 0x449);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0027
        gbc.setState(0xbb77, 0xc9e9, 0x9350, 0x68d9, 0x13a1, 0x75a3, 0x1, 0x1);
        gbc.writeMem(0xbb77, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc9e9);
        EXPECT(gbc.pc(), 0xbb78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb77), 0x4a);
        // 4A 0029
        gbc.setState(0x4c69, 0xcf0b, 0x4980, 0xb855, 0xc77e, 0x8318, 0x1, 0x1);
        gbc.writeMem(0x4c69, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xcf0b);
        EXPECT(gbc.pc(), 0x4c6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 002A
        gbc.setState(0xd51e, 0xd7b8, 0x6c0, 0x5a8d, 0x6c20, 0x442e, 0x0, 0x1);
        gbc.writeMem(0xd51e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd7b8);
        EXPECT(gbc.pc(), 0xd51f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd51e), 0x4a);
        // 4A 002B
        gbc.setState(0x4b50, 0xddb0, 0x7310, 0x1395, 0xb562, 0x24c6, 0x1, 0x1);
        gbc.writeMem(0x4b50, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xddb0);
        EXPECT(gbc.pc(), 0x4b51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 002C
        gbc.setState(0xbae8, 0x4965, 0x44f0, 0xab78, 0xc42e, 0xaf08, 0x1, 0x0);
        gbc.writeMem(0xbae8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4965);
        EXPECT(gbc.pc(), 0xbae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbae8), 0x4a);
        // 4A 002D
        gbc.setState(0xbbb5, 0x656b, 0xfc70, 0x31de, 0x8c7d, 0xd74c, 0x0, 0x1);
        gbc.writeMem(0xbbb5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x656b);
        EXPECT(gbc.pc(), 0xbbb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb5), 0x4a);
        // 4A 002E
        gbc.setState(0x6be, 0xf956, 0xc000, 0xbcb4, 0x21cb, 0x3309, 0x0, 0x1);
        gbc.writeMem(0x6be, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf956);
        EXPECT(gbc.pc(), 0x6bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 002F
        gbc.setState(0x2e0a, 0xcf37, 0x5150, 0xf8aa, 0x69cd, 0xa8c0, 0x0, 0x1);
        gbc.writeMem(0x2e0a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xcf37);
        EXPECT(gbc.pc(), 0x2e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0030
        gbc.setState(0xc5b1, 0x45e3, 0xab20, 0xb8b5, 0xd38f, 0xe9bd, 0x0, 0x0);
        gbc.writeMem(0xc5b1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x45e3);
        EXPECT(gbc.pc(), 0xc5b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b1), 0x4a);
        // 4A 0032
        gbc.setState(0xe95b, 0x5a24, 0xfc90, 0x8f39, 0x9e2b, 0xff33, 0x1, 0x0);
        gbc.writeMem(0xe95b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5a24);
        EXPECT(gbc.pc(), 0xe95c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe95b), 0x4a);
        // 4A 0033
        gbc.setState(0xfed, 0x5cee, 0xdf10, 0xdaaa, 0x2dc0, 0xd9c, 0x1, 0x0);
        gbc.writeMem(0xfed, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5cee);
        EXPECT(gbc.pc(), 0xfee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0034
        gbc.setState(0xe467, 0xe939, 0xef80, 0x63d7, 0xe89e, 0xc177, 0x0, 0x1);
        gbc.writeMem(0xe467, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe939);
        EXPECT(gbc.pc(), 0xe468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe467), 0x4a);
        // 4A 0035
        gbc.setState(0x8be1, 0x3078, 0xd9d0, 0xf931, 0xadaa, 0x629e, 0x0, 0x1);
        gbc.writeMem(0x8be1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3078);
        EXPECT(gbc.pc(), 0x8be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be1), 0x4a);
        // 4A 0036
        gbc.setState(0x774d, 0x46ec, 0xbb60, 0x14dc, 0xb2fd, 0xc86a, 0x1, 0x1);
        gbc.writeMem(0x774d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x46ec);
        EXPECT(gbc.pc(), 0x774e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0037
        gbc.setState(0x314a, 0x35f3, 0xa4e0, 0xbd13, 0xc443, 0x5fc3, 0x0, 0x1);
        gbc.writeMem(0x314a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x35f3);
        EXPECT(gbc.pc(), 0x314b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0038
        gbc.setState(0xb20d, 0x54fd, 0x4940, 0x7b6f, 0xefc4, 0x9127, 0x0, 0x0);
        gbc.writeMem(0xb20d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x54fd);
        EXPECT(gbc.pc(), 0xb20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20d), 0x4a);
        // 4A 0039
        gbc.setState(0xadb1, 0x5969, 0x4d20, 0xa26c, 0xdb2d, 0x55f4, 0x0, 0x0);
        gbc.writeMem(0xadb1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5969);
        EXPECT(gbc.pc(), 0xadb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb1), 0x4a);
        // 4A 003A
        gbc.setState(0xab2f, 0x7e06, 0xe830, 0x76f8, 0x4b2e, 0x6020, 0x1, 0x0);
        gbc.writeMem(0xab2f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7e06);
        EXPECT(gbc.pc(), 0xab30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab2f), 0x4a);
        // 4A 003B
        gbc.setState(0xc78a, 0xbf74, 0xf2d0, 0xbe9c, 0x82f2, 0xc357, 0x0, 0x1);
        gbc.writeMem(0xc78a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbf74);
        EXPECT(gbc.pc(), 0xc78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc78a), 0x4a);
        // 4A 003C
        gbc.setState(0x46a9, 0xb6a2, 0x1f20, 0xaccf, 0x3625, 0x6624, 0x0, 0x0);
        gbc.writeMem(0x46a9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb6a2);
        EXPECT(gbc.pc(), 0x46aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 003D
        gbc.setState(0x642e, 0xf278, 0x57f0, 0x208b, 0x3e6a, 0x5dff, 0x0, 0x1);
        gbc.writeMem(0x642e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf278);
        EXPECT(gbc.pc(), 0x642f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 003E
        gbc.setState(0x652, 0xe2e5, 0x6a40, 0x56b6, 0x519f, 0x7461, 0x0, 0x0);
        gbc.writeMem(0x652, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe2e5);
        EXPECT(gbc.pc(), 0x653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 003F
        gbc.setState(0x4e6d, 0x486e, 0xd1b0, 0xbb02, 0x9f6f, 0x8a3b, 0x0, 0x1);
        gbc.writeMem(0x4e6d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x486e);
        EXPECT(gbc.pc(), 0x4e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0040
        gbc.setState(0x54e8, 0x5747, 0x5a0, 0x8f85, 0xe609, 0x12ad, 0x0, 0x1);
        gbc.writeMem(0x54e8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5747);
        EXPECT(gbc.pc(), 0x54e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0041
        gbc.setState(0x78c6, 0x6166, 0x3ca0, 0x4fd0, 0x2c98, 0x4828, 0x0, 0x0);
        gbc.writeMem(0x78c6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6166);
        EXPECT(gbc.pc(), 0x78c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0042
        gbc.setState(0xd800, 0x92b5, 0xbc30, 0xfa2d, 0xdcbb, 0x8e26, 0x1, 0x1);
        gbc.writeMem(0xd800, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x92b5);
        EXPECT(gbc.pc(), 0xd801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd800), 0x4a);
        // 4A 0043
        gbc.setState(0x9b2f, 0x4409, 0x3cd0, 0xe2ce, 0x2144, 0x6999, 0x0, 0x0);
        gbc.writeMem(0x9b2f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4409);
        EXPECT(gbc.pc(), 0x9b30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b2f), 0x4a);
        // 4A 0044
        gbc.setState(0xde0, 0x7555, 0x70d0, 0x3b5d, 0x355b, 0x2523, 0x0, 0x1);
        gbc.writeMem(0xde0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7555);
        EXPECT(gbc.pc(), 0xde1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0045
        gbc.setState(0x5ddb, 0x8d47, 0x8930, 0x4b58, 0x2936, 0xde60, 0x0, 0x1);
        gbc.writeMem(0x5ddb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8d47);
        EXPECT(gbc.pc(), 0x5ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0046
        gbc.setState(0x6e51, 0x8038, 0x10b0, 0x6c87, 0x94f5, 0x920a, 0x0, 0x0);
        gbc.writeMem(0x6e51, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8038);
        EXPECT(gbc.pc(), 0x6e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0047
        gbc.setState(0x19f5, 0xa78, 0xa6b0, 0xcd6b, 0x474a, 0x4cfb, 0x0, 0x0);
        gbc.writeMem(0x19f5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa78);
        EXPECT(gbc.pc(), 0x19f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0048
        gbc.setState(0x4f0, 0xf0c4, 0xdcb0, 0x2f43, 0x1c4a, 0xfa8f, 0x0, 0x1);
        gbc.writeMem(0x4f0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf0c4);
        EXPECT(gbc.pc(), 0x4f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0049
        gbc.setState(0xc0b8, 0x5c88, 0xcdc0, 0x7035, 0xbbf3, 0x9f03, 0x1, 0x0);
        gbc.writeMem(0xc0b8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5c88);
        EXPECT(gbc.pc(), 0xc0b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0b8), 0x4a);
        // 4A 004A
        gbc.setState(0xa45, 0x6f7c, 0x7980, 0x26a0, 0x10c4, 0x96c, 0x1, 0x1);
        gbc.writeMem(0xa45, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6f7c);
        EXPECT(gbc.pc(), 0xa46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 004B
        gbc.setState(0x4a94, 0x83a2, 0xb770, 0xc830, 0x865f, 0x6625, 0x1, 0x1);
        gbc.writeMem(0x4a94, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x83a2);
        EXPECT(gbc.pc(), 0x4a95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 004C
        gbc.setState(0x448f, 0x3707, 0x4aa0, 0xfdbe, 0xafb7, 0xde08, 0x1, 0x1);
        gbc.writeMem(0x448f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3707);
        EXPECT(gbc.pc(), 0x4490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 004D
        gbc.setState(0x66fd, 0x743e, 0x640, 0x6825, 0x587e, 0xd80d, 0x0, 0x0);
        gbc.writeMem(0x66fd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x743e);
        EXPECT(gbc.pc(), 0x66fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 004F
        gbc.setState(0xc01c, 0xdb8f, 0x28b0, 0xba23, 0xc5c4, 0x4ba5, 0x0, 0x0);
        gbc.writeMem(0xc01c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xdb8f);
        EXPECT(gbc.pc(), 0xc01d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01c), 0x4a);
        // 4A 0050
        gbc.setState(0x5d5c, 0xeb53, 0x1f0, 0x1ca1, 0xd8e8, 0xbbbe, 0x0, 0x0);
        gbc.writeMem(0x5d5c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xeb53);
        EXPECT(gbc.pc(), 0x5d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0051
        gbc.setState(0x367e, 0x5cfc, 0xde40, 0xa6b6, 0x6a88, 0xa0a2, 0x0, 0x0);
        gbc.writeMem(0x367e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5cfc);
        EXPECT(gbc.pc(), 0x367f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0052
        gbc.setState(0xb7b7, 0x202, 0xb750, 0xe3b3, 0x7c1c, 0x41da, 0x0, 0x1);
        gbc.writeMem(0xb7b7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x202);
        EXPECT(gbc.pc(), 0xb7b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b7), 0x4a);
        // 4A 0053
        gbc.setState(0x87d8, 0x4b26, 0xd550, 0x489, 0xe701, 0xb9ab, 0x0, 0x1);
        gbc.writeMem(0x87d8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4b26);
        EXPECT(gbc.pc(), 0x87d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d8), 0x4a);
        // 4A 0054
        gbc.setState(0x3f7d, 0x42f9, 0xb9b0, 0x1e45, 0x63b7, 0x5dab, 0x1, 0x1);
        gbc.writeMem(0x3f7d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x42f9);
        EXPECT(gbc.pc(), 0x3f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0055
        gbc.setState(0x3618, 0xdec3, 0x3670, 0x9cb0, 0x89f8, 0x24cb, 0x1, 0x0);
        gbc.writeMem(0x3618, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdec3);
        EXPECT(gbc.pc(), 0x3619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0056
        gbc.setState(0x9c3, 0x26fb, 0x26b0, 0x36d8, 0x8b9b, 0xf81c, 0x0, 0x1);
        gbc.writeMem(0x9c3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x26fb);
        EXPECT(gbc.pc(), 0x9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0057
        gbc.setState(0x3ebb, 0x8aa8, 0x9aa0, 0x1c77, 0xec79, 0x23fc, 0x0, 0x0);
        gbc.writeMem(0x3ebb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8aa8);
        EXPECT(gbc.pc(), 0x3ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0058
        gbc.setState(0x5cad, 0x56c3, 0xcd30, 0x9bbf, 0xc355, 0xcf15, 0x0, 0x1);
        gbc.writeMem(0x5cad, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x56c3);
        EXPECT(gbc.pc(), 0x5cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0059
        gbc.setState(0xcc31, 0xaf87, 0xe630, 0x4250, 0x6699, 0x73bc, 0x1, 0x0);
        gbc.writeMem(0xcc31, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xaf87);
        EXPECT(gbc.pc(), 0xcc32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc31), 0x4a);
        // 4A 005A
        gbc.setState(0x1a95, 0x3d1f, 0xe960, 0x7a88, 0x6713, 0x96a5, 0x1, 0x1);
        gbc.writeMem(0x1a95, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3d1f);
        EXPECT(gbc.pc(), 0x1a96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 005B
        gbc.setState(0xa6d3, 0xa5e2, 0xd700, 0xc0b1, 0x2b61, 0x2efb, 0x0, 0x1);
        gbc.writeMem(0xa6d3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa5e2);
        EXPECT(gbc.pc(), 0xa6d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d3), 0x4a);
        // 4A 005D
        gbc.setState(0xc0ac, 0x1408, 0xfdf0, 0x508a, 0x300a, 0xb22a, 0x0, 0x1);
        gbc.writeMem(0xc0ac, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1408);
        EXPECT(gbc.pc(), 0xc0ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ac), 0x4a);
        // 4A 005E
        gbc.setState(0x3ae6, 0xdd2c, 0x5c10, 0x55c0, 0x85ab, 0x1453, 0x1, 0x0);
        gbc.writeMem(0x3ae6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdd2c);
        EXPECT(gbc.pc(), 0x3ae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0061
        gbc.setState(0x22ec, 0x35e7, 0x5920, 0xd6d0, 0xfa48, 0x579a, 0x1, 0x1);
        gbc.writeMem(0x22ec, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x35e7);
        EXPECT(gbc.pc(), 0x22ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0062
        gbc.setState(0x8ccd, 0x89ee, 0xaca0, 0xff52, 0xa24, 0x3ae4, 0x1, 0x0);
        gbc.writeMem(0x8ccd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x89ee);
        EXPECT(gbc.pc(), 0x8cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ccd), 0x4a);
        // 4A 0063
        gbc.setState(0x539c, 0xd6d7, 0xa9b0, 0x4eae, 0x6811, 0x14e0, 0x1, 0x1);
        gbc.writeMem(0x539c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd6d7);
        EXPECT(gbc.pc(), 0x539d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0064
        gbc.setState(0x9002, 0x8580, 0x2dd0, 0xb98b, 0x5ddd, 0xe54, 0x1, 0x1);
        gbc.writeMem(0x9002, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8580);
        EXPECT(gbc.pc(), 0x9003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9002), 0x4a);
        // 4A 0065
        gbc.setState(0x793c, 0x29b9, 0x66a0, 0x8d9a, 0xbbd0, 0x1c8c, 0x1, 0x1);
        gbc.writeMem(0x793c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x29b9);
        EXPECT(gbc.pc(), 0x793d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0067
        gbc.setState(0xdbad, 0xbc3c, 0x9f90, 0xa437, 0xbdaf, 0xcdc, 0x0, 0x1);
        gbc.writeMem(0xdbad, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbc3c);
        EXPECT(gbc.pc(), 0xdbae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbad), 0x4a);
        // 4A 0068
        gbc.setState(0xba83, 0x2848, 0x95c0, 0x8c15, 0x83ff, 0x9e1c, 0x0, 0x1);
        gbc.writeMem(0xba83, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2848);
        EXPECT(gbc.pc(), 0xba84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba83), 0x4a);
        // 4A 0069
        gbc.setState(0xc5e6, 0x5a77, 0xe80, 0x6e60, 0x5cd2, 0xe7bb, 0x1, 0x0);
        gbc.writeMem(0xc5e6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5a77);
        EXPECT(gbc.pc(), 0xc5e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e6), 0x4a);
        // 4A 006A
        gbc.setState(0x7139, 0x7d1f, 0xeef0, 0x337d, 0xb732, 0x6d49, 0x0, 0x0);
        gbc.writeMem(0x7139, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7d1f);
        EXPECT(gbc.pc(), 0x713a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 006B
        gbc.setState(0xce00, 0x1a74, 0x81c0, 0x8953, 0x4185, 0xe590, 0x1, 0x1);
        gbc.writeMem(0xce00, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1a74);
        EXPECT(gbc.pc(), 0xce01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce00), 0x4a);
        // 4A 006C
        gbc.setState(0x2708, 0x862e, 0x8490, 0x685f, 0x73, 0x76dd, 0x0, 0x0);
        gbc.writeMem(0x2708, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x862e);
        EXPECT(gbc.pc(), 0x2709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 006D
        gbc.setState(0x1d1d, 0x37a2, 0x7760, 0x7d52, 0xed7b, 0x482b, 0x1, 0x1);
        gbc.writeMem(0x1d1d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x37a2);
        EXPECT(gbc.pc(), 0x1d1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 006E
        gbc.setState(0x23da, 0xcb1b, 0x1b0, 0x614a, 0x8280, 0x38d1, 0x0, 0x0);
        gbc.writeMem(0x23da, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcb1b);
        EXPECT(gbc.pc(), 0x23db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 006F
        gbc.setState(0x5045, 0x81ac, 0x8ff0, 0x60b0, 0x6f5d, 0x4c0d, 0x1, 0x1);
        gbc.writeMem(0x5045, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x81ac);
        EXPECT(gbc.pc(), 0x5046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0070
        gbc.setState(0xc322, 0xb38a, 0x7930, 0x9da8, 0xed55, 0x622c, 0x0, 0x0);
        gbc.writeMem(0xc322, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb38a);
        EXPECT(gbc.pc(), 0xc323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc322), 0x4a);
        // 4A 0071
        gbc.setState(0x18c3, 0xa686, 0x9d00, 0x88d9, 0x93b7, 0x537f, 0x1, 0x0);
        gbc.writeMem(0x18c3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa686);
        EXPECT(gbc.pc(), 0x18c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0073
        gbc.setState(0x10b6, 0xed0d, 0x2a70, 0x97fb, 0xc872, 0xf25c, 0x0, 0x0);
        gbc.writeMem(0x10b6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xed0d);
        EXPECT(gbc.pc(), 0x10b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0074
        gbc.setState(0xdbf9, 0xfd5f, 0x6f40, 0x3a96, 0x5ceb, 0x24dc, 0x1, 0x0);
        gbc.writeMem(0xdbf9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfd5f);
        EXPECT(gbc.pc(), 0xdbfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf9), 0x4a);
        // 4A 0075
        gbc.setState(0xed42, 0xad6f, 0xd160, 0x67e7, 0x1232, 0x2d76, 0x1, 0x1);
        gbc.writeMem(0xed42, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xad6f);
        EXPECT(gbc.pc(), 0xed43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed42), 0x4a);
        // 4A 0076
        gbc.setState(0x188, 0x1287, 0x2580, 0xf7ac, 0x643e, 0xd621, 0x0, 0x1);
        gbc.writeMem(0x188, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1287);
        EXPECT(gbc.pc(), 0x189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0077
        gbc.setState(0x2242, 0xb7f3, 0x9d50, 0x1b2, 0xa4fa, 0x516a, 0x1, 0x1);
        gbc.writeMem(0x2242, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb7f3);
        EXPECT(gbc.pc(), 0x2243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0078
        gbc.setState(0x2991, 0x9bbd, 0x72c0, 0x7b4b, 0xcd8e, 0x430e, 0x0, 0x0);
        gbc.writeMem(0x2991, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9bbd);
        EXPECT(gbc.pc(), 0x2992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0079
        gbc.setState(0x664, 0x17cb, 0x64a0, 0xc6dc, 0xf1cc, 0xaf47, 0x1, 0x1);
        gbc.writeMem(0x664, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x17cb);
        EXPECT(gbc.pc(), 0x665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 007A
        gbc.setState(0x32d4, 0x92bd, 0xc8f0, 0x6ab, 0xd97d, 0xf3b2, 0x0, 0x1);
        gbc.writeMem(0x32d4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x92bd);
        EXPECT(gbc.pc(), 0x32d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 007C
        gbc.setState(0x8c35, 0x5e05, 0x2140, 0x1861, 0x3753, 0xd59e, 0x0, 0x0);
        gbc.writeMem(0x8c35, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5e05);
        EXPECT(gbc.pc(), 0x8c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c35), 0x4a);
        // 4A 007D
        gbc.setState(0x7e08, 0x2a81, 0x1100, 0x33cf, 0x2818, 0x74d0, 0x1, 0x0);
        gbc.writeMem(0x7e08, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2a81);
        EXPECT(gbc.pc(), 0x7e09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 007E
        gbc.setState(0xdcce, 0xe705, 0xf470, 0xb385, 0xf8aa, 0x82dc, 0x1, 0x0);
        gbc.writeMem(0xdcce, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe705);
        EXPECT(gbc.pc(), 0xdccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcce), 0x4a);
        // 4A 007F
        gbc.setState(0xa694, 0x8511, 0x3f20, 0xbba2, 0x249, 0xbde5, 0x1, 0x1);
        gbc.writeMem(0xa694, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8511);
        EXPECT(gbc.pc(), 0xa695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa694), 0x4a);
        // 4A 0080
        gbc.setState(0xd5d7, 0x8b1b, 0xecf0, 0x8629, 0x88d1, 0xed15, 0x1, 0x0);
        gbc.writeMem(0xd5d7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8b1b);
        EXPECT(gbc.pc(), 0xd5d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d7), 0x4a);
        // 4A 0081
        gbc.setState(0x4e3c, 0x1afa, 0x8150, 0xa279, 0xa3f2, 0x77e7, 0x0, 0x1);
        gbc.writeMem(0x4e3c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1afa);
        EXPECT(gbc.pc(), 0x4e3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0082
        gbc.setState(0x5510, 0x6c79, 0x84a0, 0x4a38, 0x8668, 0x7087, 0x0, 0x1);
        gbc.writeMem(0x5510, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6c79);
        EXPECT(gbc.pc(), 0x5511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0083
        gbc.setState(0x5bd9, 0x28d, 0xef90, 0x9b6e, 0x119b, 0xbb41, 0x1, 0x0);
        gbc.writeMem(0x5bd9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x28d);
        EXPECT(gbc.pc(), 0x5bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0084
        gbc.setState(0xc539, 0x9f87, 0xcb00, 0x58de, 0x97f5, 0xb261, 0x1, 0x0);
        gbc.writeMem(0xc539, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9f87);
        EXPECT(gbc.pc(), 0xc53a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc539), 0x4a);
        // 4A 0085
        gbc.setState(0x29e2, 0x4e54, 0xff0, 0xb27b, 0x6374, 0xef63, 0x0, 0x1);
        gbc.writeMem(0x29e2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4e54);
        EXPECT(gbc.pc(), 0x29e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0086
        gbc.setState(0xb33e, 0xf9fd, 0x5760, 0x5217, 0xd7bc, 0xc944, 0x1, 0x1);
        gbc.writeMem(0xb33e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf9fd);
        EXPECT(gbc.pc(), 0xb33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33e), 0x4a);
        // 4A 0088
        gbc.setState(0xbc9e, 0x7644, 0x2040, 0x4409, 0x4509, 0xe189, 0x1, 0x1);
        gbc.writeMem(0xbc9e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7644);
        EXPECT(gbc.pc(), 0xbc9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc9e), 0x4a);
        // 4A 0089
        gbc.setState(0x99e7, 0x1ec6, 0x6050, 0x857d, 0x247b, 0xa3e0, 0x1, 0x1);
        gbc.writeMem(0x99e7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1ec6);
        EXPECT(gbc.pc(), 0x99e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e7), 0x4a);
        // 4A 008A
        gbc.setState(0x346e, 0xe064, 0x8bb0, 0x9f60, 0x405f, 0x2936, 0x0, 0x1);
        gbc.writeMem(0x346e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe064);
        EXPECT(gbc.pc(), 0x346f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 008B
        gbc.setState(0x52ba, 0xba02, 0x83e0, 0x8bb3, 0x5be6, 0x3962, 0x1, 0x0);
        gbc.writeMem(0x52ba, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xba02);
        EXPECT(gbc.pc(), 0x52bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 008C
        gbc.setState(0x9bb5, 0xb7c7, 0xeaf0, 0x9292, 0x70dd, 0x1e8c, 0x1, 0x1);
        gbc.writeMem(0x9bb5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb7c7);
        EXPECT(gbc.pc(), 0x9bb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb5), 0x4a);
        // 4A 008E
        gbc.setState(0x314d, 0x317a, 0x4240, 0x4d22, 0xcfa3, 0x90f9, 0x0, 0x0);
        gbc.writeMem(0x314d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x317a);
        EXPECT(gbc.pc(), 0x314e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 008F
        gbc.setState(0xcf03, 0xd044, 0x2eb0, 0x6b9e, 0x7f76, 0xa474, 0x1, 0x0);
        gbc.writeMem(0xcf03, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd044);
        EXPECT(gbc.pc(), 0xcf04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf03), 0x4a);
        // 4A 0092
        gbc.setState(0x8804, 0xbd2e, 0x6380, 0xfae3, 0xfb60, 0xf0b0, 0x0, 0x0);
        gbc.writeMem(0x8804, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xbd2e);
        EXPECT(gbc.pc(), 0x8805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8804), 0x4a);
        // 4A 0094
        gbc.setState(0x402b, 0x2331, 0x8b90, 0x3384, 0xe6f8, 0x4ceb, 0x0, 0x0);
        gbc.writeMem(0x402b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2331);
        EXPECT(gbc.pc(), 0x402c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0095
        gbc.setState(0x8f1d, 0xba68, 0xf760, 0x50b9, 0x9f8c, 0x2405, 0x1, 0x1);
        gbc.writeMem(0x8f1d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xba68);
        EXPECT(gbc.pc(), 0x8f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1d), 0x4a);
        // 4A 0096
        gbc.setState(0x2fe1, 0x99f6, 0x3d40, 0x4cdd, 0x188c, 0x3b04, 0x1, 0x0);
        gbc.writeMem(0x2fe1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x99f6);
        EXPECT(gbc.pc(), 0x2fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0097
        gbc.setState(0x23df, 0xc78e, 0xa50, 0xbc55, 0xdfa9, 0x95ff, 0x0, 0x0);
        gbc.writeMem(0x23df, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc78e);
        EXPECT(gbc.pc(), 0x23e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0098
        gbc.setState(0xe7b4, 0xfcaf, 0xd6a0, 0x8a09, 0x9da1, 0xb75f, 0x0, 0x1);
        gbc.writeMem(0xe7b4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfcaf);
        EXPECT(gbc.pc(), 0xe7b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b4), 0x4a);
        // 4A 0099
        gbc.setState(0x74c1, 0xc553, 0xff60, 0x3dc8, 0x45d8, 0xdaaa, 0x0, 0x1);
        gbc.writeMem(0x74c1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc553);
        EXPECT(gbc.pc(), 0x74c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 009A
        gbc.setState(0x19e1, 0xbb28, 0x7620, 0x2cb7, 0x7947, 0xda5f, 0x1, 0x1);
        gbc.writeMem(0x19e1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xbb28);
        EXPECT(gbc.pc(), 0x19e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 009B
        gbc.setState(0x48f4, 0xb3e0, 0x6f60, 0x7710, 0xb2f7, 0x978a, 0x0, 0x1);
        gbc.writeMem(0x48f4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb3e0);
        EXPECT(gbc.pc(), 0x48f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 009C
        gbc.setState(0x6eff, 0x6bcd, 0x1e0, 0x1876, 0x6acc, 0x2cd0, 0x1, 0x1);
        gbc.writeMem(0x6eff, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6bcd);
        EXPECT(gbc.pc(), 0x6f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 009D
        gbc.setState(0xa799, 0x1540, 0x98a0, 0x523b, 0x5b66, 0xd71e, 0x0, 0x0);
        gbc.writeMem(0xa799, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1540);
        EXPECT(gbc.pc(), 0xa79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa799), 0x4a);
        // 4A 009E
        gbc.setState(0xa1dc, 0x59fe, 0xa0a0, 0x7c46, 0xcbc9, 0xe1e4, 0x0, 0x0);
        gbc.writeMem(0xa1dc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x59fe);
        EXPECT(gbc.pc(), 0xa1dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1dc), 0x4a);
        // 4A 009F
        gbc.setState(0x8bbc, 0xb1cd, 0x4d90, 0x378, 0xe527, 0x6afe, 0x1, 0x0);
        gbc.writeMem(0x8bbc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb1cd);
        EXPECT(gbc.pc(), 0x8bbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bbc), 0x4a);
        // 4A 00A0
        gbc.setState(0xc2a0, 0x2bfc, 0x8290, 0xb874, 0x9426, 0x14d0, 0x0, 0x0);
        gbc.writeMem(0xc2a0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2bfc);
        EXPECT(gbc.pc(), 0xc2a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2a0), 0x4a);
        // 4A 00A1
        gbc.setState(0xafe5, 0x16e4, 0x76f0, 0x939a, 0xdaa1, 0x218f, 0x1, 0x1);
        gbc.writeMem(0xafe5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x16e4);
        EXPECT(gbc.pc(), 0xafe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe5), 0x4a);
        // 4A 00A2
        gbc.setState(0x8140, 0x883, 0xbb0, 0x5557, 0x3622, 0xec43, 0x1, 0x0);
        gbc.writeMem(0x8140, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x883);
        EXPECT(gbc.pc(), 0x8141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8140), 0x4a);
        // 4A 00A3
        gbc.setState(0x50b9, 0x28dc, 0xc5a0, 0xe9ac, 0xffa3, 0x2585, 0x1, 0x1);
        gbc.writeMem(0x50b9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x28dc);
        EXPECT(gbc.pc(), 0x50ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00A4
        gbc.setState(0x907, 0xc810, 0x8d10, 0x3dd7, 0x3f21, 0xde6e, 0x1, 0x0);
        gbc.writeMem(0x907, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc810);
        EXPECT(gbc.pc(), 0x908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 00A5
        gbc.setState(0x83fd, 0xd3b2, 0xe9f0, 0xb7dd, 0xc334, 0x7de6, 0x1, 0x1);
        gbc.writeMem(0x83fd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd3b2);
        EXPECT(gbc.pc(), 0x83fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fd), 0x4a);
        // 4A 00A6
        gbc.setState(0x1f3, 0xf4c1, 0x8520, 0x3e24, 0x30a7, 0xc2a1, 0x1, 0x0);
        gbc.writeMem(0x1f3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf4c1);
        EXPECT(gbc.pc(), 0x1f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00A8
        gbc.setState(0xa6be, 0xb513, 0x86c0, 0xc3d, 0xb887, 0xe9f1, 0x1, 0x0);
        gbc.writeMem(0xa6be, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb513);
        EXPECT(gbc.pc(), 0xa6bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6be), 0x4a);
        // 4A 00A9
        gbc.setState(0xc506, 0x3c41, 0xc6b0, 0xb61e, 0x45ae, 0x374f, 0x0, 0x1);
        gbc.writeMem(0xc506, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3c41);
        EXPECT(gbc.pc(), 0xc507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc506), 0x4a);
        // 4A 00AA
        gbc.setState(0xcf9, 0x120d, 0xb020, 0x21e4, 0x30f, 0xdedb, 0x1, 0x1);
        gbc.writeMem(0xcf9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x120d);
        EXPECT(gbc.pc(), 0xcfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00AB
        gbc.setState(0xc50e, 0xfca9, 0x5270, 0x3b34, 0xa72b, 0xa6f1, 0x0, 0x1);
        gbc.writeMem(0xc50e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfca9);
        EXPECT(gbc.pc(), 0xc50f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50e), 0x4a);
        // 4A 00AC
        gbc.setState(0x7189, 0xd86c, 0xcd30, 0xcdf4, 0xd5f6, 0x44e8, 0x0, 0x1);
        gbc.writeMem(0x7189, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd86c);
        EXPECT(gbc.pc(), 0x718a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 00AD
        gbc.setState(0xc0d4, 0xacc2, 0x76f0, 0x2974, 0x405e, 0x6812, 0x0, 0x0);
        gbc.writeMem(0xc0d4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xacc2);
        EXPECT(gbc.pc(), 0xc0d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0d4), 0x4a);
        // 4A 00AF
        gbc.setState(0x1699, 0xe4bb, 0x6730, 0xd8f3, 0x6a12, 0x208f, 0x1, 0x1);
        gbc.writeMem(0x1699, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe4bb);
        EXPECT(gbc.pc(), 0x169a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 00B0
        gbc.setState(0x911f, 0xd010, 0xa2f0, 0x4fff, 0xc20a, 0xd817, 0x0, 0x0);
        gbc.writeMem(0x911f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd010);
        EXPECT(gbc.pc(), 0x9120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x911f), 0x4a);
        // 4A 00B1
        gbc.setState(0xd73a, 0x19dc, 0x43b0, 0xdca0, 0x2dbe, 0xed15, 0x1, 0x0);
        gbc.writeMem(0xd73a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x19dc);
        EXPECT(gbc.pc(), 0xd73b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd73a), 0x4a);
        // 4A 00B2
        gbc.setState(0xa2d2, 0xccd1, 0x17c0, 0x7311, 0x75c9, 0x63aa, 0x1, 0x1);
        gbc.writeMem(0xa2d2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xccd1);
        EXPECT(gbc.pc(), 0xa2d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d2), 0x4a);
        // 4A 00B3
        gbc.setState(0x76f, 0xfdff, 0x7270, 0x24ea, 0x32f2, 0x5cb, 0x1, 0x0);
        gbc.writeMem(0x76f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfdff);
        EXPECT(gbc.pc(), 0x770);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 00B4
        gbc.setState(0x19bd, 0x58dc, 0x9710, 0x1af0, 0x9492, 0x903b, 0x1, 0x1);
        gbc.writeMem(0x19bd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x58dc);
        EXPECT(gbc.pc(), 0x19be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 00B5
        gbc.setState(0xeb64, 0xe164, 0xd710, 0x1dd7, 0x7aa4, 0x5f83, 0x0, 0x1);
        gbc.writeMem(0xeb64, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe164);
        EXPECT(gbc.pc(), 0xeb65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb64), 0x4a);
        // 4A 00B7
        gbc.setState(0xd01f, 0x62e1, 0x5a10, 0xea34, 0x7f83, 0x66a3, 0x1, 0x0);
        gbc.writeMem(0xd01f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x62e1);
        EXPECT(gbc.pc(), 0xd020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd01f), 0x4a);
        // 4A 00B8
        gbc.setState(0x50e5, 0xaeb1, 0x9850, 0xec3, 0x96ca, 0x23af, 0x1, 0x0);
        gbc.writeMem(0x50e5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xaeb1);
        EXPECT(gbc.pc(), 0x50e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 00B9
        gbc.setState(0x5ffe, 0x5e88, 0x8d50, 0xdf52, 0x1132, 0xa003, 0x0, 0x0);
        gbc.writeMem(0x5ffe, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5e88);
        EXPECT(gbc.pc(), 0x5fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 00BA
        gbc.setState(0xbfda, 0xb1dc, 0x8ea0, 0xb636, 0xe2e9, 0x906e, 0x0, 0x1);
        gbc.writeMem(0xbfda, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb1dc);
        EXPECT(gbc.pc(), 0xbfdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfda), 0x4a);
        // 4A 00BB
        gbc.setState(0xd28b, 0xabb9, 0xf200, 0x13d5, 0xd56d, 0x9895, 0x1, 0x1);
        gbc.writeMem(0xd28b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xabb9);
        EXPECT(gbc.pc(), 0xd28c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28b), 0x4a);
        // 4A 00BC
        gbc.setState(0x4fec, 0x9055, 0x7c10, 0x7dd2, 0x1166, 0xb803, 0x1, 0x1);
        gbc.writeMem(0x4fec, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9055);
        EXPECT(gbc.pc(), 0x4fed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 00BD
        gbc.setState(0x85c8, 0x573a, 0xa720, 0xde7, 0x710e, 0x6937, 0x1, 0x1);
        gbc.writeMem(0x85c8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x573a);
        EXPECT(gbc.pc(), 0x85c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c8), 0x4a);
        // 4A 00BE
        gbc.setState(0xe4c9, 0x1645, 0x2350, 0xac9e, 0xbf75, 0xffe9, 0x1, 0x1);
        gbc.writeMem(0xe4c9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1645);
        EXPECT(gbc.pc(), 0xe4ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c9), 0x4a);
        // 4A 00BF
        gbc.setState(0xbbe3, 0x2e5d, 0x6e40, 0x9b43, 0xbdf, 0xb19b, 0x1, 0x1);
        gbc.writeMem(0xbbe3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2e5d);
        EXPECT(gbc.pc(), 0xbbe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe3), 0x4a);
        // 4A 00C0
        gbc.setState(0xb21c, 0x36d7, 0xa660, 0x1eb4, 0x6425, 0x15af, 0x1, 0x1);
        gbc.writeMem(0xb21c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x36d7);
        EXPECT(gbc.pc(), 0xb21d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21c), 0x4a);
        // 4A 00C1
        gbc.setState(0x605a, 0x5250, 0x3530, 0x6c90, 0x5756, 0x35f4, 0x1, 0x1);
        gbc.writeMem(0x605a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5250);
        EXPECT(gbc.pc(), 0x605b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 00C2
        gbc.setState(0x1fb0, 0xf146, 0x15a0, 0x5e87, 0xc82a, 0x19ef, 0x0, 0x1);
        gbc.writeMem(0x1fb0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf146);
        EXPECT(gbc.pc(), 0x1fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00C4
        gbc.setState(0x3502, 0x5755, 0x3200, 0xc6b9, 0x7547, 0xd949, 0x1, 0x0);
        gbc.writeMem(0x3502, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5755);
        EXPECT(gbc.pc(), 0x3503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00C5
        gbc.setState(0x2184, 0xc58, 0x900, 0x43f6, 0x406a, 0xb930, 0x0, 0x1);
        gbc.writeMem(0x2184, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc58);
        EXPECT(gbc.pc(), 0x2185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00C6
        gbc.setState(0x887b, 0xc28, 0x8ca0, 0x8a51, 0xa3dd, 0x7d60, 0x1, 0x0);
        gbc.writeMem(0x887b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc28);
        EXPECT(gbc.pc(), 0x887c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887b), 0x4a);
        // 4A 00C7
        gbc.setState(0xe942, 0x351, 0x7860, 0x6b7e, 0xc595, 0x6f53, 0x1, 0x1);
        gbc.writeMem(0xe942, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x351);
        EXPECT(gbc.pc(), 0xe943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe942), 0x4a);
        // 4A 00C8
        gbc.setState(0x3f0a, 0xe462, 0xee20, 0x14f2, 0xc8b6, 0x3151, 0x1, 0x1);
        gbc.writeMem(0x3f0a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe462);
        EXPECT(gbc.pc(), 0x3f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00C9
        gbc.setState(0x3a02, 0x8b2e, 0x5250, 0xf25, 0x3139, 0xe5b1, 0x1, 0x0);
        gbc.writeMem(0x3a02, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8b2e);
        EXPECT(gbc.pc(), 0x3a03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 00CA
        gbc.setState(0xa2e1, 0x9b7e, 0xe1b0, 0x3b11, 0x3d4d, 0x89c4, 0x1, 0x1);
        gbc.writeMem(0xa2e1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9b7e);
        EXPECT(gbc.pc(), 0xa2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e1), 0x4a);
        // 4A 00CB
        gbc.setState(0x52ae, 0xfc27, 0x1c60, 0x1a14, 0x6b0, 0xe756, 0x1, 0x1);
        gbc.writeMem(0x52ae, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfc27);
        EXPECT(gbc.pc(), 0x52af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00CC
        gbc.setState(0x9d5c, 0x97ab, 0x6420, 0x5174, 0x63e8, 0x1d61, 0x0, 0x0);
        gbc.writeMem(0x9d5c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x97ab);
        EXPECT(gbc.pc(), 0x9d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d5c), 0x4a);
        // 4A 00CD
        gbc.setState(0xee2d, 0xea9e, 0xfd30, 0x2ff9, 0xcb12, 0x2bf1, 0x1, 0x1);
        gbc.writeMem(0xee2d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xea9e);
        EXPECT(gbc.pc(), 0xee2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee2d), 0x4a);
        // 4A 00CE
        gbc.setState(0x6bc5, 0x60c8, 0x560, 0x87d3, 0xb56b, 0x84e5, 0x0, 0x0);
        gbc.writeMem(0x6bc5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x60c8);
        EXPECT(gbc.pc(), 0x6bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00CF
        gbc.setState(0x6535, 0xaa51, 0x8600, 0x4985, 0x881b, 0xa6d3, 0x0, 0x1);
        gbc.writeMem(0x6535, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xaa51);
        EXPECT(gbc.pc(), 0x6536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00D0
        gbc.setState(0x681c, 0x18ad, 0x6480, 0x11e2, 0xba3, 0x8851, 0x0, 0x0);
        gbc.writeMem(0x681c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x18ad);
        EXPECT(gbc.pc(), 0x681d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00D1
        gbc.setState(0xa4d1, 0x16cf, 0x8cc0, 0x6cce, 0xf7f4, 0xe8b1, 0x1, 0x1);
        gbc.writeMem(0xa4d1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x16cf);
        EXPECT(gbc.pc(), 0xa4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4d1), 0x4a);
        // 4A 00D2
        gbc.setState(0xe583, 0x9a91, 0xd80, 0xd23a, 0xa9c3, 0xd87, 0x1, 0x0);
        gbc.writeMem(0xe583, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9a91);
        EXPECT(gbc.pc(), 0xe584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe583), 0x4a);
        // 4A 00D3
        gbc.setState(0x37e3, 0x3912, 0x1110, 0x5262, 0x6a30, 0xa065, 0x0, 0x0);
        gbc.writeMem(0x37e3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3912);
        EXPECT(gbc.pc(), 0x37e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 00D4
        gbc.setState(0x6ffc, 0x5a3d, 0xfa0, 0x7a63, 0x1ada, 0x28c, 0x0, 0x0);
        gbc.writeMem(0x6ffc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5a3d);
        EXPECT(gbc.pc(), 0x6ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00D5
        gbc.setState(0xd27d, 0xa6d, 0xbe50, 0x5a0f, 0x7380, 0x56f1, 0x0, 0x1);
        gbc.writeMem(0xd27d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa6d);
        EXPECT(gbc.pc(), 0xd27e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd27d), 0x4a);
        // 4A 00D6
        gbc.setState(0xb447, 0xe2de, 0xfa50, 0x791b, 0x4f2c, 0x5829, 0x0, 0x1);
        gbc.writeMem(0xb447, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe2de);
        EXPECT(gbc.pc(), 0xb448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb447), 0x4a);
        // 4A 00D7
        gbc.setState(0xafe3, 0x34bb, 0xcd70, 0x34f2, 0xa8f9, 0xd7f0, 0x1, 0x0);
        gbc.writeMem(0xafe3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x34bb);
        EXPECT(gbc.pc(), 0xafe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe3), 0x4a);
        // 4A 00D8
        gbc.setState(0x8d0a, 0x471a, 0x9b00, 0x9527, 0xda52, 0x9b03, 0x0, 0x1);
        gbc.writeMem(0x8d0a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x471a);
        EXPECT(gbc.pc(), 0x8d0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0a), 0x4a);
        // 4A 00D9
        gbc.setState(0x6d4e, 0x3746, 0xcb70, 0xf842, 0x9af3, 0xe4c9, 0x0, 0x1);
        gbc.writeMem(0x6d4e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3746);
        EXPECT(gbc.pc(), 0x6d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 00DA
        gbc.setState(0x85d, 0x8fee, 0xea80, 0xd4b3, 0xfe2, 0xbcc, 0x1, 0x0);
        gbc.writeMem(0x85d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8fee);
        EXPECT(gbc.pc(), 0x85e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00DB
        gbc.setState(0xa69d, 0xacdf, 0x58f0, 0x3dcc, 0xfbf0, 0xe49f, 0x0, 0x1);
        gbc.writeMem(0xa69d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xacdf);
        EXPECT(gbc.pc(), 0xa69e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa69d), 0x4a);
        // 4A 00DC
        gbc.setState(0xcbd0, 0x6b18, 0xb3b0, 0xeb85, 0x5553, 0xbdd1, 0x1, 0x0);
        gbc.writeMem(0xcbd0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6b18);
        EXPECT(gbc.pc(), 0xcbd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd0), 0x4a);
        // 4A 00DD
        gbc.setState(0x332c, 0xb3e0, 0x2d40, 0x3ecd, 0x59e6, 0x9c45, 0x0, 0x1);
        gbc.writeMem(0x332c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb3e0);
        EXPECT(gbc.pc(), 0x332d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00DE
        gbc.setState(0x5a84, 0xe3ca, 0x5010, 0x87fb, 0x83ff, 0xf38d, 0x0, 0x1);
        gbc.writeMem(0x5a84, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe3ca);
        EXPECT(gbc.pc(), 0x5a85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 00DF
        gbc.setState(0x5e55, 0x25e8, 0xdcc0, 0xffb5, 0xecb5, 0xf680, 0x1, 0x0);
        gbc.writeMem(0x5e55, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x25e8);
        EXPECT(gbc.pc(), 0x5e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00E0
        gbc.setState(0x510a, 0x927a, 0xa1b0, 0x1b35, 0xef59, 0x5356, 0x0, 0x1);
        gbc.writeMem(0x510a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x927a);
        EXPECT(gbc.pc(), 0x510b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 00E1
        gbc.setState(0xef64, 0x3fd2, 0xad60, 0x10f5, 0xecca, 0xf070, 0x0, 0x0);
        gbc.writeMem(0xef64, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3fd2);
        EXPECT(gbc.pc(), 0xef65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef64), 0x4a);
        // 4A 00E2
        gbc.setState(0x5d3, 0xf4fd, 0xe290, 0x61c0, 0x393, 0xba62, 0x1, 0x1);
        gbc.writeMem(0x5d3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf4fd);
        EXPECT(gbc.pc(), 0x5d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 00E3
        gbc.setState(0x96ba, 0x60c3, 0x3730, 0x18d, 0xd8b9, 0x5e95, 0x1, 0x1);
        gbc.writeMem(0x96ba, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x60c3);
        EXPECT(gbc.pc(), 0x96bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ba), 0x4a);
        // 4A 00E4
        gbc.setState(0x2c2a, 0x30df, 0x7240, 0xba55, 0x84c2, 0xcb2c, 0x0, 0x0);
        gbc.writeMem(0x2c2a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x30df);
        EXPECT(gbc.pc(), 0x2c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00E5
        gbc.setState(0x650b, 0x7cac, 0x1a0, 0x6f2a, 0x64fa, 0x336, 0x1, 0x1);
        gbc.writeMem(0x650b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7cac);
        EXPECT(gbc.pc(), 0x650c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00E6
        gbc.setState(0x6345, 0x9165, 0x2f60, 0xc945, 0xeab, 0x4a28, 0x1, 0x1);
        gbc.writeMem(0x6345, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9165);
        EXPECT(gbc.pc(), 0x6346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00E7
        gbc.setState(0x1efa, 0xce98, 0x9ec0, 0xa30d, 0x2ee9, 0xe44b, 0x1, 0x1);
        gbc.writeMem(0x1efa, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xce98);
        EXPECT(gbc.pc(), 0x1efb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00E8
        gbc.setState(0xda02, 0x9acf, 0x2880, 0xc570, 0x721f, 0xe87b, 0x1, 0x1);
        gbc.writeMem(0xda02, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9acf);
        EXPECT(gbc.pc(), 0xda03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda02), 0x4a);
        // 4A 00E9
        gbc.setState(0x78cc, 0x74fc, 0xeed0, 0xc803, 0x4c64, 0x53e6, 0x0, 0x0);
        gbc.writeMem(0x78cc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x74fc);
        EXPECT(gbc.pc(), 0x78cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 00EA
        gbc.setState(0x8d57, 0xcd1a, 0x9a30, 0xfb86, 0x69f2, 0x1620, 0x1, 0x0);
        gbc.writeMem(0x8d57, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcd1a);
        EXPECT(gbc.pc(), 0x8d58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d57), 0x4a);
        // 4A 00EB
        gbc.setState(0xef6b, 0xdf40, 0x2920, 0x4169, 0xf4fd, 0xdf71, 0x1, 0x1);
        gbc.writeMem(0xef6b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdf40);
        EXPECT(gbc.pc(), 0xef6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef6b), 0x4a);
        // 4A 00EC
        gbc.setState(0xdf1, 0xe1f7, 0xd980, 0xcedf, 0x1861, 0x7d04, 0x0, 0x1);
        gbc.writeMem(0xdf1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe1f7);
        EXPECT(gbc.pc(), 0xdf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00ED
        gbc.setState(0xbd68, 0x351c, 0xb40, 0x623b, 0xca93, 0xfa3a, 0x1, 0x0);
        gbc.writeMem(0xbd68, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x351c);
        EXPECT(gbc.pc(), 0xbd69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd68), 0x4a);
        // 4A 00EE
        gbc.setState(0x1329, 0x4e73, 0xe0a0, 0xda3d, 0xaf9a, 0xef0c, 0x0, 0x1);
        gbc.writeMem(0x1329, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4e73);
        EXPECT(gbc.pc(), 0x132a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00EF
        gbc.setState(0xcf7b, 0xc409, 0xc600, 0x4998, 0x12a8, 0xa5cf, 0x1, 0x0);
        gbc.writeMem(0xcf7b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc409);
        EXPECT(gbc.pc(), 0xcf7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf7b), 0x4a);
        // 4A 00F0
        gbc.setState(0xafc4, 0xdf8a, 0x52a0, 0x1a19, 0xb85, 0x7470, 0x1, 0x1);
        gbc.writeMem(0xafc4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdf8a);
        EXPECT(gbc.pc(), 0xafc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc4), 0x4a);
        // 4A 00F1
        gbc.setState(0x84f5, 0xc20e, 0xfe70, 0x7fec, 0x5ac3, 0xcca1, 0x1, 0x0);
        gbc.writeMem(0x84f5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc20e);
        EXPECT(gbc.pc(), 0x84f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f5), 0x4a);
        // 4A 00F2
        gbc.setState(0xee90, 0xb96c, 0xf6e0, 0x435, 0x1068, 0x254a, 0x1, 0x1);
        gbc.writeMem(0xee90, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb96c);
        EXPECT(gbc.pc(), 0xee91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee90), 0x4a);
        // 4A 00F3
        gbc.setState(0x3f12, 0xa446, 0x23b0, 0x760c, 0xd2da, 0x63e4, 0x1, 0x0);
        gbc.writeMem(0x3f12, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa446);
        EXPECT(gbc.pc(), 0x3f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 00F4
        gbc.setState(0x2a88, 0x89f5, 0x9550, 0x3ab, 0x1b53, 0x979e, 0x1, 0x1);
        gbc.writeMem(0x2a88, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x89f5);
        EXPECT(gbc.pc(), 0x2a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 00F5
        gbc.setState(0x294d, 0x5160, 0xbf00, 0xc5ec, 0x9259, 0x158, 0x1, 0x0);
        gbc.writeMem(0x294d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5160);
        EXPECT(gbc.pc(), 0x294e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00F6
        gbc.setState(0x3e94, 0xa279, 0x88e0, 0xa70b, 0x5e8c, 0x413a, 0x0, 0x1);
        gbc.writeMem(0x3e94, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa279);
        EXPECT(gbc.pc(), 0x3e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00F7
        gbc.setState(0x807c, 0x23c7, 0xb7c0, 0x6270, 0x9710, 0x9dc3, 0x1, 0x0);
        gbc.writeMem(0x807c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x23c7);
        EXPECT(gbc.pc(), 0x807d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807c), 0x4a);
        // 4A 00F8
        gbc.setState(0xda0a, 0x7589, 0x8640, 0x55a4, 0x6608, 0x4206, 0x1, 0x0);
        gbc.writeMem(0xda0a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7589);
        EXPECT(gbc.pc(), 0xda0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda0a), 0x4a);
        // 4A 00F9
        gbc.setState(0x963d, 0xb23d, 0xbcc0, 0x2230, 0x81a4, 0x8b5e, 0x0, 0x1);
        gbc.writeMem(0x963d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb23d);
        EXPECT(gbc.pc(), 0x963e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x963d), 0x4a);
        // 4A 00FA
        gbc.setState(0x402d, 0x5662, 0x520, 0x4f5f, 0x32ef, 0x4635, 0x1, 0x1);
        gbc.writeMem(0x402d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5662);
        EXPECT(gbc.pc(), 0x402e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 00FB
        gbc.setState(0x7598, 0x9092, 0x9280, 0x7177, 0xd745, 0xf332, 0x0, 0x1);
        gbc.writeMem(0x7598, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9092);
        EXPECT(gbc.pc(), 0x7599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00FC
        gbc.setState(0xa993, 0x2db1, 0xe240, 0xdc73, 0x2b8f, 0x4924, 0x1, 0x0);
        gbc.writeMem(0xa993, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2db1);
        EXPECT(gbc.pc(), 0xa994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa993), 0x4a);
        // 4A 00FD
        gbc.setState(0xc042, 0x3cdd, 0xf140, 0x429b, 0x5860, 0xb81b, 0x0, 0x0);
        gbc.writeMem(0xc042, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3cdd);
        EXPECT(gbc.pc(), 0xc043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc042), 0x4a);
        // 4A 00FE
        gbc.setState(0x5cac, 0x1b21, 0xc9c0, 0x19f5, 0xd329, 0x9dc9, 0x1, 0x1);
        gbc.writeMem(0x5cac, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1b21);
        EXPECT(gbc.pc(), 0x5cad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 00FF
        gbc.setState(0xc35, 0x3697, 0xe5c0, 0xa554, 0xfb45, 0xb899, 0x0, 0x0);
        gbc.writeMem(0xc35, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3697);
        EXPECT(gbc.pc(), 0xc36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0100
        gbc.setState(0xb045, 0x6ca9, 0xf580, 0xf4bf, 0x708, 0x7bde, 0x0, 0x0);
        gbc.writeMem(0xb045, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6ca9);
        EXPECT(gbc.pc(), 0xb046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb045), 0x4a);
        // 4A 0101
        gbc.setState(0x2051, 0x94b0, 0x55d0, 0x52f2, 0x7dc9, 0x40ee, 0x1, 0x1);
        gbc.writeMem(0x2051, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x94b0);
        EXPECT(gbc.pc(), 0x2052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0102
        gbc.setState(0x42, 0x1702, 0xd370, 0x176d, 0x1376, 0xd96f, 0x0, 0x1);
        gbc.writeMem(0x42, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1702);
        EXPECT(gbc.pc(), 0x43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0103
        gbc.setState(0xd1a8, 0x4468, 0x3e50, 0x35f, 0x4741, 0xc675, 0x1, 0x1);
        gbc.writeMem(0xd1a8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4468);
        EXPECT(gbc.pc(), 0xd1a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a8), 0x4a);
        // 4A 0104
        gbc.setState(0xd979, 0x92ec, 0xc610, 0x5779, 0x64e7, 0x45d3, 0x1, 0x0);
        gbc.writeMem(0xd979, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x92ec);
        EXPECT(gbc.pc(), 0xd97a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd979), 0x4a);
        // 4A 0105
        gbc.setState(0xeebf, 0x75d9, 0x4700, 0xf4f1, 0xeff3, 0x7a90, 0x0, 0x1);
        gbc.writeMem(0xeebf, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x75d9);
        EXPECT(gbc.pc(), 0xeec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeebf), 0x4a);
        // 4A 0106
        gbc.setState(0x1b5d, 0x487e, 0x4900, 0x9481, 0xdf5c, 0xbe6f, 0x0, 0x0);
        gbc.writeMem(0x1b5d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x487e);
        EXPECT(gbc.pc(), 0x1b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0107
        gbc.setState(0x89d2, 0x14b2, 0xa7f0, 0xf714, 0x97a3, 0xb965, 0x0, 0x1);
        gbc.writeMem(0x89d2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x14b2);
        EXPECT(gbc.pc(), 0x89d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d2), 0x4a);
        // 4A 0108
        gbc.setState(0x934d, 0x15c3, 0xc480, 0x8318, 0x98b5, 0xd69, 0x0, 0x1);
        gbc.writeMem(0x934d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x15c3);
        EXPECT(gbc.pc(), 0x934e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x934d), 0x4a);
        // 4A 0109
        gbc.setState(0x8908, 0xc916, 0xd7f0, 0xb63a, 0x2896, 0xf564, 0x0, 0x1);
        gbc.writeMem(0x8908, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc916);
        EXPECT(gbc.pc(), 0x8909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8908), 0x4a);
        // 4A 010A
        gbc.setState(0xb7ac, 0x1232, 0x1c40, 0x5942, 0x634a, 0x893d, 0x0, 0x0);
        gbc.writeMem(0xb7ac, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1232);
        EXPECT(gbc.pc(), 0xb7ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ac), 0x4a);
        // 4A 010B
        gbc.setState(0x726f, 0x953c, 0x7d10, 0x50a7, 0x977e, 0x56d4, 0x0, 0x1);
        gbc.writeMem(0x726f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x953c);
        EXPECT(gbc.pc(), 0x7270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 010C
        gbc.setState(0xb9c2, 0xf45b, 0xcb40, 0xd027, 0xad8d, 0x256b, 0x1, 0x1);
        gbc.writeMem(0xb9c2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf45b);
        EXPECT(gbc.pc(), 0xb9c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c2), 0x4a);
        // 4A 010D
        gbc.setState(0x2a91, 0x7579, 0x5b90, 0xbff8, 0xa2e5, 0xdf26, 0x0, 0x1);
        gbc.writeMem(0x2a91, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7579);
        EXPECT(gbc.pc(), 0x2a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 010E
        gbc.setState(0x2c7f, 0x12a5, 0x2ca0, 0x2585, 0x202a, 0x3808, 0x0, 0x0);
        gbc.writeMem(0x2c7f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x12a5);
        EXPECT(gbc.pc(), 0x2c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 010F
        gbc.setState(0x355d, 0x196e, 0x4ca0, 0x86f8, 0x55a7, 0x9ed7, 0x0, 0x0);
        gbc.writeMem(0x355d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x196e);
        EXPECT(gbc.pc(), 0x355e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0110
        gbc.setState(0x6770, 0xa369, 0x7570, 0x8b67, 0x6986, 0x8552, 0x1, 0x1);
        gbc.writeMem(0x6770, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa369);
        EXPECT(gbc.pc(), 0x6771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0111
        gbc.setState(0xd7a7, 0x2097, 0xef20, 0x23a0, 0x838b, 0xed2d, 0x1, 0x0);
        gbc.writeMem(0xd7a7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2097);
        EXPECT(gbc.pc(), 0xd7a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a7), 0x4a);
        // 4A 0112
        gbc.setState(0xc55e, 0xa210, 0x15f0, 0x8f50, 0x35a3, 0xa58a, 0x1, 0x0);
        gbc.writeMem(0xc55e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa210);
        EXPECT(gbc.pc(), 0xc55f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc55e), 0x4a);
        // 4A 0113
        gbc.setState(0x87c2, 0xeeb3, 0xa2e0, 0x4414, 0x73f, 0x8bee, 0x1, 0x0);
        gbc.writeMem(0x87c2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xeeb3);
        EXPECT(gbc.pc(), 0x87c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c2), 0x4a);
        // 4A 0114
        gbc.setState(0x46e2, 0xc6dc, 0xdaa0, 0x1abf, 0x699b, 0x807, 0x1, 0x1);
        gbc.writeMem(0x46e2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc6dc);
        EXPECT(gbc.pc(), 0x46e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0115
        gbc.setState(0x72f9, 0xaa72, 0xd990, 0xa0c7, 0x1b5f, 0x635d, 0x0, 0x1);
        gbc.writeMem(0x72f9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xaa72);
        EXPECT(gbc.pc(), 0x72fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0117
        gbc.setState(0x2697, 0x1c85, 0x2600, 0x8e9e, 0xeaae, 0x3ba4, 0x1, 0x1);
        gbc.writeMem(0x2697, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1c85);
        EXPECT(gbc.pc(), 0x2698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0118
        gbc.setState(0xddda, 0x65c7, 0x3350, 0xcdd1, 0x7dc2, 0x42f2, 0x0, 0x1);
        gbc.writeMem(0xddda, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x65c7);
        EXPECT(gbc.pc(), 0xdddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddda), 0x4a);
        // 4A 0119
        gbc.setState(0xdabc, 0x1dc7, 0x5af0, 0x7618, 0x482c, 0x4f0f, 0x1, 0x0);
        gbc.writeMem(0xdabc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1dc7);
        EXPECT(gbc.pc(), 0xdabd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdabc), 0x4a);
        // 4A 011A
        gbc.setState(0x6eca, 0x5484, 0xeec0, 0x2690, 0xf5e7, 0x1c69, 0x1, 0x0);
        gbc.writeMem(0x6eca, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5484);
        EXPECT(gbc.pc(), 0x6ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 011B
        gbc.setState(0x4699, 0xf193, 0x2080, 0xd116, 0x5a73, 0x8fce, 0x0, 0x1);
        gbc.writeMem(0x4699, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf193);
        EXPECT(gbc.pc(), 0x469a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 011C
        gbc.setState(0x15ce, 0x5a9f, 0x5550, 0x813f, 0x3c04, 0xd4dc, 0x1, 0x0);
        gbc.writeMem(0x15ce, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5a9f);
        EXPECT(gbc.pc(), 0x15cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 011D
        gbc.setState(0x693d, 0x819a, 0x4770, 0x233, 0x7f02, 0xc24c, 0x1, 0x0);
        gbc.writeMem(0x693d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x819a);
        EXPECT(gbc.pc(), 0x693e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 011E
        gbc.setState(0xaa4, 0x5db6, 0x1dc0, 0x31c7, 0xfa7f, 0x3e47, 0x0, 0x0);
        gbc.writeMem(0xaa4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5db6);
        EXPECT(gbc.pc(), 0xaa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 011F
        gbc.setState(0xc485, 0x54ce, 0x6d10, 0xe844, 0x18f3, 0x4c5f, 0x1, 0x1);
        gbc.writeMem(0xc485, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x54ce);
        EXPECT(gbc.pc(), 0xc486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc485), 0x4a);
        // 4A 0120
        gbc.setState(0x892d, 0xc015, 0x8c30, 0x96ec, 0x4710, 0x145d, 0x1, 0x0);
        gbc.writeMem(0x892d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc015);
        EXPECT(gbc.pc(), 0x892e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892d), 0x4a);
        // 4A 0121
        gbc.setState(0x7d, 0xb2ee, 0x6d0, 0x8a4a, 0x3add, 0xe6a1, 0x1, 0x1);
        gbc.writeMem(0x7d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb2ee);
        EXPECT(gbc.pc(), 0x7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0122
        gbc.setState(0x2bb1, 0xbfdc, 0x9b30, 0x7da6, 0x868e, 0xe452, 0x0, 0x0);
        gbc.writeMem(0x2bb1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbfdc);
        EXPECT(gbc.pc(), 0x2bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0123
        gbc.setState(0x5ac2, 0x7abf, 0x4b10, 0xf9c2, 0x167c, 0x5198, 0x0, 0x0);
        gbc.writeMem(0x5ac2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7abf);
        EXPECT(gbc.pc(), 0x5ac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0124
        gbc.setState(0x453c, 0x95a4, 0x2760, 0xe3f0, 0x55c0, 0xe0b4, 0x0, 0x0);
        gbc.writeMem(0x453c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x95a4);
        EXPECT(gbc.pc(), 0x453d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0125
        gbc.setState(0xac67, 0x3ae0, 0x62f0, 0x9922, 0xdaf6, 0x175, 0x1, 0x0);
        gbc.writeMem(0xac67, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3ae0);
        EXPECT(gbc.pc(), 0xac68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac67), 0x4a);
        // 4A 0126
        gbc.setState(0xd1b4, 0xf846, 0x4e10, 0xfbbb, 0x1fe9, 0x3ac8, 0x0, 0x1);
        gbc.writeMem(0xd1b4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf846);
        EXPECT(gbc.pc(), 0xd1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b4), 0x4a);
        // 4A 0127
        gbc.setState(0x5368, 0xf9a4, 0x50, 0x1be2, 0xd398, 0x1120, 0x0, 0x0);
        gbc.writeMem(0x5368, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf9a4);
        EXPECT(gbc.pc(), 0x5369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0128
        gbc.setState(0xe692, 0x1ecf, 0x48a0, 0xea57, 0x9222, 0x8b3f, 0x0, 0x1);
        gbc.writeMem(0xe692, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1ecf);
        EXPECT(gbc.pc(), 0xe693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe692), 0x4a);
        // 4A 0129
        gbc.setState(0x263a, 0x8ab9, 0x9b80, 0xdd8, 0x6c5d, 0x549c, 0x1, 0x1);
        gbc.writeMem(0x263a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8ab9);
        EXPECT(gbc.pc(), 0x263b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 012A
        gbc.setState(0x5541, 0x97ab, 0x9d90, 0xa219, 0x9e9a, 0x3f19, 0x1, 0x0);
        gbc.writeMem(0x5541, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x97ab);
        EXPECT(gbc.pc(), 0x5542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 012B
        gbc.setState(0xb92a, 0xcdd8, 0x23f0, 0x50fa, 0xbde9, 0xdda5, 0x0, 0x0);
        gbc.writeMem(0xb92a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcdd8);
        EXPECT(gbc.pc(), 0xb92b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb92a), 0x4a);
        // 4A 012C
        gbc.setState(0xb5f0, 0xaed8, 0xc0e0, 0x7f8c, 0x2ff9, 0xbbe5, 0x1, 0x1);
        gbc.writeMem(0xb5f0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xaed8);
        EXPECT(gbc.pc(), 0xb5f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5f0), 0x4a);
        // 4A 012D
        gbc.setState(0x749e, 0x20c7, 0x3850, 0xbf73, 0xdbad, 0x259c, 0x0, 0x1);
        gbc.writeMem(0x749e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x20c7);
        EXPECT(gbc.pc(), 0x749f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 012E
        gbc.setState(0x61dd, 0x6e55, 0x71c0, 0x26ce, 0xf470, 0xe8d2, 0x1, 0x1);
        gbc.writeMem(0x61dd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6e55);
        EXPECT(gbc.pc(), 0x61de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 012F
        gbc.setState(0x85b5, 0x2753, 0x1130, 0x67b3, 0xa89b, 0xae26, 0x0, 0x0);
        gbc.writeMem(0x85b5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2753);
        EXPECT(gbc.pc(), 0x85b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85b5), 0x4a);
        // 4A 0130
        gbc.setState(0x66a2, 0x7d0c, 0x2410, 0xe117, 0x1e00, 0x1a56, 0x1, 0x1);
        gbc.writeMem(0x66a2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7d0c);
        EXPECT(gbc.pc(), 0x66a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0131
        gbc.setState(0x5c94, 0x5a93, 0x36a0, 0x3f67, 0xb21a, 0x4c05, 0x1, 0x1);
        gbc.writeMem(0x5c94, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5a93);
        EXPECT(gbc.pc(), 0x5c95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0132
        gbc.setState(0xcc3b, 0xb5ee, 0x8d00, 0xead0, 0x253b, 0xcf99, 0x0, 0x1);
        gbc.writeMem(0xcc3b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb5ee);
        EXPECT(gbc.pc(), 0xcc3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3b), 0x4a);
        // 4A 0133
        gbc.setState(0xee85, 0x8f01, 0xf450, 0x6cca, 0xc580, 0xeac3, 0x0, 0x0);
        gbc.writeMem(0xee85, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8f01);
        EXPECT(gbc.pc(), 0xee86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee85), 0x4a);
        // 4A 0134
        gbc.setState(0xaa43, 0x41d1, 0x6190, 0xba46, 0x93d2, 0x4053, 0x1, 0x1);
        gbc.writeMem(0xaa43, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x41d1);
        EXPECT(gbc.pc(), 0xaa44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa43), 0x4a);
        // 4A 0135
        gbc.setState(0x779b, 0x630, 0x960, 0x9b2c, 0xc525, 0x35f6, 0x0, 0x0);
        gbc.writeMem(0x779b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x630);
        EXPECT(gbc.pc(), 0x779c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0136
        gbc.setState(0x3a31, 0x7190, 0x1970, 0x4768, 0x99f1, 0x3209, 0x1, 0x0);
        gbc.writeMem(0x3a31, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7190);
        EXPECT(gbc.pc(), 0x3a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0137
        gbc.setState(0x92f1, 0x930b, 0xbda0, 0x3134, 0x50a4, 0x7494, 0x1, 0x0);
        gbc.writeMem(0x92f1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x930b);
        EXPECT(gbc.pc(), 0x92f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f1), 0x4a);
        // 4A 0138
        gbc.setState(0xba84, 0x22b9, 0x50a0, 0x284b, 0xd9b9, 0x59dc, 0x0, 0x0);
        gbc.writeMem(0xba84, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x22b9);
        EXPECT(gbc.pc(), 0xba85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba84), 0x4a);
        // 4A 0139
        gbc.setState(0xce2, 0xcb70, 0x7a00, 0xfb69, 0xd064, 0xadf5, 0x1, 0x0);
        gbc.writeMem(0xce2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcb70);
        EXPECT(gbc.pc(), 0xce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 013A
        gbc.setState(0x54b2, 0xe729, 0xd3f0, 0x339b, 0xd650, 0x40b4, 0x1, 0x0);
        gbc.writeMem(0x54b2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe729);
        EXPECT(gbc.pc(), 0x54b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 013C
        gbc.setState(0x8aa, 0xbb59, 0x73e0, 0xf666, 0xb333, 0xb389, 0x1, 0x1);
        gbc.writeMem(0x8aa, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbb59);
        EXPECT(gbc.pc(), 0x8ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 013D
        gbc.setState(0x7b05, 0x967a, 0x8ec0, 0xdaed, 0x2b37, 0x6abb, 0x0, 0x1);
        gbc.writeMem(0x7b05, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x967a);
        EXPECT(gbc.pc(), 0x7b06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 013E
        gbc.setState(0xa935, 0x79a1, 0xe9d0, 0x393d, 0x67f0, 0xba3d, 0x0, 0x1);
        gbc.writeMem(0xa935, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x79a1);
        EXPECT(gbc.pc(), 0xa936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa935), 0x4a);
        // 4A 013F
        gbc.setState(0xd4d2, 0x6f8, 0x8d20, 0x2174, 0xda6c, 0x3f78, 0x1, 0x1);
        gbc.writeMem(0xd4d2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6f8);
        EXPECT(gbc.pc(), 0xd4d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d2), 0x4a);
        // 4A 0140
        gbc.setState(0x21a8, 0xbf71, 0xfce0, 0xf7d5, 0x2eb, 0xe0f3, 0x0, 0x0);
        gbc.writeMem(0x21a8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbf71);
        EXPECT(gbc.pc(), 0x21a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0141
        gbc.setState(0x7780, 0x829d, 0x9130, 0x42a1, 0x40cc, 0x1791, 0x1, 0x0);
        gbc.writeMem(0x7780, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x829d);
        EXPECT(gbc.pc(), 0x7781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0143
        gbc.setState(0x2bcf, 0x9de6, 0x9a0, 0x4fff, 0x7c8a, 0xb7f3, 0x1, 0x1);
        gbc.writeMem(0x2bcf, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9de6);
        EXPECT(gbc.pc(), 0x2bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0144
        gbc.setState(0x7816, 0x92c4, 0x8510, 0x5c7a, 0xe20e, 0xd13, 0x0, 0x0);
        gbc.writeMem(0x7816, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x92c4);
        EXPECT(gbc.pc(), 0x7817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0145
        gbc.setState(0x3d0, 0xd573, 0x3100, 0x9258, 0x59, 0xfd1, 0x0, 0x0);
        gbc.writeMem(0x3d0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd573);
        EXPECT(gbc.pc(), 0x3d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0146
        gbc.setState(0x2f35, 0x7d79, 0x9580, 0x7f9c, 0x6391, 0x8236, 0x1, 0x1);
        gbc.writeMem(0x2f35, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7d79);
        EXPECT(gbc.pc(), 0x2f36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0147
        gbc.setState(0x7582, 0xa241, 0xa750, 0x1d5d, 0x6c12, 0x5019, 0x0, 0x0);
        gbc.writeMem(0x7582, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa241);
        EXPECT(gbc.pc(), 0x7583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0149
        gbc.setState(0x4726, 0xcbb4, 0x360, 0x45b8, 0xbb17, 0x79e3, 0x1, 0x0);
        gbc.writeMem(0x4726, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcbb4);
        EXPECT(gbc.pc(), 0x4727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 014A
        gbc.setState(0x74e7, 0xc865, 0xd570, 0xb4f2, 0xcce8, 0x7d5d, 0x1, 0x0);
        gbc.writeMem(0x74e7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc865);
        EXPECT(gbc.pc(), 0x74e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 014B
        gbc.setState(0xd227, 0x2d71, 0xbf0, 0x9c1c, 0xf121, 0x9bb1, 0x1, 0x1);
        gbc.writeMem(0xd227, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2d71);
        EXPECT(gbc.pc(), 0xd228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd227), 0x4a);
        // 4A 014D
        gbc.setState(0xc1aa, 0x2fd6, 0x1330, 0xef2b, 0x956c, 0x9311, 0x1, 0x1);
        gbc.writeMem(0xc1aa, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2fd6);
        EXPECT(gbc.pc(), 0xc1ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1aa), 0x4a);
        // 4A 014E
        gbc.setState(0xe93e, 0x5894, 0xd890, 0x6f1f, 0x9237, 0x63d8, 0x0, 0x1);
        gbc.writeMem(0xe93e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5894);
        EXPECT(gbc.pc(), 0xe93f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe93e), 0x4a);
        // 4A 014F
        gbc.setState(0x4d7d, 0xec49, 0x66c0, 0x3341, 0x2a1f, 0x49d8, 0x1, 0x1);
        gbc.writeMem(0x4d7d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xec49);
        EXPECT(gbc.pc(), 0x4d7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0150
        gbc.setState(0x1ae4, 0x57cd, 0xf850, 0x2b59, 0x920c, 0xc74f, 0x1, 0x1);
        gbc.writeMem(0x1ae4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x57cd);
        EXPECT(gbc.pc(), 0x1ae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0151
        gbc.setState(0xb204, 0x7382, 0x7be0, 0xef7e, 0xd43b, 0xffb0, 0x1, 0x1);
        gbc.writeMem(0xb204, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7382);
        EXPECT(gbc.pc(), 0xb205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb204), 0x4a);
        // 4A 0152
        gbc.setState(0x64e6, 0xdd59, 0xc0e0, 0x49d, 0x5ada, 0x9fcb, 0x1, 0x1);
        gbc.writeMem(0x64e6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdd59);
        EXPECT(gbc.pc(), 0x64e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0153
        gbc.setState(0xd156, 0x17a5, 0x1a70, 0xe197, 0x3a77, 0x2324, 0x0, 0x0);
        gbc.writeMem(0xd156, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x17a5);
        EXPECT(gbc.pc(), 0xd157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd156), 0x4a);
        // 4A 0154
        gbc.setState(0xdbef, 0xfd81, 0x2d90, 0x88a1, 0x131, 0x9b13, 0x1, 0x1);
        gbc.writeMem(0xdbef, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfd81);
        EXPECT(gbc.pc(), 0xdbf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbef), 0x4a);
        // 4A 0155
        gbc.setState(0x3a9d, 0x21e6, 0xa600, 0xcfd0, 0xf72f, 0x8736, 0x0, 0x0);
        gbc.writeMem(0x3a9d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x21e6);
        EXPECT(gbc.pc(), 0x3a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0156
        gbc.setState(0x39cd, 0x5b8b, 0xa0d0, 0x95ce, 0xa60e, 0x1b2a, 0x1, 0x1);
        gbc.writeMem(0x39cd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5b8b);
        EXPECT(gbc.pc(), 0x39ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0157
        gbc.setState(0x31c0, 0xf0ff, 0x6560, 0x5ec2, 0xe15c, 0x351f, 0x1, 0x1);
        gbc.writeMem(0x31c0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf0ff);
        EXPECT(gbc.pc(), 0x31c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0158
        gbc.setState(0x8e3, 0x13a8, 0x70a0, 0x91f, 0xbdcf, 0xb045, 0x1, 0x1);
        gbc.writeMem(0x8e3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x13a8);
        EXPECT(gbc.pc(), 0x8e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0159
        gbc.setState(0xdf8, 0x3d92, 0x9880, 0xe1a5, 0xe4eb, 0x38e0, 0x0, 0x1);
        gbc.writeMem(0xdf8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3d92);
        EXPECT(gbc.pc(), 0xdf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 015B
        gbc.setState(0x6f4b, 0x2a32, 0x6ca0, 0x7ff3, 0x4895, 0x5c52, 0x0, 0x0);
        gbc.writeMem(0x6f4b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2a32);
        EXPECT(gbc.pc(), 0x6f4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 015C
        gbc.setState(0x70a, 0x68bc, 0xe1b0, 0x8c09, 0x9f88, 0x28ed, 0x0, 0x0);
        gbc.writeMem(0x70a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x68bc);
        EXPECT(gbc.pc(), 0x70b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 015D
        gbc.setState(0x38d7, 0xe64c, 0xa8e0, 0x7dd5, 0x90db, 0x74fb, 0x0, 0x0);
        gbc.writeMem(0x38d7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe64c);
        EXPECT(gbc.pc(), 0x38d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 015E
        gbc.setState(0xdb95, 0xef6f, 0xd840, 0xe536, 0xcd4, 0x683f, 0x1, 0x0);
        gbc.writeMem(0xdb95, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xef6f);
        EXPECT(gbc.pc(), 0xdb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb95), 0x4a);
        // 4A 015F
        gbc.setState(0x50da, 0xd64e, 0xe70, 0x1a0d, 0x54fb, 0xf90a, 0x0, 0x0);
        gbc.writeMem(0x50da, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd64e);
        EXPECT(gbc.pc(), 0x50db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0160
        gbc.setState(0x3dcc, 0x7a82, 0xcf10, 0x5837, 0x70b2, 0xee38, 0x0, 0x1);
        gbc.writeMem(0x3dcc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7a82);
        EXPECT(gbc.pc(), 0x3dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0162
        gbc.setState(0xd552, 0x81a6, 0xcfd0, 0x1536, 0x742f, 0x85ea, 0x0, 0x0);
        gbc.writeMem(0xd552, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x81a6);
        EXPECT(gbc.pc(), 0xd553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd552), 0x4a);
        // 4A 0163
        gbc.setState(0xc60e, 0xdeed, 0x5190, 0x5679, 0x7dca, 0x2367, 0x1, 0x1);
        gbc.writeMem(0xc60e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xdeed);
        EXPECT(gbc.pc(), 0xc60f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc60e), 0x4a);
        // 4A 0164
        gbc.setState(0xe621, 0xfa2b, 0xb550, 0xb99e, 0xaec0, 0x7d32, 0x0, 0x1);
        gbc.writeMem(0xe621, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfa2b);
        EXPECT(gbc.pc(), 0xe622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe621), 0x4a);
        // 4A 0165
        gbc.setState(0xda64, 0xc9e4, 0x9580, 0x1136, 0xdaa1, 0x3b6a, 0x1, 0x0);
        gbc.writeMem(0xda64, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc9e4);
        EXPECT(gbc.pc(), 0xda65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda64), 0x4a);
        // 4A 0166
        gbc.setState(0xe1db, 0xe7c8, 0x7f30, 0x3218, 0x28d0, 0xb417, 0x0, 0x0);
        gbc.writeMem(0xe1db, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe7c8);
        EXPECT(gbc.pc(), 0xe1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1db), 0x4a);
        // 4A 0167
        gbc.setState(0x6ab5, 0x63c0, 0x7050, 0xb575, 0x1523, 0x7f9b, 0x0, 0x0);
        gbc.writeMem(0x6ab5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x63c0);
        EXPECT(gbc.pc(), 0x6ab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0168
        gbc.setState(0x4ce0, 0x13d4, 0x6370, 0xa0b, 0x9b9f, 0xac80, 0x1, 0x0);
        gbc.writeMem(0x4ce0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x13d4);
        EXPECT(gbc.pc(), 0x4ce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0169
        gbc.setState(0xc1c7, 0x48eb, 0x1da0, 0x2183, 0x730b, 0x72a3, 0x0, 0x1);
        gbc.writeMem(0xc1c7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x48eb);
        EXPECT(gbc.pc(), 0xc1c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c7), 0x4a);
        // 4A 016A
        gbc.setState(0x57a1, 0xe513, 0xc4e0, 0x304f, 0x8d27, 0x69ed, 0x0, 0x1);
        gbc.writeMem(0x57a1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe513);
        EXPECT(gbc.pc(), 0x57a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 016B
        gbc.setState(0x112a, 0x126c, 0xa60, 0xdcb6, 0xc4f1, 0x9082, 0x0, 0x0);
        gbc.writeMem(0x112a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x126c);
        EXPECT(gbc.pc(), 0x112b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 016C
        gbc.setState(0xd7fa, 0xd57e, 0x5780, 0xefc5, 0x500e, 0xc72c, 0x1, 0x0);
        gbc.writeMem(0xd7fa, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd57e);
        EXPECT(gbc.pc(), 0xd7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7fa), 0x4a);
        // 4A 016D
        gbc.setState(0x26d1, 0xaa2d, 0x41a0, 0xbd78, 0xef1, 0x202c, 0x0, 0x0);
        gbc.writeMem(0x26d1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xaa2d);
        EXPECT(gbc.pc(), 0x26d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 016E
        gbc.setState(0xab97, 0x5a6e, 0x330, 0xfca1, 0x2586, 0xeb68, 0x1, 0x0);
        gbc.writeMem(0xab97, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5a6e);
        EXPECT(gbc.pc(), 0xab98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab97), 0x4a);
        // 4A 016F
        gbc.setState(0x7afb, 0x3ccb, 0x7b20, 0x2051, 0xf571, 0x4480, 0x0, 0x0);
        gbc.writeMem(0x7afb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3ccb);
        EXPECT(gbc.pc(), 0x7afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0170
        gbc.setState(0xd28b, 0xe96, 0xcdb0, 0xf92a, 0xc58e, 0x4d19, 0x0, 0x1);
        gbc.writeMem(0xd28b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe96);
        EXPECT(gbc.pc(), 0xd28c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd28b), 0x4a);
        // 4A 0171
        gbc.setState(0x6898, 0x3769, 0xbca0, 0x2c46, 0x14f7, 0xf18f, 0x1, 0x0);
        gbc.writeMem(0x6898, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3769);
        EXPECT(gbc.pc(), 0x6899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0172
        gbc.setState(0x83aa, 0x21d9, 0xfe0, 0x88ea, 0xdf9e, 0xa4ac, 0x0, 0x1);
        gbc.writeMem(0x83aa, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x21d9);
        EXPECT(gbc.pc(), 0x83ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83aa), 0x4a);
        // 4A 0173
        gbc.setState(0xd4fc, 0xf021, 0x8e80, 0xae17, 0x5543, 0x6be9, 0x0, 0x0);
        gbc.writeMem(0xd4fc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf021);
        EXPECT(gbc.pc(), 0xd4fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fc), 0x4a);
        // 4A 0174
        gbc.setState(0xaab3, 0x34ad, 0x9a10, 0xd209, 0x78f9, 0xe93f, 0x1, 0x0);
        gbc.writeMem(0xaab3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x34ad);
        EXPECT(gbc.pc(), 0xaab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab3), 0x4a);
        // 4A 0176
        gbc.setState(0xb83f, 0x6dc9, 0xbc70, 0x1853, 0x786d, 0x2574, 0x0, 0x0);
        gbc.writeMem(0xb83f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6dc9);
        EXPECT(gbc.pc(), 0xb840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb83f), 0x4a);
        // 4A 0177
        gbc.setState(0x7daa, 0x2963, 0xdaa0, 0x725c, 0xecfd, 0x67c3, 0x0, 0x0);
        gbc.writeMem(0x7daa, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2963);
        EXPECT(gbc.pc(), 0x7dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0178
        gbc.setState(0xbb86, 0x416c, 0xa740, 0x4d2, 0xdc6e, 0xc06a, 0x0, 0x0);
        gbc.writeMem(0xbb86, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x416c);
        EXPECT(gbc.pc(), 0xbb87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb86), 0x4a);
        // 4A 0179
        gbc.setState(0xaf8b, 0xc6c4, 0x69d0, 0x556, 0x518e, 0xad39, 0x0, 0x1);
        gbc.writeMem(0xaf8b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc6c4);
        EXPECT(gbc.pc(), 0xaf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf8b), 0x4a);
        // 4A 017A
        gbc.setState(0xaad8, 0x536d, 0x7450, 0xfb81, 0xddeb, 0xe83c, 0x1, 0x1);
        gbc.writeMem(0xaad8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x536d);
        EXPECT(gbc.pc(), 0xaad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad8), 0x4a);
        // 4A 017B
        gbc.setState(0x7ede, 0x8034, 0x2b00, 0xfdbb, 0x9565, 0xf755, 0x0, 0x0);
        gbc.writeMem(0x7ede, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8034);
        EXPECT(gbc.pc(), 0x7edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 017C
        gbc.setState(0x6b08, 0x1bf1, 0x9340, 0x3c90, 0x2cb1, 0x91e0, 0x0, 0x1);
        gbc.writeMem(0x6b08, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1bf1);
        EXPECT(gbc.pc(), 0x6b09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 017D
        gbc.setState(0xce15, 0xd1cc, 0x51d0, 0xb4e0, 0x111, 0x7eec, 0x1, 0x1);
        gbc.writeMem(0xce15, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd1cc);
        EXPECT(gbc.pc(), 0xce16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce15), 0x4a);
        // 4A 017E
        gbc.setState(0xbdea, 0xdd5a, 0x97b0, 0x97a3, 0x8cfc, 0x4c8e, 0x0, 0x1);
        gbc.writeMem(0xbdea, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdd5a);
        EXPECT(gbc.pc(), 0xbdeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdea), 0x4a);
        // 4A 017F
        gbc.setState(0xbba3, 0xde98, 0x4da0, 0x8e15, 0xa47e, 0xbef2, 0x0, 0x0);
        gbc.writeMem(0xbba3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xde98);
        EXPECT(gbc.pc(), 0xbba4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba3), 0x4a);
        // 4A 0180
        gbc.setState(0xd97d, 0x8be4, 0x9e0, 0x77b4, 0x8e92, 0x1e41, 0x1, 0x0);
        gbc.writeMem(0xd97d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8be4);
        EXPECT(gbc.pc(), 0xd97e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97d), 0x4a);
        // 4A 0181
        gbc.setState(0x5d6c, 0xa465, 0x37b0, 0xe6b4, 0x78c, 0xc4a2, 0x1, 0x0);
        gbc.writeMem(0x5d6c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa465);
        EXPECT(gbc.pc(), 0x5d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0182
        gbc.setState(0x8b30, 0xffc9, 0xead0, 0xbbed, 0xb139, 0xce2a, 0x0, 0x1);
        gbc.writeMem(0x8b30, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xffc9);
        EXPECT(gbc.pc(), 0x8b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b30), 0x4a);
        // 4A 0183
        gbc.setState(0x5933, 0x2a06, 0x1ed0, 0xe057, 0x7fb0, 0x886a, 0x1, 0x1);
        gbc.writeMem(0x5933, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2a06);
        EXPECT(gbc.pc(), 0x5934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0184
        gbc.setState(0x97b, 0x2d12, 0x32a0, 0x43c3, 0x4e66, 0x915e, 0x0, 0x1);
        gbc.writeMem(0x97b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2d12);
        EXPECT(gbc.pc(), 0x97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0185
        gbc.setState(0x5321, 0xfbb3, 0x9af0, 0x7aac, 0x543f, 0x30bb, 0x0, 0x1);
        gbc.writeMem(0x5321, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfbb3);
        EXPECT(gbc.pc(), 0x5322);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0186
        gbc.setState(0x6383, 0xbaaf, 0x76e0, 0xb3aa, 0x971b, 0x3452, 0x0, 0x0);
        gbc.writeMem(0x6383, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbaaf);
        EXPECT(gbc.pc(), 0x6384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0187
        gbc.setState(0x4c21, 0x3699, 0xf6d0, 0xf0fb, 0x7d59, 0x191d, 0x1, 0x0);
        gbc.writeMem(0x4c21, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3699);
        EXPECT(gbc.pc(), 0x4c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0188
        gbc.setState(0x7477, 0x4a07, 0x87d0, 0x38b1, 0xaa3f, 0x44d, 0x0, 0x1);
        gbc.writeMem(0x7477, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4a07);
        EXPECT(gbc.pc(), 0x7478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0189
        gbc.setState(0x9d5c, 0x8342, 0xc210, 0x556a, 0xffc3, 0x4eb3, 0x0, 0x1);
        gbc.writeMem(0x9d5c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8342);
        EXPECT(gbc.pc(), 0x9d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d5c), 0x4a);
        // 4A 018A
        gbc.setState(0x39f1, 0x5c4a, 0x4250, 0xa9f4, 0x822e, 0x1ce, 0x0, 0x1);
        gbc.writeMem(0x39f1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5c4a);
        EXPECT(gbc.pc(), 0x39f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 018B
        gbc.setState(0x8f31, 0x15bf, 0x7520, 0xf759, 0x86ed, 0x40cf, 0x1, 0x1);
        gbc.writeMem(0x8f31, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x15bf);
        EXPECT(gbc.pc(), 0x8f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f31), 0x4a);
        // 4A 018C
        gbc.setState(0x73fe, 0x8e6d, 0xc210, 0xa0d3, 0xf885, 0x17bb, 0x0, 0x0);
        gbc.writeMem(0x73fe, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8e6d);
        EXPECT(gbc.pc(), 0x73ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 018D
        gbc.setState(0x66d4, 0x657d, 0xad20, 0xea01, 0xd792, 0xd89c, 0x1, 0x0);
        gbc.writeMem(0x66d4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x657d);
        EXPECT(gbc.pc(), 0x66d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 018E
        gbc.setState(0x5c53, 0xee42, 0xdf90, 0x177a, 0x856e, 0x2e10, 0x1, 0x0);
        gbc.writeMem(0x5c53, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xee42);
        EXPECT(gbc.pc(), 0x5c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 018F
        gbc.setState(0xbaf0, 0xc5, 0xe540, 0x6889, 0xef19, 0x5f6e, 0x1, 0x1);
        gbc.writeMem(0xbaf0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc5);
        EXPECT(gbc.pc(), 0xbaf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf0), 0x4a);
        // 4A 0190
        gbc.setState(0x831c, 0x5f95, 0x8180, 0x1941, 0x4e59, 0x97c9, 0x0, 0x1);
        gbc.writeMem(0x831c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5f95);
        EXPECT(gbc.pc(), 0x831d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x831c), 0x4a);
        // 4A 0191
        gbc.setState(0xd021, 0xc129, 0xee60, 0xa0a5, 0x455a, 0x53f, 0x1, 0x1);
        gbc.writeMem(0xd021, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc129);
        EXPECT(gbc.pc(), 0xd022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd021), 0x4a);
        // 4A 0192
        gbc.setState(0x6bb, 0x4ef9, 0xf080, 0x7587, 0x81da, 0x9b6f, 0x1, 0x1);
        gbc.writeMem(0x6bb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4ef9);
        EXPECT(gbc.pc(), 0x6bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0193
        gbc.setState(0x38bc, 0xdb73, 0x26c0, 0xaf31, 0xeb48, 0x2a31, 0x0, 0x0);
        gbc.writeMem(0x38bc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdb73);
        EXPECT(gbc.pc(), 0x38bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0194
        gbc.setState(0x9a86, 0xf745, 0x2c80, 0xc7d3, 0xce10, 0x39b1, 0x0, 0x0);
        gbc.writeMem(0x9a86, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf745);
        EXPECT(gbc.pc(), 0x9a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a86), 0x4a);
        // 4A 0195
        gbc.setState(0x8f17, 0x5d5d, 0x8e60, 0xb32f, 0xfb48, 0xe5c2, 0x1, 0x1);
        gbc.writeMem(0x8f17, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5d5d);
        EXPECT(gbc.pc(), 0x8f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f17), 0x4a);
        // 4A 0196
        gbc.setState(0xe832, 0x21aa, 0xd30, 0x1ab0, 0x878b, 0x96f8, 0x1, 0x1);
        gbc.writeMem(0xe832, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x21aa);
        EXPECT(gbc.pc(), 0xe833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe832), 0x4a);
        // 4A 0197
        gbc.setState(0x40cb, 0xe4c0, 0x5090, 0x13e1, 0x569b, 0x556d, 0x0, 0x0);
        gbc.writeMem(0x40cb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe4c0);
        EXPECT(gbc.pc(), 0x40cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0198
        gbc.setState(0xa52b, 0x9a43, 0x7610, 0x46e2, 0xdbae, 0x1e57, 0x0, 0x0);
        gbc.writeMem(0xa52b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9a43);
        EXPECT(gbc.pc(), 0xa52c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa52b), 0x4a);
        // 4A 0199
        gbc.setState(0xb8d6, 0x6420, 0xb020, 0xf617, 0x49f9, 0x354c, 0x1, 0x0);
        gbc.writeMem(0xb8d6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6420);
        EXPECT(gbc.pc(), 0xb8d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d6), 0x4a);
        // 4A 019B
        gbc.setState(0x8d38, 0x142d, 0xb1f0, 0x2bf1, 0x18ad, 0x6796, 0x0, 0x1);
        gbc.writeMem(0x8d38, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x142d);
        EXPECT(gbc.pc(), 0x8d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d38), 0x4a);
        // 4A 019C
        gbc.setState(0x8be8, 0x2c69, 0x4bf0, 0x8afb, 0xa530, 0xf836, 0x0, 0x1);
        gbc.writeMem(0x8be8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2c69);
        EXPECT(gbc.pc(), 0x8be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be8), 0x4a);
        // 4A 019D
        gbc.setState(0x5e87, 0xf292, 0x1d10, 0xa3f3, 0x2a9a, 0xc3b, 0x0, 0x1);
        gbc.writeMem(0x5e87, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf292);
        EXPECT(gbc.pc(), 0x5e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 019E
        gbc.setState(0x11e3, 0x7ac6, 0x4cb0, 0xe723, 0x7763, 0xa33c, 0x1, 0x0);
        gbc.writeMem(0x11e3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7ac6);
        EXPECT(gbc.pc(), 0x11e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 019F
        gbc.setState(0x2730, 0xc4b5, 0xe650, 0xd18a, 0xa081, 0xfd56, 0x0, 0x1);
        gbc.writeMem(0x2730, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc4b5);
        EXPECT(gbc.pc(), 0x2731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01A0
        gbc.setState(0xb969, 0x4fb3, 0xc390, 0xdb6d, 0x8406, 0x7af6, 0x0, 0x0);
        gbc.writeMem(0xb969, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4fb3);
        EXPECT(gbc.pc(), 0xb96a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb969), 0x4a);
        // 4A 01A1
        gbc.setState(0x58cd, 0x27a8, 0x9cd0, 0x89fa, 0x45ae, 0x31e6, 0x1, 0x1);
        gbc.writeMem(0x58cd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x27a8);
        EXPECT(gbc.pc(), 0x58ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01A2
        gbc.setState(0x17f8, 0x3058, 0x4a60, 0x92a1, 0x210f, 0x5dec, 0x1, 0x0);
        gbc.writeMem(0x17f8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3058);
        EXPECT(gbc.pc(), 0x17f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01A3
        gbc.setState(0xd50e, 0x5915, 0x8ed0, 0xc321, 0x5ef0, 0xdd49, 0x0, 0x1);
        gbc.writeMem(0xd50e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5915);
        EXPECT(gbc.pc(), 0xd50f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd50e), 0x4a);
        // 4A 01A4
        gbc.setState(0xb8b4, 0x62c1, 0xf830, 0xaba4, 0xd9ce, 0x376e, 0x0, 0x1);
        gbc.writeMem(0xb8b4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x62c1);
        EXPECT(gbc.pc(), 0xb8b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b4), 0x4a);
        // 4A 01A5
        gbc.setState(0x3ba9, 0xadc5, 0x8c20, 0x43b8, 0x2183, 0xc6e1, 0x0, 0x1);
        gbc.writeMem(0x3ba9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xadc5);
        EXPECT(gbc.pc(), 0x3baa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01A6
        gbc.setState(0x2911, 0x29a5, 0x3ce0, 0xab6f, 0x35ac, 0xb0e9, 0x1, 0x1);
        gbc.writeMem(0x2911, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x29a5);
        EXPECT(gbc.pc(), 0x2912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01A7
        gbc.setState(0x9b67, 0x81b8, 0x80, 0x416d, 0xfeeb, 0x607, 0x1, 0x1);
        gbc.writeMem(0x9b67, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x81b8);
        EXPECT(gbc.pc(), 0x9b68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b67), 0x4a);
        // 4A 01A8
        gbc.setState(0x3d3a, 0xd499, 0xbc90, 0x2e2a, 0x9c3c, 0x3bd7, 0x0, 0x1);
        gbc.writeMem(0x3d3a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd499);
        EXPECT(gbc.pc(), 0x3d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01A9
        gbc.setState(0xe89, 0x9be1, 0x91b0, 0x7598, 0x2108, 0xf47, 0x1, 0x1);
        gbc.writeMem(0xe89, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9be1);
        EXPECT(gbc.pc(), 0xe8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01AA
        gbc.setState(0x243e, 0xd1e6, 0xeb30, 0x220, 0x2849, 0xfc26, 0x0, 0x1);
        gbc.writeMem(0x243e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd1e6);
        EXPECT(gbc.pc(), 0x243f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01AB
        gbc.setState(0x884a, 0xcecc, 0xe530, 0x9cdf, 0x7a14, 0x502f, 0x1, 0x1);
        gbc.writeMem(0x884a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xcecc);
        EXPECT(gbc.pc(), 0x884b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884a), 0x4a);
        // 4A 01AD
        gbc.setState(0x1dc1, 0xbfd, 0xef10, 0x18b0, 0x952d, 0xeae5, 0x0, 0x0);
        gbc.writeMem(0x1dc1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbfd);
        EXPECT(gbc.pc(), 0x1dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01AE
        gbc.setState(0x8d10, 0xe2d8, 0x37d0, 0xe41a, 0x699c, 0x5c04, 0x0, 0x1);
        gbc.writeMem(0x8d10, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe2d8);
        EXPECT(gbc.pc(), 0x8d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d10), 0x4a);
        // 4A 01AF
        gbc.setState(0x421c, 0xb7e6, 0xff0, 0xde35, 0x9c93, 0x4193, 0x1, 0x1);
        gbc.writeMem(0x421c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb7e6);
        EXPECT(gbc.pc(), 0x421d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01B0
        gbc.setState(0xa312, 0x9b61, 0xf130, 0xa460, 0xac28, 0x1c39, 0x1, 0x1);
        gbc.writeMem(0xa312, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9b61);
        EXPECT(gbc.pc(), 0xa313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa312), 0x4a);
        // 4A 01B1
        gbc.setState(0x36dd, 0x2325, 0xe7b0, 0x9a93, 0x45f3, 0x9e8b, 0x1, 0x1);
        gbc.writeMem(0x36dd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2325);
        EXPECT(gbc.pc(), 0x36de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01B2
        gbc.setState(0xaf07, 0x1394, 0xc090, 0x4dc3, 0x617c, 0x8950, 0x0, 0x0);
        gbc.writeMem(0xaf07, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1394);
        EXPECT(gbc.pc(), 0xaf08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf07), 0x4a);
        // 4A 01B3
        gbc.setState(0xb39b, 0x80c6, 0x7fa0, 0x551c, 0x4655, 0xfaed, 0x0, 0x0);
        gbc.writeMem(0xb39b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x80c6);
        EXPECT(gbc.pc(), 0xb39c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb39b), 0x4a);
        // 4A 01B4
        gbc.setState(0xaaa0, 0x8a9c, 0x1070, 0x4926, 0xd41f, 0x19e6, 0x0, 0x1);
        gbc.writeMem(0xaaa0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8a9c);
        EXPECT(gbc.pc(), 0xaaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa0), 0x4a);
        // 4A 01B5
        gbc.setState(0xad21, 0x8c01, 0x8020, 0x4af4, 0x232e, 0x5850, 0x0, 0x1);
        gbc.writeMem(0xad21, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x8c01);
        EXPECT(gbc.pc(), 0xad22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad21), 0x4a);
        // 4A 01B6
        gbc.setState(0xc6ba, 0xf356, 0x6090, 0xcc6a, 0xd39a, 0xac75, 0x0, 0x1);
        gbc.writeMem(0xc6ba, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf356);
        EXPECT(gbc.pc(), 0xc6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ba), 0x4a);
        // 4A 01B7
        gbc.setState(0x50b1, 0x3d39, 0x67d0, 0x970d, 0x6bfd, 0xbe18, 0x0, 0x0);
        gbc.writeMem(0x50b1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3d39);
        EXPECT(gbc.pc(), 0x50b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01B9
        gbc.setState(0xdd30, 0x3721, 0x55a0, 0xd237, 0xb670, 0xeae3, 0x0, 0x1);
        gbc.writeMem(0xdd30, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3721);
        EXPECT(gbc.pc(), 0xdd31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd30), 0x4a);
        // 4A 01BA
        gbc.setState(0x8793, 0x7a99, 0x7370, 0xc28, 0xbfd4, 0xb6d0, 0x1, 0x0);
        gbc.writeMem(0x8793, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7a99);
        EXPECT(gbc.pc(), 0x8794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8793), 0x4a);
        // 4A 01BC
        gbc.setState(0xbcd1, 0x12b6, 0x8260, 0x5dcc, 0x8540, 0x7c92, 0x1, 0x1);
        gbc.writeMem(0xbcd1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x12b6);
        EXPECT(gbc.pc(), 0xbcd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd1), 0x4a);
        // 4A 01BD
        gbc.setState(0xca89, 0x8521, 0xe4c0, 0x1ea3, 0x9277, 0xe0c8, 0x1, 0x1);
        gbc.writeMem(0xca89, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8521);
        EXPECT(gbc.pc(), 0xca8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca89), 0x4a);
        // 4A 01BE
        gbc.setState(0x22a8, 0x9527, 0xc3f0, 0x2d7f, 0x9d29, 0xb4bb, 0x1, 0x0);
        gbc.writeMem(0x22a8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9527);
        EXPECT(gbc.pc(), 0x22a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01C1
        gbc.setState(0x36f9, 0xde83, 0x3ac0, 0xc92c, 0x8bfe, 0xcae6, 0x0, 0x1);
        gbc.writeMem(0x36f9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xde83);
        EXPECT(gbc.pc(), 0x36fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 01C2
        gbc.setState(0x5fc5, 0x3286, 0x4d60, 0x7a18, 0xefdc, 0x1f19, 0x0, 0x1);
        gbc.writeMem(0x5fc5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3286);
        EXPECT(gbc.pc(), 0x5fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01C3
        gbc.setState(0xa39e, 0x6f69, 0xb170, 0xef52, 0x10c5, 0x9b70, 0x0, 0x1);
        gbc.writeMem(0xa39e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6f69);
        EXPECT(gbc.pc(), 0xa39f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa39e), 0x4a);
        // 4A 01C4
        gbc.setState(0xc6b2, 0x6414, 0x7800, 0x4b56, 0x94f5, 0x2d08, 0x0, 0x1);
        gbc.writeMem(0xc6b2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6414);
        EXPECT(gbc.pc(), 0xc6b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6b2), 0x4a);
        // 4A 01C5
        gbc.setState(0x2515, 0xad26, 0x19a0, 0xdf9f, 0x2d80, 0xe429, 0x1, 0x0);
        gbc.writeMem(0x2515, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xad26);
        EXPECT(gbc.pc(), 0x2516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01C6
        gbc.setState(0xc57f, 0x746e, 0xf1d0, 0x4ffb, 0xac7f, 0xe0c4, 0x0, 0x0);
        gbc.writeMem(0xc57f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x746e);
        EXPECT(gbc.pc(), 0xc580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc57f), 0x4a);
        // 4A 01C7
        gbc.setState(0xb00, 0xf110, 0x8f70, 0x8ffd, 0x7813, 0xca32, 0x1, 0x0);
        gbc.writeMem(0xb00, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf110);
        EXPECT(gbc.pc(), 0xb01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01C8
        gbc.setState(0xdc19, 0x2ec8, 0x92e0, 0x2b3d, 0xe57b, 0xa68f, 0x0, 0x0);
        gbc.writeMem(0xdc19, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2ec8);
        EXPECT(gbc.pc(), 0xdc1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc19), 0x4a);
        // 4A 01C9
        gbc.setState(0x8286, 0x79c4, 0x7b20, 0xee9d, 0x4cbb, 0x6eb2, 0x1, 0x0);
        gbc.writeMem(0x8286, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x79c4);
        EXPECT(gbc.pc(), 0x8287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8286), 0x4a);
        // 4A 01CA
        gbc.setState(0xcffd, 0x3918, 0x30e0, 0xe0ba, 0x3905, 0x615b, 0x0, 0x1);
        gbc.writeMem(0xcffd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3918);
        EXPECT(gbc.pc(), 0xcffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcffd), 0x4a);
        // 4A 01CB
        gbc.setState(0x790d, 0xbb2f, 0xedf0, 0xb6a8, 0xfb04, 0x319b, 0x0, 0x1);
        gbc.writeMem(0x790d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbb2f);
        EXPECT(gbc.pc(), 0x790e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01CC
        gbc.setState(0x3607, 0xed45, 0x86d0, 0x9935, 0xc206, 0x32db, 0x1, 0x1);
        gbc.writeMem(0x3607, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xed45);
        EXPECT(gbc.pc(), 0x3608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01CD
        gbc.setState(0xae11, 0xf804, 0x97f0, 0x2f2d, 0xbbff, 0x6131, 0x1, 0x1);
        gbc.writeMem(0xae11, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf804);
        EXPECT(gbc.pc(), 0xae12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae11), 0x4a);
        // 4A 01CE
        gbc.setState(0x9157, 0xd3ea, 0xc360, 0xedf9, 0x2840, 0x33ea, 0x0, 0x1);
        gbc.writeMem(0x9157, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd3ea);
        EXPECT(gbc.pc(), 0x9158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9157), 0x4a);
        // 4A 01CF
        gbc.setState(0x3fab, 0x1409, 0xfb0, 0xbe0d, 0xea39, 0xc75e, 0x1, 0x0);
        gbc.writeMem(0x3fab, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1409);
        EXPECT(gbc.pc(), 0x3fac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01D0
        gbc.setState(0x80fd, 0x79bb, 0x3860, 0xe1e3, 0x71ca, 0x8fd0, 0x0, 0x1);
        gbc.writeMem(0x80fd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x79bb);
        EXPECT(gbc.pc(), 0x80fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fd), 0x4a);
        // 4A 01D1
        gbc.setState(0x8a37, 0x13cb, 0x790, 0xf848, 0x46ca, 0x7ce8, 0x0, 0x0);
        gbc.writeMem(0x8a37, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x13cb);
        EXPECT(gbc.pc(), 0x8a38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a37), 0x4a);
        // 4A 01D2
        gbc.setState(0xa44, 0xa4f9, 0xbcf0, 0xdff8, 0x52b1, 0x815b, 0x1, 0x1);
        gbc.writeMem(0xa44, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa4f9);
        EXPECT(gbc.pc(), 0xa45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01D3
        gbc.setState(0x70f, 0x4585, 0x680, 0x59db, 0x27e7, 0xf72e, 0x1, 0x1);
        gbc.writeMem(0x70f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4585);
        EXPECT(gbc.pc(), 0x710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 01D4
        gbc.setState(0xa72e, 0x97ff, 0x9b40, 0xeb72, 0x53fc, 0xc1b9, 0x1, 0x1);
        gbc.writeMem(0xa72e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x97ff);
        EXPECT(gbc.pc(), 0xa72f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa72e), 0x4a);
        // 4A 01D5
        gbc.setState(0x7e42, 0x5a45, 0x27a0, 0x4caf, 0xa34c, 0x6928, 0x1, 0x0);
        gbc.writeMem(0x7e42, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5a45);
        EXPECT(gbc.pc(), 0x7e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01D6
        gbc.setState(0x573c, 0xd82a, 0x1ab0, 0xf03a, 0x2cb9, 0x2491, 0x1, 0x1);
        gbc.writeMem(0x573c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd82a);
        EXPECT(gbc.pc(), 0x573d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01D7
        gbc.setState(0x23dc, 0x2827, 0x78a0, 0x6048, 0x6f90, 0x1287, 0x1, 0x0);
        gbc.writeMem(0x23dc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2827);
        EXPECT(gbc.pc(), 0x23dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01D8
        gbc.setState(0xb468, 0x4790, 0x3d00, 0x9af7, 0xa0da, 0x29a2, 0x0, 0x1);
        gbc.writeMem(0xb468, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4790);
        EXPECT(gbc.pc(), 0xb469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb468), 0x4a);
        // 4A 01D9
        gbc.setState(0x6718, 0xfa3f, 0xe120, 0xc523, 0x8387, 0x39c0, 0x1, 0x0);
        gbc.writeMem(0x6718, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfa3f);
        EXPECT(gbc.pc(), 0x6719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01DA
        gbc.setState(0x6282, 0x88cf, 0x9790, 0xfe86, 0x14d6, 0xbde8, 0x0, 0x0);
        gbc.writeMem(0x6282, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x88cf);
        EXPECT(gbc.pc(), 0x6283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01DB
        gbc.setState(0xab3d, 0xe679, 0x2a00, 0x853c, 0x68f1, 0xaa47, 0x0, 0x1);
        gbc.writeMem(0xab3d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe679);
        EXPECT(gbc.pc(), 0xab3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab3d), 0x4a);
        // 4A 01DC
        gbc.setState(0xd229, 0xdf6c, 0x6990, 0x176e, 0x4cf8, 0x4586, 0x0, 0x0);
        gbc.writeMem(0xd229, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xdf6c);
        EXPECT(gbc.pc(), 0xd22a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd229), 0x4a);
        // 4A 01DD
        gbc.setState(0x583c, 0x5fbb, 0x1ae0, 0x630e, 0xb46, 0xba4a, 0x0, 0x1);
        gbc.writeMem(0x583c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5fbb);
        EXPECT(gbc.pc(), 0x583d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01DF
        gbc.setState(0x8984, 0x8479, 0xe230, 0xb06a, 0x68c7, 0xd657, 0x1, 0x1);
        gbc.writeMem(0x8984, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8479);
        EXPECT(gbc.pc(), 0x8985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8984), 0x4a);
        // 4A 01E0
        gbc.setState(0x6dbe, 0xbed0, 0x4730, 0x1092, 0xb322, 0xd9ed, 0x1, 0x0);
        gbc.writeMem(0x6dbe, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbed0);
        EXPECT(gbc.pc(), 0x6dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01E1
        gbc.setState(0x9c53, 0x3b76, 0x48d0, 0xc866, 0x5663, 0xe661, 0x0, 0x1);
        gbc.writeMem(0x9c53, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3b76);
        EXPECT(gbc.pc(), 0x9c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c53), 0x4a);
        // 4A 01E2
        gbc.setState(0xa26d, 0x5edd, 0xdc50, 0x3945, 0x712f, 0xb5a9, 0x0, 0x1);
        gbc.writeMem(0xa26d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5edd);
        EXPECT(gbc.pc(), 0xa26e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa26d), 0x4a);
        // 4A 01E3
        gbc.setState(0x126d, 0x74e4, 0xa720, 0x26cc, 0x9381, 0x2417, 0x1, 0x1);
        gbc.writeMem(0x126d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x74e4);
        EXPECT(gbc.pc(), 0x126e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01E4
        gbc.setState(0x7ca9, 0x5dd5, 0xe1a0, 0xfbef, 0xe181, 0xa08a, 0x0, 0x0);
        gbc.writeMem(0x7ca9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5dd5);
        EXPECT(gbc.pc(), 0x7caa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01E5
        gbc.setState(0x5a1e, 0x5e18, 0x2a20, 0x68f4, 0x3737, 0x358a, 0x1, 0x1);
        gbc.writeMem(0x5a1e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5e18);
        EXPECT(gbc.pc(), 0x5a1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01E6
        gbc.setState(0x15c, 0xde7e, 0x47e0, 0x39ed, 0xd6b1, 0xc234, 0x1, 0x0);
        gbc.writeMem(0x15c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xde7e);
        EXPECT(gbc.pc(), 0x15d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01E7
        gbc.setState(0x7d47, 0x7425, 0xf5c0, 0x2000, 0x3f49, 0xcdfd, 0x1, 0x1);
        gbc.writeMem(0x7d47, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7425);
        EXPECT(gbc.pc(), 0x7d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 01E8
        gbc.setState(0x3e93, 0x9f9, 0x8cd0, 0xe3af, 0xf90a, 0xa6d0, 0x1, 0x1);
        gbc.writeMem(0x3e93, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9f9);
        EXPECT(gbc.pc(), 0x3e94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01E9
        gbc.setState(0x4073, 0x44bc, 0x6cb0, 0xad67, 0xb550, 0xa1d2, 0x1, 0x1);
        gbc.writeMem(0x4073, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x44bc);
        EXPECT(gbc.pc(), 0x4074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01EA
        gbc.setState(0xb96b, 0xaf11, 0xe280, 0x7f1d, 0x5024, 0x3788, 0x0, 0x0);
        gbc.writeMem(0xb96b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xaf11);
        EXPECT(gbc.pc(), 0xb96c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb96b), 0x4a);
        // 4A 01EB
        gbc.setState(0x605f, 0x705, 0x68f0, 0x51f2, 0x5b79, 0x97c0, 0x1, 0x0);
        gbc.writeMem(0x605f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x705);
        EXPECT(gbc.pc(), 0x6060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01ED
        gbc.setState(0xe6f8, 0x7b72, 0xda10, 0xe6d4, 0x5e13, 0x72ab, 0x0, 0x0);
        gbc.writeMem(0xe6f8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7b72);
        EXPECT(gbc.pc(), 0xe6f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6f8), 0x4a);
        // 4A 01EE
        gbc.setState(0xa5b9, 0x4820, 0xbf20, 0xe48d, 0x8fbf, 0x2f1b, 0x0, 0x0);
        gbc.writeMem(0xa5b9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4820);
        EXPECT(gbc.pc(), 0xa5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5b9), 0x4a);
        // 4A 01EF
        gbc.setState(0xde04, 0xb48, 0xe430, 0x398d, 0x74b0, 0xebd, 0x1, 0x1);
        gbc.writeMem(0xde04, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb48);
        EXPECT(gbc.pc(), 0xde05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde04), 0x4a);
        // 4A 01F0
        gbc.setState(0x7958, 0x443a, 0xbc90, 0xe605, 0x5d2, 0xe346, 0x0, 0x1);
        gbc.writeMem(0x7958, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x443a);
        EXPECT(gbc.pc(), 0x7959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01F1
        gbc.setState(0xa4ee, 0x3079, 0x6360, 0x98c7, 0xce27, 0x2407, 0x1, 0x1);
        gbc.writeMem(0xa4ee, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3079);
        EXPECT(gbc.pc(), 0xa4ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ee), 0x4a);
        // 4A 01F2
        gbc.setState(0xd085, 0xc8cd, 0x76c0, 0x87c8, 0xd0ed, 0x2ed8, 0x0, 0x1);
        gbc.writeMem(0xd085, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc8cd);
        EXPECT(gbc.pc(), 0xd086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd085), 0x4a);
        // 4A 01F3
        gbc.setState(0x5454, 0xfe2a, 0x7f60, 0x503, 0x96df, 0xe5a6, 0x1, 0x1);
        gbc.writeMem(0x5454, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfe2a);
        EXPECT(gbc.pc(), 0x5455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 01F5
        gbc.setState(0x6cd7, 0xba70, 0x29d0, 0x5523, 0x2a35, 0x85a3, 0x1, 0x0);
        gbc.writeMem(0x6cd7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xba70);
        EXPECT(gbc.pc(), 0x6cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01F6
        gbc.setState(0x3153, 0xa718, 0xedd0, 0x2297, 0x6cb3, 0xcc55, 0x1, 0x0);
        gbc.writeMem(0x3153, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa718);
        EXPECT(gbc.pc(), 0x3154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01F7
        gbc.setState(0xa56e, 0xf5cd, 0x7c90, 0xbbaa, 0x9a65, 0x43c3, 0x0, 0x0);
        gbc.writeMem(0xa56e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf5cd);
        EXPECT(gbc.pc(), 0xa56f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa56e), 0x4a);
        // 4A 01F8
        gbc.setState(0xcb4, 0x704, 0x4900, 0xfdf4, 0xb7ee, 0x5163, 0x1, 0x0);
        gbc.writeMem(0xcb4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x704);
        EXPECT(gbc.pc(), 0xcb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 01F9
        gbc.setState(0xcc60, 0x1a11, 0xe130, 0x508a, 0x216d, 0xbaea, 0x1, 0x0);
        gbc.writeMem(0xcc60, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1a11);
        EXPECT(gbc.pc(), 0xcc61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc60), 0x4a);
        // 4A 01FA
        gbc.setState(0x81ea, 0xe147, 0x47d0, 0x24c, 0x9902, 0xacc, 0x1, 0x0);
        gbc.writeMem(0x81ea, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe147);
        EXPECT(gbc.pc(), 0x81eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ea), 0x4a);
        // 4A 01FB
        gbc.setState(0x6e65, 0xb67, 0x90f0, 0xff07, 0x2223, 0x8243, 0x0, 0x1);
        gbc.writeMem(0x6e65, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb67);
        EXPECT(gbc.pc(), 0x6e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 01FC
        gbc.setState(0xdd8d, 0x3cc3, 0xef50, 0x869d, 0x7e65, 0xfa42, 0x1, 0x0);
        gbc.writeMem(0xdd8d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3cc3);
        EXPECT(gbc.pc(), 0xdd8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd8d), 0x4a);
        // 4A 01FD
        gbc.setState(0xd9d, 0xbbd5, 0x1610, 0x4ae3, 0x7666, 0x7c6e, 0x0, 0x0);
        gbc.writeMem(0xd9d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbbd5);
        EXPECT(gbc.pc(), 0xd9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 01FE
        gbc.setState(0x6595, 0x1293, 0xc9c0, 0x678d, 0xa164, 0xdff5, 0x1, 0x1);
        gbc.writeMem(0x6595, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1293);
        EXPECT(gbc.pc(), 0x6596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 01FF
        gbc.setState(0x9c9d, 0x1ce8, 0x2b90, 0x95e2, 0xfa07, 0xc25a, 0x0, 0x0);
        gbc.writeMem(0x9c9d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1ce8);
        EXPECT(gbc.pc(), 0x9c9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9d), 0x4a);
        // 4A 0200
        gbc.setState(0x628, 0xdd95, 0xd330, 0x8af5, 0xe44c, 0x7322, 0x1, 0x0);
        gbc.writeMem(0x628, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xdd95);
        EXPECT(gbc.pc(), 0x629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0201
        gbc.setState(0x2ddf, 0xfb9d, 0xef0, 0x78ae, 0x8568, 0x698a, 0x1, 0x1);
        gbc.writeMem(0x2ddf, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfb9d);
        EXPECT(gbc.pc(), 0x2de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0202
        gbc.setState(0x7bac, 0x7f7e, 0xf440, 0x487a, 0xab03, 0x4f94, 0x0, 0x0);
        gbc.writeMem(0x7bac, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7f7e);
        EXPECT(gbc.pc(), 0x7bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0203
        gbc.setState(0x4b74, 0x2700, 0x8680, 0xac37, 0xe4b6, 0x8379, 0x1, 0x1);
        gbc.writeMem(0x4b74, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2700);
        EXPECT(gbc.pc(), 0x4b75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0205
        gbc.setState(0xd300, 0x48c5, 0xd1a0, 0xd126, 0xaaa7, 0x821f, 0x0, 0x0);
        gbc.writeMem(0xd300, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x48c5);
        EXPECT(gbc.pc(), 0xd301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd300), 0x4a);
        // 4A 0206
        gbc.setState(0x724f, 0x29fb, 0x7060, 0x19dd, 0x73df, 0xeb72, 0x0, 0x1);
        gbc.writeMem(0x724f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x29fb);
        EXPECT(gbc.pc(), 0x7250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0207
        gbc.setState(0x5946, 0x8365, 0x2e20, 0x430d, 0x1962, 0x7fcd, 0x1, 0x1);
        gbc.writeMem(0x5946, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8365);
        EXPECT(gbc.pc(), 0x5947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0208
        gbc.setState(0x4344, 0x4e5f, 0xb0a0, 0xc266, 0xdeeb, 0xbf80, 0x1, 0x1);
        gbc.writeMem(0x4344, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4e5f);
        EXPECT(gbc.pc(), 0x4345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0209
        gbc.setState(0xd91d, 0xcefa, 0xf0e0, 0xe93b, 0x7d42, 0x2481, 0x0, 0x0);
        gbc.writeMem(0xd91d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xcefa);
        EXPECT(gbc.pc(), 0xd91e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd91d), 0x4a);
        // 4A 020A
        gbc.setState(0x70bf, 0xe453, 0xc3a0, 0xfe6c, 0xb81e, 0x6a4, 0x0, 0x1);
        gbc.writeMem(0x70bf, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe453);
        EXPECT(gbc.pc(), 0x70c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 020B
        gbc.setState(0xabab, 0x535, 0xe320, 0x1eec, 0x7f76, 0x5023, 0x0, 0x0);
        gbc.writeMem(0xabab, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x535);
        EXPECT(gbc.pc(), 0xabac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabab), 0x4a);
        // 4A 020C
        gbc.setState(0x53ee, 0xf70d, 0x6630, 0xc820, 0x4413, 0x32d8, 0x1, 0x0);
        gbc.writeMem(0x53ee, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf70d);
        EXPECT(gbc.pc(), 0x53ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 020D
        gbc.setState(0x57a9, 0xa909, 0xa3f0, 0x74c9, 0xebfc, 0xcbd9, 0x0, 0x1);
        gbc.writeMem(0x57a9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa909);
        EXPECT(gbc.pc(), 0x57aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 020E
        gbc.setState(0xa4ea, 0xabf1, 0x16d0, 0x818c, 0xfe49, 0x7586, 0x0, 0x0);
        gbc.writeMem(0xa4ea, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xabf1);
        EXPECT(gbc.pc(), 0xa4eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ea), 0x4a);
        // 4A 020F
        gbc.setState(0xe6f6, 0x4d07, 0x4330, 0x7ec2, 0xb239, 0xdbd3, 0x0, 0x0);
        gbc.writeMem(0xe6f6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4d07);
        EXPECT(gbc.pc(), 0xe6f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6f6), 0x4a);
        // 4A 0210
        gbc.setState(0x74ef, 0x9004, 0x33c0, 0x7ab2, 0x990a, 0xf2f5, 0x1, 0x1);
        gbc.writeMem(0x74ef, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9004);
        EXPECT(gbc.pc(), 0x74f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0211
        gbc.setState(0xc2d9, 0x1c25, 0xf820, 0x38fa, 0x75d0, 0xf552, 0x1, 0x1);
        gbc.writeMem(0xc2d9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1c25);
        EXPECT(gbc.pc(), 0xc2da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2d9), 0x4a);
        // 4A 0212
        gbc.setState(0xafcb, 0xe01d, 0x7440, 0x46d, 0x2e5e, 0xc0ce, 0x1, 0x1);
        gbc.writeMem(0xafcb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe01d);
        EXPECT(gbc.pc(), 0xafcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafcb), 0x4a);
        // 4A 0213
        gbc.setState(0x400, 0xe499, 0x67a0, 0x932c, 0x9153, 0x2818, 0x0, 0x0);
        gbc.writeMem(0x400, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe499);
        EXPECT(gbc.pc(), 0x401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0214
        gbc.setState(0xb937, 0x2d29, 0x8290, 0x3c83, 0x6cf4, 0x9b68, 0x1, 0x0);
        gbc.writeMem(0xb937, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2d29);
        EXPECT(gbc.pc(), 0xb938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb937), 0x4a);
        // 4A 0215
        gbc.setState(0x397f, 0x7126, 0x4000, 0x3020, 0x33b7, 0xef45, 0x1, 0x0);
        gbc.writeMem(0x397f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7126);
        EXPECT(gbc.pc(), 0x3980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0216
        gbc.setState(0x2d0, 0x9f09, 0x2340, 0x9333, 0x1e93, 0xe8a4, 0x1, 0x1);
        gbc.writeMem(0x2d0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9f09);
        EXPECT(gbc.pc(), 0x2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0217
        gbc.setState(0xa144, 0x43a7, 0xaf0, 0x27fa, 0xf94a, 0x662d, 0x1, 0x1);
        gbc.writeMem(0xa144, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x43a7);
        EXPECT(gbc.pc(), 0xa145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa144), 0x4a);
        // 4A 0218
        gbc.setState(0x5232, 0x4fce, 0x3a10, 0x7e88, 0xb52d, 0xe377, 0x1, 0x0);
        gbc.writeMem(0x5232, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4fce);
        EXPECT(gbc.pc(), 0x5233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0219
        gbc.setState(0x6bd7, 0x6f0e, 0x250, 0xcbfa, 0xe64f, 0x6ebc, 0x1, 0x0);
        gbc.writeMem(0x6bd7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6f0e);
        EXPECT(gbc.pc(), 0x6bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 021A
        gbc.setState(0x89b5, 0x79a5, 0x7a90, 0x6e10, 0xb375, 0xcdf, 0x0, 0x0);
        gbc.writeMem(0x89b5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x79a5);
        EXPECT(gbc.pc(), 0x89b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89b5), 0x4a);
        // 4A 021B
        gbc.setState(0xc0cb, 0x5509, 0xfd70, 0x7cb9, 0x540a, 0x3167, 0x1, 0x1);
        gbc.writeMem(0xc0cb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5509);
        EXPECT(gbc.pc(), 0xc0cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0cb), 0x4a);
        // 4A 021C
        gbc.setState(0xd759, 0xeab8, 0xa7b0, 0x14cd, 0xf588, 0x9589, 0x0, 0x1);
        gbc.writeMem(0xd759, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xeab8);
        EXPECT(gbc.pc(), 0xd75a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd759), 0x4a);
        // 4A 021D
        gbc.setState(0x8b6b, 0x5ae8, 0xee90, 0x4f31, 0x4ecd, 0xb118, 0x0, 0x1);
        gbc.writeMem(0x8b6b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5ae8);
        EXPECT(gbc.pc(), 0x8b6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6b), 0x4a);
        // 4A 021E
        gbc.setState(0x40c, 0xf41c, 0xb400, 0xec62, 0x31f4, 0xb4cf, 0x1, 0x0);
        gbc.writeMem(0x40c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf41c);
        EXPECT(gbc.pc(), 0x40d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 021F
        gbc.setState(0x59d8, 0x77e, 0x16e0, 0xd743, 0x14c5, 0xfb3c, 0x0, 0x0);
        gbc.writeMem(0x59d8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x77e);
        EXPECT(gbc.pc(), 0x59d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0220
        gbc.setState(0x97b5, 0x8620, 0xfd20, 0x30f5, 0xc779, 0xd0ec, 0x1, 0x1);
        gbc.writeMem(0x97b5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8620);
        EXPECT(gbc.pc(), 0x97b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b5), 0x4a);
        // 4A 0221
        gbc.setState(0x1edd, 0x53a1, 0x1200, 0xe11d, 0x146e, 0x4b8d, 0x1, 0x0);
        gbc.writeMem(0x1edd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x53a1);
        EXPECT(gbc.pc(), 0x1ede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0222
        gbc.setState(0x177c, 0x889c, 0xb520, 0x9701, 0x8082, 0x241f, 0x0, 0x0);
        gbc.writeMem(0x177c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x889c);
        EXPECT(gbc.pc(), 0x177d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0223
        gbc.setState(0x5e51, 0xccc1, 0x5af0, 0xe61, 0xbdf, 0xb21b, 0x1, 0x0);
        gbc.writeMem(0x5e51, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xccc1);
        EXPECT(gbc.pc(), 0x5e52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0224
        gbc.setState(0x91b3, 0x48f6, 0xe280, 0x3154, 0x8d71, 0x2924, 0x0, 0x1);
        gbc.writeMem(0x91b3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x48f6);
        EXPECT(gbc.pc(), 0x91b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b3), 0x4a);
        // 4A 0225
        gbc.setState(0x639b, 0x96f9, 0xeee0, 0x2a6b, 0x526, 0x45b6, 0x0, 0x1);
        gbc.writeMem(0x639b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x96f9);
        EXPECT(gbc.pc(), 0x639c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0226
        gbc.setState(0x6ae1, 0xba86, 0x96e0, 0x9fe3, 0xfd1c, 0x68a, 0x1, 0x0);
        gbc.writeMem(0x6ae1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xba86);
        EXPECT(gbc.pc(), 0x6ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0227
        gbc.setState(0x92bd, 0x1f3b, 0xbbf0, 0xd0c6, 0x38d6, 0x46ca, 0x0, 0x0);
        gbc.writeMem(0x92bd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1f3b);
        EXPECT(gbc.pc(), 0x92be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92bd), 0x4a);
        // 4A 0228
        gbc.setState(0x4aac, 0xefe1, 0x40e0, 0xf862, 0x813, 0x6c9a, 0x0, 0x1);
        gbc.writeMem(0x4aac, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xefe1);
        EXPECT(gbc.pc(), 0x4aad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0229
        gbc.setState(0xafa9, 0x9da1, 0x9f00, 0x3663, 0x3471, 0x644f, 0x0, 0x0);
        gbc.writeMem(0xafa9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9da1);
        EXPECT(gbc.pc(), 0xafaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafa9), 0x4a);
        // 4A 022A
        gbc.setState(0xe6b2, 0xcc6b, 0xa140, 0xf9ec, 0x4074, 0x3d7c, 0x1, 0x0);
        gbc.writeMem(0xe6b2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcc6b);
        EXPECT(gbc.pc(), 0xe6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b2), 0x4a);
        // 4A 022C
        gbc.setState(0x59dd, 0x63f8, 0xc4e0, 0x2163, 0x1db, 0xf0ba, 0x0, 0x0);
        gbc.writeMem(0x59dd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x63f8);
        EXPECT(gbc.pc(), 0x59de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 022D
        gbc.setState(0x8623, 0xdfe1, 0x12c0, 0xac04, 0x1556, 0x721, 0x0, 0x1);
        gbc.writeMem(0x8623, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdfe1);
        EXPECT(gbc.pc(), 0x8624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8623), 0x4a);
        // 4A 022E
        gbc.setState(0x92d1, 0x4935, 0xe750, 0x8df4, 0x4e07, 0xfffd, 0x0, 0x1);
        gbc.writeMem(0x92d1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4935);
        EXPECT(gbc.pc(), 0x92d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d1), 0x4a);
        // 4A 022F
        gbc.setState(0x9c8f, 0xd6c3, 0x2890, 0x96bf, 0xa4c9, 0x74bb, 0x1, 0x0);
        gbc.writeMem(0x9c8f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd6c3);
        EXPECT(gbc.pc(), 0x9c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c8f), 0x4a);
        // 4A 0230
        gbc.setState(0xd5b7, 0x870c, 0x2160, 0xb556, 0x57ac, 0x1938, 0x0, 0x1);
        gbc.writeMem(0xd5b7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x870c);
        EXPECT(gbc.pc(), 0xd5b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b7), 0x4a);
        // 4A 0231
        gbc.setState(0xfa4, 0x345d, 0xdd80, 0xd74d, 0xd77d, 0xf3be, 0x0, 0x0);
        gbc.writeMem(0xfa4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x345d);
        EXPECT(gbc.pc(), 0xfa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0232
        gbc.setState(0x24c1, 0x95ed, 0xc020, 0x84b2, 0x1866, 0xcfa3, 0x1, 0x0);
        gbc.writeMem(0x24c1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x95ed);
        EXPECT(gbc.pc(), 0x24c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0233
        gbc.setState(0xc5bd, 0xe67f, 0x2ae0, 0xe2bb, 0x23c2, 0xf9ca, 0x1, 0x1);
        gbc.writeMem(0xc5bd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe67f);
        EXPECT(gbc.pc(), 0xc5be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5bd), 0x4a);
        // 4A 0234
        gbc.setState(0xb863, 0x8339, 0x4b10, 0x37db, 0xb8ad, 0xde2f, 0x1, 0x0);
        gbc.writeMem(0xb863, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8339);
        EXPECT(gbc.pc(), 0xb864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb863), 0x4a);
        // 4A 0235
        gbc.setState(0x9af7, 0xbe81, 0x1950, 0xab2, 0x3550, 0x5780, 0x0, 0x0);
        gbc.writeMem(0x9af7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbe81);
        EXPECT(gbc.pc(), 0x9af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af7), 0x4a);
        // 4A 0236
        gbc.setState(0x37ca, 0x3728, 0x9130, 0xeca4, 0x4889, 0x4d53, 0x1, 0x1);
        gbc.writeMem(0x37ca, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3728);
        EXPECT(gbc.pc(), 0x37cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0237
        gbc.setState(0xbb1a, 0x400f, 0xdd70, 0x39f7, 0xecaf, 0x6731, 0x0, 0x1);
        gbc.writeMem(0xbb1a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x400f);
        EXPECT(gbc.pc(), 0xbb1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb1a), 0x4a);
        // 4A 0238
        gbc.setState(0xf8f, 0x3cd6, 0x7a00, 0x6628, 0xf19d, 0xa69f, 0x0, 0x0);
        gbc.writeMem(0xf8f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3cd6);
        EXPECT(gbc.pc(), 0xf90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0239
        gbc.setState(0x91a1, 0x8c1, 0x12c0, 0x5385, 0xcb89, 0x35d7, 0x0, 0x1);
        gbc.writeMem(0x91a1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8c1);
        EXPECT(gbc.pc(), 0x91a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91a1), 0x4a);
        // 4A 023A
        gbc.setState(0x19d0, 0x6e4, 0xb660, 0xeb4f, 0xf95c, 0x119d, 0x0, 0x1);
        gbc.writeMem(0x19d0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6e4);
        EXPECT(gbc.pc(), 0x19d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 023B
        gbc.setState(0x49a5, 0xff40, 0x4b00, 0x4475, 0xe962, 0xb36e, 0x0, 0x1);
        gbc.writeMem(0x49a5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xff40);
        EXPECT(gbc.pc(), 0x49a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 023C
        gbc.setState(0xb711, 0xd84b, 0xc4e0, 0xe3fd, 0x6ec9, 0x1a24, 0x0, 0x0);
        gbc.writeMem(0xb711, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd84b);
        EXPECT(gbc.pc(), 0xb712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb711), 0x4a);
        // 4A 023D
        gbc.setState(0x3d0f, 0xeb1e, 0xdbe0, 0x28f, 0x66b1, 0x7ff8, 0x1, 0x1);
        gbc.writeMem(0x3d0f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xeb1e);
        EXPECT(gbc.pc(), 0x3d10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 023E
        gbc.setState(0xe25b, 0xb0a8, 0xb7b0, 0x2c7e, 0x6d92, 0x3d3a, 0x1, 0x1);
        gbc.writeMem(0xe25b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb0a8);
        EXPECT(gbc.pc(), 0xe25c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25b), 0x4a);
        // 4A 023F
        gbc.setState(0x333a, 0xa84a, 0x2010, 0x4e96, 0xb296, 0x41fe, 0x0, 0x0);
        gbc.writeMem(0x333a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa84a);
        EXPECT(gbc.pc(), 0x333b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0240
        gbc.setState(0x7a0d, 0x8167, 0xa510, 0x2b43, 0x765c, 0xe661, 0x1, 0x0);
        gbc.writeMem(0x7a0d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8167);
        EXPECT(gbc.pc(), 0x7a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0241
        gbc.setState(0x2688, 0x4a68, 0x3340, 0x516, 0xfbb, 0xa6b1, 0x1, 0x0);
        gbc.writeMem(0x2688, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4a68);
        EXPECT(gbc.pc(), 0x2689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0242
        gbc.setState(0xb44f, 0xb25c, 0x7910, 0xa561, 0x4168, 0x4494, 0x0, 0x0);
        gbc.writeMem(0xb44f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb25c);
        EXPECT(gbc.pc(), 0xb450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb44f), 0x4a);
        // 4A 0243
        gbc.setState(0xa60f, 0x99ca, 0xca40, 0xef4a, 0xdd09, 0x791f, 0x0, 0x1);
        gbc.writeMem(0xa60f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x99ca);
        EXPECT(gbc.pc(), 0xa610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa60f), 0x4a);
        // 4A 0244
        gbc.setState(0x129d, 0xcf0e, 0x9330, 0x88df, 0x2bcf, 0xd72a, 0x1, 0x0);
        gbc.writeMem(0x129d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xcf0e);
        EXPECT(gbc.pc(), 0x129e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0245
        gbc.setState(0x98a6, 0xf406, 0x4cc0, 0x45dd, 0xe973, 0xafb1, 0x1, 0x0);
        gbc.writeMem(0x98a6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf406);
        EXPECT(gbc.pc(), 0x98a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a6), 0x4a);
        // 4A 0246
        gbc.setState(0x53cb, 0x8629, 0x67b0, 0xe3cf, 0xf0cb, 0x2f85, 0x1, 0x0);
        gbc.writeMem(0x53cb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8629);
        EXPECT(gbc.pc(), 0x53cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0247
        gbc.setState(0x788d, 0x9381, 0x5d60, 0x1670, 0xe4e7, 0xd77a, 0x1, 0x1);
        gbc.writeMem(0x788d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9381);
        EXPECT(gbc.pc(), 0x788e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0248
        gbc.setState(0x97a9, 0xa918, 0x390, 0xf2c, 0xd623, 0x6cc8, 0x0, 0x0);
        gbc.writeMem(0x97a9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa918);
        EXPECT(gbc.pc(), 0x97aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a9), 0x4a);
        // 4A 0249
        gbc.setState(0x9243, 0x436e, 0xf9c0, 0xabf8, 0x15d9, 0xd460, 0x1, 0x0);
        gbc.writeMem(0x9243, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x436e);
        EXPECT(gbc.pc(), 0x9244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9243), 0x4a);
        // 4A 024A
        gbc.setState(0x85ad, 0x5f36, 0x48b0, 0x512d, 0x22f1, 0x4ee9, 0x1, 0x1);
        gbc.writeMem(0x85ad, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5f36);
        EXPECT(gbc.pc(), 0x85ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ad), 0x4a);
        // 4A 024B
        gbc.setState(0x78ee, 0x71da, 0x5d60, 0x43d5, 0x1e7e, 0x287, 0x0, 0x0);
        gbc.writeMem(0x78ee, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x71da);
        EXPECT(gbc.pc(), 0x78ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 024C
        gbc.setState(0x4864, 0x830d, 0x2f90, 0x2b36, 0x6ea6, 0x248, 0x0, 0x0);
        gbc.writeMem(0x4864, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x830d);
        EXPECT(gbc.pc(), 0x4865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 024D
        gbc.setState(0x65a2, 0x7c6, 0x1c90, 0x6da2, 0x6eae, 0x5adf, 0x1, 0x0);
        gbc.writeMem(0x65a2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7c6);
        EXPECT(gbc.pc(), 0x65a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 024F
        gbc.setState(0x15ff, 0x5723, 0x9cd0, 0xf511, 0x35f, 0x7d09, 0x1, 0x0);
        gbc.writeMem(0x15ff, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5723);
        EXPECT(gbc.pc(), 0x1600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0250
        gbc.setState(0xde55, 0x84d3, 0x5150, 0x85bb, 0xa64e, 0x188b, 0x0, 0x1);
        gbc.writeMem(0xde55, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x84d3);
        EXPECT(gbc.pc(), 0xde56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde55), 0x4a);
        // 4A 0252
        gbc.setState(0xec6c, 0x6e9f, 0x6490, 0x8030, 0x68aa, 0x32c1, 0x1, 0x0);
        gbc.writeMem(0xec6c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6e9f);
        EXPECT(gbc.pc(), 0xec6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec6c), 0x4a);
        // 4A 0253
        gbc.setState(0x2950, 0x932a, 0x9030, 0x5146, 0x91e, 0xd50, 0x1, 0x0);
        gbc.writeMem(0x2950, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x932a);
        EXPECT(gbc.pc(), 0x2951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0254
        gbc.setState(0x5fb, 0x147b, 0xef40, 0x3c42, 0xd59b, 0x9003, 0x1, 0x0);
        gbc.writeMem(0x5fb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x147b);
        EXPECT(gbc.pc(), 0x5fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0255
        gbc.setState(0x4e3, 0xa039, 0x24b0, 0x98b7, 0xcbb7, 0x5a58, 0x0, 0x0);
        gbc.writeMem(0x4e3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa039);
        EXPECT(gbc.pc(), 0x4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0256
        gbc.setState(0x8d62, 0x63a, 0x5470, 0x4988, 0x7936, 0x97c3, 0x0, 0x1);
        gbc.writeMem(0x8d62, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x63a);
        EXPECT(gbc.pc(), 0x8d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d62), 0x4a);
        // 4A 0257
        gbc.setState(0x134c, 0x5fa9, 0xf410, 0x7bdf, 0x5e05, 0xde3b, 0x1, 0x1);
        gbc.writeMem(0x134c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5fa9);
        EXPECT(gbc.pc(), 0x134d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0258
        gbc.setState(0x2ca3, 0xfeba, 0xc270, 0x2bf, 0x7730, 0x6d54, 0x0, 0x1);
        gbc.writeMem(0x2ca3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfeba);
        EXPECT(gbc.pc(), 0x2ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0259
        gbc.setState(0x2dec, 0x96ec, 0x99b0, 0x6262, 0xcf78, 0x638f, 0x0, 0x0);
        gbc.writeMem(0x2dec, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x96ec);
        EXPECT(gbc.pc(), 0x2ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 025A
        gbc.setState(0x3dc0, 0x6a3, 0xe230, 0xbca0, 0x3af5, 0xc7b1, 0x1, 0x0);
        gbc.writeMem(0x3dc0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6a3);
        EXPECT(gbc.pc(), 0x3dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 025B
        gbc.setState(0x8bc5, 0x60f0, 0xcde0, 0x23d, 0xd392, 0x580c, 0x0, 0x1);
        gbc.writeMem(0x8bc5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x60f0);
        EXPECT(gbc.pc(), 0x8bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc5), 0x4a);
        // 4A 025C
        gbc.setState(0x5764, 0x4f95, 0xe4a0, 0xa580, 0xe31f, 0xb940, 0x1, 0x0);
        gbc.writeMem(0x5764, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4f95);
        EXPECT(gbc.pc(), 0x5765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 025D
        gbc.setState(0x8a80, 0x2279, 0xd490, 0xca8e, 0x3e04, 0x98ed, 0x1, 0x1);
        gbc.writeMem(0x8a80, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2279);
        EXPECT(gbc.pc(), 0x8a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a80), 0x4a);
        // 4A 025E
        gbc.setState(0xa9a8, 0x615b, 0x67e0, 0x539c, 0x476d, 0xeb50, 0x0, 0x0);
        gbc.writeMem(0xa9a8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x615b);
        EXPECT(gbc.pc(), 0xa9a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a8), 0x4a);
        // 4A 025F
        gbc.setState(0x9e8e, 0xd40d, 0x8570, 0xfa7c, 0x4550, 0xfbbd, 0x0, 0x0);
        gbc.writeMem(0x9e8e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd40d);
        EXPECT(gbc.pc(), 0x9e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e8e), 0x4a);
        // 4A 0260
        gbc.setState(0xa1ba, 0x81cd, 0xb9d0, 0x7c32, 0x9f88, 0x1702, 0x0, 0x1);
        gbc.writeMem(0xa1ba, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x81cd);
        EXPECT(gbc.pc(), 0xa1bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ba), 0x4a);
        // 4A 0261
        gbc.setState(0x1e87, 0x66ba, 0xf3d0, 0xf78, 0xd81b, 0x95, 0x0, 0x0);
        gbc.writeMem(0x1e87, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x66ba);
        EXPECT(gbc.pc(), 0x1e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0262
        gbc.setState(0x31a8, 0x673b, 0xb460, 0x5715, 0xf144, 0xa3eb, 0x1, 0x1);
        gbc.writeMem(0x31a8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x673b);
        EXPECT(gbc.pc(), 0x31a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0263
        gbc.setState(0xb372, 0xb8e2, 0x8390, 0x4370, 0x2df7, 0x28de, 0x0, 0x1);
        gbc.writeMem(0xb372, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb8e2);
        EXPECT(gbc.pc(), 0xb373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb372), 0x4a);
        // 4A 0264
        gbc.setState(0xddff, 0x72cc, 0xffa0, 0x5348, 0x1c7e, 0x2485, 0x0, 0x1);
        gbc.writeMem(0xddff, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x72cc);
        EXPECT(gbc.pc(), 0xde00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddff), 0x4a);
        // 4A 0265
        gbc.setState(0x48ba, 0xe290, 0xb700, 0x147d, 0xc147, 0x1e92, 0x0, 0x0);
        gbc.writeMem(0x48ba, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe290);
        EXPECT(gbc.pc(), 0x48bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0266
        gbc.setState(0xc453, 0xcb8a, 0xd6d0, 0x1d8f, 0x32d, 0xa7fd, 0x0, 0x1);
        gbc.writeMem(0xc453, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcb8a);
        EXPECT(gbc.pc(), 0xc454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc453), 0x4a);
        // 4A 0267
        gbc.setState(0x6506, 0xd7c2, 0x9870, 0xb860, 0x66d4, 0x7b2d, 0x0, 0x1);
        gbc.writeMem(0x6506, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd7c2);
        EXPECT(gbc.pc(), 0x6507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0269
        gbc.setState(0x1fcd, 0x77d3, 0x7650, 0x87ec, 0xb09e, 0x847c, 0x0, 0x0);
        gbc.writeMem(0x1fcd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x77d3);
        EXPECT(gbc.pc(), 0x1fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 026A
        gbc.setState(0x5534, 0x8698, 0x1c0, 0x63cc, 0x30b3, 0x40f3, 0x1, 0x1);
        gbc.writeMem(0x5534, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8698);
        EXPECT(gbc.pc(), 0x5535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 026C
        gbc.setState(0xe31e, 0xbf9, 0x8040, 0x356e, 0x6c2b, 0x712f, 0x0, 0x0);
        gbc.writeMem(0xe31e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xbf9);
        EXPECT(gbc.pc(), 0xe31f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31e), 0x4a);
        // 4A 026D
        gbc.setState(0x9169, 0xe312, 0x5c20, 0x813, 0xf11e, 0xc333, 0x1, 0x0);
        gbc.writeMem(0x9169, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe312);
        EXPECT(gbc.pc(), 0x916a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9169), 0x4a);
        // 4A 026E
        gbc.setState(0x3007, 0xb41d, 0xd2c0, 0x8019, 0xc66e, 0x6244, 0x0, 0x0);
        gbc.writeMem(0x3007, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb41d);
        EXPECT(gbc.pc(), 0x3008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 026F
        gbc.setState(0x2430, 0xb48a, 0xf800, 0x655b, 0xdca3, 0xcd3b, 0x1, 0x0);
        gbc.writeMem(0x2430, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb48a);
        EXPECT(gbc.pc(), 0x2431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0270
        gbc.setState(0x3799, 0xb646, 0x4b80, 0x75f9, 0x948a, 0xa5aa, 0x0, 0x0);
        gbc.writeMem(0x3799, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb646);
        EXPECT(gbc.pc(), 0x379a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0271
        gbc.setState(0xa905, 0x2a04, 0xd2d0, 0xf640, 0xa70b, 0xa44f, 0x1, 0x1);
        gbc.writeMem(0xa905, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2a04);
        EXPECT(gbc.pc(), 0xa906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa905), 0x4a);
        // 4A 0272
        gbc.setState(0x8013, 0x95ce, 0xa810, 0xdcf2, 0x6769, 0xc728, 0x1, 0x0);
        gbc.writeMem(0x8013, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x95ce);
        EXPECT(gbc.pc(), 0x8014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8013), 0x4a);
        // 4A 0274
        gbc.setState(0x88cb, 0x10b6, 0x890, 0x279b, 0xdef2, 0x8ec6, 0x0, 0x1);
        gbc.writeMem(0x88cb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x10b6);
        EXPECT(gbc.pc(), 0x88cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88cb), 0x4a);
        // 4A 0275
        gbc.setState(0x7d7a, 0xd114, 0xf200, 0xfeff, 0x7075, 0xf0e5, 0x1, 0x1);
        gbc.writeMem(0x7d7a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd114);
        EXPECT(gbc.pc(), 0x7d7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0276
        gbc.setState(0x249b, 0xfaa, 0xa760, 0x85b1, 0xc53d, 0xcb6f, 0x0, 0x0);
        gbc.writeMem(0x249b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfaa);
        EXPECT(gbc.pc(), 0x249c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0277
        gbc.setState(0xe222, 0xdacd, 0x58c0, 0xf766, 0xb6aa, 0xdea, 0x1, 0x1);
        gbc.writeMem(0xe222, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xdacd);
        EXPECT(gbc.pc(), 0xe223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe222), 0x4a);
        // 4A 0278
        gbc.setState(0x1ab7, 0xc4cc, 0xa710, 0x6455, 0x429e, 0xe443, 0x0, 0x1);
        gbc.writeMem(0x1ab7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc4cc);
        EXPECT(gbc.pc(), 0x1ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0279
        gbc.setState(0x6a5c, 0x6f0f, 0x6f50, 0xdba9, 0xc8, 0xfe67, 0x1, 0x0);
        gbc.writeMem(0x6a5c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6f0f);
        EXPECT(gbc.pc(), 0x6a5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 027A
        gbc.setState(0x1929, 0xe871, 0xcd00, 0x720f, 0x2bce, 0x2cde, 0x0, 0x0);
        gbc.writeMem(0x1929, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe871);
        EXPECT(gbc.pc(), 0x192a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 027C
        gbc.setState(0xe4aa, 0x83b4, 0x2560, 0xe8e8, 0xead7, 0x34b7, 0x1, 0x0);
        gbc.writeMem(0xe4aa, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x83b4);
        EXPECT(gbc.pc(), 0xe4ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4aa), 0x4a);
        // 4A 027D
        gbc.setState(0xbfb5, 0x94ae, 0xa680, 0xc7fd, 0x84ed, 0x271f, 0x1, 0x1);
        gbc.writeMem(0xbfb5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x94ae);
        EXPECT(gbc.pc(), 0xbfb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb5), 0x4a);
        // 4A 027E
        gbc.setState(0xe053, 0x523, 0xfc20, 0x136b, 0xaeb6, 0xd34d, 0x1, 0x1);
        gbc.writeMem(0xe053, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x523);
        EXPECT(gbc.pc(), 0xe054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe053), 0x4a);
        // 4A 027F
        gbc.setState(0x836f, 0x6f9d, 0xf240, 0x2844, 0x52ca, 0xf29, 0x1, 0x0);
        gbc.writeMem(0x836f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6f9d);
        EXPECT(gbc.pc(), 0x8370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x836f), 0x4a);
        // 4A 0280
        gbc.setState(0x7bad, 0xa257, 0x42d0, 0xa341, 0xc1bb, 0x4d7, 0x1, 0x0);
        gbc.writeMem(0x7bad, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa257);
        EXPECT(gbc.pc(), 0x7bae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0281
        gbc.setState(0xda0d, 0xd5f6, 0x1df0, 0x80f9, 0x96bf, 0xf497, 0x1, 0x0);
        gbc.writeMem(0xda0d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd5f6);
        EXPECT(gbc.pc(), 0xda0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0d), 0x4a);
        // 4A 0282
        gbc.setState(0x34f2, 0x8af2, 0xbce0, 0x4be8, 0xbe07, 0x6483, 0x1, 0x1);
        gbc.writeMem(0x34f2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8af2);
        EXPECT(gbc.pc(), 0x34f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0283
        gbc.setState(0x3412, 0x737e, 0x5930, 0xac07, 0xac88, 0x3f49, 0x1, 0x0);
        gbc.writeMem(0x3412, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x737e);
        EXPECT(gbc.pc(), 0x3413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0284
        gbc.setState(0x8c42, 0x5478, 0x70c0, 0x8893, 0x784, 0xee46, 0x0, 0x0);
        gbc.writeMem(0x8c42, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5478);
        EXPECT(gbc.pc(), 0x8c43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c42), 0x4a);
        // 4A 0285
        gbc.setState(0xc22c, 0xc0a0, 0xbbf0, 0x78a1, 0x746, 0xec89, 0x0, 0x1);
        gbc.writeMem(0xc22c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc0a0);
        EXPECT(gbc.pc(), 0xc22d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc22c), 0x4a);
        // 4A 0286
        gbc.setState(0xb4b, 0xe4ea, 0x1f10, 0x8807, 0x555, 0x1ce8, 0x0, 0x1);
        gbc.writeMem(0xb4b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe4ea);
        EXPECT(gbc.pc(), 0xb4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0287
        gbc.setState(0xea73, 0xc3bb, 0xb6e0, 0xa503, 0x4470, 0xfaf8, 0x0, 0x1);
        gbc.writeMem(0xea73, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc3bb);
        EXPECT(gbc.pc(), 0xea74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea73), 0x4a);
        // 4A 0288
        gbc.setState(0x4fe6, 0x6e8b, 0x9b70, 0x565e, 0x62a0, 0x3951, 0x0, 0x0);
        gbc.writeMem(0x4fe6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6e8b);
        EXPECT(gbc.pc(), 0x4fe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0289
        gbc.setState(0x1996, 0x12d7, 0x4e90, 0x3cd8, 0xa2de, 0x18c5, 0x1, 0x1);
        gbc.writeMem(0x1996, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x12d7);
        EXPECT(gbc.pc(), 0x1997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 028A
        gbc.setState(0xa874, 0xe3ab, 0xa2c0, 0x8222, 0x5861, 0x4b27, 0x1, 0x0);
        gbc.writeMem(0xa874, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe3ab);
        EXPECT(gbc.pc(), 0xa875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa874), 0x4a);
        // 4A 028B
        gbc.setState(0xd128, 0xc988, 0x89a0, 0x907, 0xe121, 0xb991, 0x1, 0x1);
        gbc.writeMem(0xd128, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc988);
        EXPECT(gbc.pc(), 0xd129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd128), 0x4a);
        // 4A 028C
        gbc.setState(0x1fad, 0xb142, 0xa40, 0x4f89, 0x5f6d, 0x7abe, 0x0, 0x0);
        gbc.writeMem(0x1fad, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb142);
        EXPECT(gbc.pc(), 0x1fae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 028D
        gbc.setState(0x8173, 0x826d, 0x72b0, 0xbbda, 0x4990, 0x5499, 0x1, 0x1);
        gbc.writeMem(0x8173, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x826d);
        EXPECT(gbc.pc(), 0x8174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8173), 0x4a);
        // 4A 028E
        gbc.setState(0x398c, 0x864, 0x330, 0x3f4e, 0x8842, 0xd8bb, 0x1, 0x0);
        gbc.writeMem(0x398c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x864);
        EXPECT(gbc.pc(), 0x398d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 028F
        gbc.setState(0x8c70, 0x5149, 0x2a40, 0x25e0, 0x64d2, 0xccae, 0x0, 0x1);
        gbc.writeMem(0x8c70, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5149);
        EXPECT(gbc.pc(), 0x8c71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c70), 0x4a);
        // 4A 0290
        gbc.setState(0xd353, 0x951c, 0xc0c0, 0xe002, 0x76dc, 0xbe66, 0x1, 0x0);
        gbc.writeMem(0xd353, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x951c);
        EXPECT(gbc.pc(), 0xd354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd353), 0x4a);
        // 4A 0291
        gbc.setState(0x91d8, 0x6c43, 0x3310, 0x2609, 0x4c3f, 0x6d65, 0x1, 0x0);
        gbc.writeMem(0x91d8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6c43);
        EXPECT(gbc.pc(), 0x91d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d8), 0x4a);
        // 4A 0292
        gbc.setState(0x944b, 0x23f6, 0x72b0, 0x49de, 0x6, 0x1530, 0x0, 0x1);
        gbc.writeMem(0x944b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x23f6);
        EXPECT(gbc.pc(), 0x944c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x944b), 0x4a);
        // 4A 0293
        gbc.setState(0xe82a, 0x670, 0x9f80, 0x2199, 0xc1c1, 0xeaf6, 0x0, 0x0);
        gbc.writeMem(0xe82a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x670);
        EXPECT(gbc.pc(), 0xe82b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe82a), 0x4a);
        // 4A 0294
        gbc.setState(0x845d, 0x36e0, 0xde70, 0x9164, 0x6171, 0x3958, 0x1, 0x1);
        gbc.writeMem(0x845d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x36e0);
        EXPECT(gbc.pc(), 0x845e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x845d), 0x4a);
        // 4A 0295
        gbc.setState(0x112a, 0x9373, 0xe2e0, 0x38e0, 0xe4e8, 0xb095, 0x1, 0x1);
        gbc.writeMem(0x112a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9373);
        EXPECT(gbc.pc(), 0x112b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0296
        gbc.setState(0xb6e6, 0xdb28, 0xfa00, 0x7241, 0x6c62, 0xa8ce, 0x1, 0x1);
        gbc.writeMem(0xb6e6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdb28);
        EXPECT(gbc.pc(), 0xb6e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e6), 0x4a);
        // 4A 0297
        gbc.setState(0x8c1c, 0x66a4, 0x9990, 0x47a0, 0xe53b, 0xcd84, 0x0, 0x0);
        gbc.writeMem(0x8c1c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x66a4);
        EXPECT(gbc.pc(), 0x8c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1c), 0x4a);
        // 4A 0298
        gbc.setState(0x1471, 0x2460, 0xf120, 0x8fc6, 0xa4b2, 0xa9ab, 0x0, 0x0);
        gbc.writeMem(0x1471, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2460);
        EXPECT(gbc.pc(), 0x1472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0299
        gbc.setState(0xc32f, 0x45fb, 0x9380, 0xc6e5, 0xf710, 0x9a29, 0x1, 0x0);
        gbc.writeMem(0xc32f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x45fb);
        EXPECT(gbc.pc(), 0xc330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc32f), 0x4a);
        // 4A 029A
        gbc.setState(0x1069, 0x6e16, 0x87e0, 0x8a1a, 0x2eca, 0x1d6b, 0x1, 0x1);
        gbc.writeMem(0x1069, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6e16);
        EXPECT(gbc.pc(), 0x106a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 029B
        gbc.setState(0x8992, 0x760, 0x8ad0, 0xab87, 0xbd5d, 0x3fc1, 0x1, 0x0);
        gbc.writeMem(0x8992, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x760);
        EXPECT(gbc.pc(), 0x8993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8992), 0x4a);
        // 4A 029C
        gbc.setState(0xfb9, 0x1cf5, 0xb6b0, 0x337b, 0x1925, 0x72fe, 0x1, 0x0);
        gbc.writeMem(0xfb9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1cf5);
        EXPECT(gbc.pc(), 0xfba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 029D
        gbc.setState(0xeeef, 0xbcca, 0x3ae0, 0x7a86, 0xe325, 0xf4a, 0x0, 0x0);
        gbc.writeMem(0xeeef, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbcca);
        EXPECT(gbc.pc(), 0xeef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeef), 0x4a);
        // 4A 029E
        gbc.setState(0x7d65, 0x5272, 0x97d0, 0xa4af, 0x5600, 0xdbdd, 0x0, 0x1);
        gbc.writeMem(0x7d65, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5272);
        EXPECT(gbc.pc(), 0x7d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 029F
        gbc.setState(0x283, 0xcbfd, 0x1200, 0xd62d, 0xc0ad, 0xe5d8, 0x0, 0x0);
        gbc.writeMem(0x283, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcbfd);
        EXPECT(gbc.pc(), 0x284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 02A0
        gbc.setState(0xb39, 0x4fbb, 0x12d0, 0xab1f, 0x9f81, 0xb1e6, 0x0, 0x0);
        gbc.writeMem(0xb39, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4fbb);
        EXPECT(gbc.pc(), 0xb3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 02A1
        gbc.setState(0x7e22, 0x2f0c, 0x1fe0, 0x4f30, 0xb446, 0x296e, 0x0, 0x0);
        gbc.writeMem(0x7e22, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2f0c);
        EXPECT(gbc.pc(), 0x7e23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02A2
        gbc.setState(0xb02d, 0x43fb, 0x5430, 0xdad4, 0x8147, 0x5d15, 0x0, 0x0);
        gbc.writeMem(0xb02d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x43fb);
        EXPECT(gbc.pc(), 0xb02e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb02d), 0x4a);
        // 4A 02A4
        gbc.setState(0xc6bc, 0x1128, 0xff00, 0xc020, 0x5af3, 0xe1b9, 0x0, 0x1);
        gbc.writeMem(0xc6bc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1128);
        EXPECT(gbc.pc(), 0xc6bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6bc), 0x4a);
        // 4A 02A5
        gbc.setState(0x7be9, 0x9ef6, 0xa5f0, 0x2e21, 0x8bc4, 0x1c90, 0x0, 0x1);
        gbc.writeMem(0x7be9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9ef6);
        EXPECT(gbc.pc(), 0x7bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02A6
        gbc.setState(0x35ea, 0x9528, 0x7bc0, 0xc6e6, 0xba5d, 0x3735, 0x0, 0x1);
        gbc.writeMem(0x35ea, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9528);
        EXPECT(gbc.pc(), 0x35eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 02A7
        gbc.setState(0x884, 0x307c, 0x7a90, 0x8747, 0x6e9f, 0x887d, 0x1, 0x0);
        gbc.writeMem(0x884, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x307c);
        EXPECT(gbc.pc(), 0x885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 02A8
        gbc.setState(0x5a3d, 0xe4f2, 0x1c30, 0x964e, 0x71af, 0x3ec2, 0x0, 0x0);
        gbc.writeMem(0x5a3d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe4f2);
        EXPECT(gbc.pc(), 0x5a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02A9
        gbc.setState(0xe253, 0x6b59, 0xca80, 0xf269, 0xd1e9, 0xafe5, 0x1, 0x1);
        gbc.writeMem(0xe253, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6b59);
        EXPECT(gbc.pc(), 0xe254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe253), 0x4a);
        // 4A 02AA
        gbc.setState(0x89af, 0x5e11, 0xee40, 0x6cb3, 0x881a, 0x86be, 0x0, 0x0);
        gbc.writeMem(0x89af, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5e11);
        EXPECT(gbc.pc(), 0x89b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89af), 0x4a);
        // 4A 02AB
        gbc.setState(0x6eb9, 0xe54, 0xd400, 0x6bce, 0x5f33, 0xb41c, 0x0, 0x0);
        gbc.writeMem(0x6eb9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe54);
        EXPECT(gbc.pc(), 0x6eba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 02AC
        gbc.setState(0x67ac, 0xf13d, 0x29f0, 0x90d6, 0xaa85, 0xd662, 0x1, 0x1);
        gbc.writeMem(0x67ac, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf13d);
        EXPECT(gbc.pc(), 0x67ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02AD
        gbc.setState(0x22d0, 0x49ac, 0xffe0, 0x77f7, 0xbb81, 0xad0d, 0x1, 0x0);
        gbc.writeMem(0x22d0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x49ac);
        EXPECT(gbc.pc(), 0x22d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02AE
        gbc.setState(0xc108, 0xd53, 0x5350, 0x7c61, 0x357f, 0x2ed3, 0x0, 0x0);
        gbc.writeMem(0xc108, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd53);
        EXPECT(gbc.pc(), 0xc109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc108), 0x4a);
        // 4A 02AF
        gbc.setState(0x21fd, 0x498d, 0xee0, 0x5da4, 0x824c, 0x9ad3, 0x1, 0x0);
        gbc.writeMem(0x21fd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x498d);
        EXPECT(gbc.pc(), 0x21fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02B1
        gbc.setState(0x35a7, 0xdfa6, 0x5770, 0xe8c5, 0x6e82, 0x9845, 0x1, 0x0);
        gbc.writeMem(0x35a7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdfa6);
        EXPECT(gbc.pc(), 0x35a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02B2
        gbc.setState(0x6b62, 0x727a, 0x4330, 0x24, 0xdbd6, 0x4b6e, 0x0, 0x0);
        gbc.writeMem(0x6b62, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x727a);
        EXPECT(gbc.pc(), 0x6b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02B3
        gbc.setState(0xacf, 0x9262, 0xcaf0, 0x44b, 0x6904, 0x29c1, 0x1, 0x0);
        gbc.writeMem(0xacf, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9262);
        EXPECT(gbc.pc(), 0xad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02B4
        gbc.setState(0x510d, 0xbc5a, 0x33a0, 0xef6d, 0x129b, 0xd96c, 0x1, 0x1);
        gbc.writeMem(0x510d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbc5a);
        EXPECT(gbc.pc(), 0x510e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02B5
        gbc.setState(0x115, 0x5a83, 0x40d0, 0xfd96, 0x4512, 0xd57e, 0x1, 0x1);
        gbc.writeMem(0x115, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5a83);
        EXPECT(gbc.pc(), 0x116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 02B6
        gbc.setState(0x6ad2, 0xfacc, 0x6ec0, 0xe16, 0xc7bf, 0xcd9, 0x1, 0x0);
        gbc.writeMem(0x6ad2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfacc);
        EXPECT(gbc.pc(), 0x6ad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 02B8
        gbc.setState(0x2af5, 0xa80d, 0x8420, 0x63f8, 0xb115, 0x3863, 0x1, 0x1);
        gbc.writeMem(0x2af5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa80d);
        EXPECT(gbc.pc(), 0x2af6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02B9
        gbc.setState(0xd353, 0xf569, 0xd0, 0x931c, 0x4de4, 0x3afe, 0x1, 0x1);
        gbc.writeMem(0xd353, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf569);
        EXPECT(gbc.pc(), 0xd354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd353), 0x4a);
        // 4A 02BA
        gbc.setState(0x6cab, 0x2839, 0xc340, 0x2564, 0xdae3, 0x4b7d, 0x0, 0x0);
        gbc.writeMem(0x6cab, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2839);
        EXPECT(gbc.pc(), 0x6cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 02BB
        gbc.setState(0xa822, 0xf92f, 0xe380, 0x2acc, 0x8507, 0x333c, 0x1, 0x0);
        gbc.writeMem(0xa822, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf92f);
        EXPECT(gbc.pc(), 0xa823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa822), 0x4a);
        // 4A 02BC
        gbc.setState(0x2afd, 0x110a, 0x28e0, 0x6c70, 0xc785, 0x47c9, 0x1, 0x1);
        gbc.writeMem(0x2afd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x110a);
        EXPECT(gbc.pc(), 0x2afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02BD
        gbc.setState(0x7d6f, 0x6a62, 0x3e60, 0x64b6, 0x91ab, 0x3a68, 0x1, 0x1);
        gbc.writeMem(0x7d6f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6a62);
        EXPECT(gbc.pc(), 0x7d70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02BE
        gbc.setState(0xcf4a, 0xaddd, 0x5380, 0x352, 0x7f84, 0x59f8, 0x0, 0x0);
        gbc.writeMem(0xcf4a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xaddd);
        EXPECT(gbc.pc(), 0xcf4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4a), 0x4a);
        // 4A 02BF
        gbc.setState(0x6f0c, 0x669d, 0x4360, 0xe0c7, 0x2206, 0xe266, 0x0, 0x1);
        gbc.writeMem(0x6f0c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x669d);
        EXPECT(gbc.pc(), 0x6f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02C0
        gbc.setState(0x62eb, 0x745, 0x3f70, 0xdb0, 0x4eeb, 0xc1a3, 0x0, 0x0);
        gbc.writeMem(0x62eb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x745);
        EXPECT(gbc.pc(), 0x62ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02C1
        gbc.setState(0xb7ac, 0x41dc, 0xc640, 0xcc19, 0x11d6, 0x767c, 0x1, 0x0);
        gbc.writeMem(0xb7ac, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x41dc);
        EXPECT(gbc.pc(), 0xb7ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ac), 0x4a);
        // 4A 02C2
        gbc.setState(0xef1e, 0x14a7, 0x96a0, 0xfdc8, 0xe38, 0x648a, 0x1, 0x1);
        gbc.writeMem(0xef1e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x14a7);
        EXPECT(gbc.pc(), 0xef1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef1e), 0x4a);
        // 4A 02C3
        gbc.setState(0xe414, 0xc6b, 0xec10, 0x54df, 0xb63b, 0xdf92, 0x1, 0x1);
        gbc.writeMem(0xe414, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc6b);
        EXPECT(gbc.pc(), 0xe415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe414), 0x4a);
        // 4A 02C5
        gbc.setState(0x1fe7, 0xfc60, 0xfb80, 0x6228, 0x5916, 0x961a, 0x1, 0x0);
        gbc.writeMem(0x1fe7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfc60);
        EXPECT(gbc.pc(), 0x1fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 02C6
        gbc.setState(0x3cdc, 0xd986, 0x7a90, 0xedb9, 0x6e6c, 0xa8de, 0x0, 0x1);
        gbc.writeMem(0x3cdc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd986);
        EXPECT(gbc.pc(), 0x3cdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 02C7
        gbc.setState(0xdcb9, 0xa9c3, 0x36a0, 0xc463, 0xa662, 0x2a9b, 0x1, 0x1);
        gbc.writeMem(0xdcb9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa9c3);
        EXPECT(gbc.pc(), 0xdcba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb9), 0x4a);
        // 4A 02C8
        gbc.setState(0x9128, 0xe3b2, 0x4e70, 0x7054, 0x7cad, 0x7303, 0x1, 0x1);
        gbc.writeMem(0x9128, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe3b2);
        EXPECT(gbc.pc(), 0x9129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9128), 0x4a);
        // 4A 02C9
        gbc.setState(0xc65a, 0x145d, 0x6350, 0xf428, 0xc233, 0x3400, 0x0, 0x0);
        gbc.writeMem(0xc65a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x145d);
        EXPECT(gbc.pc(), 0xc65b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc65a), 0x4a);
        // 4A 02CA
        gbc.setState(0xbdc7, 0xef6f, 0xb5d0, 0x8dea, 0x5078, 0x998c, 0x0, 0x0);
        gbc.writeMem(0xbdc7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xef6f);
        EXPECT(gbc.pc(), 0xbdc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc7), 0x4a);
        // 4A 02CB
        gbc.setState(0xbb11, 0x9a4e, 0x8a50, 0x3e3d, 0x5fc5, 0x80c5, 0x1, 0x0);
        gbc.writeMem(0xbb11, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9a4e);
        EXPECT(gbc.pc(), 0xbb12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb11), 0x4a);
        // 4A 02CC
        gbc.setState(0x3c6, 0x503b, 0x33f0, 0x3008, 0x8267, 0x5155, 0x0, 0x1);
        gbc.writeMem(0x3c6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x503b);
        EXPECT(gbc.pc(), 0x3c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02CD
        gbc.setState(0x4f1c, 0x784e, 0x7ab0, 0x42b7, 0x7286, 0x11fe, 0x0, 0x1);
        gbc.writeMem(0x4f1c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x784e);
        EXPECT(gbc.pc(), 0x4f1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02CE
        gbc.setState(0x3fb1, 0xc1e7, 0x95e0, 0x5786, 0x93ce, 0x8e9d, 0x0, 0x0);
        gbc.writeMem(0x3fb1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc1e7);
        EXPECT(gbc.pc(), 0x3fb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02CF
        gbc.setState(0x6f9f, 0xfaef, 0x5930, 0x52c0, 0x11e0, 0x32f2, 0x0, 0x1);
        gbc.writeMem(0x6f9f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfaef);
        EXPECT(gbc.pc(), 0x6fa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02D0
        gbc.setState(0x1b66, 0xf129, 0x9590, 0x9ac5, 0x21e2, 0xe43f, 0x0, 0x1);
        gbc.writeMem(0x1b66, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf129);
        EXPECT(gbc.pc(), 0x1b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 02D1
        gbc.setState(0xb0c, 0x512f, 0xcbb0, 0x8b91, 0x3331, 0x6f16, 0x1, 0x1);
        gbc.writeMem(0xb0c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x512f);
        EXPECT(gbc.pc(), 0xb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02D2
        gbc.setState(0xebed, 0x1813, 0x86c0, 0x994e, 0x51a5, 0xdf40, 0x1, 0x1);
        gbc.writeMem(0xebed, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1813);
        EXPECT(gbc.pc(), 0xebee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebed), 0x4a);
        // 4A 02D3
        gbc.setState(0xd1e3, 0xad6d, 0x8ca0, 0x8f66, 0xfb0f, 0x36, 0x0, 0x1);
        gbc.writeMem(0xd1e3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xad6d);
        EXPECT(gbc.pc(), 0xd1e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e3), 0x4a);
        // 4A 02D4
        gbc.setState(0xa4da, 0xb01b, 0x23e0, 0xcf4f, 0xe5d3, 0xd27d, 0x1, 0x0);
        gbc.writeMem(0xa4da, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb01b);
        EXPECT(gbc.pc(), 0xa4db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4da), 0x4a);
        // 4A 02D5
        gbc.setState(0xd168, 0x30b0, 0xa590, 0xf531, 0xa7f9, 0x1a9, 0x1, 0x0);
        gbc.writeMem(0xd168, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x30b0);
        EXPECT(gbc.pc(), 0xd169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd168), 0x4a);
        // 4A 02D6
        gbc.setState(0x1710, 0x48be, 0x41d0, 0xc57f, 0xb641, 0xaec3, 0x1, 0x1);
        gbc.writeMem(0x1710, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x48be);
        EXPECT(gbc.pc(), 0x1711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 02D7
        gbc.setState(0x6dfa, 0xf761, 0x6060, 0xf9e4, 0x502a, 0x3e17, 0x0, 0x1);
        gbc.writeMem(0x6dfa, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf761);
        EXPECT(gbc.pc(), 0x6dfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02D8
        gbc.setState(0x1099, 0xa5fb, 0x4ca0, 0xa728, 0x55e1, 0xaa1c, 0x1, 0x0);
        gbc.writeMem(0x1099, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa5fb);
        EXPECT(gbc.pc(), 0x109a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02D9
        gbc.setState(0xb4c5, 0x400f, 0x5f10, 0xedfa, 0x7b4f, 0xa66d, 0x0, 0x1);
        gbc.writeMem(0xb4c5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x400f);
        EXPECT(gbc.pc(), 0xb4c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c5), 0x4a);
        // 4A 02DA
        gbc.setState(0x3f2a, 0x1a38, 0x1440, 0x8ac8, 0x1493, 0xa3de, 0x1, 0x1);
        gbc.writeMem(0x3f2a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1a38);
        EXPECT(gbc.pc(), 0x3f2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 02DB
        gbc.setState(0x3fa7, 0xa648, 0xa020, 0x4eff, 0x65ce, 0x4865, 0x1, 0x0);
        gbc.writeMem(0x3fa7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa648);
        EXPECT(gbc.pc(), 0x3fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02DC
        gbc.setState(0x64bc, 0xd113, 0xa400, 0x76db, 0x81a7, 0xc79d, 0x1, 0x1);
        gbc.writeMem(0x64bc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd113);
        EXPECT(gbc.pc(), 0x64bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 02DD
        gbc.setState(0x1d60, 0x145f, 0x15f0, 0xb272, 0xa69d, 0xa114, 0x0, 0x1);
        gbc.writeMem(0x1d60, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x145f);
        EXPECT(gbc.pc(), 0x1d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02DE
        gbc.setState(0xaf54, 0x8b80, 0x97e0, 0xd2a9, 0x88a9, 0xaf, 0x1, 0x1);
        gbc.writeMem(0xaf54, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8b80);
        EXPECT(gbc.pc(), 0xaf55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf54), 0x4a);
        // 4A 02DF
        gbc.setState(0x79e, 0xfc05, 0x68f0, 0x15f3, 0x7101, 0xeac9, 0x1, 0x0);
        gbc.writeMem(0x79e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfc05);
        EXPECT(gbc.pc(), 0x79f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02E0
        gbc.setState(0xa609, 0xc57e, 0xa1b0, 0x32bf, 0x55c2, 0xd2ec, 0x0, 0x1);
        gbc.writeMem(0xa609, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc57e);
        EXPECT(gbc.pc(), 0xa60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa609), 0x4a);
        // 4A 02E2
        gbc.setState(0xaf8a, 0xad85, 0x7a10, 0xdffb, 0xd2f2, 0x429e, 0x1, 0x0);
        gbc.writeMem(0xaf8a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xad85);
        EXPECT(gbc.pc(), 0xaf8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf8a), 0x4a);
        // 4A 02E3
        gbc.setState(0xc433, 0x4586, 0x87a0, 0x8195, 0x5334, 0xb5a8, 0x0, 0x0);
        gbc.writeMem(0xc433, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4586);
        EXPECT(gbc.pc(), 0xc434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc433), 0x4a);
        // 4A 02E4
        gbc.setState(0xc768, 0x6bb, 0x2d70, 0xe1d, 0x8918, 0xd048, 0x0, 0x0);
        gbc.writeMem(0xc768, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6bb);
        EXPECT(gbc.pc(), 0xc769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc768), 0x4a);
        // 4A 02E5
        gbc.setState(0x876a, 0xc4a9, 0xa8f0, 0x105c, 0xc98c, 0x4f0e, 0x1, 0x1);
        gbc.writeMem(0x876a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc4a9);
        EXPECT(gbc.pc(), 0x876b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876a), 0x4a);
        // 4A 02E6
        gbc.setState(0xb5d3, 0xd362, 0x8d50, 0xbc22, 0xc769, 0xa308, 0x0, 0x0);
        gbc.writeMem(0xb5d3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd362);
        EXPECT(gbc.pc(), 0xb5d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d3), 0x4a);
        // 4A 02E7
        gbc.setState(0xb094, 0xffd3, 0x4430, 0x8d79, 0x9bd2, 0x21fb, 0x1, 0x0);
        gbc.writeMem(0xb094, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xffd3);
        EXPECT(gbc.pc(), 0xb095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb094), 0x4a);
        // 4A 02E8
        gbc.setState(0xe44, 0xdadb, 0xc70, 0x57dc, 0xadc2, 0x3189, 0x0, 0x1);
        gbc.writeMem(0xe44, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdadb);
        EXPECT(gbc.pc(), 0xe45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02E9
        gbc.setState(0x5443, 0xb6e2, 0xb700, 0x9f44, 0xd64a, 0xcfb6, 0x0, 0x1);
        gbc.writeMem(0x5443, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb6e2);
        EXPECT(gbc.pc(), 0x5444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 02EA
        gbc.setState(0x8cad, 0xf198, 0x180, 0xa184, 0xefea, 0x4630, 0x1, 0x0);
        gbc.writeMem(0x8cad, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf198);
        EXPECT(gbc.pc(), 0x8cae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cad), 0x4a);
        // 4A 02EB
        gbc.setState(0xcf61, 0x18dc, 0x5c20, 0xa5d0, 0x8f94, 0xaeb1, 0x1, 0x1);
        gbc.writeMem(0xcf61, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x18dc);
        EXPECT(gbc.pc(), 0xcf62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf61), 0x4a);
        // 4A 02EC
        gbc.setState(0x6659, 0x5c3c, 0x7a20, 0x768a, 0xd51b, 0x7d9d, 0x1, 0x0);
        gbc.writeMem(0x6659, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5c3c);
        EXPECT(gbc.pc(), 0x665a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02ED
        gbc.setState(0x176d, 0xb881, 0xe330, 0x14c8, 0x151d, 0xddab, 0x0, 0x1);
        gbc.writeMem(0x176d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb881);
        EXPECT(gbc.pc(), 0x176e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02EE
        gbc.setState(0x825e, 0xf63b, 0x1220, 0x6a2c, 0x25d1, 0x9323, 0x1, 0x1);
        gbc.writeMem(0x825e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf63b);
        EXPECT(gbc.pc(), 0x825f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x825e), 0x4a);
        // 4A 02EF
        gbc.setState(0xee55, 0x988f, 0xd560, 0xbc66, 0x6b8e, 0x5140, 0x0, 0x0);
        gbc.writeMem(0xee55, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x988f);
        EXPECT(gbc.pc(), 0xee56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee55), 0x4a);
        // 4A 02F0
        gbc.setState(0xb311, 0xdefc, 0xeaa0, 0x49a4, 0x16c0, 0x8d93, 0x0, 0x1);
        gbc.writeMem(0xb311, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xdefc);
        EXPECT(gbc.pc(), 0xb312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb311), 0x4a);
        // 4A 02F1
        gbc.setState(0xc07c, 0x6b71, 0x240, 0x6ec6, 0xeed5, 0x8477, 0x0, 0x1);
        gbc.writeMem(0xc07c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6b71);
        EXPECT(gbc.pc(), 0xc07d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07c), 0x4a);
        // 4A 02F2
        gbc.setState(0xe0c6, 0xa78, 0x7cf0, 0xe7ee, 0xacce, 0xd84c, 0x0, 0x0);
        gbc.writeMem(0xe0c6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa78);
        EXPECT(gbc.pc(), 0xe0c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c6), 0x4a);
        // 4A 02F3
        gbc.setState(0x2adc, 0x747, 0xc830, 0xd399, 0x1800, 0xc0b6, 0x1, 0x0);
        gbc.writeMem(0x2adc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x747);
        EXPECT(gbc.pc(), 0x2add);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02F4
        gbc.setState(0x7211, 0xce38, 0xb1c0, 0x67ac, 0x7e2f, 0xff64, 0x1, 0x1);
        gbc.writeMem(0x7211, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xce38);
        EXPECT(gbc.pc(), 0x7212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 02F5
        gbc.setState(0x17c8, 0x89, 0x8ec0, 0xf235, 0x955a, 0x8f6e, 0x0, 0x0);
        gbc.writeMem(0x17c8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x89);
        EXPECT(gbc.pc(), 0x17c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 02F6
        gbc.setState(0x20da, 0xc218, 0xacb0, 0x6de0, 0xf89f, 0xdeb8, 0x1, 0x1);
        gbc.writeMem(0x20da, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc218);
        EXPECT(gbc.pc(), 0x20db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02F7
        gbc.setState(0xa4a, 0x154b, 0xc070, 0x57c2, 0x7226, 0x1bd4, 0x0, 0x0);
        gbc.writeMem(0xa4a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x154b);
        EXPECT(gbc.pc(), 0xa4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02F8
        gbc.setState(0xdd19, 0x1e24, 0x8490, 0xbf2, 0xb939, 0xa83, 0x0, 0x1);
        gbc.writeMem(0xdd19, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1e24);
        EXPECT(gbc.pc(), 0xdd1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd19), 0x4a);
        // 4A 02F9
        gbc.setState(0x10ec, 0x6342, 0x6690, 0xb40a, 0xb4c4, 0x885a, 0x1, 0x1);
        gbc.writeMem(0x10ec, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6342);
        EXPECT(gbc.pc(), 0x10ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 02FA
        gbc.setState(0x4c68, 0xe362, 0x2da0, 0xa5b, 0xf8f4, 0x30e8, 0x1, 0x0);
        gbc.writeMem(0x4c68, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe362);
        EXPECT(gbc.pc(), 0x4c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02FB
        gbc.setState(0x5bd5, 0xc2f7, 0x2990, 0x829, 0xf6d2, 0xeb17, 0x1, 0x0);
        gbc.writeMem(0x5bd5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc2f7);
        EXPECT(gbc.pc(), 0x5bd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 02FC
        gbc.setState(0x8df9, 0xdcc6, 0x7110, 0xf182, 0xc3c5, 0x781f, 0x1, 0x0);
        gbc.writeMem(0x8df9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xdcc6);
        EXPECT(gbc.pc(), 0x8dfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df9), 0x4a);
        // 4A 02FD
        gbc.setState(0x606a, 0x82f2, 0x70f0, 0x445c, 0xc173, 0x475f, 0x0, 0x1);
        gbc.writeMem(0x606a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x82f2);
        EXPECT(gbc.pc(), 0x606b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 02FE
        gbc.setState(0x7f09, 0xea08, 0xb60, 0x1b25, 0x3376, 0xa326, 0x1, 0x1);
        gbc.writeMem(0x7f09, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xea08);
        EXPECT(gbc.pc(), 0x7f0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 02FF
        gbc.setState(0x7418, 0x601, 0x94a0, 0x764f, 0xb51f, 0xadc1, 0x0, 0x0);
        gbc.writeMem(0x7418, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x601);
        EXPECT(gbc.pc(), 0x7419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0300
        gbc.setState(0xc107, 0x6d2, 0xcdb0, 0x4060, 0x4e96, 0x4595, 0x0, 0x0);
        gbc.writeMem(0xc107, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6d2);
        EXPECT(gbc.pc(), 0xc108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc107), 0x4a);
        // 4A 0302
        gbc.setState(0xc930, 0xbede, 0x1b0, 0x7390, 0x47d4, 0x6b06, 0x1, 0x1);
        gbc.writeMem(0xc930, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xbede);
        EXPECT(gbc.pc(), 0xc931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc930), 0x4a);
        // 4A 0303
        gbc.setState(0x43d9, 0x5d9, 0x8e0, 0xd2e6, 0xea20, 0x463d, 0x1, 0x1);
        gbc.writeMem(0x43d9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5d9);
        EXPECT(gbc.pc(), 0x43da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0304
        gbc.setState(0x4f14, 0xac5a, 0xcfb0, 0x4fe2, 0x3e5e, 0x991c, 0x0, 0x0);
        gbc.writeMem(0x4f14, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xac5a);
        EXPECT(gbc.pc(), 0x4f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0305
        gbc.setState(0x2688, 0x510, 0xba20, 0xb7c0, 0xff6b, 0xd003, 0x0, 0x0);
        gbc.writeMem(0x2688, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x510);
        EXPECT(gbc.pc(), 0x2689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0306
        gbc.setState(0x4c1, 0x6da9, 0xfb80, 0x8549, 0x8052, 0x7054, 0x1, 0x1);
        gbc.writeMem(0x4c1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6da9);
        EXPECT(gbc.pc(), 0x4c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0307
        gbc.setState(0x89bf, 0xc5e6, 0xb980, 0x400c, 0x5e53, 0x9dd6, 0x1, 0x1);
        gbc.writeMem(0x89bf, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc5e6);
        EXPECT(gbc.pc(), 0x89c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89bf), 0x4a);
        // 4A 0308
        gbc.setState(0x6160, 0x65b6, 0xc270, 0x4d92, 0x3775, 0xa38a, 0x0, 0x0);
        gbc.writeMem(0x6160, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x65b6);
        EXPECT(gbc.pc(), 0x6161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0309
        gbc.setState(0x8f38, 0x3b91, 0x8470, 0xaea8, 0x3852, 0xd9d0, 0x0, 0x1);
        gbc.writeMem(0x8f38, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3b91);
        EXPECT(gbc.pc(), 0x8f39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f38), 0x4a);
        // 4A 030A
        gbc.setState(0xddb, 0x6f02, 0x56d0, 0x78c2, 0xa8e5, 0xdaa9, 0x0, 0x1);
        gbc.writeMem(0xddb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6f02);
        EXPECT(gbc.pc(), 0xddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 030B
        gbc.setState(0x1c78, 0x6254, 0xfcc0, 0x618b, 0x9fa3, 0xa712, 0x0, 0x0);
        gbc.writeMem(0x1c78, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6254);
        EXPECT(gbc.pc(), 0x1c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 030C
        gbc.setState(0x5db8, 0x84e2, 0xda30, 0xc5c3, 0xde61, 0x5154, 0x0, 0x0);
        gbc.writeMem(0x5db8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x84e2);
        EXPECT(gbc.pc(), 0x5db9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 030D
        gbc.setState(0xa93e, 0x79ed, 0xd440, 0xae6e, 0xffde, 0x393c, 0x0, 0x0);
        gbc.writeMem(0xa93e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x79ed);
        EXPECT(gbc.pc(), 0xa93f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa93e), 0x4a);
        // 4A 030E
        gbc.setState(0x60b4, 0xbb3e, 0xe6c0, 0x985a, 0x4f79, 0xe30f, 0x0, 0x1);
        gbc.writeMem(0x60b4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xbb3e);
        EXPECT(gbc.pc(), 0x60b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 030F
        gbc.setState(0x98d2, 0x907e, 0xa000, 0x3063, 0x930f, 0x6199, 0x0, 0x0);
        gbc.writeMem(0x98d2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x907e);
        EXPECT(gbc.pc(), 0x98d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d2), 0x4a);
        // 4A 0310
        gbc.setState(0x5575, 0x6698, 0x81f0, 0x8b23, 0xef46, 0x886f, 0x0, 0x0);
        gbc.writeMem(0x5575, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6698);
        EXPECT(gbc.pc(), 0x5576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0311
        gbc.setState(0xb64a, 0x3c01, 0xdf50, 0xecf5, 0x8956, 0x52ba, 0x0, 0x0);
        gbc.writeMem(0xb64a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3c01);
        EXPECT(gbc.pc(), 0xb64b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb64a), 0x4a);
        // 4A 0312
        gbc.setState(0x914c, 0xccfd, 0xba50, 0xc48a, 0xb115, 0x650, 0x0, 0x0);
        gbc.writeMem(0x914c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xccfd);
        EXPECT(gbc.pc(), 0x914d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x914c), 0x4a);
        // 4A 0313
        gbc.setState(0xc5c, 0x93e0, 0xec10, 0x9479, 0x3559, 0xcefa, 0x0, 0x0);
        gbc.writeMem(0xc5c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x93e0);
        EXPECT(gbc.pc(), 0xc5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0314
        gbc.setState(0x7e0c, 0x6d29, 0x5730, 0xc37, 0x16b2, 0x61e4, 0x0, 0x0);
        gbc.writeMem(0x7e0c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6d29);
        EXPECT(gbc.pc(), 0x7e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0315
        gbc.setState(0x8728, 0xf2e6, 0x2620, 0x2723, 0xe8d2, 0x8166, 0x1, 0x0);
        gbc.writeMem(0x8728, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf2e6);
        EXPECT(gbc.pc(), 0x8729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8728), 0x4a);
        // 4A 0316
        gbc.setState(0x928a, 0x92ba, 0x9370, 0xcd79, 0xe08e, 0xc428, 0x1, 0x0);
        gbc.writeMem(0x928a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x92ba);
        EXPECT(gbc.pc(), 0x928b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x928a), 0x4a);
        // 4A 0319
        gbc.setState(0x6ced, 0x2754, 0xf160, 0xdd8a, 0x425e, 0xe5e0, 0x1, 0x1);
        gbc.writeMem(0x6ced, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2754);
        EXPECT(gbc.pc(), 0x6cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 031A
        gbc.setState(0x2827, 0xa51a, 0x5fa0, 0x7dc8, 0x6916, 0x8e49, 0x0, 0x1);
        gbc.writeMem(0x2827, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa51a);
        EXPECT(gbc.pc(), 0x2828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 031B
        gbc.setState(0xd2c5, 0xf63f, 0xa330, 0x937, 0x9e89, 0x3523, 0x1, 0x0);
        gbc.writeMem(0xd2c5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf63f);
        EXPECT(gbc.pc(), 0xd2c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c5), 0x4a);
        // 4A 031D
        gbc.setState(0xbdd9, 0x1b8c, 0x9690, 0x2056, 0xf9eb, 0x5975, 0x1, 0x0);
        gbc.writeMem(0xbdd9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1b8c);
        EXPECT(gbc.pc(), 0xbdda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd9), 0x4a);
        // 4A 031E
        gbc.setState(0x6f71, 0x1586, 0xd530, 0x5750, 0x9a7e, 0x3fa6, 0x1, 0x0);
        gbc.writeMem(0x6f71, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1586);
        EXPECT(gbc.pc(), 0x6f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0320
        gbc.setState(0x8348, 0xbc45, 0xbad0, 0x448c, 0x911d, 0x2e30, 0x1, 0x0);
        gbc.writeMem(0x8348, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xbc45);
        EXPECT(gbc.pc(), 0x8349);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8348), 0x4a);
        // 4A 0321
        gbc.setState(0xcece, 0x9865, 0xe2a0, 0xe136, 0xafa5, 0x9d8d, 0x0, 0x1);
        gbc.writeMem(0xcece, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9865);
        EXPECT(gbc.pc(), 0xcecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcece), 0x4a);
        // 4A 0322
        gbc.setState(0x75bd, 0xe439, 0x58b0, 0x990b, 0xda90, 0xa70c, 0x1, 0x1);
        gbc.writeMem(0x75bd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe439);
        EXPECT(gbc.pc(), 0x75be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0323
        gbc.setState(0xb015, 0xda1a, 0x31e0, 0x349e, 0x56d9, 0x5a56, 0x1, 0x1);
        gbc.writeMem(0xb015, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xda1a);
        EXPECT(gbc.pc(), 0xb016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb015), 0x4a);
        // 4A 0325
        gbc.setState(0xcdb3, 0xd68, 0x85f0, 0x40db, 0x2b1, 0x557a, 0x0, 0x1);
        gbc.writeMem(0xcdb3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd68);
        EXPECT(gbc.pc(), 0xcdb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb3), 0x4a);
        // 4A 0326
        gbc.setState(0xd275, 0x998f, 0x87d0, 0x4cbe, 0x5c01, 0xd89e, 0x1, 0x1);
        gbc.writeMem(0xd275, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x998f);
        EXPECT(gbc.pc(), 0xd276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd275), 0x4a);
        // 4A 0327
        gbc.setState(0x616a, 0x9fe5, 0x3f40, 0x7b01, 0x9588, 0x1455, 0x1, 0x0);
        gbc.writeMem(0x616a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9fe5);
        EXPECT(gbc.pc(), 0x616b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0328
        gbc.setState(0x3e39, 0x23a2, 0xfc60, 0x815c, 0xd9db, 0x1396, 0x0, 0x0);
        gbc.writeMem(0x3e39, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x23a2);
        EXPECT(gbc.pc(), 0x3e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0329
        gbc.setState(0x8ad6, 0x328f, 0xfcf0, 0xa0c, 0xb889, 0x5fdc, 0x0, 0x0);
        gbc.writeMem(0x8ad6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x328f);
        EXPECT(gbc.pc(), 0x8ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad6), 0x4a);
        // 4A 032A
        gbc.setState(0xa83b, 0x3f7d, 0x5dd0, 0xaed6, 0xbaf0, 0xc601, 0x1, 0x0);
        gbc.writeMem(0xa83b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3f7d);
        EXPECT(gbc.pc(), 0xa83c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa83b), 0x4a);
        // 4A 032B
        gbc.setState(0xcad7, 0x567a, 0x2590, 0xa5e, 0x9659, 0xd2b7, 0x0, 0x0);
        gbc.writeMem(0xcad7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x567a);
        EXPECT(gbc.pc(), 0xcad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad7), 0x4a);
        // 4A 032C
        gbc.setState(0xb515, 0x2e38, 0xf8a0, 0xbfa6, 0xf7fa, 0xe58e, 0x1, 0x0);
        gbc.writeMem(0xb515, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2e38);
        EXPECT(gbc.pc(), 0xb516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb515), 0x4a);
        // 4A 032D
        gbc.setState(0x9c3c, 0x5525, 0x8a90, 0xe6dd, 0x8d27, 0x335d, 0x1, 0x1);
        gbc.writeMem(0x9c3c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5525);
        EXPECT(gbc.pc(), 0x9c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c3c), 0x4a);
        // 4A 032E
        gbc.setState(0xeb15, 0x366b, 0xaf10, 0x85a0, 0x118f, 0xd8d5, 0x1, 0x0);
        gbc.writeMem(0xeb15, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x366b);
        EXPECT(gbc.pc(), 0xeb16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb15), 0x4a);
        // 4A 032F
        gbc.setState(0x842e, 0x2968, 0xdec0, 0x9d95, 0xc385, 0xfc44, 0x1, 0x0);
        gbc.writeMem(0x842e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2968);
        EXPECT(gbc.pc(), 0x842f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x842e), 0x4a);
        // 4A 0330
        gbc.setState(0x3ace, 0x1f34, 0xb190, 0x8b2c, 0xdb9e, 0x3af8, 0x0, 0x1);
        gbc.writeMem(0x3ace, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1f34);
        EXPECT(gbc.pc(), 0x3acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0331
        gbc.setState(0x717d, 0xa6e2, 0x7310, 0xb8f4, 0x2991, 0x20ff, 0x1, 0x1);
        gbc.writeMem(0x717d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa6e2);
        EXPECT(gbc.pc(), 0x717e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0332
        gbc.setState(0x705c, 0xe592, 0x9af0, 0x9c11, 0x2f01, 0xa586, 0x0, 0x0);
        gbc.writeMem(0x705c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe592);
        EXPECT(gbc.pc(), 0x705d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0333
        gbc.setState(0x7bbc, 0x87b, 0xed0, 0x2e1a, 0x957d, 0xa74d, 0x1, 0x0);
        gbc.writeMem(0x7bbc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x87b);
        EXPECT(gbc.pc(), 0x7bbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0334
        gbc.setState(0x90ea, 0xb7d3, 0xd850, 0x9e01, 0x2cf, 0xd3d2, 0x0, 0x1);
        gbc.writeMem(0x90ea, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb7d3);
        EXPECT(gbc.pc(), 0x90eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ea), 0x4a);
        // 4A 0335
        gbc.setState(0x3732, 0x8159, 0x3340, 0xce53, 0x2726, 0x4229, 0x1, 0x0);
        gbc.writeMem(0x3732, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8159);
        EXPECT(gbc.pc(), 0x3733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0336
        gbc.setState(0x9805, 0x8e7a, 0xe630, 0x4a9b, 0x9e5f, 0x6a8c, 0x1, 0x1);
        gbc.writeMem(0x9805, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8e7a);
        EXPECT(gbc.pc(), 0x9806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9805), 0x4a);
        // 4A 0337
        gbc.setState(0x3575, 0xb7f1, 0x650, 0x947e, 0xb103, 0x4a6f, 0x1, 0x0);
        gbc.writeMem(0x3575, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb7f1);
        EXPECT(gbc.pc(), 0x3576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0338
        gbc.setState(0xb856, 0x76ae, 0x95a0, 0xaf04, 0xcae0, 0x85a8, 0x0, 0x0);
        gbc.writeMem(0xb856, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x76ae);
        EXPECT(gbc.pc(), 0xb857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb856), 0x4a);
        // 4A 0339
        gbc.setState(0x5de1, 0x1b54, 0x9f20, 0x83e3, 0x51bd, 0x3b19, 0x0, 0x1);
        gbc.writeMem(0x5de1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1b54);
        EXPECT(gbc.pc(), 0x5de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 033A
        gbc.setState(0x7ef8, 0x533d, 0x47b0, 0x1346, 0x3d36, 0x9e41, 0x1, 0x0);
        gbc.writeMem(0x7ef8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x533d);
        EXPECT(gbc.pc(), 0x7ef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 033B
        gbc.setState(0xc9e7, 0x5f4c, 0x8850, 0x4dae, 0x8ce4, 0x5ac9, 0x1, 0x0);
        gbc.writeMem(0xc9e7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5f4c);
        EXPECT(gbc.pc(), 0xc9e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e7), 0x4a);
        // 4A 033C
        gbc.setState(0x9a5c, 0x17f9, 0x310, 0x9df7, 0x2c68, 0x46ab, 0x0, 0x0);
        gbc.writeMem(0x9a5c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x17f9);
        EXPECT(gbc.pc(), 0x9a5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a5c), 0x4a);
        // 4A 033D
        gbc.setState(0x8ae8, 0x1e0e, 0x9210, 0x3b6a, 0x59ff, 0xfb63, 0x1, 0x0);
        gbc.writeMem(0x8ae8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1e0e);
        EXPECT(gbc.pc(), 0x8ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae8), 0x4a);
        // 4A 033E
        gbc.setState(0xc549, 0x35bc, 0xcb00, 0xc78c, 0x244f, 0xe41c, 0x0, 0x1);
        gbc.writeMem(0xc549, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x35bc);
        EXPECT(gbc.pc(), 0xc54a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc549), 0x4a);
        // 4A 033F
        gbc.setState(0xd54b, 0xcda1, 0x3740, 0xaf87, 0xd2df, 0x251b, 0x1, 0x1);
        gbc.writeMem(0xd54b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xcda1);
        EXPECT(gbc.pc(), 0xd54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd54b), 0x4a);
        // 4A 0340
        gbc.setState(0xe137, 0x3fdc, 0x9910, 0x6288, 0x61e6, 0xb043, 0x0, 0x0);
        gbc.writeMem(0xe137, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3fdc);
        EXPECT(gbc.pc(), 0xe138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe137), 0x4a);
        // 4A 0341
        gbc.setState(0xd1a7, 0xed74, 0xda10, 0x601a, 0x8aa3, 0xf4f1, 0x0, 0x0);
        gbc.writeMem(0xd1a7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xed74);
        EXPECT(gbc.pc(), 0xd1a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a7), 0x4a);
        // 4A 0342
        gbc.setState(0xa26, 0x7840, 0xb9d0, 0x81d8, 0xca8f, 0xc9c6, 0x0, 0x0);
        gbc.writeMem(0xa26, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7840);
        EXPECT(gbc.pc(), 0xa27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0343
        gbc.setState(0xbee5, 0xa57e, 0x8570, 0x67fd, 0x6983, 0xda7a, 0x0, 0x1);
        gbc.writeMem(0xbee5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa57e);
        EXPECT(gbc.pc(), 0xbee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee5), 0x4a);
        // 4A 0344
        gbc.setState(0x536f, 0x98a1, 0x270, 0x33ed, 0xd094, 0x2c52, 0x0, 0x1);
        gbc.writeMem(0x536f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x98a1);
        EXPECT(gbc.pc(), 0x5370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0345
        gbc.setState(0x51ec, 0x6672, 0xe030, 0xc184, 0x2a71, 0xd33b, 0x0, 0x1);
        gbc.writeMem(0x51ec, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6672);
        EXPECT(gbc.pc(), 0x51ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0346
        gbc.setState(0x9d53, 0x3794, 0xc560, 0xcc58, 0x341e, 0xff05, 0x0, 0x0);
        gbc.writeMem(0x9d53, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3794);
        EXPECT(gbc.pc(), 0x9d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d53), 0x4a);
        // 4A 0347
        gbc.setState(0x343a, 0xaf0c, 0x12c0, 0xb1c0, 0xdf13, 0x33d6, 0x1, 0x1);
        gbc.writeMem(0x343a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xaf0c);
        EXPECT(gbc.pc(), 0x343b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0348
        gbc.setState(0xd14c, 0xe8e9, 0xa960, 0xf162, 0x4f7e, 0xed09, 0x0, 0x1);
        gbc.writeMem(0xd14c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe8e9);
        EXPECT(gbc.pc(), 0xd14d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd14c), 0x4a);
        // 4A 0349
        gbc.setState(0xe2c9, 0x271f, 0xa180, 0x2519, 0x4a05, 0xa669, 0x0, 0x0);
        gbc.writeMem(0xe2c9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x271f);
        EXPECT(gbc.pc(), 0xe2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c9), 0x4a);
        // 4A 034A
        gbc.setState(0x6efa, 0xd281, 0xbfa0, 0x2b37, 0x237f, 0x61c7, 0x0, 0x0);
        gbc.writeMem(0x6efa, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd281);
        EXPECT(gbc.pc(), 0x6efb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 034B
        gbc.setState(0x5472, 0xa7a9, 0x10c0, 0x9d98, 0xfef7, 0x61a4, 0x1, 0x0);
        gbc.writeMem(0x5472, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa7a9);
        EXPECT(gbc.pc(), 0x5473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 034C
        gbc.setState(0x209, 0x51a0, 0x9950, 0x9ebb, 0xea3e, 0x74df, 0x1, 0x1);
        gbc.writeMem(0x209, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x51a0);
        EXPECT(gbc.pc(), 0x20a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 034D
        gbc.setState(0x96c8, 0xe54f, 0x6c70, 0x8654, 0x4ea4, 0x5e3, 0x0, 0x1);
        gbc.writeMem(0x96c8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe54f);
        EXPECT(gbc.pc(), 0x96c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c8), 0x4a);
        // 4A 034F
        gbc.setState(0x53f7, 0xdb7b, 0x6990, 0x5fdd, 0x8ba8, 0x6e95, 0x0, 0x0);
        gbc.writeMem(0x53f7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xdb7b);
        EXPECT(gbc.pc(), 0x53f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0350
        gbc.setState(0xa645, 0x1599, 0xb5c0, 0x2178, 0x25c7, 0xad86, 0x0, 0x1);
        gbc.writeMem(0xa645, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1599);
        EXPECT(gbc.pc(), 0xa646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa645), 0x4a);
        // 4A 0351
        gbc.setState(0x3348, 0x7eda, 0xb830, 0x8ad, 0xea10, 0x9306, 0x1, 0x0);
        gbc.writeMem(0x3348, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7eda);
        EXPECT(gbc.pc(), 0x3349);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0352
        gbc.setState(0x6d1e, 0x5ba2, 0x2f80, 0x23a2, 0x4e26, 0xbfd9, 0x0, 0x1);
        gbc.writeMem(0x6d1e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5ba2);
        EXPECT(gbc.pc(), 0x6d1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0353
        gbc.setState(0x3700, 0x903e, 0x8f10, 0x71b, 0x1efa, 0x6536, 0x1, 0x0);
        gbc.writeMem(0x3700, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x903e);
        EXPECT(gbc.pc(), 0x3701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0354
        gbc.setState(0x16c6, 0xfa81, 0x6a40, 0x5d0d, 0xaeda, 0xe89d, 0x0, 0x1);
        gbc.writeMem(0x16c6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfa81);
        EXPECT(gbc.pc(), 0x16c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0355
        gbc.setState(0x78aa, 0x8501, 0x78d0, 0x96c9, 0x944c, 0x47e0, 0x0, 0x1);
        gbc.writeMem(0x78aa, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8501);
        EXPECT(gbc.pc(), 0x78ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0356
        gbc.setState(0x1180, 0x4627, 0xf750, 0xfbac, 0xee21, 0x5abf, 0x0, 0x1);
        gbc.writeMem(0x1180, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4627);
        EXPECT(gbc.pc(), 0x1181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0357
        gbc.setState(0x10dc, 0x67dc, 0x510, 0xf20b, 0xc56, 0xe03c, 0x1, 0x1);
        gbc.writeMem(0x10dc, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x67dc);
        EXPECT(gbc.pc(), 0x10dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0358
        gbc.setState(0x4de8, 0xce83, 0xb7e0, 0x2c73, 0xa285, 0xe54e, 0x0, 0x1);
        gbc.writeMem(0x4de8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xce83);
        EXPECT(gbc.pc(), 0x4de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0359
        gbc.setState(0x406c, 0xc9c4, 0x2ce0, 0x9126, 0x6f86, 0xac88, 0x0, 0x0);
        gbc.writeMem(0x406c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc9c4);
        EXPECT(gbc.pc(), 0x406d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 035A
        gbc.setState(0xc1e4, 0x5d1f, 0xe620, 0xca20, 0xd8dd, 0x2a24, 0x0, 0x1);
        gbc.writeMem(0xc1e4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5d1f);
        EXPECT(gbc.pc(), 0xc1e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e4), 0x4a);
        // 4A 035B
        gbc.setState(0xe49d, 0x310e, 0xa470, 0xc42c, 0xc64d, 0x10e4, 0x1, 0x1);
        gbc.writeMem(0xe49d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x310e);
        EXPECT(gbc.pc(), 0xe49e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe49d), 0x4a);
        // 4A 035C
        gbc.setState(0x9038, 0x88f1, 0x7e30, 0x69dd, 0xe66d, 0x14ef, 0x1, 0x1);
        gbc.writeMem(0x9038, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x88f1);
        EXPECT(gbc.pc(), 0x9039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9038), 0x4a);
        // 4A 035D
        gbc.setState(0x5dfe, 0x1b7e, 0x2b40, 0x3ef5, 0xd1a0, 0xf13d, 0x0, 0x1);
        gbc.writeMem(0x5dfe, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1b7e);
        EXPECT(gbc.pc(), 0x5dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 035E
        gbc.setState(0x565d, 0xc58d, 0xcf80, 0xe2a5, 0x30fb, 0x258, 0x1, 0x1);
        gbc.writeMem(0x565d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc58d);
        EXPECT(gbc.pc(), 0x565e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 035F
        gbc.setState(0xd151, 0xb170, 0x6c0, 0x81d3, 0xcaa3, 0x912e, 0x1, 0x0);
        gbc.writeMem(0xd151, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb170);
        EXPECT(gbc.pc(), 0xd152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd151), 0x4a);
        // 4A 0360
        gbc.setState(0x3e21, 0x5add, 0xe470, 0xb945, 0xb13, 0x3ef1, 0x1, 0x1);
        gbc.writeMem(0x3e21, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5add);
        EXPECT(gbc.pc(), 0x3e22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0361
        gbc.setState(0xdd3d, 0xbd2a, 0x2570, 0xd283, 0xe9cf, 0xa774, 0x1, 0x0);
        gbc.writeMem(0xdd3d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbd2a);
        EXPECT(gbc.pc(), 0xdd3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3d), 0x4a);
        // 4A 0362
        gbc.setState(0x1594, 0xee05, 0xbf90, 0x62cc, 0x4484, 0x98d1, 0x1, 0x1);
        gbc.writeMem(0x1594, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xee05);
        EXPECT(gbc.pc(), 0x1595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0363
        gbc.setState(0x8b42, 0x1d2d, 0xe760, 0x50b9, 0x4d1c, 0x39d1, 0x0, 0x1);
        gbc.writeMem(0x8b42, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1d2d);
        EXPECT(gbc.pc(), 0x8b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b42), 0x4a);
        // 4A 0364
        gbc.setState(0x9792, 0x2318, 0x6970, 0x341f, 0xe8d7, 0x2a9d, 0x1, 0x1);
        gbc.writeMem(0x9792, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2318);
        EXPECT(gbc.pc(), 0x9793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9792), 0x4a);
        // 4A 0365
        gbc.setState(0x3c69, 0xcf8b, 0xbe0, 0x52c7, 0x2abb, 0x1c80, 0x0, 0x0);
        gbc.writeMem(0x3c69, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcf8b);
        EXPECT(gbc.pc(), 0x3c6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0366
        gbc.setState(0xcea3, 0x96c2, 0xcfd0, 0x497f, 0xb726, 0xcdc4, 0x1, 0x0);
        gbc.writeMem(0xcea3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x96c2);
        EXPECT(gbc.pc(), 0xcea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea3), 0x4a);
        // 4A 0367
        gbc.setState(0x3a5e, 0x1a46, 0x2a20, 0x4875, 0xbfef, 0xbe5d, 0x1, 0x1);
        gbc.writeMem(0x3a5e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1a46);
        EXPECT(gbc.pc(), 0x3a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0368
        gbc.setState(0x5a24, 0xcbc7, 0x8f80, 0xe45c, 0x8304, 0x220b, 0x1, 0x0);
        gbc.writeMem(0x5a24, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcbc7);
        EXPECT(gbc.pc(), 0x5a25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0369
        gbc.setState(0xe8b8, 0x1a93, 0x6800, 0x5195, 0x19fe, 0xa565, 0x0, 0x0);
        gbc.writeMem(0xe8b8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1a93);
        EXPECT(gbc.pc(), 0xe8b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b8), 0x4a);
        // 4A 036A
        gbc.setState(0xc9b4, 0xcb59, 0x13d0, 0x55f, 0x7e13, 0xc7a3, 0x1, 0x1);
        gbc.writeMem(0xc9b4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcb59);
        EXPECT(gbc.pc(), 0xc9b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b4), 0x4a);
        // 4A 036C
        gbc.setState(0x6094, 0x2e47, 0xe040, 0x1969, 0x9045, 0x4ba8, 0x1, 0x1);
        gbc.writeMem(0x6094, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2e47);
        EXPECT(gbc.pc(), 0x6095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 036D
        gbc.setState(0x43c4, 0x4b4d, 0x4210, 0x700a, 0xafc3, 0xeb81, 0x0, 0x1);
        gbc.writeMem(0x43c4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4b4d);
        EXPECT(gbc.pc(), 0x43c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 036E
        gbc.setState(0xe5ef, 0x399a, 0x82d0, 0x1752, 0xc1c5, 0x44fe, 0x0, 0x1);
        gbc.writeMem(0xe5ef, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x399a);
        EXPECT(gbc.pc(), 0xe5f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ef), 0x4a);
        // 4A 036F
        gbc.setState(0xbc92, 0x6c7b, 0x12f0, 0x736a, 0xb18, 0x8035, 0x1, 0x0);
        gbc.writeMem(0xbc92, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6c7b);
        EXPECT(gbc.pc(), 0xbc93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc92), 0x4a);
        // 4A 0370
        gbc.setState(0x748f, 0xc8f1, 0x5fe0, 0xd2f4, 0xae9a, 0xf396, 0x1, 0x1);
        gbc.writeMem(0x748f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc8f1);
        EXPECT(gbc.pc(), 0x7490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0371
        gbc.setState(0xc0da, 0xae97, 0x6ab0, 0x1075, 0x789e, 0x720c, 0x1, 0x0);
        gbc.writeMem(0xc0da, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xae97);
        EXPECT(gbc.pc(), 0xc0db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0da), 0x4a);
        // 4A 0372
        gbc.setState(0x60b9, 0x9808, 0xcd90, 0x5696, 0x53f1, 0xe3a0, 0x1, 0x1);
        gbc.writeMem(0x60b9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9808);
        EXPECT(gbc.pc(), 0x60ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0374
        gbc.setState(0xdd8e, 0x9496, 0x3f0, 0xdce9, 0xe39c, 0x1af6, 0x1, 0x0);
        gbc.writeMem(0xdd8e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9496);
        EXPECT(gbc.pc(), 0xdd8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd8e), 0x4a);
        // 4A 0375
        gbc.setState(0x831c, 0x1e26, 0x3a00, 0xdbb2, 0x529b, 0x6851, 0x1, 0x0);
        gbc.writeMem(0x831c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1e26);
        EXPECT(gbc.pc(), 0x831d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x831c), 0x4a);
        // 4A 0376
        gbc.setState(0xd613, 0x39df, 0x8c10, 0xf1b5, 0xec0c, 0xf2a6, 0x0, 0x0);
        gbc.writeMem(0xd613, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x39df);
        EXPECT(gbc.pc(), 0xd614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd613), 0x4a);
        // 4A 0377
        gbc.setState(0x8b6d, 0xbe99, 0xeab0, 0x2007, 0xd453, 0x7ec7, 0x0, 0x0);
        gbc.writeMem(0x8b6d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbe99);
        EXPECT(gbc.pc(), 0x8b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6d), 0x4a);
        // 4A 0378
        gbc.setState(0x6ed1, 0x21fa, 0x47f0, 0xb5b0, 0x7eba, 0x529a, 0x1, 0x1);
        gbc.writeMem(0x6ed1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x21fa);
        EXPECT(gbc.pc(), 0x6ed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0379
        gbc.setState(0x2014, 0x75d2, 0xa120, 0x621e, 0x7779, 0x1ae2, 0x0, 0x1);
        gbc.writeMem(0x2014, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x75d2);
        EXPECT(gbc.pc(), 0x2015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 037A
        gbc.setState(0x5212, 0xba77, 0x3ee0, 0x8a65, 0x8d78, 0xaf20, 0x1, 0x0);
        gbc.writeMem(0x5212, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xba77);
        EXPECT(gbc.pc(), 0x5213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 037C
        gbc.setState(0x2fa3, 0xec93, 0xb600, 0x51df, 0x7ae2, 0xb9da, 0x1, 0x1);
        gbc.writeMem(0x2fa3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xec93);
        EXPECT(gbc.pc(), 0x2fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 037D
        gbc.setState(0xf9e, 0x940e, 0xed90, 0x32bd, 0x5736, 0xa1a5, 0x0, 0x1);
        gbc.writeMem(0xf9e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x940e);
        EXPECT(gbc.pc(), 0xf9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 037E
        gbc.setState(0x4121, 0x6d59, 0xb130, 0xc9ba, 0xc729, 0x1340, 0x0, 0x0);
        gbc.writeMem(0x4121, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6d59);
        EXPECT(gbc.pc(), 0x4122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 037F
        gbc.setState(0x419f, 0x8cfd, 0xe5e0, 0x58c9, 0x48c3, 0x8d83, 0x1, 0x0);
        gbc.writeMem(0x419f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8cfd);
        EXPECT(gbc.pc(), 0x41a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0380
        gbc.setState(0xb897, 0x7217, 0xd50, 0x9d63, 0x5bc5, 0x3646, 0x0, 0x1);
        gbc.writeMem(0xb897, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7217);
        EXPECT(gbc.pc(), 0xb898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb897), 0x4a);
        // 4A 0381
        gbc.setState(0x714c, 0x3101, 0xa150, 0x1a30, 0x5941, 0xc4c, 0x0, 0x1);
        gbc.writeMem(0x714c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3101);
        EXPECT(gbc.pc(), 0x714d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0382
        gbc.setState(0xace6, 0xd590, 0x3310, 0xe07a, 0x6013, 0xde0, 0x0, 0x1);
        gbc.writeMem(0xace6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd590);
        EXPECT(gbc.pc(), 0xace7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace6), 0x4a);
        // 4A 0383
        gbc.setState(0x4241, 0xc9de, 0x6590, 0x510f, 0xc99, 0x8cf7, 0x1, 0x0);
        gbc.writeMem(0x4241, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc9de);
        EXPECT(gbc.pc(), 0x4242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0384
        gbc.setState(0x5ee0, 0xa824, 0xfa80, 0x3959, 0x8bd0, 0x8c7e, 0x1, 0x1);
        gbc.writeMem(0x5ee0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa824);
        EXPECT(gbc.pc(), 0x5ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0385
        gbc.setState(0x4509, 0xddf3, 0x6280, 0x4b8e, 0xea09, 0xfa51, 0x1, 0x1);
        gbc.writeMem(0x4509, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xddf3);
        EXPECT(gbc.pc(), 0x450a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0386
        gbc.setState(0x67ce, 0x487f, 0x8360, 0x57c5, 0x9bf0, 0x93c2, 0x1, 0x0);
        gbc.writeMem(0x67ce, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x487f);
        EXPECT(gbc.pc(), 0x67cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0387
        gbc.setState(0xa58b, 0x34, 0x6280, 0x8261, 0x68aa, 0xdb2a, 0x1, 0x0);
        gbc.writeMem(0xa58b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x34);
        EXPECT(gbc.pc(), 0xa58c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa58b), 0x4a);
        // 4A 0388
        gbc.setState(0xeb6, 0x3698, 0x3fd0, 0x44a5, 0x82ce, 0x7d24, 0x1, 0x0);
        gbc.writeMem(0xeb6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3698);
        EXPECT(gbc.pc(), 0xeb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0389
        gbc.setState(0xa122, 0x852, 0xcf10, 0xdef4, 0x31d, 0xb7f8, 0x1, 0x1);
        gbc.writeMem(0xa122, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x852);
        EXPECT(gbc.pc(), 0xa123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa122), 0x4a);
        // 4A 038A
        gbc.setState(0x10c, 0x7fb0, 0xe3a0, 0x4ad0, 0x4269, 0x69f, 0x1, 0x0);
        gbc.writeMem(0x10c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7fb0);
        EXPECT(gbc.pc(), 0x10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 038B
        gbc.setState(0x7169, 0x3133, 0xc420, 0xc5b6, 0x4cad, 0x38b9, 0x0, 0x1);
        gbc.writeMem(0x7169, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3133);
        EXPECT(gbc.pc(), 0x716a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 038C
        gbc.setState(0x39c1, 0x1053, 0xbaf0, 0xb250, 0x27a3, 0xe98a, 0x1, 0x1);
        gbc.writeMem(0x39c1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1053);
        EXPECT(gbc.pc(), 0x39c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 038D
        gbc.setState(0x120e, 0xbde2, 0x3180, 0xea82, 0x708a, 0x14d1, 0x1, 0x1);
        gbc.writeMem(0x120e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbde2);
        EXPECT(gbc.pc(), 0x120f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 038E
        gbc.setState(0x53ae, 0x4c0c, 0xecc0, 0x1314, 0xfad1, 0xabc2, 0x0, 0x1);
        gbc.writeMem(0x53ae, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4c0c);
        EXPECT(gbc.pc(), 0x53af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 038F
        gbc.setState(0x3aa7, 0x6bd5, 0x2110, 0x994f, 0x7615, 0xc32e, 0x0, 0x0);
        gbc.writeMem(0x3aa7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6bd5);
        EXPECT(gbc.pc(), 0x3aa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0390
        gbc.setState(0xc1f6, 0x883, 0xe8d0, 0x58d3, 0xe39d, 0x507, 0x1, 0x1);
        gbc.writeMem(0xc1f6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x883);
        EXPECT(gbc.pc(), 0xc1f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f6), 0x4a);
        // 4A 0391
        gbc.setState(0x67ff, 0xafed, 0x89e0, 0xfe1f, 0xeee1, 0xc248, 0x1, 0x0);
        gbc.writeMem(0x67ff, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xafed);
        EXPECT(gbc.pc(), 0x6800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0393
        gbc.setState(0x2d2c, 0x5889, 0xaa70, 0x4e18, 0xc543, 0xae76, 0x0, 0x0);
        gbc.writeMem(0x2d2c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5889);
        EXPECT(gbc.pc(), 0x2d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0394
        gbc.setState(0x51c, 0x3d13, 0xa0, 0x145a, 0xafad, 0xcaef, 0x0, 0x1);
        gbc.writeMem(0x51c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3d13);
        EXPECT(gbc.pc(), 0x51d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 0395
        gbc.setState(0xc08d, 0xb67a, 0x2350, 0x329f, 0x9cea, 0x2d7f, 0x0, 0x1);
        gbc.writeMem(0xc08d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb67a);
        EXPECT(gbc.pc(), 0xc08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc08d), 0x4a);
        // 4A 0396
        gbc.setState(0xcd2, 0xd10c, 0x6840, 0xbe0f, 0xa999, 0x9061, 0x1, 0x1);
        gbc.writeMem(0xcd2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd10c);
        EXPECT(gbc.pc(), 0xcd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 0397
        gbc.setState(0x325d, 0xc14c, 0x770, 0x7c5e, 0xe11b, 0xb982, 0x1, 0x1);
        gbc.writeMem(0x325d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc14c);
        EXPECT(gbc.pc(), 0x325e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 0398
        gbc.setState(0x5344, 0x2de0, 0x9050, 0x41be, 0xe4f9, 0xb7f8, 0x1, 0x1);
        gbc.writeMem(0x5344, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2de0);
        EXPECT(gbc.pc(), 0x5345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 0399
        gbc.setState(0x5395, 0xa681, 0x9e70, 0x280e, 0xa8e0, 0x3b2b, 0x0, 0x1);
        gbc.writeMem(0x5395, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa681);
        EXPECT(gbc.pc(), 0x5396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 039A
        gbc.setState(0xb621, 0x3e50, 0x8a40, 0x6f6f, 0xa2ba, 0x26cd, 0x0, 0x1);
        gbc.writeMem(0xb621, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3e50);
        EXPECT(gbc.pc(), 0xb622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb621), 0x4a);
        // 4A 039B
        gbc.setState(0x91d6, 0x1ea7, 0x3ab0, 0xe074, 0x5453, 0x521e, 0x1, 0x0);
        gbc.writeMem(0x91d6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1ea7);
        EXPECT(gbc.pc(), 0x91d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d6), 0x4a);
        // 4A 039C
        gbc.setState(0xa3d0, 0x895e, 0x8f90, 0xa688, 0xb705, 0xe4e1, 0x1, 0x1);
        gbc.writeMem(0xa3d0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x895e);
        EXPECT(gbc.pc(), 0xa3d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3d0), 0x4a);
        // 4A 039D
        gbc.setState(0x879e, 0xba71, 0x4f50, 0x1d5a, 0x5939, 0x9177, 0x0, 0x1);
        gbc.writeMem(0x879e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xba71);
        EXPECT(gbc.pc(), 0x879f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x879e), 0x4a);
        // 4A 039E
        gbc.setState(0x3e7f, 0x7966, 0xab40, 0xe77b, 0x4bc6, 0x92cb, 0x0, 0x1);
        gbc.writeMem(0x3e7f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7966);
        EXPECT(gbc.pc(), 0x3e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 039F
        gbc.setState(0x7285, 0x1820, 0xf930, 0x219, 0x2118, 0x7983, 0x1, 0x0);
        gbc.writeMem(0x7285, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1820);
        EXPECT(gbc.pc(), 0x7286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 03A0
        gbc.setState(0xccad, 0xcd48, 0x2b10, 0x7bed, 0x603, 0x26f1, 0x0, 0x1);
        gbc.writeMem(0xccad, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcd48);
        EXPECT(gbc.pc(), 0xccae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccad), 0x4a);
        // 4A 03A1
        gbc.setState(0xaaf5, 0x2d8, 0x44b0, 0x6b00, 0xde11, 0x3488, 0x0, 0x1);
        gbc.writeMem(0xaaf5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2d8);
        EXPECT(gbc.pc(), 0xaaf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf5), 0x4a);
        // 4A 03A2
        gbc.setState(0xaa4b, 0xba91, 0x1f50, 0x6566, 0x2d55, 0x659c, 0x0, 0x1);
        gbc.writeMem(0xaa4b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xba91);
        EXPECT(gbc.pc(), 0xaa4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa4b), 0x4a);
        // 4A 03A3
        gbc.setState(0xe88a, 0x6b17, 0x8210, 0x7f64, 0x7c42, 0x847e, 0x0, 0x1);
        gbc.writeMem(0xe88a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6b17);
        EXPECT(gbc.pc(), 0xe88b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88a), 0x4a);
        // 4A 03A4
        gbc.setState(0x88c2, 0x80d, 0x2a80, 0x98ad, 0x2106, 0x1fdf, 0x0, 0x1);
        gbc.writeMem(0x88c2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x80d);
        EXPECT(gbc.pc(), 0x88c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c2), 0x4a);
        // 4A 03A5
        gbc.setState(0x7c31, 0x4b72, 0x91b0, 0xef66, 0x544b, 0xb203, 0x1, 0x0);
        gbc.writeMem(0x7c31, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4b72);
        EXPECT(gbc.pc(), 0x7c32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 03A6
        gbc.setState(0xa1c9, 0x8ebb, 0x7fc0, 0x4249, 0xac1b, 0x5ebc, 0x1, 0x0);
        gbc.writeMem(0xa1c9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8ebb);
        EXPECT(gbc.pc(), 0xa1ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1c9), 0x4a);
        // 4A 03A7
        gbc.setState(0x6296, 0x4387, 0x3860, 0xec3f, 0xb011, 0xbef5, 0x1, 0x1);
        gbc.writeMem(0x6296, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4387);
        EXPECT(gbc.pc(), 0x6297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 03A8
        gbc.setState(0x4460, 0x5b79, 0x9b00, 0xb5d1, 0x191f, 0xae37, 0x0, 0x0);
        gbc.writeMem(0x4460, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5b79);
        EXPECT(gbc.pc(), 0x4461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 03A9
        gbc.setState(0x17a3, 0xc320, 0xecb0, 0xee7e, 0xa2cf, 0xbb6, 0x1, 0x0);
        gbc.writeMem(0x17a3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc320);
        EXPECT(gbc.pc(), 0x17a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 03AB
        gbc.setState(0x983b, 0x4156, 0x7520, 0x8223, 0xb9f6, 0x75fc, 0x1, 0x1);
        gbc.writeMem(0x983b, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4156);
        EXPECT(gbc.pc(), 0x983c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x983b), 0x4a);
        // 4A 03AC
        gbc.setState(0x7e33, 0xe563, 0x9870, 0x5b21, 0xd2a7, 0x726b, 0x1, 0x1);
        gbc.writeMem(0x7e33, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe563);
        EXPECT(gbc.pc(), 0x7e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 03AD
        gbc.setState(0xd7f8, 0x7f47, 0x46d0, 0x7fa5, 0x3288, 0xc37, 0x0, 0x1);
        gbc.writeMem(0xd7f8, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7f47);
        EXPECT(gbc.pc(), 0xd7f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f8), 0x4a);
        // 4A 03AE
        gbc.setState(0xcdb5, 0x7637, 0x7cd0, 0xeb1f, 0x1f47, 0xa2d3, 0x1, 0x1);
        gbc.writeMem(0xcdb5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7637);
        EXPECT(gbc.pc(), 0xcdb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb5), 0x4a);
        // 4A 03AF
        gbc.setState(0x858a, 0xb393, 0x83e0, 0xaafc, 0xdeda, 0xc1a6, 0x1, 0x1);
        gbc.writeMem(0x858a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb393);
        EXPECT(gbc.pc(), 0x858b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x858a), 0x4a);
        // 4A 03B0
        gbc.setState(0x1938, 0x84ac, 0xdf0, 0xaf52, 0xac94, 0x5521, 0x0, 0x0);
        gbc.writeMem(0x1938, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x84ac);
        EXPECT(gbc.pc(), 0x1939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 03B1
        gbc.setState(0xeecf, 0x32c, 0x4d90, 0x2ae2, 0xe6ac, 0x1a00, 0x1, 0x1);
        gbc.writeMem(0xeecf, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x32c);
        EXPECT(gbc.pc(), 0xeed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeecf), 0x4a);
        // 4A 03B2
        gbc.setState(0x492a, 0x63fc, 0x7570, 0x3000, 0xd9bb, 0x25c, 0x0, 0x1);
        gbc.writeMem(0x492a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x63fc);
        EXPECT(gbc.pc(), 0x492b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 03B3
        gbc.setState(0x1ced, 0x2941, 0xcd60, 0x25d0, 0xe691, 0x53aa, 0x0, 0x1);
        gbc.writeMem(0x1ced, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2941);
        EXPECT(gbc.pc(), 0x1cee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 03B4
        gbc.setState(0xc78c, 0x585d, 0x21a0, 0x9362, 0xa19e, 0x6368, 0x1, 0x1);
        gbc.writeMem(0xc78c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x585d);
        EXPECT(gbc.pc(), 0xc78d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78c), 0x4a);
        // 4A 03B5
        gbc.setState(0xbd95, 0xf14f, 0x32c0, 0x9228, 0x26a9, 0x5013, 0x0, 0x1);
        gbc.writeMem(0xbd95, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf14f);
        EXPECT(gbc.pc(), 0xbd96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd95), 0x4a);
        // 4A 03B6
        gbc.setState(0x36b1, 0x5965, 0x8ba0, 0xc041, 0xe0d2, 0x5fda, 0x0, 0x0);
        gbc.writeMem(0x36b1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5965);
        EXPECT(gbc.pc(), 0x36b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 03B7
        gbc.setState(0x3721, 0xbf4f, 0x41f0, 0xc65, 0x65df, 0xed79, 0x1, 0x1);
        gbc.writeMem(0x3721, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbf4f);
        EXPECT(gbc.pc(), 0x3722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 03B8
        gbc.setState(0x7a6e, 0x4d7b, 0x5a70, 0x6a26, 0x86eb, 0x2bfb, 0x1, 0x0);
        gbc.writeMem(0x7a6e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4d7b);
        EXPECT(gbc.pc(), 0x7a6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 03B9
        gbc.setState(0x6a65, 0xaf7a, 0x5750, 0x80fc, 0xe0c6, 0xad48, 0x1, 0x1);
        gbc.writeMem(0x6a65, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xaf7a);
        EXPECT(gbc.pc(), 0x6a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 03BA
        gbc.setState(0x8be3, 0xd19b, 0xcfd0, 0xc84c, 0x8ad4, 0x649b, 0x0, 0x1);
        gbc.writeMem(0x8be3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd19b);
        EXPECT(gbc.pc(), 0x8be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be3), 0x4a);
        // 4A 03BB
        gbc.setState(0x5716, 0xb70e, 0x60c0, 0xf269, 0xc15c, 0xbbe3, 0x0, 0x1);
        gbc.writeMem(0x5716, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb70e);
        EXPECT(gbc.pc(), 0x5717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 03BC
        gbc.setState(0x4dd3, 0x5f02, 0x8fe0, 0x8de6, 0xd653, 0x298c, 0x0, 0x0);
        gbc.writeMem(0x4dd3, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5f02);
        EXPECT(gbc.pc(), 0x4dd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 03BD
        gbc.setState(0x9e5, 0x58f5, 0x7910, 0xd8a3, 0x7562, 0x2e90, 0x1, 0x0);
        gbc.writeMem(0x9e5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x58f5);
        EXPECT(gbc.pc(), 0x9e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 03BE
        gbc.setState(0xaf66, 0x4693, 0x50c0, 0x427a, 0x4ce, 0x48e2, 0x0, 0x1);
        gbc.writeMem(0xaf66, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4693);
        EXPECT(gbc.pc(), 0xaf67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf66), 0x4a);
        // 4A 03BF
        gbc.setState(0xc142, 0x25f, 0xff10, 0x4afb, 0x8fb, 0xf189, 0x1, 0x0);
        gbc.writeMem(0xc142, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x25f);
        EXPECT(gbc.pc(), 0xc143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc142), 0x4a);
        // 4A 03C0
        gbc.setState(0x7373, 0xc976, 0x2c90, 0x28b4, 0x723c, 0x3919, 0x1, 0x0);
        gbc.writeMem(0x7373, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc976);
        EXPECT(gbc.pc(), 0x7374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 03C1
        gbc.setState(0x3722, 0x81e2, 0x6930, 0x9660, 0xe0cc, 0x7944, 0x1, 0x1);
        gbc.writeMem(0x3722, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x81e2);
        EXPECT(gbc.pc(), 0x3723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 4A 03C2
        gbc.setState(0xc358, 0x11e3, 0xd9a0, 0x8b5a, 0x6858, 0xddfe, 0x1, 0x0);
        gbc.writeMem(0xc358, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x11e3);
        EXPECT(gbc.pc(), 0xc359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc358), 0x4a);
        // 4A 03C3
        gbc.setState(0xdbb7, 0x8c30, 0x4a50, 0x433a, 0xc9e1, 0x4f6d, 0x0, 0x1);
        gbc.writeMem(0xdbb7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8c30);
        EXPECT(gbc.pc(), 0xdbb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb7), 0x4a);
        // 4A 03C4
        gbc.setState(0xcd0a, 0x9187, 0x2e30, 0x54f4, 0x2983, 0x1f4b, 0x1, 0x1);
        gbc.writeMem(0xcd0a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9187);
        EXPECT(gbc.pc(), 0xcd0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd0a), 0x4a);
        // 4A 03C5
        gbc.setState(0x237d, 0x5aaa, 0x56d0, 0x3d7c, 0x838c, 0xf6a2, 0x0, 0x0);
        gbc.writeMem(0x237d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5aaa);
        EXPECT(gbc.pc(), 0x237e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 03C6
        gbc.setState(0x20a4, 0xaad4, 0xdb50, 0x4e18, 0xabbf, 0x2640, 0x1, 0x1);
        gbc.writeMem(0x20a4, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xaad4);
        EXPECT(gbc.pc(), 0x20a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 03C7
        gbc.setState(0x929d, 0xbbc, 0x4700, 0x23af, 0xa32e, 0xbb17, 0x1, 0x0);
        gbc.writeMem(0x929d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbbc);
        EXPECT(gbc.pc(), 0x929e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x929d), 0x4a);
        // 4A 03C8
        gbc.setState(0xaf24, 0x96da, 0xf3d0, 0xdcc0, 0x7f6e, 0xaf86, 0x0, 0x1);
        gbc.writeMem(0xaf24, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x96da);
        EXPECT(gbc.pc(), 0xaf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf24), 0x4a);
        // 4A 03C9
        gbc.setState(0x295e, 0xa6, 0xd9c0, 0xff1b, 0x8b1a, 0x6395, 0x1, 0x0);
        gbc.writeMem(0x295e, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa6);
        EXPECT(gbc.pc(), 0x295f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 03CA
        gbc.setState(0xdc6c, 0x5700, 0x3350, 0xce8c, 0x210, 0x2fbb, 0x1, 0x0);
        gbc.writeMem(0xdc6c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5700);
        EXPECT(gbc.pc(), 0xdc6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc6c), 0x4a);
        // 4A 03CB
        gbc.setState(0x6591, 0xe7ab, 0xdb40, 0xd803, 0x946f, 0x84f, 0x0, 0x0);
        gbc.writeMem(0x6591, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe7ab);
        EXPECT(gbc.pc(), 0x6592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 03CD
        gbc.setState(0xbeb5, 0x2d80, 0xe400, 0x2379, 0xda8d, 0x68e5, 0x0, 0x1);
        gbc.writeMem(0xbeb5, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2d80);
        EXPECT(gbc.pc(), 0xbeb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb5), 0x4a);
        // 4A 03CE
        gbc.setState(0xebce, 0xa7bf, 0x9c00, 0xee0e, 0x84cc, 0x5c43, 0x1, 0x1);
        gbc.writeMem(0xebce, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa7bf);
        EXPECT(gbc.pc(), 0xebcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebce), 0x4a);
        // 4A 03CF
        gbc.setState(0xc176, 0x355b, 0x8a00, 0x7f5, 0xf072, 0xd526, 0x1, 0x1);
        gbc.writeMem(0xc176, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x355b);
        EXPECT(gbc.pc(), 0xc177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc176), 0x4a);
        // 4A 03D0
        gbc.setState(0xac24, 0x53a2, 0x5290, 0x29a9, 0xce21, 0xec91, 0x1, 0x1);
        gbc.writeMem(0xac24, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x53a2);
        EXPECT(gbc.pc(), 0xac25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac24), 0x4a);
        // 4A 03D1
        gbc.setState(0xb712, 0xcca, 0xa120, 0xd930, 0xdf10, 0xab55, 0x1, 0x1);
        gbc.writeMem(0xb712, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xcca);
        EXPECT(gbc.pc(), 0xb713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb712), 0x4a);
        // 4A 03D2
        gbc.setState(0x6a6f, 0xdbfd, 0x1050, 0xaacb, 0x15fc, 0x6cbf, 0x1, 0x1);
        gbc.writeMem(0x6a6f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xdbfd);
        EXPECT(gbc.pc(), 0x6a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 4A 03D3
        gbc.setState(0xbaca, 0xa57d, 0xda40, 0xbc51, 0xc1f1, 0x2ca7, 0x1, 0x0);
        gbc.writeMem(0xbaca, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa57d);
        EXPECT(gbc.pc(), 0xbacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaca), 0x4a);
        // 4A 03D4
        gbc.setState(0xde65, 0xb94a, 0xa120, 0xacf8, 0x823, 0x6316, 0x1, 0x1);
        gbc.writeMem(0xde65, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb94a);
        EXPECT(gbc.pc(), 0xde66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde65), 0x4a);
        // 4A 03D5
        gbc.setState(0x8064, 0x4bee, 0x7790, 0xfd86, 0xcfa0, 0xc652, 0x1, 0x1);
        gbc.writeMem(0x8064, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4bee);
        EXPECT(gbc.pc(), 0x8065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8064), 0x4a);
        // 4A 03D6
        gbc.setState(0xcaa1, 0xceb8, 0x1920, 0x3ce9, 0xe374, 0x6465, 0x1, 0x1);
        gbc.writeMem(0xcaa1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xceb8);
        EXPECT(gbc.pc(), 0xcaa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaa1), 0x4a);
        // 4A 03D7
        gbc.setState(0x6498, 0x7661, 0xdc00, 0xd9c1, 0x6ef6, 0xafcb, 0x1, 0x0);
        gbc.writeMem(0x6498, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7661);
        EXPECT(gbc.pc(), 0x6499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 03D9
        gbc.setState(0x9788, 0x578, 0x98f0, 0x4eab, 0x36fd, 0x3e79, 0x0, 0x0);
        gbc.writeMem(0x9788, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x578);
        EXPECT(gbc.pc(), 0x9789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9788), 0x4a);
        // 4A 03DA
        gbc.setState(0xe436, 0x9a5e, 0x5d50, 0x1ba2, 0xbed1, 0xfced, 0x1, 0x1);
        gbc.writeMem(0xe436, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9a5e);
        EXPECT(gbc.pc(), 0xe437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe436), 0x4a);
        // 4A 03DB
        gbc.setState(0x90c7, 0x42c7, 0xb550, 0xd016, 0xb6c7, 0x63cb, 0x1, 0x0);
        gbc.writeMem(0x90c7, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x42c7);
        EXPECT(gbc.pc(), 0x90c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c7), 0x4a);
        // 4A 03DC
        gbc.setState(0xc2a0, 0x3e11, 0x2a20, 0xf9c3, 0x60c, 0x2125, 0x0, 0x1);
        gbc.writeMem(0xc2a0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3e11);
        EXPECT(gbc.pc(), 0xc2a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a0), 0x4a);
        // 4A 03DD
        gbc.setState(0xa15d, 0x5ddc, 0xd7c0, 0xc8bb, 0x8aa8, 0x7ec, 0x1, 0x1);
        gbc.writeMem(0xa15d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5ddc);
        EXPECT(gbc.pc(), 0xa15e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa15d), 0x4a);
        // 4A 03DE
        gbc.setState(0x25e1, 0x2d54, 0xe6c0, 0x2ab5, 0x1d64, 0x275e, 0x0, 0x0);
        gbc.writeMem(0x25e1, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2d54);
        EXPECT(gbc.pc(), 0x25e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 03DF
        gbc.setState(0x4e96, 0x848, 0x9100, 0xe49e, 0xd99f, 0x7667, 0x1, 0x0);
        gbc.writeMem(0x4e96, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x848);
        EXPECT(gbc.pc(), 0x4e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 4A 03E0
        gbc.setState(0xb6b0, 0x5558, 0xf60, 0x4e57, 0xc1ee, 0x3de, 0x1, 0x1);
        gbc.writeMem(0xb6b0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5558);
        EXPECT(gbc.pc(), 0xb6b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b0), 0x4a);
        // 4A 03E1
        gbc.setState(0xba2, 0xac39, 0x6720, 0x8d4f, 0x9844, 0xac26, 0x1, 0x0);
        gbc.writeMem(0xba2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xac39);
        EXPECT(gbc.pc(), 0xba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 03E2
        gbc.setState(0x5c17, 0x7ef1, 0x7e0, 0x61d1, 0xdb44, 0xcf77, 0x1, 0x0);
        gbc.writeMem(0x5c17, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7ef1);
        EXPECT(gbc.pc(), 0x5c18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 03E3
        gbc.setState(0x9725, 0xe1f, 0x37e0, 0x350, 0x6e23, 0xc516, 0x1, 0x1);
        gbc.writeMem(0x9725, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe1f);
        EXPECT(gbc.pc(), 0x9726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9725), 0x4a);
        // 4A 03E4
        gbc.setState(0x90d2, 0xa15f, 0xac30, 0xe1c8, 0x7a3f, 0xb680, 0x1, 0x1);
        gbc.writeMem(0x90d2, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa15f);
        EXPECT(gbc.pc(), 0x90d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d2), 0x4a);
        // 4A 03E5
        gbc.setState(0xeb48, 0xccb, 0xb7c0, 0x28ad, 0xb3dc, 0xfb8, 0x0, 0x1);
        gbc.writeMem(0xeb48, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xccb);
        EXPECT(gbc.pc(), 0xeb49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb48), 0x4a);
        // 4A 03E6
        gbc.setState(0x6d86, 0x1955, 0x6d20, 0xb7ec, 0x62f7, 0xb47a, 0x0, 0x1);
        gbc.writeMem(0x6d86, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1955);
        EXPECT(gbc.pc(), 0x6d87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 4A 03E7
        gbc.setState(0x6fb, 0x91e1, 0xc10, 0x767, 0xa7ba, 0x3473, 0x1, 0x1);
        gbc.writeMem(0x6fb, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x91e1);
        EXPECT(gbc.pc(), 0x6fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
